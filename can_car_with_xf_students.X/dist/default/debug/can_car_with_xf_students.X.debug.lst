

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Feb 05 11:17:44 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Generated 23/03/2023 GMT
    52                           ; 
    53                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F97J60 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   000000                     
    86 ;;_ev	offset	0
    87 ;;_tmid	offset	6
    88 ;;_processEvent	offset=-3 (param)
    89 ;;_id	offset=-4 (param)
    90 ;;_delay	offset=-6 (param)
    91 ;;_tm	offset	0
    92 ;;_temp	offset	2
    93 ;;_ev	offset=-6 (param)
    94 ;;_inISR	offset=-7 (param)
    95 ;;_tmid	offset=-9 (param)
    96 ;;_i	offset	0
    97 ;;_tm	offset=-2 (param)
    98 ;;_ev	offset=-8 (param)
    99 ;;_inISR	offset=-9 (param)
   100 ;;_me	offset=-2 (param)
   101 ;;_delay	offset=-4 (param)
   102 ;;_me	offset=-2 (param)
   103 ;;_me	offset=-2 (param)
   104 ;;_processEvent	offset=-5 (param)
   105 ;;_me	offset=-2 (param)
   106 ;;_eventID	offset=-3 (param)
   107 ;;_i	offset	0
   108 ;;_me	offset=-2 (param)
   109 ;;_ev	offset	0
   110 ;;_ev	offset=-2 (param)
   111 ;;_light	offset=-1 (param)
   112 ;;_light	offset=-1 (param)
   113 ;;_ev	offset	0
   114 ;;_inISR	offset=-6 (param)
   115 ;;_sign	offset	0
   116 ;;_counter	offset	1
   117 ;;_dividend	offset=-2 (param)
   118 ;;_divisor	offset=-4 (param)
   119 ;;_inISR	offset=-1 (param)
   120 ;;_inISR	offset=-1 (param)
   121 ;;_InterruptHandler	offset=-3 (param)
   122 ;;_dummy	offset	0
   123 ;;_i	offset	1
   124 ;;_id	offset=-1 (param)
   125 ;;_inISR	offset=-2 (param)
   126 ;;_me	offset=-2 (param)
   127 ;;_tm	offset	0
   128 ;;_temp	offset	2
   129 ;;_ev	offset=-6 (param)
   130 ;;_inISR	offset=-7 (param)
   131 ;;_tmid	offset=-9 (param)
   132 ;;_sign	offset	0
   133 ;;_counter	offset	1
   134 ;;_dividend	offset=-2 (param)
   135 ;;_divisor	offset=-4 (param)
   136 ;;_i	offset	0
   137 ;;_tm	offset=-2 (param)
   138 ;;_ev	offset=-8 (param)
   139 ;;_inISR	offset=-9 (param)
   140 ;;_inISR	offset=-1 (param)
   141 ;;_inISR	offset=-1 (param)
   142 ;;_me	offset=-2 (param)
   143 ;;_delay	offset=-4 (param)
   144 ;;_me	offset=-2 (param)
   145   000000                     _SSP2ADD	set	3941
   146   000000                     _TMR0L	set	4054
   147   000000                     _TMR0H	set	4055
   148   000000                     _TRISC	set	3988
   149   000000                     _TRISH	set	3993
   150   000000                     _TRISB	set	3987
   151   000000                     _TRISA	set	3986
   152   000000                     _TRISF	set	3991
   153   000000                     _TRISE	set	3990
   154   000000                     _LATH	set	3984
   155   000000                     _LATC	set	3979
   156   000000                     _LATB	set	3978
   157   000000                     _LATF	set	3982
   158   000000                     _LATA	set	3977
   159   000000                     _LATJ	set	3985
   160   000000                     _LATE	set	3981
   161   000000                     _TRISJ	set	3994
   162   000000                     _TRISDbits	set	3989
   163   000000                     _TRISGbits	set	3992
   164   000000                     _SSP2BUF	set	3942
   165                           
   166                           	psect	nvCOMRAM
   167   000056                     __pnvCOMRAM:
   168                           	callstack 0
   169   000056                     _TMR0_InterruptHandler:
   170                           	callstack 0
   171   000056                     	ds	3
   172   000000                     _SSP2CON1bits	set	3939
   173   000000                     _SSP2STAT	set	3940
   174   000000                     _T0CON	set	4053
   175   000000                     _TRISD	set	3989
   176   000000                     _TRISG	set	3992
   177   000000                     _LATG	set	3983
   178   000000                     _LATD	set	3980
   179   000000                     _SSP2CON2	set	3938
   180   000000                     _SSP2CON1	set	3939
   181   000000                     _SSP2STATbits	set	3940
   182   000000                     _LATGbits	set	3983
   183   000000                     _PORTJ	set	3976
   184   000000                     _LATDbits	set	3980
   185   000000                     _PIR3bits	set	4004
   186   000000                     _ADCON1bits	set	4033
   187   000000                     _OSCTUNE	set	3995
   188   000000                     _OSCCON	set	4051
   189   000000                     _T0CONbits	set	4053
   190   000000                     _INTCONbits	set	4082
   191   000000                     _RCONbits	set	4048
   192                           
   193                           	psect	mediumconst
   194   00FFEC                     __pmediumconst:
   195                           	callstack 0
   196   00FFEC  00                 	db	0
   197   00FFED                     STR_1:
   198   00FFED  20                 	db	32
   199   00FFEE  20                 	db	32
   200   00FFEF  20                 	db	32
   201   00FFF0  20                 	db	32
   202   00FFF1  20                 	db	32
   203   00FFF2  20                 	db	32
   204   00FFF3  20                 	db	32
   205   00FFF4  20                 	db	32
   206   00FFF5  20                 	db	32
   207   00FFF6  20                 	db	32
   208   00FFF7  20                 	db	32
   209   00FFF8  20                 	db	32
   210   00FFF9  20                 	db	32
   211   00FFFA  20                 	db	32
   212   00FFFB  20                 	db	32
   213   00FFFC  20                 	db	32
   214   00FFFD  00                 	db	0
   215   00FFFE  00                 	db	0	; dummy byte at the end
   216   000000                     
   217                           ; #config settings
   218                           
   219                           	psect	cinit
   220   0109EA                     __pcinit:
   221                           	callstack 0
   222   0109EA                     start_initialization:
   223                           	callstack 0
   224   0109EA                     __initialization:
   225                           	callstack 0
   226                           
   227                           ; Clear objects allocated to BIGRAM (278 bytes)
   228   0109EA  EE02  F0C8         	lfsr	0,__pbssBIGRAM
   229   0109EE  EE21 F016          	lfsr	2,278
   230   0109F2                     clear_0:
   231   0109F2  6AEE               	clrf	postinc0,c
   232   0109F4  50DD               	movf	postdec2,w,c
   233   0109F6  50D9               	movf	fsr2l,w,c
   234   0109F8  E1FC               	bnz	clear_0
   235   0109FA  50DA               	movf	fsr2h,w,c
   236   0109FC  E1FA               	bnz	clear_0
   237                           
   238                           ; Clear objects allocated to BANK2 (200 bytes)
   239   0109FE  EE02  F000         	lfsr	0,__pbssBANK2
   240   010A02  0EC8               	movlw	200
   241   010A04                     clear_1:
   242   010A04  6AEE               	clrf	postinc0,c
   243   010A06  06E8               	decf	wreg,f,c
   244   010A08  E1FD               	bnz	clear_1
   245                           
   246                           ; Clear objects allocated to BANK1 (200 bytes)
   247   010A0A  EE01  F000         	lfsr	0,__pbssBANK1
   248   010A0E  0EC8               	movlw	200
   249   010A10                     clear_2:
   250   010A10  6AEE               	clrf	postinc0,c
   251   010A12  06E8               	decf	wreg,f,c
   252   010A14  E1FD               	bnz	clear_2
   253                           
   254                           ; Clear objects allocated to COMRAM (37 bytes)
   255   010A16  EE00  F001         	lfsr	0,__pbssCOMRAM
   256   010A1A  0E25               	movlw	37
   257   010A1C                     clear_3:
   258   010A1C  6AEE               	clrf	postinc0,c
   259   010A1E  06E8               	decf	wreg,f,c
   260   010A20  E1FD               	bnz	clear_3
   261   010A22                     end_of_initialization:
   262                           	callstack 0
   263   010A22                     __end_of__initialization:
   264                           	callstack 0
   265   010A22  0100               	movlb	0
   266   010A24  EFD1  F084         	goto	_main	;jump to C main() function
   267                           
   268                           	psect	bssCOMRAM
   269   000001                     __pbssCOMRAM:
   270                           	callstack 0
   271   000001                     _carState:
   272                           	callstack 0
   273   000001                     	ds	27
   274   00001C                     _dummy:
   275                           	callstack 0
   276   00001C                     	ds	4
   277   000020                     TMR0_ISR@CountCallBack:
   278                           	callstack 0
   279   000020                     	ds	2
   280   000022                     _timer0ReloadVal:
   281                           	callstack 0
   282   000022                     	ds	2
   283   000024                     lightControl_Process@oldState:
   284                           	callstack 0
   285   000024                     	ds	1
   286   000025                     lightControl_Process@state:
   287                           	callstack 0
   288   000025                     	ds	1
   289                           
   290                           	psect	bssBANK1
   291   000100                     __pbssBANK1:
   292                           	callstack 0
   293   000100                     _spiTransmitBuffer:
   294                           	callstack 0
   295   000100                     	ds	200
   296                           
   297                           	psect	bssBANK2
   298   000200                     __pbssBANK2:
   299                           	callstack 0
   300   000200                     _spiReceiveBuffer:
   301                           	callstack 0
   302   000200                     	ds	200
   303                           
   304                           	psect	bssBIGRAM
   305   0002C8                     __pbssBIGRAM:
   306                           	callstack 0
   307   0002C8                     _theXF:
   308                           	callstack 0
   309   0002C8                     	ds	278
   310                           
   311                           	psect	cstackCOMRAM
   312   000046                     __pcstackCOMRAM:
   313                           	callstack 0
   314   000046                     ??_INTERRUPT_InterruptManager:
   315                           
   316                           ; 1 bytes @ 0x0
   317   000046                     	ds	16
   318                           
   319 ;;
   320 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   321 ;;
   322 ;; *************** function _main *****************
   323 ;; Defined at:
   324 ;;		line 56 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1  [STACK] void 
   331 ;; Registers used:
   332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, prodl, prodh
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   342 ;;Total ram usage:        0 bytes
   343 ;; Hardware stack levels required when called: 11
   344 ;; This function calls:
   345 ;;		_SYSTEM_Initialize
   346 ;;		_TMR0_SetInterruptHandler
   347 ;;		_XF_executeOnce
   348 ;;		_XF_init
   349 ;;		_XF_post
   350 ;;		_updateCarState
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a reentrant model
   354 ;;
   355                           
   356                           	psect	text0
   357   0109A2                     __ptext0:
   358                           	callstack 0
   359   0109A2                     _main:
   360                           	callstack 20
   361   0109A2                     
   362                           ;main.c: 60:     SYSTEM_Initialize();
   363   0109A2  ECFC  F085         	call	_SYSTEM_Initialize	;wreg free
   364   0109A6                     
   365                           ;main.c: 61:     XF_init();
   366   0109A6  EC4D  F081         	call	_XF_init	;wreg free
   367   0109AA                     
   368                           ;main.c: 62:     TMR0_SetInterruptHandler(XF_decrementAndQueueTimers);
   369   0109AA  0E2A               	movlw	low _XF_decrementAndQueueTimers
   370   0109AC  6EE6               	movwf	postinc1,c
   371   0109AE  0E05               	movlw	high _XF_decrementAndQueueTimers
   372   0109B0  6EE6               	movwf	postinc1,c
   373   0109B2  0E01               	movlw	low (_XF_decrementAndQueueTimers shr (0+16))
   374   0109B4  6EE6               	movwf	postinc1,c
   375   0109B6  ECC6  F085         	call	_TMR0_SetInterruptHandler	;wreg free
   376   0109BA                     
   377                           ;main.c: 70:     (INTCONbits.GIE = 1);
   378   0109BA  8EF2               	bsf	242,7,c	;volatile
   379   0109BC                     
   380                           ;main.c: 76:     (INTCONbits.PEIE = 1);
   381   0109BC  8CF2               	bsf	242,6,c	;volatile
   382   0109BE                     
   383                           ;main.c: 80:     XF_post(lightControl_Process,E_INIT,0);
   384   0109BE  0E00               	movlw	0
   385   0109C0  6EE6               	movwf	postinc1,c
   386   0109C2  0E00               	movlw	0
   387   0109C4  6EE6               	movwf	postinc1,c
   388   0109C6  0E01               	movlw	1
   389   0109C8  6EE6               	movwf	postinc1,c
   390   0109CA  0EE2               	movlw	low _lightControl_Process
   391   0109CC  6EE6               	movwf	postinc1,c
   392   0109CE  0E03               	movlw	high _lightControl_Process
   393   0109D0  6EE6               	movwf	postinc1,c
   394   0109D2  0E01               	movlw	low (_lightControl_Process shr (0+16))
   395   0109D4  6EE6               	movwf	postinc1,c
   396   0109D6  EC14  F083         	call	_XF_post	;wreg free
   397   0109DA                     l2712:
   398                           
   399                           ;main.c: 82:     {;main.c: 83:         updateCarState();
   400   0109DA  EC19  F086         	call	_updateCarState	;wreg free
   401   0109DE                     
   402                           ;main.c: 84:         XF_executeOnce();
   403   0109DE  EC3B  F084         	call	_XF_executeOnce	;wreg free
   404   0109E2  EFED  F084         	goto	l2712
   405   0109E6  EF57  F000         	goto	start
   406   0109EA                     __end_of_main:
   407                           	callstack 0
   408                           
   409 ;; *************** function _updateCarState *****************
   410 ;; Defined at:
   411 ;;		line 96 in file "carFunctions.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1  [STACK] void 
   418 ;; Registers used:
   419 ;;		None
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   429 ;;Total ram usage:        0 bytes
   430 ;; Hardware stack levels used: 1
   431 ;; Hardware stack levels required when called: 7
   432 ;; This function calls:
   433 ;;		Nothing
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a reentrant model
   437 ;;
   438                           
   439                           	psect	text1
   440   010C32                     __ptext1:
   441                           	callstack 0
   442   010C32                     _updateCarState:
   443                           	callstack 23
   444   010C32                     
   445                           ; _updateCarState: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
   446   010C32  0012               	return		;funcret
   447   010C34                     __end_of_updateCarState:
   448                           	callstack 0
   449                           
   450 ;; *************** function _XF_post *****************
   451 ;; Defined at:
   452 ;;		line 256 in file "xf/xf.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;  processEvent    3  [STACK] PTR FTN(PTR struct Event
   455 ;;		 -> lightControl_Process(1), 
   456 ;;  id              1  [STACK] unsigned char 
   457 ;;  delay           2  [STACK] unsigned short 
   458 ;; Auto vars:     Size  Location     Type
   459 ;;  ev              6  [STACK] struct Event_
   460 ;;  tmid            1  [STACK] unsigned char 
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1  [STACK] unsigned char 
   463 ;; Registers used:
   464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;Total ram usage:        0 bytes
   475 ;; Hardware stack levels used: 1
   476 ;; Hardware stack levels required when called: 10
   477 ;; This function calls:
   478 ;;		_Event_init
   479 ;;		_Event_setDelay
   480 ;;		_Event_setId
   481 ;;		_Event_setPE
   482 ;;		_XF_pushEvent
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a reentrant model
   486 ;;
   487                           
   488                           	psect	text2
   489   010628                     __ptext2:
   490                           	callstack 0
   491   010628                     _XF_post:
   492                           	callstack 0
   493                           
   494                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   495   010628  0E07               	movlw	7
   496   01062A  26E1               	addwf	fsr1l,f,c
   497   01062C  0E00               	movlw	0
   498   01062E  22E2               	addwfc	fsr1h,f,c
   499   010630                     
   500                           ;xf/xf.c: 256: uint8_t XF_post(processEventT processEvent, uint8_t id, uint16_t delay);x
      +                          f/xf.c: 257: {;xf/xf.c: 258:     uint8_t tmid = 12;
   501                           ;stkvar	_tmid @ sp[(-7)+6]
   502   010630  0EFF               	movlw	-1
   503   010632  6AE3               	clrf	plusw1,c
   504   010634  84E3               	bsf	plusw1,2,c
   505   010636  86E3               	bsf	plusw1,3,c	;indir
   506   010638                     
   507                           ;xf/xf.c: 261:     Event ev;;xf/xf.c: 262:     Event_init(&ev);
   508                           ;stkvar	_ev @ sp[(-7)+0]
   509   010638  0EF9               	movlw	249
   510   01063A  24E1               	addwf	fsr1l,w,c
   511   01063C  6E26               	movwf	btemp^0,c
   512   01063E  0EFF               	movlw	255
   513   010640  20E2               	addwfc	fsr1h,w,c
   514   010642  6E27               	movwf	(btemp+1)^0,c
   515   010644  C026  FFE6         	movff	btemp,postinc1
   516   010648  C027  FFE6         	movff	btemp+1,postinc1
   517   01064C  EC83  F084         	call	_Event_init	;wreg free
   518   010650                     
   519                           ;xf/xf.c: 264:     Event_setPE(&ev,processEvent);
   520                           ;stkvar	_processEvent @ sp[(-7)+-3]
   521   010650  0EF6               	movlw	-10
   522   010652  CFE3 FFE6          	movff	plusw1,postinc1
   523   010656  CFE3 FFE6          	movff	plusw1,postinc1
   524   01065A  CFE3 FFE6          	movff	plusw1,postinc1
   525                           
   526                           ;stkvar	_ev @ sp[(-10)+0]
   527   01065E  0EF6               	movlw	246
   528   010660  24E1               	addwf	fsr1l,w,c
   529   010662  6E26               	movwf	btemp^0,c
   530   010664  0EFF               	movlw	255
   531   010666  20E2               	addwfc	fsr1h,w,c
   532   010668  6E27               	movwf	(btemp+1)^0,c
   533   01066A  C026  FFE6         	movff	btemp,postinc1
   534   01066E  C027  FFE6         	movff	btemp+1,postinc1
   535   010672  EC14  F085         	call	_Event_setPE	;wreg free
   536   010676                     
   537                           ;xf/xf.c: 265:     Event_setId(&ev,id);
   538                           ;stkvar	_id @ sp[(-7)+-4]
   539   010676  0EF5               	movlw	-11
   540   010678  50E3               	movf	plusw1,w,c
   541   01067A  6EE6               	movwf	postinc1,c
   542                           
   543                           ;stkvar	_ev @ sp[(-8)+0]
   544   01067C  0EF8               	movlw	248
   545   01067E  24E1               	addwf	fsr1l,w,c
   546   010680  6E26               	movwf	btemp^0,c
   547   010682  0EFF               	movlw	255
   548   010684  20E2               	addwfc	fsr1h,w,c
   549   010686  6E27               	movwf	(btemp+1)^0,c
   550   010688  C026  FFE6         	movff	btemp,postinc1
   551   01068C  C027  FFE6         	movff	btemp+1,postinc1
   552   010690  ECD7  F085         	call	_Event_setId	;wreg free
   553   010694                     
   554                           ;xf/xf.c: 266:     Event_setDelay(&ev,delay);
   555                           ;stkvar	_delay @ sp[(-7)+-6]
   556   010694  0EF3               	movlw	-13
   557   010696  CFE3 FFE6          	movff	plusw1,postinc1
   558   01069A  CFE3 FFE6          	movff	plusw1,postinc1
   559                           
   560                           ;stkvar	_ev @ sp[(-9)+0]
   561   01069E  0EF7               	movlw	247
   562   0106A0  24E1               	addwf	fsr1l,w,c
   563   0106A2  6E26               	movwf	btemp^0,c
   564   0106A4  0EFF               	movlw	255
   565   0106A6  20E2               	addwfc	fsr1h,w,c
   566   0106A8  6E27               	movwf	(btemp+1)^0,c
   567   0106AA  C026  FFE6         	movff	btemp,postinc1
   568   0106AE  C027  FFE6         	movff	btemp+1,postinc1
   569   0106B2  EC4F  F085         	call	_Event_setDelay	;wreg free
   570   0106B6                     
   571                           ;xf/xf.c: 268:     XF_pushEvent(ev,0,&tmid);
   572                           ;stkvar	_tmid @ sp[(-7)+6]
   573   0106B6  0EFF               	movlw	255
   574   0106B8  24E1               	addwf	fsr1l,w,c
   575   0106BA  6E26               	movwf	btemp^0,c
   576   0106BC  0EFF               	movlw	255
   577   0106BE  20E2               	addwfc	fsr1h,w,c
   578   0106C0  6E27               	movwf	(btemp+1)^0,c
   579   0106C2  C026  FFE6         	movff	btemp,postinc1
   580   0106C6  C027  FFE6         	movff	btemp+1,postinc1
   581   0106CA  0E00               	movlw	0
   582   0106CC  6EE6               	movwf	postinc1,c
   583                           
   584                           ;stkvar	_ev @ sp[(-10)+0]
   585   0106CE  0EF6               	movlw	246
   586   0106D0  24E1               	addwf	fsr1l,w,c
   587   0106D2  6ED9               	movwf	fsr2l,c
   588   0106D4  0EFF               	movlw	255
   589   0106D6  20E2               	addwfc	fsr1h,w,c
   590   0106D8  6EDA               	movwf	fsr2h,c
   591   0106DA  0E06               	movlw	6
   592   0106DC                     u701:
   593   0106DC  CFDE FFE6          	movff	postinc2,postinc1
   594   0106E0  2CE8               	decfsz	wreg,w,c
   595   0106E2  EF6E  F083         	goto	u701
   596   0106E6  EC00  F080         	call	_XF_pushEvent	;wreg free
   597   0106EA                     
   598                           ; _XF_post: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
   599   0106EA  0EF3               	movlw	243
   600   0106EC  26E1               	addwf	fsr1l,f,c
   601   0106EE  0EFF               	movlw	255
   602   0106F0  22E2               	addwfc	fsr1h,f,c
   603   0106F2  0012               	return		;funcret
   604   0106F4                     __end_of_XF_post:
   605                           	callstack 0
   606                           
   607 ;; *************** function _XF_pushEvent *****************
   608 ;; Defined at:
   609 ;;		line 97 in file "xf/xf.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  ev              6  [STACK] struct Event_
   612 ;;  inISR           1  [STACK] _Bool 
   613 ;;  tmid            2  [STACK] PTR unsigned char 
   614 ;;		 -> tmid(1), dummy(1), 
   615 ;; Auto vars:     Size  Location     Type
   616 ;;  tm              2  [STACK] unsigned short 
   617 ;;  temp            1  [STACK] unsigned char 
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1  [STACK] _Bool 
   620 ;; Registers used:
   621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;Total ram usage:        0 bytes
   632 ;; Hardware stack levels used: 1
   633 ;; Hardware stack levels required when called: 9
   634 ;; This function calls:
   635 ;;		_ENTERCRITICAL
   636 ;;		_Event_getDelay
   637 ;;		_Event_setDelay
   638 ;;		_LEAVECRITICAL
   639 ;;		_XF_scheduleTimer
   640 ;;		___awmod
   641 ;; This function is called by:
   642 ;;		_XF_decrementAndQueueTimers
   643 ;;		_XF_post
   644 ;; This function uses a reentrant model
   645 ;;
   646                           
   647                           	psect	text3
   648   010000                     __ptext3:
   649                           	callstack 0
   650   010000                     _XF_pushEvent:
   651                           	callstack 0
   652                           
   653                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 9, argsize = 9 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   654   010000  52E6               	movf	postinc1,f,c
   655   010002  52E6               	movf	postinc1,f,c
   656   010004  52E6               	movf	postinc1,f,c
   657   010006                     
   658                           ;xf/xf.c: 97: _Bool XF_pushEvent(Event ev, _Bool inISR, uint8_t* tmid);xf/xf.c: 98: {;xf
      +                          /xf.c: 99:     uint8_t temp;;xf/xf.c: 100:     uint16_t tm;;xf/xf.c: 101:     tm = Event
      +                          _getDelay(&ev);
   659                           ;stkvar	_ev @ sp[(-3)+-6]
   660   010006  0EF7               	movlw	247
   661   010008  24E1               	addwf	fsr1l,w,c
   662   01000A  6E26               	movwf	btemp^0,c
   663   01000C  0EFF               	movlw	255
   664   01000E  20E2               	addwfc	fsr1h,w,c
   665   010010  6E27               	movwf	(btemp+1)^0,c
   666   010012  C026  FFE6         	movff	btemp,postinc1
   667   010016  C027  FFE6         	movff	btemp+1,postinc1
   668   01001A  ECB3  F085         	call	_Event_getDelay	;wreg free
   669                           
   670                           ;stkvar	_tm @ sp[(-3)+0]
   671   01001E  0EFD               	movlw	-3
   672   010020  C026  FFE3         	movff	btemp,plusw1
   673   010024  0EFE               	movlw	-2
   674   010026  C027  FFE3         	movff	btemp+1,plusw1
   675   01002A                     
   676                           ;xf/xf.c: 102:     if ( tm > 0)
   677                           ;stkvar	_tm @ sp[(-3)+0]
   678   01002A  0EFD               	movlw	-3
   679   01002C  CFE3 F026          	movff	plusw1,btemp
   680   010030  0EFE               	movlw	-2
   681   010032  50E3               	movf	plusw1,w,c
   682   010034  1026               	iorwf	btemp^0,w,c
   683   010036  B4D8               	btfsc	status,2,c
   684   010038  EF20  F080         	goto	u531
   685   01003C  EF22  F080         	goto	u530
   686   010040                     u531:
   687   010040  EF52  F080         	goto	l2536
   688   010044                     u530:
   689   010044                     
   690                           ;xf/xf.c: 103:     {;xf/xf.c: 104:         Event_setDelay(&ev,0);
   691   010044  0E00               	movlw	0
   692   010046  6EE6               	movwf	postinc1,c
   693   010048  0E00               	movlw	0
   694   01004A  6EE6               	movwf	postinc1,c
   695                           
   696                           ;stkvar	_ev @ sp[(-5)+-6]
   697   01004C  0EF5               	movlw	245
   698   01004E  24E1               	addwf	fsr1l,w,c
   699   010050  6E26               	movwf	btemp^0,c
   700   010052  0EFF               	movlw	255
   701   010054  20E2               	addwfc	fsr1h,w,c
   702   010056  6E27               	movwf	(btemp+1)^0,c
   703   010058  C026  FFE6         	movff	btemp,postinc1
   704   01005C  C027  FFE6         	movff	btemp+1,postinc1
   705   010060  EC4F  F085         	call	_Event_setDelay	;wreg free
   706   010064                     
   707                           ;xf/xf.c: 105:         *tmid = XF_scheduleTimer(tm, ev, inISR);
   708                           ;stkvar	_inISR @ sp[(-3)+-7]
   709   010064  0EF6               	movlw	-10
   710   010066  50E3               	movf	plusw1,w,c
   711   010068  6EE6               	movwf	postinc1,c
   712                           
   713                           ;stkvar	_ev @ sp[(-4)+-6]
   714   01006A  0EF6               	movlw	246
   715   01006C  24E1               	addwf	fsr1l,w,c
   716   01006E  6ED9               	movwf	fsr2l,c
   717   010070  0EFF               	movlw	255
   718   010072  20E2               	addwfc	fsr1h,w,c
   719   010074  6EDA               	movwf	fsr2h,c
   720   010076  0E06               	movlw	6
   721   010078                     u541:
   722   010078  CFDE FFE6          	movff	postinc2,postinc1
   723   01007C  2CE8               	decfsz	wreg,w,c
   724   01007E  EF3C  F080         	goto	u541
   725                           
   726                           ;stkvar	_tm @ sp[(-10)+0]
   727   010082  0EF6               	movlw	-10
   728   010084  CFE3 FFE6          	movff	plusw1,postinc1
   729   010088  CFE3 FFE6          	movff	plusw1,postinc1
   730   01008C  ECDE  F083         	call	_XF_scheduleTimer	;wreg free
   731                           
   732                           ;stkvar	_tmid @ sp[(-3)+-9]
   733   010090  0EF4               	movlw	-12
   734   010092  CFE3 FFD9          	movff	plusw1,fsr2l
   735   010096  0EF5               	movlw	-11
   736   010098  CFE3 FFDA          	movff	plusw1,fsr2h
   737   01009C  C026  FFDF         	movff	btemp,indf2
   738                           
   739                           ;xf/xf.c: 106:     }
   740   0100A0  EFA1  F080         	goto	l2554
   741   0100A4                     l2536:
   742                           
   743                           ;xf/xf.c: 108:     {;xf/xf.c: 109:         ENTERCRITICAL(inISR);
   744                           ;stkvar	_inISR @ sp[(-3)+-7]
   745   0100A4  0EF6               	movlw	-10
   746   0100A6  50E3               	movf	plusw1,w,c
   747   0100A8  6EE6               	movwf	postinc1,c
   748   0100AA  ECF0  F085         	call	_ENTERCRITICAL	;wreg free
   749   0100AE                     
   750                           ;xf/xf.c: 111:         temp = (theXF.in+1) % (uint8_t)(sizeof(theXF.eventQueue) / sizeof
      +                          (Event));
   751   0100AE  0E1E               	movlw	30
   752   0100B0  6EE6               	movwf	postinc1,c
   753   0100B2  0E00               	movlw	0
   754   0100B4  6EE6               	movwf	postinc1,c
   755   0100B6  EE23  F0DC         	lfsr	2,_theXF+276
   756   0100BA  50DF               	movf	indf2,w,c
   757   0100BC  6E30               	movwf	(btemp+10)^0,c
   758   0100BE  6A31               	clrf	(btemp+11)^0,c
   759   0100C0  0E01               	movlw	1
   760   0100C2  2630               	addwf	(btemp+10)^0,f,c
   761   0100C4  0E00               	movlw	0
   762   0100C6  2231               	addwfc	(btemp+11)^0,f,c
   763   0100C8  C030  FFE6         	movff	btemp+10,postinc1
   764   0100CC  C031  FFE6         	movff	btemp+11,postinc1
   765   0100D0  ECA8  F080         	call	___awmod	;wreg free
   766                           
   767                           ;stkvar	_temp @ sp[(-3)+2]
   768   0100D4  0EFF               	movlw	-1
   769   0100D6  C026  FFE3         	movff	btemp,plusw1
   770   0100DA                     
   771                           ;xf/xf.c: 112:         if(temp == theXF.out)
   772                           ;stkvar	_temp @ sp[(-3)+2]
   773   0100DA  EE23  F0DD         	lfsr	2,_theXF+277
   774   0100DE  0EFF               	movlw	-1
   775   0100E0  50E3               	movf	plusw1,w,c
   776   0100E2  18DE               	xorwf	postinc2,w,c
   777   0100E4  A4D8               	btfss	status,2,c
   778   0100E6  EF77  F080         	goto	u551
   779   0100EA  EF79  F080         	goto	u550
   780   0100EE                     u551:
   781   0100EE  EF82  F080         	goto	l2548
   782   0100F2                     u550:
   783   0100F2                     
   784                           ;xf/xf.c: 113:         {;xf/xf.c: 114:           LEAVECRITICAL(inISR);
   785                           ;stkvar	_inISR @ sp[(-3)+-7]
   786   0100F2  0EF6               	movlw	-10
   787   0100F4  50E3               	movf	plusw1,w,c
   788   0100F6  6EE6               	movwf	postinc1,c
   789   0100F8  ECE4  F085         	call	_LEAVECRITICAL	;wreg free
   790   0100FC                     
   791                           ;xf/xf.c: 115:           return 0;
   792   0100FC  0E00               	movlw	0
   793   0100FE  6E26               	movwf	btemp^0,c
   794   010100  EFA3  F080         	goto	l1208
   795   010104                     l2548:
   796                           
   797                           ;xf/xf.c: 117:         theXF.eventQueue[theXF.in] = ev;
   798                           ;stkvar	_ev @ sp[(-3)+-6]
   799   010104  0EF7               	movlw	247
   800   010106  24E1               	addwf	fsr1l,w,c
   801   010108  6ED9               	movwf	fsr2l,c
   802   01010A  0EFF               	movlw	255
   803   01010C  20E2               	addwfc	fsr1h,w,c
   804   01010E  6EDA               	movwf	fsr2h,c
   805   010110  EE03  F0DC         	lfsr	0,_theXF+276
   806   010114  50EF               	movf	indf0,w,c
   807   010116  0D06               	mullw	6
   808   010118  0E28               	movlw	low (_theXF+96)
   809   01011A  24F3               	addwf	243,w,c
   810   01011C  6EE9               	movwf	fsr0l,c
   811   01011E  0E03               	movlw	high (_theXF+96)
   812   010120  20F4               	addwfc	prodh,w,c
   813   010122  6EEA               	movwf	fsr0h,c
   814   010124  0E05               	movlw	5
   815   010126                     u561:
   816   010126  CFDB FFEB          	movff	plusw2,plusw0
   817   01012A  06E8               	decf	wreg,f,c
   818   01012C  E2FC               	bc	u561
   819   01012E                     
   820                           ;xf/xf.c: 118:         theXF.in = temp;
   821                           ;stkvar	_temp @ sp[(-3)+2]
   822   01012E  0EFF               	movlw	-1
   823   010130  CFE3 F031          	movff	plusw1,btemp+11
   824   010134  C031  F3DC         	movff	btemp+11,_theXF+276
   825   010138                     
   826                           ;xf/xf.c: 119:         LEAVECRITICAL(inISR);
   827                           ;stkvar	_inISR @ sp[(-3)+-7]
   828   010138  0EF6               	movlw	-10
   829   01013A  50E3               	movf	plusw1,w,c
   830   01013C  6EE6               	movwf	postinc1,c
   831   01013E  ECE4  F085         	call	_LEAVECRITICAL	;wreg free
   832   010142                     l2554:
   833                           
   834                           ;xf/xf.c: 121:     return 1;
   835   010142  0E01               	movlw	1
   836   010144  6E26               	movwf	btemp^0,c
   837   010146                     l1208:
   838                           
   839                           ; _XF_pushEvent: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 9, 
      +                          argsize = 9, vargsize = 0
   840   010146  0EF4               	movlw	244
   841   010148  26E1               	addwf	fsr1l,f,c
   842   01014A  0EFF               	movlw	255
   843   01014C  22E2               	addwfc	fsr1h,f,c
   844   01014E  0012               	return		;funcret
   845   010150                     __end_of_XF_pushEvent:
   846                           	callstack 0
   847                           
   848 ;; *************** function _XF_scheduleTimer *****************
   849 ;; Defined at:
   850 ;;		line 156 in file "xf/xf.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  tm              2  [STACK] unsigned short 
   853 ;;  ev              6  [STACK] struct Event_
   854 ;;  inISR           1  [STACK] _Bool 
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  i               1  [STACK] unsigned char 
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1  [STACK] unsigned char 
   859 ;; Registers used:
   860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   870 ;;Total ram usage:        0 bytes
   871 ;; Hardware stack levels used: 1
   872 ;; Hardware stack levels required when called: 8
   873 ;; This function calls:
   874 ;;		_ENTERCRITICAL
   875 ;;		_LEAVECRITICAL
   876 ;; This function is called by:
   877 ;;		_XF_pushEvent
   878 ;; This function uses a reentrant model
   879 ;;
   880                           
   881                           	psect	text4
   882   0107BC                     __ptext4:
   883                           	callstack 0
   884   0107BC                     _XF_scheduleTimer:
   885                           	callstack 0
   886                           
   887                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 9, argsize = 9 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   888   0107BC  52E6               	movf	postinc1,f,c
   889   0107BE                     
   890                           ;xf/xf.c: 156: uint8_t XF_scheduleTimer(uint16_t tm, Event ev, _Bool inISR);xf/xf.c: 157
      +                          : {;xf/xf.c: 158:     uint8_t i;;xf/xf.c: 160:     ENTERCRITICAL(inISR);
   891                           ;stkvar	_inISR @ sp[(-1)+-9]
   892   0107BE  0EF6               	movlw	-10
   893   0107C0  50E3               	movf	plusw1,w,c
   894   0107C2  6EE6               	movwf	postinc1,c
   895   0107C4  ECF0  F085         	call	_ENTERCRITICAL	;wreg free
   896                           
   897                           ;xf/xf.c: 161:     for (i=0; i<12; i++)
   898                           ;stkvar	_i @ sp[(-1)+0]
   899   0107C8  0EFF               	movlw	-1
   900   0107CA  6AE3               	clrf	plusw1,c
   901   0107CC                     l2476:
   902                           
   903                           ;xf/xf.c: 162:     {;xf/xf.c: 163:         if (theXF.timerList[i].ev.id == 0)
   904                           ;stkvar	_i @ sp[(-1)+0]
   905   0107CC  0EFF               	movlw	-1
   906   0107CE  50E3               	movf	plusw1,w,c
   907   0107D0  0D08               	mullw	8
   908   0107D2  0ECA               	movlw	low (_theXF+2)
   909   0107D4  24F3               	addwf	243,w,c
   910   0107D6  6ED9               	movwf	fsr2l,c
   911   0107D8  0E02               	movlw	high (_theXF+2)
   912   0107DA  20F4               	addwfc	prodh,w,c
   913   0107DC  6EDA               	movwf	fsr2h,c
   914   0107DE  50DF               	movf	indf2,w,c
   915   0107E0  A4D8               	btfss	status,2,c
   916   0107E2  EFF5  F083         	goto	u431
   917   0107E6  EFF7  F083         	goto	u430
   918   0107EA                     u431:
   919   0107EA  EF21  F084         	goto	l2480
   920   0107EE                     u430:
   921   0107EE                     
   922                           ;xf/xf.c: 164:         {;xf/xf.c: 165:             theXF.timerList[i].tm = tm;
   923                           ;stkvar	_tm @ sp[(-1)+-2]
   924   0107EE  50E1               	movf	fsr1l,w,c
   925   0107F0  0FFD               	addlw	-3
   926   0107F2  6ED9               	movwf	fsr2l,c
   927   0107F4  50E2               	movf	fsr1h,w,c
   928   0107F6  6EDA               	movwf	fsr2h,c
   929   0107F8  0EFF               	movlw	255
   930   0107FA  22DA               	addwfc	fsr2h,f,c
   931                           
   932                           ;stkvar	_i @ sp[(-1)+0]
   933   0107FC  0EFF               	movlw	-1
   934   0107FE  50E3               	movf	plusw1,w,c
   935   010800  0D08               	mullw	8
   936   010802  0EC8               	movlw	low _theXF
   937   010804  24F3               	addwf	243,w,c
   938   010806  6EE9               	movwf	fsr0l,c
   939   010808  0E02               	movlw	high _theXF
   940   01080A  20F4               	addwfc	prodh,w,c
   941   01080C  6EEA               	movwf	fsr0h,c
   942   01080E  CFDE FFEE          	movff	postinc2,postinc0
   943   010812  CFDD FFED          	movff	postdec2,postdec0
   944                           
   945                           ;xf/xf.c: 166:             theXF.timerList[i].ev = ev;
   946                           ;stkvar	_ev @ sp[(-1)+-8]
   947   010816  0EF7               	movlw	247
   948   010818  24E1               	addwf	fsr1l,w,c
   949   01081A  6ED9               	movwf	fsr2l,c
   950   01081C  0EFF               	movlw	255
   951   01081E  20E2               	addwfc	fsr1h,w,c
   952   010820  6EDA               	movwf	fsr2h,c
   953                           
   954                           ;stkvar	_i @ sp[(-1)+0]
   955   010822  0EFF               	movlw	-1
   956   010824  50E3               	movf	plusw1,w,c
   957   010826  0D08               	mullw	8
   958   010828  0ECA               	movlw	low (_theXF+2)
   959   01082A  24F3               	addwf	243,w,c
   960   01082C  6EE9               	movwf	fsr0l,c
   961   01082E  0E02               	movlw	high (_theXF+2)
   962   010830  20F4               	addwfc	prodh,w,c
   963   010832  6EEA               	movwf	fsr0h,c
   964   010834  0E05               	movlw	5
   965   010836                     u441:
   966   010836  CFDB FFEB          	movff	plusw2,plusw0
   967   01083A  06E8               	decf	wreg,f,c
   968   01083C  E2FC               	bc	u441
   969                           
   970                           ;xf/xf.c: 167:             break;
   971   01083E  EF2E  F084         	goto	l2484
   972   010842                     l2480:
   973                           
   974                           ;xf/xf.c: 169:     }
   975                           ;stkvar	_i @ sp[(-1)+0]
   976   010842  0EFF               	movlw	-1
   977   010844  2AE3               	incf	plusw1,f,c
   978   010846                     
   979                           ;stkvar	_i @ sp[(-1)+0]
   980   010846  0EFF               	movlw	-1
   981   010848  CFE3 F026          	movff	plusw1,btemp
   982   01084C  0E0B               	movlw	11
   983   01084E  6426               	cpfsgt	btemp^0,c
   984   010850  EF2C  F084         	goto	u451
   985   010854  EF2E  F084         	goto	u450
   986   010858                     u451:
   987   010858  EFE6  F083         	goto	l2476
   988   01085C                     u450:
   989   01085C                     l2484:
   990                           
   991                           ;xf/xf.c: 174:     LEAVECRITICAL(inISR);
   992                           ;stkvar	_inISR @ sp[(-1)+-9]
   993   01085C  0EF6               	movlw	-10
   994   01085E  50E3               	movf	plusw1,w,c
   995   010860  6EE6               	movwf	postinc1,c
   996   010862  ECE4  F085         	call	_LEAVECRITICAL	;wreg free
   997   010866                     
   998                           ;xf/xf.c: 175:     return i;
   999                           ;stkvar	_i @ sp[(-1)+0]
  1000   010866  0EFF               	movlw	-1
  1001   010868  CFE3 F026          	movff	plusw1,btemp
  1002   01086C                     
  1003                           ; _XF_scheduleTimer: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           9, argsize = 9, vargsize = 0
  1004   01086C  0EF6               	movlw	246
  1005   01086E  26E1               	addwf	fsr1l,f,c
  1006   010870  0EFF               	movlw	255
  1007   010872  22E2               	addwfc	fsr1h,f,c
  1008   010874  0012               	return		;funcret
  1009   010876                     __end_of_XF_scheduleTimer:
  1010                           	callstack 0
  1011                           
  1012 ;; *************** function _Event_setDelay *****************
  1013 ;; Defined at:
  1014 ;;		line 32 in file "xf/event.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  me              2  [STACK] PTR struct Event_
  1017 ;;		 -> ev(6), 
  1018 ;;  delay           2  [STACK] unsigned short 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1  [STACK] void 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;Total ram usage:        0 bytes
  1035 ;; Hardware stack levels used: 1
  1036 ;; Hardware stack levels required when called: 7
  1037 ;; This function calls:
  1038 ;;		Nothing
  1039 ;; This function is called by:
  1040 ;;		_XF_pushEvent
  1041 ;;		_XF_post
  1042 ;; This function uses a reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text5
  1046   010A9E                     __ptext5:
  1047                           	callstack 0
  1048   010A9E                     _Event_setDelay:
  1049                           	callstack 14
  1050   010A9E                     
  1051                           ;xf/event.c: 32: void Event_setDelay(Event* me, uint16_t delay);xf/event.c: 33: {;xf/eve
      +                          nt.c: 34:     me->delay = delay;
  1052                           ;stkvar	_delay @ sp[(0)+-4]
  1053   010A9E  50E1               	movf	fsr1l,w,c
  1054   010AA0  0FFC               	addlw	-4
  1055   010AA2  6ED9               	movwf	fsr2l,c
  1056   010AA4  50E2               	movf	fsr1h,w,c
  1057   010AA6  6EDA               	movwf	fsr2h,c
  1058   010AA8  0EFF               	movlw	255
  1059   010AAA  22DA               	addwfc	fsr2h,f,c
  1060                           
  1061                           ;stkvar	_me @ sp[(0)+-2]
  1062   010AAC  0EFE               	movlw	-2
  1063   010AAE  CFE3 F030          	movff	plusw1,btemp+10
  1064   010AB2  0EFF               	movlw	-1
  1065   010AB4  CFE3 F031          	movff	plusw1,btemp+11
  1066   010AB8  0E04               	movlw	4
  1067   010ABA  2430               	addwf	(btemp+10)^0,w,c
  1068   010ABC  6EE9               	movwf	fsr0l,c
  1069   010ABE  0E00               	movlw	0
  1070   010AC0  2031               	addwfc	(btemp+11)^0,w,c
  1071   010AC2  6EEA               	movwf	fsr0h,c
  1072   010AC4  CFDE FFEE          	movff	postinc2,postinc0
  1073   010AC8  CFDD FFED          	movff	postdec2,postdec0
  1074   010ACC                     
  1075                           ; _Event_setDelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  1076   010ACC  52E5               	movf	postdec1,f,c
  1077   010ACE  52E5               	movf	postdec1,f,c
  1078   010AD0  52E5               	movf	postdec1,f,c
  1079   010AD2  52E5               	movf	postdec1,f,c
  1080   010AD4  0012               	return		;funcret
  1081   010AD6                     __end_of_Event_setDelay:
  1082                           	callstack 0
  1083                           
  1084 ;; *************** function _Event_getDelay *****************
  1085 ;; Defined at:
  1086 ;;		line 37 in file "xf/event.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;  me              2  [STACK] PTR struct Event_
  1089 ;;		 -> ev(6), 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  2  [STACK] unsigned short 
  1094 ;; Registers used:
  1095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;Total ram usage:        0 bytes
  1106 ;; Hardware stack levels used: 1
  1107 ;; Hardware stack levels required when called: 7
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_XF_pushEvent
  1112 ;; This function uses a reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text6
  1116   010B66                     __ptext6:
  1117                           	callstack 0
  1118   010B66                     _Event_getDelay:
  1119                           	callstack 14
  1120   010B66                     
  1121                           ;xf/event.c: 37: uint16_t Event_getDelay(Event* me);xf/event.c: 38: {;xf/event.c: 39:   
      +                            return me->delay;
  1122                           ;stkvar	_me @ sp[(0)+-2]
  1123   010B66  0EFE               	movlw	-2
  1124   010B68  CFE3 F030          	movff	plusw1,btemp+10
  1125   010B6C  0EFF               	movlw	-1
  1126   010B6E  CFE3 F031          	movff	plusw1,btemp+11
  1127   010B72  0E04               	movlw	4
  1128   010B74  2430               	addwf	(btemp+10)^0,w,c
  1129   010B76  6ED9               	movwf	fsr2l,c
  1130   010B78  0E00               	movlw	0
  1131   010B7A  2031               	addwfc	(btemp+11)^0,w,c
  1132   010B7C  6EDA               	movwf	fsr2h,c
  1133   010B7E  CFDE F026          	movff	postinc2,btemp
  1134   010B82  CFDD F027          	movff	postdec2,btemp+1
  1135   010B86                     
  1136                           ; _Event_getDelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
  1137   010B86  52E5               	movf	postdec1,f,c
  1138   010B88  52E5               	movf	postdec1,f,c
  1139   010B8A  0012               	return		;funcret
  1140   010B8C                     __end_of_Event_getDelay:
  1141                           	callstack 0
  1142                           
  1143 ;; *************** function _Event_setPE *****************
  1144 ;; Defined at:
  1145 ;;		line 12 in file "xf/event.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  me              2  [STACK] PTR struct Event_
  1148 ;;		 -> ev(6), 
  1149 ;;  processEvent    3  [STACK] PTR FTN(PTR struct Event
  1150 ;;		 -> lightControl_Process(1), 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;		None
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1  [STACK] void 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;Total ram usage:        0 bytes
  1167 ;; Hardware stack levels used: 1
  1168 ;; Hardware stack levels required when called: 7
  1169 ;; This function calls:
  1170 ;;		Nothing
  1171 ;; This function is called by:
  1172 ;;		_XF_post
  1173 ;; This function uses a reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text7
  1177   010A28                     __ptext7:
  1178                           	callstack 0
  1179   010A28                     _Event_setPE:
  1180                           	callstack 22
  1181   010A28                     
  1182                           ;xf/event.c: 12: void Event_setPE(Event* me, processEventT processEvent);xf/event.c: 13:
      +                           {;xf/event.c: 14:     me->processEvent = processEvent;
  1183                           ;stkvar	_processEvent @ sp[(0)+-5]
  1184   010A28  50E1               	movf	fsr1l,w,c
  1185   010A2A  0FFB               	addlw	-5
  1186   010A2C  6ED9               	movwf	fsr2l,c
  1187   010A2E  50E2               	movf	fsr1h,w,c
  1188   010A30  6EDA               	movwf	fsr2h,c
  1189   010A32  0EFF               	movlw	255
  1190   010A34  22DA               	addwfc	fsr2h,f,c
  1191                           
  1192                           ;stkvar	_me @ sp[(0)+-2]
  1193   010A36  0EFE               	movlw	-2
  1194   010A38  CFE3 F030          	movff	plusw1,btemp+10
  1195   010A3C  0EFF               	movlw	-1
  1196   010A3E  CFE3 F031          	movff	plusw1,btemp+11
  1197   010A42  0E01               	movlw	1
  1198   010A44  2430               	addwf	(btemp+10)^0,w,c
  1199   010A46  6EE9               	movwf	fsr0l,c
  1200   010A48  0E00               	movlw	0
  1201   010A4A  2031               	addwfc	(btemp+11)^0,w,c
  1202   010A4C  6EEA               	movwf	fsr0h,c
  1203   010A4E  CFDE FFEE          	movff	postinc2,postinc0
  1204   010A52  CFDE FFEE          	movff	postinc2,postinc0
  1205   010A56  CFDE FFEE          	movff	postinc2,postinc0
  1206   010A5A                     
  1207                           ; _Event_setPE: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, a
      +                          rgsize = 5, vargsize = 0
  1208   010A5A  0EFB               	movlw	251
  1209   010A5C  26E1               	addwf	fsr1l,f,c
  1210   010A5E  0EFF               	movlw	255
  1211   010A60  22E2               	addwfc	fsr1h,f,c
  1212   010A62  0012               	return		;funcret
  1213   010A64                     __end_of_Event_setPE:
  1214                           	callstack 0
  1215                           
  1216 ;; *************** function _Event_setId *****************
  1217 ;; Defined at:
  1218 ;;		line 22 in file "xf/event.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  me              2  [STACK] PTR struct Event_
  1221 ;;		 -> ev(6), 
  1222 ;;  eventID         1  [STACK] unsigned char 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1  [STACK] void 
  1227 ;; Registers used:
  1228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used: 1
  1240 ;; Hardware stack levels required when called: 7
  1241 ;; This function calls:
  1242 ;;		Nothing
  1243 ;; This function is called by:
  1244 ;;		_XF_post
  1245 ;; This function uses a reentrant model
  1246 ;;
  1247                           
  1248                           	psect	text8
  1249   010BAE                     __ptext8:
  1250                           	callstack 0
  1251   010BAE                     _Event_setId:
  1252                           	callstack 22
  1253   010BAE                     
  1254                           ;xf/event.c: 22: void Event_setId(Event* me, evIDT eventID);xf/event.c: 23: {;xf/event.c
      +                          : 24:     me->id = eventID;
  1255                           ;stkvar	_eventID @ sp[(0)+-3]
  1256                           ;stkvar	_me @ sp[(0)+-2]
  1257   010BAE  0EFE               	movlw	-2
  1258   010BB0  CFE3 FFD9          	movff	plusw1,fsr2l
  1259   010BB4  0EFF               	movlw	-1
  1260   010BB6  CFE3 FFDA          	movff	plusw1,fsr2h
  1261   010BBA  0EFD               	movlw	-3
  1262   010BBC  CFE3 FFDF          	movff	plusw1,indf2
  1263   010BC0                     
  1264                           ; _Event_setId: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, a
      +                          rgsize = 3, vargsize = 0
  1265   010BC0  52E5               	movf	postdec1,f,c
  1266   010BC2  52E5               	movf	postdec1,f,c
  1267   010BC4  52E5               	movf	postdec1,f,c
  1268   010BC6  0012               	return		;funcret
  1269   010BC8                     __end_of_Event_setId:
  1270                           	callstack 0
  1271                           
  1272 ;; *************** function _XF_init *****************
  1273 ;; Defined at:
  1274 ;;		line 73 in file "xf/xf.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  i               2  [STACK] int 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1  [STACK] void 
  1281 ;; Registers used:
  1282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;Total ram usage:        0 bytes
  1293 ;; Hardware stack levels used: 1
  1294 ;; Hardware stack levels required when called: 8
  1295 ;; This function calls:
  1296 ;;		_Event_init
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text9
  1303   01029A                     __ptext9:
  1304                           	callstack 0
  1305   01029A                     _XF_init:
  1306                           	callstack 0
  1307                           
  1308                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1309   01029A  52E6               	movf	postinc1,f,c
  1310   01029C  52E6               	movf	postinc1,f,c
  1311   01029E                     
  1312                           ;xf/xf.c: 75:     int i;;xf/xf.c: 76:     for (i=0; i<30; i++)
  1313                           ;stkvar	_i @ sp[(-2)+0]
  1314   01029E  0EFE               	movlw	-2
  1315   0102A0  6AE3               	clrf	plusw1,c
  1316   0102A2  0EFF               	movlw	-1
  1317   0102A4  6AE3               	clrf	plusw1,c
  1318   0102A6                     l2654:
  1319                           
  1320                           ;xf/xf.c: 77:     {;xf/xf.c: 78:         Event_init(&(theXF.eventQueue[i]));
  1321                           ;stkvar	_i @ sp[(-2)+0]
  1322   0102A6  0EFE               	movlw	-2
  1323   0102A8  CFE3 F030          	movff	plusw1,btemp+10
  1324   0102AC  0EFF               	movlw	-1
  1325   0102AE  CFE3 F031          	movff	plusw1,btemp+11
  1326   0102B2  0E06               	movlw	6
  1327   0102B4  0230               	mulwf	(btemp+10)^0,c
  1328   0102B6  CFF3 F02E          	movff	prodl,btemp+8
  1329   0102BA  CFF4 F02F          	movff	prodh,btemp+9
  1330   0102BE  0231               	mulwf	(btemp+11)^0,c
  1331   0102C0  50F3               	movf	prodl,w,c
  1332   0102C2  262F               	addwf	(btemp+9)^0,f,c
  1333   0102C4  0E28               	movlw	low (_theXF+96)
  1334   0102C6  242E               	addwf	(btemp+8)^0,w,c
  1335   0102C8  6E30               	movwf	(btemp+10)^0,c
  1336   0102CA  0E03               	movlw	high (_theXF+96)
  1337   0102CC  202F               	addwfc	(btemp+9)^0,w,c
  1338   0102CE  6E31               	movwf	(btemp+11)^0,c
  1339   0102D0  C030  FFE6         	movff	btemp+10,postinc1
  1340   0102D4  C031  FFE6         	movff	btemp+11,postinc1
  1341   0102D8  EC83  F084         	call	_Event_init	;wreg free
  1342   0102DC                     
  1343                           ;xf/xf.c: 79:     }
  1344                           ;stkvar	_i @ sp[(-2)+0]
  1345   0102DC  0EFE               	movlw	-2
  1346   0102DE  50E3               	movf	plusw1,w,c
  1347   0102E0  0F01               	addlw	1
  1348   0102E2  6E26               	movwf	btemp^0,c
  1349   0102E4  0EFE               	movlw	-2
  1350   0102E6  C026  FFE3         	movff	btemp,plusw1
  1351   0102EA  6A26               	clrf	btemp^0,c
  1352   0102EC  0EFF               	movlw	-1
  1353   0102EE  50E3               	movf	plusw1,w,c
  1354   0102F0  2026               	addwfc	btemp^0,w,c
  1355   0102F2  6E26               	movwf	btemp^0,c
  1356   0102F4  0EFF               	movlw	-1
  1357   0102F6  C026  FFE3         	movff	btemp,plusw1
  1358   0102FA                     
  1359                           ;stkvar	_i @ sp[(-2)+0]
  1360   0102FA  0EFF               	movlw	-1
  1361   0102FC  BEE3               	btfsc	plusw1,7,c
  1362   0102FE  EF8E  F081         	goto	u681
  1363   010302  0EFF               	movlw	-1
  1364   010304  50E3               	movf	plusw1,w,c
  1365   010306  E10C               	bnz	u680
  1366   010308  0EFE               	movlw	-2
  1367   01030A  CFE3 F026          	movff	plusw1,btemp
  1368   01030E  0E1E               	movlw	30
  1369   010310  5E26               	subwf	btemp^0,f,c
  1370   010312  A0D8               	btfss	status,0,c
  1371   010314  EF8E  F081         	goto	u681
  1372   010318  EF90  F081         	goto	u680
  1373   01031C                     u681:
  1374   01031C  EF53  F081         	goto	l2654
  1375   010320                     u680:
  1376   010320                     
  1377                           ;xf/xf.c: 81:     for (i=0; i<12; i++)
  1378                           ;stkvar	_i @ sp[(-2)+0]
  1379   010320  0EFE               	movlw	-2
  1380   010322  6AE3               	clrf	plusw1,c
  1381   010324  0EFF               	movlw	-1
  1382   010326  6AE3               	clrf	plusw1,c
  1383   010328                     l2666:
  1384                           
  1385                           ;xf/xf.c: 82:     {;xf/xf.c: 83:         theXF.timerList[i].tm = 0;
  1386                           ;stkvar	_i @ sp[(-2)+0]
  1387   010328  0EFE               	movlw	-2
  1388   01032A  CFE3 F030          	movff	plusw1,btemp+10
  1389   01032E  0EFF               	movlw	-1
  1390   010330  CFE3 F031          	movff	plusw1,btemp+11
  1391   010334  90D8               	bcf	status,0,c
  1392   010336  3630               	rlcf	(btemp+10)^0,f,c
  1393   010338  3631               	rlcf	(btemp+11)^0,f,c
  1394   01033A  90D8               	bcf	status,0,c
  1395   01033C  3630               	rlcf	(btemp+10)^0,f,c
  1396   01033E  3631               	rlcf	(btemp+11)^0,f,c
  1397   010340  90D8               	bcf	status,0,c
  1398   010342  3630               	rlcf	(btemp+10)^0,f,c
  1399   010344  3631               	rlcf	(btemp+11)^0,f,c
  1400   010346  0EC8               	movlw	low _theXF
  1401   010348  2430               	addwf	(btemp+10)^0,w,c
  1402   01034A  6ED9               	movwf	fsr2l,c
  1403   01034C  0E02               	movlw	high _theXF
  1404   01034E  2031               	addwfc	(btemp+11)^0,w,c
  1405   010350  6EDA               	movwf	fsr2h,c
  1406   010352  6ADE               	clrf	postinc2,c
  1407   010354  6ADD               	clrf	postdec2,c
  1408   010356                     
  1409                           ;xf/xf.c: 84:         Event_init(&(theXF.timerList[i].ev));
  1410                           ;stkvar	_i @ sp[(-2)+0]
  1411   010356  0EFE               	movlw	-2
  1412   010358  CFE3 F030          	movff	plusw1,btemp+10
  1413   01035C  0EFF               	movlw	-1
  1414   01035E  CFE3 F031          	movff	plusw1,btemp+11
  1415   010362  90D8               	bcf	status,0,c
  1416   010364  3630               	rlcf	(btemp+10)^0,f,c
  1417   010366  3631               	rlcf	(btemp+11)^0,f,c
  1418   010368  90D8               	bcf	status,0,c
  1419   01036A  3630               	rlcf	(btemp+10)^0,f,c
  1420   01036C  3631               	rlcf	(btemp+11)^0,f,c
  1421   01036E  90D8               	bcf	status,0,c
  1422   010370  3630               	rlcf	(btemp+10)^0,f,c
  1423   010372  3631               	rlcf	(btemp+11)^0,f,c
  1424   010374  0ECA               	movlw	low (_theXF+2)
  1425   010376  2430               	addwf	(btemp+10)^0,w,c
  1426   010378  6E2E               	movwf	(btemp+8)^0,c
  1427   01037A  0E02               	movlw	high (_theXF+2)
  1428   01037C  2031               	addwfc	(btemp+11)^0,w,c
  1429   01037E  6E2F               	movwf	(btemp+9)^0,c
  1430   010380  C02E  FFE6         	movff	btemp+8,postinc1
  1431   010384  C02F  FFE6         	movff	btemp+9,postinc1
  1432   010388  EC83  F084         	call	_Event_init	;wreg free
  1433   01038C                     
  1434                           ;xf/xf.c: 85:     }
  1435                           ;stkvar	_i @ sp[(-2)+0]
  1436   01038C  0EFE               	movlw	-2
  1437   01038E  50E3               	movf	plusw1,w,c
  1438   010390  0F01               	addlw	1
  1439   010392  6E26               	movwf	btemp^0,c
  1440   010394  0EFE               	movlw	-2
  1441   010396  C026  FFE3         	movff	btemp,plusw1
  1442   01039A  6A26               	clrf	btemp^0,c
  1443   01039C  0EFF               	movlw	-1
  1444   01039E  50E3               	movf	plusw1,w,c
  1445   0103A0  2026               	addwfc	btemp^0,w,c
  1446   0103A2  6E26               	movwf	btemp^0,c
  1447   0103A4  0EFF               	movlw	-1
  1448   0103A6  C026  FFE3         	movff	btemp,plusw1
  1449   0103AA                     
  1450                           ;stkvar	_i @ sp[(-2)+0]
  1451   0103AA  0EFF               	movlw	-1
  1452   0103AC  BEE3               	btfsc	plusw1,7,c
  1453   0103AE  EFE6  F081         	goto	u691
  1454   0103B2  0EFF               	movlw	-1
  1455   0103B4  50E3               	movf	plusw1,w,c
  1456   0103B6  E10C               	bnz	u690
  1457   0103B8  0EFE               	movlw	-2
  1458   0103BA  CFE3 F026          	movff	plusw1,btemp
  1459   0103BE  0E0C               	movlw	12
  1460   0103C0  5E26               	subwf	btemp^0,f,c
  1461   0103C2  A0D8               	btfss	status,0,c
  1462   0103C4  EFE6  F081         	goto	u691
  1463   0103C8  EFE8  F081         	goto	u690
  1464   0103CC                     u691:
  1465   0103CC  EF94  F081         	goto	l2666
  1466   0103D0                     u690:
  1467   0103D0                     
  1468                           ;xf/xf.c: 86:     theXF.in = 0;
  1469   0103D0  0E00               	movlw	0
  1470   0103D2  CFE8 F3DC          	movff	wreg,_theXF+276
  1471                           
  1472                           ;xf/xf.c: 87:     theXF.out = 0;
  1473   0103D6  0E00               	movlw	0
  1474   0103D8  CFE8 F3DD          	movff	wreg,_theXF+277
  1475   0103DC                     
  1476                           ; _XF_init: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  1477   0103DC  52E5               	movf	postdec1,f,c
  1478   0103DE  52E5               	movf	postdec1,f,c
  1479   0103E0  0012               	return		;funcret
  1480   0103E2                     __end_of_XF_init:
  1481                           	callstack 0
  1482                           
  1483 ;; *************** function _Event_init *****************
  1484 ;; Defined at:
  1485 ;;		line 4 in file "xf/event.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  me              2  [STACK] PTR struct Event_
  1488 ;;		 -> ev(6), theXF$timerList(96), theXF$eventQueue(180), theXF(278), 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1  [STACK] void 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 7
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_XF_init
  1511 ;;		_XF_unscheduleTimer
  1512 ;;		_XF_post
  1513 ;; This function uses a reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text10
  1517   010906                     __ptext10:
  1518                           	callstack 0
  1519   010906                     _Event_init:
  1520                           	callstack 14
  1521   010906                     
  1522                           ;xf/event.c: 4: void Event_init(struct Event_* me);xf/event.c: 5: {;xf/event.c: 6:     m
      +                          e->id = 0;
  1523                           ;stkvar	_me @ sp[(0)+-2]
  1524   010906  0EFE               	movlw	-2
  1525   010908  CFE3 FFD9          	movff	plusw1,fsr2l
  1526   01090C  0EFF               	movlw	-1
  1527   01090E  CFE3 FFDA          	movff	plusw1,fsr2h
  1528   010912  6ADF               	clrf	indf2,c
  1529   010914                     
  1530                           ;xf/event.c: 7:     me->delay = 0;
  1531                           ;stkvar	_me @ sp[(0)+-2]
  1532   010914  0EFE               	movlw	-2
  1533   010916  CFE3 F030          	movff	plusw1,btemp+10
  1534   01091A  0EFF               	movlw	-1
  1535   01091C  CFE3 F031          	movff	plusw1,btemp+11
  1536   010920  0E04               	movlw	4
  1537   010922  2430               	addwf	(btemp+10)^0,w,c
  1538   010924  6ED9               	movwf	fsr2l,c
  1539   010926  0E00               	movlw	0
  1540   010928  2031               	addwfc	(btemp+11)^0,w,c
  1541   01092A  6EDA               	movwf	fsr2h,c
  1542   01092C  6ADE               	clrf	postinc2,c
  1543   01092E  6ADD               	clrf	postdec2,c
  1544   010930                     
  1545                           ;xf/event.c: 8:     me->processEvent = ((void*)(0));
  1546                           ;stkvar	_me @ sp[(0)+-2]
  1547   010930  0EFE               	movlw	-2
  1548   010932  CFE3 F030          	movff	plusw1,btemp+10
  1549   010936  0EFF               	movlw	-1
  1550   010938  CFE3 F031          	movff	plusw1,btemp+11
  1551   01093C  0E01               	movlw	1
  1552   01093E  2430               	addwf	(btemp+10)^0,w,c
  1553   010940  6ED9               	movwf	fsr2l,c
  1554   010942  0E00               	movlw	0
  1555   010944  2031               	addwfc	(btemp+11)^0,w,c
  1556   010946  6EDA               	movwf	fsr2h,c
  1557   010948  6ADE               	clrf	postinc2,c
  1558   01094A  6ADE               	clrf	postinc2,c
  1559   01094C  6ADD               	clrf	postdec2,c
  1560   01094E                     
  1561                           ; _Event_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  1562   01094E  52E5               	movf	postdec1,f,c
  1563   010950  52E5               	movf	postdec1,f,c
  1564   010952  0012               	return		;funcret
  1565   010954                     __end_of_Event_init:
  1566                           	callstack 0
  1567                           
  1568 ;; *************** function _XF_executeOnce *****************
  1569 ;; Defined at:
  1570 ;;		line 272 in file "xf/xf.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  ev              6  [STACK] struct Event_
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1  [STACK] void 
  1577 ;; Registers used:
  1578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, prodl, prodh
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;Total ram usage:        0 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 9
  1591 ;; This function calls:
  1592 ;;		_XF_popEvent
  1593 ;;		_lightControl_Process
  1594 ;; This function is called by:
  1595 ;;		_main
  1596 ;; This function uses a reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text11
  1600   010876                     __ptext11:
  1601                           	callstack 0
  1602   010876                     _XF_executeOnce:
  1603                           	callstack 0
  1604                           
  1605                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1606   010876  0E06               	movlw	6
  1607   010878  26E1               	addwf	fsr1l,f,c
  1608   01087A  0E00               	movlw	0
  1609   01087C  22E2               	addwfc	fsr1h,f,c
  1610   01087E                     
  1611                           ;xf/xf.c: 274:     Event ev = XF_popEvent(0);
  1612   01087E  0E00               	movlw	0
  1613   010880  6EE6               	movwf	postinc1,c
  1614   010882  EC7A  F083         	call	_XF_popEvent	;wreg free
  1615                           
  1616                           ;stkvar	_ev @ sp[(-12)+0]
  1617   010886  0EFA               	movlw	250
  1618   010888  24E1               	addwf	fsr1l,w,c
  1619   01088A  6ED9               	movwf	fsr2l,c
  1620   01088C  0EFF               	movlw	255
  1621   01088E  20E2               	addwfc	fsr1h,w,c
  1622   010890  6EDA               	movwf	fsr2h,c
  1623   010892  0E06               	movlw	6
  1624   010894  6E26               	movwf	btemp^0,c
  1625   010896                     uf71999:
  1626   010896  50DD               	movf	postdec2,w,c
  1627   010898  52E5               	movf	postdec1,f,c
  1628   01089A  50E7               	movf	indf1,w,c
  1629   01089C  6EDF               	movwf	indf2,c
  1630   01089E  2E26               	decfsz	btemp^0,f,c
  1631   0108A0  D7FA               	bra	uf71999
  1632   0108A2                     
  1633                           ;xf/xf.c: 276:     if (ev.processEvent != ((void*)0))
  1634                           ;stkvar	_ev @ sp[(-6)+0]
  1635   0108A2  0EFB               	movlw	251
  1636   0108A4  24E1               	addwf	fsr1l,w,c
  1637   0108A6  6ED9               	movwf	fsr2l,c
  1638   0108A8  0EFF               	movlw	255
  1639   0108AA  20E2               	addwfc	fsr1h,w,c
  1640   0108AC  6EDA               	movwf	fsr2h,c
  1641   0108AE  50DE               	movf	postinc2,w,c
  1642   0108B0  10DE               	iorwf	postinc2,w,c
  1643   0108B2  10DE               	iorwf	postinc2,w,c
  1644   0108B4  B4D8               	btfsc	status,2,c
  1645   0108B6  EF5F  F084         	goto	u721
  1646   0108BA  EF61  F084         	goto	u720
  1647   0108BE                     u721:
  1648   0108BE  EF7E  F084         	goto	l1245
  1649   0108C2                     u720:
  1650   0108C2                     
  1651                           ;xf/xf.c: 277:     {;xf/xf.c: 280:         ev.processEvent(&ev);
  1652                           ;stkvar	_ev @ sp[(-6)+0]
  1653   0108C2  0EFA               	movlw	250
  1654   0108C4  24E1               	addwf	fsr1l,w,c
  1655   0108C6  6E26               	movwf	btemp^0,c
  1656   0108C8  0EFF               	movlw	255
  1657   0108CA  20E2               	addwfc	fsr1h,w,c
  1658   0108CC  6E27               	movwf	(btemp+1)^0,c
  1659   0108CE  C026  FFE6         	movff	btemp,postinc1
  1660   0108D2  C027  FFE6         	movff	btemp+1,postinc1
  1661                           
  1662                           ;stkvar	_ev @ sp[(-8)+0]
  1663   0108D6  0EF9               	movlw	249
  1664   0108D8  24E1               	addwf	fsr1l,w,c
  1665   0108DA  6ED9               	movwf	fsr2l,c
  1666   0108DC  0EFF               	movlw	255
  1667   0108DE  20E2               	addwfc	fsr1h,w,c
  1668   0108E0  6EDA               	movwf	fsr2h,c
  1669   0108E2  D802               	call	u738
  1670   0108E4  EF7E  F084         	goto	u739
  1671   0108E8                     u738:
  1672   0108E8  0005               	push	
  1673   0108EA  6EFA               	movwf	pclath,c
  1674   0108EC  50DE               	movf	postinc2,w,c
  1675   0108EE  6EFD               	movwf	tosl,c
  1676   0108F0  50DE               	movf	postinc2,w,c
  1677   0108F2  6EFE               	movwf	tosh,c
  1678   0108F4  50DE               	movf	postinc2,w,c
  1679   0108F6  6EFF               	movwf	tosu,c
  1680   0108F8  50FA               	movf	pclath,w,c
  1681   0108FA  0012               	return		;indir
  1682   0108FC                     u739:
  1683   0108FC                     l1245:
  1684                           
  1685                           ; _XF_executeOnce: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  1686   0108FC  0EFA               	movlw	250
  1687   0108FE  26E1               	addwf	fsr1l,f,c
  1688   010900  0EFF               	movlw	255
  1689   010902  22E2               	addwfc	fsr1h,f,c
  1690   010904  0012               	return		;funcret
  1691   010906                     __end_of_XF_executeOnce:
  1692                           	callstack 0
  1693                           
  1694 ;; *************** function _lightControl_Process *****************
  1695 ;; Defined at:
  1696 ;;		line 34 in file "carFunctions.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  ev              2  [STACK] PTR struct Event_
  1699 ;;		 -> ev(6), 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1  [STACK] _Bool 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 8
  1718 ;; This function calls:
  1719 ;;		_lightContol_BackLight
  1720 ;;		_lightContol_FrontLight
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;;		_XF_executeOnce
  1724 ;; This function uses a reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text12
  1728   0103E2                     __ptext12:
  1729                           	callstack 0
  1730   0103E2                     _lightControl_Process:
  1731                           	callstack 21
  1732   0103E2                     
  1733                           ;carFunctions.c: 34: _Bool lightControl_Process(Event* ev);carFunctions.c: 35: {;carFunc
      +                          tions.c: 43:     static LightState state = INIT;;carFunctions.c: 44:     static LightSta
      +                          te oldState = INIT;;carFunctions.c: 45:     switch(state)
  1734   0103E2  EF3D  F082         	goto	l2338
  1735   0103E6                     l2320:
  1736                           
  1737                           ;carFunctions.c: 48:             if(ev->id == E_INIT){
  1738                           ;stkvar	_ev @ sp[(0)+-2]
  1739   0103E6  0EFE               	movlw	-2
  1740   0103E8  CFE3 FFD9          	movff	plusw1,fsr2l
  1741   0103EC  0EFF               	movlw	-1
  1742   0103EE  CFE3 FFDA          	movff	plusw1,fsr2h
  1743   0103F2  50DF               	movf	indf2,w,c
  1744   0103F4  06E8               	decf	wreg,f,c
  1745   0103F6  A4D8               	btfss	status,2,c
  1746   0103F8  EF00  F082         	goto	u271
  1747   0103FC  EF02  F082         	goto	u270
  1748   010400                     u271:
  1749   010400  EF56  F082         	goto	l2340
  1750   010404                     u270:
  1751   010404                     l2322:
  1752                           
  1753                           ;carFunctions.c: 49:                 state = OFF;
  1754   010404  0E01               	movlw	1
  1755   010406  6E25               	movwf	lightControl_Process@state^0,c
  1756   010408  EF56  F082         	goto	l2340
  1757   01040C                     l2324:
  1758                           
  1759                           ;carFunctions.c: 53:             if(ev->id == E_CONTACT_ON)
  1760                           ;stkvar	_ev @ sp[(0)+-2]
  1761   01040C  0EFE               	movlw	-2
  1762   01040E  CFE3 FFD9          	movff	plusw1,fsr2l
  1763   010412  0EFF               	movlw	-1
  1764   010414  CFE3 FFDA          	movff	plusw1,fsr2h
  1765   010418  50DF               	movf	indf2,w,c
  1766   01041A  0A03               	xorlw	3
  1767   01041C  A4D8               	btfss	status,2,c
  1768   01041E  EF13  F082         	goto	u281
  1769   010422  EF15  F082         	goto	u280
  1770   010426                     u281:
  1771   010426  EF56  F082         	goto	l2340
  1772   01042A                     u280:
  1773   01042A                     
  1774                           ;carFunctions.c: 54:             {;carFunctions.c: 55:                 state = CRUISE;
  1775   01042A  0E02               	movlw	2
  1776   01042C  6E25               	movwf	lightControl_Process@state^0,c
  1777   01042E  EF56  F082         	goto	l2340
  1778   010432                     l2328:
  1779                           
  1780                           ;carFunctions.c: 59:             if(ev->id == E_CONTACT_OFF)
  1781                           ;stkvar	_ev @ sp[(0)+-2]
  1782   010432  0EFE               	movlw	-2
  1783   010434  CFE3 FFD9          	movff	plusw1,fsr2l
  1784   010438  0EFF               	movlw	-1
  1785   01043A  CFE3 FFDA          	movff	plusw1,fsr2h
  1786   01043E  50DF               	movf	indf2,w,c
  1787   010440  0A02               	xorlw	2
  1788   010442  A4D8               	btfss	status,2,c
  1789   010444  EF26  F082         	goto	u291
  1790   010448  EF28  F082         	goto	u290
  1791   01044C                     u291:
  1792   01044C  EF2A  F082         	goto	l2332
  1793   010450                     u290:
  1794   010450  EF02  F082         	goto	l2322
  1795   010454                     l2332:
  1796                           
  1797                           ;stkvar	_ev @ sp[(0)+-2]
  1798   010454  0EFE               	movlw	-2
  1799   010456  CFE3 FFD9          	movff	plusw1,fsr2l
  1800   01045A  0EFF               	movlw	-1
  1801   01045C  CFE3 FFDA          	movff	plusw1,fsr2h
  1802   010460  50DF               	movf	indf2,w,c
  1803   010462  0A04               	xorlw	4
  1804   010464  A4D8               	btfss	status,2,c
  1805   010466  EF37  F082         	goto	u301
  1806   01046A  EF39  F082         	goto	u300
  1807   01046E                     u301:
  1808   01046E  EF56  F082         	goto	l2340
  1809   010472                     u300:
  1810   010472                     
  1811                           ;carFunctions.c: 64:             {;carFunctions.c: 65:                 state = BRAKE;
  1812   010472  0E03               	movlw	3
  1813   010474  6E25               	movwf	lightControl_Process@state^0,c
  1814   010476  EF56  F082         	goto	l2340
  1815   01047A                     l2338:
  1816   01047A  5025               	movf	lightControl_Process@state^0,w,c
  1817   01047C  6E30               	movwf	(btemp+10)^0,c
  1818   01047E  6A31               	clrf	(btemp+11)^0,c
  1819                           
  1820                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1821                           ; Switch size 1, requested type "simple"
  1822                           ; Number of cases is 1, Range of values is 0 to 0
  1823                           ; switch strategies available:
  1824                           ; Name         Instructions Cycles
  1825                           ; simple_byte            4     3 (average)
  1826                           ;	Chosen strategy is simple_byte
  1827   010480  5031               	movf	(btemp+11)^0,w,c
  1828   010482  0A00               	xorlw	0	; case 0
  1829   010484  B4D8               	btfsc	status,2,c
  1830   010486  EF47  F082         	goto	l2724
  1831   01048A  EF56  F082         	goto	l2340
  1832   01048E                     l2724:
  1833                           
  1834                           ; Switch size 1, requested type "simple"
  1835                           ; Number of cases is 3, Range of values is 0 to 2
  1836                           ; switch strategies available:
  1837                           ; Name         Instructions Cycles
  1838                           ; simple_byte           10     6 (average)
  1839                           ;	Chosen strategy is simple_byte
  1840   01048E  5030               	movf	(btemp+10)^0,w,c
  1841   010490  0A00               	xorlw	0	; case 0
  1842   010492  B4D8               	btfsc	status,2,c
  1843   010494  EFF3  F081         	goto	l2320
  1844   010498  0A01               	xorlw	1	; case 1
  1845   01049A  B4D8               	btfsc	status,2,c
  1846   01049C  EF06  F082         	goto	l2324
  1847   0104A0  0A03               	xorlw	3	; case 2
  1848   0104A2  B4D8               	btfsc	status,2,c
  1849   0104A4  EF19  F082         	goto	l2328
  1850   0104A8  EF56  F082         	goto	l2340
  1851   0104AC                     l2340:
  1852                           
  1853                           ;carFunctions.c: 72:    if(oldState == state)
  1854   0104AC  5025               	movf	lightControl_Process@state^0,w,c
  1855   0104AE  1824               	xorwf	lightControl_Process@oldState^0,w,c
  1856   0104B0  A4D8               	btfss	status,2,c
  1857   0104B2  EF5D  F082         	goto	u311
  1858   0104B6  EF5F  F082         	goto	u310
  1859   0104BA                     u311:
  1860   0104BA  EF61  F082         	goto	l1409
  1861   0104BE                     u310:
  1862   0104BE  EF92  F082         	goto	l1410
  1863   0104C2                     l1409:
  1864                           
  1865                           ;carFunctions.c: 76:    oldState = state;
  1866   0104C2  C025  F024         	movff	lightControl_Process@state,lightControl_Process@oldState
  1867                           
  1868                           ;carFunctions.c: 77:    switch(state)
  1869   0104C6  EF79  F082         	goto	l2350
  1870   0104CA                     l2344:
  1871                           
  1872                           ;carFunctions.c: 82:             lightContol_FrontLight(0);
  1873   0104CA  0E00               	movlw	0
  1874   0104CC  6EE6               	movwf	postinc1,c
  1875   0104CE  EC13  F086         	call	_lightContol_FrontLight	;wreg free
  1876                           
  1877                           ;carFunctions.c: 83:             lightContol_BackLight(0);
  1878   0104D2  0E00               	movlw	0
  1879   0104D4  6EE6               	movwf	postinc1,c
  1880   0104D6  EC15  F086         	call	_lightContol_BackLight	;wreg free
  1881                           
  1882                           ;carFunctions.c: 84:             break;
  1883   0104DA  EF92  F082         	goto	l1410
  1884   0104DE                     l2346:
  1885                           
  1886                           ;carFunctions.c: 86:             lightContol_FrontLight(50);
  1887   0104DE  0E32               	movlw	50
  1888   0104E0  6EE6               	movwf	postinc1,c
  1889   0104E2  EC13  F086         	call	_lightContol_FrontLight	;wreg free
  1890                           
  1891                           ;carFunctions.c: 87:             lightContol_BackLight(50);
  1892   0104E6  0E32               	movlw	50
  1893   0104E8  6EE6               	movwf	postinc1,c
  1894   0104EA  EC15  F086         	call	_lightContol_BackLight	;wreg free
  1895                           
  1896                           ;carFunctions.c: 88:             break;
  1897   0104EE  EF92  F082         	goto	l1410
  1898   0104F2                     l2350:
  1899   0104F2  5025               	movf	lightControl_Process@state^0,w,c
  1900   0104F4  6E30               	movwf	(btemp+10)^0,c
  1901   0104F6  6A31               	clrf	(btemp+11)^0,c
  1902                           
  1903                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1904                           ; Switch size 1, requested type "simple"
  1905                           ; Number of cases is 1, Range of values is 0 to 0
  1906                           ; switch strategies available:
  1907                           ; Name         Instructions Cycles
  1908                           ; simple_byte            4     3 (average)
  1909                           ;	Chosen strategy is simple_byte
  1910   0104F8  5031               	movf	(btemp+11)^0,w,c
  1911   0104FA  0A00               	xorlw	0	; case 0
  1912   0104FC  B4D8               	btfsc	status,2,c
  1913   0104FE  EF83  F082         	goto	l2726
  1914   010502  EF92  F082         	goto	l1410
  1915   010506                     l2726:
  1916                           
  1917                           ; Switch size 1, requested type "simple"
  1918                           ; Number of cases is 3, Range of values is 0 to 2
  1919                           ; switch strategies available:
  1920                           ; Name         Instructions Cycles
  1921                           ; simple_byte           10     6 (average)
  1922                           ;	Chosen strategy is simple_byte
  1923   010506  5030               	movf	(btemp+10)^0,w,c
  1924   010508  0A00               	xorlw	0	; case 0
  1925   01050A  B4D8               	btfsc	status,2,c
  1926   01050C  EF92  F082         	goto	l1410
  1927   010510  0A01               	xorlw	1	; case 1
  1928   010512  B4D8               	btfsc	status,2,c
  1929   010514  EF65  F082         	goto	l2344
  1930   010518  0A03               	xorlw	3	; case 2
  1931   01051A  B4D8               	btfsc	status,2,c
  1932   01051C  EF6F  F082         	goto	l2346
  1933   010520  EF92  F082         	goto	l1410
  1934   010524                     l1410:
  1935                           
  1936                           ; _lightControl_Process: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 2, argsize = 2, vargsize = 0
  1937   010524  52E5               	movf	postdec1,f,c
  1938   010526  52E5               	movf	postdec1,f,c
  1939   010528  0012               	return		;funcret
  1940   01052A                     __end_of_lightControl_Process:
  1941                           	callstack 0
  1942                           
  1943 ;; *************** function _lightContol_FrontLight *****************
  1944 ;; Defined at:
  1945 ;;		line 24 in file "carFunctions.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  light           1  [STACK] unsigned char 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1  [STACK] void 
  1952 ;; Registers used:
  1953 ;;		None
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;Total ram usage:        0 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 7
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_lightControl_Process
  1970 ;; This function uses a reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text13
  1974   010C26                     __ptext13:
  1975                           	callstack 0
  1976   010C26                     _lightContol_FrontLight:
  1977                           	callstack 21
  1978   010C26                     
  1979                           ; _lightContol_FrontLight: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  1980   010C26  52E5               	movf	postdec1,f,c
  1981   010C28  0012               	return		;funcret
  1982   010C2A                     __end_of_lightContol_FrontLight:
  1983                           	callstack 0
  1984                           
  1985 ;; *************** function _lightContol_BackLight *****************
  1986 ;; Defined at:
  1987 ;;		line 29 in file "carFunctions.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  light           1  [STACK] unsigned char 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1  [STACK] void 
  1994 ;; Registers used:
  1995 ;;		None
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;Total ram usage:        0 bytes
  2006 ;; Hardware stack levels used: 1
  2007 ;; Hardware stack levels required when called: 7
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_lightControl_Process
  2012 ;; This function uses a reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text14
  2016   010C2A                     __ptext14:
  2017                           	callstack 0
  2018   010C2A                     _lightContol_BackLight:
  2019                           	callstack 21
  2020   010C2A                     
  2021                           ; _lightContol_BackLight: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  2022   010C2A  52E5               	movf	postdec1,f,c
  2023   010C2C  0012               	return		;funcret
  2024   010C2E                     __end_of_lightContol_BackLight:
  2025                           	callstack 0
  2026                           
  2027 ;; *************** function _XF_popEvent *****************
  2028 ;; Defined at:
  2029 ;;		line 130 in file "xf/xf.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  inISR           1  [STACK] _Bool 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  ev              6  [STACK] struct Event_
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  6  [STACK] struct Event_
  2036 ;; Registers used:
  2037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;Total ram usage:        0 bytes
  2048 ;; Hardware stack levels used: 1
  2049 ;; Hardware stack levels required when called: 8
  2050 ;; This function calls:
  2051 ;;		_ENTERCRITICAL
  2052 ;;		_LEAVECRITICAL
  2053 ;;		___awmod
  2054 ;; This function is called by:
  2055 ;;		_XF_executeOnce
  2056 ;; This function uses a reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text15
  2060   0106F4                     __ptext15:
  2061                           	callstack 0
  2062   0106F4                     _XF_popEvent:
  2063                           	callstack 0
  2064                           
  2065                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 6 argfudge = 5
  2066   0106F4  0E0B               	movlw	11
  2067   0106F6  26E1               	addwf	fsr1l,f,c
  2068   0106F8  0E00               	movlw	0
  2069   0106FA  22E2               	addwfc	fsr1h,f,c
  2070   0106FC                     
  2071                           ;xf/xf.c: 130: Event XF_popEvent(_Bool inISR);xf/xf.c: 131: {;xf/xf.c: 132:     Event ev
      +                          ;;xf/xf.c: 133:     ev.id = 0;
  2072                           ;stkvar	_ev @ sp[(-6)+0]
  2073   0106FC  0EFA               	movlw	-6
  2074   0106FE  6AE3               	clrf	plusw1,c
  2075   010700                     
  2076                           ;xf/xf.c: 134:     ev.processEvent = ((void*)0);
  2077                           ;stkvar	_ev @ sp[(-6)+0]
  2078   010700  0EFB               	movlw	251
  2079   010702  24E1               	addwf	fsr1l,w,c
  2080   010704  6ED9               	movwf	fsr2l,c
  2081   010706  0EFF               	movlw	255
  2082   010708  20E2               	addwfc	fsr1h,w,c
  2083   01070A  6EDA               	movwf	fsr2h,c
  2084   01070C  6ADE               	clrf	postinc2,c
  2085   01070E  6ADE               	clrf	postinc2,c
  2086   010710  6ADD               	clrf	postdec2,c
  2087   010712                     
  2088                           ;xf/xf.c: 136:     ENTERCRITICAL(inISR);
  2089                           ;stkvar	_inISR @ sp[(-6)+-6]
  2090   010712  0EF4               	movlw	-12
  2091   010714  50E3               	movf	plusw1,w,c
  2092   010716  6EE6               	movwf	postinc1,c
  2093   010718  ECF0  F085         	call	_ENTERCRITICAL	;wreg free
  2094   01071C                     
  2095                           ;xf/xf.c: 137:     if(theXF.in == theXF.out)
  2096   01071C  EE23  F0DD         	lfsr	2,_theXF+277
  2097   010720  EE03  F0DC         	lfsr	0,_theXF+276
  2098   010724  50DE               	movf	postinc2,w,c
  2099   010726  18EE               	xorwf	postinc0,w,c
  2100   010728  A4D8               	btfss	status,2,c
  2101   01072A  EF99  F083         	goto	u641
  2102   01072E  EF9B  F083         	goto	u640
  2103   010732                     u641:
  2104   010732  EFB0  F083         	goto	l2622
  2105   010736                     u640:
  2106   010736                     l2616:
  2107                           
  2108                           ;xf/xf.c: 138:     {;xf/xf.c: 139:       LEAVECRITICAL(inISR);
  2109                           ;stkvar	_inISR @ sp[(-6)+-6]
  2110   010736  0EF4               	movlw	-12
  2111   010738  50E3               	movf	plusw1,w,c
  2112   01073A  6EE6               	movwf	postinc1,c
  2113   01073C  ECE4  F085         	call	_LEAVECRITICAL	;wreg free
  2114   010740                     
  2115                           ;xf/xf.c: 140:       return ev;
  2116                           ;stkvar	_ev @ sp[(-6)+0]
  2117   010740  0EFA               	movlw	250
  2118   010742  24E1               	addwf	fsr1l,w,c
  2119   010744  6ED9               	movwf	fsr2l,c
  2120   010746  0EFF               	movlw	255
  2121   010748  20E2               	addwfc	fsr1h,w,c
  2122   01074A  6EDA               	movwf	fsr2h,c
  2123                           
  2124                           ;stkvar	?_XF_popEvent @ sp[(-6)+-6]
  2125   01074C  0E06               	movlw	6
  2126   01074E  6E26               	movwf	btemp^0,c
  2127   010750  0EF4               	movlw	-12
  2128   010752                     us65999:
  2129   010752  CFDE FFE3          	movff	postinc2,plusw1
  2130   010756  28E8               	incf	wreg,w,c
  2131   010758  2E26               	decfsz	btemp^0,f,c
  2132   01075A  D7FB               	bra	us65999
  2133   01075C  EFD9  F083         	goto	l1212
  2134   010760                     l2622:
  2135                           
  2136                           ;xf/xf.c: 142:     ev = theXF.eventQueue[theXF.out];
  2137   010760  EE23  F0DD         	lfsr	2,_theXF+277
  2138   010764  50DF               	movf	indf2,w,c
  2139   010766  0D06               	mullw	6
  2140   010768  0E28               	movlw	low (_theXF+96)
  2141   01076A  24F3               	addwf	243,w,c
  2142   01076C  6ED9               	movwf	fsr2l,c
  2143   01076E  0E03               	movlw	high (_theXF+96)
  2144   010770  20F4               	addwfc	prodh,w,c
  2145   010772  6EDA               	movwf	fsr2h,c
  2146                           
  2147                           ;stkvar	_ev @ sp[(-6)+0]
  2148   010774  0E06               	movlw	6
  2149   010776  6E26               	movwf	btemp^0,c
  2150   010778  0EFA               	movlw	-6
  2151   01077A                     us66999:
  2152   01077A  CFDE FFE3          	movff	postinc2,plusw1
  2153   01077E  28E8               	incf	wreg,w,c
  2154   010780  2E26               	decfsz	btemp^0,f,c
  2155   010782  D7FB               	bra	us66999
  2156   010784                     
  2157                           ;xf/xf.c: 143:     theXF.out = (theXF.out + 1)%(uint8_t)(sizeof(theXF.eventQueue) / size
      +                          of(Event));
  2158   010784  0E1E               	movlw	30
  2159   010786  6EE6               	movwf	postinc1,c
  2160   010788  0E00               	movlw	0
  2161   01078A  6EE6               	movwf	postinc1,c
  2162   01078C  EE23  F0DD         	lfsr	2,_theXF+277
  2163   010790  50DF               	movf	indf2,w,c
  2164   010792  6E30               	movwf	(btemp+10)^0,c
  2165   010794  6A31               	clrf	(btemp+11)^0,c
  2166   010796  0E01               	movlw	1
  2167   010798  2630               	addwf	(btemp+10)^0,f,c
  2168   01079A  0E00               	movlw	0
  2169   01079C  2231               	addwfc	(btemp+11)^0,f,c
  2170   01079E  C030  FFE6         	movff	btemp+10,postinc1
  2171   0107A2  C031  FFE6         	movff	btemp+11,postinc1
  2172   0107A6  ECA8  F080         	call	___awmod	;wreg free
  2173   0107AA  C026  F3DD         	movff	btemp,_theXF+277
  2174   0107AE  EF9B  F083         	goto	l2616
  2175   0107B2                     l1212:
  2176                           
  2177                           ; _XF_popEvent: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
  2178   0107B2  0EFA               	movlw	250
  2179   0107B4  26E1               	addwf	fsr1l,f,c
  2180   0107B6  0EFF               	movlw	255
  2181   0107B8  22E2               	addwfc	fsr1h,f,c
  2182   0107BA  0012               	return		;funcret
  2183   0107BC                     __end_of_XF_popEvent:
  2184                           	callstack 0
  2185                           
  2186 ;; *************** function ___awmod *****************
  2187 ;; Defined at:
  2188 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  dividend        2  [STACK] int 
  2191 ;;  divisor         2  [STACK] int 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  sign            1  [STACK] unsigned char 
  2194 ;;  counter         1  [STACK] unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  2  [STACK] int 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;Total ram usage:        0 bytes
  2209 ;; Hardware stack levels used: 1
  2210 ;; Hardware stack levels required when called: 7
  2211 ;; This function calls:
  2212 ;;		Nothing
  2213 ;; This function is called by:
  2214 ;;		_XF_pushEvent
  2215 ;;		_XF_popEvent
  2216 ;; This function uses a reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text16
  2220   010150                     __ptext16:
  2221                           	callstack 0
  2222   010150                     ___awmod:
  2223                           	callstack 0
  2224                           
  2225                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2226   010150  52E6               	movf	postinc1,f,c
  2227   010152  52E6               	movf	postinc1,f,c
  2228   010154                     
  2229                           ;stkvar	_sign @ sp[(-2)+0]
  2230   010154  0EFE               	movlw	-2
  2231   010156  6AE3               	clrf	plusw1,c
  2232   010158                     
  2233                           ;stkvar	_dividend @ sp[(-2)+-2]
  2234   010158  0EFD               	movlw	-3
  2235   01015A  BEE3               	btfsc	plusw1,7,c
  2236   01015C  EFB4  F080         	goto	u460
  2237   010160  EFB2  F080         	goto	u461
  2238   010164                     u461:
  2239   010164  EFBD  F080         	goto	l2498
  2240   010168                     u460:
  2241   010168                     
  2242                           ;stkvar	_dividend @ sp[(-2)+-2]
  2243                           ;stkvar	_dividend @ sp[(-2)+-2]
  2244   010168  0EFC               	movlw	-4
  2245   01016A  6CE3               	negf	plusw1,c
  2246   01016C  0EFD               	movlw	-3
  2247   01016E  1EE3               	comf	plusw1,f,c
  2248   010170  B0D8               	btfsc	status,0,c
  2249   010172  2AE3               	incf	plusw1,f,c
  2250   010174                     
  2251                           ;stkvar	_sign @ sp[(-2)+0]
  2252   010174  0EFE               	movlw	-2
  2253   010176  6AE3               	clrf	plusw1,c
  2254   010178  2AE3               	incf	plusw1,f,c
  2255   01017A                     l2498:
  2256                           
  2257                           ;stkvar	_divisor @ sp[(-2)+-4]
  2258   01017A  0EFB               	movlw	-5
  2259   01017C  BEE3               	btfsc	plusw1,7,c
  2260   01017E  EFC5  F080         	goto	u470
  2261   010182  EFC3  F080         	goto	u471
  2262   010186                     u471:
  2263   010186  EFCB  F080         	goto	l2502
  2264   01018A                     u470:
  2265   01018A                     
  2266                           ;stkvar	_divisor @ sp[(-2)+-4]
  2267                           ;stkvar	_divisor @ sp[(-2)+-4]
  2268   01018A  0EFA               	movlw	-6
  2269   01018C  6CE3               	negf	plusw1,c
  2270   01018E  0EFB               	movlw	-5
  2271   010190  1EE3               	comf	plusw1,f,c
  2272   010192  B0D8               	btfsc	status,0,c
  2273   010194  2AE3               	incf	plusw1,f,c
  2274   010196                     l2502:
  2275                           
  2276                           ;stkvar	_divisor @ sp[(-2)+-4]
  2277   010196  0EFA               	movlw	-6
  2278   010198  CFE3 F026          	movff	plusw1,btemp
  2279   01019C  0EFB               	movlw	-5
  2280   01019E  50E3               	movf	plusw1,w,c
  2281   0101A0  1026               	iorwf	btemp^0,w,c
  2282   0101A2  B4D8               	btfsc	status,2,c
  2283   0101A4  EFD6  F080         	goto	u481
  2284   0101A8  EFD8  F080         	goto	u480
  2285   0101AC                     u481:
  2286   0101AC  EF33  F081         	goto	l2520
  2287   0101B0                     u480:
  2288   0101B0                     
  2289                           ;stkvar	_counter @ sp[(-2)+1]
  2290   0101B0  0EFF               	movlw	-1
  2291   0101B2  6AE3               	clrf	plusw1,c
  2292   0101B4  2AE3               	incf	plusw1,f,c
  2293   0101B6  EFEE  F080         	goto	l2510
  2294   0101BA                     l2506:
  2295                           
  2296                           ;stkvar	_divisor @ sp[(-2)+-4]
  2297   0101BA  0EFA               	movlw	-6
  2298   0101BC  50E3               	movf	plusw1,w,c
  2299   0101BE  90D8               	bcf	status,0,c
  2300   0101C0  34E8               	rlcf	wreg,w,c
  2301   0101C2  6E26               	movwf	btemp^0,c
  2302   0101C4  0EFA               	movlw	-6
  2303   0101C6  C026  FFE3         	movff	btemp,plusw1
  2304   0101CA  0EFB               	movlw	-5
  2305   0101CC  50E3               	movf	plusw1,w,c
  2306   0101CE  34E8               	rlcf	wreg,w,c
  2307   0101D0  6E26               	movwf	btemp^0,c
  2308   0101D2  0EFB               	movlw	-5
  2309   0101D4  C026  FFE3         	movff	btemp,plusw1
  2310   0101D8                     
  2311                           ;stkvar	_counter @ sp[(-2)+1]
  2312   0101D8  0EFF               	movlw	-1
  2313   0101DA  2AE3               	incf	plusw1,f,c
  2314   0101DC                     l2510:
  2315                           
  2316                           ;stkvar	_divisor @ sp[(-2)+-4]
  2317   0101DC  0EFB               	movlw	-5
  2318   0101DE  AEE3               	btfss	plusw1,7,c
  2319   0101E0  EFF4  F080         	goto	u491
  2320   0101E4  EFF6  F080         	goto	u490
  2321   0101E8                     u491:
  2322   0101E8  EFDD  F080         	goto	l2506
  2323   0101EC                     u490:
  2324   0101EC                     l2512:
  2325                           
  2326                           ;stkvar	_divisor @ sp[(-2)+-4]
  2327   0101EC  0EFA               	movlw	-6
  2328   0101EE  CFE3 F030          	movff	plusw1,btemp+10
  2329   0101F2  0EFB               	movlw	-5
  2330   0101F4  CFE3 F031          	movff	plusw1,btemp+11
  2331                           
  2332                           ;stkvar	_dividend @ sp[(-2)+-2]
  2333   0101F8  0EFC               	movlw	-4
  2334   0101FA  CFE3 F02E          	movff	plusw1,btemp+8
  2335   0101FE  0EFD               	movlw	-3
  2336   010200  CFE3 F02F          	movff	plusw1,btemp+9
  2337   010204  5030               	movf	(btemp+10)^0,w,c
  2338   010206  5C2E               	subwf	(btemp+8)^0,w,c
  2339   010208  5031               	movf	(btemp+11)^0,w,c
  2340   01020A  582F               	subwfb	(btemp+9)^0,w,c
  2341   01020C  A0D8               	btfss	status,0,c
  2342   01020E  EF0B  F081         	goto	u501
  2343   010212  EF0D  F081         	goto	u500
  2344   010216                     u501:
  2345   010216  EF1F  F081         	goto	l2516
  2346   01021A                     u500:
  2347   01021A                     
  2348                           ;stkvar	_divisor @ sp[(-2)+-4]
  2349                           ;stkvar	_dividend @ sp[(-2)+-2]
  2350   01021A  0EFC               	movlw	-4
  2351   01021C  50E3               	movf	plusw1,w,c
  2352   01021E  6E26               	movwf	btemp^0,c
  2353   010220  0EFA               	movlw	-6
  2354   010222  50E3               	movf	plusw1,w,c
  2355   010224  5E26               	subwf	btemp^0,f,c
  2356   010226  0EFC               	movlw	-4
  2357   010228  C026  FFE3         	movff	btemp,plusw1
  2358   01022C  0EFD               	movlw	-3
  2359   01022E  50E3               	movf	plusw1,w,c
  2360   010230  6E26               	movwf	btemp^0,c
  2361   010232  0EFB               	movlw	-5
  2362   010234  50E3               	movf	plusw1,w,c
  2363   010236  5A26               	subwfb	btemp^0,f,c
  2364   010238  0EFD               	movlw	-3
  2365   01023A  C026  FFE3         	movff	btemp,plusw1
  2366   01023E                     l2516:
  2367                           
  2368                           ;stkvar	_divisor @ sp[(-2)+-4]
  2369   01023E  90D8               	bcf	status,0,c
  2370   010240  0EFB               	movlw	-5
  2371   010242  32E3               	rrcf	plusw1,f,c
  2372   010244  0EFA               	movlw	-6
  2373   010246  32E3               	rrcf	plusw1,f,c
  2374   010248                     
  2375                           ;stkvar	_counter @ sp[(-2)+1]
  2376   010248  0EFF               	movlw	-1
  2377   01024A  50E3               	movf	plusw1,w,c
  2378   01024C  6E26               	movwf	btemp^0,c
  2379   01024E  0E01               	movlw	1
  2380   010250  5E26               	subwf	btemp^0,f,c
  2381   010252  0EFF               	movlw	-1
  2382   010254  C026  FFE3         	movff	btemp,plusw1
  2383   010258  A4D8               	btfss	status,2,c
  2384   01025A  EF31  F081         	goto	u511
  2385   01025E  EF33  F081         	goto	u510
  2386   010262                     u511:
  2387   010262  EFF6  F080         	goto	l2512
  2388   010266                     u510:
  2389   010266                     l2520:
  2390                           
  2391                           ;stkvar	_sign @ sp[(-2)+0]
  2392   010266  0EFE               	movlw	-2
  2393   010268  50E3               	movf	plusw1,w,c
  2394   01026A  B4D8               	btfsc	status,2,c
  2395   01026C  EF3A  F081         	goto	u521
  2396   010270  EF3C  F081         	goto	u520
  2397   010274                     u521:
  2398   010274  EF42  F081         	goto	l2524
  2399   010278                     u520:
  2400   010278                     
  2401                           ;stkvar	_dividend @ sp[(-2)+-2]
  2402                           ;stkvar	_dividend @ sp[(-2)+-2]
  2403   010278  0EFC               	movlw	-4
  2404   01027A  6CE3               	negf	plusw1,c
  2405   01027C  0EFD               	movlw	-3
  2406   01027E  1EE3               	comf	plusw1,f,c
  2407   010280  B0D8               	btfsc	status,0,c
  2408   010282  2AE3               	incf	plusw1,f,c
  2409   010284                     l2524:
  2410                           
  2411                           ;stkvar	_dividend @ sp[(-2)+-2]
  2412   010284  0EFC               	movlw	-4
  2413   010286  CFE3 F026          	movff	plusw1,btemp
  2414   01028A  0EFD               	movlw	-3
  2415   01028C  CFE3 F027          	movff	plusw1,btemp+1
  2416   010290                     
  2417                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  2418   010290  0EFA               	movlw	250
  2419   010292  26E1               	addwf	fsr1l,f,c
  2420   010294  0EFF               	movlw	255
  2421   010296  22E2               	addwfc	fsr1h,f,c
  2422   010298  0012               	return		;funcret
  2423   01029A                     __end_of___awmod:
  2424                           	callstack 0
  2425                           
  2426 ;; *************** function _LEAVECRITICAL *****************
  2427 ;; Defined at:
  2428 ;;		line 247 in file "xf/xf.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  inISR           1  [STACK] _Bool 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1  [STACK] void 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr1l, fsr1h, status,2
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;Total ram usage:        0 bytes
  2447 ;; Hardware stack levels used: 1
  2448 ;; Hardware stack levels required when called: 7
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_XF_pushEvent
  2453 ;;		_XF_popEvent
  2454 ;;		_XF_scheduleTimer
  2455 ;;		_XF_unscheduleTimer
  2456 ;; This function uses a reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text17
  2460   010BC8                     __ptext17:
  2461                           	callstack 0
  2462   010BC8                     _LEAVECRITICAL:
  2463                           	callstack 14
  2464   010BC8                     
  2465                           ;xf/xf.c: 247: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 248: {;xf/xf.c: 249:     
      +                          if (inISR == 0)
  2466                           ;stkvar	_inISR @ sp[(0)+-1]
  2467   010BC8  0EFF               	movlw	-1
  2468   010BCA  50E3               	movf	plusw1,w,c
  2469   010BCC  A4D8               	btfss	status,2,c
  2470   010BCE  EFEB  F085         	goto	u421
  2471   010BD2  EFED  F085         	goto	u420
  2472   010BD6                     u421:
  2473   010BD6  EFEE  F085         	goto	l1238
  2474   010BDA                     u420:
  2475   010BDA                     
  2476                           ;xf/xf.c: 250:     {;xf/xf.c: 252:      (INTCONbits.GIE = 1);
  2477   010BDA  8EF2               	bsf	242,7,c	;volatile
  2478   010BDC                     l1238:
  2479                           
  2480                           ; _LEAVECRITICAL: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  2481   010BDC  52E5               	movf	postdec1,f,c
  2482   010BDE  0012               	return		;funcret
  2483   010BE0                     __end_of_LEAVECRITICAL:
  2484                           	callstack 0
  2485                           
  2486 ;; *************** function _ENTERCRITICAL *****************
  2487 ;; Defined at:
  2488 ;;		line 232 in file "xf/xf.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  inISR           1  [STACK] _Bool 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1  [STACK] void 
  2495 ;; Registers used:
  2496 ;;		wreg, fsr1l, fsr1h, status,2
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;Total ram usage:        0 bytes
  2507 ;; Hardware stack levels used: 1
  2508 ;; Hardware stack levels required when called: 7
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_XF_pushEvent
  2513 ;;		_XF_popEvent
  2514 ;;		_XF_scheduleTimer
  2515 ;;		_XF_unscheduleTimer
  2516 ;; This function uses a reentrant model
  2517 ;;
  2518                           
  2519                           	psect	text18
  2520   010BE0                     __ptext18:
  2521                           	callstack 0
  2522   010BE0                     _ENTERCRITICAL:
  2523                           	callstack 14
  2524   010BE0                     
  2525                           ;xf/xf.c: 232: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 233: {;xf/xf.c: 234:     
      +                          if (inISR == 0)
  2526                           ;stkvar	_inISR @ sp[(0)+-1]
  2527   010BE0  0EFF               	movlw	-1
  2528   010BE2  50E3               	movf	plusw1,w,c
  2529   010BE4  A4D8               	btfss	status,2,c
  2530   010BE6  EFF7  F085         	goto	u411
  2531   010BEA  EFF9  F085         	goto	u410
  2532   010BEE                     u411:
  2533   010BEE  EFFA  F085         	goto	l1234
  2534   010BF2                     u410:
  2535   010BF2                     
  2536                           ;xf/xf.c: 235:     {;xf/xf.c: 237:       (INTCONbits.GIE = 0);
  2537   010BF2  9EF2               	bcf	242,7,c	;volatile
  2538   010BF4                     l1234:
  2539                           
  2540                           ; _ENTERCRITICAL: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  2541   010BF4  52E5               	movf	postdec1,f,c
  2542   010BF6  0012               	return		;funcret
  2543   010BF8                     __end_of_ENTERCRITICAL:
  2544                           	callstack 0
  2545                           
  2546 ;; *************** function _SYSTEM_Initialize *****************
  2547 ;; Defined at:
  2548 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;		None
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;		None
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1  [STACK] void 
  2555 ;; Registers used:
  2556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;Total ram usage:        0 bytes
  2567 ;; Hardware stack levels used: 1
  2568 ;; Hardware stack levels required when called: 9
  2569 ;; This function calls:
  2570 ;;		_INTERRUPT_Initialize
  2571 ;;		_OSCILLATOR_Initialize
  2572 ;;		_PIN_MANAGER_Initialize
  2573 ;;		_SPI2_Initialize
  2574 ;;		_TMR0_Initialize
  2575 ;; This function is called by:
  2576 ;;		_main
  2577 ;; This function uses a reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text19
  2581   010BF8                     __ptext19:
  2582                           	callstack 0
  2583   010BF8                     _SYSTEM_Initialize:
  2584                           	callstack 21
  2585   010BF8                     
  2586                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  2587   010BF8  EC17  F086         	call	_INTERRUPT_Initialize	;wreg free
  2588   010BFC                     
  2589                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
  2590   010BFC  EC07  F086         	call	_SPI2_Initialize	;wreg free
  2591                           
  2592                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  2593   010C00  EC85  F085         	call	_PIN_MANAGER_Initialize	;wreg free
  2594                           
  2595                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  2596   010C04  EC0F  F086         	call	_OSCILLATOR_Initialize	;wreg free
  2597   010C08                     
  2598                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  2599   010C08  EC32  F085         	call	_TMR0_Initialize	;wreg free
  2600   010C0C                     
  2601                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  2602   010C0C  0012               	return		;funcret
  2603   010C0E                     __end_of_SYSTEM_Initialize:
  2604                           	callstack 0
  2605                           
  2606 ;; *************** function _TMR0_Initialize *****************
  2607 ;; Defined at:
  2608 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1  [STACK] void 
  2615 ;; Registers used:
  2616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2626 ;;Total ram usage:        0 bytes
  2627 ;; Hardware stack levels used: 1
  2628 ;; Hardware stack levels required when called: 8
  2629 ;; This function calls:
  2630 ;;		_TMR0_SetInterruptHandler
  2631 ;; This function is called by:
  2632 ;;		_SYSTEM_Initialize
  2633 ;; This function uses a reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text20
  2637   010A64                     __ptext20:
  2638                           	callstack 0
  2639   010A64                     _TMR0_Initialize:
  2640                           	callstack 21
  2641   010A64                     
  2642                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  2643   010A64  9CD5               	bcf	213,6,c	;volatile
  2644   010A66                     
  2645                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFD;
  2646   010A66  0EFD               	movlw	253
  2647   010A68  6ED7               	movwf	215,c	;volatile
  2648                           
  2649                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x9D;
  2650   010A6A  0E9D               	movlw	157
  2651   010A6C  6ED6               	movwf	214,c	;volatile
  2652   010A6E                     
  2653                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  2654   010A6E  50D6               	movf	214,w,c	;volatile
  2655   010A70  CFD7 F026          	movff	4055,btemp	;volatile
  2656   010A74  6A27               	clrf	(btemp+1)^0,c
  2657   010A76  C026  F027         	movff	btemp,btemp+1
  2658   010A7A  6A26               	clrf	btemp^0,c
  2659   010A7C  1026               	iorwf	btemp^0,w,c
  2660   010A7E  6E22               	movwf	_timer0ReloadVal^0,c	;volatile
  2661   010A80  5027               	movf	(btemp+1)^0,w,c
  2662   010A82  6E23               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  2663   010A84                     
  2664                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  2665   010A84  94F2               	bcf	242,2,c	;volatile
  2666   010A86                     
  2667                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  2668   010A86  8AF2               	bsf	242,5,c	;volatile
  2669   010A88                     
  2670                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2671   010A88  0E34               	movlw	low _TMR0_DefaultInterruptHandler
  2672   010A8A  6EE6               	movwf	postinc1,c
  2673   010A8C  0E0C               	movlw	high _TMR0_DefaultInterruptHandler
  2674   010A8E  6EE6               	movwf	postinc1,c
  2675   010A90  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  2676   010A92  6EE6               	movwf	postinc1,c
  2677   010A94  ECC6  F085         	call	_TMR0_SetInterruptHandler	;wreg free
  2678   010A98                     
  2679                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x97;
  2680   010A98  0E97               	movlw	151
  2681   010A9A  6ED5               	movwf	213,c	;volatile
  2682   010A9C                     
  2683                           ; _TMR0_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  2684   010A9C  0012               	return		;funcret
  2685   010A9E                     __end_of_TMR0_Initialize:
  2686                           	callstack 0
  2687                           
  2688 ;; *************** function _TMR0_SetInterruptHandler *****************
  2689 ;; Defined at:
  2690 ;;		line 172 in file "mcc_generated_files/tmr0.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  InterruptHan    3  [STACK] PTR FTN()void 
  2693 ;;		 -> XF_decrementAndQueueTimers(1), TMR0_DefaultInterruptHandler(1), 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1  [STACK] void 
  2698 ;; Registers used:
  2699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;Total ram usage:        0 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; Hardware stack levels required when called: 7
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_TMR0_Initialize
  2716 ;;		_main
  2717 ;; This function uses a reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text21
  2721   010B8C                     __ptext21:
  2722                           	callstack 0
  2723   010B8C                     _TMR0_SetInterruptHandler:
  2724                           	callstack 23
  2725   010B8C                     
  2726                           ;mcc_generated_files/tmr0.c: 173:     TMR0_InterruptHandler = InterruptHandler;
  2727                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
  2728   010B8C  50E1               	movf	fsr1l,w,c
  2729   010B8E  0FFD               	addlw	-3
  2730   010B90  6ED9               	movwf	fsr2l,c
  2731   010B92  50E2               	movf	fsr1h,w,c
  2732   010B94  6EDA               	movwf	fsr2h,c
  2733   010B96  0EFF               	movlw	255
  2734   010B98  22DA               	addwfc	fsr2h,f,c
  2735   010B9A  CFDE F056          	movff	postinc2,_TMR0_InterruptHandler
  2736   010B9E  CFDE F057          	movff	postinc2,_TMR0_InterruptHandler+1
  2737   010BA2  CFDD F058          	movff	postdec2,_TMR0_InterruptHandler+2
  2738   010BA6                     
  2739                           ; _TMR0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
  2740   010BA6  52E5               	movf	postdec1,f,c
  2741   010BA8  52E5               	movf	postdec1,f,c
  2742   010BAA  52E5               	movf	postdec1,f,c
  2743   010BAC  0012               	return		;funcret
  2744   010BAE                     __end_of_TMR0_SetInterruptHandler:
  2745                           	callstack 0
  2746                           
  2747 ;; *************** function _SPI2_Initialize *****************
  2748 ;; Defined at:
  2749 ;;		line 62 in file "mcc_generated_files/spi2.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;		None
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;		None
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1  [STACK] void 
  2756 ;; Registers used:
  2757 ;;		wreg, status,2
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;Total ram usage:        0 bytes
  2768 ;; Hardware stack levels used: 1
  2769 ;; Hardware stack levels required when called: 7
  2770 ;; This function calls:
  2771 ;;		Nothing
  2772 ;; This function is called by:
  2773 ;;		_SYSTEM_Initialize
  2774 ;; This function uses a reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text22
  2778   010C0E                     __ptext22:
  2779                           	callstack 0
  2780   010C0E                     _SPI2_Initialize:
  2781                           	callstack 22
  2782   010C0E                     
  2783                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
  2784   010C0E  0E40               	movlw	64
  2785   010C10  6E64               	movwf	100,c	;volatile
  2786                           
  2787                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
  2788   010C12  0E01               	movlw	1
  2789   010C14  6E63               	movwf	99,c	;volatile
  2790   010C16                     
  2791                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x00;
  2792   010C16  6A65               	clrf	101,c	;volatile
  2793   010C18                     
  2794                           ;mcc_generated_files/spi2.c: 68:     TRISDbits.TRISD6 = 0;
  2795   010C18  9C95               	bcf	149,6,c	;volatile
  2796   010C1A                     
  2797                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
  2798   010C1A  9A63               	bcf	99,5,c	;volatile
  2799   010C1C                     
  2800                           ; _SPI2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  2801   010C1C  0012               	return		;funcret
  2802   010C1E                     __end_of_SPI2_Initialize:
  2803                           	callstack 0
  2804                           
  2805 ;; *************** function _PIN_MANAGER_Initialize *****************
  2806 ;; Defined at:
  2807 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;		None
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1  [STACK] void 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;Total ram usage:        0 bytes
  2826 ;; Hardware stack levels used: 1
  2827 ;; Hardware stack levels required when called: 7
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_SYSTEM_Initialize
  2832 ;; This function uses a reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text23
  2836   010B0A                     __ptext23:
  2837                           	callstack 0
  2838   010B0A                     _PIN_MANAGER_Initialize:
  2839                           	callstack 22
  2840   010B0A                     
  2841                           ;mcc_generated_files/pin_manager.c: 55:     LATE = 0x00;
  2842   010B0A  6A8D               	clrf	141,c	;volatile
  2843                           
  2844                           ;mcc_generated_files/pin_manager.c: 56:     LATJ = 0x00;
  2845   010B0C  6A91               	clrf	145,c	;volatile
  2846                           
  2847                           ;mcc_generated_files/pin_manager.c: 57:     LATD = 0x00;
  2848   010B0E  6A8C               	clrf	140,c	;volatile
  2849                           
  2850                           ;mcc_generated_files/pin_manager.c: 58:     LATA = 0x00;
  2851   010B10  6A89               	clrf	137,c	;volatile
  2852                           
  2853                           ;mcc_generated_files/pin_manager.c: 59:     LATF = 0x00;
  2854   010B12  6A8E               	clrf	142,c	;volatile
  2855                           
  2856                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
  2857   010B14  6A8A               	clrf	138,c	;volatile
  2858                           
  2859                           ;mcc_generated_files/pin_manager.c: 61:     LATG = 0x00;
  2860   010B16  6A8F               	clrf	143,c	;volatile
  2861                           
  2862                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2863   010B18  6A8B               	clrf	139,c	;volatile
  2864                           
  2865                           ;mcc_generated_files/pin_manager.c: 63:     LATH = 0x00;
  2866   010B1A  6A90               	clrf	144,c	;volatile
  2867                           
  2868                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0xFF;
  2869   010B1C  6896               	setf	150,c	;volatile
  2870                           
  2871                           ;mcc_generated_files/pin_manager.c: 69:     TRISF = 0xFF;
  2872   010B1E  6897               	setf	151,c	;volatile
  2873   010B20                     
  2874                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x3F;
  2875   010B20  0E3F               	movlw	63
  2876   010B22  6E92               	movwf	146,c	;volatile
  2877   010B24                     
  2878                           ;mcc_generated_files/pin_manager.c: 71:     TRISG = 0xFF;
  2879   010B24  6898               	setf	152,c	;volatile
  2880   010B26                     
  2881                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
  2882   010B26  6893               	setf	147,c	;volatile
  2883   010B28                     
  2884                           ;mcc_generated_files/pin_manager.c: 73:     TRISH = 0xFF;
  2885   010B28  6899               	setf	153,c	;volatile
  2886   010B2A                     
  2887                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xFF;
  2888   010B2A  6894               	setf	148,c	;volatile
  2889                           
  2890                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xAF;
  2891   010B2C  0EAF               	movlw	175
  2892   010B2E  6E95               	movwf	149,c	;volatile
  2893   010B30                     
  2894                           ;mcc_generated_files/pin_manager.c: 76:     TRISJ = 0xFF;
  2895   010B30  689A               	setf	154,c	;volatile
  2896                           
  2897                           ;mcc_generated_files/pin_manager.c: 81:     ADCON1bits.PCFG = 0x00;
  2898   010B32  0EF0               	movlw	-16
  2899   010B34  16C1               	andwf	193,f,c	;volatile
  2900   010B36                     
  2901                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
  2902   010B36  0012               	return		;funcret
  2903   010B38                     __end_of_PIN_MANAGER_Initialize:
  2904                           	callstack 0
  2905                           
  2906 ;; *************** function _OSCILLATOR_Initialize *****************
  2907 ;; Defined at:
  2908 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1  [STACK] void 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels used: 1
  2928 ;; Hardware stack levels required when called: 7
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_SYSTEM_Initialize
  2933 ;; This function uses a reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text24
  2937   010C1E                     __ptext24:
  2938                           	callstack 0
  2939   010C1E                     _OSCILLATOR_Initialize:
  2940                           	callstack 22
  2941   010C1E                     
  2942                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x00;
  2943   010C1E  6AD3               	clrf	211,c	;volatile
  2944   010C20                     
  2945                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x50;
  2946   010C20  0E50               	movlw	80
  2947   010C22  6E9B               	movwf	155,c	;volatile
  2948   010C24                     
  2949                           ; _OSCILLATOR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 0, argsize = 0, vargsize = 0
  2950   010C24  0012               	return		;funcret
  2951   010C26                     __end_of_OSCILLATOR_Initialize:
  2952                           	callstack 0
  2953                           
  2954 ;; *************** function _INTERRUPT_Initialize *****************
  2955 ;; Defined at:
  2956 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1  [STACK] void 
  2963 ;; Registers used:
  2964 ;;		None
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used: 1
  2976 ;; Hardware stack levels required when called: 7
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_SYSTEM_Initialize
  2981 ;; This function uses a reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text25
  2985   010C2E                     __ptext25:
  2986                           	callstack 0
  2987   010C2E                     _INTERRUPT_Initialize:
  2988                           	callstack 22
  2989   010C2E                     
  2990                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  2991   010C2E  9ED0               	bcf	208,7,c	;volatile
  2992   010C30                     
  2993                           ; _INTERRUPT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2994   010C30  0012               	return		;funcret
  2995   010C32                     __end_of_INTERRUPT_Initialize:
  2996                           	callstack 0
  2997                           
  2998 ;; *************** function _INTERRUPT_InterruptManager *****************
  2999 ;; Defined at:
  3000 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, prodl, prodh
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;Total ram usage:       16 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 6
  3021 ;; This function calls:
  3022 ;;		_TMR0_ISR
  3023 ;; This function is called by:
  3024 ;;		Interrupt level 2
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	intcode
  3029   000008                     __pintcode:
  3030                           	callstack 0
  3031   000008                     _INTERRUPT_InterruptManager:
  3032                           	callstack 20
  3033                           
  3034                           ;incstack = 0
  3035   000008  CFFA F046          	movff	pclath,??_INTERRUPT_InterruptManager
  3036   00000C  CFFB F047          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3037   000010  CFE9 F048          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3038   000014  CFEA F049          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3039   000018  CFE1 F04A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3040   00001C  CFE2 F04B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3041   000020  CFD9 F04C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3042   000024  CFDA F04D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3043   000028  CFF3 F04E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3044   00002C  CFF4 F04F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3045   000030  C026  F050         	movff	btemp,??_INTERRUPT_InterruptManager+10
  3046   000034  C027  F051         	movff	btemp+1,??_INTERRUPT_InterruptManager+11
  3047   000038  C02E  F052         	movff	btemp+8,??_INTERRUPT_InterruptManager+12
  3048   00003C  C02F  F053         	movff	btemp+9,??_INTERRUPT_InterruptManager+13
  3049   000040  C030  F054         	movff	btemp+10,??_INTERRUPT_InterruptManager+14
  3050   000044  C031  F055         	movff	btemp+11,??_INTERRUPT_InterruptManager+15
  3051   000048  EE19  F02F         	lfsr	1,___inthi_sp
  3052   00004C                     
  3053                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  3054   00004C  AAF2               	btfss	242,5,c	;volatile
  3055   00004E  EF2B  F000         	goto	i2u74_41
  3056   000052  EF2D  F000         	goto	i2u74_40
  3057   000056                     i2u74_41:
  3058   000056  EF36  F000         	goto	i2l1037
  3059   00005A                     i2u74_40:
  3060   00005A  A4F2               	btfss	242,2,c	;volatile
  3061   00005C  EF32  F000         	goto	i2u75_41
  3062   000060  EF34  F000         	goto	i2u75_40
  3063   000064                     i2u75_41:
  3064   000064  EF36  F000         	goto	i2l1037
  3065   000068                     i2u75_40:
  3066   000068                     
  3067                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  3068   000068  EC9C  F085         	call	_TMR0_ISR	;wreg free
  3069   00006C                     i2l1037:
  3070   00006C  C055  F031         	movff	??_INTERRUPT_InterruptManager+15,btemp+11
  3071   000070  C054  F030         	movff	??_INTERRUPT_InterruptManager+14,btemp+10
  3072   000074  C053  F02F         	movff	??_INTERRUPT_InterruptManager+13,btemp+9
  3073   000078  C052  F02E         	movff	??_INTERRUPT_InterruptManager+12,btemp+8
  3074   00007C  C051  F027         	movff	??_INTERRUPT_InterruptManager+11,btemp+1
  3075   000080  C050  F026         	movff	??_INTERRUPT_InterruptManager+10,btemp
  3076   000084  C04F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3077   000088  C04E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3078   00008C  C04D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3079   000090  C04C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3080   000094  C04B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3081   000098  C04A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3082   00009C  C049  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3083   0000A0  C048  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3084   0000A4  C047  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3085   0000A8  C046  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3086   0000AC  0011               	retfie		f
  3087   0000AE                     __end_of_INTERRUPT_InterruptManager:
  3088                           	callstack 0
  3089                           
  3090 ;; *************** function _TMR0_ISR *****************
  3091 ;; Defined at:
  3092 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1  [STACK] void 
  3099 ;; Registers used:
  3100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, prodl, prodh
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;Total ram usage:        0 bytes
  3111 ;; Hardware stack levels used: 1
  3112 ;; Hardware stack levels required when called: 5
  3113 ;; This function calls:
  3114 ;;		_TMR0_CallBack
  3115 ;; This function is called by:
  3116 ;;		_INTERRUPT_InterruptManager
  3117 ;; This function uses a reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text27
  3121   010B38                     __ptext27:
  3122                           	callstack 0
  3123   010B38                     _TMR0_ISR:
  3124                           	callstack 20
  3125   010B38                     
  3126                           ;mcc_generated_files/tmr0.c: 138:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 141:     INTCONbits.TMR0IF = 0;
  3127   010B38  94F2               	bcf	242,2,c	;volatile
  3128                           
  3129                           ;mcc_generated_files/tmr0.c: 145:     TMR0H = timer0ReloadVal >> 8;
  3130   010B3A  C023  FFD7         	movff	_timer0ReloadVal+1,4055	;volatile
  3131                           
  3132                           ;mcc_generated_files/tmr0.c: 146:     TMR0L = (uint8_t) timer0ReloadVal;
  3133   010B3E  C022  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  3134   010B42                     
  3135                           ;mcc_generated_files/tmr0.c: 147:     carState.ms20Elapsed = 1;
  3136   010B42  0E01               	movlw	1
  3137   010B44  6E17               	movwf	(_carState+22)^0,c
  3138   010B46                     
  3139                           ;mcc_generated_files/tmr0.c: 150:     if (++CountCallBack >= 1)
  3140   010B46  4A20               	infsnz	TMR0_ISR@CountCallBack^0,f,c	;volatile
  3141   010B48  2A21               	incf	(TMR0_ISR@CountCallBack+1)^0,f,c	;volatile
  3142   010B4A  5020               	movf	TMR0_ISR@CountCallBack^0,w,c	;volatile
  3143   010B4C  1021               	iorwf	(TMR0_ISR@CountCallBack+1)^0,w,c	;volatile
  3144   010B4E  B4D8               	btfsc	status,2,c
  3145   010B50  EFAC  F085         	goto	u67_41
  3146   010B54  EFAE  F085         	goto	u67_40
  3147   010B58                     u67_41:
  3148   010B58  EFB2  F085         	goto	l1083
  3149   010B5C                     u67_40:
  3150   010B5C                     
  3151                           ;mcc_generated_files/tmr0.c: 151:     {;mcc_generated_files/tmr0.c: 153:         TMR0_Ca
      +                          llBack();
  3152   010B5C  EC6B  F085         	call	_TMR0_CallBack	;wreg free
  3153   010B60                     
  3154                           ;mcc_generated_files/tmr0.c: 156:         CountCallBack = 0;
  3155   010B60  6A20               	clrf	TMR0_ISR@CountCallBack^0,c	;volatile
  3156   010B62  6A21               	clrf	(TMR0_ISR@CountCallBack+1)^0,c	;volatile
  3157   010B64                     l1083:
  3158                           
  3159                           ; _TMR0_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  3160   010B64  0012               	return		;funcret
  3161   010B66                     __end_of_TMR0_ISR:
  3162                           	callstack 0
  3163                           
  3164 ;; *************** function _TMR0_CallBack *****************
  3165 ;; Defined at:
  3166 ;;		line 162 in file "mcc_generated_files/tmr0.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;		None
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1  [STACK] void 
  3173 ;; Registers used:
  3174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, prodl, prodh
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;Total ram usage:        0 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; Hardware stack levels required when called: 4
  3187 ;; This function calls:
  3188 ;;		NULL
  3189 ;;		_TMR0_DefaultInterruptHandler
  3190 ;;		_XF_decrementAndQueueTimers
  3191 ;; This function is called by:
  3192 ;;		_TMR0_ISR
  3193 ;; This function uses a reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text28
  3197   010AD6                     __ptext28:
  3198                           	callstack 0
  3199   010AD6                     _TMR0_CallBack:
  3200                           	callstack 20
  3201   010AD6                     
  3202                           ;mcc_generated_files/tmr0.c: 165:     carState.secondElapsed=1;
  3203   010AD6  0E01               	movlw	1
  3204   010AD8  6E16               	movwf	(_carState+21)^0,c
  3205   010ADA                     
  3206                           ;mcc_generated_files/tmr0.c: 166:     if(TMR0_InterruptHandler)
  3207   010ADA  5056               	movf	_TMR0_InterruptHandler^0,w,c
  3208   010ADC  1057               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  3209   010ADE  1058               	iorwf	(_TMR0_InterruptHandler+2)^0,w,c
  3210   010AE0  B4D8               	btfsc	status,2,c
  3211   010AE2  EF75  F085         	goto	u62_41
  3212   010AE6  EF77  F085         	goto	u62_40
  3213   010AEA                     u62_41:
  3214   010AEA  EF84  F085         	goto	l1087
  3215   010AEE                     u62_40:
  3216   010AEE                     
  3217                           ;mcc_generated_files/tmr0.c: 167:     {;mcc_generated_files/tmr0.c: 168:         TMR0_In
      +                          terruptHandler();
  3218   010AEE  D802               	call	u63_48
  3219   010AF0  EF84  F085         	goto	u63_49
  3220   010AF4                     u63_48:
  3221   010AF4  0005               	push	
  3222   010AF6  6EFA               	movwf	pclath,c
  3223   010AF8  5056               	movf	_TMR0_InterruptHandler^0,w,c
  3224   010AFA  6EFD               	movwf	tosl,c
  3225   010AFC  5057               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  3226   010AFE  6EFE               	movwf	tosh,c
  3227   010B00  5058               	movf	(_TMR0_InterruptHandler+2)^0,w,c
  3228   010B02  6EFF               	movwf	tosu,c
  3229   010B04  50FA               	movf	pclath,w,c
  3230   010B06  0012               	return		;indir
  3231   010B08                     u63_49:
  3232   010B08                     l1087:
  3233                           
  3234                           ; _TMR0_CallBack: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  3235   010B08  0012               	return		;funcret
  3236   010B0A                     __end_of_TMR0_CallBack:
  3237                           	callstack 0
  3238                           
  3239 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3240 ;; Defined at:
  3241 ;;		line 176 in file "mcc_generated_files/tmr0.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;		None
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1  [STACK] void 
  3248 ;; Registers used:
  3249 ;;		None
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;Total ram usage:        0 bytes
  3260 ;; Hardware stack levels used: 1
  3261 ;; This function calls:
  3262 ;;		Nothing
  3263 ;; This function is called by:
  3264 ;;		_TMR0_Initialize
  3265 ;;		_TMR0_CallBack
  3266 ;; This function uses a reentrant model
  3267 ;;
  3268                           
  3269                           	psect	text29
  3270   010C34                     __ptext29:
  3271                           	callstack 0
  3272   010C34                     _TMR0_DefaultInterruptHandler:
  3273                           	callstack 23
  3274   010C34                     
  3275                           ; _TMR0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
  3276   010C34  0012               	return		;funcret
  3277   010C36                     __end_of_TMR0_DefaultInterruptHandler:
  3278                           	callstack 0
  3279                           
  3280 ;; *************** function _XF_decrementAndQueueTimers *****************
  3281 ;; Defined at:
  3282 ;;		line 199 in file "xf/xf.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;		None
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  dummy           1  [STACK] unsigned char 
  3287 ;;  i               1  [STACK] unsigned char 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1  [STACK] void 
  3290 ;; Registers used:
  3291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;Total ram usage:        0 bytes
  3302 ;; Hardware stack levels used: 1
  3303 ;; Hardware stack levels required when called: 3
  3304 ;; This function calls:
  3305 ;;		_XF_pushEvent
  3306 ;;		_XF_unscheduleTimer
  3307 ;; This function is called by:
  3308 ;;		_main
  3309 ;;		_TMR0_CallBack
  3310 ;; This function uses a reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text30
  3314   01052A                     __ptext30:
  3315                           	callstack 0
  3316   01052A                     _XF_decrementAndQueueTimers:
  3317                           	callstack 0
  3318                           
  3319                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3320   01052A  52E6               	movf	postinc1,f,c
  3321   01052C  52E6               	movf	postinc1,f,c
  3322   01052E                     
  3323                           ;xf/xf.c: 201:     uint8_t i;;xf/xf.c: 202:     for (i=0; i<12; i++)
  3324                           ;stkvar	_i @ sp[(-2)+1]
  3325   01052E  0EFF               	movlw	-1
  3326   010530  6AE3               	clrf	plusw1,c
  3327   010532                     l2572:
  3328                           
  3329                           ;xf/xf.c: 203:     {;xf/xf.c: 204:         if (theXF.timerList[i].ev.id != 0)
  3330                           ;stkvar	_i @ sp[(-2)+1]
  3331   010532  0EFF               	movlw	-1
  3332   010534  50E3               	movf	plusw1,w,c
  3333   010536  0D08               	mullw	8
  3334   010538  0ECA               	movlw	low (_theXF+2)
  3335   01053A  24F3               	addwf	243,w,c
  3336   01053C  6ED9               	movwf	fsr2l,c
  3337   01053E  0E02               	movlw	high (_theXF+2)
  3338   010540  20F4               	addwfc	prodh,w,c
  3339   010542  6EDA               	movwf	fsr2h,c
  3340   010544  50DF               	movf	indf2,w,c
  3341   010546  B4D8               	btfsc	status,2,c
  3342   010548  EFA8  F082         	goto	u57_41
  3343   01054C  EFAA  F082         	goto	u57_40
  3344   010550                     u57_41:
  3345   010550  EF04  F083         	goto	l2584
  3346   010554                     u57_40:
  3347   010554                     
  3348                           ;xf/xf.c: 205:         {;xf/xf.c: 206:             theXF.timerList[i].tm-=10;
  3349                           ;stkvar	_i @ sp[(-2)+1]
  3350   010554  0EFF               	movlw	-1
  3351   010556  50E3               	movf	plusw1,w,c
  3352   010558  0D08               	mullw	8
  3353   01055A  0EC8               	movlw	low _theXF
  3354   01055C  24F3               	addwf	243,w,c
  3355   01055E  6ED9               	movwf	fsr2l,c
  3356   010560  0E02               	movlw	high _theXF
  3357   010562  20F4               	addwfc	prodh,w,c
  3358   010564  6EDA               	movwf	fsr2h,c
  3359   010566  0E0A               	movlw	10
  3360   010568  5EDE               	subwf	postinc2,f,c
  3361   01056A  0E00               	movlw	0
  3362   01056C  5ADD               	subwfb	postdec2,f,c
  3363   01056E                     
  3364                           ;xf/xf.c: 207:             if (theXF.timerList[i].tm ==0)
  3365                           ;stkvar	_i @ sp[(-2)+1]
  3366   01056E  0EFF               	movlw	-1
  3367   010570  50E3               	movf	plusw1,w,c
  3368   010572  0D08               	mullw	8
  3369   010574  0EC8               	movlw	low _theXF
  3370   010576  24F3               	addwf	243,w,c
  3371   010578  6ED9               	movwf	fsr2l,c
  3372   01057A  0E02               	movlw	high _theXF
  3373   01057C  20F4               	addwfc	prodh,w,c
  3374   01057E  6EDA               	movwf	fsr2h,c
  3375   010580  50DE               	movf	postinc2,w,c
  3376   010582  10DE               	iorwf	postinc2,w,c
  3377   010584  A4D8               	btfss	status,2,c
  3378   010586  EFC7  F082         	goto	u58_41
  3379   01058A  EFC9  F082         	goto	u58_40
  3380   01058E                     u58_41:
  3381   01058E  EF04  F083         	goto	l2584
  3382   010592                     u58_40:
  3383   010592                     
  3384                           ;xf/xf.c: 208:             {;xf/xf.c: 209:                 uint8_t dummy;;xf/xf.c: 210: 
      +                                          if (XF_pushEvent(theXF.timerList[i].ev, 1, &dummy) == 1)
  3385                           ;stkvar	_dummy @ sp[(-2)+0]
  3386   010592  0EFE               	movlw	254
  3387   010594  24E1               	addwf	fsr1l,w,c
  3388   010596  6E26               	movwf	btemp^0,c
  3389   010598  0EFF               	movlw	255
  3390   01059A  20E2               	addwfc	fsr1h,w,c
  3391   01059C  6E27               	movwf	(btemp+1)^0,c
  3392   01059E  C026  FFE6         	movff	btemp,postinc1
  3393   0105A2  C027  FFE6         	movff	btemp+1,postinc1
  3394   0105A6  0E01               	movlw	1
  3395   0105A8  6EE6               	movwf	postinc1,c
  3396                           
  3397                           ;stkvar	_i @ sp[(-5)+1]
  3398   0105AA  0EFC               	movlw	-4
  3399   0105AC  50E3               	movf	plusw1,w,c
  3400   0105AE  0D08               	mullw	8
  3401   0105B0  0ECA               	movlw	low (_theXF+2)
  3402   0105B2  24F3               	addwf	243,w,c
  3403   0105B4  6ED9               	movwf	fsr2l,c
  3404   0105B6  0E02               	movlw	high (_theXF+2)
  3405   0105B8  20F4               	addwfc	prodh,w,c
  3406   0105BA  6EDA               	movwf	fsr2h,c
  3407   0105BC  0E06               	movlw	6
  3408   0105BE                     u59_41:
  3409   0105BE  CFDE FFE6          	movff	postinc2,postinc1
  3410   0105C2  2CE8               	decfsz	wreg,w,c
  3411   0105C4  EFDF  F082         	goto	u59_41
  3412   0105C8  EC00  F080         	call	_XF_pushEvent	;wreg free
  3413   0105CC  0426               	decf	btemp^0,w,c
  3414   0105CE  A4D8               	btfss	status,2,c
  3415   0105D0  EFEC  F082         	goto	u60_41
  3416   0105D4  EFEE  F082         	goto	u60_40
  3417   0105D8                     u60_41:
  3418   0105D8  EFF7  F082         	goto	l2582
  3419   0105DC                     u60_40:
  3420   0105DC                     
  3421                           ;xf/xf.c: 211:                 {;xf/xf.c: 212:                   XF_unscheduleTimer(i, 1
      +                          );
  3422   0105DC  0E01               	movlw	1
  3423   0105DE  6EE6               	movwf	postinc1,c
  3424                           
  3425                           ;stkvar	_i @ sp[(-3)+1]
  3426   0105E0  0EFE               	movlw	-2
  3427   0105E2  50E3               	movf	plusw1,w,c
  3428   0105E4  6EE6               	movwf	postinc1,c
  3429   0105E6  ECAA  F084         	call	_XF_unscheduleTimer	;wreg free
  3430                           
  3431                           ;xf/xf.c: 213:                 }
  3432   0105EA  EF04  F083         	goto	l2584
  3433   0105EE                     l2582:
  3434                           
  3435                           ;xf/xf.c: 215:                 {;xf/xf.c: 216:                   theXF.timerList[i].tm=1
      +                          ;
  3436                           ;stkvar	_i @ sp[(-2)+1]
  3437   0105EE  0EFF               	movlw	-1
  3438   0105F0  50E3               	movf	plusw1,w,c
  3439   0105F2  0D08               	mullw	8
  3440   0105F4  0EC8               	movlw	low _theXF
  3441   0105F6  24F3               	addwf	243,w,c
  3442   0105F8  6ED9               	movwf	fsr2l,c
  3443   0105FA  0E02               	movlw	high _theXF
  3444   0105FC  20F4               	addwfc	prodh,w,c
  3445   0105FE  6EDA               	movwf	fsr2h,c
  3446   010600  0E01               	movlw	1
  3447   010602  6EDE               	movwf	postinc2,c
  3448   010604  0E00               	movlw	0
  3449   010606  6EDD               	movwf	postdec2,c
  3450   010608                     l2584:
  3451                           
  3452                           ;xf/xf.c: 220:     }
  3453                           ;stkvar	_i @ sp[(-2)+1]
  3454   010608  0EFF               	movlw	-1
  3455   01060A  2AE3               	incf	plusw1,f,c
  3456   01060C                     
  3457                           ;stkvar	_i @ sp[(-2)+1]
  3458   01060C  0EFF               	movlw	-1
  3459   01060E  CFE3 F026          	movff	plusw1,btemp
  3460   010612  0E0B               	movlw	11
  3461   010614  6426               	cpfsgt	btemp^0,c
  3462   010616  EF0F  F083         	goto	u61_41
  3463   01061A  EF11  F083         	goto	u61_40
  3464   01061E                     u61_41:
  3465   01061E  EF99  F082         	goto	l2572
  3466   010622                     u61_40:
  3467   010622                     
  3468                           ; _XF_decrementAndQueueTimers: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0
      +                           parsize = 0, argsize = 0, vargsize = 0
  3469   010622  52E5               	movf	postdec1,f,c
  3470   010624  52E5               	movf	postdec1,f,c
  3471   010626  0012               	return		;funcret
  3472   010628                     __end_of_XF_decrementAndQueueTimers:
  3473                           	callstack 0
  3474                           
  3475 ;; *************** function _XF_unscheduleTimer *****************
  3476 ;; Defined at:
  3477 ;;		line 185 in file "xf/xf.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  id              1  [STACK] unsigned char 
  3480 ;;  inISR           1  [STACK] _Bool 
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;		None
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  1  [STACK] void 
  3485 ;; Registers used:
  3486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11, prodl, prodh
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;Total ram usage:        0 bytes
  3497 ;; Hardware stack levels used: 1
  3498 ;; Hardware stack levels required when called: 1
  3499 ;; This function calls:
  3500 ;;		_ENTERCRITICAL
  3501 ;;		_Event_init
  3502 ;;		_LEAVECRITICAL
  3503 ;; This function is called by:
  3504 ;;		_XF_decrementAndQueueTimers
  3505 ;; This function uses a reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text31
  3509   010954                     __ptext31:
  3510                           	callstack 0
  3511   010954                     _XF_unscheduleTimer:
  3512                           	callstack 21
  3513   010954                     
  3514                           ;xf/xf.c: 185: void XF_unscheduleTimer(uint8_t id, _Bool inISR);xf/xf.c: 186: {;xf/xf.c:
      +                           187:     ENTERCRITICAL(inISR);
  3515                           ;stkvar	_inISR @ sp[(0)+-2]
  3516   010954  0EFE               	movlw	-2
  3517   010956  50E3               	movf	plusw1,w,c
  3518   010958  6EE6               	movwf	postinc1,c
  3519   01095A  ECF0  F085         	call	_ENTERCRITICAL	;wreg free
  3520   01095E                     
  3521                           ;xf/xf.c: 188:     theXF.timerList[id].tm = 0;
  3522                           ;stkvar	_id @ sp[(0)+-1]
  3523   01095E  0EFF               	movlw	-1
  3524   010960  50E3               	movf	plusw1,w,c
  3525   010962  0D08               	mullw	8
  3526   010964  0EC8               	movlw	low _theXF
  3527   010966  24F3               	addwf	243,w,c
  3528   010968  6ED9               	movwf	fsr2l,c
  3529   01096A  0E02               	movlw	high _theXF
  3530   01096C  20F4               	addwfc	prodh,w,c
  3531   01096E  6EDA               	movwf	fsr2h,c
  3532   010970  6ADE               	clrf	postinc2,c
  3533   010972  6ADD               	clrf	postdec2,c
  3534   010974                     
  3535                           ;xf/xf.c: 189:     Event_init(&(theXF.timerList[id].ev));
  3536                           ;stkvar	_id @ sp[(0)+-1]
  3537   010974  0EFF               	movlw	-1
  3538   010976  50E3               	movf	plusw1,w,c
  3539   010978  0D08               	mullw	8
  3540   01097A  0ECA               	movlw	low (_theXF+2)
  3541   01097C  24F3               	addwf	243,w,c
  3542   01097E  6E30               	movwf	(btemp+10)^0,c
  3543   010980  0E02               	movlw	high (_theXF+2)
  3544   010982  20F4               	addwfc	prodh,w,c
  3545   010984  6E31               	movwf	(btemp+11)^0,c
  3546   010986  C030  FFE6         	movff	btemp+10,postinc1
  3547   01098A  C031  FFE6         	movff	btemp+11,postinc1
  3548   01098E  EC83  F084         	call	_Event_init	;wreg free
  3549   010992                     
  3550                           ;xf/xf.c: 190:     LEAVECRITICAL(inISR);
  3551                           ;stkvar	_inISR @ sp[(0)+-2]
  3552   010992  0EFE               	movlw	-2
  3553   010994  50E3               	movf	plusw1,w,c
  3554   010996  6EE6               	movwf	postinc1,c
  3555   010998  ECE4  F085         	call	_LEAVECRITICAL	;wreg free
  3556   01099C                     
  3557                           ; _XF_unscheduleTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  3558   01099C  52E5               	movf	postdec1,f,c
  3559   01099E  52E5               	movf	postdec1,f,c
  3560   0109A0  0012               	return		;funcret
  3561   0109A2                     __end_of_XF_unscheduleTimer:
  3562                           	callstack 0
  3563                           
  3564                           	psect	text32
  3565   000000                     __ptext32:
  3566                           	callstack 0
  3567   000000                     
  3568                           	psect	rparam
  3569   000000                     
  3570                           	psect	temp
  3571   000026                     btemp:
  3572                           	callstack 0
  3573   000026                     	ds	32
  3574   000000                     wtemp0	set	btemp
  3575   000000                     wtemp1	set	btemp+2
  3576   000000                     wtemp2	set	btemp+4
  3577   000000                     wtemp3	set	btemp+6
  3578   000000                     wtemp4	set	btemp+8
  3579   000000                     wtemp5	set	btemp+10
  3580   000000                     wtemp8	set	btemp+1
  3581   000000                     ttemp0	set	btemp
  3582   000000                     ttemp1	set	btemp+3
  3583   000000                     ttemp2	set	btemp+6
  3584   000000                     ttemp3	set	btemp+9
  3585   000000                     ttemp5	set	btemp+1
  3586   000000                     ttemp6	set	btemp+4
  3587   000000                     ttemp7	set	btemp+8
  3588   000000                     ltemp0	set	btemp
  3589   000000                     ltemp1	set	btemp+4
  3590   000000                     ltemp2	set	btemp+8
  3591   000000                     lltemp0	set	btemp
  3592   000000                     lltemp1	set	btemp+8
  3593   000000                     lltemp2	set	btemp+16
  3594   000000                     lltemp3	set	btemp+24
  3595                           
  3596                           	psect	config
  3597                           
  3598                           ;Config register CONFIG1L @ 0x1FFF8
  3599                           ;	Watchdog Timer Enable bit
  3600                           ;	WDT = OFF, WDT disabled (control is placed on SWDTEN bit)
  3601                           ;	Stack Overflow/Underflow Reset Enable bit
  3602                           ;	STVR = ON, Reset on stack overflow/underflow enabled
  3603                           ;	Extended Instruction Set Enable bit
  3604                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3605                           ;	Background Debugger Enable bit
  3606                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
  3607   01FFF8                     	org	131064
  3608   01FFF8  A0                 	db	160
  3609                           
  3610                           ;Config register CONFIG1H @ 0x1FFF9
  3611                           ;	Code Protection bit
  3612                           ;	CP0 = OFF, Program memory is not code-protected
  3613   01FFF9                     	org	131065
  3614   01FFF9  F4                 	db	244
  3615                           
  3616                           ;Config register CONFIG2L @ 0x1FFFA
  3617                           ;	Oscillator Selection bits
  3618                           ;	FOSC = HSPLL, HS oscillator, PLL enabled and under software control
  3619                           ;	Default/Reset System Clock Select bit
  3620                           ;	FOSC2 = ON, Clock selected by FOSC1:FOSC0 as system clock is enabled when OSCCON<1:0> 
      +                          = 00
  3621                           ;	Fail-Safe Clock Monitor Enable
  3622                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3623                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  3624                           ;	IESO = ON, Two-Speed Start-up enabled
  3625   01FFFA                     	org	131066
  3626   01FFFA  C5                 	db	197
  3627                           
  3628                           ;Config register CONFIG2H @ 0x1FFFB
  3629                           ;	Watchdog Timer Postscaler Select bits
  3630                           ;	WDTPS = 32768, 1:32768
  3631   01FFFB                     	org	131067
  3632   01FFFB  FF                 	db	255
  3633                           
  3634                           ;Config register CONFIG3L @ 0x1FFFC
  3635                           ;	External Address Bus Shift Enable bit
  3636                           ;	EASHFT = ON, Address shifting enabled; address on external bus is offset to start at 0
      +                          00000h
  3637                           ;	External Memory Bus
  3638                           ;	MODE = MM, Microcontroller mode, external bus disabled
  3639                           ;	Data Bus Width Select bit
  3640                           ;	BW = 16, 16-Bit Data Width mode
  3641                           ;	External Bus Wait Enable bit
  3642                           ;	WAIT = OFF, Wait states for operations on external memory bus disabled
  3643   01FFFC                     	org	131068
  3644   01FFFC  F8                 	db	248
  3645                           
  3646                           ;Config register CONFIG3H @ 0x1FFFD
  3647                           ;	ECCP2 MUX bit
  3648                           ;	CCP2MX = ON, ECCP2/P2A is multiplexed with RC1
  3649                           ;	ECCP MUX bit
  3650                           ;	ECCPMX = ON, ECCP1 outputs (P1B/P1C) are multiplexed with RE6 and RE5; ECCP3 outputs (
      +                          P3B/P3C) are multiplexed with RE4 and RE3
  3651                           ;	Ethernet LED Enable bit
  3652                           ;	ETHLED = ON, RA0/RA1 are multiplexed with LEDA/LEDB when Ethernet module is enabled an
      +                          d function as I/O when Ethernet is disabled
  3653   01FFFD                     	org	131069
  3654   01FFFD  F7                 	db	247
  3655                           tosu	equ	0xFFF
  3656                           tosh	equ	0xFFE
  3657                           tosl	equ	0xFFD
  3658                           stkptr	equ	0xFFC
  3659                           pclatu	equ	0xFFB
  3660                           pclath	equ	0xFFA
  3661                           pcl	equ	0xFF9
  3662                           tblptru	equ	0xFF8
  3663                           tblptrh	equ	0xFF7
  3664                           tblptrl	equ	0xFF6
  3665                           tablat	equ	0xFF5
  3666                           prodh	equ	0xFF4
  3667                           prodl	equ	0xFF3
  3668                           indf0	equ	0xFEF
  3669                           postinc0	equ	0xFEE
  3670                           postdec0	equ	0xFED
  3671                           preinc0	equ	0xFEC
  3672                           plusw0	equ	0xFEB
  3673                           fsr0h	equ	0xFEA
  3674                           fsr0l	equ	0xFE9
  3675                           wreg	equ	0xFE8
  3676                           indf1	equ	0xFE7
  3677                           postinc1	equ	0xFE6
  3678                           postdec1	equ	0xFE5
  3679                           preinc1	equ	0xFE4
  3680                           plusw1	equ	0xFE3
  3681                           fsr1h	equ	0xFE2
  3682                           fsr1l	equ	0xFE1
  3683                           bsr	equ	0xFE0
  3684                           indf2	equ	0xFDF
  3685                           postinc2	equ	0xFDE
  3686                           postdec2	equ	0xFDD
  3687                           preinc2	equ	0xFDC
  3688                           plusw2	equ	0xFDB
  3689                           fsr2h	equ	0xFDA
  3690                           fsr2l	equ	0xFD9
  3691                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         715
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     16      56
    BANK0           160      0       0
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    DRV_CANFDSPI_ReadHalfWord$2	PTR unsigned short  size(2) Largest target is 2
		 -> intEnables(STACK[2]), intFlags(STACK[2]), 

    DRV_CANFDSPI_ReadWord$2	PTR unsigned long  size(2) Largest target is 4
		 -> ciFifoSta(STACK[4]), ciTrec(STACK[4]), reg(STACK[4]), 

    DRV_CANFDSPI_WriteWordArray$2	PTR unsigned long  size(2) Largest target is 8
		 -> w(STACK[8]), 

    ev	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    ev$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), NULL(NULL[0]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), XF_decrementAndQueueTimers(), 

    me	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 278
		 -> ev(STACK[6]), theXF(BIGRAM[278]), theXF$eventQueue(BIGRAM[180]), theXF$timerList(BIGRAM[96]), 

    me$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), NULL(NULL[0]), 

    processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), 

    processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), 

    processEvent$0	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    processEvent$0	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    S4916$1$0	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    S4916Event_$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), NULL(NULL[0]), 

    sp__Event_getPE	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), NULL(NULL[0]), 

    sp__Event_getPE$0	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    theXF$eventQueue$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), NULL(NULL[0]), 

    theXF$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 0
		 -> lightControl_Process(), NULL(NULL[0]), 

    theXF$timerList$ev$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), NULL(NULL[0]), 

    tmid	PTR unsigned char  size(2) Largest target is 1
		 -> dummy(STACK[1]), tmid(STACK[1]), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), XF_decrementAndQueueTimers(), NULL(), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[17]), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), 

    ?_XF_popEvent$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2214
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                     _XF_executeOnce
                            _XF_init
                            _XF_post
                     _updateCarState
 ---------------------------------------------------------------------------------
 (1) _updateCarState                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _XF_post                                             13     7      6    1359
                         _Event_init
                     _Event_setDelay
                        _Event_setId
                        _Event_setPE
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (9) _XF_pushEvent                                        12     3      9     982
                      _ENTERCRITICAL
                     _Event_getDelay
                     _Event_setDelay
                      _LEAVECRITICAL
                   _XF_scheduleTimer
                            ___awmod
 ---------------------------------------------------------------------------------
 (10) _XF_scheduleTimer                                   10     1      9     266
                      _ENTERCRITICAL
                      _LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (10) _Event_setDelay                                      4     0      4      44
 ---------------------------------------------------------------------------------
 (10) _Event_getDelay                                      2     0      2      22
 ---------------------------------------------------------------------------------
 (2) _Event_setPE                                          5     0      5      30
 ---------------------------------------------------------------------------------
 (2) _Event_setId                                          3     0      3      30
 ---------------------------------------------------------------------------------
 (1) _XF_init                                              2     2      0     224
                         _Event_init
 ---------------------------------------------------------------------------------
 (10) _Event_init                                          2     0      2      66
 ---------------------------------------------------------------------------------
 (1) _XF_executeOnce                                       6     6      0     601
                        _XF_popEvent
               _lightControl_Process *
 ---------------------------------------------------------------------------------
 (2) _lightControl_Process                                 2     0      2      60
              _lightContol_BackLight
             _lightContol_FrontLight
 ---------------------------------------------------------------------------------
 (3) _lightContol_FrontLight                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) _lightContol_BackLight                                1     0      1       0
 ---------------------------------------------------------------------------------
 (2) _XF_popEvent                                         12     6      6     474
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (10) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (10) _LEAVECRITICAL                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (10) _ENTERCRITICAL                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      15
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          16    16      0    1382
                                              0 COMRAM    16    16      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0    1382
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0    1382
                                NULL *
       _TMR0_DefaultInterruptHandler *
         _XF_decrementAndQueueTimers *
 ---------------------------------------------------------------------------------
 (8) _XF_decrementAndQueueTimers                           2     2      0    1382
                       _XF_pushEvent
                 _XF_unscheduleTimer
 ---------------------------------------------------------------------------------
 (9) _XF_unscheduleTimer                                   2     0      2     198
                      _ENTERCRITICAL
                         _Event_init
                      _LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (10) _Event_init                                          2     0      2      66
 ---------------------------------------------------------------------------------
 (9) _XF_pushEvent                                        12     3      9     982
                      _ENTERCRITICAL
                     _Event_getDelay
                     _Event_setDelay
                      _LEAVECRITICAL
                   _XF_scheduleTimer
                            ___awmod
 ---------------------------------------------------------------------------------
 (10) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (10) _XF_scheduleTimer                                   10     1      9     266
                      _ENTERCRITICAL
                      _LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (10) _LEAVECRITICAL                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (10) _ENTERCRITICAL                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (10) _Event_setDelay                                      4     0      4      44
 ---------------------------------------------------------------------------------
 (10) _Event_getDelay                                      2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _XF_executeOnce
     _XF_popEvent
       _ENTERCRITICAL
       _LEAVECRITICAL
       ___awmod
     _lightControl_Process *
       _lightContol_BackLight
       _lightContol_FrontLight
   _XF_init
     _Event_init
   _XF_post
     _Event_init
     _Event_setDelay
     _Event_setId
     _Event_setPE
     _XF_pushEvent
       _ENTERCRITICAL
       _Event_getDelay
       _Event_setDelay
       _LEAVECRITICAL
       _XF_scheduleTimer
         _ENTERCRITICAL
         _LEAVECRITICAL
       ___awmod
   _updateCarState

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
       _XF_decrementAndQueueTimers *
         _XF_pushEvent
           _ENTERCRITICAL
           _Event_getDelay
           _Event_setDelay
           _LEAVECRITICAL
           _XF_scheduleTimer
             _ENTERCRITICAL
             _LEAVECRITICAL
           ___awmod
         _XF_unscheduleTimer
           _ENTERCRITICAL
           _Event_init
           _LEAVECRITICAL

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7F      0     116      48        7.5%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFR           80      0       0      47        0.0%
BITBANK14           80      0       0      33        0.0%
BANK14              80      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      46        0.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     10      38       1       88.9%
BITBIGSFR_1lhhl     21      0       0      44        0.0%
BITBIGSFR_1hhhl     1C      0       0      42        0.0%
BITBIGSFR_1hhhh     1A      0       0      38        0.0%
BITBIGSFR_1hhhl      E      0       0      41        0.0%
BITBIGSFR_1hhhh      D      0       0      37        0.0%
BITBIGSFR_1hhhl      8      0       0      43        0.0%
BITBIGSFR_1hhhl      2      0       0      40        0.0%
BITBIGSFR_1ll        2      0       0      45        0.0%
BITBIGSFR_1hhhh      1      0       0      39        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0      56       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C8      32        0.0%
DATA                 0      0     334       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Feb 05 11:17:44 2024

              __end_of_updateCarState 0C34                       _timer0ReloadVal 0022  
                                 l974 0C0C                                   l977 0C24  
                                 u300 0472                                   u301 046E  
                                 u310 04BE                                   u311 04BA  
                                 u410 0BF2                                   u411 0BEE  
                                 u420 0BDA                                   u500 021A  
                                 u421 0BD6                                   u501 0216  
                                 u510 0266                                   u270 0404  
                                 u430 07EE                                   u511 0262  
                                 u271 0400                                   u431 07EA  
                                 u520 0278                                   u280 042A  
                                 u521 0274                                   u281 0426  
                                 u441 0836                                   u290 0450  
                                 u450 085C                                   u530 0044  
                                 u291 044C                                   u451 0858  
                                 u531 0040                                   u460 0168  
                                 u461 0164                                   u541 0078  
                                 u701 06DC                                   u470 018A  
                                 u550 00F2                                   u471 0186  
                                 u551 00EE                                   u480 01B0  
                                 u640 0736                                   u720 08C2  
                                 u481 01AC                                   u641 0732  
                                 u721 08BE                                   u561 0126  
                                 u490 01EC                                   u491 01E8  
                                 u680 0320                                   u681 031C  
                                 u738 08E8                                   u690 03D0  
                                 u739 08FC                                   u691 03CC  
                                 prod 0FF3                                   tosl 0FFD  
                                 wreg 0FE8                                  l1030 0C30  
                                l1201 03D0                                  l1018 0B36  
                                l1114 0C1C                                  l1202 03DC  
                                l1212 07B2                                  l1221 099C  
                                l1230 0622                                  l1062 0A9C  
                                l1160 0A5A                                  l1208 0146  
                                l1241 06EA                                  l1090 0BA6  
                                l1234 0BF4                                  l1410 0524  
                                l1218 086C                                  l1083 0B64  
                                l1172 0ACC                                  l1093 0C34  
                                l1245 08FC                                  l1157 094E  
                                l1238 0BDC                                  l1166 0BC0  
                                l1087 0B08                                  l1175 0B86  
                                l2320 03E6                                  l1409 04C2  
                                l2242 0C2E                                  l2250 0C1A  
                                l2218 0B8C                                  l2322 0404  
                                l1419 0C32                                  l2260 0B28  
                                l2252 0B0A                                  l2244 0C0E  
                                l2500 018A                                  l2332 0454  
                                l2324 040C                                  l2340 04AC  
                                l2262 0B2A                                  l2254 0B20  
                                l2246 0C16                                  l2510 01DC  
                                l2502 0196                                  l2350 04F2  
                                l2334 0472                                  l2326 042A  
                                l2318 03E2                                  l1391 0C2A  
                                l2264 0B30                                  l2256 0B24  
                                l2248 0C18                                  l2600 0A98  
                                l2512 01EC                                  l2504 01B0  
                                l2520 0266                                  l2344 04CA  
                                l2328 0432                                  l2602 0AD6  
                                l2266 0C1E                                  l2258 0B26  
                                l2450 0BE0                                  l2522 0278  
                                l2514 021A                                  l2506 01BA  
                                l2610 0700                                  l2346 04DE  
                                l2338 047A                                  l2290 0A28  
                                l2530 002A                                  l2604 0ADA  
                                l2268 0C20                                  l2452 0BF2  
                                l2524 0284                                  l2516 023E  
                                l2508 01D8                                  l2612 0712  
                                l1388 0C26                                  l2460 0914  
                                l2292 0BAE                                  l2540 00DA  
                                l2532 0044                                  l2700 09A2  
                                l2606 0AEE                                  l2454 0BC8  
                                l2518 0248                                  l2622 0760  
                                l2614 071C                                  l2462 0930  
                                l2470 07BE                                  l2550 012E  
                                l2542 00F2                                  l2534 0064  
                                l2710 09BE                                  l2702 09A6  
                                l2560 095E                                  l2640 0B42  
                                l2632 0BF8                                  l2456 0BDA  
                                l2624 0784                                  l2616 0736  
                                l2608 06FC                                  l2464 0A9E  
                                l2480 0842                                  l2552 0138  
                                l2544 00FC                                  l2536 00A4  
                                l2528 0006                                  l2712 09DA  
                                l2704 09AA                                  l2562 0974  
                                l2642 0B46                                  l2634 0BFC  
                                l1666 0290                                  l2490 0154  
                                l2618 0740                                  l2458 0906  
                                l2466 0B66                                  l2482 0846  
                                l2538 00AE                                  l2554 0142  
                                l2714 09DE                                  l2706 09BA  
                                l2564 0992                                  l2580 05DC  
                                l2572 0532                                  l2644 0B5C  
                                l2636 0C08                                  l2492 0158  
                                l2724 048E                                  l2660 0320  
                                l2484 085C                                  l2476 07CC  
                                l2548 0104                                  l2708 09BC  
                                l2558 0954                                  l2582 05EE  
                                l2574 0554                                  l2566 052E  
                                l2646 0B60                                  l2638 0B38  
                                l2590 0A66                                  l2494 0168  
                                l2726 0506                                  l2670 038C  
                                l2654 02A6                                  l2486 0866  
                                l2478 07EE                                  l2576 056E  
                                l2584 0608                                  l2592 0A6E  
                                l2496 0174                                  l2672 03AA  
                                l2656 02DC                                  l2648 029E  
                                l2680 0676                                  l2586 060C  
                                l2578 0592                                  l2594 0A84  
                                l2498 017A                                  l2690 08A2  
                                l2666 0328                                  l2658 02FA  
                                l2682 0694                                  l2674 0630  
                                l2596 0A86                                  l2588 0A64  
                                l2692 08C2                                  l2668 0356  
                                l2684 06B6                                  l2676 0638  
                                l2598 0A88                                  l2678 0650  
                                l2688 087E                   __end_of_XF_popEvent 07BC  
                                STR_1 FFED                                  _LATA 0F89  
                                _LATB 0F8A                                  _LATC 0F8B  
                                _LATD 0F8C                                  _LATE 0F8D  
                                _LATF 0F8E                                  _LATG 0F8F  
                                _LATH 0F90                                  _LATJ 0F91  
                                _main 09A2                      _XF_scheduleTimer 07BC  
                                fsr0h 0FEA                                  fsr1h 0FE2  
                                indf0 0FEF                                  fsr2h 0FDA  
                                fsr0l 0FE9                                  indf1 0FE7  
                                indf2 0FDF                                  fsr1l 0FE1  
                                fsr2l 0FD9                                  btemp 0026  
               _lightContol_BackLight 0C2A                                  prodh 0FF4  
                                prodl 0FF3                                  start 00AE  
                     __end_of_XF_init 03E2                       __end_of_XF_post 06F4  
                        ___param_bank 0000               __end_of_TMR0_Initialize 0A9E  
       __end_of_OSCILLATOR_Initialize 0C26                       __end_of___awmod 029A  
                               _T0CON 0FD5                                 _TMR0H 0FD7  
                               _TMR0L 0FD6                                 _PORTJ 0F88  
                               u60_40 05DC                                 u60_41 05D8  
                               u61_40 0622                                 u61_41 061E  
                               u62_40 0AEE                                 u62_41 0AEA  
                               u63_48 0AF4                                 u63_49 0B08  
                               _TRISA 0F92                                 u57_40 0554  
                               _TRISB 0F93                                 u57_41 0550  
                               _TRISC 0F94                                 _TRISD 0F95  
                               _TRISE 0F96                                 _TRISF 0F97  
                               _TRISG 0F98                                 _TRISH 0F99  
                               u58_40 0592                                 _TRISJ 0F9A  
                               u58_41 058E                                 u67_40 0B5C  
                               u59_41 05BE                                 u67_41 0B58  
                    __end_of_TMR0_ISR 0B66                                 _dummy 001C  
                               _theXF 02C8                  __end_of_XF_pushEvent 0150  
                               pclath 0FFA                                 pclatu 0FFB  
                               ltemp0 0026                                 ltemp1 002A  
                               ltemp2 002E          lightControl_Process@oldState 0024  
                               plusw0 0FEB                                 plusw1 0FE3  
                               plusw2 0FDB                                 ttemp0 0026  
                               ttemp1 0029                                 ttemp2 002C  
                               ttemp3 002F                                 ttemp5 0027  
                               ttemp6 002A                                 ttemp7 002E  
                               status 0FD8               fp__lightControl_Process 0000  
                               wtemp0 0026                                 wtemp1 0028  
                               wtemp2 002A                                 wtemp3 002C  
                               wtemp4 002E                                 wtemp5 0030  
                               wtemp8 0027                       __initialization 09EA  
                          _Event_init 0906                          __end_of_main 09EA  
         ?_INTERRUPT_InterruptManager 0046                   __end_of_Event_setPE 0A64  
                 __end_of_Event_setId 0BC8                         __activetblptr 0003  
                      _Event_getDelay 0B66                           _XF_popEvent 06F4  
                    _spiReceiveBuffer 0200                                i2l1037 006C  
                              i2l2694 004C                                i2l2696 005A  
                              i2l2698 0068                                _OSCCON 0FD3  
                      _Event_setDelay 0A9E                        _XF_executeOnce 0876  
                              uf71999 0896                                us65999 0752  
                              us66999 077A                                clear_0 09F2  
                              clear_1 0A04                                clear_2 0A10  
                              clear_3 0A1C                                isa$std 0001  
              __end_of_Event_getDelay 0B8C                                lltemp0 0026  
                              lltemp1 002E                                lltemp2 0036  
                              lltemp3 003E                          __mediumconst FFEC  
               __end_of_TMR0_CallBack 0B0A                __end_of_Event_setDelay 0AD6  
                   _SYSTEM_Initialize 0BF8                            __accesstop 0060  
             __end_of__initialization 0A22                         ___rparam_used 0001  
              __end_of_XF_executeOnce 0906                _lightContol_FrontLight 0C26  
       fp__XF_decrementAndQueueTimers 0000                        __pcstackCOMRAM 0046  
                          ___inthi_sp 092F                           _Event_setPE 0A28  
                         _Event_setId 0BAE              __end_of_XF_scheduleTimer 0876  
               TMR0_ISR@CountCallBack 0020                 __end_of_LEAVECRITICAL 0BE0  
           __end_of_SYSTEM_Initialize 0C0E                            __pbssBANK1 0100  
                          __pbssBANK2 0200                            __pnvCOMRAM 0056  
    __end_of_TMR0_SetInterruptHandler 0BAE                          _XF_pushEvent 0000  
                             _OSCTUNE 0F9B                 __end_of_ENTERCRITICAL 0BF8  
                             i2u74_40 005A                               i2u74_41 0056  
                             i2u75_40 0068                               i2u75_41 0064  
                             _SSP2ADD 0F65                               _SSP2BUF 0F66  
                             _XF_init 029A                               _XF_post 0628  
                             __Hparam 0000                               __Lparam 0000  
                             ___awmod 0150                               __pcinit 09EA  
                             __ramtop 1000                               __ptext0 09A2  
                             __ptext1 0C32                               __ptext2 0628  
                             __ptext3 0000                               __ptext4 07BC  
                             __ptext5 0A9E                               __ptext6 0B66  
                             __ptext7 0A28                               __ptext8 0BAE  
                             __ptext9 029A                             _T0CONbits 0FD5  
               _OSCILLATOR_Initialize 0C1E                  end_of_initialization 0A22  
                             postdec0 0FED                               postdec1 0FE5  
                             postdec2 0FDD                               postinc0 0FEE  
                             postinc1 0FE6                               postinc2 0FDE  
            _TMR0_SetInterruptHandler 0B8C                             _TRISDbits 0F95  
                           _TRISGbits 0F98          __end_of_INTERRUPT_Initialize 0C32  
        __end_of_lightControl_Process 052A                       _SPI2_Initialize 0C0E  
                 start_initialization 09EA                    __end_of_Event_init 0954  
      __end_of_lightContol_FrontLight 0C2A            __end_of_XF_unscheduleTimer 09A2  
                         __pbssBIGRAM 02C8                           __pbssCOMRAM 0001  
                   _spiTransmitBuffer 0100             lightControl_Process@state 0025  
               _TMR0_InterruptHandler 0056                _PIN_MANAGER_Initialize 0B0A  
                           __pintcode 0008                         __pmediumconst FFEC  
             __end_of_SPI2_Initialize 0C1E          ??_INTERRUPT_InterruptManager 0046  
                       _TMR0_CallBack 0AD6                  _INTERRUPT_Initialize 0C2E  
                _lightControl_Process 03E2         __end_of_lightContol_BackLight 0C2E  
                            _LATDbits 0F8C                              _LATGbits 0F8F  
                            _PIR3bits 0FA4                              _RCONbits 0FD0  
                            _SSP2CON1 0F63                              _SSP2CON2 0F62  
                            _TMR0_ISR 0B38                              _SSP2STAT 0F64  
                          _ADCON1bits 0FC1                         _LEAVECRITICAL 0BC8  
                            __Hrparam 0000                              __Lrparam 0000  
                            _carState 0001                              __ptext10 0906  
                            __ptext11 0876                              __ptext20 0A64  
                            __ptext12 03E2                              __ptext21 0B8C  
                            __ptext13 0C26                              __ptext30 052A  
                            __ptext22 0C0E                              __ptext14 0C2A  
                            __ptext31 0954                              __ptext23 0B0A  
                            __ptext15 06F4                              __ptext32 0000  
                            __ptext24 0C1E                              __ptext16 0150  
                            __ptext25 0C2E                              __ptext17 0BC8  
                            __ptext18 0BE0                              __ptext27 0B38  
                            __ptext19 0BF8                              __ptext28 0AD6  
                            __ptext29 0C34                         _ENTERCRITICAL 0BE0  
                        _SSP2CON1bits 0F63    __end_of_XF_decrementAndQueueTimers 0628  
          _XF_decrementAndQueueTimers 052A  __end_of_TMR0_DefaultInterruptHandler 0C36  
        _TMR0_DefaultInterruptHandler 0C34                              isa$xinst 0000  
                  _XF_unscheduleTimer 0954    __end_of_INTERRUPT_InterruptManager 00AE  
          _INTERRUPT_InterruptManager 0008                          _SSP2STATbits 0F64  
                          _INTCONbits 0FF2                              intlevel2 0000  
     fp__TMR0_DefaultInterruptHandler 0000                        _updateCarState 0C32  
                     _TMR0_Initialize 0A64        __end_of_PIN_MANAGER_Initialize 0B38  
