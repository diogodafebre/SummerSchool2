

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Feb 25 16:34:05 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    90                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    91   000000                     
    92                           ; Generated 17/08/2023 GMT
    93                           ; 
    94                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution. Publication is not required when
   108                           ;        this file is used in an embedded application.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F97J60 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126   000000                     
   127 ;;_fObj	offset	0
   128 ;;_mObj	offset	6
   129 ;;_rxObj	offset	0
   130 ;;_rxdata	offset	16
   131 ;;_ev	offset	0
   132 ;;_tmid	offset	6
   133 ;;_processEvent	offset=-3 (param)
   134 ;;_id	offset=-4 (param)
   135 ;;_delay	offset=-6 (param)
   136 ;;_tm	offset	0
   137 ;;_temp	offset	2
   138 ;;_ev	offset=-6 (param)
   139 ;;_inISR	offset=-7 (param)
   140 ;;_tmid	offset=-9 (param)
   141 ;;_i	offset	0
   142 ;;_tm	offset=-2 (param)
   143 ;;_ev	offset=-8 (param)
   144 ;;_inISR	offset=-9 (param)
   145 ;;_me	offset=-2 (param)
   146 ;;_delay	offset=-4 (param)
   147 ;;_me	offset=-2 (param)
   148 ;;_me	offset=-2 (param)
   149 ;;_processEvent	offset=-5 (param)
   150 ;;_me	offset=-2 (param)
   151 ;;_eventID	offset=-3 (param)
   152 ;;_rxFlags	offset	0
   153 ;;_rxObj	offset=-2 (param)
   154 ;;_rxd	offset=-4 (param)
   155 ;;_temp32	offset	0
   156 ;;_ba	offset	4
   157 ;;_fifoReg	offset	80
   158 ;;_ciFifoCon	offset	92
   159 ;;_myReg	offset	97
   160 ;;_ciFifoUa	offset	101
   161 ;;_a	offset	105
   162 ;;_i	offset	107
   163 ;;_n	offset	108
   164 ;;_spiTransferError	offset	109
   165 ;;_channel	offset=-1 (param)
   166 ;;_rxObj	offset=-3 (param)
   167 ;;_rxd	offset=-5 (param)
   168 ;;_nBytes	offset=-6 (param)
   169 ;;_ciFifoCon	offset	0
   170 ;;_a	offset	5
   171 ;;_spiTransferError	offset	7
   172 ;;_channel	offset=-1 (param)
   173 ;;_i	offset	0
   174 ;;_spiTransferSize	offset	2
   175 ;;_spiTransferError	offset	4
   176 ;;_address	offset=-2 (param)
   177 ;;_rxd	offset=-4 (param)
   178 ;;_nBytes	offset=-6 (param)
   179 ;;_ciFifoSta	offset	0
   180 ;;_a	offset	4
   181 ;;_spiTransferError	offset	6
   182 ;;_channel	offset=-1 (param)
   183 ;;_flags	offset=-3 (param)
   184 ;;_i	offset	0
   185 ;;_me	offset=-2 (param)
   186 ;;_ev	offset	0
   187 ;;_ev	offset=-2 (param)
   188 ;;_txMsg	offset	0
   189 ;;_txdata	offset	16
   190 ;;_light	offset=-1 (param)
   191 ;;_txMsg	offset	0
   192 ;;_txdata	offset	16
   193 ;;_light	offset=-1 (param)
   194 ;;_txFlags	offset	0
   195 ;;_txObj	offset=-2 (param)
   196 ;;_txd	offset=-4 (param)
   197 ;;_temp32	offset	0
   198 ;;_txBuffer	offset	4
   199 ;;_fifoReg	offset	80
   200 ;;_ciFifoCon	offset	92
   201 ;;_a	offset	97
   202 ;;_ciFifoUa	offset	101
   203 ;;_dataBytesInObject	offset	105
   204 ;;_n	offset	109
   205 ;;_spiTransferError	offset	111
   206 ;;_i	offset	112
   207 ;;_j	offset	113
   208 ;;_channel	offset=-1 (param)
   209 ;;_txObj	offset=-3 (param)
   210 ;;_txd	offset=-5 (param)
   211 ;;_txdNumBytes	offset=-9 (param)
   212 ;;_flush	offset=-10 (param)
   213 ;;_i	offset	0
   214 ;;_spiTransferSize	offset	2
   215 ;;_spiTransferError	offset	4
   216 ;;_address	offset=-2 (param)
   217 ;;_txd	offset=-4 (param)
   218 ;;_nBytes	offset=-6 (param)
   219 ;;_ciFifoCon	offset	0
   220 ;;_a	offset	5
   221 ;;_spiTransferError	offset	7
   222 ;;_channel	offset=-1 (param)
   223 ;;_flush	offset=-2 (param)
   224 ;;_w	offset	0
   225 ;;_i	offset	4
   226 ;;_j	offset	6
   227 ;;_spiTransferSize	offset	8
   228 ;;_n	offset	10
   229 ;;_spiTransferError	offset	12
   230 ;;_address	offset=-2 (param)
   231 ;;_rxd	offset=-4 (param)
   232 ;;_nWords	offset=-6 (param)
   233 ;;_dataBytesInObject	offset	0
   234 ;;_dlc	offset=-1 (param)
   235 ;;_ciFifoSta	offset	0
   236 ;;_a	offset	4
   237 ;;_spiTransferError	offset	6
   238 ;;_channel	offset=-1 (param)
   239 ;;_flags	offset=-3 (param)
   240 ;;_ev	offset	0
   241 ;;_inISR	offset=-6 (param)
   242 ;;_sign	offset	0
   243 ;;_counter	offset	1
   244 ;;_dividend	offset=-2 (param)
   245 ;;_divisor	offset=-4 (param)
   246 ;;_inISR	offset=-1 (param)
   247 ;;_inISR	offset=-1 (param)
   248 ;;_InterruptHandler	offset=-3 (param)
   249 ;;_filter	offset=-1 (param)
   250 ;;_fObj	offset=-3 (param)
   251 ;;_mObj	offset=-5 (param)
   252 ;;_a	offset	0
   253 ;;_fCtrl	offset	2
   254 ;;_filter	offset=-1 (param)
   255 ;;_channel	offset=-2 (param)
   256 ;;_enable	offset=-3 (param)
   257 ;;_temp32	offset	0
   258 ;;_fObj	offset	4
   259 ;;_a	offset	10
   260 ;;_filter	offset=-1 (param)
   261 ;;_id	offset=-3 (param)
   262 ;;_temp32	offset	0
   263 ;;_mObj	offset	4
   264 ;;_a	offset	10
   265 ;;_filter	offset=-1 (param)
   266 ;;_mask	offset=-3 (param)
   267 ;;_EXIDE	offset=-4 (param)
   268 ;;_a	offset	0
   269 ;;_spiTransferError	offset	2
   270 ;;_fCtrl	offset	3
   271 ;;_filter	offset=-1 (param)
   272 ;;_txqConfig	offset	0
   273 ;;_config	offset	4
   274 ;;_rxfConfig	offset	7
   275 ;;_txfConfig	offset	10
   276 ;;_tefConfig	offset	12
   277 ;;_bitTime	offset=-1 (param)
   278 ;;_withISR	offset=-2 (param)
   279 ;;_ciFifoCon	offset	0
   280 ;;_config	offset=-2 (param)
   281 ;;_ciFifoCon	offset	0
   282 ;;_config	offset=-2 (param)
   283 ;;_ciFifoCon	offset	0
   284 ;;_config	offset=-2 (param)
   285 ;;_ciFifoCon	offset	0
   286 ;;_a	offset	5
   287 ;;_channel	offset=-1 (param)
   288 ;;_config	offset=-3 (param)
   289 ;;_ts	offset=-4 (param)
   290 ;;_ps	offset=-2 (param)
   291 ;;_d	offset	0
   292 ;;_spiTransferError	offset	1
   293 ;;_ciTefCon	offset	0
   294 ;;_config	offset=-2 (param)
   295 ;;_spi2UniqueConfiguration	offset=-1 (param)
   296 ;;_ciFifoCon	offset	0
   297 ;;_a	offset	5
   298 ;;_channel	offset=-1 (param)
   299 ;;_config	offset=-3 (param)
   300 ;;_d	offset	0
   301 ;;_spiTransferError	offset	1
   302 ;;_opMode	offset=-1 (param)
   303 ;;_spiTransferError	offset	0
   304 ;;_address	offset=-2 (param)
   305 ;;_txd	offset=-3 (param)
   306 ;;_spiTransferError	offset	0
   307 ;;_address	offset=-2 (param)
   308 ;;_rxd	offset=-4 (param)
   309 ;;_intEnables	offset	0
   310 ;;_index	offset=-1 (param)
   311 ;;_flags	offset=-3 (param)
   312 ;;_spiTransferSize	offset	0
   313 ;;_i	offset	2
   314 ;;_spiTransferError	offset	3
   315 ;;_address	offset=-2 (param)
   316 ;;_txd	offset=-4 (param)
   317 ;;_ciCon	offset	0
   318 ;;_config	offset=-2 (param)
   319 ;;_ciCon	offset	0
   320 ;;_config	offset=-2 (param)
   321 ;;_ciNbtcfg	offset	0
   322 ;;_bitTime	offset=-1 (param)
   323 ;;_spiTransferSize	offset	0
   324 ;;_i	offset	2
   325 ;;_spiTransferError	offset	3
   326 ;;_address	offset=-2 (param)
   327 ;;_txd	offset=-6 (param)
   328 ;;_dummy	offset	0
   329 ;;_txPtr	offset=-2 (param)
   330 ;;_rxPtr	offset=-4 (param)
   331 ;;_size	offset=-6 (param)
   332 ;;_dummy	offset	0
   333 ;;_i	offset	1
   334 ;;_id	offset=-1 (param)
   335 ;;_inISR	offset=-2 (param)
   336 ;;_me	offset=-2 (param)
   337 ;;_tm	offset	0
   338 ;;_temp	offset	2
   339 ;;_ev	offset=-6 (param)
   340 ;;_inISR	offset=-7 (param)
   341 ;;_tmid	offset=-9 (param)
   342 ;;_sign	offset	0
   343 ;;_counter	offset	1
   344 ;;_dividend	offset=-2 (param)
   345 ;;_divisor	offset=-4 (param)
   346 ;;_i	offset	0
   347 ;;_tm	offset=-2 (param)
   348 ;;_ev	offset=-8 (param)
   349 ;;_inISR	offset=-9 (param)
   350 ;;_inISR	offset=-1 (param)
   351 ;;_inISR	offset=-1 (param)
   352 ;;_me	offset=-2 (param)
   353 ;;_delay	offset=-4 (param)
   354 ;;_me	offset=-2 (param)
   355                           
   356                           	psect	mediumconst
   357   00FF8C                     __pmediumconst:
   358                           	callstack 0
   359   00FF8C  00                 	db	0
   360   00FF8D                     _canControlResetValues:
   361                           	callstack 0
   362   00FF8D  0760               	dw	1888
   363   00FF8F  0498               	dw	1176
   364   00FF91  0F0F               	dw	3855
   365   00FF93  003E               	dw	62
   366   00FF95  0303               	dw	771
   367   00FF97  000E               	dw	14
   368   00FF99  1000               	dw	4096
   369   00FF9B  0002               	dw	2
   370   00FF9D  0000               	dw	0
   371   00FF9F  0000               	dw	0
   372   00FFA1  0000               	dw	0
   373   00FFA3  0000               	dw	0
   374   00FFA5  0040               	dw	64
   375   00FFA7  4040               	dw	16448
   376   00FFA9  0000               	dw	0
   377   00FFAB  0000               	dw	0
   378   00FFAD  0000               	dw	0
   379   00FFAF  0000               	dw	0
   380   00FFB1  0000               	dw	0
   381   00FFB3  0000               	dw	0
   382   00FFB5  0000               	dw	0
   383   00FFB7  0000               	dw	0
   384   00FFB9  0000               	dw	0
   385   00FFBB  0000               	dw	0
   386   00FFBD  0000               	dw	0
   387   00FFBF  0000               	dw	0
   388   00FFC1  0000               	dw	0
   389   00FFC3  0020               	dw	32
   390   00FFC5  0000               	dw	0
   391   00FFC7  0000               	dw	0
   392   00FFC9  0000               	dw	0
   393   00FFCB  0000               	dw	0
   394   00FFCD  0400               	dw	1024
   395   00FFCF  0000               	dw	0
   396   00FFD1  0000               	dw	0
   397   00FFD3  0000               	dw	0
   398   00FFD5  0000               	dw	0
   399   00FFD7  0000               	dw	0
   400   00FFD9  0000               	dw	0
   401   00FFDB  0000               	dw	0
   402   00FFDD                     __end_of_canControlResetValues:
   403                           	callstack 0
   404   00FFDD                     _canFifoResetValues:
   405                           	callstack 0
   406   00FFDD  0400               	dw	1024
   407   00FFDF  0060               	dw	96
   408   00FFE1  0000               	dw	0
   409   00FFE3  0000               	dw	0
   410   00FFE5  0000               	dw	0
   411   00FFE7  0000               	dw	0
   412   00FFE9                     __end_of_canFifoResetValues:
   413                           	callstack 0
   414   00FFE9                     _spi2_configuration:
   415                           	callstack 0
   416   00FFE9  01                 	db	1
   417   00FFEA  40                 	db	64
   418   00FFEB  00                 	db	0
   419   00FFEC  00                 	db	0
   420   00FFED                     __end_of_spi2_configuration:
   421                           	callstack 0
   422   000000                     _SSP2ADD	set	3941
   423   000000                     _TMR0L	set	4054
   424   000000                     _TMR0H	set	4055
   425   000000                     _TRISC	set	3988
   426   000000                     _TRISH	set	3993
   427   000000                     _TRISB	set	3987
   428   000000                     _TRISA	set	3986
   429   000000                     _TRISF	set	3991
   430   000000                     _TRISE	set	3990
   431   000000                     _LATH	set	3984
   432   000000                     _LATC	set	3979
   433   000000                     _LATB	set	3978
   434   000000                     _LATF	set	3982
   435   000000                     _LATA	set	3977
   436   000000                     _LATJ	set	3985
   437   000000                     _LATE	set	3981
   438   000000                     _TRISJ	set	3994
   439   000000                     _TRISDbits	set	3989
   440   000000                     _TRISGbits	set	3992
   441   000000                     _SSP2BUF	set	3942
   442   00FFED                     STR_1:
   443   00FFED  20                 	db	32
   444   00FFEE  20                 	db	32
   445   00FFEF  20                 	db	32
   446   00FFF0  20                 	db	32
   447   00FFF1  20                 	db	32
   448   00FFF2  20                 	db	32
   449   00FFF3  20                 	db	32
   450   00FFF4  20                 	db	32
   451   00FFF5  20                 	db	32
   452   00FFF6  20                 	db	32
   453   00FFF7  20                 	db	32
   454   00FFF8  20                 	db	32
   455   00FFF9  20                 	db	32
   456   00FFFA  20                 	db	32
   457   00FFFB  20                 	db	32
   458   00FFFC  20                 	db	32
   459   00FFFD  00                 	db	0
   460   00FFFE  00                 	db	0	; dummy byte at the end
   461   000000                     
   462                           	psect	nvCOMRAM
   463   00005D                     __pnvCOMRAM:
   464                           	callstack 0
   465   00005D                     _TMR0_InterruptHandler:
   466                           	callstack 0
   467   00005D                     	ds	3
   468   000000                     _SSP2CON1bits	set	3939
   469   000000                     _SSP2STAT	set	3940
   470   000000                     _T0CON	set	4053
   471   000000                     _TRISD	set	3989
   472   000000                     _TRISG	set	3992
   473   000000                     _LATG	set	3983
   474   000000                     _LATD	set	3980
   475   000000                     _SSP2CON2	set	3938
   476   000000                     _SSP2CON1	set	3939
   477   000000                     _SSP2STATbits	set	3940
   478   000000                     _LATGbits	set	3983
   479   000000                     _PORTJ	set	3976
   480   000000                     _LATDbits	set	3980
   481   000000                     _PIR3bits	set	4004
   482   000000                     _ADCON1bits	set	4033
   483   000000                     _OSCTUNE	set	3995
   484   000000                     _OSCCON	set	4051
   485   000000                     _T0CONbits	set	4053
   486   000000                     _INTCONbits	set	4082
   487   000000                     _RCONbits	set	4048
   488                           
   489                           ; #config settings
   490                           
   491                           	psect	cinit
   492   014324                     __pcinit:
   493                           	callstack 0
   494   014324                     start_initialization:
   495                           	callstack 0
   496   014324                     __initialization:
   497                           	callstack 0
   498                           
   499                           ; Clear objects allocated to BIGRAM (282 bytes)
   500   014324  EE02  F0C8         	lfsr	0,__pbssBIGRAM
   501   014328  EE21 F01A          	lfsr	2,282
   502   01432C                     clear_0:
   503   01432C  6AEE               	clrf	postinc0,c
   504   01432E  50DD               	movf	postdec2,w,c
   505   014330  50D9               	movf	fsr2l,w,c
   506   014332  E1FC               	bnz	clear_0
   507   014334  50DA               	movf	fsr2h,w,c
   508   014336  E1FA               	bnz	clear_0
   509                           
   510                           ; Clear objects allocated to BANK2 (200 bytes)
   511   014338  EE02  F000         	lfsr	0,__pbssBANK2
   512   01433C  0EC8               	movlw	200
   513   01433E                     clear_1:
   514   01433E  6AEE               	clrf	postinc0,c
   515   014340  06E8               	decf	wreg,f,c
   516   014342  E1FD               	bnz	clear_1
   517                           
   518                           ; Clear objects allocated to BANK1 (200 bytes)
   519   014344  EE01  F000         	lfsr	0,__pbssBANK1
   520   014348  0EC8               	movlw	200
   521   01434A                     clear_2:
   522   01434A  6AEE               	clrf	postinc0,c
   523   01434C  06E8               	decf	wreg,f,c
   524   01434E  E1FD               	bnz	clear_2
   525                           
   526                           ; Clear objects allocated to BANK0 (27 bytes)
   527   014350  EE00  F060         	lfsr	0,__pbssBANK0
   528   014354  0E1B               	movlw	27
   529   014356                     clear_3:
   530   014356  6AEE               	clrf	postinc0,c
   531   014358  06E8               	decf	wreg,f,c
   532   01435A  E1FD               	bnz	clear_3
   533                           
   534                           ; Clear objects allocated to COMRAM (44 bytes)
   535   01435C  EE00  F001         	lfsr	0,__pbssCOMRAM
   536   014360  0E2C               	movlw	44
   537   014362                     clear_4:
   538   014362  6AEE               	clrf	postinc0,c
   539   014364  06E8               	decf	wreg,f,c
   540   014366  E1FD               	bnz	clear_4
   541   014368                     end_of_initialization:
   542                           	callstack 0
   543   014368                     __end_of__initialization:
   544                           	callstack 0
   545   014368  0100               	movlb	0
   546   01436A  EF14  F09A         	goto	_main	;jump to C main() function
   547                           
   548                           	psect	bssCOMRAM
   549   000001                     __pbssCOMRAM:
   550                           	callstack 0
   551   000001                     lightContol_BackLight@F6642:
   552                           	callstack 0
   553   000001                     	ds	16
   554   000011                     lightContol_FrontLight@F6636:
   555                           	callstack 0
   556   000011                     	ds	16
   557   000021                     _dummy:
   558                           	callstack 0
   559   000021                     	ds	4
   560   000025                     TMR0_ISR@CountCallBack:
   561                           	callstack 0
   562   000025                     	ds	2
   563   000027                     _timer0ReloadVal:
   564                           	callstack 0
   565   000027                     	ds	2
   566   000029                     lightControl_Process@oldState:
   567                           	callstack 0
   568   000029                     	ds	1
   569   00002A                     lightControl_Process@state:
   570                           	callstack 0
   571   00002A                     	ds	1
   572   00002B                     lightContol_BackLight@lastLight:
   573                           	callstack 0
   574   00002B                     	ds	1
   575   00002C                     lightContol_FrontLight@lastLight:
   576                           	callstack 0
   577   00002C                     	ds	1
   578                           
   579                           	psect	bssBANK0
   580   000060                     __pbssBANK0:
   581                           	callstack 0
   582   000060                     _carState:
   583                           	callstack 0
   584   000060                     	ds	27
   585                           
   586                           	psect	bssBANK1
   587   000100                     __pbssBANK1:
   588                           	callstack 0
   589   000100                     _spiTransmitBuffer:
   590                           	callstack 0
   591   000100                     	ds	200
   592                           
   593                           	psect	bssBANK2
   594   000200                     __pbssBANK2:
   595                           	callstack 0
   596   000200                     _spiReceiveBuffer:
   597                           	callstack 0
   598   000200                     	ds	200
   599                           
   600                           	psect	bssBIGRAM
   601   0002C8                     __pbssBIGRAM:
   602                           	callstack 0
   603   0002C8                     _theXF:
   604                           	callstack 0
   605   0002C8                     	ds	282
   606                           
   607                           	psect	cstackCOMRAM
   608   00004D                     __pcstackCOMRAM:
   609                           	callstack 0
   610   00004D                     ??_INTERRUPT_InterruptManager:
   611                           
   612                           ; 1 bytes @ 0x0
   613   00004D                     	ds	16
   614                           
   615 ;;
   616 ;;Main: autosize = 12, tempsize = 0, incstack = 0, save=0
   617 ;;
   618 ;; *************** function _main *****************
   619 ;; Defined at:
   620 ;;		line 56 in file "main.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  fObj            6  [STACK] struct _CAN_FILTEROBJ_ID
   625 ;;  mObj            6  [STACK] struct _CAN_MASKOBJ_ID
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1  [STACK] void 
   628 ;; Registers used:
   629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl,
      + prodh
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels required when called: 15
   641 ;; This function calls:
   642 ;;		_CanInit
   643 ;;		_CanSetFilter
   644 ;;		_SYSTEM_Initialize
   645 ;;		_TMR0_SetInterruptHandler
   646 ;;		_XF_executeOnce
   647 ;;		_XF_init
   648 ;;		_XF_post
   649 ;;		_updateCarState
   650 ;; This function is called by:
   651 ;;		Startup code after reset
   652 ;; This function uses a reentrant model
   653 ;;
   654                           
   655                           	psect	text0
   656   013428                     __ptext0:
   657                           	callstack 0
   658   013428                     _main:
   659                           	callstack 0
   660                           
   661                           ; autosize = 12, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
   662   013428  0E0C               	movlw	12
   663   01342A  26E1               	addwf	fsr1l,f,c
   664   01342C  0E00               	movlw	0
   665   01342E  22E2               	addwfc	fsr1h,f,c
   666   013430                     
   667                           ;main.c: 60:     SYSTEM_Initialize();
   668   013430  ECD9  F0A2         	call	_SYSTEM_Initialize	;wreg free
   669   013434                     
   670                           ;main.c: 61:     XF_init();
   671   013434  EC6F  F093         	call	_XF_init	;wreg free
   672   013438                     
   673                           ;main.c: 62:     TMR0_SetInterruptHandler(XF_decrementAndQueueTimers);
   674   013438  0E9A               	movlw	low _XF_decrementAndQueueTimers
   675   01343A  6EE6               	movwf	postinc1,c
   676   01343C  0E2F               	movlw	high _XF_decrementAndQueueTimers
   677   01343E  6EE6               	movwf	postinc1,c
   678   013440  0E01               	movlw	low (_XF_decrementAndQueueTimers shr (0+16))
   679   013442  6EE6               	movwf	postinc1,c
   680   013444  EC95  F0A2         	call	_TMR0_SetInterruptHandler	;wreg free
   681   013448                     
   682                           ;main.c: 64:     CanInit(CAN_250K_500K,0);
   683   013448  0E00               	movlw	0
   684   01344A  6EE6               	movwf	postinc1,c
   685   01344C  0E08               	movlw	8
   686   01344E  6EE6               	movwf	postinc1,c
   687   013450  EC32  F08F         	call	_CanInit	;wreg free
   688   013454                     
   689                           ;main.c: 65:     CAN_FILTEROBJ_ID fObj;;main.c: 66:     fObj.ID = 0x001;
   690   013454  0E01               	movlw	1
   691   013456  6E35               	movwf	(btemp+8)^0,c
   692   013458  6A36               	clrf	(btemp+9)^0,c
   693   01345A  6A37               	clrf	(btemp+10)^0,c
   694   01345C  6A38               	clrf	(btemp+11)^0,c
   695                           
   696                           ;stkvar	_fObj @ sp[(-12)+0]
   697   01345E  0EF4               	movlw	-12
   698   013460  C035  FFE3         	movff	btemp+8,plusw1
   699   013464  0EF5               	movlw	-11
   700   013466  C036  FFE3         	movff	btemp+9,plusw1
   701   01346A  0EF6               	movlw	-10
   702   01346C  C037  FFE3         	movff	btemp+10,plusw1
   703   013470  0EF7               	movlw	-9
   704   013472  C038  FFE3         	movff	btemp+11,plusw1
   705   013476                     
   706                           ;main.c: 67:     CAN_MASKOBJ_ID mObj;;main.c: 68:     mObj.MID = 0x00F;
   707   013476  0E0F               	movlw	15
   708   013478  6E35               	movwf	(btemp+8)^0,c
   709   01347A  6A36               	clrf	(btemp+9)^0,c
   710   01347C  6A37               	clrf	(btemp+10)^0,c
   711   01347E  6A38               	clrf	(btemp+11)^0,c
   712                           
   713                           ;stkvar	_mObj @ sp[(-12)+6]
   714   013480  0EFA               	movlw	-6
   715   013482  C035  FFE3         	movff	btemp+8,plusw1
   716   013486  0EFB               	movlw	-5
   717   013488  C036  FFE3         	movff	btemp+9,plusw1
   718   01348C  0EFC               	movlw	-4
   719   01348E  C037  FFE3         	movff	btemp+10,plusw1
   720   013492  0EFD               	movlw	-3
   721   013494  C038  FFE3         	movff	btemp+11,plusw1
   722   013498                     
   723                           ;main.c: 69:     CanSetFilter(CAN_FILTER0,&fObj,&mObj);
   724                           ;stkvar	_mObj @ sp[(-12)+6]
   725   013498  0EFA               	movlw	250
   726   01349A  24E1               	addwf	fsr1l,w,c
   727   01349C  6E2D               	movwf	btemp^0,c
   728   01349E  0EFF               	movlw	255
   729   0134A0  20E2               	addwfc	fsr1h,w,c
   730   0134A2  6E2E               	movwf	(btemp+1)^0,c
   731   0134A4  C02D  FFE6         	movff	btemp,postinc1
   732   0134A8  C02E  FFE6         	movff	btemp+1,postinc1
   733                           
   734                           ;stkvar	_fObj @ sp[(-14)+0]
   735   0134AC  0EF2               	movlw	242
   736   0134AE  24E1               	addwf	fsr1l,w,c
   737   0134B0  6E2D               	movwf	btemp^0,c
   738   0134B2  0EFF               	movlw	255
   739   0134B4  20E2               	addwfc	fsr1h,w,c
   740   0134B6  6E2E               	movwf	(btemp+1)^0,c
   741   0134B8  C02D  FFE6         	movff	btemp,postinc1
   742   0134BC  C02E  FFE6         	movff	btemp+1,postinc1
   743   0134C0  0E00               	movlw	0
   744   0134C2  6EE6               	movwf	postinc1,c
   745   0134C4  EC1A  F0A0         	call	_CanSetFilter	;wreg free
   746   0134C8                     
   747                           ;main.c: 75:     (INTCONbits.GIE = 1);
   748   0134C8  8EF2               	bsf	242,7,c	;volatile
   749   0134CA                     
   750                           ;main.c: 81:     (INTCONbits.PEIE = 1);
   751   0134CA  8CF2               	bsf	242,6,c	;volatile
   752   0134CC                     
   753                           ;main.c: 85:     XF_post(lightControl_Process,E_INIT,0);
   754   0134CC  0E00               	movlw	0
   755   0134CE  6EE6               	movwf	postinc1,c
   756   0134D0  0E00               	movlw	0
   757   0134D2  6EE6               	movwf	postinc1,c
   758   0134D4  0E01               	movlw	1
   759   0134D6  6EE6               	movwf	postinc1,c
   760   0134D8  0E7C               	movlw	low _lightControl_Process
   761   0134DA  6EE6               	movwf	postinc1,c
   762   0134DC  0E29               	movlw	high _lightControl_Process
   763   0134DE  6EE6               	movwf	postinc1,c
   764   0134E0  0E01               	movlw	low (_lightControl_Process shr (0+16))
   765   0134E2  6EE6               	movwf	postinc1,c
   766   0134E4  EC7C  F09A         	call	_XF_post	;wreg free
   767   0134E8                     l4942:
   768                           
   769                           ;main.c: 87:     {;main.c: 88:         updateCarState();
   770   0134E8  EC38  F099         	call	_updateCarState	;wreg free
   771   0134EC                     
   772                           ;main.c: 89:         XF_executeOnce();
   773   0134EC  EC55  F09F         	call	_XF_executeOnce	;wreg free
   774   0134F0  EF74  F09A         	goto	l4942
   775   0134F4  EF57  F000         	goto	start
   776   0134F8                     __end_of_main:
   777                           	callstack 0
   778                           
   779 ;; *************** function _updateCarState *****************
   780 ;; Defined at:
   781 ;;		line 118 in file "carFunctions.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  rxObj          16  [STACK] struct _CAN_RX_MSGOBJ
   786 ;;  rxdata          8  [STACK] unsigned char [8]
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1  [STACK] void 
   789 ;; Registers used:
   790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;Total ram usage:        0 bytes
   801 ;; Hardware stack levels used: 1
   802 ;; Hardware stack levels required when called: 12
   803 ;; This function calls:
   804 ;;		_CanReceive
   805 ;;		_XF_post
   806 ;; This function is called by:
   807 ;;		_main
   808 ;; This function uses a reentrant model
   809 ;;
   810                           
   811                           	psect	text1
   812   013270                     __ptext1:
   813                           	callstack 0
   814   013270                     _updateCarState:
   815                           	callstack 0
   816                           
   817                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
   818   013270  0E18               	movlw	24
   819   013272  26E1               	addwf	fsr1l,f,c
   820   013274  0E00               	movlw	0
   821   013276  22E2               	addwfc	fsr1h,f,c
   822   013278                     
   823                           ;carFunctions.c: 121:     CAN_RX_MSGOBJ rxObj ;;carFunctions.c: 122:     uint8_t rxdata[
      +                          8];;carFunctions.c: 124:     if(CanReceive(&rxObj,rxdata) == 0) {
   824                           ;stkvar	_rxdata @ sp[(-24)+16]
   825   013278  0EF8               	movlw	248
   826   01327A  24E1               	addwf	fsr1l,w,c
   827   01327C  6E2D               	movwf	btemp^0,c
   828   01327E  0EFF               	movlw	255
   829   013280  20E2               	addwfc	fsr1h,w,c
   830   013282  6E2E               	movwf	(btemp+1)^0,c
   831   013284  C02D  FFE6         	movff	btemp,postinc1
   832   013288  C02E  FFE6         	movff	btemp+1,postinc1
   833                           
   834                           ;stkvar	_rxObj @ sp[(-26)+0]
   835   01328C  0EE6               	movlw	230
   836   01328E  24E1               	addwf	fsr1l,w,c
   837   013290  6E2D               	movwf	btemp^0,c
   838   013292  0EFF               	movlw	255
   839   013294  20E2               	addwfc	fsr1h,w,c
   840   013296  6E2E               	movwf	(btemp+1)^0,c
   841   013298  C02D  FFE6         	movff	btemp,postinc1
   842   01329C  C02E  FFE6         	movff	btemp+1,postinc1
   843   0132A0  EC4F  F0A0         	call	_CanReceive	;wreg free
   844   0132A4  502D               	movf	btemp^0,w,c
   845   0132A6  A4D8               	btfss	status,2,c
   846   0132A8  EF58  F099         	goto	u2771
   847   0132AC  EF5A  F099         	goto	u2770
   848   0132B0                     u2771:
   849   0132B0  EFA3  F099         	goto	l1461
   850   0132B4                     u2770:
   851   0132B4                     
   852                           ;carFunctions.c: 125:         if((rxObj.bF.id.ID & 0x3F0) == (0x05<<4)){
   853                           ;stkvar	_rxObj @ sp[(-24)+0]
   854   0132B4  50E1               	movf	fsr1l,w,c
   855   0132B6  0FE8               	addlw	-24
   856   0132B8  6ED9               	movwf	fsr2l,c
   857   0132BA  50E2               	movf	fsr1h,w,c
   858   0132BC  6EDA               	movwf	fsr2h,c
   859   0132BE  0EFF               	movlw	255
   860   0132C0  22DA               	addwfc	fsr2h,f,c
   861   0132C2  0EF0               	movlw	240
   862   0132C4  14DE               	andwf	postinc2,w,c
   863   0132C6  6E35               	movwf	(btemp+8)^0,c
   864   0132C8  0E03               	movlw	3
   865   0132CA  14DE               	andwf	postinc2,w,c
   866   0132CC  6E36               	movwf	(btemp+9)^0,c
   867   0132CE  0E00               	movlw	0
   868   0132D0  14DE               	andwf	postinc2,w,c
   869   0132D2  6E37               	movwf	(btemp+10)^0,c
   870   0132D4  0E00               	movlw	0
   871   0132D6  14DE               	andwf	postinc2,w,c
   872   0132D8  6E38               	movwf	(btemp+11)^0,c
   873   0132DA  0E50               	movlw	80
   874   0132DC  1835               	xorwf	(btemp+8)^0,w,c
   875   0132DE  1036               	iorwf	(btemp+9)^0,w,c
   876   0132E0  1037               	iorwf	(btemp+10)^0,w,c
   877   0132E2  1038               	iorwf	(btemp+11)^0,w,c
   878   0132E4  A4D8               	btfss	status,2,c
   879   0132E6  EF77  F099         	goto	u2781
   880   0132EA  EF79  F099         	goto	u2780
   881   0132EE                     u2781:
   882   0132EE  EFA3  F099         	goto	l1461
   883   0132F2                     u2780:
   884   0132F2                     
   885                           ;carFunctions.c: 126:             carState.contactKey = rxdata[0];
   886                           ;stkvar	_rxdata @ sp[(-24)+16]
   887   0132F2  0EF8               	movlw	-8
   888   0132F4  CFE3 F06E          	movff	plusw1,_carState+14
   889   0132F8                     
   890                           ;carFunctions.c: 127:             if(rxdata[0]==0){
   891                           ;stkvar	_rxdata @ sp[(-24)+16]
   892   0132F8  0EF8               	movlw	-8
   893   0132FA  50E3               	movf	plusw1,w,c
   894   0132FC  A4D8               	btfss	status,2,c
   895   0132FE  EF83  F099         	goto	u2791
   896   013302  EF85  F099         	goto	u2790
   897   013306                     u2791:
   898   013306  EF95  F099         	goto	l4914
   899   01330A                     u2790:
   900   01330A                     
   901                           ;carFunctions.c: 128:                 XF_post(lightControl_Process,E_CONTACT_OFF,0);
   902   01330A  0E00               	movlw	0
   903   01330C  6EE6               	movwf	postinc1,c
   904   01330E  0E00               	movlw	0
   905   013310  6EE6               	movwf	postinc1,c
   906   013312  0E02               	movlw	2
   907   013314  6EE6               	movwf	postinc1,c
   908   013316  0E7C               	movlw	low _lightControl_Process
   909   013318  6EE6               	movwf	postinc1,c
   910   01331A  0E29               	movlw	high _lightControl_Process
   911   01331C  6EE6               	movwf	postinc1,c
   912   01331E  0E01               	movlw	low (_lightControl_Process shr (0+16))
   913   013320  6EE6               	movwf	postinc1,c
   914   013322  EC7C  F09A         	call	_XF_post	;wreg free
   915                           
   916                           ;carFunctions.c: 129:             }else{
   917   013326  EFA3  F099         	goto	l1461
   918   01332A                     l4914:
   919                           
   920                           ;carFunctions.c: 130:                 XF_post(lightControl_Process,E_CONTACT_ON,0);
   921   01332A  0E00               	movlw	0
   922   01332C  6EE6               	movwf	postinc1,c
   923   01332E  0E00               	movlw	0
   924   013330  6EE6               	movwf	postinc1,c
   925   013332  0E03               	movlw	3
   926   013334  6EE6               	movwf	postinc1,c
   927   013336  0E7C               	movlw	low _lightControl_Process
   928   013338  6EE6               	movwf	postinc1,c
   929   01333A  0E29               	movlw	high _lightControl_Process
   930   01333C  6EE6               	movwf	postinc1,c
   931   01333E  0E01               	movlw	low (_lightControl_Process shr (0+16))
   932   013340  6EE6               	movwf	postinc1,c
   933   013342  EC7C  F09A         	call	_XF_post	;wreg free
   934   013346                     l1461:
   935                           
   936                           ; _updateCarState: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
   937   013346  0EE8               	movlw	232
   938   013348  26E1               	addwf	fsr1l,f,c
   939   01334A  0EFF               	movlw	255
   940   01334C  22E2               	addwfc	fsr1h,f,c
   941   01334E  0012               	return		;funcret
   942   013350                     __end_of_updateCarState:
   943                           	callstack 0
   944                           
   945 ;; *************** function _XF_post *****************
   946 ;; Defined at:
   947 ;;		line 274 in file "xf/xf.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  processEvent    3  [STACK] PTR FTN(PTR struct Event
   950 ;;		 -> lightControl_Process(1), 
   951 ;;  id              1  [STACK] unsigned char 
   952 ;;  delay           2  [STACK] unsigned short 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;  ev              6  [STACK] struct Event_
   955 ;;  tmid            1  [STACK] unsigned char 
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1  [STACK] unsigned char 
   958 ;; Registers used:
   959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;Total ram usage:        0 bytes
   970 ;; Hardware stack levels used: 1
   971 ;; Hardware stack levels required when called: 10
   972 ;; This function calls:
   973 ;;		_Event_init
   974 ;;		_Event_setDelay
   975 ;;		_Event_setId
   976 ;;		_Event_setPE
   977 ;;		_XF_pushEvent
   978 ;; This function is called by:
   979 ;;		_main
   980 ;;		_updateCarState
   981 ;; This function uses a reentrant model
   982 ;;
   983                           
   984                           	psect	text2
   985   0134F8                     __ptext2:
   986                           	callstack 0
   987   0134F8                     _XF_post:
   988                           	callstack 0
   989                           
   990                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   991   0134F8  0E07               	movlw	7
   992   0134FA  26E1               	addwf	fsr1l,f,c
   993   0134FC  0E00               	movlw	0
   994   0134FE  22E2               	addwfc	fsr1h,f,c
   995   013500                     
   996                           ;xf/xf.c: 274: uint8_t XF_post(processEventT processEvent, uint8_t id, uint16_t delay);x
      +                          f/xf.c: 275: {;xf/xf.c: 276:     uint8_t tmid = 12;
   997                           ;stkvar	_tmid @ sp[(-7)+6]
   998   013500  0EFF               	movlw	-1
   999   013502  6AE3               	clrf	plusw1,c
  1000   013504  84E3               	bsf	plusw1,2,c
  1001   013506  86E3               	bsf	plusw1,3,c	;indir
  1002   013508                     
  1003                           ;xf/xf.c: 279:     Event ev;;xf/xf.c: 280:     Event_init(&ev);
  1004                           ;stkvar	_ev @ sp[(-7)+0]
  1005   013508  0EF9               	movlw	249
  1006   01350A  24E1               	addwf	fsr1l,w,c
  1007   01350C  6E2D               	movwf	btemp^0,c
  1008   01350E  0EFF               	movlw	255
  1009   013510  20E2               	addwfc	fsr1h,w,c
  1010   013512  6E2E               	movwf	(btemp+1)^0,c
  1011   013514  C02D  FFE6         	movff	btemp,postinc1
  1012   013518  C02E  FFE6         	movff	btemp+1,postinc1
  1013   01351C  EC6B  F0A1         	call	_Event_init	;wreg free
  1014   013520                     
  1015                           ;xf/xf.c: 282:     Event_setPE(&ev,processEvent);
  1016                           ;stkvar	_processEvent @ sp[(-7)+-3]
  1017   013520  0EF6               	movlw	-10
  1018   013522  CFE3 FFE6          	movff	plusw1,postinc1
  1019   013526  CFE3 FFE6          	movff	plusw1,postinc1
  1020   01352A  CFE3 FFE6          	movff	plusw1,postinc1
  1021                           
  1022                           ;stkvar	_ev @ sp[(-10)+0]
  1023   01352E  0EF6               	movlw	246
  1024   013530  24E1               	addwf	fsr1l,w,c
  1025   013532  6E2D               	movwf	btemp^0,c
  1026   013534  0EFF               	movlw	255
  1027   013536  20E2               	addwfc	fsr1h,w,c
  1028   013538  6E2E               	movwf	(btemp+1)^0,c
  1029   01353A  C02D  FFE6         	movff	btemp,postinc1
  1030   01353E  C02E  FFE6         	movff	btemp+1,postinc1
  1031   013542  ECB7  F0A1         	call	_Event_setPE	;wreg free
  1032   013546                     
  1033                           ;xf/xf.c: 283:     Event_setId(&ev,id);
  1034                           ;stkvar	_id @ sp[(-7)+-4]
  1035   013546  0EF5               	movlw	-11
  1036   013548  50E3               	movf	plusw1,w,c
  1037   01354A  6EE6               	movwf	postinc1,c
  1038                           
  1039                           ;stkvar	_ev @ sp[(-8)+0]
  1040   01354C  0EF8               	movlw	248
  1041   01354E  24E1               	addwf	fsr1l,w,c
  1042   013550  6E2D               	movwf	btemp^0,c
  1043   013552  0EFF               	movlw	255
  1044   013554  20E2               	addwfc	fsr1h,w,c
  1045   013556  6E2E               	movwf	(btemp+1)^0,c
  1046   013558  C02D  FFE6         	movff	btemp,postinc1
  1047   01355C  C02E  FFE6         	movff	btemp+1,postinc1
  1048   013560  ECB4  F0A2         	call	_Event_setId	;wreg free
  1049   013564                     
  1050                           ;xf/xf.c: 284:     Event_setDelay(&ev,delay);
  1051                           ;stkvar	_delay @ sp[(-7)+-6]
  1052   013564  0EF3               	movlw	-13
  1053   013566  CFE3 FFE6          	movff	plusw1,postinc1
  1054   01356A  CFE3 FFE6          	movff	plusw1,postinc1
  1055                           
  1056                           ;stkvar	_ev @ sp[(-9)+0]
  1057   01356E  0EF7               	movlw	247
  1058   013570  24E1               	addwf	fsr1l,w,c
  1059   013572  6E2D               	movwf	btemp^0,c
  1060   013574  0EFF               	movlw	255
  1061   013576  20E2               	addwfc	fsr1h,w,c
  1062   013578  6E2E               	movwf	(btemp+1)^0,c
  1063   01357A  C02D  FFE6         	movff	btemp,postinc1
  1064   01357E  C02E  FFE6         	movff	btemp+1,postinc1
  1065   013582  ECF2  F0A1         	call	_Event_setDelay	;wreg free
  1066   013586                     
  1067                           ;xf/xf.c: 286:     XF_pushEvent(ev,0,&tmid);
  1068                           ;stkvar	_tmid @ sp[(-7)+6]
  1069   013586  0EFF               	movlw	255
  1070   013588  24E1               	addwf	fsr1l,w,c
  1071   01358A  6E2D               	movwf	btemp^0,c
  1072   01358C  0EFF               	movlw	255
  1073   01358E  20E2               	addwfc	fsr1h,w,c
  1074   013590  6E2E               	movwf	(btemp+1)^0,c
  1075   013592  C02D  FFE6         	movff	btemp,postinc1
  1076   013596  C02E  FFE6         	movff	btemp+1,postinc1
  1077   01359A  0E00               	movlw	0
  1078   01359C  6EE6               	movwf	postinc1,c
  1079                           
  1080                           ;stkvar	_ev @ sp[(-10)+0]
  1081   01359E  0EF6               	movlw	246
  1082   0135A0  24E1               	addwf	fsr1l,w,c
  1083   0135A2  6ED9               	movwf	fsr2l,c
  1084   0135A4  0EFF               	movlw	255
  1085   0135A6  20E2               	addwfc	fsr1h,w,c
  1086   0135A8  6EDA               	movwf	fsr2h,c
  1087   0135AA  0E06               	movlw	6
  1088   0135AC                     u2641:
  1089   0135AC  CFDE FFE6          	movff	postinc2,postinc1
  1090   0135B0  2CE8               	decfsz	wreg,w,c
  1091   0135B2  EFD6  F09A         	goto	u2641
  1092   0135B6  ECAF  F092         	call	_XF_pushEvent	;wreg free
  1093   0135BA                     
  1094                           ; _XF_post: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  1095   0135BA  0EF3               	movlw	243
  1096   0135BC  26E1               	addwf	fsr1l,f,c
  1097   0135BE  0EFF               	movlw	255
  1098   0135C0  22E2               	addwfc	fsr1h,f,c
  1099   0135C2  0012               	return		;funcret
  1100   0135C4                     __end_of_XF_post:
  1101                           	callstack 0
  1102                           
  1103 ;; *************** function _XF_pushEvent *****************
  1104 ;; Defined at:
  1105 ;;		line 106 in file "xf/xf.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  ev              6  [STACK] struct Event_
  1108 ;;  inISR           1  [STACK] _Bool 
  1109 ;;  tmid            2  [STACK] PTR unsigned char 
  1110 ;;		 -> tmid(1), dummy(1), 
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  tm              2  [STACK] unsigned short 
  1113 ;;  temp            1  [STACK] unsigned char 
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1  [STACK] _Bool 
  1116 ;; Registers used:
  1117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;Total ram usage:        0 bytes
  1128 ;; Hardware stack levels used: 1
  1129 ;; Hardware stack levels required when called: 9
  1130 ;; This function calls:
  1131 ;;		_ENTERCRITICAL
  1132 ;;		_Event_getDelay
  1133 ;;		_Event_setDelay
  1134 ;;		_LEAVECRITICAL
  1135 ;;		_XF_noMoreEvent
  1136 ;;		_XF_scheduleTimer
  1137 ;;		___awmod
  1138 ;; This function is called by:
  1139 ;;		_XF_decrementAndQueueTimers
  1140 ;;		_XF_post
  1141 ;; This function uses a reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text3
  1145   01255E                     __ptext3:
  1146                           	callstack 0
  1147   01255E                     _XF_pushEvent:
  1148                           	callstack 0
  1149                           
  1150                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 9, argsize = 9 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1151   01255E  52E6               	movf	postinc1,f,c
  1152   012560  52E6               	movf	postinc1,f,c
  1153   012562  52E6               	movf	postinc1,f,c
  1154   012564                     
  1155                           ;xf/xf.c: 106: _Bool XF_pushEvent(Event ev, _Bool inISR, uint8_t* tmid);xf/xf.c: 107: {;
      +                          xf/xf.c: 108:     uint8_t temp;;xf/xf.c: 109:     uint16_t tm;;xf/xf.c: 110:     tm = Ev
      +                          ent_getDelay(&ev);
  1156                           ;stkvar	_ev @ sp[(-3)+-6]
  1157   012564  0EF7               	movlw	247
  1158   012566  24E1               	addwf	fsr1l,w,c
  1159   012568  6E2D               	movwf	btemp^0,c
  1160   01256A  0EFF               	movlw	255
  1161   01256C  20E2               	addwfc	fsr1h,w,c
  1162   01256E  6E2E               	movwf	(btemp+1)^0,c
  1163   012570  C02D  FFE6         	movff	btemp,postinc1
  1164   012574  C02E  FFE6         	movff	btemp+1,postinc1
  1165   012578  EC82  F0A2         	call	_Event_getDelay	;wreg free
  1166                           
  1167                           ;stkvar	_tm @ sp[(-3)+0]
  1168   01257C  0EFD               	movlw	-3
  1169   01257E  C02D  FFE3         	movff	btemp,plusw1
  1170   012582  0EFE               	movlw	-2
  1171   012584  C02E  FFE3         	movff	btemp+1,plusw1
  1172   012588                     
  1173                           ;xf/xf.c: 111:     if ( tm > 0)
  1174                           ;stkvar	_tm @ sp[(-3)+0]
  1175   012588  0EFD               	movlw	-3
  1176   01258A  CFE3 F02D          	movff	plusw1,btemp
  1177   01258E  0EFE               	movlw	-2
  1178   012590  50E3               	movf	plusw1,w,c
  1179   012592  102D               	iorwf	btemp^0,w,c
  1180   012594  B4D8               	btfsc	status,2,c
  1181   012596  EFCF  F092         	goto	u1901
  1182   01259A  EFD1  F092         	goto	u1900
  1183   01259E                     u1901:
  1184   01259E  EF01  F093         	goto	l4084
  1185   0125A2                     u1900:
  1186   0125A2                     
  1187                           ;xf/xf.c: 112:     {;xf/xf.c: 113:         Event_setDelay(&ev,0);
  1188   0125A2  0E00               	movlw	0
  1189   0125A4  6EE6               	movwf	postinc1,c
  1190   0125A6  0E00               	movlw	0
  1191   0125A8  6EE6               	movwf	postinc1,c
  1192                           
  1193                           ;stkvar	_ev @ sp[(-5)+-6]
  1194   0125AA  0EF5               	movlw	245
  1195   0125AC  24E1               	addwf	fsr1l,w,c
  1196   0125AE  6E2D               	movwf	btemp^0,c
  1197   0125B0  0EFF               	movlw	255
  1198   0125B2  20E2               	addwfc	fsr1h,w,c
  1199   0125B4  6E2E               	movwf	(btemp+1)^0,c
  1200   0125B6  C02D  FFE6         	movff	btemp,postinc1
  1201   0125BA  C02E  FFE6         	movff	btemp+1,postinc1
  1202   0125BE  ECF2  F0A1         	call	_Event_setDelay	;wreg free
  1203   0125C2                     
  1204                           ;xf/xf.c: 114:         *tmid = XF_scheduleTimer(tm, ev, inISR);
  1205                           ;stkvar	_inISR @ sp[(-3)+-7]
  1206   0125C2  0EF6               	movlw	-10
  1207   0125C4  50E3               	movf	plusw1,w,c
  1208   0125C6  6EE6               	movwf	postinc1,c
  1209                           
  1210                           ;stkvar	_ev @ sp[(-4)+-6]
  1211   0125C8  0EF6               	movlw	246
  1212   0125CA  24E1               	addwf	fsr1l,w,c
  1213   0125CC  6ED9               	movwf	fsr2l,c
  1214   0125CE  0EFF               	movlw	255
  1215   0125D0  20E2               	addwfc	fsr1h,w,c
  1216   0125D2  6EDA               	movwf	fsr2h,c
  1217   0125D4  0E06               	movlw	6
  1218   0125D6                     u1911:
  1219   0125D6  CFDE FFE6          	movff	postinc2,postinc1
  1220   0125DA  2CE8               	decfsz	wreg,w,c
  1221   0125DC  EFEB  F092         	goto	u1911
  1222                           
  1223                           ;stkvar	_tm @ sp[(-10)+0]
  1224   0125E0  0EF6               	movlw	-10
  1225   0125E2  CFE3 FFE6          	movff	plusw1,postinc1
  1226   0125E6  CFE3 FFE6          	movff	plusw1,postinc1
  1227   0125EA  ECC3  F098         	call	_XF_scheduleTimer	;wreg free
  1228                           
  1229                           ;stkvar	_tmid @ sp[(-3)+-9]
  1230   0125EE  0EF4               	movlw	-12
  1231   0125F0  CFE3 FFD9          	movff	plusw1,fsr2l
  1232   0125F4  0EF5               	movlw	-11
  1233   0125F6  CFE3 FFDA          	movff	plusw1,fsr2h
  1234   0125FA  C02D  FFDF         	movff	btemp,indf2
  1235                           
  1236                           ;xf/xf.c: 115:     }
  1237   0125FE  EF68  F093         	goto	l4104
  1238   012602                     l4084:
  1239                           
  1240                           ;xf/xf.c: 117:     {;xf/xf.c: 118:         ENTERCRITICAL(inISR);
  1241                           ;stkvar	_inISR @ sp[(-3)+-7]
  1242   012602  0EF6               	movlw	-10
  1243   012604  50E3               	movf	plusw1,w,c
  1244   012606  6EE6               	movwf	postinc1,c
  1245   012608  ECCD  F0A2         	call	_ENTERCRITICAL	;wreg free
  1246   01260C                     
  1247                           ;xf/xf.c: 119:         if((theXF.countEvt+1) >= 30)
  1248   01260C  EE23  F0DF         	lfsr	2,_theXF+279
  1249   012610  50DF               	movf	indf2,w,c
  1250   012612  6E37               	movwf	(btemp+10)^0,c
  1251   012614  6A38               	clrf	(btemp+11)^0,c
  1252   012616  0E01               	movlw	1
  1253   012618  2637               	addwf	(btemp+10)^0,f,c
  1254   01261A  0E00               	movlw	0
  1255   01261C  2238               	addwfc	(btemp+11)^0,f,c
  1256   01261E  BE38               	btfsc	(btemp+11)^0,7,c
  1257   012620  EF1B  F093         	goto	u1921
  1258   012624  5038               	movf	(btemp+11)^0,w,c
  1259   012626  E109               	bnz	u1920
  1260   012628  0E1E               	movlw	30
  1261   01262A  5C37               	subwf	(btemp+10)^0,w,c
  1262   01262C  A0D8               	btfss	status,0,c
  1263   01262E  EF1B  F093         	goto	u1921
  1264   012632  EF1D  F093         	goto	u1920
  1265   012636                     u1921:
  1266   012636  EF1F  F093         	goto	l4090
  1267   01263A                     u1920:
  1268   01263A                     
  1269                           ;xf/xf.c: 120:         {;xf/xf.c: 121:             XF_noMoreEvent();
  1270   01263A  ECF3  F0A2         	call	_XF_noMoreEvent	;wreg free
  1271   01263E                     l4090:
  1272                           
  1273                           ;xf/xf.c: 123:         theXF.countEvt++;
  1274   01263E  C3DF  FFE8         	movff	_theXF+279,wreg
  1275   012642  0F01               	addlw	1
  1276   012644  CFE8 F3DF          	movff	wreg,_theXF+279
  1277   012648                     
  1278                           ;xf/xf.c: 124:         if(theXF.maxEvt < theXF.countEvt)
  1279   012648  EE23  F0DF         	lfsr	2,_theXF+279
  1280   01264C  EE03  F0DE         	lfsr	0,_theXF+278
  1281   012650  50DE               	movf	postinc2,w,c
  1282   012652  5CEE               	subwf	postinc0,w,c
  1283   012654  B0D8               	btfsc	status,0,c
  1284   012656  EF2F  F093         	goto	u1931
  1285   01265A  EF31  F093         	goto	u1930
  1286   01265E                     u1931:
  1287   01265E  EF33  F093         	goto	l4096
  1288   012662                     u1930:
  1289   012662                     
  1290                           ;xf/xf.c: 125:         {;xf/xf.c: 126:             theXF.maxEvt = theXF.countEvt;
  1291   012662  C3DF  F3DE         	movff	_theXF+279,_theXF+278
  1292   012666                     l4096:
  1293                           
  1294                           ;xf/xf.c: 128:         temp = (theXF.in+1) % (uint8_t)(30);
  1295   012666  0E1E               	movlw	30
  1296   012668  6EE6               	movwf	postinc1,c
  1297   01266A  0E00               	movlw	0
  1298   01266C  6EE6               	movwf	postinc1,c
  1299   01266E  EE23  F0DC         	lfsr	2,_theXF+276
  1300   012672  50DF               	movf	indf2,w,c
  1301   012674  6E37               	movwf	(btemp+10)^0,c
  1302   012676  6A38               	clrf	(btemp+11)^0,c
  1303   012678  0E01               	movlw	1
  1304   01267A  2637               	addwf	(btemp+10)^0,f,c
  1305   01267C  0E00               	movlw	0
  1306   01267E  2238               	addwfc	(btemp+11)^0,f,c
  1307   012680  C037  FFE6         	movff	btemp+10,postinc1
  1308   012684  C038  FFE6         	movff	btemp+11,postinc1
  1309   012688  EC19  F094         	call	___awmod	;wreg free
  1310                           
  1311                           ;stkvar	_temp @ sp[(-3)+2]
  1312   01268C  0EFF               	movlw	-1
  1313   01268E  C02D  FFE3         	movff	btemp,plusw1
  1314   012692                     
  1315                           ;xf/xf.c: 129:         theXF.eventQueue[theXF.in] = ev;
  1316                           ;stkvar	_ev @ sp[(-3)+-6]
  1317   012692  0EF7               	movlw	247
  1318   012694  24E1               	addwf	fsr1l,w,c
  1319   012696  6ED9               	movwf	fsr2l,c
  1320   012698  0EFF               	movlw	255
  1321   01269A  20E2               	addwfc	fsr1h,w,c
  1322   01269C  6EDA               	movwf	fsr2h,c
  1323   01269E  EE03  F0DC         	lfsr	0,_theXF+276
  1324   0126A2  50EF               	movf	indf0,w,c
  1325   0126A4  0D06               	mullw	6
  1326   0126A6  0E28               	movlw	low (_theXF+96)
  1327   0126A8  24F3               	addwf	243,w,c
  1328   0126AA  6EE9               	movwf	fsr0l,c
  1329   0126AC  0E03               	movlw	high (_theXF+96)
  1330   0126AE  20F4               	addwfc	prodh,w,c
  1331   0126B0  6EEA               	movwf	fsr0h,c
  1332   0126B2  0E05               	movlw	5
  1333   0126B4                     u1941:
  1334   0126B4  CFDB FFEB          	movff	plusw2,plusw0
  1335   0126B8  06E8               	decf	wreg,f,c
  1336   0126BA  E2FC               	bc	u1941
  1337   0126BC                     
  1338                           ;xf/xf.c: 130:         theXF.in = temp;
  1339                           ;stkvar	_temp @ sp[(-3)+2]
  1340   0126BC  0EFF               	movlw	-1
  1341   0126BE  CFE3 F038          	movff	plusw1,btemp+11
  1342   0126C2  C038  F3DC         	movff	btemp+11,_theXF+276
  1343   0126C6                     
  1344                           ;xf/xf.c: 131:         LEAVECRITICAL(inISR);
  1345                           ;stkvar	_inISR @ sp[(-3)+-7]
  1346   0126C6  0EF6               	movlw	-10
  1347   0126C8  50E3               	movf	plusw1,w,c
  1348   0126CA  6EE6               	movwf	postinc1,c
  1349   0126CC  ECC1  F0A2         	call	_LEAVECRITICAL	;wreg free
  1350   0126D0                     l4104:
  1351                           
  1352                           ;xf/xf.c: 133:     return 1;
  1353   0126D0  0E01               	movlw	1
  1354   0126D2  6E2D               	movwf	btemp^0,c
  1355   0126D4                     
  1356                           ; _XF_pushEvent: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 9, 
      +                          argsize = 9, vargsize = 0
  1357   0126D4  0EF4               	movlw	244
  1358   0126D6  26E1               	addwf	fsr1l,f,c
  1359   0126D8  0EFF               	movlw	255
  1360   0126DA  22E2               	addwfc	fsr1h,f,c
  1361   0126DC  0012               	return		;funcret
  1362   0126DE                     __end_of_XF_pushEvent:
  1363                           	callstack 0
  1364                           
  1365 ;; *************** function _XF_scheduleTimer *****************
  1366 ;; Defined at:
  1367 ;;		line 169 in file "xf/xf.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  tm              2  [STACK] unsigned short 
  1370 ;;  ev              6  [STACK] struct Event_
  1371 ;;  inISR           1  [STACK] _Bool 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  i               1  [STACK] unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1  [STACK] unsigned char 
  1376 ;; Registers used:
  1377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;Total ram usage:        0 bytes
  1388 ;; Hardware stack levels used: 1
  1389 ;; Hardware stack levels required when called: 8
  1390 ;; This function calls:
  1391 ;;		_ENTERCRITICAL
  1392 ;;		_LEAVECRITICAL
  1393 ;;		_XF_noMoreTimer
  1394 ;; This function is called by:
  1395 ;;		_XF_pushEvent
  1396 ;; This function uses a reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text4
  1400   013186                     __ptext4:
  1401                           	callstack 0
  1402   013186                     _XF_scheduleTimer:
  1403                           	callstack 0
  1404                           
  1405                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 9, argsize = 9 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1406   013186  52E6               	movf	postinc1,f,c
  1407   013188                     
  1408                           ;xf/xf.c: 169: uint8_t XF_scheduleTimer(uint16_t tm, Event ev, _Bool inISR);xf/xf.c: 170
      +                          : {;xf/xf.c: 171:     uint8_t i;;xf/xf.c: 173:     ENTERCRITICAL(inISR);
  1409                           ;stkvar	_inISR @ sp[(-1)+-9]
  1410   013188  0EF6               	movlw	-10
  1411   01318A  50E3               	movf	plusw1,w,c
  1412   01318C  6EE6               	movwf	postinc1,c
  1413   01318E  ECCD  F0A2         	call	_ENTERCRITICAL	;wreg free
  1414                           
  1415                           ;xf/xf.c: 174:     for (i=0; i<12; i++)
  1416                           ;stkvar	_i @ sp[(-1)+0]
  1417   013192  0EFF               	movlw	-1
  1418   013194  6AE3               	clrf	plusw1,c
  1419   013196                     l3954:
  1420                           
  1421                           ;xf/xf.c: 175:     {;xf/xf.c: 176:         if (theXF.timerList[i].ev.id == 0)
  1422                           ;stkvar	_i @ sp[(-1)+0]
  1423   013196  0EFF               	movlw	-1
  1424   013198  50E3               	movf	plusw1,w,c
  1425   01319A  0D08               	mullw	8
  1426   01319C  0ECA               	movlw	low (_theXF+2)
  1427   01319E  24F3               	addwf	243,w,c
  1428   0131A0  6ED9               	movwf	fsr2l,c
  1429   0131A2  0E02               	movlw	high (_theXF+2)
  1430   0131A4  20F4               	addwfc	prodh,w,c
  1431   0131A6  6EDA               	movwf	fsr2h,c
  1432   0131A8  50DF               	movf	indf2,w,c
  1433   0131AA  A4D8               	btfss	status,2,c
  1434   0131AC  EFDA  F098         	goto	u1761
  1435   0131B0  EFDC  F098         	goto	u1760
  1436   0131B4                     u1761:
  1437   0131B4  EF22  F099         	goto	l3972
  1438   0131B8                     u1760:
  1439   0131B8                     
  1440                           ;xf/xf.c: 177:         {;xf/xf.c: 178:             theXF.timerList[i].tm = tm;
  1441                           ;stkvar	_tm @ sp[(-1)+-2]
  1442   0131B8  50E1               	movf	fsr1l,w,c
  1443   0131BA  0FFD               	addlw	-3
  1444   0131BC  6ED9               	movwf	fsr2l,c
  1445   0131BE  50E2               	movf	fsr1h,w,c
  1446   0131C0  6EDA               	movwf	fsr2h,c
  1447   0131C2  0EFF               	movlw	255
  1448   0131C4  22DA               	addwfc	fsr2h,f,c
  1449                           
  1450                           ;stkvar	_i @ sp[(-1)+0]
  1451   0131C6  0EFF               	movlw	-1
  1452   0131C8  50E3               	movf	plusw1,w,c
  1453   0131CA  0D08               	mullw	8
  1454   0131CC  0EC8               	movlw	low _theXF
  1455   0131CE  24F3               	addwf	243,w,c
  1456   0131D0  6EE9               	movwf	fsr0l,c
  1457   0131D2  0E02               	movlw	high _theXF
  1458   0131D4  20F4               	addwfc	prodh,w,c
  1459   0131D6  6EEA               	movwf	fsr0h,c
  1460   0131D8  CFDE FFEE          	movff	postinc2,postinc0
  1461   0131DC  CFDD FFED          	movff	postdec2,postdec0
  1462                           
  1463                           ;xf/xf.c: 179:             theXF.timerList[i].ev = ev;
  1464                           ;stkvar	_ev @ sp[(-1)+-8]
  1465   0131E0  0EF7               	movlw	247
  1466   0131E2  24E1               	addwf	fsr1l,w,c
  1467   0131E4  6ED9               	movwf	fsr2l,c
  1468   0131E6  0EFF               	movlw	255
  1469   0131E8  20E2               	addwfc	fsr1h,w,c
  1470   0131EA  6EDA               	movwf	fsr2h,c
  1471                           
  1472                           ;stkvar	_i @ sp[(-1)+0]
  1473   0131EC  0EFF               	movlw	-1
  1474   0131EE  50E3               	movf	plusw1,w,c
  1475   0131F0  0D08               	mullw	8
  1476   0131F2  0ECA               	movlw	low (_theXF+2)
  1477   0131F4  24F3               	addwf	243,w,c
  1478   0131F6  6EE9               	movwf	fsr0l,c
  1479   0131F8  0E02               	movlw	high (_theXF+2)
  1480   0131FA  20F4               	addwfc	prodh,w,c
  1481   0131FC  6EEA               	movwf	fsr0h,c
  1482   0131FE  0E05               	movlw	5
  1483   013200                     u1771:
  1484   013200  CFDB FFEB          	movff	plusw2,plusw0
  1485   013204  06E8               	decf	wreg,f,c
  1486   013206  E2FC               	bc	u1771
  1487   013208                     
  1488                           ;xf/xf.c: 180:             theXF.countTmr++;
  1489   013208  C3E1  FFE8         	movff	_theXF+281,wreg
  1490   01320C  0F01               	addlw	1
  1491   01320E  CFE8 F3E1          	movff	wreg,_theXF+281
  1492   013212                     
  1493                           ;xf/xf.c: 181:             if(theXF.countTmr > theXF.maxTmr)
  1494   013212  EE23  F0E1         	lfsr	2,_theXF+281
  1495   013216  EE03  F0E0         	lfsr	0,_theXF+280
  1496   01321A  50DE               	movf	postinc2,w,c
  1497   01321C  5CEE               	subwf	postinc0,w,c
  1498   01321E  B0D8               	btfsc	status,0,c
  1499   013220  EF14  F099         	goto	u1781
  1500   013224  EF16  F099         	goto	u1780
  1501   013228                     u1781:
  1502   013228  EF18  F099         	goto	l3964
  1503   01322C                     u1780:
  1504   01322C                     
  1505                           ;xf/xf.c: 182:             {;xf/xf.c: 183:                 theXF.maxTmr = theXF.countTmr
      +                          ;
  1506   01322C  C3E1  F3E0         	movff	_theXF+281,_theXF+280
  1507   013230                     l3964:
  1508                           
  1509                           ;xf/xf.c: 185:             LEAVECRITICAL(inISR);
  1510                           ;stkvar	_inISR @ sp[(-1)+-9]
  1511   013230  0EF6               	movlw	-10
  1512   013232  50E3               	movf	plusw1,w,c
  1513   013234  6EE6               	movwf	postinc1,c
  1514   013236  ECC1  F0A2         	call	_LEAVECRITICAL	;wreg free
  1515   01323A                     
  1516                           ;xf/xf.c: 186:             return i;
  1517                           ;stkvar	_i @ sp[(-1)+0]
  1518   01323A  0EFF               	movlw	-1
  1519   01323C  CFE3 F02D          	movff	plusw1,btemp
  1520   013240  EF33  F099         	goto	l1234
  1521   013244                     l3972:
  1522                           
  1523                           ;xf/xf.c: 189:     }
  1524                           ;stkvar	_i @ sp[(-1)+0]
  1525   013244  0EFF               	movlw	-1
  1526   013246  2AE3               	incf	plusw1,f,c
  1527   013248                     
  1528                           ;stkvar	_i @ sp[(-1)+0]
  1529   013248  0EFF               	movlw	-1
  1530   01324A  CFE3 F02D          	movff	plusw1,btemp
  1531   01324E  0E0B               	movlw	11
  1532   013250  642D               	cpfsgt	btemp^0,c
  1533   013252  EF2D  F099         	goto	u1791
  1534   013256  EF2F  F099         	goto	u1790
  1535   01325A                     u1791:
  1536   01325A  EFCB  F098         	goto	l3954
  1537   01325E                     u1790:
  1538   01325E                     
  1539                           ;xf/xf.c: 190:     XF_noMoreTimer();
  1540   01325E  ECF0  F0A2         	call	_XF_noMoreTimer	;wreg free
  1541   013262  EF18  F099         	goto	l3964
  1542   013266                     l1234:
  1543                           
  1544                           ; _XF_scheduleTimer: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           9, argsize = 9, vargsize = 0
  1545   013266  0EF6               	movlw	246
  1546   013268  26E1               	addwf	fsr1l,f,c
  1547   01326A  0EFF               	movlw	255
  1548   01326C  22E2               	addwfc	fsr1h,f,c
  1549   01326E  0012               	return		;funcret
  1550   013270                     __end_of_XF_scheduleTimer:
  1551                           	callstack 0
  1552                           
  1553 ;; *************** function _XF_noMoreTimer *****************
  1554 ;; Defined at:
  1555 ;;		line 69 in file "xf/xf.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;		None
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;		None
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1  [STACK] void 
  1562 ;; Registers used:
  1563 ;;		None
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;Total ram usage:        0 bytes
  1574 ;; Hardware stack levels used: 1
  1575 ;; Hardware stack levels required when called: 7
  1576 ;; This function calls:
  1577 ;;		Nothing
  1578 ;; This function is called by:
  1579 ;;		_XF_scheduleTimer
  1580 ;; This function uses a reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text5
  1584   0145E0                     __ptext5:
  1585                           	callstack 0
  1586   0145E0                     _XF_noMoreTimer:
  1587                           	callstack 9
  1588   0145E0                     l1206:
  1589   0145E0  EFF0  F0A2         	goto	l1206
  1590                           
  1591                           ; _XF_noMoreTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  1592   0145E4  0012               	return		;funcret
  1593   0145E6                     __end_of_XF_noMoreTimer:
  1594                           	callstack 0
  1595                           
  1596 ;; *************** function _XF_noMoreEvent *****************
  1597 ;; Defined at:
  1598 ;;		line 65 in file "xf/xf.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;		None
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1  [STACK] void 
  1605 ;; Registers used:
  1606 ;;		None
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;Total ram usage:        0 bytes
  1617 ;; Hardware stack levels used: 1
  1618 ;; Hardware stack levels required when called: 7
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_XF_pushEvent
  1623 ;; This function uses a reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text6
  1627   0145E6                     __ptext6:
  1628                           	callstack 0
  1629   0145E6                     _XF_noMoreEvent:
  1630                           	callstack 10
  1631   0145E6                     l1200:
  1632   0145E6  EFF3  F0A2         	goto	l1200
  1633                           
  1634                           ; _XF_noMoreEvent: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  1635   0145EA  0012               	return		;funcret
  1636   0145EC                     __end_of_XF_noMoreEvent:
  1637                           	callstack 0
  1638                           
  1639 ;; *************** function _Event_setDelay *****************
  1640 ;; Defined at:
  1641 ;;		line 32 in file "xf/event.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;  me              2  [STACK] PTR struct Event_
  1644 ;;		 -> ev(6), 
  1645 ;;  delay           2  [STACK] unsigned short 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;		None
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1  [STACK] void 
  1650 ;; Registers used:
  1651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;Total ram usage:        0 bytes
  1662 ;; Hardware stack levels used: 1
  1663 ;; Hardware stack levels required when called: 7
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_XF_pushEvent
  1668 ;;		_XF_post
  1669 ;; This function uses a reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text7
  1673   0143E4                     __ptext7:
  1674                           	callstack 0
  1675   0143E4                     _Event_setDelay:
  1676                           	callstack 10
  1677   0143E4                     
  1678                           ;xf/event.c: 32: void Event_setDelay(Event* me, uint16_t delay);xf/event.c: 33: {;xf/eve
      +                          nt.c: 34:     me->delay = delay;
  1679                           ;stkvar	_delay @ sp[(0)+-4]
  1680   0143E4  50E1               	movf	fsr1l,w,c
  1681   0143E6  0FFC               	addlw	-4
  1682   0143E8  6ED9               	movwf	fsr2l,c
  1683   0143EA  50E2               	movf	fsr1h,w,c
  1684   0143EC  6EDA               	movwf	fsr2h,c
  1685   0143EE  0EFF               	movlw	255
  1686   0143F0  22DA               	addwfc	fsr2h,f,c
  1687                           
  1688                           ;stkvar	_me @ sp[(0)+-2]
  1689   0143F2  0EFE               	movlw	-2
  1690   0143F4  CFE3 F037          	movff	plusw1,btemp+10
  1691   0143F8  0EFF               	movlw	-1
  1692   0143FA  CFE3 F038          	movff	plusw1,btemp+11
  1693   0143FE  0E04               	movlw	4
  1694   014400  2437               	addwf	(btemp+10)^0,w,c
  1695   014402  6EE9               	movwf	fsr0l,c
  1696   014404  0E00               	movlw	0
  1697   014406  2038               	addwfc	(btemp+11)^0,w,c
  1698   014408  6EEA               	movwf	fsr0h,c
  1699   01440A  CFDE FFEE          	movff	postinc2,postinc0
  1700   01440E  CFDD FFED          	movff	postdec2,postdec0
  1701   014412                     
  1702                           ; _Event_setDelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  1703   014412  52E5               	movf	postdec1,f,c
  1704   014414  52E5               	movf	postdec1,f,c
  1705   014416  52E5               	movf	postdec1,f,c
  1706   014418  52E5               	movf	postdec1,f,c
  1707   01441A  0012               	return		;funcret
  1708   01441C                     __end_of_Event_setDelay:
  1709                           	callstack 0
  1710                           
  1711 ;; *************** function _Event_getDelay *****************
  1712 ;; Defined at:
  1713 ;;		line 37 in file "xf/event.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  me              2  [STACK] PTR struct Event_
  1716 ;;		 -> ev(6), 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  2  [STACK] unsigned short 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;Total ram usage:        0 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; Hardware stack levels required when called: 7
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_XF_pushEvent
  1739 ;; This function uses a reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text8
  1743   014504                     __ptext8:
  1744                           	callstack 0
  1745   014504                     _Event_getDelay:
  1746                           	callstack 10
  1747   014504                     
  1748                           ;xf/event.c: 37: uint16_t Event_getDelay(Event* me);xf/event.c: 38: {;xf/event.c: 39:   
      +                            return me->delay;
  1749                           ;stkvar	_me @ sp[(0)+-2]
  1750   014504  0EFE               	movlw	-2
  1751   014506  CFE3 F037          	movff	plusw1,btemp+10
  1752   01450A  0EFF               	movlw	-1
  1753   01450C  CFE3 F038          	movff	plusw1,btemp+11
  1754   014510  0E04               	movlw	4
  1755   014512  2437               	addwf	(btemp+10)^0,w,c
  1756   014514  6ED9               	movwf	fsr2l,c
  1757   014516  0E00               	movlw	0
  1758   014518  2038               	addwfc	(btemp+11)^0,w,c
  1759   01451A  6EDA               	movwf	fsr2h,c
  1760   01451C  CFDE F02D          	movff	postinc2,btemp
  1761   014520  CFDD F02E          	movff	postdec2,btemp+1
  1762   014524                     
  1763                           ; _Event_getDelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
  1764   014524  52E5               	movf	postdec1,f,c
  1765   014526  52E5               	movf	postdec1,f,c
  1766   014528  0012               	return		;funcret
  1767   01452A                     __end_of_Event_getDelay:
  1768                           	callstack 0
  1769                           
  1770 ;; *************** function _Event_setPE *****************
  1771 ;; Defined at:
  1772 ;;		line 12 in file "xf/event.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  me              2  [STACK] PTR struct Event_
  1775 ;;		 -> ev(6), 
  1776 ;;  processEvent    3  [STACK] PTR FTN(PTR struct Event
  1777 ;;		 -> lightControl_Process(1), 
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1  [STACK] void 
  1782 ;; Registers used:
  1783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;Total ram usage:        0 bytes
  1794 ;; Hardware stack levels used: 1
  1795 ;; Hardware stack levels required when called: 7
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_XF_post
  1800 ;; This function uses a reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text9
  1804   01436E                     __ptext9:
  1805                           	callstack 0
  1806   01436E                     _Event_setPE:
  1807                           	callstack 21
  1808   01436E                     
  1809                           ;xf/event.c: 12: void Event_setPE(Event* me, processEventT processEvent);xf/event.c: 13:
      +                           {;xf/event.c: 14:     me->processEvent = processEvent;
  1810                           ;stkvar	_processEvent @ sp[(0)+-5]
  1811   01436E  50E1               	movf	fsr1l,w,c
  1812   014370  0FFB               	addlw	-5
  1813   014372  6ED9               	movwf	fsr2l,c
  1814   014374  50E2               	movf	fsr1h,w,c
  1815   014376  6EDA               	movwf	fsr2h,c
  1816   014378  0EFF               	movlw	255
  1817   01437A  22DA               	addwfc	fsr2h,f,c
  1818                           
  1819                           ;stkvar	_me @ sp[(0)+-2]
  1820   01437C  0EFE               	movlw	-2
  1821   01437E  CFE3 F037          	movff	plusw1,btemp+10
  1822   014382  0EFF               	movlw	-1
  1823   014384  CFE3 F038          	movff	plusw1,btemp+11
  1824   014388  0E01               	movlw	1
  1825   01438A  2437               	addwf	(btemp+10)^0,w,c
  1826   01438C  6EE9               	movwf	fsr0l,c
  1827   01438E  0E00               	movlw	0
  1828   014390  2038               	addwfc	(btemp+11)^0,w,c
  1829   014392  6EEA               	movwf	fsr0h,c
  1830   014394  CFDE FFEE          	movff	postinc2,postinc0
  1831   014398  CFDE FFEE          	movff	postinc2,postinc0
  1832   01439C  CFDE FFEE          	movff	postinc2,postinc0
  1833   0143A0                     
  1834                           ; _Event_setPE: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, a
      +                          rgsize = 5, vargsize = 0
  1835   0143A0  0EFB               	movlw	251
  1836   0143A2  26E1               	addwf	fsr1l,f,c
  1837   0143A4  0EFF               	movlw	255
  1838   0143A6  22E2               	addwfc	fsr1h,f,c
  1839   0143A8  0012               	return		;funcret
  1840   0143AA                     __end_of_Event_setPE:
  1841                           	callstack 0
  1842                           
  1843 ;; *************** function _Event_setId *****************
  1844 ;; Defined at:
  1845 ;;		line 22 in file "xf/event.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  me              2  [STACK] PTR struct Event_
  1848 ;;		 -> ev(6), 
  1849 ;;  eventID         1  [STACK] unsigned char 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1  [STACK] void 
  1854 ;; Registers used:
  1855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;Total ram usage:        0 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 7
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_XF_post
  1872 ;; This function uses a reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text10
  1876   014568                     __ptext10:
  1877                           	callstack 0
  1878   014568                     _Event_setId:
  1879                           	callstack 21
  1880   014568                     
  1881                           ;xf/event.c: 22: void Event_setId(Event* me, evIDT eventID);xf/event.c: 23: {;xf/event.c
      +                          : 24:     me->id = eventID;
  1882                           ;stkvar	_eventID @ sp[(0)+-3]
  1883                           ;stkvar	_me @ sp[(0)+-2]
  1884   014568  0EFE               	movlw	-2
  1885   01456A  CFE3 FFD9          	movff	plusw1,fsr2l
  1886   01456E  0EFF               	movlw	-1
  1887   014570  CFE3 FFDA          	movff	plusw1,fsr2h
  1888   014574  0EFD               	movlw	-3
  1889   014576  CFE3 FFDF          	movff	plusw1,indf2
  1890   01457A                     
  1891                           ; _Event_setId: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, a
      +                          rgsize = 3, vargsize = 0
  1892   01457A  52E5               	movf	postdec1,f,c
  1893   01457C  52E5               	movf	postdec1,f,c
  1894   01457E  52E5               	movf	postdec1,f,c
  1895   014580  0012               	return		;funcret
  1896   014582                     __end_of_Event_setId:
  1897                           	callstack 0
  1898                           
  1899 ;; *************** function _CanReceive *****************
  1900 ;; Defined at:
  1901 ;;		line 242 in file "can/can.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  rxObj           2  [STACK] PTR struct _CAN_RX_MSGOB
  1904 ;;		 -> rxObj(16), 
  1905 ;;  rxd             2  [STACK] PTR unsigned char 
  1906 ;;		 -> rxdata(8), 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;  rxFlags         1  [STACK] enum E5591
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1  [STACK] char 
  1911 ;; Registers used:
  1912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;Total ram usage:        0 bytes
  1923 ;; Hardware stack levels used: 1
  1924 ;; Hardware stack levels required when called: 11
  1925 ;; This function calls:
  1926 ;;		_DRV_CANFDSPI_ReceiveChannelEventGet
  1927 ;;		_DRV_CANFDSPI_ReceiveMessageGet
  1928 ;; This function is called by:
  1929 ;;		_updateCarState
  1930 ;; This function uses a reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text11
  1934   01409E                     __ptext11:
  1935                           	callstack 0
  1936   01409E                     _CanReceive:
  1937                           	callstack 0
  1938                           
  1939                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1940   01409E  52E6               	movf	postinc1,f,c
  1941   0140A0                     
  1942                           ;can/can.c: 242: int8_t CanReceive(CAN_RX_MSGOBJ * rxObj, uint8_t * rxd);can/can.c: 243:
      +                           {;can/can.c: 244:   CAN_RX_FIFO_EVENT rxFlags;;can/can.c: 245:   DRV_CANFDSPI_ReceiveCh
      +                          annelEventGet(CAN_FIFO_CH2,&rxFlags);
  1943                           ;stkvar	_rxFlags @ sp[(-1)+0]
  1944   0140A0  0EFF               	movlw	255
  1945   0140A2  24E1               	addwf	fsr1l,w,c
  1946   0140A4  6E2D               	movwf	btemp^0,c
  1947   0140A6  0EFF               	movlw	255
  1948   0140A8  20E2               	addwfc	fsr1h,w,c
  1949   0140AA  6E2E               	movwf	(btemp+1)^0,c
  1950   0140AC  C02D  FFE6         	movff	btemp,postinc1
  1951   0140B0  C02E  FFE6         	movff	btemp+1,postinc1
  1952   0140B4  0E02               	movlw	2
  1953   0140B6  6EE6               	movwf	postinc1,c
  1954   0140B8  EC23  F09E         	call	_DRV_CANFDSPI_ReceiveChannelEventGet	;wreg free
  1955   0140BC                     
  1956                           ;can/can.c: 246:   if(rxFlags & CAN_RX_FIFO_NOT_EMPTY_EVENT)
  1957                           ;stkvar	_rxFlags @ sp[(-1)+0]
  1958   0140BC  0EFF               	movlw	-1
  1959   0140BE  A0E3               	btfss	plusw1,0,c
  1960   0140C0  EF64  F0A0         	goto	u2581
  1961   0140C4  EF66  F0A0         	goto	u2580
  1962   0140C8                     u2581:
  1963   0140C8  EF7A  F0A0         	goto	l4680
  1964   0140CC                     u2580:
  1965   0140CC                     
  1966                           ;can/can.c: 247:   {;can/can.c: 248:     DRV_CANFDSPI_ReceiveMessageGet(CAN_FIFO_CH2,rxO
      +                          bj,rxd,8);
  1967   0140CC  0E08               	movlw	8
  1968   0140CE  6EE6               	movwf	postinc1,c
  1969                           
  1970                           ;stkvar	_rxd @ sp[(-2)+-4]
  1971   0140D0  0EFA               	movlw	-6
  1972   0140D2  CFE3 FFE6          	movff	plusw1,postinc1
  1973   0140D6  CFE3 FFE6          	movff	plusw1,postinc1
  1974                           
  1975                           ;stkvar	_rxObj @ sp[(-4)+-2]
  1976   0140DA  0EFA               	movlw	-6
  1977   0140DC  CFE3 FFE6          	movff	plusw1,postinc1
  1978   0140E0  CFE3 FFE6          	movff	plusw1,postinc1
  1979   0140E4  0E02               	movlw	2
  1980   0140E6  6EE6               	movwf	postinc1,c
  1981   0140E8  ECA6  F083         	call	_DRV_CANFDSPI_ReceiveMessageGet	;wreg free
  1982   0140EC                     
  1983                           ;can/can.c: 249:     return 0;
  1984   0140EC  0E00               	movlw	0
  1985   0140EE  6E2D               	movwf	btemp^0,c
  1986   0140F0  EF7C  F0A0         	goto	l165
  1987   0140F4                     l4680:
  1988                           
  1989                           ;can/can.c: 251:   return -1;
  1990   0140F4  0EFF               	movlw	255
  1991   0140F6  6E2D               	movwf	btemp^0,c
  1992   0140F8                     l165:
  1993                           
  1994                           ; _CanReceive: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  1995   0140F8  0EFB               	movlw	251
  1996   0140FA  26E1               	addwf	fsr1l,f,c
  1997   0140FC  0EFF               	movlw	255
  1998   0140FE  22E2               	addwfc	fsr1h,f,c
  1999   014100  0012               	return		;funcret
  2000   014102                     __end_of_CanReceive:
  2001                           	callstack 0
  2002                           
  2003 ;; *************** function _DRV_CANFDSPI_ReceiveMessageGet *****************
  2004 ;; Defined at:
  2005 ;;		line 1236 in file "can/can.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  channel         1  [STACK] enum E5290
  2008 ;;  rxObj           2  [STACK] PTR struct _CAN_RX_MSGOB
  2009 ;;		 -> rxObj(16), txMsg(16), 
  2010 ;;  rxd             2  [STACK] PTR unsigned char 
  2011 ;;		 -> rxdata(8), 
  2012 ;;  nBytes          1  [STACK] unsigned char 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  temp32          4  [STACK] unsigned long 
  2015 ;;  ba             76  [STACK] unsigned char [76]
  2016 ;;  fifoReg        12  [STACK] unsigned long [3]
  2017 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
  2018 ;;  myReg           4  [STACK] struct _REG_t
  2019 ;;  ciFifoUa        4  [STACK] struct _REG_CiFIFOUA
  2020 ;;  ciFifoSta       4    0        struct _REG_CiFIFOSTA
  2021 ;;  a               2  [STACK] unsigned short 
  2022 ;;  i               1  [STACK] unsigned char 
  2023 ;;  n               1  [STACK] unsigned char 
  2024 ;;  spiTransferE    1  [STACK] char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1  [STACK] char 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;Total ram usage:        0 bytes
  2039 ;; Hardware stack levels used: 1
  2040 ;; Hardware stack levels required when called: 10
  2041 ;; This function calls:
  2042 ;;		_DRV_CANFDSPI_ReadByteArray
  2043 ;;		_DRV_CANFDSPI_ReadWordArray
  2044 ;;		_DRV_CANFDSPI_ReceiveChannelUpdate
  2045 ;; This function is called by:
  2046 ;;		_CanReceive
  2047 ;; This function uses a reentrant model
  2048 ;;
  2049                           
  2050                           	psect	text12
  2051   01074C                     __ptext12:
  2052                           	callstack 0
  2053   01074C                     _DRV_CANFDSPI_ReceiveMessageGet:
  2054                           	callstack 0
  2055                           
  2056                           ; autosize = 110, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 v
      +                          argsize = 0, retsize = 0 argfudge = 0
  2057   01074C  0E6E               	movlw	110
  2058   01074E  26E1               	addwf	fsr1l,f,c
  2059   010750  0E00               	movlw	0
  2060   010752  22E2               	addwfc	fsr1h,f,c
  2061   010754                     
  2062                           ;can/can.c: 1241:     uint8_t i = 0;
  2063                           ;stkvar	_i @ sp[(-110)+107]
  2064   010754  0EFD               	movlw	-3
  2065   010756  6AE3               	clrf	plusw1,c
  2066                           
  2067                           ;can/can.c: 1242:     uint16_t a;;can/can.c: 1243:     uint32_t fifoReg[3];;can/can.c: 1
      +                          244:     REG_CiFIFOCON ciFifoCon;;can/can.c: 1245:     __attribute__((unused)) REG_CiFIF
      +                          OSTA ciFifoSta;;can/can.c: 1246:     REG_CiFIFOUA ciFifoUa;;can/can.c: 1247:     int8_t 
      +                          spiTransferError = 0;
  2068                           ;stkvar	_spiTransferError @ sp[(-110)+109]
  2069   010758  0EFF               	movlw	-1
  2070   01075A  6AE3               	clrf	plusw1,c
  2071   01075C                     
  2072                           ;can/can.c: 1250:     a = 0x050 + (channel * (3*4));
  2073                           ;stkvar	_channel @ sp[(-110)+-1]
  2074   01075C  0E91               	movlw	-111
  2075   01075E  50E3               	movf	plusw1,w,c
  2076   010760  0D0C               	mullw	12
  2077   010762  0E50               	movlw	80
  2078   010764  26F3               	addwf	243,f,c
  2079   010766  0E00               	movlw	0
  2080   010768  22F4               	addwfc	244,f,c
  2081                           
  2082                           ;stkvar	_a @ sp[(-110)+105]
  2083   01076A  0EFB               	movlw	-5
  2084   01076C  CFF3 FFE3          	movff	prodl,plusw1
  2085   010770  0EFC               	movlw	-4
  2086   010772  CFF4 FFE3          	movff	prodh,plusw1
  2087   010776                     
  2088                           ;can/can.c: 1252:     spiTransferError = DRV_CANFDSPI_ReadWordArray( a, fifoReg, 3);
  2089   010776  0E03               	movlw	3
  2090   010778  6EE6               	movwf	postinc1,c
  2091   01077A  0E00               	movlw	0
  2092   01077C  6EE6               	movwf	postinc1,c
  2093                           
  2094                           ;stkvar	_fifoReg @ sp[(-112)+80]
  2095   01077E  0EE0               	movlw	224
  2096   010780  24E1               	addwf	fsr1l,w,c
  2097   010782  6E2D               	movwf	btemp^0,c
  2098   010784  0EFF               	movlw	255
  2099   010786  20E2               	addwfc	fsr1h,w,c
  2100   010788  6E2E               	movwf	(btemp+1)^0,c
  2101   01078A  C02D  FFE6         	movff	btemp,postinc1
  2102   01078E  C02E  FFE6         	movff	btemp+1,postinc1
  2103                           
  2104                           ;stkvar	_a @ sp[(-114)+105]
  2105   010792  0EF7               	movlw	-9
  2106   010794  CFE3 FFE6          	movff	plusw1,postinc1
  2107   010798  CFE3 FFE6          	movff	plusw1,postinc1
  2108   01079C  EC59  F08A         	call	_DRV_CANFDSPI_ReadWordArray	;wreg free
  2109                           
  2110                           ;stkvar	_spiTransferError @ sp[(-110)+109]
  2111   0107A0  0EFF               	movlw	-1
  2112   0107A2  C02D  FFE3         	movff	btemp,plusw1
  2113   0107A6                     
  2114                           ;can/can.c: 1253:     if (spiTransferError) {
  2115                           ;stkvar	_spiTransferError @ sp[(-110)+109]
  2116   0107A6  0EFF               	movlw	-1
  2117   0107A8  50E3               	movf	plusw1,w,c
  2118   0107AA  B4D8               	btfsc	status,2,c
  2119   0107AC  EFDA  F083         	goto	u1971
  2120   0107B0  EFDC  F083         	goto	u1970
  2121   0107B4                     u1971:
  2122   0107B4  EFDE  F083         	goto	l4150
  2123   0107B8                     u1970:
  2124   0107B8  EF15  F087         	goto	l357
  2125   0107BC                     l4150:
  2126                           
  2127                           ;can/can.c: 1258:     ciFifoCon.word = fifoReg[0];
  2128                           ;stkvar	_fifoReg @ sp[(-110)+80]
  2129   0107BC  0EE2               	movlw	-30
  2130   0107BE  CFE3 F035          	movff	plusw1,btemp+8
  2131   0107C2  0EE3               	movlw	-29
  2132   0107C4  CFE3 F036          	movff	plusw1,btemp+9
  2133   0107C8  0EE4               	movlw	-28
  2134   0107CA  CFE3 F037          	movff	plusw1,btemp+10
  2135   0107CE  0EE5               	movlw	-27
  2136   0107D0  CFE3 F038          	movff	plusw1,btemp+11
  2137                           
  2138                           ;stkvar	_ciFifoCon @ sp[(-110)+92]
  2139   0107D4  0EEE               	movlw	-18
  2140   0107D6  C035  FFE3         	movff	btemp+8,plusw1
  2141   0107DA  0EEF               	movlw	-17
  2142   0107DC  C036  FFE3         	movff	btemp+9,plusw1
  2143   0107E0  0EF0               	movlw	-16
  2144   0107E2  C037  FFE3         	movff	btemp+10,plusw1
  2145   0107E6  0EF1               	movlw	-15
  2146   0107E8  C038  FFE3         	movff	btemp+11,plusw1
  2147   0107EC                     
  2148                           ;can/can.c: 1259:     if (ciFifoCon.txBF.TxEnable) {
  2149                           ;stkvar	_ciFifoCon @ sp[(-110)+92]
  2150   0107EC  50E1               	movf	fsr1l,w,c
  2151   0107EE  0FEE               	addlw	-18
  2152   0107F0  6ED9               	movwf	fsr2l,c
  2153   0107F2  50E2               	movf	fsr1h,w,c
  2154   0107F4  6EDA               	movwf	fsr2h,c
  2155   0107F6  0EFF               	movlw	255
  2156   0107F8  22DA               	addwfc	fsr2h,f,c
  2157   0107FA  AEDF               	btfss	indf2,7,c
  2158   0107FC  EF02  F084         	goto	u1981
  2159   010800  EF04  F084         	goto	u1980
  2160   010804                     u1981:
  2161   010804  EF06  F084         	goto	l4156
  2162   010808                     u1980:
  2163   010808  EF15  F087         	goto	l357
  2164   01080C                     l4156:
  2165                           
  2166                           ;can/can.c: 1267:     ciFifoUa.word = fifoReg[2];
  2167                           ;stkvar	_fifoReg @ sp[(-110)+80]
  2168   01080C  0EEA               	movlw	234
  2169   01080E  24E1               	addwf	fsr1l,w,c
  2170   010810  6ED9               	movwf	fsr2l,c
  2171   010812  0EFF               	movlw	255
  2172   010814  20E2               	addwfc	fsr1h,w,c
  2173   010816  6EDA               	movwf	fsr2h,c
  2174   010818  CFDE F035          	movff	postinc2,btemp+8
  2175   01081C  CFDE F036          	movff	postinc2,btemp+9
  2176   010820  CFDE F037          	movff	postinc2,btemp+10
  2177   010824  CFDE F038          	movff	postinc2,btemp+11
  2178                           
  2179                           ;stkvar	_ciFifoUa @ sp[(-110)+101]
  2180   010828  0EF7               	movlw	-9
  2181   01082A  C035  FFE3         	movff	btemp+8,plusw1
  2182   01082E  0EF8               	movlw	-8
  2183   010830  C036  FFE3         	movff	btemp+9,plusw1
  2184   010834  0EF9               	movlw	-7
  2185   010836  C037  FFE3         	movff	btemp+10,plusw1
  2186   01083A  0EFA               	movlw	-6
  2187   01083C  C038  FFE3         	movff	btemp+11,plusw1
  2188   010840                     
  2189                           ;can/can.c: 1271:     a = (uint16_t)ciFifoUa.bF.UserAddress;
  2190                           ;stkvar	_ciFifoUa @ sp[(-110)+101]
  2191                           ;stkvar	_a @ sp[(-110)+105]
  2192   010840  0EF7               	movlw	-9
  2193   010842  CFE3 F02D          	movff	plusw1,btemp
  2194   010846  0EFB               	movlw	-5
  2195   010848  C02D  FFE3         	movff	btemp,plusw1
  2196   01084C  0EF8               	movlw	-8
  2197   01084E  CFE3 F02D          	movff	plusw1,btemp
  2198   010852  0EFC               	movlw	-4
  2199   010854  C02D  FFE3         	movff	btemp,plusw1
  2200   010858                     
  2201                           ;can/can.c: 1273:     a += 0x400;
  2202                           ;stkvar	_a @ sp[(-110)+105]
  2203   010858  50E1               	movf	fsr1l,w,c
  2204   01085A  0FFB               	addlw	-5
  2205   01085C  6ED9               	movwf	fsr2l,c
  2206   01085E  50E2               	movf	fsr1h,w,c
  2207   010860  6EDA               	movwf	fsr2h,c
  2208   010862  0EFF               	movlw	255
  2209   010864  22DA               	addwfc	fsr2h,f,c
  2210   010866  0E00               	movlw	0
  2211   010868  26DE               	addwf	postinc2,f,c
  2212   01086A  0E04               	movlw	4
  2213   01086C  22DD               	addwfc	postdec2,f,c
  2214   01086E                     
  2215                           ;can/can.c: 1276:     n = nBytes + 8;
  2216   01086E  0E08               	movlw	8
  2217   010870  6E38               	movwf	(btemp+11)^0,c
  2218                           
  2219                           ;stkvar	_nBytes @ sp[(-110)+-6]
  2220   010872  0E8C               	movlw	-116
  2221   010874  50E3               	movf	plusw1,w,c
  2222   010876  2438               	addwf	(btemp+11)^0,w,c
  2223   010878  6E37               	movwf	(btemp+10)^0,c
  2224                           
  2225                           ;stkvar	_n @ sp[(-110)+108]
  2226   01087A  0EFE               	movlw	-2
  2227   01087C  C037  FFE3         	movff	btemp+10,plusw1
  2228   010880                     
  2229                           ;can/can.c: 1278:     if (ciFifoCon.rxBF.RxTimeStampEnable) {
  2230                           ;stkvar	_ciFifoCon @ sp[(-110)+92]
  2231   010880  50E1               	movf	fsr1l,w,c
  2232   010882  0FEE               	addlw	-18
  2233   010884  6ED9               	movwf	fsr2l,c
  2234   010886  50E2               	movf	fsr1h,w,c
  2235   010888  6EDA               	movwf	fsr2h,c
  2236   01088A  0EFF               	movlw	255
  2237   01088C  22DA               	addwfc	fsr2h,f,c
  2238   01088E  AADF               	btfss	indf2,5,c
  2239   010890  EF4C  F084         	goto	u1991
  2240   010894  EF4E  F084         	goto	u1990
  2241   010898                     u1991:
  2242   010898  EF56  F084         	goto	l4168
  2243   01089C                     u1990:
  2244   01089C                     
  2245                           ;can/can.c: 1279:         n += 4;
  2246                           ;stkvar	_n @ sp[(-110)+108]
  2247   01089C  0EFE               	movlw	-2
  2248   01089E  CFE3 F02D          	movff	plusw1,btemp
  2249   0108A2  0E04               	movlw	4
  2250   0108A4  262D               	addwf	btemp^0,f,c
  2251   0108A6  0EFE               	movlw	-2
  2252   0108A8  C02D  FFE3         	movff	btemp,plusw1
  2253   0108AC                     l4168:
  2254                           
  2255                           ;can/can.c: 1283:     if (n % 4) {
  2256                           ;stkvar	_n @ sp[(-110)+108]
  2257   0108AC  0EFE               	movlw	-2
  2258   0108AE  CFE3 F038          	movff	plusw1,btemp+11
  2259   0108B2  0E03               	movlw	3
  2260   0108B4  1638               	andwf	(btemp+11)^0,f,c
  2261   0108B6  B4D8               	btfsc	status,2,c
  2262   0108B8  EF60  F084         	goto	u2001
  2263   0108BC  EF62  F084         	goto	u2000
  2264   0108C0                     u2001:
  2265   0108C0  EF72  F084         	goto	l4172
  2266   0108C4                     u2000:
  2267   0108C4                     
  2268                           ;can/can.c: 1284:         n = n + 4 - (n % 4);
  2269                           ;stkvar	_n @ sp[(-110)+108]
  2270   0108C4  0EFE               	movlw	-2
  2271   0108C6  CFE3 F038          	movff	plusw1,btemp+11
  2272   0108CA  0E03               	movlw	3
  2273   0108CC  1638               	andwf	(btemp+11)^0,f,c
  2274                           
  2275                           ;stkvar	_n @ sp[(-110)+108]
  2276   0108CE  0EFE               	movlw	-2
  2277   0108D0  CFE3 F037          	movff	plusw1,btemp+10
  2278   0108D4  5038               	movf	(btemp+11)^0,w,c
  2279   0108D6  5C37               	subwf	(btemp+10)^0,w,c
  2280   0108D8  6E38               	movwf	(btemp+11)^0,c
  2281   0108DA  0E04               	movlw	4
  2282   0108DC  2638               	addwf	(btemp+11)^0,f,c
  2283                           
  2284                           ;stkvar	_n @ sp[(-110)+108]
  2285   0108DE  0EFE               	movlw	-2
  2286   0108E0  C038  FFE3         	movff	btemp+11,plusw1
  2287   0108E4                     l4172:
  2288                           
  2289                           ;can/can.c: 1288:     uint8_t ba[76];;can/can.c: 1290:     if (n > 76) {
  2290                           ;stkvar	_n @ sp[(-110)+108]
  2291   0108E4  0EFE               	movlw	-2
  2292   0108E6  CFE3 F02D          	movff	plusw1,btemp
  2293   0108EA  0E4C               	movlw	76
  2294   0108EC  642D               	cpfsgt	btemp^0,c
  2295   0108EE  EF7B  F084         	goto	u2011
  2296   0108F2  EF7D  F084         	goto	u2010
  2297   0108F6                     u2011:
  2298   0108F6  EF82  F084         	goto	l4176
  2299   0108FA                     u2010:
  2300   0108FA                     
  2301                           ;can/can.c: 1291:         n = 76;
  2302   0108FA  0E4C               	movlw	76
  2303   0108FC  6E38               	movwf	(btemp+11)^0,c
  2304                           
  2305                           ;stkvar	_n @ sp[(-110)+108]
  2306   0108FE  0EFE               	movlw	-2
  2307   010900  C038  FFE3         	movff	btemp+11,plusw1
  2308   010904                     l4176:
  2309                           
  2310                           ;can/can.c: 1294:     spiTransferError = DRV_CANFDSPI_ReadByteArray( a, ba, n);
  2311                           ;stkvar	_n @ sp[(-110)+108]
  2312   010904  0EFE               	movlw	-2
  2313   010906  50E3               	movf	plusw1,w,c
  2314   010908  6EE6               	movwf	postinc1,c
  2315   01090A  0E00               	movlw	0
  2316   01090C  6EE6               	movwf	postinc1,c
  2317                           
  2318                           ;stkvar	_ba @ sp[(-112)+4]
  2319   01090E  0E94               	movlw	148
  2320   010910  24E1               	addwf	fsr1l,w,c
  2321   010912  6E2D               	movwf	btemp^0,c
  2322   010914  0EFF               	movlw	255
  2323   010916  20E2               	addwfc	fsr1h,w,c
  2324   010918  6E2E               	movwf	(btemp+1)^0,c
  2325   01091A  C02D  FFE6         	movff	btemp,postinc1
  2326   01091E  C02E  FFE6         	movff	btemp+1,postinc1
  2327                           
  2328                           ;stkvar	_a @ sp[(-114)+105]
  2329   010922  0EF7               	movlw	-9
  2330   010924  CFE3 FFE6          	movff	plusw1,postinc1
  2331   010928  CFE3 FFE6          	movff	plusw1,postinc1
  2332   01092C  EC28  F091         	call	_DRV_CANFDSPI_ReadByteArray	;wreg free
  2333                           
  2334                           ;stkvar	_spiTransferError @ sp[(-110)+109]
  2335   010930  0EFF               	movlw	-1
  2336   010932  C02D  FFE3         	movff	btemp,plusw1
  2337   010936                     
  2338                           ;can/can.c: 1295:     if (spiTransferError) {
  2339                           ;stkvar	_spiTransferError @ sp[(-110)+109]
  2340   010936  0EFF               	movlw	-1
  2341   010938  50E3               	movf	plusw1,w,c
  2342   01093A  B4D8               	btfsc	status,2,c
  2343   01093C  EFA2  F084         	goto	u2021
  2344   010940  EFA4  F084         	goto	u2020
  2345   010944                     u2021:
  2346   010944  EFA6  F084         	goto	l4182
  2347   010948                     u2020:
  2348   010948  EF15  F087         	goto	l357
  2349   01094C                     l4182:
  2350                           
  2351                           ;can/can.c: 1300:     REG_t myReg;;can/can.c: 1315:     rxObj->byte[6] = ba[4];
  2352                           ;stkvar	_ba @ sp[(-110)+4]
  2353   01094C  0E9A               	movlw	154
  2354   01094E  24E1               	addwf	fsr1l,w,c
  2355   010950  6ED9               	movwf	fsr2l,c
  2356   010952  0EFF               	movlw	255
  2357   010954  20E2               	addwfc	fsr1h,w,c
  2358   010956  6EDA               	movwf	fsr2h,c
  2359                           
  2360                           ;stkvar	_rxObj @ sp[(-110)+-3]
  2361   010958  0E8F               	movlw	-113
  2362   01095A  CFE3 F037          	movff	plusw1,btemp+10
  2363   01095E  0E90               	movlw	-112
  2364   010960  CFE3 F038          	movff	plusw1,btemp+11
  2365   010964  0E06               	movlw	6
  2366   010966  2437               	addwf	(btemp+10)^0,w,c
  2367   010968  6EE9               	movwf	fsr0l,c
  2368   01096A  0E00               	movlw	0
  2369   01096C  2038               	addwfc	(btemp+11)^0,w,c
  2370   01096E  6EEA               	movwf	fsr0h,c
  2371   010970  CFDF FFEF          	movff	indf2,indf0
  2372   010974                     
  2373                           ;can/can.c: 1316:     if(rxObj->bF.ctrl.IDE == 0)
  2374                           ;stkvar	_rxObj @ sp[(-110)+-3]
  2375   010974  0E8F               	movlw	-113
  2376   010976  CFE3 F037          	movff	plusw1,btemp+10
  2377   01097A  0E90               	movlw	-112
  2378   01097C  CFE3 F038          	movff	plusw1,btemp+11
  2379   010980  0E06               	movlw	6
  2380   010982  2437               	addwf	(btemp+10)^0,w,c
  2381   010984  6ED9               	movwf	fsr2l,c
  2382   010986  0E00               	movlw	0
  2383   010988  2038               	addwfc	(btemp+11)^0,w,c
  2384   01098A  6EDA               	movwf	fsr2h,c
  2385   01098C  B8DF               	btfsc	indf2,4,c
  2386   01098E  EFCB  F084         	goto	u2031
  2387   010992  EFCD  F084         	goto	u2030
  2388   010996                     u2031:
  2389   010996  EF38  F085         	goto	l4188
  2390   01099A                     u2030:
  2391   01099A                     
  2392                           ;can/can.c: 1317:     {;can/can.c: 1318:       rxObj->bF.id.ID = ba[0] | ((uint32_t)ba[1
      +                          ] << 8) |
  2393                           ;stkvar	_ba @ sp[(-110)+4]
  2394   01099A  0E99               	movlw	153
  2395   01099C  24E1               	addwf	fsr1l,w,c
  2396   01099E  6ED9               	movwf	fsr2l,c
  2397   0109A0  0EFF               	movlw	255
  2398   0109A2  20E2               	addwfc	fsr1h,w,c
  2399   0109A4  6EDA               	movwf	fsr2h,c
  2400   0109A6  50DF               	movf	indf2,w,c
  2401   0109A8  6E38               	movwf	(btemp+11)^0,c
  2402   0109AA  0E1F               	movlw	31
  2403   0109AC  1638               	andwf	(btemp+11)^0,f,c
  2404   0109AE  C038  F031         	movff	btemp+11,btemp+4
  2405   0109B2  6A32               	clrf	(btemp+5)^0,c
  2406   0109B4  6A33               	clrf	(btemp+6)^0,c
  2407   0109B6  6A34               	clrf	(btemp+7)^0,c
  2408   0109B8  C031  F034         	movff	btemp+4,btemp+7
  2409   0109BC  6A33               	clrf	(btemp+6)^0,c
  2410   0109BE  6A32               	clrf	(btemp+5)^0,c
  2411   0109C0  6A31               	clrf	(btemp+4)^0,c
  2412                           
  2413                           ;stkvar	_ba @ sp[(-110)+4]
  2414   0109C2  0E97               	movlw	151
  2415   0109C4  24E1               	addwf	fsr1l,w,c
  2416   0109C6  6ED9               	movwf	fsr2l,c
  2417   0109C8  0EFF               	movlw	255
  2418   0109CA  20E2               	addwfc	fsr1h,w,c
  2419   0109CC  6EDA               	movwf	fsr2h,c
  2420   0109CE  50DF               	movf	indf2,w,c
  2421   0109D0  6E38               	movwf	(btemp+11)^0,c
  2422   0109D2  C038  F02D         	movff	btemp+11,btemp
  2423   0109D6  6A2E               	clrf	(btemp+1)^0,c
  2424   0109D8  6A2F               	clrf	(btemp+2)^0,c
  2425   0109DA  6A30               	clrf	(btemp+3)^0,c
  2426   0109DC  C02F  F030         	movff	btemp+2,btemp+3
  2427   0109E0  C02E  F02F         	movff	btemp+1,btemp+2
  2428   0109E4  C02D  F02E         	movff	btemp,btemp+1
  2429   0109E8  6A2D               	clrf	btemp^0,c
  2430                           
  2431                           ;stkvar	_ba @ sp[(-110)+4]
  2432   0109EA  0E96               	movlw	-106
  2433   0109EC  50E3               	movf	plusw1,w,c
  2434   0109EE  6E35               	movwf	(btemp+8)^0,c
  2435   0109F0  6A36               	clrf	(btemp+9)^0,c
  2436   0109F2  6A37               	clrf	(btemp+10)^0,c
  2437   0109F4  6A38               	clrf	(btemp+11)^0,c
  2438   0109F6  502D               	movf	btemp^0,w,c
  2439   0109F8  1235               	iorwf	(btemp+8)^0,f,c
  2440   0109FA  502E               	movf	(btemp+1)^0,w,c
  2441   0109FC  1236               	iorwf	(btemp+9)^0,f,c
  2442   0109FE  502F               	movf	(btemp+2)^0,w,c
  2443   010A00  1237               	iorwf	(btemp+10)^0,f,c
  2444   010A02  5030               	movf	(btemp+3)^0,w,c
  2445   010A04  1238               	iorwf	(btemp+11)^0,f,c
  2446                           
  2447                           ;stkvar	_ba @ sp[(-110)+4]
  2448   010A06  0E98               	movlw	152
  2449   010A08  24E1               	addwf	fsr1l,w,c
  2450   010A0A  6ED9               	movwf	fsr2l,c
  2451   010A0C  0EFF               	movlw	255
  2452   010A0E  20E2               	addwfc	fsr1h,w,c
  2453   010A10  6EDA               	movwf	fsr2h,c
  2454   010A12  50DF               	movf	indf2,w,c
  2455   010A14  6E2D               	movwf	btemp^0,c
  2456   010A16  6A2E               	clrf	(btemp+1)^0,c
  2457   010A18  6A2F               	clrf	(btemp+2)^0,c
  2458   010A1A  6A30               	clrf	(btemp+3)^0,c
  2459   010A1C  C02E  F030         	movff	btemp+1,btemp+3
  2460   010A20  C02D  F02F         	movff	btemp,btemp+2
  2461   010A24  6A2E               	clrf	(btemp+1)^0,c
  2462   010A26  6A2D               	clrf	btemp^0,c
  2463   010A28  502D               	movf	btemp^0,w,c
  2464   010A2A  1235               	iorwf	(btemp+8)^0,f,c
  2465   010A2C  502E               	movf	(btemp+1)^0,w,c
  2466   010A2E  1236               	iorwf	(btemp+9)^0,f,c
  2467   010A30  502F               	movf	(btemp+2)^0,w,c
  2468   010A32  1237               	iorwf	(btemp+10)^0,f,c
  2469   010A34  5030               	movf	(btemp+3)^0,w,c
  2470   010A36  1238               	iorwf	(btemp+11)^0,f,c
  2471   010A38  5031               	movf	(btemp+4)^0,w,c
  2472   010A3A  1035               	iorwf	(btemp+8)^0,w,c
  2473   010A3C  6E2D               	movwf	btemp^0,c
  2474   010A3E  5032               	movf	(btemp+5)^0,w,c
  2475   010A40  1036               	iorwf	(btemp+9)^0,w,c
  2476   010A42  6E2E               	movwf	(btemp+1)^0,c
  2477   010A44  5033               	movf	(btemp+6)^0,w,c
  2478   010A46  1037               	iorwf	(btemp+10)^0,w,c
  2479   010A48  6E2F               	movwf	(btemp+2)^0,c
  2480   010A4A  5034               	movf	(btemp+7)^0,w,c
  2481   010A4C  1038               	iorwf	(btemp+11)^0,w,c
  2482   010A4E  6E30               	movwf	(btemp+3)^0,c
  2483                           
  2484                           ;stkvar	_rxObj @ sp[(-110)+-3]
  2485   010A50  0E8F               	movlw	-113
  2486   010A52  CFE3 FFD9          	movff	plusw1,fsr2l
  2487   010A56  0E90               	movlw	-112
  2488   010A58  CFE3 FFDA          	movff	plusw1,fsr2h
  2489   010A5C  C02D  FFDE         	movff	btemp,postinc2
  2490   010A60  C02E  FFDE         	movff	btemp+1,postinc2
  2491   010A64  C02F  FFDE         	movff	btemp+2,postinc2
  2492   010A68  C030  FFDE         	movff	btemp+3,postinc2
  2493                           
  2494                           ;can/can.c: 1320:     }
  2495   010A6C  EFF8  F085         	goto	l4190
  2496   010A70                     l4188:
  2497                           
  2498                           ;can/can.c: 1322:     {;can/can.c: 1323:       uint32_t temp32 = ba[0] | ((uint32_t)ba[1
      +                          ] << 8) |
  2499                           ;stkvar	_ba @ sp[(-110)+4]
  2500   010A70  0E99               	movlw	153
  2501   010A72  24E1               	addwf	fsr1l,w,c
  2502   010A74  6ED9               	movwf	fsr2l,c
  2503   010A76  0EFF               	movlw	255
  2504   010A78  20E2               	addwfc	fsr1h,w,c
  2505   010A7A  6EDA               	movwf	fsr2h,c
  2506   010A7C  50DF               	movf	indf2,w,c
  2507   010A7E  6E38               	movwf	(btemp+11)^0,c
  2508   010A80  0E1F               	movlw	31
  2509   010A82  1638               	andwf	(btemp+11)^0,f,c
  2510   010A84  C038  F031         	movff	btemp+11,btemp+4
  2511   010A88  6A32               	clrf	(btemp+5)^0,c
  2512   010A8A  6A33               	clrf	(btemp+6)^0,c
  2513   010A8C  6A34               	clrf	(btemp+7)^0,c
  2514   010A8E  C031  F034         	movff	btemp+4,btemp+7
  2515   010A92  6A33               	clrf	(btemp+6)^0,c
  2516   010A94  6A32               	clrf	(btemp+5)^0,c
  2517   010A96  6A31               	clrf	(btemp+4)^0,c
  2518                           
  2519                           ;stkvar	_ba @ sp[(-110)+4]
  2520   010A98  0E97               	movlw	151
  2521   010A9A  24E1               	addwf	fsr1l,w,c
  2522   010A9C  6ED9               	movwf	fsr2l,c
  2523   010A9E  0EFF               	movlw	255
  2524   010AA0  20E2               	addwfc	fsr1h,w,c
  2525   010AA2  6EDA               	movwf	fsr2h,c
  2526   010AA4  50DF               	movf	indf2,w,c
  2527   010AA6  6E38               	movwf	(btemp+11)^0,c
  2528   010AA8  C038  F02D         	movff	btemp+11,btemp
  2529   010AAC  6A2E               	clrf	(btemp+1)^0,c
  2530   010AAE  6A2F               	clrf	(btemp+2)^0,c
  2531   010AB0  6A30               	clrf	(btemp+3)^0,c
  2532   010AB2  C02F  F030         	movff	btemp+2,btemp+3
  2533   010AB6  C02E  F02F         	movff	btemp+1,btemp+2
  2534   010ABA  C02D  F02E         	movff	btemp,btemp+1
  2535   010ABE  6A2D               	clrf	btemp^0,c
  2536                           
  2537                           ;stkvar	_ba @ sp[(-110)+4]
  2538   010AC0  0E96               	movlw	-106
  2539   010AC2  50E3               	movf	plusw1,w,c
  2540   010AC4  6E35               	movwf	(btemp+8)^0,c
  2541   010AC6  6A36               	clrf	(btemp+9)^0,c
  2542   010AC8  6A37               	clrf	(btemp+10)^0,c
  2543   010ACA  6A38               	clrf	(btemp+11)^0,c
  2544   010ACC  502D               	movf	btemp^0,w,c
  2545   010ACE  1235               	iorwf	(btemp+8)^0,f,c
  2546   010AD0  502E               	movf	(btemp+1)^0,w,c
  2547   010AD2  1236               	iorwf	(btemp+9)^0,f,c
  2548   010AD4  502F               	movf	(btemp+2)^0,w,c
  2549   010AD6  1237               	iorwf	(btemp+10)^0,f,c
  2550   010AD8  5030               	movf	(btemp+3)^0,w,c
  2551   010ADA  1238               	iorwf	(btemp+11)^0,f,c
  2552                           
  2553                           ;stkvar	_ba @ sp[(-110)+4]
  2554   010ADC  0E98               	movlw	152
  2555   010ADE  24E1               	addwf	fsr1l,w,c
  2556   010AE0  6ED9               	movwf	fsr2l,c
  2557   010AE2  0EFF               	movlw	255
  2558   010AE4  20E2               	addwfc	fsr1h,w,c
  2559   010AE6  6EDA               	movwf	fsr2h,c
  2560   010AE8  50DF               	movf	indf2,w,c
  2561   010AEA  6E2D               	movwf	btemp^0,c
  2562   010AEC  6A2E               	clrf	(btemp+1)^0,c
  2563   010AEE  6A2F               	clrf	(btemp+2)^0,c
  2564   010AF0  6A30               	clrf	(btemp+3)^0,c
  2565   010AF2  C02E  F030         	movff	btemp+1,btemp+3
  2566   010AF6  C02D  F02F         	movff	btemp,btemp+2
  2567   010AFA  6A2E               	clrf	(btemp+1)^0,c
  2568   010AFC  6A2D               	clrf	btemp^0,c
  2569   010AFE  502D               	movf	btemp^0,w,c
  2570   010B00  1235               	iorwf	(btemp+8)^0,f,c
  2571   010B02  502E               	movf	(btemp+1)^0,w,c
  2572   010B04  1236               	iorwf	(btemp+9)^0,f,c
  2573   010B06  502F               	movf	(btemp+2)^0,w,c
  2574   010B08  1237               	iorwf	(btemp+10)^0,f,c
  2575   010B0A  5030               	movf	(btemp+3)^0,w,c
  2576   010B0C  1238               	iorwf	(btemp+11)^0,f,c
  2577   010B0E  5031               	movf	(btemp+4)^0,w,c
  2578   010B10  1035               	iorwf	(btemp+8)^0,w,c
  2579   010B12  6E2D               	movwf	btemp^0,c
  2580   010B14  5032               	movf	(btemp+5)^0,w,c
  2581   010B16  1036               	iorwf	(btemp+9)^0,w,c
  2582   010B18  6E2E               	movwf	(btemp+1)^0,c
  2583   010B1A  5033               	movf	(btemp+6)^0,w,c
  2584   010B1C  1037               	iorwf	(btemp+10)^0,w,c
  2585   010B1E  6E2F               	movwf	(btemp+2)^0,c
  2586   010B20  5034               	movf	(btemp+7)^0,w,c
  2587   010B22  1038               	iorwf	(btemp+11)^0,w,c
  2588   010B24  6E30               	movwf	(btemp+3)^0,c
  2589                           
  2590                           ;stkvar	_temp32 @ sp[(-110)+0]
  2591   010B26  0E92               	movlw	-110
  2592   010B28  C02D  FFE3         	movff	btemp,plusw1
  2593   010B2C  0E93               	movlw	-109
  2594   010B2E  C02E  FFE3         	movff	btemp+1,plusw1
  2595   010B32  0E94               	movlw	-108
  2596   010B34  C02F  FFE3         	movff	btemp+2,plusw1
  2597   010B38  0E95               	movlw	-107
  2598   010B3A  C030  FFE3         	movff	btemp+3,plusw1
  2599                           
  2600                           ;can/can.c: 1326:       rxObj->bF.id.ID = ((temp32 & 0x000007FF) << 18) |
  2601                           ;stkvar	_temp32 @ sp[(-110)+0]
  2602   010B3E  0E92               	movlw	-110
  2603   010B40  CFE3 F035          	movff	plusw1,btemp+8
  2604   010B44  0E93               	movlw	-109
  2605   010B46  CFE3 F036          	movff	plusw1,btemp+9
  2606   010B4A  0E94               	movlw	-108
  2607   010B4C  CFE3 F037          	movff	plusw1,btemp+10
  2608   010B50  0E95               	movlw	-107
  2609   010B52  CFE3 F038          	movff	plusw1,btemp+11
  2610   010B56  0E0C               	movlw	12
  2611   010B58  EFB3  F085         	goto	u2040
  2612   010B5C                     u2045:
  2613   010B5C  90D8               	bcf	status,0,c
  2614   010B5E  3238               	rrcf	(btemp+11)^0,f,c
  2615   010B60  3237               	rrcf	(btemp+10)^0,f,c
  2616   010B62  3236               	rrcf	(btemp+9)^0,f,c
  2617   010B64  3235               	rrcf	(btemp+8)^0,f,c
  2618   010B66                     u2040:
  2619   010B66  2EE8               	decfsz	wreg,f,c
  2620   010B68  EFAE  F085         	goto	u2045
  2621   010B6C  0EFF               	movlw	255
  2622   010B6E  1435               	andwf	(btemp+8)^0,w,c
  2623   010B70  6E31               	movwf	(btemp+4)^0,c
  2624   010B72  0EFF               	movlw	255
  2625   010B74  1436               	andwf	(btemp+9)^0,w,c
  2626   010B76  6E32               	movwf	(btemp+5)^0,c
  2627   010B78  0E03               	movlw	3
  2628   010B7A  1437               	andwf	(btemp+10)^0,w,c
  2629   010B7C  6E33               	movwf	(btemp+6)^0,c
  2630   010B7E  0E00               	movlw	0
  2631   010B80  1438               	andwf	(btemp+11)^0,w,c
  2632   010B82  6E34               	movwf	(btemp+7)^0,c
  2633                           
  2634                           ;stkvar	_temp32 @ sp[(-110)+0]
  2635   010B84  50E1               	movf	fsr1l,w,c
  2636   010B86  0F92               	addlw	-110
  2637   010B88  6ED9               	movwf	fsr2l,c
  2638   010B8A  50E2               	movf	fsr1h,w,c
  2639   010B8C  6EDA               	movwf	fsr2h,c
  2640   010B8E  0EFF               	movlw	255
  2641   010B90  22DA               	addwfc	fsr2h,f,c
  2642   010B92  0EFF               	movlw	255
  2643   010B94  14DE               	andwf	postinc2,w,c
  2644   010B96  6E35               	movwf	(btemp+8)^0,c
  2645   010B98  0E07               	movlw	7
  2646   010B9A  14DE               	andwf	postinc2,w,c
  2647   010B9C  6E36               	movwf	(btemp+9)^0,c
  2648   010B9E  0E00               	movlw	0
  2649   010BA0  14DE               	andwf	postinc2,w,c
  2650   010BA2  6E37               	movwf	(btemp+10)^0,c
  2651   010BA4  0E00               	movlw	0
  2652   010BA6  14DE               	andwf	postinc2,w,c
  2653   010BA8  6E38               	movwf	(btemp+11)^0,c
  2654   010BAA  0E12               	movlw	18
  2655   010BAC                     u2055:
  2656   010BAC  90D8               	bcf	status,0,c
  2657   010BAE  3635               	rlcf	(btemp+8)^0,f,c
  2658   010BB0  3636               	rlcf	(btemp+9)^0,f,c
  2659   010BB2  3637               	rlcf	(btemp+10)^0,f,c
  2660   010BB4  3638               	rlcf	(btemp+11)^0,f,c
  2661   010BB6  2EE8               	decfsz	wreg,f,c
  2662   010BB8  EFD6  F085         	goto	u2055
  2663   010BBC  5031               	movf	(btemp+4)^0,w,c
  2664   010BBE  1035               	iorwf	(btemp+8)^0,w,c
  2665   010BC0  6E2D               	movwf	btemp^0,c
  2666   010BC2  5032               	movf	(btemp+5)^0,w,c
  2667   010BC4  1036               	iorwf	(btemp+9)^0,w,c
  2668   010BC6  6E2E               	movwf	(btemp+1)^0,c
  2669   010BC8  5033               	movf	(btemp+6)^0,w,c
  2670   010BCA  1037               	iorwf	(btemp+10)^0,w,c
  2671   010BCC  6E2F               	movwf	(btemp+2)^0,c
  2672   010BCE  5034               	movf	(btemp+7)^0,w,c
  2673   010BD0  1038               	iorwf	(btemp+11)^0,w,c
  2674   010BD2  6E30               	movwf	(btemp+3)^0,c
  2675                           
  2676                           ;stkvar	_rxObj @ sp[(-110)+-3]
  2677   010BD4  0E8F               	movlw	-113
  2678   010BD6  CFE3 FFD9          	movff	plusw1,fsr2l
  2679   010BDA  0E90               	movlw	-112
  2680   010BDC  CFE3 FFDA          	movff	plusw1,fsr2h
  2681   010BE0  C02D  FFDE         	movff	btemp,postinc2
  2682   010BE4  C02E  FFDE         	movff	btemp+1,postinc2
  2683   010BE8  C02F  FFDE         	movff	btemp+2,postinc2
  2684   010BEC  C030  FFDE         	movff	btemp+3,postinc2
  2685   010BF0                     l4190:
  2686                           
  2687                           ;can/can.c: 1330:     rxObj->bF.ctrl.ESI = ba[5] & 0x01;
  2688                           ;stkvar	_rxObj @ sp[(-110)+-3]
  2689   010BF0  0E8F               	movlw	-113
  2690   010BF2  CFE3 F037          	movff	plusw1,btemp+10
  2691   010BF6  0E90               	movlw	-112
  2692   010BF8  CFE3 F038          	movff	plusw1,btemp+11
  2693   010BFC  0E07               	movlw	7
  2694   010BFE  2437               	addwf	(btemp+10)^0,w,c
  2695   010C00  6ED9               	movwf	fsr2l,c
  2696   010C02  0E00               	movlw	0
  2697   010C04  2038               	addwfc	(btemp+11)^0,w,c
  2698   010C06  6EDA               	movwf	fsr2h,c
  2699                           
  2700                           ;stkvar	_ba @ sp[(-110)+4]
  2701   010C08  0E9B               	movlw	155
  2702   010C0A  24E1               	addwf	fsr1l,w,c
  2703   010C0C  6EE9               	movwf	fsr0l,c
  2704   010C0E  0EFF               	movlw	255
  2705   010C10  20E2               	addwfc	fsr1h,w,c
  2706   010C12  6EEA               	movwf	fsr0h,c
  2707   010C14  50EF               	movf	indf0,w,c
  2708   010C16  0B01               	andlw	1
  2709   010C18  6EDF               	movwf	indf2,c
  2710   010C1A                     
  2711                           ;can/can.c: 1331:     rxObj->bF.ctrl.FilterHit = ba[5] >> 3;
  2712                           ;stkvar	_rxObj @ sp[(-110)+-3]
  2713   010C1A  0E8F               	movlw	-113
  2714   010C1C  CFE3 F037          	movff	plusw1,btemp+10
  2715   010C20  0E90               	movlw	-112
  2716   010C22  CFE3 F038          	movff	plusw1,btemp+11
  2717   010C26  0E08               	movlw	8
  2718   010C28  2437               	addwf	(btemp+10)^0,w,c
  2719   010C2A  6ED9               	movwf	fsr2l,c
  2720   010C2C  0E00               	movlw	0
  2721   010C2E  2038               	addwfc	(btemp+11)^0,w,c
  2722   010C30  6EDA               	movwf	fsr2h,c
  2723                           
  2724                           ;stkvar	_ba @ sp[(-110)+4]
  2725   010C32  0E9B               	movlw	155
  2726   010C34  24E1               	addwf	fsr1l,w,c
  2727   010C36  6EE9               	movwf	fsr0l,c
  2728   010C38  0EFF               	movlw	255
  2729   010C3A  20E2               	addwfc	fsr1h,w,c
  2730   010C3C  6EEA               	movwf	fsr0h,c
  2731   010C3E  50EF               	movf	indf0,w,c
  2732   010C40  6E38               	movwf	(btemp+11)^0,c
  2733   010C42  90D8               	bcf	status,0,c
  2734   010C44  3238               	rrcf	(btemp+11)^0,f,c
  2735   010C46  90D8               	bcf	status,0,c
  2736   010C48  3238               	rrcf	(btemp+11)^0,f,c
  2737   010C4A  90D8               	bcf	status,0,c
  2738   010C4C  3038               	rrcf	(btemp+11)^0,w,c
  2739   010C4E  6EDF               	movwf	indf2,c
  2740   010C50                     
  2741                           ;can/can.c: 1332:     if (ciFifoCon.rxBF.RxTimeStampEnable) {
  2742                           ;stkvar	_ciFifoCon @ sp[(-110)+92]
  2743   010C50  50E1               	movf	fsr1l,w,c
  2744   010C52  0FEE               	addlw	-18
  2745   010C54  6ED9               	movwf	fsr2l,c
  2746   010C56  50E2               	movf	fsr1h,w,c
  2747   010C58  6EDA               	movwf	fsr2h,c
  2748   010C5A  0EFF               	movlw	255
  2749   010C5C  22DA               	addwfc	fsr2h,f,c
  2750   010C5E  AADF               	btfss	indf2,5,c
  2751   010C60  EF34  F086         	goto	u2061
  2752   010C64  EF36  F086         	goto	u2060
  2753   010C68                     u2061:
  2754   010C68  EFC4  F086         	goto	l4214
  2755   010C6C                     u2060:
  2756   010C6C                     
  2757                           ;can/can.c: 1333:         myReg.byte[0] = ba[8];
  2758                           ;stkvar	_ba @ sp[(-110)+4]
  2759   010C6C  0E9E               	movlw	158
  2760   010C6E  24E1               	addwf	fsr1l,w,c
  2761   010C70  6ED9               	movwf	fsr2l,c
  2762   010C72  0EFF               	movlw	255
  2763   010C74  20E2               	addwfc	fsr1h,w,c
  2764   010C76  6EDA               	movwf	fsr2h,c
  2765   010C78  50DF               	movf	indf2,w,c
  2766   010C7A  6E38               	movwf	(btemp+11)^0,c
  2767                           
  2768                           ;stkvar	_myReg @ sp[(-110)+97]
  2769   010C7C  0EF3               	movlw	-13
  2770   010C7E  C038  FFE3         	movff	btemp+11,plusw1
  2771   010C82                     
  2772                           ;can/can.c: 1334:         myReg.byte[1] = ba[9];
  2773                           ;stkvar	_ba @ sp[(-110)+4]
  2774   010C82  0E9F               	movlw	159
  2775   010C84  24E1               	addwf	fsr1l,w,c
  2776   010C86  6ED9               	movwf	fsr2l,c
  2777   010C88  0EFF               	movlw	255
  2778   010C8A  20E2               	addwfc	fsr1h,w,c
  2779   010C8C  6EDA               	movwf	fsr2h,c
  2780                           
  2781                           ;stkvar	_myReg @ sp[(-110)+97]
  2782   010C8E  0EF4               	movlw	244
  2783   010C90  24E1               	addwf	fsr1l,w,c
  2784   010C92  6EE9               	movwf	fsr0l,c
  2785   010C94  0EFF               	movlw	255
  2786   010C96  20E2               	addwfc	fsr1h,w,c
  2787   010C98  6EEA               	movwf	fsr0h,c
  2788   010C9A  CFDF FFEF          	movff	indf2,indf0
  2789   010C9E                     
  2790                           ;can/can.c: 1335:         myReg.byte[2] = ba[10];
  2791                           ;stkvar	_ba @ sp[(-110)+4]
  2792   010C9E  0EA0               	movlw	160
  2793   010CA0  24E1               	addwf	fsr1l,w,c
  2794   010CA2  6ED9               	movwf	fsr2l,c
  2795   010CA4  0EFF               	movlw	255
  2796   010CA6  20E2               	addwfc	fsr1h,w,c
  2797   010CA8  6EDA               	movwf	fsr2h,c
  2798                           
  2799                           ;stkvar	_myReg @ sp[(-110)+97]
  2800   010CAA  0EF5               	movlw	245
  2801   010CAC  24E1               	addwf	fsr1l,w,c
  2802   010CAE  6EE9               	movwf	fsr0l,c
  2803   010CB0  0EFF               	movlw	255
  2804   010CB2  20E2               	addwfc	fsr1h,w,c
  2805   010CB4  6EEA               	movwf	fsr0h,c
  2806   010CB6  CFDF FFEF          	movff	indf2,indf0
  2807   010CBA                     
  2808                           ;can/can.c: 1336:         myReg.byte[3] = ba[11];
  2809                           ;stkvar	_ba @ sp[(-110)+4]
  2810   010CBA  0EA1               	movlw	161
  2811   010CBC  24E1               	addwf	fsr1l,w,c
  2812   010CBE  6ED9               	movwf	fsr2l,c
  2813   010CC0  0EFF               	movlw	255
  2814   010CC2  20E2               	addwfc	fsr1h,w,c
  2815   010CC4  6EDA               	movwf	fsr2h,c
  2816                           
  2817                           ;stkvar	_myReg @ sp[(-110)+97]
  2818   010CC6  0EF6               	movlw	246
  2819   010CC8  24E1               	addwf	fsr1l,w,c
  2820   010CCA  6EE9               	movwf	fsr0l,c
  2821   010CCC  0EFF               	movlw	255
  2822   010CCE  20E2               	addwfc	fsr1h,w,c
  2823   010CD0  6EEA               	movwf	fsr0h,c
  2824   010CD2  CFDF FFEF          	movff	indf2,indf0
  2825   010CD6                     
  2826                           ;can/can.c: 1337:         rxObj->bF.timeStamp = myReg.word;
  2827                           ;stkvar	_myReg @ sp[(-110)+97]
  2828   010CD6  50E1               	movf	fsr1l,w,c
  2829   010CD8  0FF3               	addlw	-13
  2830   010CDA  6ED9               	movwf	fsr2l,c
  2831   010CDC  50E2               	movf	fsr1h,w,c
  2832   010CDE  6EDA               	movwf	fsr2h,c
  2833   010CE0  0EFF               	movlw	255
  2834   010CE2  22DA               	addwfc	fsr2h,f,c
  2835                           
  2836                           ;stkvar	_rxObj @ sp[(-110)+-3]
  2837   010CE4  0E8F               	movlw	-113
  2838   010CE6  CFE3 F037          	movff	plusw1,btemp+10
  2839   010CEA  0E90               	movlw	-112
  2840   010CEC  CFE3 F038          	movff	plusw1,btemp+11
  2841   010CF0  0E09               	movlw	9
  2842   010CF2  2437               	addwf	(btemp+10)^0,w,c
  2843   010CF4  6EE9               	movwf	fsr0l,c
  2844   010CF6  0E00               	movlw	0
  2845   010CF8  2038               	addwfc	(btemp+11)^0,w,c
  2846   010CFA  6EEA               	movwf	fsr0h,c
  2847   010CFC  CFDE FFEE          	movff	postinc2,postinc0
  2848   010D00  CFDE FFEE          	movff	postinc2,postinc0
  2849   010D04  CFDE FFEE          	movff	postinc2,postinc0
  2850   010D08  CFDE FFEE          	movff	postinc2,postinc0
  2851   010D0C                     
  2852                           ;can/can.c: 1340:         for (i = 0; i < nBytes; i++) {
  2853                           ;stkvar	_i @ sp[(-110)+107]
  2854   010D0C  0EFD               	movlw	-3
  2855   010D0E  6AE3               	clrf	plusw1,c
  2856   010D10  EFB1  F086         	goto	l4212
  2857   010D14                     l4208:
  2858                           
  2859                           ;can/can.c: 1341:             rxd[i] = ba[i + 12];
  2860                           ;stkvar	_i @ sp[(-110)+107]
  2861   010D14  0EFD               	movlw	-3
  2862   010D16  50E3               	movf	plusw1,w,c
  2863   010D18  6E37               	movwf	(btemp+10)^0,c
  2864   010D1A  6A38               	clrf	(btemp+11)^0,c
  2865   010D1C  0E0C               	movlw	12
  2866   010D1E  2637               	addwf	(btemp+10)^0,f,c
  2867   010D20  0E00               	movlw	0
  2868   010D22  2238               	addwfc	(btemp+11)^0,f,c
  2869                           
  2870                           ;stkvar	_ba @ sp[(-110)+4]
  2871   010D24  0E96               	movlw	150
  2872   010D26  24E1               	addwf	fsr1l,w,c
  2873   010D28  6E35               	movwf	(btemp+8)^0,c
  2874   010D2A  0EFF               	movlw	255
  2875   010D2C  20E2               	addwfc	fsr1h,w,c
  2876   010D2E  6E36               	movwf	(btemp+9)^0,c
  2877   010D30  5037               	movf	(btemp+10)^0,w,c
  2878   010D32  2435               	addwf	(btemp+8)^0,w,c
  2879   010D34  6ED9               	movwf	fsr2l,c
  2880   010D36  5038               	movf	(btemp+11)^0,w,c
  2881   010D38  2036               	addwfc	(btemp+9)^0,w,c
  2882   010D3A  6EDA               	movwf	fsr2h,c
  2883                           
  2884                           ;stkvar	_i @ sp[(-110)+107]
  2885   010D3C  0EFD               	movlw	-3
  2886   010D3E  CFE3 F038          	movff	plusw1,btemp+11
  2887                           
  2888                           ;stkvar	_rxd @ sp[(-110)+-5]
  2889   010D42  0E8D               	movlw	-115
  2890   010D44  CFE3 F035          	movff	plusw1,btemp+8
  2891   010D48  0E8E               	movlw	-114
  2892   010D4A  CFE3 F036          	movff	plusw1,btemp+9
  2893   010D4E  5038               	movf	(btemp+11)^0,w,c
  2894   010D50  2435               	addwf	(btemp+8)^0,w,c
  2895   010D52  6EE9               	movwf	fsr0l,c
  2896   010D54  0E00               	movlw	0
  2897   010D56  2036               	addwfc	(btemp+9)^0,w,c
  2898   010D58  6EEA               	movwf	fsr0h,c
  2899   010D5A  CFDF FFEF          	movff	indf2,indf0
  2900   010D5E                     
  2901                           ;can/can.c: 1342:         }
  2902                           ;stkvar	_i @ sp[(-110)+107]
  2903   010D5E  0EFD               	movlw	-3
  2904   010D60  2AE3               	incf	plusw1,f,c
  2905   010D62                     l4212:
  2906                           
  2907                           ;stkvar	_nBytes @ sp[(-110)+-6]
  2908                           ;stkvar	_i @ sp[(-110)+107]
  2909   010D62  50E1               	movf	fsr1l,w,c
  2910   010D64  0FFD               	addlw	-3
  2911   010D66  6ED9               	movwf	fsr2l,c
  2912   010D68  50E2               	movf	fsr1h,w,c
  2913   010D6A  6EDA               	movwf	fsr2h,c
  2914   010D6C  0EFF               	movlw	255
  2915   010D6E  22DA               	addwfc	fsr2h,f,c
  2916   010D70  0E8C               	movlw	-116
  2917   010D72  50E3               	movf	plusw1,w,c
  2918   010D74  5CDE               	subwf	postinc2,w,c
  2919   010D76  A0D8               	btfss	status,0,c
  2920   010D78  EFC0  F086         	goto	u2071
  2921   010D7C  EFC2  F086         	goto	u2070
  2922   010D80                     u2071:
  2923   010D80  EF8A  F086         	goto	l4208
  2924   010D84                     u2070:
  2925   010D84  EF10  F087         	goto	l4224
  2926   010D88                     l4214:
  2927                           
  2928                           ;can/can.c: 1344:         rxObj->bF.timeStamp = 0;
  2929                           ;stkvar	_rxObj @ sp[(-110)+-3]
  2930   010D88  0E8F               	movlw	-113
  2931   010D8A  CFE3 F037          	movff	plusw1,btemp+10
  2932   010D8E  0E90               	movlw	-112
  2933   010D90  CFE3 F038          	movff	plusw1,btemp+11
  2934   010D94  0E09               	movlw	9
  2935   010D96  2437               	addwf	(btemp+10)^0,w,c
  2936   010D98  6ED9               	movwf	fsr2l,c
  2937   010D9A  0E00               	movlw	0
  2938   010D9C  2038               	addwfc	(btemp+11)^0,w,c
  2939   010D9E  6EDA               	movwf	fsr2h,c
  2940   010DA0  6ADE               	clrf	postinc2,c
  2941   010DA2  6ADE               	clrf	postinc2,c
  2942   010DA4  6ADE               	clrf	postinc2,c
  2943   010DA6  6ADD               	clrf	postdec2,c
  2944   010DA8                     
  2945                           ;can/can.c: 1347:         for (i = 0; i < nBytes; i++) {
  2946                           ;stkvar	_i @ sp[(-110)+107]
  2947   010DA8  0EFD               	movlw	-3
  2948   010DAA  6AE3               	clrf	plusw1,c
  2949   010DAC  EFFF  F086         	goto	l4222
  2950   010DB0                     l4218:
  2951                           
  2952                           ;can/can.c: 1348:             rxd[i] = ba[i + 8];
  2953                           ;stkvar	_i @ sp[(-110)+107]
  2954   010DB0  0EFD               	movlw	-3
  2955   010DB2  50E3               	movf	plusw1,w,c
  2956   010DB4  6E37               	movwf	(btemp+10)^0,c
  2957   010DB6  6A38               	clrf	(btemp+11)^0,c
  2958   010DB8  0E08               	movlw	8
  2959   010DBA  2637               	addwf	(btemp+10)^0,f,c
  2960   010DBC  0E00               	movlw	0
  2961   010DBE  2238               	addwfc	(btemp+11)^0,f,c
  2962                           
  2963                           ;stkvar	_ba @ sp[(-110)+4]
  2964   010DC0  0E96               	movlw	150
  2965   010DC2  24E1               	addwf	fsr1l,w,c
  2966   010DC4  6E35               	movwf	(btemp+8)^0,c
  2967   010DC6  0EFF               	movlw	255
  2968   010DC8  20E2               	addwfc	fsr1h,w,c
  2969   010DCA  6E36               	movwf	(btemp+9)^0,c
  2970   010DCC  5037               	movf	(btemp+10)^0,w,c
  2971   010DCE  2435               	addwf	(btemp+8)^0,w,c
  2972   010DD0  6ED9               	movwf	fsr2l,c
  2973   010DD2  5038               	movf	(btemp+11)^0,w,c
  2974   010DD4  2036               	addwfc	(btemp+9)^0,w,c
  2975   010DD6  6EDA               	movwf	fsr2h,c
  2976                           
  2977                           ;stkvar	_i @ sp[(-110)+107]
  2978   010DD8  0EFD               	movlw	-3
  2979   010DDA  CFE3 F038          	movff	plusw1,btemp+11
  2980                           
  2981                           ;stkvar	_rxd @ sp[(-110)+-5]
  2982   010DDE  0E8D               	movlw	-115
  2983   010DE0  CFE3 F035          	movff	plusw1,btemp+8
  2984   010DE4  0E8E               	movlw	-114
  2985   010DE6  CFE3 F036          	movff	plusw1,btemp+9
  2986   010DEA  5038               	movf	(btemp+11)^0,w,c
  2987   010DEC  2435               	addwf	(btemp+8)^0,w,c
  2988   010DEE  6EE9               	movwf	fsr0l,c
  2989   010DF0  0E00               	movlw	0
  2990   010DF2  2036               	addwfc	(btemp+9)^0,w,c
  2991   010DF4  6EEA               	movwf	fsr0h,c
  2992   010DF6  CFDF FFEF          	movff	indf2,indf0
  2993   010DFA                     
  2994                           ;can/can.c: 1349:         }
  2995                           ;stkvar	_i @ sp[(-110)+107]
  2996   010DFA  0EFD               	movlw	-3
  2997   010DFC  2AE3               	incf	plusw1,f,c
  2998   010DFE                     l4222:
  2999                           
  3000                           ;stkvar	_nBytes @ sp[(-110)+-6]
  3001                           ;stkvar	_i @ sp[(-110)+107]
  3002   010DFE  50E1               	movf	fsr1l,w,c
  3003   010E00  0FFD               	addlw	-3
  3004   010E02  6ED9               	movwf	fsr2l,c
  3005   010E04  50E2               	movf	fsr1h,w,c
  3006   010E06  6EDA               	movwf	fsr2h,c
  3007   010E08  0EFF               	movlw	255
  3008   010E0A  22DA               	addwfc	fsr2h,f,c
  3009   010E0C  0E8C               	movlw	-116
  3010   010E0E  50E3               	movf	plusw1,w,c
  3011   010E10  5CDE               	subwf	postinc2,w,c
  3012   010E12  A0D8               	btfss	status,0,c
  3013   010E14  EF0E  F087         	goto	u2081
  3014   010E18  EF10  F087         	goto	u2080
  3015   010E1C                     u2081:
  3016   010E1C  EFD8  F086         	goto	l4218
  3017   010E20                     u2080:
  3018   010E20                     l4224:
  3019                           
  3020                           ;stkvar	_channel @ sp[(-110)+-1]
  3021   010E20  0E91               	movlw	-111
  3022   010E22  50E3               	movf	plusw1,w,c
  3023   010E24  6EE6               	movwf	postinc1,c
  3024   010E26  ECE0  F09F         	call	_DRV_CANFDSPI_ReceiveChannelUpdate	;wreg free
  3025   010E2A                     l357:
  3026                           
  3027                           ; _DRV_CANFDSPI_ReceiveMessageGet: autosize = 110, savesize = 0, parsavesize = 0, tempsi
      +                          ze = 0 parsize = 6, argsize = 6, vargsize = 0
  3028   010E2A  0E8C               	movlw	140
  3029   010E2C  26E1               	addwf	fsr1l,f,c
  3030   010E2E  0EFF               	movlw	255
  3031   010E30  22E2               	addwfc	fsr1h,f,c
  3032   010E32  0012               	return		;funcret
  3033   010E34                     __end_of_DRV_CANFDSPI_ReceiveMessageGet:
  3034                           	callstack 0
  3035                           
  3036 ;; *************** function _DRV_CANFDSPI_ReceiveChannelUpdate *****************
  3037 ;; Defined at:
  3038 ;;		line 1378 in file "can/can.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  channel         1  [STACK] enum E5290
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
  3043 ;;  a               2  [STACK] unsigned short 
  3044 ;;  spiTransferE    1  [STACK] char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1  [STACK] char 
  3047 ;; Registers used:
  3048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;Total ram usage:        0 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 9
  3061 ;; This function calls:
  3062 ;;		_DRV_CANFDSPI_WriteByte
  3063 ;; This function is called by:
  3064 ;;		_DRV_CANFDSPI_ReceiveMessageGet
  3065 ;; This function uses a reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text13
  3069   013FC0                     __ptext13:
  3070                           	callstack 0
  3071   013FC0                     _DRV_CANFDSPI_ReceiveChannelUpdate:
  3072                           	callstack 0
  3073                           
  3074                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3075   013FC0  0E08               	movlw	8
  3076   013FC2  26E1               	addwf	fsr1l,f,c
  3077   013FC4  0E00               	movlw	0
  3078   013FC6  22E2               	addwfc	fsr1h,f,c
  3079   013FC8                     
  3080                           ;can/can.c: 1384:     ciFifoCon.word = 0;
  3081                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  3082   013FC8  0EF8               	movlw	-8
  3083   013FCA  6AE3               	clrf	plusw1,c
  3084   013FCC  0EF9               	movlw	-7
  3085   013FCE  6AE3               	clrf	plusw1,c
  3086   013FD0  0EFA               	movlw	-6
  3087   013FD2  6AE3               	clrf	plusw1,c
  3088   013FD4  0EFB               	movlw	-5
  3089   013FD6  6AE3               	clrf	plusw1,c
  3090   013FD8                     
  3091                           ;can/can.c: 1387:     a = 0x050 + (channel * (3*4)) + 1;
  3092                           ;stkvar	_channel @ sp[(-8)+-1]
  3093   013FD8  0EF7               	movlw	-9
  3094   013FDA  50E3               	movf	plusw1,w,c
  3095   013FDC  0D0C               	mullw	12
  3096   013FDE  0E51               	movlw	81
  3097   013FE0  26F3               	addwf	243,f,c
  3098   013FE2  0E00               	movlw	0
  3099   013FE4  22F4               	addwfc	244,f,c
  3100                           
  3101                           ;stkvar	_a @ sp[(-8)+5]
  3102   013FE6  0EFD               	movlw	-3
  3103   013FE8  CFF3 FFE3          	movff	prodl,plusw1
  3104   013FEC  0EFE               	movlw	-2
  3105   013FEE  CFF4 FFE3          	movff	prodh,plusw1
  3106   013FF2                     
  3107                           ;can/can.c: 1388:     ciFifoCon.rxBF.UINC = 1;
  3108                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  3109   013FF2  0EF9               	movlw	249
  3110   013FF4  24E1               	addwf	fsr1l,w,c
  3111   013FF6  6ED9               	movwf	fsr2l,c
  3112   013FF8  0EFF               	movlw	255
  3113   013FFA  20E2               	addwfc	fsr1h,w,c
  3114   013FFC  6EDA               	movwf	fsr2h,c
  3115   013FFE  80DF               	bsf	indf2,0,c
  3116   014000                     
  3117                           ;can/can.c: 1391:     spiTransferError = DRV_CANFDSPI_WriteByte( a, ciFifoCon.byte[1]);
  3118                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  3119   014000  0EF9               	movlw	249
  3120   014002  24E1               	addwf	fsr1l,w,c
  3121   014004  6ED9               	movwf	fsr2l,c
  3122   014006  0EFF               	movlw	255
  3123   014008  20E2               	addwfc	fsr1h,w,c
  3124   01400A  6EDA               	movwf	fsr2h,c
  3125   01400C  50DF               	movf	indf2,w,c
  3126   01400E  6EE6               	movwf	postinc1,c
  3127                           
  3128                           ;stkvar	_a @ sp[(-9)+5]
  3129   014010  0EFC               	movlw	-4
  3130   014012  CFE3 FFE6          	movff	plusw1,postinc1
  3131   014016  CFE3 FFE6          	movff	plusw1,postinc1
  3132   01401A  EC40  F0A1         	call	_DRV_CANFDSPI_WriteByte	;wreg free
  3133                           
  3134                           ;stkvar	_spiTransferError @ sp[(-8)+7]
  3135   01401E  0EFF               	movlw	-1
  3136   014020  C02D  FFE3         	movff	btemp,plusw1
  3137   014024                     
  3138                           ;can/can.c: 1393:     return spiTransferError;
  3139                           ;stkvar	_spiTransferError @ sp[(-8)+7]
  3140   014024  0EFF               	movlw	-1
  3141   014026  CFE3 F02D          	movff	plusw1,btemp
  3142   01402A                     
  3143                           ; _DRV_CANFDSPI_ReceiveChannelUpdate: autosize = 8, savesize = 0, parsavesize = 0, temps
      +                          ize = 0 parsize = 1, argsize = 1, vargsize = 0
  3144   01402A  0EF7               	movlw	247
  3145   01402C  26E1               	addwf	fsr1l,f,c
  3146   01402E  0EFF               	movlw	255
  3147   014030  22E2               	addwfc	fsr1h,f,c
  3148   014032  0012               	return		;funcret
  3149   014034                     __end_of_DRV_CANFDSPI_ReceiveChannelUpdate:
  3150                           	callstack 0
  3151                           
  3152 ;; *************** function _DRV_CANFDSPI_ReadByteArray *****************
  3153 ;; Defined at:
  3154 ;;		line 356 in file "can/can.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  address         2  [STACK] unsigned short 
  3157 ;;  rxd             2  [STACK] PTR unsigned char 
  3158 ;;		 -> ba(12), ba(76), 
  3159 ;;  nBytes          2  [STACK] unsigned short 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  i               2  [STACK] unsigned short 
  3162 ;;  spiTransferS    2  [STACK] unsigned short 
  3163 ;;  spiTransferE    1  [STACK] char 
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1  [STACK] char 
  3166 ;; Registers used:
  3167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;Total ram usage:        0 bytes
  3178 ;; Hardware stack levels used: 1
  3179 ;; Hardware stack levels required when called: 8
  3180 ;; This function calls:
  3181 ;;		_SpiTransfer
  3182 ;; This function is called by:
  3183 ;;		_DRV_CANFDSPI_ReceiveMessageGet
  3184 ;; This function uses a reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text14
  3188   012250                     __ptext14:
  3189                           	callstack 0
  3190   012250                     _DRV_CANFDSPI_ReadByteArray:
  3191                           	callstack 0
  3192                           
  3193                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3194   012250  0E05               	movlw	5
  3195   012252  26E1               	addwf	fsr1l,f,c
  3196   012254  0E00               	movlw	0
  3197   012256  22E2               	addwfc	fsr1h,f,c
  3198   012258                     
  3199                           ;can/can.c: 356: int8_t DRV_CANFDSPI_ReadByteArray(uint16_t address,;can/can.c: 357:    
      +                               uint8_t *rxd, uint16_t nBytes);can/can.c: 358: {;can/can.c: 359:     uint16_t i;;ca
      +                          n/can.c: 360:     uint16_t spiTransferSize = nBytes + 2;
  3200                           ;stkvar	_nBytes @ sp[(-5)+-6]
  3201   012258  0EF5               	movlw	-11
  3202   01225A  50E3               	movf	plusw1,w,c
  3203   01225C  0F02               	addlw	2
  3204   01225E  6E37               	movwf	(btemp+10)^0,c
  3205   012260  0EF6               	movlw	-10
  3206   012262  CFE3 F038          	movff	plusw1,btemp+11
  3207   012266  0E00               	movlw	0
  3208   012268  2238               	addwfc	(btemp+11)^0,f,c
  3209                           
  3210                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  3211   01226A  0EFD               	movlw	-3
  3212   01226C  C037  FFE3         	movff	btemp+10,plusw1
  3213   012270  0EFE               	movlw	-2
  3214   012272  C038  FFE3         	movff	btemp+11,plusw1
  3215   012276                     
  3216                           ;can/can.c: 364:     spiTransmitBuffer[0] = (uint8_t) ((0x03 << 4) + ((address >> 8) & 0
      +                          xF));
  3217                           ;stkvar	_address @ sp[(-5)+-2]
  3218   012276  0EFA               	movlw	250
  3219   012278  24E1               	addwf	fsr1l,w,c
  3220   01227A  6ED9               	movwf	fsr2l,c
  3221   01227C  0EFF               	movlw	255
  3222   01227E  20E2               	addwfc	fsr1h,w,c
  3223   012280  6EDA               	movwf	fsr2h,c
  3224   012282  50DF               	movf	indf2,w,c
  3225   012284  0B0F               	andlw	15
  3226   012286  0F30               	addlw	48
  3227   012288  0101               	movlb	1	; () banked
  3228   01228A  6F00               	movwf	_spiTransmitBuffer& (0+255),b
  3229   01228C                     
  3230                           ; BSR set to: 1
  3231                           ;can/can.c: 365:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
  3232                           ;stkvar	_address @ sp[(-5)+-2]
  3233   01228C  0EF9               	movlw	-7
  3234   01228E  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
  3235   012292                     
  3236                           ; BSR set to: 1
  3237                           ;can/can.c: 368:     for (i = 2; i < spiTransferSize; i++) {
  3238   012292  0E02               	movlw	2
  3239   012294  6E37               	movwf	(btemp+10)^0,c
  3240   012296  0E00               	movlw	0
  3241   012298  6E38               	movwf	(btemp+11)^0,c
  3242                           
  3243                           ;stkvar	_i @ sp[(-5)+0]
  3244   01229A  0EFB               	movlw	-5
  3245   01229C  C037  FFE3         	movff	btemp+10,plusw1
  3246   0122A0  0EFC               	movlw	-4
  3247   0122A2  C038  FFE3         	movff	btemp+11,plusw1
  3248   0122A6  EF71  F091         	goto	l4044
  3249   0122AA                     l4040:
  3250                           
  3251                           ;can/can.c: 369:         spiTransmitBuffer[i] = 0;
  3252                           ;stkvar	_i @ sp[(-5)+0]
  3253   0122AA  0EFB               	movlw	-5
  3254   0122AC  CFE3 F037          	movff	plusw1,btemp+10
  3255   0122B0  0EFC               	movlw	-4
  3256   0122B2  CFE3 F038          	movff	plusw1,btemp+11
  3257   0122B6  0E00               	movlw	low _spiTransmitBuffer
  3258   0122B8  2437               	addwf	(btemp+10)^0,w,c
  3259   0122BA  6ED9               	movwf	fsr2l,c
  3260   0122BC  0E01               	movlw	high _spiTransmitBuffer
  3261   0122BE  2038               	addwfc	(btemp+11)^0,w,c
  3262   0122C0  6EDA               	movwf	fsr2h,c
  3263   0122C2  6ADF               	clrf	indf2,c
  3264   0122C4                     
  3265                           ;can/can.c: 370:     }
  3266                           ;stkvar	_i @ sp[(-5)+0]
  3267   0122C4  0EFB               	movlw	-5
  3268   0122C6  50E3               	movf	plusw1,w,c
  3269   0122C8  0F01               	addlw	1
  3270   0122CA  6E2D               	movwf	btemp^0,c
  3271   0122CC  0EFB               	movlw	-5
  3272   0122CE  C02D  FFE3         	movff	btemp,plusw1
  3273   0122D2  6A2D               	clrf	btemp^0,c
  3274   0122D4  0EFC               	movlw	-4
  3275   0122D6  50E3               	movf	plusw1,w,c
  3276   0122D8  202D               	addwfc	btemp^0,w,c
  3277   0122DA  6E2D               	movwf	btemp^0,c
  3278   0122DC  0EFC               	movlw	-4
  3279   0122DE  C02D  FFE3         	movff	btemp,plusw1
  3280   0122E2                     l4044:
  3281                           
  3282                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  3283   0122E2  0EFD               	movlw	-3
  3284   0122E4  CFE3 F037          	movff	plusw1,btemp+10
  3285   0122E8  0EFE               	movlw	-2
  3286   0122EA  CFE3 F038          	movff	plusw1,btemp+11
  3287                           
  3288                           ;stkvar	_i @ sp[(-5)+0]
  3289   0122EE  0EFB               	movlw	-5
  3290   0122F0  CFE3 F035          	movff	plusw1,btemp+8
  3291   0122F4  0EFC               	movlw	-4
  3292   0122F6  CFE3 F036          	movff	plusw1,btemp+9
  3293   0122FA  5037               	movf	(btemp+10)^0,w,c
  3294   0122FC  5C35               	subwf	(btemp+8)^0,w,c
  3295   0122FE  5038               	movf	(btemp+11)^0,w,c
  3296   012300  5836               	subwfb	(btemp+9)^0,w,c
  3297   012302  A0D8               	btfss	status,0,c
  3298   012304  EF86  F091         	goto	u1881
  3299   012308  EF88  F091         	goto	u1880
  3300   01230C                     u1881:
  3301   01230C  EF55  F091         	goto	l4040
  3302   012310                     u1880:
  3303   012310                     
  3304                           ;can/can.c: 372:     spiTransferError = SpiTransfer(spiTransmitBuffer, spiReceiveBuffer,
      +                           spiTransferSize);
  3305                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  3306   012310  0EFD               	movlw	-3
  3307   012312  CFE3 FFE6          	movff	plusw1,postinc1
  3308   012316  CFE3 FFE6          	movff	plusw1,postinc1
  3309   01231A  0E00               	movlw	low _spiReceiveBuffer
  3310   01231C  6EE6               	movwf	postinc1,c
  3311   01231E  0E02               	movlw	high _spiReceiveBuffer
  3312   012320  6EE6               	movwf	postinc1,c
  3313   012322  0E00               	movlw	low _spiTransmitBuffer
  3314   012324  6EE6               	movwf	postinc1,c
  3315   012326  0E01               	movlw	high _spiTransmitBuffer
  3316   012328  6EE6               	movwf	postinc1,c
  3317   01232A  ECAD  F09B         	call	_SpiTransfer	;wreg free
  3318                           
  3319                           ;stkvar	_spiTransferError @ sp[(-5)+4]
  3320   01232E  0EFF               	movlw	-1
  3321   012330  C02D  FFE3         	movff	btemp,plusw1
  3322   012334                     
  3323                           ;can/can.c: 375:     for (i = 0; i < nBytes; i++) {
  3324                           ;stkvar	_i @ sp[(-5)+0]
  3325   012334  0EFB               	movlw	-5
  3326   012336  6AE3               	clrf	plusw1,c
  3327   012338  0EFC               	movlw	-4
  3328   01233A  6AE3               	clrf	plusw1,c
  3329   01233C  EFCF  F091         	goto	l4054
  3330   012340                     l4050:
  3331                           
  3332                           ;can/can.c: 376:         rxd[i] = spiReceiveBuffer[i + 2];
  3333                           ;stkvar	_i @ sp[(-5)+0]
  3334   012340  0EFB               	movlw	-5
  3335   012342  CFE3 F037          	movff	plusw1,btemp+10
  3336   012346  0EFC               	movlw	-4
  3337   012348  CFE3 F038          	movff	plusw1,btemp+11
  3338   01234C  0E02               	movlw	low (_spiReceiveBuffer+2)
  3339   01234E  2437               	addwf	(btemp+10)^0,w,c
  3340   012350  6ED9               	movwf	fsr2l,c
  3341   012352  0E02               	movlw	high (_spiReceiveBuffer+2)
  3342   012354  2038               	addwfc	(btemp+11)^0,w,c
  3343   012356  6EDA               	movwf	fsr2h,c
  3344                           
  3345                           ;stkvar	_i @ sp[(-5)+0]
  3346   012358  0EFB               	movlw	-5
  3347   01235A  CFE3 F037          	movff	plusw1,btemp+10
  3348   01235E  0EFC               	movlw	-4
  3349   012360  CFE3 F038          	movff	plusw1,btemp+11
  3350                           
  3351                           ;stkvar	_rxd @ sp[(-5)+-4]
  3352   012364  0EF7               	movlw	-9
  3353   012366  CFE3 F035          	movff	plusw1,btemp+8
  3354   01236A  0EF8               	movlw	-8
  3355   01236C  CFE3 F036          	movff	plusw1,btemp+9
  3356   012370  5037               	movf	(btemp+10)^0,w,c
  3357   012372  2435               	addwf	(btemp+8)^0,w,c
  3358   012374  6EE9               	movwf	fsr0l,c
  3359   012376  5038               	movf	(btemp+11)^0,w,c
  3360   012378  2036               	addwfc	(btemp+9)^0,w,c
  3361   01237A  6EEA               	movwf	fsr0h,c
  3362   01237C  CFDF FFEF          	movff	indf2,indf0
  3363   012380                     
  3364                           ;can/can.c: 377:     }
  3365                           ;stkvar	_i @ sp[(-5)+0]
  3366   012380  0EFB               	movlw	-5
  3367   012382  50E3               	movf	plusw1,w,c
  3368   012384  0F01               	addlw	1
  3369   012386  6E2D               	movwf	btemp^0,c
  3370   012388  0EFB               	movlw	-5
  3371   01238A  C02D  FFE3         	movff	btemp,plusw1
  3372   01238E  6A2D               	clrf	btemp^0,c
  3373   012390  0EFC               	movlw	-4
  3374   012392  50E3               	movf	plusw1,w,c
  3375   012394  202D               	addwfc	btemp^0,w,c
  3376   012396  6E2D               	movwf	btemp^0,c
  3377   012398  0EFC               	movlw	-4
  3378   01239A  C02D  FFE3         	movff	btemp,plusw1
  3379   01239E                     l4054:
  3380                           
  3381                           ;stkvar	_nBytes @ sp[(-5)+-6]
  3382   01239E  0EF5               	movlw	-11
  3383   0123A0  CFE3 F037          	movff	plusw1,btemp+10
  3384   0123A4  0EF6               	movlw	-10
  3385   0123A6  CFE3 F038          	movff	plusw1,btemp+11
  3386                           
  3387                           ;stkvar	_i @ sp[(-5)+0]
  3388   0123AA  0EFB               	movlw	-5
  3389   0123AC  CFE3 F035          	movff	plusw1,btemp+8
  3390   0123B0  0EFC               	movlw	-4
  3391   0123B2  CFE3 F036          	movff	plusw1,btemp+9
  3392   0123B6  5037               	movf	(btemp+10)^0,w,c
  3393   0123B8  5C35               	subwf	(btemp+8)^0,w,c
  3394   0123BA  5038               	movf	(btemp+11)^0,w,c
  3395   0123BC  5836               	subwfb	(btemp+9)^0,w,c
  3396   0123BE  A0D8               	btfss	status,0,c
  3397   0123C0  EFE4  F091         	goto	u1891
  3398   0123C4  EFE6  F091         	goto	u1890
  3399   0123C8                     u1891:
  3400   0123C8  EFA0  F091         	goto	l4050
  3401   0123CC                     u1890:
  3402   0123CC                     
  3403                           ;can/can.c: 379:     return spiTransferError;
  3404                           ;stkvar	_spiTransferError @ sp[(-5)+4]
  3405   0123CC  0EFF               	movlw	-1
  3406   0123CE  CFE3 F02D          	movff	plusw1,btemp
  3407   0123D2                     
  3408                           ; _DRV_CANFDSPI_ReadByteArray: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0
      +                           parsize = 6, argsize = 6, vargsize = 0
  3409   0123D2  0EF5               	movlw	245
  3410   0123D4  26E1               	addwf	fsr1l,f,c
  3411   0123D6  0EFF               	movlw	255
  3412   0123D8  22E2               	addwfc	fsr1h,f,c
  3413   0123DA  0012               	return		;funcret
  3414   0123DC                     __end_of_DRV_CANFDSPI_ReadByteArray:
  3415                           	callstack 0
  3416                           
  3417 ;; *************** function _DRV_CANFDSPI_ReceiveChannelEventGet *****************
  3418 ;; Defined at:
  3419 ;;		line 1928 in file "can/can.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;  channel         1  [STACK] enum E5290
  3422 ;;  flags           2  [STACK] PTR enum E5591
  3423 ;;		 -> rxFlags(1), 
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;  ciFifoSta       4  [STACK] struct _REG_CiFIFOSTA
  3426 ;;  a               2  [STACK] unsigned short 
  3427 ;;  spiTransferE    1  [STACK] char 
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1  [STACK] char 
  3430 ;; Registers used:
  3431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3441 ;;Total ram usage:        0 bytes
  3442 ;; Hardware stack levels used: 1
  3443 ;; Hardware stack levels required when called: 9
  3444 ;; This function calls:
  3445 ;;		_DRV_CANFDSPI_ReadByte
  3446 ;; This function is called by:
  3447 ;;		_CanReceive
  3448 ;; This function uses a reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text15
  3452   013C46                     __ptext15:
  3453                           	callstack 0
  3454   013C46                     _DRV_CANFDSPI_ReceiveChannelEventGet:
  3455                           	callstack 0
  3456                           
  3457                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3458   013C46  0E07               	movlw	7
  3459   013C48  26E1               	addwf	fsr1l,f,c
  3460   013C4A  0E00               	movlw	0
  3461   013C4C  22E2               	addwfc	fsr1h,f,c
  3462   013C4E                     
  3463                           ;can/can.c: 1934:     if (channel == CAN_FIFO_CH0) return -100;
  3464                           ;stkvar	_channel @ sp[(-7)+-1]
  3465   013C4E  0EF8               	movlw	-8
  3466   013C50  50E3               	movf	plusw1,w,c
  3467   013C52  A4D8               	btfss	status,2,c
  3468   013C54  EF2E  F09E         	goto	u1951
  3469   013C58  EF30  F09E         	goto	u1950
  3470   013C5C                     u1951:
  3471   013C5C  EF32  F09E         	goto	l4126
  3472   013C60                     u1950:
  3473   013C60  EF70  F09E         	goto	l482
  3474   013C64                     l4126:
  3475                           
  3476                           ;can/can.c: 1937:     REG_CiFIFOSTA ciFifoSta;;can/can.c: 1938:     ciFifoSta.word = 0;
  3477                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
  3478   013C64  0EF9               	movlw	-7
  3479   013C66  6AE3               	clrf	plusw1,c
  3480   013C68  0EFA               	movlw	-6
  3481   013C6A  6AE3               	clrf	plusw1,c
  3482   013C6C  0EFB               	movlw	-5
  3483   013C6E  6AE3               	clrf	plusw1,c
  3484   013C70  0EFC               	movlw	-4
  3485   013C72  6AE3               	clrf	plusw1,c
  3486   013C74                     
  3487                           ;can/can.c: 1939:     a = 0x054 + (channel * (3*4));
  3488                           ;stkvar	_channel @ sp[(-7)+-1]
  3489   013C74  0EF8               	movlw	-8
  3490   013C76  50E3               	movf	plusw1,w,c
  3491   013C78  0D0C               	mullw	12
  3492   013C7A  0E54               	movlw	84
  3493   013C7C  26F3               	addwf	243,f,c
  3494   013C7E  0E00               	movlw	0
  3495   013C80  22F4               	addwfc	244,f,c
  3496                           
  3497                           ;stkvar	_a @ sp[(-7)+4]
  3498   013C82  0EFD               	movlw	-3
  3499   013C84  CFF3 FFE3          	movff	prodl,plusw1
  3500   013C88  0EFE               	movlw	-2
  3501   013C8A  CFF4 FFE3          	movff	prodh,plusw1
  3502   013C8E                     
  3503                           ;can/can.c: 1941:     spiTransferError = DRV_CANFDSPI_ReadByte( a, &ciFifoSta.byte[0]);
  3504                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
  3505   013C8E  0EF9               	movlw	249
  3506   013C90  24E1               	addwf	fsr1l,w,c
  3507   013C92  6E2D               	movwf	btemp^0,c
  3508   013C94  0EFF               	movlw	255
  3509   013C96  20E2               	addwfc	fsr1h,w,c
  3510   013C98  6E2E               	movwf	(btemp+1)^0,c
  3511   013C9A  C02D  FFE6         	movff	btemp,postinc1
  3512   013C9E  C02E  FFE6         	movff	btemp+1,postinc1
  3513                           
  3514                           ;stkvar	_a @ sp[(-9)+4]
  3515   013CA2  0EFB               	movlw	-5
  3516   013CA4  CFE3 FFE6          	movff	plusw1,postinc1
  3517   013CA8  CFE3 FFE6          	movff	plusw1,postinc1
  3518   013CAC  ECB3  F0A0         	call	_DRV_CANFDSPI_ReadByte	;wreg free
  3519                           
  3520                           ;stkvar	_spiTransferError @ sp[(-7)+6]
  3521   013CB0  0EFF               	movlw	-1
  3522   013CB2  C02D  FFE3         	movff	btemp,plusw1
  3523   013CB6                     
  3524                           ;can/can.c: 1942:     if (spiTransferError) {
  3525                           ;stkvar	_spiTransferError @ sp[(-7)+6]
  3526   013CB6  0EFF               	movlw	-1
  3527   013CB8  50E3               	movf	plusw1,w,c
  3528   013CBA  B4D8               	btfsc	status,2,c
  3529   013CBC  EF62  F09E         	goto	u1961
  3530   013CC0  EF64  F09E         	goto	u1960
  3531   013CC4                     u1961:
  3532   013CC4  EF66  F09E         	goto	l4136
  3533   013CC8                     u1960:
  3534   013CC8  EF70  F09E         	goto	l482
  3535   013CCC                     l4136:
  3536                           
  3537                           ;can/can.c: 1947:     *flags = (CAN_RX_FIFO_EVENT) (ciFifoSta.byte[0] & CAN_RX_FIFO_ALL_
      +                          EVENTS);
  3538                           ;stkvar	_flags @ sp[(-7)+-3]
  3539   013CCC  0EF6               	movlw	-10
  3540   013CCE  CFE3 FFD9          	movff	plusw1,fsr2l
  3541   013CD2  0EF7               	movlw	-9
  3542   013CD4  CFE3 FFDA          	movff	plusw1,fsr2h
  3543                           
  3544                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
  3545   013CD8  0EF9               	movlw	-7
  3546   013CDA  50E3               	movf	plusw1,w,c
  3547   013CDC  0B0F               	andlw	15
  3548   013CDE  6EDF               	movwf	indf2,c
  3549   013CE0                     l482:
  3550                           
  3551                           ; _DRV_CANFDSPI_ReceiveChannelEventGet: autosize = 7, savesize = 0, parsavesize = 0, tem
      +                          psize = 0 parsize = 3, argsize = 3, vargsize = 0
  3552   013CE0  0EF6               	movlw	246
  3553   013CE2  26E1               	addwf	fsr1l,f,c
  3554   013CE4  0EFF               	movlw	255
  3555   013CE6  22E2               	addwfc	fsr1h,f,c
  3556   013CE8  0012               	return		;funcret
  3557   013CEA                     __end_of_DRV_CANFDSPI_ReceiveChannelEventGet:
  3558                           	callstack 0
  3559                           
  3560 ;; *************** function _XF_init *****************
  3561 ;; Defined at:
  3562 ;;		line 80 in file "xf/xf.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;		None
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  i               2  [STACK] int 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1  [STACK] void 
  3569 ;; Registers used:
  3570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;Total ram usage:        0 bytes
  3581 ;; Hardware stack levels used: 1
  3582 ;; Hardware stack levels required when called: 8
  3583 ;; This function calls:
  3584 ;;		_Event_init
  3585 ;; This function is called by:
  3586 ;;		_main
  3587 ;; This function uses a reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text16
  3591   0126DE                     __ptext16:
  3592                           	callstack 0
  3593   0126DE                     _XF_init:
  3594                           	callstack 0
  3595                           
  3596                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3597   0126DE  52E6               	movf	postinc1,f,c
  3598   0126E0  52E6               	movf	postinc1,f,c
  3599   0126E2                     
  3600                           ;xf/xf.c: 82:     int i;;xf/xf.c: 83:     for (i=0; i<30; i++)
  3601                           ;stkvar	_i @ sp[(-2)+0]
  3602   0126E2  0EFE               	movlw	-2
  3603   0126E4  6AE3               	clrf	plusw1,c
  3604   0126E6  0EFF               	movlw	-1
  3605   0126E8  6AE3               	clrf	plusw1,c
  3606   0126EA                     l4878:
  3607                           
  3608                           ;xf/xf.c: 84:     {;xf/xf.c: 85:         Event_init(&(theXF.eventQueue[i]));
  3609                           ;stkvar	_i @ sp[(-2)+0]
  3610   0126EA  0EFE               	movlw	-2
  3611   0126EC  CFE3 F037          	movff	plusw1,btemp+10
  3612   0126F0  0EFF               	movlw	-1
  3613   0126F2  CFE3 F038          	movff	plusw1,btemp+11
  3614   0126F6  0E06               	movlw	6
  3615   0126F8  0237               	mulwf	(btemp+10)^0,c
  3616   0126FA  CFF3 F035          	movff	prodl,btemp+8
  3617   0126FE  CFF4 F036          	movff	prodh,btemp+9
  3618   012702  0238               	mulwf	(btemp+11)^0,c
  3619   012704  50F3               	movf	prodl,w,c
  3620   012706  2636               	addwf	(btemp+9)^0,f,c
  3621   012708  0E28               	movlw	low (_theXF+96)
  3622   01270A  2435               	addwf	(btemp+8)^0,w,c
  3623   01270C  6E37               	movwf	(btemp+10)^0,c
  3624   01270E  0E03               	movlw	high (_theXF+96)
  3625   012710  2036               	addwfc	(btemp+9)^0,w,c
  3626   012712  6E38               	movwf	(btemp+11)^0,c
  3627   012714  C037  FFE6         	movff	btemp+10,postinc1
  3628   012718  C038  FFE6         	movff	btemp+11,postinc1
  3629   01271C  EC6B  F0A1         	call	_Event_init	;wreg free
  3630   012720                     
  3631                           ;xf/xf.c: 86:     }
  3632                           ;stkvar	_i @ sp[(-2)+0]
  3633   012720  0EFE               	movlw	-2
  3634   012722  50E3               	movf	plusw1,w,c
  3635   012724  0F01               	addlw	1
  3636   012726  6E2D               	movwf	btemp^0,c
  3637   012728  0EFE               	movlw	-2
  3638   01272A  C02D  FFE3         	movff	btemp,plusw1
  3639   01272E  6A2D               	clrf	btemp^0,c
  3640   012730  0EFF               	movlw	-1
  3641   012732  50E3               	movf	plusw1,w,c
  3642   012734  202D               	addwfc	btemp^0,w,c
  3643   012736  6E2D               	movwf	btemp^0,c
  3644   012738  0EFF               	movlw	-1
  3645   01273A  C02D  FFE3         	movff	btemp,plusw1
  3646   01273E                     
  3647                           ;stkvar	_i @ sp[(-2)+0]
  3648   01273E  0EFF               	movlw	-1
  3649   012740  BEE3               	btfsc	plusw1,7,c
  3650   012742  EFB0  F093         	goto	u2721
  3651   012746  0EFF               	movlw	-1
  3652   012748  50E3               	movf	plusw1,w,c
  3653   01274A  E10C               	bnz	u2720
  3654   01274C  0EFE               	movlw	-2
  3655   01274E  CFE3 F02D          	movff	plusw1,btemp
  3656   012752  0E1E               	movlw	30
  3657   012754  5E2D               	subwf	btemp^0,f,c
  3658   012756  A0D8               	btfss	status,0,c
  3659   012758  EFB0  F093         	goto	u2721
  3660   01275C  EFB2  F093         	goto	u2720
  3661   012760                     u2721:
  3662   012760  EF75  F093         	goto	l4878
  3663   012764                     u2720:
  3664   012764                     
  3665                           ;xf/xf.c: 88:     for (i=0; i<12; i++)
  3666                           ;stkvar	_i @ sp[(-2)+0]
  3667   012764  0EFE               	movlw	-2
  3668   012766  6AE3               	clrf	plusw1,c
  3669   012768  0EFF               	movlw	-1
  3670   01276A  6AE3               	clrf	plusw1,c
  3671   01276C                     l4890:
  3672                           
  3673                           ;xf/xf.c: 89:     {;xf/xf.c: 90:         theXF.timerList[i].tm = 0;
  3674                           ;stkvar	_i @ sp[(-2)+0]
  3675   01276C  0EFE               	movlw	-2
  3676   01276E  CFE3 F037          	movff	plusw1,btemp+10
  3677   012772  0EFF               	movlw	-1
  3678   012774  CFE3 F038          	movff	plusw1,btemp+11
  3679   012778  90D8               	bcf	status,0,c
  3680   01277A  3637               	rlcf	(btemp+10)^0,f,c
  3681   01277C  3638               	rlcf	(btemp+11)^0,f,c
  3682   01277E  90D8               	bcf	status,0,c
  3683   012780  3637               	rlcf	(btemp+10)^0,f,c
  3684   012782  3638               	rlcf	(btemp+11)^0,f,c
  3685   012784  90D8               	bcf	status,0,c
  3686   012786  3637               	rlcf	(btemp+10)^0,f,c
  3687   012788  3638               	rlcf	(btemp+11)^0,f,c
  3688   01278A  0EC8               	movlw	low _theXF
  3689   01278C  2437               	addwf	(btemp+10)^0,w,c
  3690   01278E  6ED9               	movwf	fsr2l,c
  3691   012790  0E02               	movlw	high _theXF
  3692   012792  2038               	addwfc	(btemp+11)^0,w,c
  3693   012794  6EDA               	movwf	fsr2h,c
  3694   012796  6ADE               	clrf	postinc2,c
  3695   012798  6ADD               	clrf	postdec2,c
  3696   01279A                     
  3697                           ;xf/xf.c: 91:         Event_init(&(theXF.timerList[i].ev));
  3698                           ;stkvar	_i @ sp[(-2)+0]
  3699   01279A  0EFE               	movlw	-2
  3700   01279C  CFE3 F037          	movff	plusw1,btemp+10
  3701   0127A0  0EFF               	movlw	-1
  3702   0127A2  CFE3 F038          	movff	plusw1,btemp+11
  3703   0127A6  90D8               	bcf	status,0,c
  3704   0127A8  3637               	rlcf	(btemp+10)^0,f,c
  3705   0127AA  3638               	rlcf	(btemp+11)^0,f,c
  3706   0127AC  90D8               	bcf	status,0,c
  3707   0127AE  3637               	rlcf	(btemp+10)^0,f,c
  3708   0127B0  3638               	rlcf	(btemp+11)^0,f,c
  3709   0127B2  90D8               	bcf	status,0,c
  3710   0127B4  3637               	rlcf	(btemp+10)^0,f,c
  3711   0127B6  3638               	rlcf	(btemp+11)^0,f,c
  3712   0127B8  0ECA               	movlw	low (_theXF+2)
  3713   0127BA  2437               	addwf	(btemp+10)^0,w,c
  3714   0127BC  6E35               	movwf	(btemp+8)^0,c
  3715   0127BE  0E02               	movlw	high (_theXF+2)
  3716   0127C0  2038               	addwfc	(btemp+11)^0,w,c
  3717   0127C2  6E36               	movwf	(btemp+9)^0,c
  3718   0127C4  C035  FFE6         	movff	btemp+8,postinc1
  3719   0127C8  C036  FFE6         	movff	btemp+9,postinc1
  3720   0127CC  EC6B  F0A1         	call	_Event_init	;wreg free
  3721   0127D0                     
  3722                           ;xf/xf.c: 92:     }
  3723                           ;stkvar	_i @ sp[(-2)+0]
  3724   0127D0  0EFE               	movlw	-2
  3725   0127D2  50E3               	movf	plusw1,w,c
  3726   0127D4  0F01               	addlw	1
  3727   0127D6  6E2D               	movwf	btemp^0,c
  3728   0127D8  0EFE               	movlw	-2
  3729   0127DA  C02D  FFE3         	movff	btemp,plusw1
  3730   0127DE  6A2D               	clrf	btemp^0,c
  3731   0127E0  0EFF               	movlw	-1
  3732   0127E2  50E3               	movf	plusw1,w,c
  3733   0127E4  202D               	addwfc	btemp^0,w,c
  3734   0127E6  6E2D               	movwf	btemp^0,c
  3735   0127E8  0EFF               	movlw	-1
  3736   0127EA  C02D  FFE3         	movff	btemp,plusw1
  3737   0127EE                     
  3738                           ;stkvar	_i @ sp[(-2)+0]
  3739   0127EE  0EFF               	movlw	-1
  3740   0127F0  BEE3               	btfsc	plusw1,7,c
  3741   0127F2  EF08  F094         	goto	u2731
  3742   0127F6  0EFF               	movlw	-1
  3743   0127F8  50E3               	movf	plusw1,w,c
  3744   0127FA  E10C               	bnz	u2730
  3745   0127FC  0EFE               	movlw	-2
  3746   0127FE  CFE3 F02D          	movff	plusw1,btemp
  3747   012802  0E0C               	movlw	12
  3748   012804  5E2D               	subwf	btemp^0,f,c
  3749   012806  A0D8               	btfss	status,0,c
  3750   012808  EF08  F094         	goto	u2731
  3751   01280C  EF0A  F094         	goto	u2730
  3752   012810                     u2731:
  3753   012810  EFB6  F093         	goto	l4890
  3754   012814                     u2730:
  3755   012814                     
  3756                           ;xf/xf.c: 93:     theXF.in = 0;
  3757   012814  0E00               	movlw	0
  3758   012816  CFE8 F3DC          	movff	wreg,_theXF+276
  3759                           
  3760                           ;xf/xf.c: 94:     theXF.out = 0;
  3761   01281A  0E00               	movlw	0
  3762   01281C  CFE8 F3DD          	movff	wreg,_theXF+277
  3763                           
  3764                           ;xf/xf.c: 95:     theXF.maxEvt = 0;
  3765   012820  0E00               	movlw	0
  3766   012822  CFE8 F3DE          	movff	wreg,_theXF+278
  3767                           
  3768                           ;xf/xf.c: 96:     theXF.countEvt = 0;
  3769   012826  0E00               	movlw	0
  3770   012828  CFE8 F3DF          	movff	wreg,_theXF+279
  3771   01282C                     
  3772                           ; _XF_init: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  3773   01282C  52E5               	movf	postdec1,f,c
  3774   01282E  52E5               	movf	postdec1,f,c
  3775   012830  0012               	return		;funcret
  3776   012832                     __end_of_XF_init:
  3777                           	callstack 0
  3778                           
  3779 ;; *************** function _Event_init *****************
  3780 ;; Defined at:
  3781 ;;		line 4 in file "xf/event.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  me              2  [STACK] PTR struct Event_
  3784 ;;		 -> ev(6), theXF$timerList(96), theXF$eventQueue(180), theXF(282), 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1  [STACK] void 
  3789 ;; Registers used:
  3790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;Total ram usage:        0 bytes
  3801 ;; Hardware stack levels used: 1
  3802 ;; Hardware stack levels required when called: 7
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_XF_init
  3807 ;;		_XF_unscheduleTimer
  3808 ;;		_XF_post
  3809 ;; This function uses a reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text17
  3813   0142D6                     __ptext17:
  3814                           	callstack 0
  3815   0142D6                     _Event_init:
  3816                           	callstack 10
  3817   0142D6                     
  3818                           ;xf/event.c: 4: void Event_init(struct Event_* me);xf/event.c: 5: {;xf/event.c: 6:     m
      +                          e->id = 0;
  3819                           ;stkvar	_me @ sp[(0)+-2]
  3820   0142D6  0EFE               	movlw	-2
  3821   0142D8  CFE3 FFD9          	movff	plusw1,fsr2l
  3822   0142DC  0EFF               	movlw	-1
  3823   0142DE  CFE3 FFDA          	movff	plusw1,fsr2h
  3824   0142E2  6ADF               	clrf	indf2,c
  3825   0142E4                     
  3826                           ;xf/event.c: 7:     me->delay = 0;
  3827                           ;stkvar	_me @ sp[(0)+-2]
  3828   0142E4  0EFE               	movlw	-2
  3829   0142E6  CFE3 F037          	movff	plusw1,btemp+10
  3830   0142EA  0EFF               	movlw	-1
  3831   0142EC  CFE3 F038          	movff	plusw1,btemp+11
  3832   0142F0  0E04               	movlw	4
  3833   0142F2  2437               	addwf	(btemp+10)^0,w,c
  3834   0142F4  6ED9               	movwf	fsr2l,c
  3835   0142F6  0E00               	movlw	0
  3836   0142F8  2038               	addwfc	(btemp+11)^0,w,c
  3837   0142FA  6EDA               	movwf	fsr2h,c
  3838   0142FC  6ADE               	clrf	postinc2,c
  3839   0142FE  6ADD               	clrf	postdec2,c
  3840   014300                     
  3841                           ;xf/event.c: 8:     me->processEvent = ((void*)(0));
  3842                           ;stkvar	_me @ sp[(0)+-2]
  3843   014300  0EFE               	movlw	-2
  3844   014302  CFE3 F037          	movff	plusw1,btemp+10
  3845   014306  0EFF               	movlw	-1
  3846   014308  CFE3 F038          	movff	plusw1,btemp+11
  3847   01430C  0E01               	movlw	1
  3848   01430E  2437               	addwf	(btemp+10)^0,w,c
  3849   014310  6ED9               	movwf	fsr2l,c
  3850   014312  0E00               	movlw	0
  3851   014314  2038               	addwfc	(btemp+11)^0,w,c
  3852   014316  6EDA               	movwf	fsr2h,c
  3853   014318  6ADE               	clrf	postinc2,c
  3854   01431A  6ADE               	clrf	postinc2,c
  3855   01431C  6ADD               	clrf	postdec2,c
  3856   01431E                     
  3857                           ; _Event_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  3858   01431E  52E5               	movf	postdec1,f,c
  3859   014320  52E5               	movf	postdec1,f,c
  3860   014322  0012               	return		;funcret
  3861   014324                     __end_of_Event_init:
  3862                           	callstack 0
  3863                           
  3864 ;; *************** function _XF_executeOnce *****************
  3865 ;; Defined at:
  3866 ;;		line 290 in file "xf/xf.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;		None
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  ev              6  [STACK] struct Event_
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1  [STACK] void 
  3873 ;; Registers used:
  3874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;Total ram usage:        0 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; Hardware stack levels required when called: 14
  3887 ;; This function calls:
  3888 ;;		_XF_popEvent
  3889 ;;		_lightControl_Process
  3890 ;; This function is called by:
  3891 ;;		_main
  3892 ;; This function uses a reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text18
  3896   013EAA                     __ptext18:
  3897                           	callstack 0
  3898   013EAA                     _XF_executeOnce:
  3899                           	callstack 0
  3900                           
  3901                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3902   013EAA  0E06               	movlw	6
  3903   013EAC  26E1               	addwf	fsr1l,f,c
  3904   013EAE  0E00               	movlw	0
  3905   013EB0  22E2               	addwfc	fsr1h,f,c
  3906   013EB2                     
  3907                           ;xf/xf.c: 292:     Event ev = XF_popEvent(0);
  3908   013EB2  0E00               	movlw	0
  3909   013EB4  6EE6               	movwf	postinc1,c
  3910   013EB6  ECE2  F09A         	call	_XF_popEvent	;wreg free
  3911                           
  3912                           ;stkvar	_ev @ sp[(-12)+0]
  3913   013EBA  0EFA               	movlw	250
  3914   013EBC  24E1               	addwf	fsr1l,w,c
  3915   013EBE  6ED9               	movwf	fsr2l,c
  3916   013EC0  0EFF               	movlw	255
  3917   013EC2  20E2               	addwfc	fsr1h,w,c
  3918   013EC4  6EDA               	movwf	fsr2h,c
  3919   013EC6  0E06               	movlw	6
  3920   013EC8  6E2D               	movwf	btemp^0,c
  3921   013ECA                     uf274999:
  3922   013ECA  50DD               	movf	postdec2,w,c
  3923   013ECC  52E5               	movf	postdec1,f,c
  3924   013ECE  50E7               	movf	indf1,w,c
  3925   013ED0  6EDF               	movwf	indf2,c
  3926   013ED2  2E2D               	decfsz	btemp^0,f,c
  3927   013ED4  D7FA               	bra	uf274999
  3928   013ED6                     
  3929                           ;xf/xf.c: 294:     if (ev.processEvent != ((void*)0))
  3930                           ;stkvar	_ev @ sp[(-6)+0]
  3931   013ED6  0EFB               	movlw	251
  3932   013ED8  24E1               	addwf	fsr1l,w,c
  3933   013EDA  6ED9               	movwf	fsr2l,c
  3934   013EDC  0EFF               	movlw	255
  3935   013EDE  20E2               	addwfc	fsr1h,w,c
  3936   013EE0  6EDA               	movwf	fsr2h,c
  3937   013EE2  50DE               	movf	postinc2,w,c
  3938   013EE4  10DE               	iorwf	postinc2,w,c
  3939   013EE6  10DE               	iorwf	postinc2,w,c
  3940   013EE8  B4D8               	btfsc	status,2,c
  3941   013EEA  EF79  F09F         	goto	u2751
  3942   013EEE  EF7B  F09F         	goto	u2750
  3943   013EF2                     u2751:
  3944   013EF2  EF98  F09F         	goto	l1261
  3945   013EF6                     u2750:
  3946   013EF6                     
  3947                           ;xf/xf.c: 295:     {;xf/xf.c: 298:         ev.processEvent(&ev);
  3948                           ;stkvar	_ev @ sp[(-6)+0]
  3949   013EF6  0EFA               	movlw	250
  3950   013EF8  24E1               	addwf	fsr1l,w,c
  3951   013EFA  6E2D               	movwf	btemp^0,c
  3952   013EFC  0EFF               	movlw	255
  3953   013EFE  20E2               	addwfc	fsr1h,w,c
  3954   013F00  6E2E               	movwf	(btemp+1)^0,c
  3955   013F02  C02D  FFE6         	movff	btemp,postinc1
  3956   013F06  C02E  FFE6         	movff	btemp+1,postinc1
  3957                           
  3958                           ;stkvar	_ev @ sp[(-8)+0]
  3959   013F0A  0EF9               	movlw	249
  3960   013F0C  24E1               	addwf	fsr1l,w,c
  3961   013F0E  6ED9               	movwf	fsr2l,c
  3962   013F10  0EFF               	movlw	255
  3963   013F12  20E2               	addwfc	fsr1h,w,c
  3964   013F14  6EDA               	movwf	fsr2h,c
  3965   013F16  D802               	call	u2768
  3966   013F18  EF98  F09F         	goto	u2769
  3967   013F1C                     u2768:
  3968   013F1C  0005               	push	
  3969   013F1E  6EFA               	movwf	pclath,c
  3970   013F20  50DE               	movf	postinc2,w,c
  3971   013F22  6EFD               	movwf	tosl,c
  3972   013F24  50DE               	movf	postinc2,w,c
  3973   013F26  6EFE               	movwf	tosh,c
  3974   013F28  50DE               	movf	postinc2,w,c
  3975   013F2A  6EFF               	movwf	tosu,c
  3976   013F2C  50FA               	movf	pclath,w,c
  3977   013F2E  0012               	return		;indir
  3978   013F30                     u2769:
  3979   013F30                     l1261:
  3980                           
  3981                           ; _XF_executeOnce: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3982   013F30  0EFA               	movlw	250
  3983   013F32  26E1               	addwf	fsr1l,f,c
  3984   013F34  0EFF               	movlw	255
  3985   013F36  22E2               	addwfc	fsr1h,f,c
  3986   013F38  0012               	return		;funcret
  3987   013F3A                     __end_of_XF_executeOnce:
  3988                           	callstack 0
  3989                           
  3990 ;; *************** function _lightControl_Process *****************
  3991 ;; Defined at:
  3992 ;;		line 54 in file "carFunctions.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  ev              2  [STACK] PTR struct Event_
  3995 ;;		 -> ev(6), 
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;		None
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1  [STACK] _Bool 
  4000 ;; Registers used:
  4001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;Total ram usage:        0 bytes
  4012 ;; Hardware stack levels used: 1
  4013 ;; Hardware stack levels required when called: 13
  4014 ;; This function calls:
  4015 ;;		_lightContol_BackLight
  4016 ;;		_lightContol_FrontLight
  4017 ;; This function is called by:
  4018 ;;		_main
  4019 ;;		_updateCarState
  4020 ;;		_XF_executeOnce
  4021 ;; This function uses a reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text19
  4025   01297C                     __ptext19:
  4026                           	callstack 0
  4027   01297C                     _lightControl_Process:
  4028                           	callstack 16
  4029   01297C                     
  4030                           ;carFunctions.c: 54: _Bool lightControl_Process(Event* ev);carFunctions.c: 55: {;carFunc
      +                          tions.c: 63:     static LightState state = INIT;;carFunctions.c: 64:     static LightSta
      +                          te oldState = INIT;;carFunctions.c: 65:     switch(state)
  4031   01297C  EF0A  F095         	goto	l4764
  4032   012980                     l4746:
  4033                           
  4034                           ;carFunctions.c: 68:             if(ev->id == E_INIT){
  4035                           ;stkvar	_ev @ sp[(0)+-2]
  4036   012980  0EFE               	movlw	-2
  4037   012982  CFE3 FFD9          	movff	plusw1,fsr2l
  4038   012986  0EFF               	movlw	-1
  4039   012988  CFE3 FFDA          	movff	plusw1,fsr2h
  4040   01298C  50DF               	movf	indf2,w,c
  4041   01298E  06E8               	decf	wreg,f,c
  4042   012990  A4D8               	btfss	status,2,c
  4043   012992  EFCD  F094         	goto	u2651
  4044   012996  EFCF  F094         	goto	u2650
  4045   01299A                     u2651:
  4046   01299A  EF23  F095         	goto	l4766
  4047   01299E                     u2650:
  4048   01299E                     l4748:
  4049                           
  4050                           ;carFunctions.c: 69:                 state = OFF;
  4051   01299E  0E01               	movlw	1
  4052   0129A0  6E2A               	movwf	lightControl_Process@state^0,c
  4053   0129A2  EF23  F095         	goto	l4766
  4054   0129A6                     l4750:
  4055                           
  4056                           ;carFunctions.c: 73:             if(ev->id == E_CONTACT_ON)
  4057                           ;stkvar	_ev @ sp[(0)+-2]
  4058   0129A6  0EFE               	movlw	-2
  4059   0129A8  CFE3 FFD9          	movff	plusw1,fsr2l
  4060   0129AC  0EFF               	movlw	-1
  4061   0129AE  CFE3 FFDA          	movff	plusw1,fsr2h
  4062   0129B2  50DF               	movf	indf2,w,c
  4063   0129B4  0A03               	xorlw	3
  4064   0129B6  A4D8               	btfss	status,2,c
  4065   0129B8  EFE0  F094         	goto	u2661
  4066   0129BC  EFE2  F094         	goto	u2660
  4067   0129C0                     u2661:
  4068   0129C0  EF23  F095         	goto	l4766
  4069   0129C4                     u2660:
  4070   0129C4                     
  4071                           ;carFunctions.c: 74:             {;carFunctions.c: 75:                 state = CRUISE;
  4072   0129C4  0E02               	movlw	2
  4073   0129C6  6E2A               	movwf	lightControl_Process@state^0,c
  4074   0129C8  EF23  F095         	goto	l4766
  4075   0129CC                     l4754:
  4076                           
  4077                           ;carFunctions.c: 80:             if(ev->id == E_CONTACT_OFF)
  4078                           ;stkvar	_ev @ sp[(0)+-2]
  4079   0129CC  0EFE               	movlw	-2
  4080   0129CE  CFE3 FFD9          	movff	plusw1,fsr2l
  4081   0129D2  0EFF               	movlw	-1
  4082   0129D4  CFE3 FFDA          	movff	plusw1,fsr2h
  4083   0129D8  50DF               	movf	indf2,w,c
  4084   0129DA  0A02               	xorlw	2
  4085   0129DC  A4D8               	btfss	status,2,c
  4086   0129DE  EFF3  F094         	goto	u2671
  4087   0129E2  EFF5  F094         	goto	u2670
  4088   0129E6                     u2671:
  4089   0129E6  EFF7  F094         	goto	l4758
  4090   0129EA                     u2670:
  4091   0129EA  EFCF  F094         	goto	l4748
  4092   0129EE                     l4758:
  4093                           
  4094                           ;stkvar	_ev @ sp[(0)+-2]
  4095   0129EE  0EFE               	movlw	-2
  4096   0129F0  CFE3 FFD9          	movff	plusw1,fsr2l
  4097   0129F4  0EFF               	movlw	-1
  4098   0129F6  CFE3 FFDA          	movff	plusw1,fsr2h
  4099   0129FA  50DF               	movf	indf2,w,c
  4100   0129FC  0A04               	xorlw	4
  4101   0129FE  A4D8               	btfss	status,2,c
  4102   012A00  EF04  F095         	goto	u2681
  4103   012A04  EF06  F095         	goto	u2680
  4104   012A08                     u2681:
  4105   012A08  EF23  F095         	goto	l4766
  4106   012A0C                     u2680:
  4107   012A0C                     
  4108                           ;carFunctions.c: 86:             {;carFunctions.c: 87:                 state = BRAKE;
  4109   012A0C  0E03               	movlw	3
  4110   012A0E  6E2A               	movwf	lightControl_Process@state^0,c
  4111   012A10  EF23  F095         	goto	l4766
  4112   012A14                     l4764:
  4113   012A14  502A               	movf	lightControl_Process@state^0,w,c
  4114   012A16  6E37               	movwf	(btemp+10)^0,c
  4115   012A18  6A38               	clrf	(btemp+11)^0,c
  4116                           
  4117                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4118                           ; Switch size 1, requested type "simple"
  4119                           ; Number of cases is 1, Range of values is 0 to 0
  4120                           ; switch strategies available:
  4121                           ; Name         Instructions Cycles
  4122                           ; simple_byte            4     3 (average)
  4123                           ;	Chosen strategy is simple_byte
  4124   012A1A  5038               	movf	(btemp+11)^0,w,c
  4125   012A1C  0A00               	xorlw	0	; case 0
  4126   012A1E  B4D8               	btfsc	status,2,c
  4127   012A20  EF14  F095         	goto	l5026
  4128   012A24  EF23  F095         	goto	l4766
  4129   012A28                     l5026:
  4130                           
  4131                           ; Switch size 1, requested type "simple"
  4132                           ; Number of cases is 3, Range of values is 0 to 2
  4133                           ; switch strategies available:
  4134                           ; Name         Instructions Cycles
  4135                           ; simple_byte           10     6 (average)
  4136                           ;	Chosen strategy is simple_byte
  4137   012A28  5037               	movf	(btemp+10)^0,w,c
  4138   012A2A  0A00               	xorlw	0	; case 0
  4139   012A2C  B4D8               	btfsc	status,2,c
  4140   012A2E  EFC0  F094         	goto	l4746
  4141   012A32  0A01               	xorlw	1	; case 1
  4142   012A34  B4D8               	btfsc	status,2,c
  4143   012A36  EFD3  F094         	goto	l4750
  4144   012A3A  0A03               	xorlw	3	; case 2
  4145   012A3C  B4D8               	btfsc	status,2,c
  4146   012A3E  EFE6  F094         	goto	l4754
  4147   012A42  EF23  F095         	goto	l4766
  4148   012A46                     l4766:
  4149                           
  4150                           ;carFunctions.c: 94:    if(oldState == state)
  4151   012A46  502A               	movf	lightControl_Process@state^0,w,c
  4152   012A48  1829               	xorwf	lightControl_Process@oldState^0,w,c
  4153   012A4A  A4D8               	btfss	status,2,c
  4154   012A4C  EF2A  F095         	goto	u2691
  4155   012A50  EF2C  F095         	goto	u2690
  4156   012A54                     u2691:
  4157   012A54  EF2E  F095         	goto	l1447
  4158   012A58                     u2690:
  4159   012A58  EF5F  F095         	goto	l1448
  4160   012A5C                     l1447:
  4161                           
  4162                           ;carFunctions.c: 98:    oldState = state;
  4163   012A5C  C02A  F029         	movff	lightControl_Process@state,lightControl_Process@oldState
  4164                           
  4165                           ;carFunctions.c: 99:    switch(state)
  4166   012A60  EF46  F095         	goto	l4776
  4167   012A64                     l4770:
  4168                           
  4169                           ;carFunctions.c: 104:             lightContol_FrontLight(0);
  4170   012A64  0E00               	movlw	0
  4171   012A66  6EE6               	movwf	postinc1,c
  4172   012A68  EC20  F09D         	call	_lightContol_FrontLight	;wreg free
  4173                           
  4174                           ;carFunctions.c: 105:             lightContol_BackLight(0);
  4175   012A6C  0E00               	movlw	0
  4176   012A6E  6EE6               	movwf	postinc1,c
  4177   012A70  ECC6  F09C         	call	_lightContol_BackLight	;wreg free
  4178                           
  4179                           ;carFunctions.c: 106:             break;
  4180   012A74  EF5F  F095         	goto	l1448
  4181   012A78                     l4772:
  4182                           
  4183                           ;carFunctions.c: 108:             lightContol_FrontLight(50);
  4184   012A78  0E32               	movlw	50
  4185   012A7A  6EE6               	movwf	postinc1,c
  4186   012A7C  EC20  F09D         	call	_lightContol_FrontLight	;wreg free
  4187                           
  4188                           ;carFunctions.c: 109:             lightContol_BackLight(50);
  4189   012A80  0E32               	movlw	50
  4190   012A82  6EE6               	movwf	postinc1,c
  4191   012A84  ECC6  F09C         	call	_lightContol_BackLight	;wreg free
  4192                           
  4193                           ;carFunctions.c: 110:             break;
  4194   012A88  EF5F  F095         	goto	l1448
  4195   012A8C                     l4776:
  4196   012A8C  502A               	movf	lightControl_Process@state^0,w,c
  4197   012A8E  6E37               	movwf	(btemp+10)^0,c
  4198   012A90  6A38               	clrf	(btemp+11)^0,c
  4199                           
  4200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4201                           ; Switch size 1, requested type "simple"
  4202                           ; Number of cases is 1, Range of values is 0 to 0
  4203                           ; switch strategies available:
  4204                           ; Name         Instructions Cycles
  4205                           ; simple_byte            4     3 (average)
  4206                           ;	Chosen strategy is simple_byte
  4207   012A92  5038               	movf	(btemp+11)^0,w,c
  4208   012A94  0A00               	xorlw	0	; case 0
  4209   012A96  B4D8               	btfsc	status,2,c
  4210   012A98  EF50  F095         	goto	l5028
  4211   012A9C  EF5F  F095         	goto	l1448
  4212   012AA0                     l5028:
  4213                           
  4214                           ; Switch size 1, requested type "simple"
  4215                           ; Number of cases is 3, Range of values is 0 to 2
  4216                           ; switch strategies available:
  4217                           ; Name         Instructions Cycles
  4218                           ; simple_byte           10     6 (average)
  4219                           ;	Chosen strategy is simple_byte
  4220   012AA0  5037               	movf	(btemp+10)^0,w,c
  4221   012AA2  0A00               	xorlw	0	; case 0
  4222   012AA4  B4D8               	btfsc	status,2,c
  4223   012AA6  EF5F  F095         	goto	l1448
  4224   012AAA  0A01               	xorlw	1	; case 1
  4225   012AAC  B4D8               	btfsc	status,2,c
  4226   012AAE  EF32  F095         	goto	l4770
  4227   012AB2  0A03               	xorlw	3	; case 2
  4228   012AB4  B4D8               	btfsc	status,2,c
  4229   012AB6  EF3C  F095         	goto	l4772
  4230   012ABA  EF5F  F095         	goto	l1448
  4231   012ABE                     l1448:
  4232                           
  4233                           ; _lightControl_Process: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 2, argsize = 2, vargsize = 0
  4234   012ABE  52E5               	movf	postdec1,f,c
  4235   012AC0  52E5               	movf	postdec1,f,c
  4236   012AC2  0012               	return		;funcret
  4237   012AC4                     __end_of_lightControl_Process:
  4238                           	callstack 0
  4239                           
  4240 ;; *************** function _lightContol_FrontLight *****************
  4241 ;; Defined at:
  4242 ;;		line 24 in file "carFunctions.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  light           1  [STACK] unsigned char 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  txMsg          16  [STACK] struct _CAN_TX_MSGOBJ
  4247 ;;  txdata          8  [STACK] unsigned char [8]
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1  [STACK] void 
  4250 ;; Registers used:
  4251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;Total ram usage:        0 bytes
  4262 ;; Hardware stack levels used: 1
  4263 ;; Hardware stack levels required when called: 12
  4264 ;; This function calls:
  4265 ;;		_CanSend
  4266 ;; This function is called by:
  4267 ;;		_lightControl_Process
  4268 ;; This function uses a reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text20
  4272   013A40                     __ptext20:
  4273                           	callstack 0
  4274   013A40                     _lightContol_FrontLight:
  4275                           	callstack 0
  4276                           
  4277                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4278   013A40  0E18               	movlw	24
  4279   013A42  26E1               	addwf	fsr1l,f,c
  4280   013A44  0E00               	movlw	0
  4281   013A46  22E2               	addwfc	fsr1h,f,c
  4282   013A48                     
  4283                           ;carFunctions.c: 24: void lightContol_FrontLight(uint8_t light);carFunctions.c: 25: {;ca
      +                          rFunctions.c: 27: static uint8_t lastLight=0;;carFunctions.c: 28: CAN_TX_MSGOBJ txMsg={0
      +                          };
  4284   013A48  EE20  F011         	lfsr	2,lightContol_FrontLight@F6636
  4285                           
  4286                           ;stkvar	_txMsg @ sp[(-24)+0]
  4287   013A4C  0E10               	movlw	16
  4288   013A4E  6E2D               	movwf	btemp^0,c
  4289   013A50  0EE8               	movlw	-24
  4290   013A52                     us219999:
  4291   013A52  CFDE FFE3          	movff	postinc2,plusw1
  4292   013A56  28E8               	incf	wreg,w,c
  4293   013A58  2E2D               	decfsz	btemp^0,f,c
  4294   013A5A  D7FB               	bra	us219999
  4295   013A5C                     
  4296                           ;carFunctions.c: 29: uint8_t txdata[8];;carFunctions.c: 30:     if(lastLight!= light) {
  4297                           ;stkvar	_light @ sp[(-24)+-1]
  4298   013A5C  0EE7               	movlw	-25
  4299   013A5E  50E3               	movf	plusw1,w,c
  4300   013A60  182C               	xorwf	lightContol_FrontLight@lastLight^0,w,c
  4301   013A62  B4D8               	btfsc	status,2,c
  4302   013A64  EF36  F09D         	goto	u2201
  4303   013A68  EF38  F09D         	goto	u2200
  4304   013A6C                     u2201:
  4305   013A6C  EF72  F09D         	goto	l1421
  4306   013A70                     u2200:
  4307   013A70                     
  4308                           ;carFunctions.c: 31:         lastLight = light;
  4309                           ;stkvar	_light @ sp[(-24)+-1]
  4310   013A70  0EE7               	movlw	-25
  4311   013A72  CFE3 F02C          	movff	plusw1,lightContol_FrontLight@lastLight
  4312   013A76                     
  4313                           ;carFunctions.c: 33:         txMsg.bF.id.ID = (0x19);
  4314   013A76  0E19               	movlw	25
  4315   013A78  6E35               	movwf	(btemp+8)^0,c
  4316   013A7A  6A36               	clrf	(btemp+9)^0,c
  4317   013A7C  6A37               	clrf	(btemp+10)^0,c
  4318   013A7E  6A38               	clrf	(btemp+11)^0,c
  4319                           
  4320                           ;stkvar	_txMsg @ sp[(-24)+0]
  4321   013A80  0EE8               	movlw	-24
  4322   013A82  C035  FFE3         	movff	btemp+8,plusw1
  4323   013A86  0EE9               	movlw	-23
  4324   013A88  C036  FFE3         	movff	btemp+9,plusw1
  4325   013A8C  0EEA               	movlw	-22
  4326   013A8E  C037  FFE3         	movff	btemp+10,plusw1
  4327   013A92  0EEB               	movlw	-21
  4328   013A94  C038  FFE3         	movff	btemp+11,plusw1
  4329   013A98                     
  4330                           ;carFunctions.c: 34:         txMsg.bF.ctrl.DLC = CAN_DLC_1;
  4331                           ;stkvar	_txMsg @ sp[(-24)+0]
  4332   013A98  0EEE               	movlw	238
  4333   013A9A  24E1               	addwf	fsr1l,w,c
  4334   013A9C  6ED9               	movwf	fsr2l,c
  4335   013A9E  0EFF               	movlw	255
  4336   013AA0  20E2               	addwfc	fsr1h,w,c
  4337   013AA2  6EDA               	movwf	fsr2h,c
  4338   013AA4  50DF               	movf	223,w,c
  4339   013AA6  0BF0               	andlw	-16
  4340   013AA8  0901               	iorlw	1
  4341   013AAA  6EDF               	movwf	223,c
  4342   013AAC                     
  4343                           ;carFunctions.c: 35:         txdata[0] = light;
  4344                           ;stkvar	_light @ sp[(-24)+-1]
  4345                           ;stkvar	_txdata @ sp[(-24)+16]
  4346   013AAC  0EE7               	movlw	-25
  4347   013AAE  CFE3 F02D          	movff	plusw1,btemp
  4348   013AB2  0EF8               	movlw	-8
  4349   013AB4  C02D  FFE3         	movff	btemp,plusw1
  4350   013AB8                     
  4351                           ;carFunctions.c: 36:         CanSend(&txMsg,txdata);
  4352                           ;stkvar	_txdata @ sp[(-24)+16]
  4353   013AB8  0EF8               	movlw	248
  4354   013ABA  24E1               	addwf	fsr1l,w,c
  4355   013ABC  6E2D               	movwf	btemp^0,c
  4356   013ABE  0EFF               	movlw	255
  4357   013AC0  20E2               	addwfc	fsr1h,w,c
  4358   013AC2  6E2E               	movwf	(btemp+1)^0,c
  4359   013AC4  C02D  FFE6         	movff	btemp,postinc1
  4360   013AC8  C02E  FFE6         	movff	btemp+1,postinc1
  4361                           
  4362                           ;stkvar	_txMsg @ sp[(-26)+0]
  4363   013ACC  0EE6               	movlw	230
  4364   013ACE  24E1               	addwf	fsr1l,w,c
  4365   013AD0  6E2D               	movwf	btemp^0,c
  4366   013AD2  0EFF               	movlw	255
  4367   013AD4  20E2               	addwfc	fsr1h,w,c
  4368   013AD6  6E2E               	movwf	(btemp+1)^0,c
  4369   013AD8  C02D  FFE6         	movff	btemp,postinc1
  4370   013ADC  C02E  FFE6         	movff	btemp+1,postinc1
  4371   013AE0  ECCE  F09D         	call	_CanSend	;wreg free
  4372   013AE4                     l1421:
  4373                           
  4374                           ; _lightContol_FrontLight: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 1, argsize = 1, vargsize = 0
  4375   013AE4  0EE7               	movlw	231
  4376   013AE6  26E1               	addwf	fsr1l,f,c
  4377   013AE8  0EFF               	movlw	255
  4378   013AEA  22E2               	addwfc	fsr1h,f,c
  4379   013AEC  0012               	return		;funcret
  4380   013AEE                     __end_of_lightContol_FrontLight:
  4381                           	callstack 0
  4382                           
  4383 ;; *************** function _lightContol_BackLight *****************
  4384 ;; Defined at:
  4385 ;;		line 39 in file "carFunctions.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  light           1  [STACK] unsigned char 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  txMsg          16  [STACK] struct _CAN_TX_MSGOBJ
  4390 ;;  txdata          8  [STACK] unsigned char [8]
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1  [STACK] void 
  4393 ;; Registers used:
  4394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;Total ram usage:        0 bytes
  4405 ;; Hardware stack levels used: 1
  4406 ;; Hardware stack levels required when called: 12
  4407 ;; This function calls:
  4408 ;;		_CanSend
  4409 ;; This function is called by:
  4410 ;;		_lightControl_Process
  4411 ;; This function uses a reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text21
  4415   01398C                     __ptext21:
  4416                           	callstack 0
  4417   01398C                     _lightContol_BackLight:
  4418                           	callstack 0
  4419                           
  4420                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4421   01398C  0E18               	movlw	24
  4422   01398E  26E1               	addwf	fsr1l,f,c
  4423   013990  0E00               	movlw	0
  4424   013992  22E2               	addwfc	fsr1h,f,c
  4425   013994                     
  4426                           ;carFunctions.c: 39: void lightContol_BackLight(uint8_t light);carFunctions.c: 40: {;car
      +                          Functions.c: 41:     static uint8_t lastLight=0;;carFunctions.c: 42:     CAN_TX_MSGOBJ t
      +                          xMsg={0};
  4427   013994  EE20  F001         	lfsr	2,lightContol_BackLight@F6642
  4428                           
  4429                           ;stkvar	_txMsg @ sp[(-24)+0]
  4430   013998  0E10               	movlw	16
  4431   01399A  6E2D               	movwf	btemp^0,c
  4432   01399C  0EE8               	movlw	-24
  4433   01399E                     us221999:
  4434   01399E  CFDE FFE3          	movff	postinc2,plusw1
  4435   0139A2  28E8               	incf	wreg,w,c
  4436   0139A4  2E2D               	decfsz	btemp^0,f,c
  4437   0139A6  D7FB               	bra	us221999
  4438   0139A8                     
  4439                           ;carFunctions.c: 43:     uint8_t txdata[8];;carFunctions.c: 44:     if(lastLight!= light
      +                          ) {
  4440                           ;stkvar	_light @ sp[(-24)+-1]
  4441   0139A8  0EE7               	movlw	-25
  4442   0139AA  50E3               	movf	plusw1,w,c
  4443   0139AC  182B               	xorwf	lightContol_BackLight@lastLight^0,w,c
  4444   0139AE  B4D8               	btfsc	status,2,c
  4445   0139B0  EFDC  F09C         	goto	u2221
  4446   0139B4  EFDE  F09C         	goto	u2220
  4447   0139B8                     u2221:
  4448   0139B8  EF1B  F09D         	goto	l1429
  4449   0139BC                     u2220:
  4450   0139BC                     
  4451                           ;carFunctions.c: 45:         lastLight = light;
  4452                           ;stkvar	_light @ sp[(-24)+-1]
  4453   0139BC  0EE7               	movlw	-25
  4454   0139BE  CFE3 F02B          	movff	plusw1,lightContol_BackLight@lastLight
  4455   0139C2                     
  4456                           ;carFunctions.c: 47:         txMsg.bF.id.ID = (0x119);
  4457   0139C2  0E19               	movlw	25
  4458   0139C4  6E35               	movwf	(btemp+8)^0,c
  4459   0139C6  0E01               	movlw	1
  4460   0139C8  6E36               	movwf	(btemp+9)^0,c
  4461   0139CA  0E00               	movlw	0
  4462   0139CC  6E37               	movwf	(btemp+10)^0,c
  4463   0139CE  0E00               	movlw	0
  4464   0139D0  6E38               	movwf	(btemp+11)^0,c
  4465                           
  4466                           ;stkvar	_txMsg @ sp[(-24)+0]
  4467   0139D2  0EE8               	movlw	-24
  4468   0139D4  C035  FFE3         	movff	btemp+8,plusw1
  4469   0139D8  0EE9               	movlw	-23
  4470   0139DA  C036  FFE3         	movff	btemp+9,plusw1
  4471   0139DE  0EEA               	movlw	-22
  4472   0139E0  C037  FFE3         	movff	btemp+10,plusw1
  4473   0139E4  0EEB               	movlw	-21
  4474   0139E6  C038  FFE3         	movff	btemp+11,plusw1
  4475   0139EA                     
  4476                           ;carFunctions.c: 48:         txMsg.bF.ctrl.DLC = CAN_DLC_1;
  4477                           ;stkvar	_txMsg @ sp[(-24)+0]
  4478   0139EA  0EEE               	movlw	238
  4479   0139EC  24E1               	addwf	fsr1l,w,c
  4480   0139EE  6ED9               	movwf	fsr2l,c
  4481   0139F0  0EFF               	movlw	255
  4482   0139F2  20E2               	addwfc	fsr1h,w,c
  4483   0139F4  6EDA               	movwf	fsr2h,c
  4484   0139F6  50DF               	movf	223,w,c
  4485   0139F8  0BF0               	andlw	-16
  4486   0139FA  0901               	iorlw	1
  4487   0139FC  6EDF               	movwf	223,c
  4488   0139FE                     
  4489                           ;carFunctions.c: 49:         txdata[0] = light;
  4490                           ;stkvar	_light @ sp[(-24)+-1]
  4491                           ;stkvar	_txdata @ sp[(-24)+16]
  4492   0139FE  0EE7               	movlw	-25
  4493   013A00  CFE3 F02D          	movff	plusw1,btemp
  4494   013A04  0EF8               	movlw	-8
  4495   013A06  C02D  FFE3         	movff	btemp,plusw1
  4496   013A0A                     
  4497                           ;carFunctions.c: 50:         CanSend(&txMsg,txdata);
  4498                           ;stkvar	_txdata @ sp[(-24)+16]
  4499   013A0A  0EF8               	movlw	248
  4500   013A0C  24E1               	addwf	fsr1l,w,c
  4501   013A0E  6E2D               	movwf	btemp^0,c
  4502   013A10  0EFF               	movlw	255
  4503   013A12  20E2               	addwfc	fsr1h,w,c
  4504   013A14  6E2E               	movwf	(btemp+1)^0,c
  4505   013A16  C02D  FFE6         	movff	btemp,postinc1
  4506   013A1A  C02E  FFE6         	movff	btemp+1,postinc1
  4507                           
  4508                           ;stkvar	_txMsg @ sp[(-26)+0]
  4509   013A1E  0EE6               	movlw	230
  4510   013A20  24E1               	addwf	fsr1l,w,c
  4511   013A22  6E2D               	movwf	btemp^0,c
  4512   013A24  0EFF               	movlw	255
  4513   013A26  20E2               	addwfc	fsr1h,w,c
  4514   013A28  6E2E               	movwf	(btemp+1)^0,c
  4515   013A2A  C02D  FFE6         	movff	btemp,postinc1
  4516   013A2E  C02E  FFE6         	movff	btemp+1,postinc1
  4517   013A32  ECCE  F09D         	call	_CanSend	;wreg free
  4518   013A36                     l1429:
  4519                           
  4520                           ; _lightContol_BackLight: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  4521   013A36  0EE7               	movlw	231
  4522   013A38  26E1               	addwf	fsr1l,f,c
  4523   013A3A  0EFF               	movlw	255
  4524   013A3C  22E2               	addwfc	fsr1h,f,c
  4525   013A3E  0012               	return		;funcret
  4526   013A40                     __end_of_lightContol_BackLight:
  4527                           	callstack 0
  4528                           
  4529 ;; *************** function _CanSend *****************
  4530 ;; Defined at:
  4531 ;;		line 217 in file "can/can.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;  txObj           2  [STACK] PTR struct _CAN_TX_MSGOB
  4534 ;;		 -> txMsg(16), 
  4535 ;;  txd             2  [STACK] PTR unsigned char 
  4536 ;;		 -> txdata(8), txdata(8), 
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;  txFlags         1  [STACK] enum E5583
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1  [STACK] char 
  4541 ;; Registers used:
  4542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;Total ram usage:        0 bytes
  4553 ;; Hardware stack levels used: 1
  4554 ;; Hardware stack levels required when called: 11
  4555 ;; This function calls:
  4556 ;;		_DRV_CANFDSPI_TransmitChannelEventGet
  4557 ;;		_DRV_CANFDSPI_TransmitChannelLoad
  4558 ;; This function is called by:
  4559 ;;		_lightContol_FrontLight
  4560 ;;		_lightContol_BackLight
  4561 ;; This function uses a reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text22
  4565   013B9C                     __ptext22:
  4566                           	callstack 0
  4567   013B9C                     _CanSend:
  4568                           	callstack 0
  4569                           
  4570                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4571   013B9C  52E6               	movf	postinc1,f,c
  4572   013B9E                     
  4573                           ;can/can.c: 217: int8_t CanSend(CAN_TX_MSGOBJ * txObj, uint8_t * txd);can/can.c: 218: {;
      +                          can/can.c: 219:     txObj->bF.ctrl.SEQ = 1;
  4574                           ;stkvar	_txObj @ sp[(-1)+-2]
  4575   013B9E  0EFD               	movlw	-3
  4576   013BA0  CFE3 F037          	movff	plusw1,btemp+10
  4577   013BA4  0EFE               	movlw	-2
  4578   013BA6  CFE3 F038          	movff	plusw1,btemp+11
  4579   013BAA  0E08               	movlw	8
  4580   013BAC  2437               	addwf	(btemp+10)^0,w,c
  4581   013BAE  6ED9               	movwf	fsr2l,c
  4582   013BB0  0E00               	movlw	0
  4583   013BB2  2038               	addwfc	(btemp+11)^0,w,c
  4584   013BB4  6EDA               	movwf	fsr2h,c
  4585   013BB6  0E01               	movlw	1
  4586   013BB8  6EDE               	movwf	postinc2,c
  4587   013BBA  0E00               	movlw	0
  4588   013BBC  6EDE               	movwf	postinc2,c
  4589   013BBE  0E00               	movlw	0
  4590   013BC0  6EDE               	movwf	postinc2,c
  4591   013BC2  0E00               	movlw	0
  4592   013BC4  6EDD               	movwf	postdec2,c
  4593   013BC6                     
  4594                           ;can/can.c: 221:     CAN_TX_FIFO_EVENT txFlags;;can/can.c: 222:     DRV_CANFDSPI_Transmi
      +                          tChannelEventGet(CAN_FIFO_CH1,&txFlags);
  4595                           ;stkvar	_txFlags @ sp[(-1)+0]
  4596   013BC6  0EFF               	movlw	255
  4597   013BC8  24E1               	addwf	fsr1l,w,c
  4598   013BCA  6E2D               	movwf	btemp^0,c
  4599   013BCC  0EFF               	movlw	255
  4600   013BCE  20E2               	addwfc	fsr1h,w,c
  4601   013BD0  6E2E               	movwf	(btemp+1)^0,c
  4602   013BD2  C02D  FFE6         	movff	btemp,postinc1
  4603   013BD6  C02E  FFE6         	movff	btemp+1,postinc1
  4604   013BDA  0E01               	movlw	1
  4605   013BDC  6EE6               	movwf	postinc1,c
  4606   013BDE  EC75  F09E         	call	_DRV_CANFDSPI_TransmitChannelEventGet	;wreg free
  4607   013BE2                     
  4608                           ;can/can.c: 223:     if(txFlags & CAN_TX_FIFO_NOT_FULL_EVENT)
  4609                           ;stkvar	_txFlags @ sp[(-1)+0]
  4610   013BE2  0EFF               	movlw	-1
  4611   013BE4  A0E3               	btfss	plusw1,0,c
  4612   013BE6  EFF7  F09D         	goto	u1871
  4613   013BEA  EFF9  F09D         	goto	u1870
  4614   013BEE                     u1871:
  4615   013BEE  EF1E  F09E         	goto	l158
  4616   013BF2                     u1870:
  4617   013BF2                     
  4618                           ;can/can.c: 224:     {;can/can.c: 225:       DRV_CANFDSPI_TransmitChannelLoad(CAN_FIFO_C
      +                          H1,txObj,txd,txObj->bF.ctrl.DLC,1);
  4619   013BF2  0E01               	movlw	1
  4620   013BF4  6EE6               	movwf	postinc1,c
  4621                           
  4622                           ;stkvar	_txObj @ sp[(-2)+-2]
  4623   013BF6  0EFC               	movlw	-4
  4624   013BF8  CFE3 F037          	movff	plusw1,btemp+10
  4625   013BFC  0EFD               	movlw	-3
  4626   013BFE  CFE3 F038          	movff	plusw1,btemp+11
  4627   013C02  0E06               	movlw	6
  4628   013C04  2437               	addwf	(btemp+10)^0,w,c
  4629   013C06  6ED9               	movwf	fsr2l,c
  4630   013C08  0E00               	movlw	0
  4631   013C0A  2038               	addwfc	(btemp+11)^0,w,c
  4632   013C0C  6EDA               	movwf	fsr2h,c
  4633   013C0E  50DF               	movf	223,w,c
  4634   013C10  0B0F               	andlw	15
  4635   013C12  6E38               	movwf	(btemp+11)^0,c
  4636   013C14  C038  FFE6         	movff	btemp+11,postinc1
  4637   013C18  0E00               	movlw	0
  4638   013C1A  6EE6               	movwf	postinc1,c
  4639   013C1C  6EE6               	movwf	postinc1,c
  4640   013C1E  6EE6               	movwf	postinc1,c
  4641                           
  4642                           ;stkvar	_txd @ sp[(-6)+-4]
  4643   013C20  0EF6               	movlw	-10
  4644   013C22  CFE3 FFE6          	movff	plusw1,postinc1
  4645   013C26  CFE3 FFE6          	movff	plusw1,postinc1
  4646                           
  4647                           ;stkvar	_txObj @ sp[(-8)+-2]
  4648   013C2A  0EF6               	movlw	-10
  4649   013C2C  CFE3 FFE6          	movff	plusw1,postinc1
  4650   013C30  CFE3 FFE6          	movff	plusw1,postinc1
  4651   013C34  0E01               	movlw	1
  4652   013C36  6EE6               	movwf	postinc1,c
  4653   013C38  EC00  F080         	call	_DRV_CANFDSPI_TransmitChannelLoad	;wreg free
  4654   013C3C                     l158:
  4655                           
  4656                           ; _CanSend: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  4657   013C3C  0EFB               	movlw	251
  4658   013C3E  26E1               	addwf	fsr1l,f,c
  4659   013C40  0EFF               	movlw	255
  4660   013C42  22E2               	addwfc	fsr1h,f,c
  4661   013C44  0012               	return		;funcret
  4662   013C46                     __end_of_CanSend:
  4663                           	callstack 0
  4664                           
  4665 ;; *************** function _DRV_CANFDSPI_TransmitChannelLoad *****************
  4666 ;; Defined at:
  4667 ;;		line 706 in file "can/can.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  channel         1  [STACK] enum E5290
  4670 ;;  txObj           2  [STACK] PTR struct _CAN_TX_MSGOB
  4671 ;;		 -> txMsg(16), 
  4672 ;;  txd             2  [STACK] PTR unsigned char 
  4673 ;;		 -> txdata(8), txdata(8), 
  4674 ;;  txdNumBytes     4  [STACK] unsigned long 
  4675 ;;  flush           1  [STACK] _Bool 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;  temp32          4  [STACK] unsigned long 
  4678 ;;  txBuffer       76  [STACK] unsigned char [76]
  4679 ;;  fifoReg        12  [STACK] unsigned long [3]
  4680 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
  4681 ;;  a               4  [STACK] unsigned long 
  4682 ;;  ciFifoUa        4  [STACK] struct _REG_CiFIFOUA
  4683 ;;  dataBytesInO    4  [STACK] unsigned long 
  4684 ;;  ciFifoSta       4  [STACK] struct _REG_CiFIFOSTA
  4685 ;;  n               2  [STACK] unsigned short 
  4686 ;;  spiTransferE    1  [STACK] char 
  4687 ;;  i               1  [STACK] unsigned char 
  4688 ;;  j               1  [STACK] unsigned char 
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1  [STACK] char 
  4691 ;; Registers used:
  4692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;Total ram usage:        0 bytes
  4703 ;; Hardware stack levels used: 1
  4704 ;; Hardware stack levels required when called: 10
  4705 ;; This function calls:
  4706 ;;		_DRV_CANFDSPI_DlcToDataBytes
  4707 ;;		_DRV_CANFDSPI_ReadWordArray
  4708 ;;		_DRV_CANFDSPI_TransmitChannelUpdate
  4709 ;;		_DRV_CANFDSPI_WriteByteArray
  4710 ;; This function is called by:
  4711 ;;		_CanSend
  4712 ;; This function uses a reentrant model
  4713 ;;
  4714                           
  4715                           	psect	text23
  4716   010000                     __ptext23:
  4717                           	callstack 0
  4718   010000                     _DRV_CANFDSPI_TransmitChannelLoad:
  4719                           	callstack 0
  4720                           
  4721                           ; autosize = 114, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10
      +                           vargsize = 0, retsize = 0 argfudge = 0
  4722   010000  0E72               	movlw	114
  4723   010002  26E1               	addwf	fsr1l,f,c
  4724   010004  0E00               	movlw	0
  4725   010006  22E2               	addwfc	fsr1h,f,c
  4726   010008                     
  4727                           ;can/can.c: 719:     a = 0x050 + (channel * (3*4));
  4728                           ;stkvar	_channel @ sp[(-114)+-1]
  4729   010008  0E8D               	movlw	-115
  4730   01000A  50E3               	movf	plusw1,w,c
  4731   01000C  0D0C               	mullw	12
  4732   01000E  0E50               	movlw	80
  4733   010010  26F3               	addwf	243,f,c
  4734   010012  0E00               	movlw	0
  4735   010014  22F4               	addwfc	244,f,c
  4736                           
  4737                           ;stkvar	_a @ sp[(-114)+97]
  4738   010016  0EEF               	movlw	-17
  4739   010018  CFF3 FFE3          	movff	prodl,plusw1
  4740   01001C  0EF0               	movlw	-16
  4741   01001E  CFF4 FFE3          	movff	prodh,plusw1
  4742   010022  0EF1               	movlw	-15
  4743   010024  6AE3               	clrf	plusw1,c
  4744   010026  0EF2               	movlw	-14
  4745   010028  6AE3               	clrf	plusw1,c
  4746   01002A                     
  4747                           ;can/can.c: 721:     spiTransferError = DRV_CANFDSPI_ReadWordArray( (uint16_t)a, fifoReg
      +                          , 3);
  4748   01002A  0E03               	movlw	3
  4749   01002C  6EE6               	movwf	postinc1,c
  4750   01002E  0E00               	movlw	0
  4751   010030  6EE6               	movwf	postinc1,c
  4752                           
  4753                           ;stkvar	_fifoReg @ sp[(-116)+80]
  4754   010032  0EDC               	movlw	220
  4755   010034  24E1               	addwf	fsr1l,w,c
  4756   010036  6E2D               	movwf	btemp^0,c
  4757   010038  0EFF               	movlw	255
  4758   01003A  20E2               	addwfc	fsr1h,w,c
  4759   01003C  6E2E               	movwf	(btemp+1)^0,c
  4760   01003E  C02D  FFE6         	movff	btemp,postinc1
  4761   010042  C02E  FFE6         	movff	btemp+1,postinc1
  4762                           
  4763                           ;stkvar	_a @ sp[(-118)+97]
  4764   010046  0EEB               	movlw	-21
  4765   010048  CFE3 FFE6          	movff	plusw1,postinc1
  4766   01004C  CFE3 FFE6          	movff	plusw1,postinc1
  4767   010050  EC59  F08A         	call	_DRV_CANFDSPI_ReadWordArray	;wreg free
  4768                           
  4769                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  4770   010054  0EFD               	movlw	-3
  4771   010056  C02D  FFE3         	movff	btemp,plusw1
  4772   01005A                     
  4773                           ;can/can.c: 722:     if (spiTransferError) {
  4774                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  4775   01005A  0EFD               	movlw	-3
  4776   01005C  50E3               	movf	plusw1,w,c
  4777   01005E  B4D8               	btfsc	status,2,c
  4778   010060  EF34  F080         	goto	u1581
  4779   010064  EF36  F080         	goto	u1580
  4780   010068                     u1581:
  4781   010068  EF3A  F080         	goto	l3816
  4782   01006C                     u1580:
  4783   01006C                     
  4784                           ;can/can.c: 723:         return -1;
  4785   01006C  0EFF               	movlw	255
  4786   01006E  6E2D               	movwf	btemp^0,c
  4787   010070  EFA1  F083         	goto	l264
  4788   010074                     l3816:
  4789                           
  4790                           ;can/can.c: 727:     ciFifoCon.word = fifoReg[0];
  4791                           ;stkvar	_fifoReg @ sp[(-114)+80]
  4792   010074  0EDE               	movlw	-34
  4793   010076  CFE3 F035          	movff	plusw1,btemp+8
  4794   01007A  0EDF               	movlw	-33
  4795   01007C  CFE3 F036          	movff	plusw1,btemp+9
  4796   010080  0EE0               	movlw	-32
  4797   010082  CFE3 F037          	movff	plusw1,btemp+10
  4798   010086  0EE1               	movlw	-31
  4799   010088  CFE3 F038          	movff	plusw1,btemp+11
  4800                           
  4801                           ;stkvar	_ciFifoCon @ sp[(-114)+92]
  4802   01008C  0EEA               	movlw	-22
  4803   01008E  C035  FFE3         	movff	btemp+8,plusw1
  4804   010092  0EEB               	movlw	-21
  4805   010094  C036  FFE3         	movff	btemp+9,plusw1
  4806   010098  0EEC               	movlw	-20
  4807   01009A  C037  FFE3         	movff	btemp+10,plusw1
  4808   01009E  0EED               	movlw	-19
  4809   0100A0  C038  FFE3         	movff	btemp+11,plusw1
  4810   0100A4                     
  4811                           ;can/can.c: 728:     if (!ciFifoCon.txBF.TxEnable) {
  4812                           ;stkvar	_ciFifoCon @ sp[(-114)+92]
  4813   0100A4  50E1               	movf	fsr1l,w,c
  4814   0100A6  0FEA               	addlw	-22
  4815   0100A8  6ED9               	movwf	fsr2l,c
  4816   0100AA  50E2               	movf	fsr1h,w,c
  4817   0100AC  6EDA               	movwf	fsr2h,c
  4818   0100AE  0EFF               	movlw	255
  4819   0100B0  22DA               	addwfc	fsr2h,f,c
  4820   0100B2  BEDF               	btfsc	indf2,7,c
  4821   0100B4  EF5E  F080         	goto	u1591
  4822   0100B8  EF60  F080         	goto	u1590
  4823   0100BC                     u1591:
  4824   0100BC  EF64  F080         	goto	l3824
  4825   0100C0                     u1590:
  4826   0100C0                     
  4827                           ;can/can.c: 729:         return -2;
  4828   0100C0  0EFE               	movlw	254
  4829   0100C2  6E2D               	movwf	btemp^0,c
  4830   0100C4  EFA1  F083         	goto	l264
  4831   0100C8                     l3824:
  4832                           
  4833                           ;can/can.c: 733:     dataBytesInObject = DRV_CANFDSPI_DlcToDataBytes((CAN_DLC) txObj->bF
      +                          .ctrl.DLC);
  4834                           ;stkvar	_txObj @ sp[(-114)+-3]
  4835   0100C8  0E8B               	movlw	-117
  4836   0100CA  CFE3 F037          	movff	plusw1,btemp+10
  4837   0100CE  0E8C               	movlw	-116
  4838   0100D0  CFE3 F038          	movff	plusw1,btemp+11
  4839   0100D4  0E06               	movlw	6
  4840   0100D6  2437               	addwf	(btemp+10)^0,w,c
  4841   0100D8  6ED9               	movwf	fsr2l,c
  4842   0100DA  0E00               	movlw	0
  4843   0100DC  2038               	addwfc	(btemp+11)^0,w,c
  4844   0100DE  6EDA               	movwf	fsr2h,c
  4845   0100E0  50DF               	movf	223,w,c
  4846   0100E2  0B0F               	andlw	15
  4847   0100E4  6EE6               	movwf	postinc1,c
  4848   0100E6  EC39  F090         	call	_DRV_CANFDSPI_DlcToDataBytes	;wreg free
  4849                           
  4850                           ;stkvar	_dataBytesInObject @ sp[(-114)+105]
  4851   0100EA  0EF7               	movlw	-9
  4852   0100EC  C02D  FFE3         	movff	btemp,plusw1
  4853   0100F0  0EF8               	movlw	-8
  4854   0100F2  C02E  FFE3         	movff	btemp+1,plusw1
  4855   0100F6  0EF9               	movlw	-7
  4856   0100F8  C02F  FFE3         	movff	btemp+2,plusw1
  4857   0100FC  0EFA               	movlw	-6
  4858   0100FE  C030  FFE3         	movff	btemp+3,plusw1
  4859   010102                     
  4860                           ;can/can.c: 734:     if (dataBytesInObject < txdNumBytes) {
  4861                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  4862                           ;stkvar	_dataBytesInObject @ sp[(-114)+105]
  4863   010102  50E1               	movf	fsr1l,w,c
  4864   010104  0FF7               	addlw	-9
  4865   010106  6ED9               	movwf	fsr2l,c
  4866   010108  50E2               	movf	fsr1h,w,c
  4867   01010A  6EDA               	movwf	fsr2h,c
  4868   01010C  0EFF               	movlw	255
  4869   01010E  22DA               	addwfc	fsr2h,f,c
  4870   010110  0E85               	movlw	-123
  4871   010112  50E3               	movf	plusw1,w,c
  4872   010114  5CDE               	subwf	postinc2,w,c
  4873   010116  0E86               	movlw	-122
  4874   010118  50E3               	movf	plusw1,w,c
  4875   01011A  58DE               	subwfb	postinc2,w,c
  4876   01011C  0E87               	movlw	-121
  4877   01011E  50E3               	movf	plusw1,w,c
  4878   010120  58DE               	subwfb	postinc2,w,c
  4879   010122  0E88               	movlw	-120
  4880   010124  50E3               	movf	plusw1,w,c
  4881   010126  58DE               	subwfb	postinc2,w,c
  4882   010128  B0D8               	btfsc	status,0,c
  4883   01012A  EF99  F080         	goto	u1601
  4884   01012E  EF9B  F080         	goto	u1600
  4885   010132                     u1601:
  4886   010132  EF9F  F080         	goto	l3832
  4887   010136                     u1600:
  4888   010136                     
  4889                           ;can/can.c: 735:         return -3;
  4890   010136  0EFD               	movlw	253
  4891   010138  6E2D               	movwf	btemp^0,c
  4892   01013A  EFA1  F083         	goto	l264
  4893   01013E                     l3832:
  4894                           
  4895                           ;can/can.c: 742:     ciFifoUa.word = fifoReg[2];
  4896                           ;stkvar	_fifoReg @ sp[(-114)+80]
  4897   01013E  0EE6               	movlw	230
  4898   010140  24E1               	addwf	fsr1l,w,c
  4899   010142  6ED9               	movwf	fsr2l,c
  4900   010144  0EFF               	movlw	255
  4901   010146  20E2               	addwfc	fsr1h,w,c
  4902   010148  6EDA               	movwf	fsr2h,c
  4903   01014A  CFDE F035          	movff	postinc2,btemp+8
  4904   01014E  CFDE F036          	movff	postinc2,btemp+9
  4905   010152  CFDE F037          	movff	postinc2,btemp+10
  4906   010156  CFDE F038          	movff	postinc2,btemp+11
  4907                           
  4908                           ;stkvar	_ciFifoUa @ sp[(-114)+101]
  4909   01015A  0EF3               	movlw	-13
  4910   01015C  C035  FFE3         	movff	btemp+8,plusw1
  4911   010160  0EF4               	movlw	-12
  4912   010162  C036  FFE3         	movff	btemp+9,plusw1
  4913   010166  0EF5               	movlw	-11
  4914   010168  C037  FFE3         	movff	btemp+10,plusw1
  4915   01016C  0EF6               	movlw	-10
  4916   01016E  C038  FFE3         	movff	btemp+11,plusw1
  4917   010172                     
  4918                           ;can/can.c: 746:     a = ciFifoUa.bF.UserAddress;
  4919                           ;stkvar	_ciFifoUa @ sp[(-114)+101]
  4920   010172  0EF3               	movlw	-13
  4921   010174  CFE3 F035          	movff	plusw1,btemp+8
  4922   010178  0EF4               	movlw	-12
  4923   01017A  CFE3 F036          	movff	plusw1,btemp+9
  4924   01017E  0EF5               	movlw	-11
  4925   010180  CFE3 F037          	movff	plusw1,btemp+10
  4926   010184  0EF6               	movlw	-10
  4927   010186  CFE3 F038          	movff	plusw1,btemp+11
  4928                           
  4929                           ;stkvar	_a @ sp[(-114)+97]
  4930   01018A  0EEF               	movlw	-17
  4931   01018C  C035  FFE3         	movff	btemp+8,plusw1
  4932   010190  0EF0               	movlw	-16
  4933   010192  C036  FFE3         	movff	btemp+9,plusw1
  4934   010196  0EF1               	movlw	-15
  4935   010198  C037  FFE3         	movff	btemp+10,plusw1
  4936   01019C  0EF2               	movlw	-14
  4937   01019E  C038  FFE3         	movff	btemp+11,plusw1
  4938   0101A2                     
  4939                           ;can/can.c: 748:     a += 0x400;
  4940                           ;stkvar	_a @ sp[(-114)+97]
  4941   0101A2  50E1               	movf	fsr1l,w,c
  4942   0101A4  0FEF               	addlw	-17
  4943   0101A6  6ED9               	movwf	fsr2l,c
  4944   0101A8  50E2               	movf	fsr1h,w,c
  4945   0101AA  6EDA               	movwf	fsr2h,c
  4946   0101AC  0EFF               	movlw	255
  4947   0101AE  22DA               	addwfc	fsr2h,f,c
  4948   0101B0  0E00               	movlw	0
  4949   0101B2  26DE               	addwf	postinc2,f,c
  4950   0101B4  0E04               	movlw	4
  4951   0101B6  22DE               	addwfc	postinc2,f,c
  4952   0101B8  0E00               	movlw	0
  4953   0101BA  22DE               	addwfc	postinc2,f,c
  4954   0101BC  0E00               	movlw	0
  4955   0101BE  22DE               	addwfc	postinc2,f,c
  4956   0101C0                     
  4957                           ;can/can.c: 750:     uint8_t txBuffer[76];;can/can.c: 764:     if(txObj->bF.ctrl.IDE == 
      +                          0)
  4958                           ;stkvar	_txObj @ sp[(-114)+-3]
  4959   0101C0  0E8B               	movlw	-117
  4960   0101C2  CFE3 F037          	movff	plusw1,btemp+10
  4961   0101C6  0E8C               	movlw	-116
  4962   0101C8  CFE3 F038          	movff	plusw1,btemp+11
  4963   0101CC  0E06               	movlw	6
  4964   0101CE  2437               	addwf	(btemp+10)^0,w,c
  4965   0101D0  6ED9               	movwf	fsr2l,c
  4966   0101D2  0E00               	movlw	0
  4967   0101D4  2038               	addwfc	(btemp+11)^0,w,c
  4968   0101D6  6EDA               	movwf	fsr2h,c
  4969   0101D8  B8DF               	btfsc	indf2,4,c
  4970   0101DA  EFF1  F080         	goto	u1611
  4971   0101DE  EFF3  F080         	goto	u1610
  4972   0101E2                     u1611:
  4973   0101E2  EF75  F081         	goto	l3848
  4974   0101E6                     u1610:
  4975   0101E6                     
  4976                           ;can/can.c: 765:     {;can/can.c: 766:       txBuffer[0] = (uint8_t)txObj->bF.id.ID;
  4977                           ;stkvar	_txObj @ sp[(-114)+-3]
  4978   0101E6  0E8B               	movlw	-117
  4979   0101E8  CFE3 FFD9          	movff	plusw1,fsr2l
  4980   0101EC  0E8C               	movlw	-116
  4981   0101EE  CFE3 FFDA          	movff	plusw1,fsr2h
  4982   0101F2  50DF               	movf	indf2,w,c
  4983   0101F4  6E38               	movwf	(btemp+11)^0,c
  4984                           
  4985                           ;stkvar	_txBuffer @ sp[(-114)+4]
  4986   0101F6  0E92               	movlw	-110
  4987   0101F8  C038  FFE3         	movff	btemp+11,plusw1
  4988   0101FC                     
  4989                           ;can/can.c: 767:       txBuffer[1] = (uint8_t)(txObj->bF.id.ID >> 8);
  4990                           ;stkvar	_txBuffer @ sp[(-114)+4]
  4991   0101FC  0E93               	movlw	147
  4992   0101FE  24E1               	addwf	fsr1l,w,c
  4993   010200  6ED9               	movwf	fsr2l,c
  4994   010202  0EFF               	movlw	255
  4995   010204  20E2               	addwfc	fsr1h,w,c
  4996   010206  6EDA               	movwf	fsr2h,c
  4997                           
  4998                           ;stkvar	_txObj @ sp[(-114)+-3]
  4999   010208  0E8B               	movlw	-117
  5000   01020A  CFE3 FFE9          	movff	plusw1,fsr0l
  5001   01020E  0E8C               	movlw	-116
  5002   010210  CFE3 FFEA          	movff	plusw1,fsr0h
  5003   010214  CFEE F035          	movff	postinc0,btemp+8
  5004   010218  CFEE F036          	movff	postinc0,btemp+9
  5005   01021C  CFEE F037          	movff	postinc0,btemp+10
  5006   010220  CFEE F038          	movff	postinc0,btemp+11
  5007   010224  C036  F035         	movff	btemp+9,btemp+8
  5008   010228  C037  F036         	movff	btemp+10,btemp+9
  5009   01022C  C038  F037         	movff	btemp+11,btemp+10
  5010   010230  6A38               	clrf	(btemp+11)^0,c
  5011   010232  5035               	movf	(btemp+8)^0,w,c
  5012   010234  6EDF               	movwf	indf2,c
  5013   010236                     
  5014                           ;can/can.c: 768:       txBuffer[2] = (uint8_t)(txObj->bF.id.ID >> 16);
  5015                           ;stkvar	_txBuffer @ sp[(-114)+4]
  5016   010236  0E94               	movlw	148
  5017   010238  24E1               	addwf	fsr1l,w,c
  5018   01023A  6ED9               	movwf	fsr2l,c
  5019   01023C  0EFF               	movlw	255
  5020   01023E  20E2               	addwfc	fsr1h,w,c
  5021   010240  6EDA               	movwf	fsr2h,c
  5022                           
  5023                           ;stkvar	_txObj @ sp[(-114)+-3]
  5024   010242  0E8B               	movlw	-117
  5025   010244  CFE3 FFE9          	movff	plusw1,fsr0l
  5026   010248  0E8C               	movlw	-116
  5027   01024A  CFE3 FFEA          	movff	plusw1,fsr0h
  5028   01024E  CFEE F035          	movff	postinc0,btemp+8
  5029   010252  CFEE F036          	movff	postinc0,btemp+9
  5030   010256  CFEE F037          	movff	postinc0,btemp+10
  5031   01025A  CFEE F038          	movff	postinc0,btemp+11
  5032   01025E  0E11               	movlw	17
  5033   010260  EF37  F081         	goto	u1620
  5034   010264                     u1625:
  5035   010264  90D8               	bcf	status,0,c
  5036   010266  3238               	rrcf	(btemp+11)^0,f,c
  5037   010268  3237               	rrcf	(btemp+10)^0,f,c
  5038   01026A  3236               	rrcf	(btemp+9)^0,f,c
  5039   01026C  3235               	rrcf	(btemp+8)^0,f,c
  5040   01026E                     u1620:
  5041   01026E  2EE8               	decfsz	wreg,f,c
  5042   010270  EF32  F081         	goto	u1625
  5043   010274  5035               	movf	(btemp+8)^0,w,c
  5044   010276  6EDF               	movwf	indf2,c
  5045   010278                     
  5046                           ;can/can.c: 769:       txBuffer[3] = (uint8_t)(txObj->bF.id.ID >> 24) | (uint8_t)(txObj-
      +                          >bF.id.SID11 << 5);
  5047                           ;stkvar	_txBuffer @ sp[(-114)+4]
  5048   010278  0E95               	movlw	149
  5049   01027A  24E1               	addwf	fsr1l,w,c
  5050   01027C  6ED9               	movwf	fsr2l,c
  5051   01027E  0EFF               	movlw	255
  5052   010280  20E2               	addwfc	fsr1h,w,c
  5053   010282  6EDA               	movwf	fsr2h,c
  5054                           
  5055                           ;stkvar	_txObj @ sp[(-114)+-3]
  5056   010284  0E8B               	movlw	-117
  5057   010286  CFE3 F037          	movff	plusw1,btemp+10
  5058   01028A  0E8C               	movlw	-116
  5059   01028C  CFE3 F038          	movff	plusw1,btemp+11
  5060   010290  0E04               	movlw	4
  5061   010292  2437               	addwf	(btemp+10)^0,w,c
  5062   010294  6EE9               	movwf	fsr0l,c
  5063   010296  0E00               	movlw	0
  5064   010298  2038               	addwfc	(btemp+11)^0,w,c
  5065   01029A  6EEA               	movwf	fsr0h,c
  5066   01029C  50EF               	movf	indf0,w,c
  5067   01029E  6E38               	movwf	(btemp+11)^0,c
  5068   0102A0  0E05               	movlw	5
  5069   0102A2  6E2D               	movwf	btemp^0,c
  5070   0102A4                     u1635:
  5071   0102A4  90D8               	bcf	status,0,c
  5072   0102A6  3638               	rlcf	(btemp+11)^0,f,c
  5073   0102A8  2E2D               	decfsz	btemp^0,f,c
  5074   0102AA  EF52  F081         	goto	u1635
  5075                           
  5076                           ;stkvar	_txObj @ sp[(-114)+-3]
  5077   0102AE  0E8B               	movlw	-117
  5078   0102B0  CFE3 FFE9          	movff	plusw1,fsr0l
  5079   0102B4  0E8C               	movlw	-116
  5080   0102B6  CFE3 FFEA          	movff	plusw1,fsr0h
  5081   0102BA  CFEE F031          	movff	postinc0,btemp+4
  5082   0102BE  CFEE F032          	movff	postinc0,btemp+5
  5083   0102C2  CFEE F033          	movff	postinc0,btemp+6
  5084   0102C6  CFEE F034          	movff	postinc0,btemp+7
  5085   0102CA  0E19               	movlw	25
  5086   0102CC  EF6D  F081         	goto	u1640
  5087   0102D0                     u1645:
  5088   0102D0  90D8               	bcf	status,0,c
  5089   0102D2  3234               	rrcf	(btemp+7)^0,f,c
  5090   0102D4  3233               	rrcf	(btemp+6)^0,f,c
  5091   0102D6  3232               	rrcf	(btemp+5)^0,f,c
  5092   0102D8  3231               	rrcf	(btemp+4)^0,f,c
  5093   0102DA                     u1640:
  5094   0102DA  2EE8               	decfsz	wreg,f,c
  5095   0102DC  EF68  F081         	goto	u1645
  5096   0102E0  5031               	movf	(btemp+4)^0,w,c
  5097   0102E2  1038               	iorwf	(btemp+11)^0,w,c
  5098   0102E4  6EDF               	movwf	indf2,c
  5099                           
  5100                           ;can/can.c: 770:     }
  5101   0102E6  EF24  F082         	goto	l3860
  5102   0102EA                     l3848:
  5103                           
  5104                           ;can/can.c: 772:     {;can/can.c: 773:       uint32_t temp32 = ((txObj->bF.id.ID & 0x000
      +                          3FFFF) << 11) |
  5105                           ;stkvar	_txObj @ sp[(-114)+-3]
  5106   0102EA  0E8B               	movlw	-117
  5107   0102EC  CFE3 FFD9          	movff	plusw1,fsr2l
  5108   0102F0  0E8C               	movlw	-116
  5109   0102F2  CFE3 FFDA          	movff	plusw1,fsr2h
  5110   0102F6  CFDE F035          	movff	postinc2,btemp+8
  5111   0102FA  CFDE F036          	movff	postinc2,btemp+9
  5112   0102FE  CFDE F037          	movff	postinc2,btemp+10
  5113   010302  CFDE F038          	movff	postinc2,btemp+11
  5114   010306  0E13               	movlw	19
  5115   010308  EF8B  F081         	goto	u1650
  5116   01030C                     u1655:
  5117   01030C  90D8               	bcf	status,0,c
  5118   01030E  3238               	rrcf	(btemp+11)^0,f,c
  5119   010310  3237               	rrcf	(btemp+10)^0,f,c
  5120   010312  3236               	rrcf	(btemp+9)^0,f,c
  5121   010314  3235               	rrcf	(btemp+8)^0,f,c
  5122   010316                     u1650:
  5123   010316  2EE8               	decfsz	wreg,f,c
  5124   010318  EF86  F081         	goto	u1655
  5125   01031C  0EFF               	movlw	255
  5126   01031E  1435               	andwf	(btemp+8)^0,w,c
  5127   010320  6E31               	movwf	(btemp+4)^0,c
  5128   010322  0E07               	movlw	7
  5129   010324  1436               	andwf	(btemp+9)^0,w,c
  5130   010326  6E32               	movwf	(btemp+5)^0,c
  5131   010328  0E00               	movlw	0
  5132   01032A  1437               	andwf	(btemp+10)^0,w,c
  5133   01032C  6E33               	movwf	(btemp+6)^0,c
  5134   01032E  0E00               	movlw	0
  5135   010330  1438               	andwf	(btemp+11)^0,w,c
  5136   010332  6E34               	movwf	(btemp+7)^0,c
  5137                           
  5138                           ;stkvar	_txObj @ sp[(-114)+-3]
  5139   010334  0E8B               	movlw	-117
  5140   010336  CFE3 FFD9          	movff	plusw1,fsr2l
  5141   01033A  0E8C               	movlw	-116
  5142   01033C  CFE3 FFDA          	movff	plusw1,fsr2h
  5143   010340  0EFF               	movlw	255
  5144   010342  14DE               	andwf	postinc2,w,c
  5145   010344  6E35               	movwf	(btemp+8)^0,c
  5146   010346  0EFF               	movlw	255
  5147   010348  14DE               	andwf	postinc2,w,c
  5148   01034A  6E36               	movwf	(btemp+9)^0,c
  5149   01034C  0E03               	movlw	3
  5150   01034E  14DE               	andwf	postinc2,w,c
  5151   010350  6E37               	movwf	(btemp+10)^0,c
  5152   010352  0E00               	movlw	0
  5153   010354  14DE               	andwf	postinc2,w,c
  5154   010356  6E38               	movwf	(btemp+11)^0,c
  5155   010358  0E0B               	movlw	11
  5156   01035A                     u1665:
  5157   01035A  90D8               	bcf	status,0,c
  5158   01035C  3635               	rlcf	(btemp+8)^0,f,c
  5159   01035E  3636               	rlcf	(btemp+9)^0,f,c
  5160   010360  3637               	rlcf	(btemp+10)^0,f,c
  5161   010362  3638               	rlcf	(btemp+11)^0,f,c
  5162   010364  2EE8               	decfsz	wreg,f,c
  5163   010366  EFAD  F081         	goto	u1665
  5164   01036A  5031               	movf	(btemp+4)^0,w,c
  5165   01036C  1035               	iorwf	(btemp+8)^0,w,c
  5166   01036E  6E2D               	movwf	btemp^0,c
  5167   010370  5032               	movf	(btemp+5)^0,w,c
  5168   010372  1036               	iorwf	(btemp+9)^0,w,c
  5169   010374  6E2E               	movwf	(btemp+1)^0,c
  5170   010376  5033               	movf	(btemp+6)^0,w,c
  5171   010378  1037               	iorwf	(btemp+10)^0,w,c
  5172   01037A  6E2F               	movwf	(btemp+2)^0,c
  5173   01037C  5034               	movf	(btemp+7)^0,w,c
  5174   01037E  1038               	iorwf	(btemp+11)^0,w,c
  5175   010380  6E30               	movwf	(btemp+3)^0,c
  5176                           
  5177                           ;stkvar	_temp32 @ sp[(-114)+0]
  5178   010382  0E8E               	movlw	-114
  5179   010384  C02D  FFE3         	movff	btemp,plusw1
  5180   010388  0E8F               	movlw	-113
  5181   01038A  C02E  FFE3         	movff	btemp+1,plusw1
  5182   01038E  0E90               	movlw	-112
  5183   010390  C02F  FFE3         	movff	btemp+2,plusw1
  5184   010394  0E91               	movlw	-111
  5185   010396  C030  FFE3         	movff	btemp+3,plusw1
  5186   01039A                     
  5187                           ;can/can.c: 775:       temp32 = temp32 & 0x1FFFFFFF;
  5188                           ;stkvar	_temp32 @ sp[(-114)+0]
  5189   01039A  50E1               	movf	fsr1l,w,c
  5190   01039C  0F8E               	addlw	-114
  5191   01039E  6ED9               	movwf	fsr2l,c
  5192   0103A0  50E2               	movf	fsr1h,w,c
  5193   0103A2  6EDA               	movwf	fsr2h,c
  5194   0103A4  0EFF               	movlw	255
  5195   0103A6  22DA               	addwfc	fsr2h,f,c
  5196   0103A8  0EFF               	movlw	255
  5197   0103AA  16DE               	andwf	postinc2,f,c
  5198   0103AC  0EFF               	movlw	255
  5199   0103AE  16DE               	andwf	postinc2,f,c
  5200   0103B0  0EFF               	movlw	255
  5201   0103B2  16DE               	andwf	postinc2,f,c
  5202   0103B4  0E1F               	movlw	31
  5203   0103B6  16DE               	andwf	postinc2,f,c
  5204   0103B8                     
  5205                           ;can/can.c: 776:       txBuffer[0] = (uint8_t)temp32;
  5206                           ;stkvar	_temp32 @ sp[(-114)+0]
  5207                           ;stkvar	_txBuffer @ sp[(-114)+4]
  5208   0103B8  0E8E               	movlw	-114
  5209   0103BA  CFE3 F02D          	movff	plusw1,btemp
  5210   0103BE  0E92               	movlw	-110
  5211   0103C0  C02D  FFE3         	movff	btemp,plusw1
  5212   0103C4                     
  5213                           ;can/can.c: 777:       txBuffer[1] = (uint8_t)(temp32 >> 8);
  5214                           ;stkvar	_temp32 @ sp[(-114)+0]
  5215   0103C4  0E8F               	movlw	143
  5216   0103C6  24E1               	addwf	fsr1l,w,c
  5217   0103C8  6ED9               	movwf	fsr2l,c
  5218   0103CA  0EFF               	movlw	255
  5219   0103CC  20E2               	addwfc	fsr1h,w,c
  5220   0103CE  6EDA               	movwf	fsr2h,c
  5221                           
  5222                           ;stkvar	_txBuffer @ sp[(-114)+4]
  5223   0103D0  0E93               	movlw	147
  5224   0103D2  24E1               	addwf	fsr1l,w,c
  5225   0103D4  6EE9               	movwf	fsr0l,c
  5226   0103D6  0EFF               	movlw	255
  5227   0103D8  20E2               	addwfc	fsr1h,w,c
  5228   0103DA  6EEA               	movwf	fsr0h,c
  5229   0103DC  CFDF FFEF          	movff	indf2,indf0
  5230   0103E0                     
  5231                           ;can/can.c: 778:       txBuffer[2] = (uint8_t)(temp32 >> 16);
  5232                           ;stkvar	_temp32 @ sp[(-114)+0]
  5233   0103E0  0E90               	movlw	144
  5234   0103E2  24E1               	addwf	fsr1l,w,c
  5235   0103E4  6ED9               	movwf	fsr2l,c
  5236   0103E6  0EFF               	movlw	255
  5237   0103E8  20E2               	addwfc	fsr1h,w,c
  5238   0103EA  6EDA               	movwf	fsr2h,c
  5239                           
  5240                           ;stkvar	_txBuffer @ sp[(-114)+4]
  5241   0103EC  0E94               	movlw	148
  5242   0103EE  24E1               	addwf	fsr1l,w,c
  5243   0103F0  6EE9               	movwf	fsr0l,c
  5244   0103F2  0EFF               	movlw	255
  5245   0103F4  20E2               	addwfc	fsr1h,w,c
  5246   0103F6  6EEA               	movwf	fsr0h,c
  5247   0103F8  CFDF FFEF          	movff	indf2,indf0
  5248   0103FC                     
  5249                           ;can/can.c: 779:       txBuffer[3] = (uint8_t)(temp32 >> 24) | (uint8_t)(txObj->bF.id.SI
      +                          D11 << 5);
  5250                           ;stkvar	_txBuffer @ sp[(-114)+4]
  5251   0103FC  0E95               	movlw	149
  5252   0103FE  24E1               	addwf	fsr1l,w,c
  5253   010400  6ED9               	movwf	fsr2l,c
  5254   010402  0EFF               	movlw	255
  5255   010404  20E2               	addwfc	fsr1h,w,c
  5256   010406  6EDA               	movwf	fsr2h,c
  5257                           
  5258                           ;stkvar	_temp32 @ sp[(-114)+0]
  5259   010408  0E91               	movlw	145
  5260   01040A  24E1               	addwf	fsr1l,w,c
  5261   01040C  6EE9               	movwf	fsr0l,c
  5262   01040E  0EFF               	movlw	255
  5263   010410  20E2               	addwfc	fsr1h,w,c
  5264   010412  6EEA               	movwf	fsr0h,c
  5265   010414  50EF               	movf	indf0,w,c
  5266   010416  6E38               	movwf	(btemp+11)^0,c
  5267                           
  5268                           ;stkvar	_txObj @ sp[(-114)+-3]
  5269   010418  0E8B               	movlw	-117
  5270   01041A  CFE3 F035          	movff	plusw1,btemp+8
  5271   01041E  0E8C               	movlw	-116
  5272   010420  CFE3 F036          	movff	plusw1,btemp+9
  5273   010424  0E04               	movlw	4
  5274   010426  2435               	addwf	(btemp+8)^0,w,c
  5275   010428  6EE9               	movwf	fsr0l,c
  5276   01042A  0E00               	movlw	0
  5277   01042C  2036               	addwfc	(btemp+9)^0,w,c
  5278   01042E  6EEA               	movwf	fsr0h,c
  5279   010430  50EF               	movf	indf0,w,c
  5280   010432  6E37               	movwf	(btemp+10)^0,c
  5281   010434  0E05               	movlw	5
  5282   010436  6E2D               	movwf	btemp^0,c
  5283   010438                     u1675:
  5284   010438  90D8               	bcf	status,0,c
  5285   01043A  3637               	rlcf	(btemp+10)^0,f,c
  5286   01043C  2E2D               	decfsz	btemp^0,f,c
  5287   01043E  EF1C  F082         	goto	u1675
  5288   010442  5037               	movf	(btemp+10)^0,w,c
  5289   010444  1038               	iorwf	(btemp+11)^0,w,c
  5290   010446  6EDF               	movwf	indf2,c
  5291   010448                     l3860:
  5292                           
  5293                           ;can/can.c: 781:     txBuffer[4] = txObj->byte[6];
  5294                           ;stkvar	_txObj @ sp[(-114)+-3]
  5295   010448  0E8B               	movlw	-117
  5296   01044A  CFE3 F037          	movff	plusw1,btemp+10
  5297   01044E  0E8C               	movlw	-116
  5298   010450  CFE3 F038          	movff	plusw1,btemp+11
  5299   010454  0E06               	movlw	6
  5300   010456  2437               	addwf	(btemp+10)^0,w,c
  5301   010458  6ED9               	movwf	fsr2l,c
  5302   01045A  0E00               	movlw	0
  5303   01045C  2038               	addwfc	(btemp+11)^0,w,c
  5304   01045E  6EDA               	movwf	fsr2h,c
  5305                           
  5306                           ;stkvar	_txBuffer @ sp[(-114)+4]
  5307   010460  0E96               	movlw	150
  5308   010462  24E1               	addwf	fsr1l,w,c
  5309   010464  6EE9               	movwf	fsr0l,c
  5310   010466  0EFF               	movlw	255
  5311   010468  20E2               	addwfc	fsr1h,w,c
  5312   01046A  6EEA               	movwf	fsr0h,c
  5313   01046C  CFDF FFEF          	movff	indf2,indf0
  5314   010470                     
  5315                           ;can/can.c: 782:     txBuffer[5] = txObj->bF.ctrl.ESI | (uint8_t)(txObj->bF.ctrl.SEQ << 
      +                          1);
  5316                           ;stkvar	_txBuffer @ sp[(-114)+4]
  5317   010470  0E97               	movlw	151
  5318   010472  24E1               	addwf	fsr1l,w,c
  5319   010474  6ED9               	movwf	fsr2l,c
  5320   010476  0EFF               	movlw	255
  5321   010478  20E2               	addwfc	fsr1h,w,c
  5322   01047A  6EDA               	movwf	fsr2h,c
  5323                           
  5324                           ;stkvar	_txObj @ sp[(-114)+-3]
  5325   01047C  0E8B               	movlw	-117
  5326   01047E  CFE3 F037          	movff	plusw1,btemp+10
  5327   010482  0E8C               	movlw	-116
  5328   010484  CFE3 F038          	movff	plusw1,btemp+11
  5329   010488  0E07               	movlw	7
  5330   01048A  2437               	addwf	(btemp+10)^0,w,c
  5331   01048C  6EE9               	movwf	fsr0l,c
  5332   01048E  0E00               	movlw	0
  5333   010490  2038               	addwfc	(btemp+11)^0,w,c
  5334   010492  6EEA               	movwf	fsr0h,c
  5335   010494  50EF               	movf	indf0,w,c
  5336   010496  6E38               	movwf	(btemp+11)^0,c
  5337                           
  5338                           ;stkvar	_txObj @ sp[(-114)+-3]
  5339   010498  0E8B               	movlw	-117
  5340   01049A  CFE3 F035          	movff	plusw1,btemp+8
  5341   01049E  0E8C               	movlw	-116
  5342   0104A0  CFE3 F036          	movff	plusw1,btemp+9
  5343   0104A4  0E08               	movlw	8
  5344   0104A6  2435               	addwf	(btemp+8)^0,w,c
  5345   0104A8  6EE9               	movwf	fsr0l,c
  5346   0104AA  0E00               	movlw	0
  5347   0104AC  2036               	addwfc	(btemp+9)^0,w,c
  5348   0104AE  6EEA               	movwf	fsr0h,c
  5349   0104B0  50EF               	movf	indf0,w,c
  5350   0104B2  6E37               	movwf	(btemp+10)^0,c
  5351   0104B4  90D8               	bcf	status,0,c
  5352   0104B6  3437               	rlcf	(btemp+10)^0,w,c
  5353   0104B8  1038               	iorwf	(btemp+11)^0,w,c
  5354   0104BA  6EDF               	movwf	indf2,c
  5355   0104BC                     
  5356                           ;can/can.c: 783:     txBuffer[6] = (uint8_t)(txObj->bF.ctrl.SEQ >> 7);
  5357                           ;stkvar	_txBuffer @ sp[(-114)+4]
  5358   0104BC  0E98               	movlw	152
  5359   0104BE  24E1               	addwf	fsr1l,w,c
  5360   0104C0  6ED9               	movwf	fsr2l,c
  5361   0104C2  0EFF               	movlw	255
  5362   0104C4  20E2               	addwfc	fsr1h,w,c
  5363   0104C6  6EDA               	movwf	fsr2h,c
  5364                           
  5365                           ;stkvar	_txObj @ sp[(-114)+-3]
  5366   0104C8  0E8B               	movlw	-117
  5367   0104CA  CFE3 F037          	movff	plusw1,btemp+10
  5368   0104CE  0E8C               	movlw	-116
  5369   0104D0  CFE3 F038          	movff	plusw1,btemp+11
  5370   0104D4  0E08               	movlw	8
  5371   0104D6  2437               	addwf	(btemp+10)^0,w,c
  5372   0104D8  6EE9               	movwf	fsr0l,c
  5373   0104DA  0E00               	movlw	0
  5374   0104DC  2038               	addwfc	(btemp+11)^0,w,c
  5375   0104DE  6EEA               	movwf	fsr0h,c
  5376   0104E0  CFEE F035          	movff	postinc0,btemp+8
  5377   0104E4  CFEE F036          	movff	postinc0,btemp+9
  5378   0104E8  CFEE F037          	movff	postinc0,btemp+10
  5379   0104EC  CFEE F038          	movff	postinc0,btemp+11
  5380   0104F0  0E08               	movlw	8
  5381   0104F2  EF80  F082         	goto	u1680
  5382   0104F6                     u1685:
  5383   0104F6  90D8               	bcf	status,0,c
  5384   0104F8  3238               	rrcf	(btemp+11)^0,f,c
  5385   0104FA  3237               	rrcf	(btemp+10)^0,f,c
  5386   0104FC  3236               	rrcf	(btemp+9)^0,f,c
  5387   0104FE  3235               	rrcf	(btemp+8)^0,f,c
  5388   010500                     u1680:
  5389   010500  2EE8               	decfsz	wreg,f,c
  5390   010502  EF7B  F082         	goto	u1685
  5391   010506  5035               	movf	(btemp+8)^0,w,c
  5392   010508  6EDF               	movwf	indf2,c
  5393   01050A                     
  5394                           ;can/can.c: 784:     txBuffer[7] = (uint8_t)(txObj->bF.ctrl.SEQ >> 15);
  5395                           ;stkvar	_txBuffer @ sp[(-114)+4]
  5396   01050A  0E99               	movlw	153
  5397   01050C  24E1               	addwf	fsr1l,w,c
  5398   01050E  6ED9               	movwf	fsr2l,c
  5399   010510  0EFF               	movlw	255
  5400   010512  20E2               	addwfc	fsr1h,w,c
  5401   010514  6EDA               	movwf	fsr2h,c
  5402                           
  5403                           ;stkvar	_txObj @ sp[(-114)+-3]
  5404   010516  0E8B               	movlw	-117
  5405   010518  CFE3 F037          	movff	plusw1,btemp+10
  5406   01051C  0E8C               	movlw	-116
  5407   01051E  CFE3 F038          	movff	plusw1,btemp+11
  5408   010522  0E08               	movlw	8
  5409   010524  2437               	addwf	(btemp+10)^0,w,c
  5410   010526  6EE9               	movwf	fsr0l,c
  5411   010528  0E00               	movlw	0
  5412   01052A  2038               	addwfc	(btemp+11)^0,w,c
  5413   01052C  6EEA               	movwf	fsr0h,c
  5414   01052E  CFEE F035          	movff	postinc0,btemp+8
  5415   010532  CFEE F036          	movff	postinc0,btemp+9
  5416   010536  CFEE F037          	movff	postinc0,btemp+10
  5417   01053A  CFEE F038          	movff	postinc0,btemp+11
  5418   01053E  0E10               	movlw	16
  5419   010540  EFA7  F082         	goto	u1690
  5420   010544                     u1695:
  5421   010544  90D8               	bcf	status,0,c
  5422   010546  3238               	rrcf	(btemp+11)^0,f,c
  5423   010548  3237               	rrcf	(btemp+10)^0,f,c
  5424   01054A  3236               	rrcf	(btemp+9)^0,f,c
  5425   01054C  3235               	rrcf	(btemp+8)^0,f,c
  5426   01054E                     u1690:
  5427   01054E  2EE8               	decfsz	wreg,f,c
  5428   010550  EFA2  F082         	goto	u1695
  5429   010554  5035               	movf	(btemp+8)^0,w,c
  5430   010556  6EDF               	movwf	indf2,c
  5431   010558                     
  5432                           ;can/can.c: 787:     uint8_t i;;can/can.c: 788:     for (i = 0; i < txdNumBytes; i++) {
  5433                           ;stkvar	_i @ sp[(-114)+112]
  5434   010558  0EFE               	movlw	-2
  5435   01055A  6AE3               	clrf	plusw1,c
  5436   01055C  EFD7  F082         	goto	l3874
  5437   010560                     l3870:
  5438                           
  5439                           ;can/can.c: 789:         txBuffer[i + 8] = txd[i];
  5440                           ;stkvar	_i @ sp[(-114)+112]
  5441   010560  0EFE               	movlw	-2
  5442   010562  CFE3 F038          	movff	plusw1,btemp+11
  5443                           
  5444                           ;stkvar	_txd @ sp[(-114)+-5]
  5445   010566  0E89               	movlw	-119
  5446   010568  CFE3 F035          	movff	plusw1,btemp+8
  5447   01056C  0E8A               	movlw	-118
  5448   01056E  CFE3 F036          	movff	plusw1,btemp+9
  5449   010572  5038               	movf	(btemp+11)^0,w,c
  5450   010574  2435               	addwf	(btemp+8)^0,w,c
  5451   010576  6ED9               	movwf	fsr2l,c
  5452   010578  0E00               	movlw	0
  5453   01057A  2036               	addwfc	(btemp+9)^0,w,c
  5454   01057C  6EDA               	movwf	fsr2h,c
  5455                           
  5456                           ;stkvar	_i @ sp[(-114)+112]
  5457   01057E  0EFE               	movlw	-2
  5458   010580  50E3               	movf	plusw1,w,c
  5459   010582  6E37               	movwf	(btemp+10)^0,c
  5460   010584  6A38               	clrf	(btemp+11)^0,c
  5461   010586  0E08               	movlw	8
  5462   010588  2637               	addwf	(btemp+10)^0,f,c
  5463   01058A  0E00               	movlw	0
  5464   01058C  2238               	addwfc	(btemp+11)^0,f,c
  5465                           
  5466                           ;stkvar	_txBuffer @ sp[(-114)+4]
  5467   01058E  0E92               	movlw	146
  5468   010590  24E1               	addwf	fsr1l,w,c
  5469   010592  6E35               	movwf	(btemp+8)^0,c
  5470   010594  0EFF               	movlw	255
  5471   010596  20E2               	addwfc	fsr1h,w,c
  5472   010598  6E36               	movwf	(btemp+9)^0,c
  5473   01059A  5037               	movf	(btemp+10)^0,w,c
  5474   01059C  2435               	addwf	(btemp+8)^0,w,c
  5475   01059E  6EE9               	movwf	fsr0l,c
  5476   0105A0  5038               	movf	(btemp+11)^0,w,c
  5477   0105A2  2036               	addwfc	(btemp+9)^0,w,c
  5478   0105A4  6EEA               	movwf	fsr0h,c
  5479   0105A6  CFDF FFEF          	movff	indf2,indf0
  5480   0105AA                     
  5481                           ;can/can.c: 790:     }
  5482                           ;stkvar	_i @ sp[(-114)+112]
  5483   0105AA  0EFE               	movlw	-2
  5484   0105AC  2AE3               	incf	plusw1,f,c
  5485   0105AE                     l3874:
  5486                           
  5487                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  5488                           ;stkvar	_i @ sp[(-114)+112]
  5489   0105AE  0EFE               	movlw	-2
  5490   0105B0  CFE3 F038          	movff	plusw1,btemp+11
  5491   0105B4  C038  F031         	movff	btemp+11,btemp+4
  5492   0105B8  6A32               	clrf	(btemp+5)^0,c
  5493   0105BA  6A33               	clrf	(btemp+6)^0,c
  5494   0105BC  6A34               	clrf	(btemp+7)^0,c
  5495   0105BE  0E85               	movlw	-123
  5496   0105C0  50E3               	movf	plusw1,w,c
  5497   0105C2  5C31               	subwf	(btemp+4)^0,w,c
  5498   0105C4  0E86               	movlw	-122
  5499   0105C6  50E3               	movf	plusw1,w,c
  5500   0105C8  5832               	subwfb	(btemp+5)^0,w,c
  5501   0105CA  0E87               	movlw	-121
  5502   0105CC  50E3               	movf	plusw1,w,c
  5503   0105CE  5833               	subwfb	(btemp+6)^0,w,c
  5504   0105D0  0E88               	movlw	-120
  5505   0105D2  50E3               	movf	plusw1,w,c
  5506   0105D4  5834               	subwfb	(btemp+7)^0,w,c
  5507   0105D6  A0D8               	btfss	status,0,c
  5508   0105D8  EFF0  F082         	goto	u1701
  5509   0105DC  EFF2  F082         	goto	u1700
  5510   0105E0                     u1701:
  5511   0105E0  EFB0  F082         	goto	l3870
  5512   0105E4                     u1700:
  5513   0105E4                     
  5514                           ;can/can.c: 793:     uint16_t n = 0;
  5515                           ;stkvar	_n @ sp[(-114)+109]
  5516   0105E4  0EFB               	movlw	-5
  5517   0105E6  6AE3               	clrf	plusw1,c
  5518   0105E8  0EFC               	movlw	-4
  5519   0105EA  6AE3               	clrf	plusw1,c
  5520   0105EC                     
  5521                           ;can/can.c: 796:     if (txdNumBytes % 4) {
  5522                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  5523   0105EC  0E85               	movlw	-123
  5524   0105EE  CFE3 F038          	movff	plusw1,btemp+11
  5525   0105F2  0E03               	movlw	3
  5526   0105F4  1638               	andwf	(btemp+11)^0,f,c
  5527   0105F6  B4D8               	btfsc	status,2,c
  5528   0105F8  EF00  F083         	goto	u1711
  5529   0105FC  EF02  F083         	goto	u1710
  5530   010600                     u1711:
  5531   010600  EF51  F083         	goto	l3894
  5532   010604                     u1710:
  5533   010604                     
  5534                           ;can/can.c: 798:         n = 4 - (txdNumBytes % 4);
  5535                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  5536   010604  0E85               	movlw	-123
  5537   010606  CFE3 F037          	movff	plusw1,btemp+10
  5538   01060A  0E86               	movlw	-122
  5539   01060C  CFE3 F038          	movff	plusw1,btemp+11
  5540   010610  0E03               	movlw	3
  5541   010612  1637               	andwf	(btemp+10)^0,f,c
  5542   010614  0E00               	movlw	0
  5543   010616  1638               	andwf	(btemp+11)^0,f,c
  5544   010618  5037               	movf	(btemp+10)^0,w,c
  5545   01061A  0804               	sublw	4
  5546   01061C  6E35               	movwf	(btemp+8)^0,c
  5547   01061E  5038               	movf	(btemp+11)^0,w,c
  5548   010620  A0D8               	btfss	status,0,c
  5549   010622  2AE8               	incf	wreg,f,c
  5550   010624  0800               	sublw	0
  5551   010626  6E36               	movwf	(btemp+9)^0,c
  5552                           
  5553                           ;stkvar	_n @ sp[(-114)+109]
  5554   010628  0EFB               	movlw	-5
  5555   01062A  C035  FFE3         	movff	btemp+8,plusw1
  5556   01062E  0EFC               	movlw	-4
  5557   010630  C036  FFE3         	movff	btemp+9,plusw1
  5558   010634                     
  5559                           ;can/can.c: 799:         i = (uint8_t)txdNumBytes + 8;
  5560   010634  0E08               	movlw	8
  5561   010636  6E38               	movwf	(btemp+11)^0,c
  5562                           
  5563                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  5564   010638  0E85               	movlw	-123
  5565   01063A  50E3               	movf	plusw1,w,c
  5566   01063C  2438               	addwf	(btemp+11)^0,w,c
  5567   01063E  6E37               	movwf	(btemp+10)^0,c
  5568                           
  5569                           ;stkvar	_i @ sp[(-114)+112]
  5570   010640  0EFE               	movlw	-2
  5571   010642  C037  FFE3         	movff	btemp+10,plusw1
  5572   010646                     
  5573                           ;can/can.c: 801:         for (j = 0; j < n; j++) {
  5574                           ;stkvar	_j @ sp[(-114)+113]
  5575   010646  0EFF               	movlw	-1
  5576   010648  6AE3               	clrf	plusw1,c
  5577   01064A  EF40  F083         	goto	l3892
  5578   01064E                     l3888:
  5579                           
  5580                           ;can/can.c: 802:             txBuffer[i + 8 + j] = 0;
  5581                           ;stkvar	_txBuffer @ sp[(-114)+4]
  5582   01064E  0E92               	movlw	146
  5583   010650  24E1               	addwf	fsr1l,w,c
  5584   010652  6E37               	movwf	(btemp+10)^0,c
  5585   010654  0EFF               	movlw	255
  5586   010656  20E2               	addwfc	fsr1h,w,c
  5587   010658  6E38               	movwf	(btemp+11)^0,c
  5588                           
  5589                           ;stkvar	_i @ sp[(-114)+112]
  5590   01065A  0EFE               	movlw	-2
  5591   01065C  50E3               	movf	plusw1,w,c
  5592   01065E  2637               	addwf	(btemp+10)^0,f,c
  5593   010660  0E00               	movlw	0
  5594   010662  2238               	addwfc	(btemp+11)^0,f,c
  5595                           
  5596                           ;stkvar	_j @ sp[(-114)+113]
  5597   010664  0EFF               	movlw	-1
  5598   010666  50E3               	movf	plusw1,w,c
  5599   010668  2637               	addwf	(btemp+10)^0,f,c
  5600   01066A  0E00               	movlw	0
  5601   01066C  2238               	addwfc	(btemp+11)^0,f,c
  5602   01066E  0E08               	movlw	8
  5603   010670  2437               	addwf	(btemp+10)^0,w,c
  5604   010672  6ED9               	movwf	fsr2l,c
  5605   010674  0E00               	movlw	0
  5606   010676  2038               	addwfc	(btemp+11)^0,w,c
  5607   010678  6EDA               	movwf	fsr2h,c
  5608   01067A  6ADF               	clrf	indf2,c
  5609   01067C                     
  5610                           ;can/can.c: 803:         }
  5611                           ;stkvar	_j @ sp[(-114)+113]
  5612   01067C  0EFF               	movlw	-1
  5613   01067E  2AE3               	incf	plusw1,f,c
  5614   010680                     l3892:
  5615                           
  5616                           ;stkvar	_n @ sp[(-114)+109]
  5617                           ;stkvar	_j @ sp[(-114)+113]
  5618   010680  0EFF               	movlw	-1
  5619   010682  50E3               	movf	plusw1,w,c
  5620   010684  6E37               	movwf	(btemp+10)^0,c
  5621   010686  6A38               	clrf	(btemp+11)^0,c
  5622   010688  0EFB               	movlw	-5
  5623   01068A  50E3               	movf	plusw1,w,c
  5624   01068C  5C37               	subwf	(btemp+10)^0,w,c
  5625   01068E  0EFC               	movlw	-4
  5626   010690  50E3               	movf	plusw1,w,c
  5627   010692  5838               	subwfb	(btemp+11)^0,w,c
  5628   010694  A0D8               	btfss	status,0,c
  5629   010696  EF4F  F083         	goto	u1721
  5630   01069A  EF51  F083         	goto	u1720
  5631   01069E                     u1721:
  5632   01069E  EF27  F083         	goto	l3888
  5633   0106A2                     u1720:
  5634   0106A2                     l3894:
  5635                           
  5636                           ;can/can.c: 806:     spiTransferError = DRV_CANFDSPI_WriteByteArray( (uint16_t)a, txBuff
      +                          er, (uint16_t)txdNumBytes + 8 + n);
  5637                           ;stkvar	_n @ sp[(-114)+109]
  5638                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  5639   0106A2  0E85               	movlw	-123
  5640   0106A4  CFE3 F037          	movff	plusw1,btemp+10
  5641   0106A8  0E86               	movlw	-122
  5642   0106AA  CFE3 F038          	movff	plusw1,btemp+11
  5643   0106AE  0EFB               	movlw	-5
  5644   0106B0  50E3               	movf	plusw1,w,c
  5645   0106B2  2637               	addwf	(btemp+10)^0,f,c
  5646   0106B4  0EFC               	movlw	-4
  5647   0106B6  50E3               	movf	plusw1,w,c
  5648   0106B8  2238               	addwfc	(btemp+11)^0,f,c
  5649   0106BA  0E08               	movlw	8
  5650   0106BC  2637               	addwf	(btemp+10)^0,f,c
  5651   0106BE  0E00               	movlw	0
  5652   0106C0  2238               	addwfc	(btemp+11)^0,f,c
  5653   0106C2  C037  FFE6         	movff	btemp+10,postinc1
  5654   0106C6  C038  FFE6         	movff	btemp+11,postinc1
  5655                           
  5656                           ;stkvar	_txBuffer @ sp[(-116)+4]
  5657   0106CA  0E90               	movlw	144
  5658   0106CC  24E1               	addwf	fsr1l,w,c
  5659   0106CE  6E2D               	movwf	btemp^0,c
  5660   0106D0  0EFF               	movlw	255
  5661   0106D2  20E2               	addwfc	fsr1h,w,c
  5662   0106D4  6E2E               	movwf	(btemp+1)^0,c
  5663   0106D6  C02D  FFE6         	movff	btemp,postinc1
  5664   0106DA  C02E  FFE6         	movff	btemp+1,postinc1
  5665                           
  5666                           ;stkvar	_a @ sp[(-118)+97]
  5667   0106DE  0EEB               	movlw	-21
  5668   0106E0  CFE3 FFE6          	movff	plusw1,postinc1
  5669   0106E4  CFE3 FFE6          	movff	plusw1,postinc1
  5670   0106E8  EC40  F097         	call	_DRV_CANFDSPI_WriteByteArray	;wreg free
  5671                           
  5672                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  5673   0106EC  0EFD               	movlw	-3
  5674   0106EE  C02D  FFE3         	movff	btemp,plusw1
  5675   0106F2                     
  5676                           ;can/can.c: 807:     if (spiTransferError) {
  5677                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  5678   0106F2  0EFD               	movlw	-3
  5679   0106F4  50E3               	movf	plusw1,w,c
  5680   0106F6  B4D8               	btfsc	status,2,c
  5681   0106F8  EF80  F083         	goto	u1731
  5682   0106FC  EF82  F083         	goto	u1730
  5683   010700                     u1731:
  5684   010700  EF86  F083         	goto	l3902
  5685   010704                     u1730:
  5686   010704                     
  5687                           ;can/can.c: 808:         return -4;
  5688   010704  0EFC               	movlw	252
  5689   010706  6E2D               	movwf	btemp^0,c
  5690   010708  EFA1  F083         	goto	l264
  5691   01070C                     l3902:
  5692                           
  5693                           ;can/can.c: 812:     spiTransferError = DRV_CANFDSPI_TransmitChannelUpdate( channel, flu
      +                          sh);
  5694                           ;stkvar	_flush @ sp[(-114)+-10]
  5695   01070C  0E84               	movlw	-124
  5696   01070E  50E3               	movf	plusw1,w,c
  5697   010710  6EE6               	movwf	postinc1,c
  5698                           
  5699                           ;stkvar	_channel @ sp[(-115)+-1]
  5700   010712  0E8C               	movlw	-116
  5701   010714  50E3               	movf	plusw1,w,c
  5702   010716  6EE6               	movwf	postinc1,c
  5703   010718  EC77  F09D         	call	_DRV_CANFDSPI_TransmitChannelUpdate	;wreg free
  5704                           
  5705                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  5706   01071C  0EFD               	movlw	-3
  5707   01071E  C02D  FFE3         	movff	btemp,plusw1
  5708   010722                     
  5709                           ;can/can.c: 813:     if (spiTransferError) {
  5710                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  5711   010722  0EFD               	movlw	-3
  5712   010724  50E3               	movf	plusw1,w,c
  5713   010726  B4D8               	btfsc	status,2,c
  5714   010728  EF98  F083         	goto	u1741
  5715   01072C  EF9A  F083         	goto	u1740
  5716   010730                     u1741:
  5717   010730  EF9E  F083         	goto	l3910
  5718   010734                     u1740:
  5719   010734                     
  5720                           ;can/can.c: 814:         return -5;
  5721   010734  0EFB               	movlw	251
  5722   010736  6E2D               	movwf	btemp^0,c
  5723   010738  EFA1  F083         	goto	l264
  5724   01073C                     l3910:
  5725                           
  5726                           ;can/can.c: 817:     return spiTransferError;
  5727                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  5728   01073C  0EFD               	movlw	-3
  5729   01073E  CFE3 F02D          	movff	plusw1,btemp
  5730   010742                     l264:
  5731                           
  5732                           ; _DRV_CANFDSPI_TransmitChannelLoad: autosize = 114, savesize = 0, parsavesize = 0, temp
      +                          size = 0 parsize = 10, argsize = 10, vargsize = 0
  5733   010742  0E84               	movlw	132
  5734   010744  26E1               	addwf	fsr1l,f,c
  5735   010746  0EFF               	movlw	255
  5736   010748  22E2               	addwfc	fsr1h,f,c
  5737   01074A  0012               	return		;funcret
  5738   01074C                     __end_of_DRV_CANFDSPI_TransmitChannelLoad:
  5739                           	callstack 0
  5740                           
  5741 ;; *************** function _DRV_CANFDSPI_WriteByteArray *****************
  5742 ;; Defined at:
  5743 ;;		line 383 in file "can/can.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  address         2  [STACK] unsigned short 
  5746 ;;  txd             2  [STACK] PTR unsigned char 
  5747 ;;		 -> txd(200), txBuffer(76), 
  5748 ;;  nBytes          2  [STACK] unsigned short 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;  i               2  [STACK] unsigned short 
  5751 ;;  spiTransferS    2  [STACK] unsigned short 
  5752 ;;  spiTransferE    1  [STACK] char 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1  [STACK] char 
  5755 ;; Registers used:
  5756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5766 ;;Total ram usage:        0 bytes
  5767 ;; Hardware stack levels used: 1
  5768 ;; Hardware stack levels required when called: 8
  5769 ;; This function calls:
  5770 ;;		_SpiTransfer
  5771 ;; This function is called by:
  5772 ;;		_DRV_CANFDSPI_TransmitChannelLoad
  5773 ;; This function uses a reentrant model
  5774 ;;
  5775                           
  5776                           	psect	text24
  5777   012E80                     __ptext24:
  5778                           	callstack 0
  5779   012E80                     _DRV_CANFDSPI_WriteByteArray:
  5780                           	callstack 0
  5781                           
  5782                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5783   012E80  0E05               	movlw	5
  5784   012E82  26E1               	addwf	fsr1l,f,c
  5785   012E84  0E00               	movlw	0
  5786   012E86  22E2               	addwfc	fsr1h,f,c
  5787   012E88                     
  5788                           ;can/can.c: 383: int8_t DRV_CANFDSPI_WriteByteArray( uint16_t address,;can/can.c: 384:  
      +                                 uint8_t *txd, uint16_t nBytes);can/can.c: 385: {;can/can.c: 386:     uint16_t i;;
      +                          can/can.c: 387:     uint16_t spiTransferSize = nBytes + 2;
  5789                           ;stkvar	_nBytes @ sp[(-5)+-6]
  5790   012E88  0EF5               	movlw	-11
  5791   012E8A  50E3               	movf	plusw1,w,c
  5792   012E8C  0F02               	addlw	2
  5793   012E8E  6E37               	movwf	(btemp+10)^0,c
  5794   012E90  0EF6               	movlw	-10
  5795   012E92  CFE3 F038          	movff	plusw1,btemp+11
  5796   012E96  0E00               	movlw	0
  5797   012E98  2238               	addwfc	(btemp+11)^0,f,c
  5798                           
  5799                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  5800   012E9A  0EFD               	movlw	-3
  5801   012E9C  C037  FFE3         	movff	btemp+10,plusw1
  5802   012EA0  0EFE               	movlw	-2
  5803   012EA2  C038  FFE3         	movff	btemp+11,plusw1
  5804   012EA6                     
  5805                           ;can/can.c: 391:     spiTransmitBuffer[0] = (uint8_t) ((0x02 << 4) + ((address >> 8) & 0
      +                          xF));
  5806                           ;stkvar	_address @ sp[(-5)+-2]
  5807   012EA6  0EFA               	movlw	250
  5808   012EA8  24E1               	addwf	fsr1l,w,c
  5809   012EAA  6ED9               	movwf	fsr2l,c
  5810   012EAC  0EFF               	movlw	255
  5811   012EAE  20E2               	addwfc	fsr1h,w,c
  5812   012EB0  6EDA               	movwf	fsr2h,c
  5813   012EB2  50DF               	movf	indf2,w,c
  5814   012EB4  0B0F               	andlw	15
  5815   012EB6  0F20               	addlw	32
  5816   012EB8  0101               	movlb	1	; () banked
  5817   012EBA  6F00               	movwf	_spiTransmitBuffer& (0+255),b
  5818   012EBC                     
  5819                           ; BSR set to: 1
  5820                           ;can/can.c: 392:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
  5821                           ;stkvar	_address @ sp[(-5)+-2]
  5822   012EBC  0EF9               	movlw	-7
  5823   012EBE  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
  5824   012EC2                     
  5825                           ; BSR set to: 1
  5826                           ;can/can.c: 395:     for (i = 2; i < spiTransferSize; i++) {
  5827   012EC2  0E02               	movlw	2
  5828   012EC4  6E37               	movwf	(btemp+10)^0,c
  5829   012EC6  0E00               	movlw	0
  5830   012EC8  6E38               	movwf	(btemp+11)^0,c
  5831                           
  5832                           ;stkvar	_i @ sp[(-5)+0]
  5833   012ECA  0EFB               	movlw	-5
  5834   012ECC  C037  FFE3         	movff	btemp+10,plusw1
  5835   012ED0  0EFC               	movlw	-4
  5836   012ED2  C038  FFE3         	movff	btemp+11,plusw1
  5837   012ED6  EF9C  F097         	goto	l3736
  5838   012EDA                     l3732:
  5839                           
  5840                           ;can/can.c: 396:         spiTransmitBuffer[i] = txd[i - 2];
  5841                           ;stkvar	_i @ sp[(-5)+0]
  5842                           ;stkvar	_txd @ sp[(-5)+-4]
  5843   012EDA  0EF7               	movlw	-9
  5844   012EDC  CFE3 F037          	movff	plusw1,btemp+10
  5845   012EE0  0EF8               	movlw	-8
  5846   012EE2  CFE3 F038          	movff	plusw1,btemp+11
  5847   012EE6  0EFB               	movlw	-5
  5848   012EE8  50E3               	movf	plusw1,w,c
  5849   012EEA  2637               	addwf	(btemp+10)^0,f,c
  5850   012EEC  0EFC               	movlw	-4
  5851   012EEE  50E3               	movf	plusw1,w,c
  5852   012EF0  2238               	addwfc	(btemp+11)^0,f,c
  5853   012EF2  0EFE               	movlw	254
  5854   012EF4  2437               	addwf	(btemp+10)^0,w,c
  5855   012EF6  6ED9               	movwf	fsr2l,c
  5856   012EF8  0EFF               	movlw	255
  5857   012EFA  2038               	addwfc	(btemp+11)^0,w,c
  5858   012EFC  6EDA               	movwf	fsr2h,c
  5859                           
  5860                           ;stkvar	_i @ sp[(-5)+0]
  5861   012EFE  0EFB               	movlw	-5
  5862   012F00  CFE3 F037          	movff	plusw1,btemp+10
  5863   012F04  0EFC               	movlw	-4
  5864   012F06  CFE3 F038          	movff	plusw1,btemp+11
  5865   012F0A  0E00               	movlw	low _spiTransmitBuffer
  5866   012F0C  2437               	addwf	(btemp+10)^0,w,c
  5867   012F0E  6EE9               	movwf	fsr0l,c
  5868   012F10  0E01               	movlw	high _spiTransmitBuffer
  5869   012F12  2038               	addwfc	(btemp+11)^0,w,c
  5870   012F14  6EEA               	movwf	fsr0h,c
  5871   012F16  CFDF FFEF          	movff	indf2,indf0
  5872   012F1A                     
  5873                           ;can/can.c: 397:     }
  5874                           ;stkvar	_i @ sp[(-5)+0]
  5875   012F1A  0EFB               	movlw	-5
  5876   012F1C  50E3               	movf	plusw1,w,c
  5877   012F1E  0F01               	addlw	1
  5878   012F20  6E2D               	movwf	btemp^0,c
  5879   012F22  0EFB               	movlw	-5
  5880   012F24  C02D  FFE3         	movff	btemp,plusw1
  5881   012F28  6A2D               	clrf	btemp^0,c
  5882   012F2A  0EFC               	movlw	-4
  5883   012F2C  50E3               	movf	plusw1,w,c
  5884   012F2E  202D               	addwfc	btemp^0,w,c
  5885   012F30  6E2D               	movwf	btemp^0,c
  5886   012F32  0EFC               	movlw	-4
  5887   012F34  C02D  FFE3         	movff	btemp,plusw1
  5888   012F38                     l3736:
  5889                           
  5890                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  5891   012F38  0EFD               	movlw	-3
  5892   012F3A  CFE3 F037          	movff	plusw1,btemp+10
  5893   012F3E  0EFE               	movlw	-2
  5894   012F40  CFE3 F038          	movff	plusw1,btemp+11
  5895                           
  5896                           ;stkvar	_i @ sp[(-5)+0]
  5897   012F44  0EFB               	movlw	-5
  5898   012F46  CFE3 F035          	movff	plusw1,btemp+8
  5899   012F4A  0EFC               	movlw	-4
  5900   012F4C  CFE3 F036          	movff	plusw1,btemp+9
  5901   012F50  5037               	movf	(btemp+10)^0,w,c
  5902   012F52  5C35               	subwf	(btemp+8)^0,w,c
  5903   012F54  5038               	movf	(btemp+11)^0,w,c
  5904   012F56  5836               	subwfb	(btemp+9)^0,w,c
  5905   012F58  A0D8               	btfss	status,0,c
  5906   012F5A  EFB1  F097         	goto	u1511
  5907   012F5E  EFB3  F097         	goto	u1510
  5908   012F62                     u1511:
  5909   012F62  EF6D  F097         	goto	l3732
  5910   012F66                     u1510:
  5911   012F66                     
  5912                           ;can/can.c: 399:     spiTransferError = SpiTransfer(spiTransmitBuffer, spiReceiveBuffer,
      +                           spiTransferSize);
  5913                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  5914   012F66  0EFD               	movlw	-3
  5915   012F68  CFE3 FFE6          	movff	plusw1,postinc1
  5916   012F6C  CFE3 FFE6          	movff	plusw1,postinc1
  5917   012F70  0E00               	movlw	low _spiReceiveBuffer
  5918   012F72  6EE6               	movwf	postinc1,c
  5919   012F74  0E02               	movlw	high _spiReceiveBuffer
  5920   012F76  6EE6               	movwf	postinc1,c
  5921   012F78  0E00               	movlw	low _spiTransmitBuffer
  5922   012F7A  6EE6               	movwf	postinc1,c
  5923   012F7C  0E01               	movlw	high _spiTransmitBuffer
  5924   012F7E  6EE6               	movwf	postinc1,c
  5925   012F80  ECAD  F09B         	call	_SpiTransfer	;wreg free
  5926                           
  5927                           ;stkvar	_spiTransferError @ sp[(-5)+4]
  5928   012F84  0EFF               	movlw	-1
  5929   012F86  C02D  FFE3         	movff	btemp,plusw1
  5930   012F8A                     
  5931                           ;can/can.c: 401:     return spiTransferError;
  5932                           ;stkvar	_spiTransferError @ sp[(-5)+4]
  5933   012F8A  0EFF               	movlw	-1
  5934   012F8C  CFE3 F02D          	movff	plusw1,btemp
  5935   012F90                     
  5936                           ; _DRV_CANFDSPI_WriteByteArray: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 6, argsize = 6, vargsize = 0
  5937   012F90  0EF5               	movlw	245
  5938   012F92  26E1               	addwf	fsr1l,f,c
  5939   012F94  0EFF               	movlw	255
  5940   012F96  22E2               	addwfc	fsr1h,f,c
  5941   012F98  0012               	return		;funcret
  5942   012F9A                     __end_of_DRV_CANFDSPI_WriteByteArray:
  5943                           	callstack 0
  5944                           
  5945 ;; *************** function _DRV_CANFDSPI_TransmitChannelUpdate *****************
  5946 ;; Defined at:
  5947 ;;		line 880 in file "can/can.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;  channel         1  [STACK] enum E5290
  5950 ;;  flush           1  [STACK] _Bool 
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
  5953 ;;  a               2  [STACK] unsigned short 
  5954 ;;  spiTransferE    1  [STACK] char 
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  1  [STACK] char 
  5957 ;; Registers used:
  5958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5968 ;;Total ram usage:        0 bytes
  5969 ;; Hardware stack levels used: 1
  5970 ;; Hardware stack levels required when called: 9
  5971 ;; This function calls:
  5972 ;;		_DRV_CANFDSPI_WriteByte
  5973 ;; This function is called by:
  5974 ;;		_DRV_CANFDSPI_TransmitChannelLoad
  5975 ;; This function uses a reentrant model
  5976 ;;
  5977                           
  5978                           	psect	text25
  5979   013AEE                     __ptext25:
  5980                           	callstack 0
  5981   013AEE                     _DRV_CANFDSPI_TransmitChannelUpdate:
  5982                           	callstack 0
  5983                           
  5984                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5985   013AEE  0E08               	movlw	8
  5986   013AF0  26E1               	addwf	fsr1l,f,c
  5987   013AF2  0E00               	movlw	0
  5988   013AF4  22E2               	addwfc	fsr1h,f,c
  5989   013AF6                     
  5990                           ;can/can.c: 888:     a = 0x050 + (channel * (3*4)) + 1;
  5991                           ;stkvar	_channel @ sp[(-8)+-1]
  5992   013AF6  0EF7               	movlw	-9
  5993   013AF8  50E3               	movf	plusw1,w,c
  5994   013AFA  0D0C               	mullw	12
  5995   013AFC  0E51               	movlw	81
  5996   013AFE  26F3               	addwf	243,f,c
  5997   013B00  0E00               	movlw	0
  5998   013B02  22F4               	addwfc	244,f,c
  5999                           
  6000                           ;stkvar	_a @ sp[(-8)+5]
  6001   013B04  0EFD               	movlw	-3
  6002   013B06  CFF3 FFE3          	movff	prodl,plusw1
  6003   013B0A  0EFE               	movlw	-2
  6004   013B0C  CFF4 FFE3          	movff	prodh,plusw1
  6005   013B10                     
  6006                           ;can/can.c: 889:     ciFifoCon.word = 0;
  6007                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  6008   013B10  0EF8               	movlw	-8
  6009   013B12  6AE3               	clrf	plusw1,c
  6010   013B14  0EF9               	movlw	-7
  6011   013B16  6AE3               	clrf	plusw1,c
  6012   013B18  0EFA               	movlw	-6
  6013   013B1A  6AE3               	clrf	plusw1,c
  6014   013B1C  0EFB               	movlw	-5
  6015   013B1E  6AE3               	clrf	plusw1,c
  6016   013B20                     
  6017                           ;can/can.c: 890:     ciFifoCon.txBF.UINC = 1;
  6018                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  6019   013B20  0EF9               	movlw	249
  6020   013B22  24E1               	addwf	fsr1l,w,c
  6021   013B24  6ED9               	movwf	fsr2l,c
  6022   013B26  0EFF               	movlw	255
  6023   013B28  20E2               	addwfc	fsr1h,w,c
  6024   013B2A  6EDA               	movwf	fsr2h,c
  6025   013B2C  80DF               	bsf	indf2,0,c
  6026   013B2E                     
  6027                           ;can/can.c: 893:     if (flush) {
  6028                           ;stkvar	_flush @ sp[(-8)+-2]
  6029   013B2E  0EF6               	movlw	-10
  6030   013B30  50E3               	movf	plusw1,w,c
  6031   013B32  B4D8               	btfsc	status,2,c
  6032   013B34  EF9E  F09D         	goto	u1491
  6033   013B38  EFA0  F09D         	goto	u1490
  6034   013B3C                     u1491:
  6035   013B3C  EFA7  F09D         	goto	l3692
  6036   013B40                     u1490:
  6037   013B40                     
  6038                           ;can/can.c: 894:         ciFifoCon.txBF.TxRequest = 1;
  6039                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  6040   013B40  0EF9               	movlw	249
  6041   013B42  24E1               	addwf	fsr1l,w,c
  6042   013B44  6ED9               	movwf	fsr2l,c
  6043   013B46  0EFF               	movlw	255
  6044   013B48  20E2               	addwfc	fsr1h,w,c
  6045   013B4A  6EDA               	movwf	fsr2h,c
  6046   013B4C  82DF               	bsf	indf2,1,c
  6047   013B4E                     l3692:
  6048                           
  6049                           ;can/can.c: 897:     spiTransferError = DRV_CANFDSPI_WriteByte( a, ciFifoCon.byte[1]);
  6050                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  6051   013B4E  0EF9               	movlw	249
  6052   013B50  24E1               	addwf	fsr1l,w,c
  6053   013B52  6ED9               	movwf	fsr2l,c
  6054   013B54  0EFF               	movlw	255
  6055   013B56  20E2               	addwfc	fsr1h,w,c
  6056   013B58  6EDA               	movwf	fsr2h,c
  6057   013B5A  50DF               	movf	indf2,w,c
  6058   013B5C  6EE6               	movwf	postinc1,c
  6059                           
  6060                           ;stkvar	_a @ sp[(-9)+5]
  6061   013B5E  0EFC               	movlw	-4
  6062   013B60  CFE3 FFE6          	movff	plusw1,postinc1
  6063   013B64  CFE3 FFE6          	movff	plusw1,postinc1
  6064   013B68  EC40  F0A1         	call	_DRV_CANFDSPI_WriteByte	;wreg free
  6065                           
  6066                           ;stkvar	_spiTransferError @ sp[(-8)+7]
  6067   013B6C  0EFF               	movlw	-1
  6068   013B6E  C02D  FFE3         	movff	btemp,plusw1
  6069   013B72                     
  6070                           ;can/can.c: 898:     if (spiTransferError) {
  6071                           ;stkvar	_spiTransferError @ sp[(-8)+7]
  6072   013B72  0EFF               	movlw	-1
  6073   013B74  50E3               	movf	plusw1,w,c
  6074   013B76  B4D8               	btfsc	status,2,c
  6075   013B78  EFC0  F09D         	goto	u1501
  6076   013B7C  EFC2  F09D         	goto	u1500
  6077   013B80                     u1501:
  6078   013B80  EFC6  F09D         	goto	l3700
  6079   013B84                     u1500:
  6080   013B84                     
  6081                           ;can/can.c: 899:         return -1;
  6082   013B84  0EFF               	movlw	255
  6083   013B86  6E2D               	movwf	btemp^0,c
  6084   013B88  EFC9  F09D         	goto	l293
  6085   013B8C                     l3700:
  6086                           
  6087                           ;can/can.c: 902:     return spiTransferError;
  6088                           ;stkvar	_spiTransferError @ sp[(-8)+7]
  6089   013B8C  0EFF               	movlw	-1
  6090   013B8E  CFE3 F02D          	movff	plusw1,btemp
  6091   013B92                     l293:
  6092                           
  6093                           ; _DRV_CANFDSPI_TransmitChannelUpdate: autosize = 8, savesize = 0, parsavesize = 0, temp
      +                          size = 0 parsize = 2, argsize = 2, vargsize = 0
  6094   013B92  0EF6               	movlw	246
  6095   013B94  26E1               	addwf	fsr1l,f,c
  6096   013B96  0EFF               	movlw	255
  6097   013B98  22E2               	addwfc	fsr1h,f,c
  6098   013B9A  0012               	return		;funcret
  6099   013B9C                     __end_of_DRV_CANFDSPI_TransmitChannelUpdate:
  6100                           	callstack 0
  6101                           
  6102 ;; *************** function _DRV_CANFDSPI_ReadWordArray *****************
  6103 ;; Defined at:
  6104 ;;		line 405 in file "can/can.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  address         2  [STACK] unsigned short 
  6107 ;;  rxd             2  [STACK] PTR unsigned long 
  6108 ;;		 -> w(12), fifoReg(12), fifoReg(12), fifoReg(8), 
  6109 ;;		 -> fifoReg(12), 
  6110 ;;  nWords          2  [STACK] unsigned short 
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;  w               4  [STACK] struct _REG_t
  6113 ;;  i               2  [STACK] unsigned short 
  6114 ;;  j               2  [STACK] unsigned short 
  6115 ;;  spiTransferS    2  [STACK] unsigned short 
  6116 ;;  n               2  [STACK] unsigned short 
  6117 ;;  spiTransferE    1  [STACK] char 
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  1  [STACK] char 
  6120 ;; Registers used:
  6121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6131 ;;Total ram usage:        0 bytes
  6132 ;; Hardware stack levels used: 1
  6133 ;; Hardware stack levels required when called: 8
  6134 ;; This function calls:
  6135 ;;		_SpiTransfer
  6136 ;; This function is called by:
  6137 ;;		_DRV_CANFDSPI_TransmitChannelLoad
  6138 ;;		_DRV_CANFDSPI_ReceiveMessageGet
  6139 ;; This function uses a reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text26
  6143   0114B2                     __ptext26:
  6144                           	callstack 0
  6145   0114B2                     _DRV_CANFDSPI_ReadWordArray:
  6146                           	callstack 0
  6147                           
  6148                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6149   0114B2  0E0D               	movlw	13
  6150   0114B4  26E1               	addwf	fsr1l,f,c
  6151   0114B6  0E00               	movlw	0
  6152   0114B8  22E2               	addwfc	fsr1h,f,c
  6153   0114BA                     
  6154                           ;can/can.c: 405: int8_t DRV_CANFDSPI_ReadWordArray( uint16_t address,;can/can.c: 406:   
      +                                uint32_t *rxd, uint16_t nWords);can/can.c: 407: {;can/can.c: 408:     uint16_t i, 
      +                          j, n;;can/can.c: 409:     REG_t w;;can/can.c: 410:     uint16_t spiTransferSize = nWords
      +                           * 4 + 2;
  6155                           ;stkvar	_nWords @ sp[(-13)+-6]
  6156   0114BA  0EED               	movlw	-19
  6157   0114BC  CFE3 F037          	movff	plusw1,btemp+10
  6158   0114C0  0EEE               	movlw	-18
  6159   0114C2  CFE3 F038          	movff	plusw1,btemp+11
  6160   0114C6  90D8               	bcf	status,0,c
  6161   0114C8  3637               	rlcf	(btemp+10)^0,f,c
  6162   0114CA  3638               	rlcf	(btemp+11)^0,f,c
  6163   0114CC  90D8               	bcf	status,0,c
  6164   0114CE  3637               	rlcf	(btemp+10)^0,f,c
  6165   0114D0  3638               	rlcf	(btemp+11)^0,f,c
  6166   0114D2  0E02               	movlw	2
  6167   0114D4  2637               	addwf	(btemp+10)^0,f,c
  6168   0114D6  0E00               	movlw	0
  6169   0114D8  2238               	addwfc	(btemp+11)^0,f,c
  6170                           
  6171                           ;stkvar	_spiTransferSize @ sp[(-13)+8]
  6172   0114DA  0EFB               	movlw	-5
  6173   0114DC  C037  FFE3         	movff	btemp+10,plusw1
  6174   0114E0  0EFC               	movlw	-4
  6175   0114E2  C038  FFE3         	movff	btemp+11,plusw1
  6176   0114E6                     
  6177                           ;can/can.c: 414:     spiTransmitBuffer[0] = (0x03 << 4) + ((address >> 8) & 0xF);
  6178                           ;stkvar	_address @ sp[(-13)+-2]
  6179   0114E6  0EF2               	movlw	242
  6180   0114E8  24E1               	addwf	fsr1l,w,c
  6181   0114EA  6ED9               	movwf	fsr2l,c
  6182   0114EC  0EFF               	movlw	255
  6183   0114EE  20E2               	addwfc	fsr1h,w,c
  6184   0114F0  6EDA               	movwf	fsr2h,c
  6185   0114F2  50DF               	movf	indf2,w,c
  6186   0114F4  0B0F               	andlw	15
  6187   0114F6  0F30               	addlw	48
  6188   0114F8  0101               	movlb	1	; () banked
  6189   0114FA  6F00               	movwf	_spiTransmitBuffer& (0+255),b
  6190   0114FC                     
  6191                           ; BSR set to: 1
  6192                           ;can/can.c: 415:     spiTransmitBuffer[1] = address & 0xFF;
  6193                           ;stkvar	_address @ sp[(-13)+-2]
  6194   0114FC  0EF1               	movlw	-15
  6195   0114FE  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
  6196   011502                     
  6197                           ; BSR set to: 1
  6198                           ;can/can.c: 418:     for (i = 2; i < spiTransferSize; i++) {
  6199   011502  0E02               	movlw	2
  6200   011504  6E37               	movwf	(btemp+10)^0,c
  6201   011506  0E00               	movlw	0
  6202   011508  6E38               	movwf	(btemp+11)^0,c
  6203                           
  6204                           ;stkvar	_i @ sp[(-13)+4]
  6205   01150A  0EF7               	movlw	-9
  6206   01150C  C037  FFE3         	movff	btemp+10,plusw1
  6207   011510  0EF8               	movlw	-8
  6208   011512  C038  FFE3         	movff	btemp+11,plusw1
  6209   011516  EFA9  F08A         	goto	l3758
  6210   01151A                     l3754:
  6211                           
  6212                           ;can/can.c: 419:         spiTransmitBuffer[i] = 0;
  6213                           ;stkvar	_i @ sp[(-13)+4]
  6214   01151A  0EF7               	movlw	-9
  6215   01151C  CFE3 F037          	movff	plusw1,btemp+10
  6216   011520  0EF8               	movlw	-8
  6217   011522  CFE3 F038          	movff	plusw1,btemp+11
  6218   011526  0E00               	movlw	low _spiTransmitBuffer
  6219   011528  2437               	addwf	(btemp+10)^0,w,c
  6220   01152A  6ED9               	movwf	fsr2l,c
  6221   01152C  0E01               	movlw	high _spiTransmitBuffer
  6222   01152E  2038               	addwfc	(btemp+11)^0,w,c
  6223   011530  6EDA               	movwf	fsr2h,c
  6224   011532  6ADF               	clrf	indf2,c
  6225   011534                     
  6226                           ;can/can.c: 420:     }
  6227                           ;stkvar	_i @ sp[(-13)+4]
  6228   011534  0EF7               	movlw	-9
  6229   011536  50E3               	movf	plusw1,w,c
  6230   011538  0F01               	addlw	1
  6231   01153A  6E2D               	movwf	btemp^0,c
  6232   01153C  0EF7               	movlw	-9
  6233   01153E  C02D  FFE3         	movff	btemp,plusw1
  6234   011542  6A2D               	clrf	btemp^0,c
  6235   011544  0EF8               	movlw	-8
  6236   011546  50E3               	movf	plusw1,w,c
  6237   011548  202D               	addwfc	btemp^0,w,c
  6238   01154A  6E2D               	movwf	btemp^0,c
  6239   01154C  0EF8               	movlw	-8
  6240   01154E  C02D  FFE3         	movff	btemp,plusw1
  6241   011552                     l3758:
  6242                           
  6243                           ;stkvar	_spiTransferSize @ sp[(-13)+8]
  6244   011552  0EFB               	movlw	-5
  6245   011554  CFE3 F037          	movff	plusw1,btemp+10
  6246   011558  0EFC               	movlw	-4
  6247   01155A  CFE3 F038          	movff	plusw1,btemp+11
  6248                           
  6249                           ;stkvar	_i @ sp[(-13)+4]
  6250   01155E  0EF7               	movlw	-9
  6251   011560  CFE3 F035          	movff	plusw1,btemp+8
  6252   011564  0EF8               	movlw	-8
  6253   011566  CFE3 F036          	movff	plusw1,btemp+9
  6254   01156A  5037               	movf	(btemp+10)^0,w,c
  6255   01156C  5C35               	subwf	(btemp+8)^0,w,c
  6256   01156E  5038               	movf	(btemp+11)^0,w,c
  6257   011570  5836               	subwfb	(btemp+9)^0,w,c
  6258   011572  A0D8               	btfss	status,0,c
  6259   011574  EFBE  F08A         	goto	u1521
  6260   011578  EFC0  F08A         	goto	u1520
  6261   01157C                     u1521:
  6262   01157C  EF8D  F08A         	goto	l3754
  6263   011580                     u1520:
  6264   011580                     
  6265                           ;can/can.c: 422:     spiTransferError = SpiTransfer( spiTransmitBuffer, spiReceiveBuffer
      +                          , spiTransferSize);
  6266                           ;stkvar	_spiTransferSize @ sp[(-13)+8]
  6267   011580  0EFB               	movlw	-5
  6268   011582  CFE3 FFE6          	movff	plusw1,postinc1
  6269   011586  CFE3 FFE6          	movff	plusw1,postinc1
  6270   01158A  0E00               	movlw	low _spiReceiveBuffer
  6271   01158C  6EE6               	movwf	postinc1,c
  6272   01158E  0E02               	movlw	high _spiReceiveBuffer
  6273   011590  6EE6               	movwf	postinc1,c
  6274   011592  0E00               	movlw	low _spiTransmitBuffer
  6275   011594  6EE6               	movwf	postinc1,c
  6276   011596  0E01               	movlw	high _spiTransmitBuffer
  6277   011598  6EE6               	movwf	postinc1,c
  6278   01159A  ECAD  F09B         	call	_SpiTransfer	;wreg free
  6279                           
  6280                           ;stkvar	_spiTransferError @ sp[(-13)+12]
  6281   01159E  0EFF               	movlw	-1
  6282   0115A0  C02D  FFE3         	movff	btemp,plusw1
  6283   0115A4                     
  6284                           ;can/can.c: 423:     if (spiTransferError) {
  6285                           ;stkvar	_spiTransferError @ sp[(-13)+12]
  6286   0115A4  0EFF               	movlw	-1
  6287   0115A6  50E3               	movf	plusw1,w,c
  6288   0115A8  B4D8               	btfsc	status,2,c
  6289   0115AA  EFD9  F08A         	goto	u1531
  6290   0115AE  EFDB  F08A         	goto	u1530
  6291   0115B2                     u1531:
  6292   0115B2  EFE0  F08A         	goto	l3768
  6293   0115B6                     u1530:
  6294   0115B6                     l3764:
  6295                           
  6296                           ;can/can.c: 424:         return spiTransferError;
  6297                           ;stkvar	_spiTransferError @ sp[(-13)+12]
  6298   0115B6  0EFF               	movlw	-1
  6299   0115B8  CFE3 F02D          	movff	plusw1,btemp
  6300   0115BC  EF98  F08B         	goto	l206
  6301   0115C0                     l3768:
  6302                           
  6303                           ;can/can.c: 428:     n = 2;
  6304   0115C0  0E02               	movlw	2
  6305   0115C2  6E37               	movwf	(btemp+10)^0,c
  6306   0115C4  0E00               	movlw	0
  6307   0115C6  6E38               	movwf	(btemp+11)^0,c
  6308                           
  6309                           ;stkvar	_n @ sp[(-13)+10]
  6310   0115C8  0EFD               	movlw	-3
  6311   0115CA  C037  FFE3         	movff	btemp+10,plusw1
  6312   0115CE  0EFE               	movlw	-2
  6313   0115D0  C038  FFE3         	movff	btemp+11,plusw1
  6314   0115D4                     
  6315                           ;can/can.c: 429:     for (i = 0; i < nWords; i++) {
  6316                           ;stkvar	_i @ sp[(-13)+4]
  6317   0115D4  0EF7               	movlw	-9
  6318   0115D6  6AE3               	clrf	plusw1,c
  6319   0115D8  0EF8               	movlw	-8
  6320   0115DA  6AE3               	clrf	plusw1,c
  6321   0115DC  EF7F  F08B         	goto	l3790
  6322   0115E0                     l3772:
  6323                           
  6324                           ;can/can.c: 430:         w.word = 0;
  6325                           ;stkvar	_w @ sp[(-13)+0]
  6326   0115E0  0EF3               	movlw	-13
  6327   0115E2  6AE3               	clrf	plusw1,c
  6328   0115E4  0EF4               	movlw	-12
  6329   0115E6  6AE3               	clrf	plusw1,c
  6330   0115E8  0EF5               	movlw	-11
  6331   0115EA  6AE3               	clrf	plusw1,c
  6332   0115EC  0EF6               	movlw	-10
  6333   0115EE  6AE3               	clrf	plusw1,c
  6334                           
  6335                           ;can/can.c: 431:         for (j = 0; j < 4; j++, n++) {
  6336                           ;stkvar	_j @ sp[(-13)+6]
  6337   0115F0  0EF9               	movlw	-7
  6338   0115F2  6AE3               	clrf	plusw1,c
  6339   0115F4  0EFA               	movlw	-6
  6340   0115F6  6AE3               	clrf	plusw1,c
  6341   0115F8                     l3778:
  6342                           
  6343                           ;can/can.c: 432:             w.byte[j] = spiReceiveBuffer[n];
  6344                           ;stkvar	_n @ sp[(-13)+10]
  6345   0115F8  0EFD               	movlw	-3
  6346   0115FA  CFE3 F037          	movff	plusw1,btemp+10
  6347   0115FE  0EFE               	movlw	-2
  6348   011600  CFE3 F038          	movff	plusw1,btemp+11
  6349   011604  0E00               	movlw	low _spiReceiveBuffer
  6350   011606  2437               	addwf	(btemp+10)^0,w,c
  6351   011608  6ED9               	movwf	fsr2l,c
  6352   01160A  0E02               	movlw	high _spiReceiveBuffer
  6353   01160C  2038               	addwfc	(btemp+11)^0,w,c
  6354   01160E  6EDA               	movwf	fsr2h,c
  6355                           
  6356                           ;stkvar	_j @ sp[(-13)+6]
  6357   011610  0EF9               	movlw	-7
  6358   011612  CFE3 F037          	movff	plusw1,btemp+10
  6359   011616  0EFA               	movlw	-6
  6360   011618  CFE3 F038          	movff	plusw1,btemp+11
  6361                           
  6362                           ;stkvar	_w @ sp[(-13)+0]
  6363   01161C  0EF3               	movlw	243
  6364   01161E  24E1               	addwf	fsr1l,w,c
  6365   011620  6E35               	movwf	(btemp+8)^0,c
  6366   011622  0EFF               	movlw	255
  6367   011624  20E2               	addwfc	fsr1h,w,c
  6368   011626  6E36               	movwf	(btemp+9)^0,c
  6369   011628  5037               	movf	(btemp+10)^0,w,c
  6370   01162A  2435               	addwf	(btemp+8)^0,w,c
  6371   01162C  6EE9               	movwf	fsr0l,c
  6372   01162E  5038               	movf	(btemp+11)^0,w,c
  6373   011630  2036               	addwfc	(btemp+9)^0,w,c
  6374   011632  6EEA               	movwf	fsr0h,c
  6375   011634  CFDF FFEF          	movff	indf2,indf0
  6376   011638                     
  6377                           ;can/can.c: 433:         }
  6378                           ;stkvar	_j @ sp[(-13)+6]
  6379   011638  0EF9               	movlw	-7
  6380   01163A  50E3               	movf	plusw1,w,c
  6381   01163C  0F01               	addlw	1
  6382   01163E  6E2D               	movwf	btemp^0,c
  6383   011640  0EF9               	movlw	-7
  6384   011642  C02D  FFE3         	movff	btemp,plusw1
  6385   011646  6A2D               	clrf	btemp^0,c
  6386   011648  0EFA               	movlw	-6
  6387   01164A  50E3               	movf	plusw1,w,c
  6388   01164C  202D               	addwfc	btemp^0,w,c
  6389   01164E  6E2D               	movwf	btemp^0,c
  6390   011650  0EFA               	movlw	-6
  6391   011652  C02D  FFE3         	movff	btemp,plusw1
  6392   011656                     
  6393                           ;stkvar	_n @ sp[(-13)+10]
  6394   011656  0EFD               	movlw	-3
  6395   011658  50E3               	movf	plusw1,w,c
  6396   01165A  0F01               	addlw	1
  6397   01165C  6E2D               	movwf	btemp^0,c
  6398   01165E  0EFD               	movlw	-3
  6399   011660  C02D  FFE3         	movff	btemp,plusw1
  6400   011664  6A2D               	clrf	btemp^0,c
  6401   011666  0EFE               	movlw	-2
  6402   011668  50E3               	movf	plusw1,w,c
  6403   01166A  202D               	addwfc	btemp^0,w,c
  6404   01166C  6E2D               	movwf	btemp^0,c
  6405   01166E  0EFE               	movlw	-2
  6406   011670  C02D  FFE3         	movff	btemp,plusw1
  6407   011674                     
  6408                           ;stkvar	_j @ sp[(-13)+6]
  6409   011674  0EFA               	movlw	-6
  6410   011676  50E3               	movf	plusw1,w,c
  6411   011678  E10C               	bnz	u1540
  6412   01167A  0EF9               	movlw	-7
  6413   01167C  CFE3 F02D          	movff	plusw1,btemp
  6414   011680  0E04               	movlw	4
  6415   011682  5E2D               	subwf	btemp^0,f,c
  6416   011684  A0D8               	btfss	status,0,c
  6417   011686  EF47  F08B         	goto	u1541
  6418   01168A  EF49  F08B         	goto	u1540
  6419   01168E                     u1541:
  6420   01168E  EFFC  F08A         	goto	l3778
  6421   011692                     u1540:
  6422   011692                     
  6423                           ;can/can.c: 434:         rxd[i] = w.word;
  6424                           ;stkvar	_w @ sp[(-13)+0]
  6425   011692  50E1               	movf	fsr1l,w,c
  6426   011694  0FF3               	addlw	-13
  6427   011696  6ED9               	movwf	fsr2l,c
  6428   011698  50E2               	movf	fsr1h,w,c
  6429   01169A  6EDA               	movwf	fsr2h,c
  6430   01169C  0EFF               	movlw	255
  6431   01169E  22DA               	addwfc	fsr2h,f,c
  6432                           
  6433                           ;stkvar	_i @ sp[(-13)+4]
  6434   0116A0  0EF7               	movlw	-9
  6435   0116A2  CFE3 F037          	movff	plusw1,btemp+10
  6436   0116A6  0EF8               	movlw	-8
  6437   0116A8  CFE3 F038          	movff	plusw1,btemp+11
  6438   0116AC  90D8               	bcf	status,0,c
  6439   0116AE  3637               	rlcf	(btemp+10)^0,f,c
  6440   0116B0  3638               	rlcf	(btemp+11)^0,f,c
  6441   0116B2  90D8               	bcf	status,0,c
  6442   0116B4  3637               	rlcf	(btemp+10)^0,f,c
  6443   0116B6  3638               	rlcf	(btemp+11)^0,f,c
  6444                           
  6445                           ;stkvar	_rxd @ sp[(-13)+-4]
  6446   0116B8  0EEF               	movlw	-17
  6447   0116BA  CFE3 F035          	movff	plusw1,btemp+8
  6448   0116BE  0EF0               	movlw	-16
  6449   0116C0  CFE3 F036          	movff	plusw1,btemp+9
  6450   0116C4  5037               	movf	(btemp+10)^0,w,c
  6451   0116C6  2435               	addwf	(btemp+8)^0,w,c
  6452   0116C8  6EE9               	movwf	fsr0l,c
  6453   0116CA  5038               	movf	(btemp+11)^0,w,c
  6454   0116CC  2036               	addwfc	(btemp+9)^0,w,c
  6455   0116CE  6EEA               	movwf	fsr0h,c
  6456   0116D0  CFDE FFEE          	movff	postinc2,postinc0
  6457   0116D4  CFDE FFEE          	movff	postinc2,postinc0
  6458   0116D8  CFDE FFEE          	movff	postinc2,postinc0
  6459   0116DC  CFDE FFEE          	movff	postinc2,postinc0
  6460   0116E0                     
  6461                           ;can/can.c: 435:     }
  6462                           ;stkvar	_i @ sp[(-13)+4]
  6463   0116E0  0EF7               	movlw	-9
  6464   0116E2  50E3               	movf	plusw1,w,c
  6465   0116E4  0F01               	addlw	1
  6466   0116E6  6E2D               	movwf	btemp^0,c
  6467   0116E8  0EF7               	movlw	-9
  6468   0116EA  C02D  FFE3         	movff	btemp,plusw1
  6469   0116EE  6A2D               	clrf	btemp^0,c
  6470   0116F0  0EF8               	movlw	-8
  6471   0116F2  50E3               	movf	plusw1,w,c
  6472   0116F4  202D               	addwfc	btemp^0,w,c
  6473   0116F6  6E2D               	movwf	btemp^0,c
  6474   0116F8  0EF8               	movlw	-8
  6475   0116FA  C02D  FFE3         	movff	btemp,plusw1
  6476   0116FE                     l3790:
  6477                           
  6478                           ;stkvar	_nWords @ sp[(-13)+-6]
  6479   0116FE  0EED               	movlw	-19
  6480   011700  CFE3 F037          	movff	plusw1,btemp+10
  6481   011704  0EEE               	movlw	-18
  6482   011706  CFE3 F038          	movff	plusw1,btemp+11
  6483                           
  6484                           ;stkvar	_i @ sp[(-13)+4]
  6485   01170A  0EF7               	movlw	-9
  6486   01170C  CFE3 F035          	movff	plusw1,btemp+8
  6487   011710  0EF8               	movlw	-8
  6488   011712  CFE3 F036          	movff	plusw1,btemp+9
  6489   011716  5037               	movf	(btemp+10)^0,w,c
  6490   011718  5C35               	subwf	(btemp+8)^0,w,c
  6491   01171A  5038               	movf	(btemp+11)^0,w,c
  6492   01171C  5836               	subwfb	(btemp+9)^0,w,c
  6493   01171E  A0D8               	btfss	status,0,c
  6494   011720  EF94  F08B         	goto	u1551
  6495   011724  EF96  F08B         	goto	u1550
  6496   011728                     u1551:
  6497   011728  EFF0  F08A         	goto	l3772
  6498   01172C                     u1550:
  6499   01172C  EFDB  F08A         	goto	l3764
  6500   011730                     l206:
  6501                           
  6502                           ; _DRV_CANFDSPI_ReadWordArray: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 6, argsize = 6, vargsize = 0
  6503   011730  0EED               	movlw	237
  6504   011732  26E1               	addwf	fsr1l,f,c
  6505   011734  0EFF               	movlw	255
  6506   011736  22E2               	addwfc	fsr1h,f,c
  6507   011738  0012               	return		;funcret
  6508   01173A                     __end_of_DRV_CANFDSPI_ReadWordArray:
  6509                           	callstack 0
  6510                           
  6511 ;; *************** function _DRV_CANFDSPI_DlcToDataBytes *****************
  6512 ;; Defined at:
  6513 ;;		line 3766 in file "can/can.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;  dlc             1  [STACK] enum E5464
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;  dataBytesInO    4  [STACK] unsigned long 
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  4  [STACK] unsigned long 
  6520 ;; Registers used:
  6521 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+
      +8, btemp+9, btemp+10, btemp+11
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6531 ;;Total ram usage:        0 bytes
  6532 ;; Hardware stack levels used: 1
  6533 ;; Hardware stack levels required when called: 7
  6534 ;; This function calls:
  6535 ;;		Nothing
  6536 ;; This function is called by:
  6537 ;;		_DRV_CANFDSPI_TransmitChannelLoad
  6538 ;; This function uses a reentrant model
  6539 ;;
  6540                           
  6541                           	psect	text27
  6542   012072                     __ptext27:
  6543                           	callstack 0
  6544   012072                     _DRV_CANFDSPI_DlcToDataBytes:
  6545                           	callstack 0
  6546                           
  6547                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6548   012072  52E6               	movf	postinc1,f,c
  6549   012074  52E6               	movf	postinc1,f,c
  6550   012076  52E6               	movf	postinc1,f,c
  6551   012078  52E6               	movf	postinc1,f,c
  6552   01207A                     
  6553                           ;can/can.c: 3766: uint32_t DRV_CANFDSPI_DlcToDataBytes(CAN_DLC dlc);can/can.c: 3767: {;c
      +                          an/can.c: 3768:     uint32_t dataBytesInObject = 0;
  6554                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
  6555   01207A  0EFC               	movlw	-4
  6556   01207C  6AE3               	clrf	plusw1,c
  6557   01207E  0EFD               	movlw	-3
  6558   012080  6AE3               	clrf	plusw1,c
  6559   012082  0EFE               	movlw	-2
  6560   012084  6AE3               	clrf	plusw1,c
  6561   012086  0EFF               	movlw	-1
  6562   012088  6AE3               	clrf	plusw1,c
  6563   01208A                     
  6564                           ;can/can.c: 3770:     __nop();
  6565   01208A  0000               	nop	
  6566   01208C                     
  6567                           ;can/can.c: 3771:     __nop();
  6568   01208C  0000               	nop	
  6569   01208E                     
  6570                           ;can/can.c: 3773:     if (dlc < CAN_DLC_12) {
  6571                           ;stkvar	_dlc @ sp[(-4)+-1]
  6572   01208E  0EFB               	movlw	-5
  6573   012090  CFE3 F02D          	movff	plusw1,btemp
  6574   012094  0E09               	movlw	9
  6575   012096  602D               	cpfslt	btemp^0,c
  6576   012098  EF50  F090         	goto	u101
  6577   01209C  EF52  F090         	goto	u100
  6578   0120A0                     u101:
  6579   0120A0  EFED  F090         	goto	l2322
  6580   0120A4                     u100:
  6581   0120A4                     
  6582                           ;can/can.c: 3774:         dataBytesInObject = dlc;
  6583                           ;stkvar	_dlc @ sp[(-4)+-1]
  6584   0120A4  0EFB               	movlw	-5
  6585   0120A6  CFE3 F038          	movff	plusw1,btemp+11
  6586   0120AA  C038  F031         	movff	btemp+11,btemp+4
  6587   0120AE  6A32               	clrf	(btemp+5)^0,c
  6588   0120B0  6A33               	clrf	(btemp+6)^0,c
  6589   0120B2  6A34               	clrf	(btemp+7)^0,c
  6590                           
  6591                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
  6592   0120B4  0EFC               	movlw	-4
  6593   0120B6  C031  FFE3         	movff	btemp+4,plusw1
  6594   0120BA  0EFD               	movlw	-3
  6595   0120BC  C032  FFE3         	movff	btemp+5,plusw1
  6596   0120C0  0EFE               	movlw	-2
  6597   0120C2  C033  FFE3         	movff	btemp+6,plusw1
  6598   0120C6  0EFF               	movlw	-1
  6599   0120C8  C034  FFE3         	movff	btemp+7,plusw1
  6600                           
  6601                           ;can/can.c: 3775:     } else {
  6602   0120CC  EF17  F091         	goto	l2324
  6603   0120D0                     l2306:
  6604                           
  6605                           ;can/can.c: 3778:                 dataBytesInObject = 12;
  6606   0120D0  0E0C               	movlw	12
  6607   0120D2  6E35               	movwf	(btemp+8)^0,c
  6608   0120D4  6A36               	clrf	(btemp+9)^0,c
  6609   0120D6  6A37               	clrf	(btemp+10)^0,c
  6610   0120D8  6A38               	clrf	(btemp+11)^0,c
  6611                           
  6612                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
  6613   0120DA  0EFC               	movlw	-4
  6614   0120DC  C035  FFE3         	movff	btemp+8,plusw1
  6615   0120E0  0EFD               	movlw	-3
  6616   0120E2  C036  FFE3         	movff	btemp+9,plusw1
  6617   0120E6  0EFE               	movlw	-2
  6618   0120E8  C037  FFE3         	movff	btemp+10,plusw1
  6619   0120EC  0EFF               	movlw	-1
  6620   0120EE  C038  FFE3         	movff	btemp+11,plusw1
  6621                           
  6622                           ;can/can.c: 3779:                 break;
  6623   0120F2  EF17  F091         	goto	l2324
  6624   0120F6                     l2308:
  6625                           
  6626                           ;can/can.c: 3781:                 dataBytesInObject = 16;
  6627   0120F6  0E10               	movlw	16
  6628   0120F8  6E35               	movwf	(btemp+8)^0,c
  6629   0120FA  6A36               	clrf	(btemp+9)^0,c
  6630   0120FC  6A37               	clrf	(btemp+10)^0,c
  6631   0120FE  6A38               	clrf	(btemp+11)^0,c
  6632                           
  6633                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
  6634   012100  0EFC               	movlw	-4
  6635   012102  C035  FFE3         	movff	btemp+8,plusw1
  6636   012106  0EFD               	movlw	-3
  6637   012108  C036  FFE3         	movff	btemp+9,plusw1
  6638   01210C  0EFE               	movlw	-2
  6639   01210E  C037  FFE3         	movff	btemp+10,plusw1
  6640   012112  0EFF               	movlw	-1
  6641   012114  C038  FFE3         	movff	btemp+11,plusw1
  6642                           
  6643                           ;can/can.c: 3782:                 break;
  6644   012118  EF17  F091         	goto	l2324
  6645   01211C                     l2310:
  6646                           
  6647                           ;can/can.c: 3784:                 dataBytesInObject = 20;
  6648   01211C  0E14               	movlw	20
  6649   01211E  6E35               	movwf	(btemp+8)^0,c
  6650   012120  6A36               	clrf	(btemp+9)^0,c
  6651   012122  6A37               	clrf	(btemp+10)^0,c
  6652   012124  6A38               	clrf	(btemp+11)^0,c
  6653                           
  6654                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
  6655   012126  0EFC               	movlw	-4
  6656   012128  C035  FFE3         	movff	btemp+8,plusw1
  6657   01212C  0EFD               	movlw	-3
  6658   01212E  C036  FFE3         	movff	btemp+9,plusw1
  6659   012132  0EFE               	movlw	-2
  6660   012134  C037  FFE3         	movff	btemp+10,plusw1
  6661   012138  0EFF               	movlw	-1
  6662   01213A  C038  FFE3         	movff	btemp+11,plusw1
  6663                           
  6664                           ;can/can.c: 3785:                 break;
  6665   01213E  EF17  F091         	goto	l2324
  6666   012142                     l2312:
  6667                           
  6668                           ;can/can.c: 3787:                 dataBytesInObject = 24;
  6669   012142  0E18               	movlw	24
  6670   012144  6E35               	movwf	(btemp+8)^0,c
  6671   012146  6A36               	clrf	(btemp+9)^0,c
  6672   012148  6A37               	clrf	(btemp+10)^0,c
  6673   01214A  6A38               	clrf	(btemp+11)^0,c
  6674                           
  6675                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
  6676   01214C  0EFC               	movlw	-4
  6677   01214E  C035  FFE3         	movff	btemp+8,plusw1
  6678   012152  0EFD               	movlw	-3
  6679   012154  C036  FFE3         	movff	btemp+9,plusw1
  6680   012158  0EFE               	movlw	-2
  6681   01215A  C037  FFE3         	movff	btemp+10,plusw1
  6682   01215E  0EFF               	movlw	-1
  6683   012160  C038  FFE3         	movff	btemp+11,plusw1
  6684                           
  6685                           ;can/can.c: 3788:                 break;
  6686   012164  EF17  F091         	goto	l2324
  6687   012168                     l2314:
  6688                           
  6689                           ;can/can.c: 3790:                 dataBytesInObject = 32;
  6690   012168  0E20               	movlw	32
  6691   01216A  6E35               	movwf	(btemp+8)^0,c
  6692   01216C  6A36               	clrf	(btemp+9)^0,c
  6693   01216E  6A37               	clrf	(btemp+10)^0,c
  6694   012170  6A38               	clrf	(btemp+11)^0,c
  6695                           
  6696                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
  6697   012172  0EFC               	movlw	-4
  6698   012174  C035  FFE3         	movff	btemp+8,plusw1
  6699   012178  0EFD               	movlw	-3
  6700   01217A  C036  FFE3         	movff	btemp+9,plusw1
  6701   01217E  0EFE               	movlw	-2
  6702   012180  C037  FFE3         	movff	btemp+10,plusw1
  6703   012184  0EFF               	movlw	-1
  6704   012186  C038  FFE3         	movff	btemp+11,plusw1
  6705                           
  6706                           ;can/can.c: 3791:                 break;
  6707   01218A  EF17  F091         	goto	l2324
  6708   01218E                     l2316:
  6709                           
  6710                           ;can/can.c: 3793:                 dataBytesInObject = 48;
  6711   01218E  0E30               	movlw	48
  6712   012190  6E35               	movwf	(btemp+8)^0,c
  6713   012192  6A36               	clrf	(btemp+9)^0,c
  6714   012194  6A37               	clrf	(btemp+10)^0,c
  6715   012196  6A38               	clrf	(btemp+11)^0,c
  6716                           
  6717                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
  6718   012198  0EFC               	movlw	-4
  6719   01219A  C035  FFE3         	movff	btemp+8,plusw1
  6720   01219E  0EFD               	movlw	-3
  6721   0121A0  C036  FFE3         	movff	btemp+9,plusw1
  6722   0121A4  0EFE               	movlw	-2
  6723   0121A6  C037  FFE3         	movff	btemp+10,plusw1
  6724   0121AA  0EFF               	movlw	-1
  6725   0121AC  C038  FFE3         	movff	btemp+11,plusw1
  6726                           
  6727                           ;can/can.c: 3794:                 break;
  6728   0121B0  EF17  F091         	goto	l2324
  6729   0121B4                     l2318:
  6730                           
  6731                           ;can/can.c: 3796:                 dataBytesInObject = 64;
  6732   0121B4  0E40               	movlw	64
  6733   0121B6  6E35               	movwf	(btemp+8)^0,c
  6734   0121B8  6A36               	clrf	(btemp+9)^0,c
  6735   0121BA  6A37               	clrf	(btemp+10)^0,c
  6736   0121BC  6A38               	clrf	(btemp+11)^0,c
  6737                           
  6738                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
  6739   0121BE  0EFC               	movlw	-4
  6740   0121C0  C035  FFE3         	movff	btemp+8,plusw1
  6741   0121C4  0EFD               	movlw	-3
  6742   0121C6  C036  FFE3         	movff	btemp+9,plusw1
  6743   0121CA  0EFE               	movlw	-2
  6744   0121CC  C037  FFE3         	movff	btemp+10,plusw1
  6745   0121D0  0EFF               	movlw	-1
  6746   0121D2  C038  FFE3         	movff	btemp+11,plusw1
  6747                           
  6748                           ;can/can.c: 3797:                 break;
  6749   0121D6  EF17  F091         	goto	l2324
  6750   0121DA                     l2322:
  6751                           
  6752                           ;stkvar	_dlc @ sp[(-4)+-1]
  6753   0121DA  0EFB               	movlw	-5
  6754   0121DC  50E3               	movf	plusw1,w,c
  6755   0121DE  6E37               	movwf	(btemp+10)^0,c
  6756   0121E0  6A38               	clrf	(btemp+11)^0,c
  6757                           
  6758                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6759                           ; Switch size 1, requested type "simple"
  6760                           ; Number of cases is 1, Range of values is 0 to 0
  6761                           ; switch strategies available:
  6762                           ; Name         Instructions Cycles
  6763                           ; simple_byte            4     3 (average)
  6764                           ;	Chosen strategy is simple_byte
  6765   0121E2  5038               	movf	(btemp+11)^0,w,c
  6766   0121E4  0A00               	xorlw	0	; case 0
  6767   0121E6  B4D8               	btfsc	status,2,c
  6768   0121E8  EFF8  F090         	goto	l5030
  6769   0121EC  EF17  F091         	goto	l2324
  6770   0121F0                     l5030:
  6771                           
  6772                           ; Switch size 1, requested type "simple"
  6773                           ; Number of cases is 7, Range of values is 9 to 15
  6774                           ; switch strategies available:
  6775                           ; Name         Instructions Cycles
  6776                           ; simple_byte           22    12 (average)
  6777                           ;	Chosen strategy is simple_byte
  6778   0121F0  5037               	movf	(btemp+10)^0,w,c
  6779   0121F2  0A09               	xorlw	9	; case 9
  6780   0121F4  B4D8               	btfsc	status,2,c
  6781   0121F6  EF68  F090         	goto	l2306
  6782   0121FA  0A03               	xorlw	3	; case 10
  6783   0121FC  B4D8               	btfsc	status,2,c
  6784   0121FE  EF7B  F090         	goto	l2308
  6785   012202  0A01               	xorlw	1	; case 11
  6786   012204  B4D8               	btfsc	status,2,c
  6787   012206  EF8E  F090         	goto	l2310
  6788   01220A  0A07               	xorlw	7	; case 12
  6789   01220C  B4D8               	btfsc	status,2,c
  6790   01220E  EFA1  F090         	goto	l2312
  6791   012212  0A01               	xorlw	1	; case 13
  6792   012214  B4D8               	btfsc	status,2,c
  6793   012216  EFB4  F090         	goto	l2314
  6794   01221A  0A03               	xorlw	3	; case 14
  6795   01221C  B4D8               	btfsc	status,2,c
  6796   01221E  EFC7  F090         	goto	l2316
  6797   012222  0A01               	xorlw	1	; case 15
  6798   012224  B4D8               	btfsc	status,2,c
  6799   012226  EFDA  F090         	goto	l2318
  6800   01222A  EF17  F091         	goto	l2324
  6801   01222E                     l2324:
  6802                           
  6803                           ;can/can.c: 3803:     return dataBytesInObject;
  6804                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
  6805   01222E  0EFC               	movlw	-4
  6806   012230  CFE3 F02D          	movff	plusw1,btemp
  6807   012234  0EFD               	movlw	-3
  6808   012236  CFE3 F02E          	movff	plusw1,btemp+1
  6809   01223A  0EFE               	movlw	-2
  6810   01223C  CFE3 F02F          	movff	plusw1,btemp+2
  6811   012240  0EFF               	movlw	-1
  6812   012242  CFE3 F030          	movff	plusw1,btemp+3
  6813   012246                     
  6814                           ; _DRV_CANFDSPI_DlcToDataBytes: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 1, argsize = 1, vargsize = 0
  6815   012246  0EFB               	movlw	251
  6816   012248  26E1               	addwf	fsr1l,f,c
  6817   01224A  0EFF               	movlw	255
  6818   01224C  22E2               	addwfc	fsr1h,f,c
  6819   01224E  0012               	return		;funcret
  6820   012250                     __end_of_DRV_CANFDSPI_DlcToDataBytes:
  6821                           	callstack 0
  6822                           
  6823 ;; *************** function _DRV_CANFDSPI_TransmitChannelEventGet *****************
  6824 ;; Defined at:
  6825 ;;		line 1776 in file "can/can.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;  channel         1  [STACK] enum E5290
  6828 ;;  flags           2  [STACK] PTR enum E5583
  6829 ;;		 -> txFlags(1), 
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;  ciFifoSta       4  [STACK] struct _REG_CiFIFOSTA
  6832 ;;  a               2  [STACK] unsigned short 
  6833 ;;  spiTransferE    1  [STACK] char 
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  1  [STACK] char 
  6836 ;; Registers used:
  6837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6847 ;;Total ram usage:        0 bytes
  6848 ;; Hardware stack levels used: 1
  6849 ;; Hardware stack levels required when called: 9
  6850 ;; This function calls:
  6851 ;;		_DRV_CANFDSPI_ReadByte
  6852 ;; This function is called by:
  6853 ;;		_CanSend
  6854 ;; This function uses a reentrant model
  6855 ;;
  6856                           
  6857                           	psect	text28
  6858   013CEA                     __ptext28:
  6859                           	callstack 0
  6860   013CEA                     _DRV_CANFDSPI_TransmitChannelEventGet:
  6861                           	callstack 0
  6862                           
  6863                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6864   013CEA  0E07               	movlw	7
  6865   013CEC  26E1               	addwf	fsr1l,f,c
  6866   013CEE  0E00               	movlw	0
  6867   013CF0  22E2               	addwfc	fsr1h,f,c
  6868   013CF2                     
  6869                           ;can/can.c: 1783:     REG_CiFIFOSTA ciFifoSta;;can/can.c: 1784:     ciFifoSta.word = 0;
  6870                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
  6871   013CF2  0EF9               	movlw	-7
  6872   013CF4  6AE3               	clrf	plusw1,c
  6873   013CF6  0EFA               	movlw	-6
  6874   013CF8  6AE3               	clrf	plusw1,c
  6875   013CFA  0EFB               	movlw	-5
  6876   013CFC  6AE3               	clrf	plusw1,c
  6877   013CFE  0EFC               	movlw	-4
  6878   013D00  6AE3               	clrf	plusw1,c
  6879   013D02                     
  6880                           ;can/can.c: 1785:     a = 0x054 + (channel * (3*4));
  6881                           ;stkvar	_channel @ sp[(-7)+-1]
  6882   013D02  0EF8               	movlw	-8
  6883   013D04  50E3               	movf	plusw1,w,c
  6884   013D06  0D0C               	mullw	12
  6885   013D08  0E54               	movlw	84
  6886   013D0A  26F3               	addwf	243,f,c
  6887   013D0C  0E00               	movlw	0
  6888   013D0E  22F4               	addwfc	244,f,c
  6889                           
  6890                           ;stkvar	_a @ sp[(-7)+4]
  6891   013D10  0EFD               	movlw	-3
  6892   013D12  CFF3 FFE3          	movff	prodl,plusw1
  6893   013D16  0EFE               	movlw	-2
  6894   013D18  CFF4 FFE3          	movff	prodh,plusw1
  6895   013D1C                     
  6896                           ;can/can.c: 1787:     spiTransferError = DRV_CANFDSPI_ReadByte( a, &ciFifoSta.byte[0]);
  6897                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
  6898   013D1C  0EF9               	movlw	249
  6899   013D1E  24E1               	addwf	fsr1l,w,c
  6900   013D20  6E2D               	movwf	btemp^0,c
  6901   013D22  0EFF               	movlw	255
  6902   013D24  20E2               	addwfc	fsr1h,w,c
  6903   013D26  6E2E               	movwf	(btemp+1)^0,c
  6904   013D28  C02D  FFE6         	movff	btemp,postinc1
  6905   013D2C  C02E  FFE6         	movff	btemp+1,postinc1
  6906                           
  6907                           ;stkvar	_a @ sp[(-9)+4]
  6908   013D30  0EFB               	movlw	-5
  6909   013D32  CFE3 FFE6          	movff	plusw1,postinc1
  6910   013D36  CFE3 FFE6          	movff	plusw1,postinc1
  6911   013D3A  ECB3  F0A0         	call	_DRV_CANFDSPI_ReadByte	;wreg free
  6912                           
  6913                           ;stkvar	_spiTransferError @ sp[(-7)+6]
  6914   013D3E  0EFF               	movlw	-1
  6915   013D40  C02D  FFE3         	movff	btemp,plusw1
  6916   013D44                     
  6917                           ;can/can.c: 1788:     if (spiTransferError) {
  6918                           ;stkvar	_spiTransferError @ sp[(-7)+6]
  6919   013D44  0EFF               	movlw	-1
  6920   013D46  50E3               	movf	plusw1,w,c
  6921   013D48  B4D8               	btfsc	status,2,c
  6922   013D4A  EFA9  F09E         	goto	u1751
  6923   013D4E  EFAB  F09E         	goto	u1750
  6924   013D52                     u1751:
  6925   013D52  EFAF  F09E         	goto	l3930
  6926   013D56                     u1750:
  6927   013D56                     
  6928                           ;can/can.c: 1789:         return -1;
  6929   013D56  0EFF               	movlw	255
  6930   013D58  6E2D               	movwf	btemp^0,c
  6931   013D5A  EFBC  F09E         	goto	l453
  6932   013D5E                     l3930:
  6933                           
  6934                           ;can/can.c: 1793:     *flags = (CAN_TX_FIFO_EVENT) (ciFifoSta.byte[0] & CAN_TX_FIFO_ALL_
      +                          EVENTS);
  6935                           ;stkvar	_flags @ sp[(-7)+-3]
  6936   013D5E  0EF6               	movlw	-10
  6937   013D60  CFE3 FFD9          	movff	plusw1,fsr2l
  6938   013D64  0EF7               	movlw	-9
  6939   013D66  CFE3 FFDA          	movff	plusw1,fsr2h
  6940                           
  6941                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
  6942   013D6A  0EF9               	movlw	-7
  6943   013D6C  50E3               	movf	plusw1,w,c
  6944   013D6E  0B17               	andlw	23
  6945   013D70  6EDF               	movwf	indf2,c
  6946   013D72                     
  6947                           ;can/can.c: 1795:     return spiTransferError;
  6948                           ;stkvar	_spiTransferError @ sp[(-7)+6]
  6949   013D72  0EFF               	movlw	-1
  6950   013D74  CFE3 F02D          	movff	plusw1,btemp
  6951   013D78                     l453:
  6952                           
  6953                           ; _DRV_CANFDSPI_TransmitChannelEventGet: autosize = 7, savesize = 0, parsavesize = 0, te
      +                          mpsize = 0 parsize = 3, argsize = 3, vargsize = 0
  6954   013D78  0EF6               	movlw	246
  6955   013D7A  26E1               	addwf	fsr1l,f,c
  6956   013D7C  0EFF               	movlw	255
  6957   013D7E  22E2               	addwfc	fsr1h,f,c
  6958   013D80  0012               	return		;funcret
  6959   013D82                     __end_of_DRV_CANFDSPI_TransmitChannelEventGet:
  6960                           	callstack 0
  6961                           
  6962 ;; *************** function _XF_popEvent *****************
  6963 ;; Defined at:
  6964 ;;		line 142 in file "xf/xf.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  inISR           1  [STACK] _Bool 
  6967 ;; Auto vars:     Size  Location     Type
  6968 ;;  ev              6  [STACK] struct Event_
  6969 ;; Return value:  Size  Location     Type
  6970 ;;                  6  [STACK] struct Event_
  6971 ;; Registers used:
  6972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  6973 ;; Tracked objects:
  6974 ;;		On entry : 0/0
  6975 ;;		On exit  : 0/0
  6976 ;;		Unchanged: 0/0
  6977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6982 ;;Total ram usage:        0 bytes
  6983 ;; Hardware stack levels used: 1
  6984 ;; Hardware stack levels required when called: 8
  6985 ;; This function calls:
  6986 ;;		_ENTERCRITICAL
  6987 ;;		_LEAVECRITICAL
  6988 ;;		___awmod
  6989 ;; This function is called by:
  6990 ;;		_XF_executeOnce
  6991 ;; This function uses a reentrant model
  6992 ;;
  6993                           
  6994                           	psect	text29
  6995   0135C4                     __ptext29:
  6996                           	callstack 0
  6997   0135C4                     _XF_popEvent:
  6998                           	callstack 0
  6999                           
  7000                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 6 argfudge = 5
  7001   0135C4  0E0B               	movlw	11
  7002   0135C6  26E1               	addwf	fsr1l,f,c
  7003   0135C8  0E00               	movlw	0
  7004   0135CA  22E2               	addwfc	fsr1h,f,c
  7005   0135CC                     
  7006                           ;xf/xf.c: 142: Event XF_popEvent(_Bool inISR);xf/xf.c: 143: {;xf/xf.c: 144:     Event ev
      +                          ;;xf/xf.c: 145:     ev.id = 0;
  7007                           ;stkvar	_ev @ sp[(-6)+0]
  7008   0135CC  0EFA               	movlw	-6
  7009   0135CE  6AE3               	clrf	plusw1,c
  7010   0135D0                     
  7011                           ;xf/xf.c: 146:     ev.processEvent = ((void*)0);
  7012                           ;stkvar	_ev @ sp[(-6)+0]
  7013   0135D0  0EFB               	movlw	251
  7014   0135D2  24E1               	addwf	fsr1l,w,c
  7015   0135D4  6ED9               	movwf	fsr2l,c
  7016   0135D6  0EFF               	movlw	255
  7017   0135D8  20E2               	addwfc	fsr1h,w,c
  7018   0135DA  6EDA               	movwf	fsr2h,c
  7019   0135DC  6ADE               	clrf	postinc2,c
  7020   0135DE  6ADE               	clrf	postinc2,c
  7021   0135E0  6ADD               	clrf	postdec2,c
  7022   0135E2                     
  7023                           ;xf/xf.c: 148:     ENTERCRITICAL(inISR);
  7024                           ;stkvar	_inISR @ sp[(-6)+-6]
  7025   0135E2  0EF4               	movlw	-12
  7026   0135E4  50E3               	movf	plusw1,w,c
  7027   0135E6  6EE6               	movwf	postinc1,c
  7028   0135E8  ECCD  F0A2         	call	_ENTERCRITICAL	;wreg free
  7029   0135EC                     
  7030                           ;xf/xf.c: 149:     if(theXF.countEvt == 0)
  7031   0135EC  EE23  F0DF         	lfsr	2,_theXF+279
  7032   0135F0  50DF               	movf	indf2,w,c
  7033   0135F2  A4D8               	btfss	status,2,c
  7034   0135F4  EFFE  F09A         	goto	u2611
  7035   0135F8  EF00  F09B         	goto	u2610
  7036   0135FC                     u2611:
  7037   0135FC  EF15  F09B         	goto	l4718
  7038   013600                     u2610:
  7039   013600                     l4712:
  7040                           
  7041                           ;xf/xf.c: 150:     {;xf/xf.c: 151:       LEAVECRITICAL(inISR);
  7042                           ;stkvar	_inISR @ sp[(-6)+-6]
  7043   013600  0EF4               	movlw	-12
  7044   013602  50E3               	movf	plusw1,w,c
  7045   013604  6EE6               	movwf	postinc1,c
  7046   013606  ECC1  F0A2         	call	_LEAVECRITICAL	;wreg free
  7047   01360A                     
  7048                           ;xf/xf.c: 152:       return ev;
  7049                           ;stkvar	_ev @ sp[(-6)+0]
  7050   01360A  0EFA               	movlw	250
  7051   01360C  24E1               	addwf	fsr1l,w,c
  7052   01360E  6ED9               	movwf	fsr2l,c
  7053   013610  0EFF               	movlw	255
  7054   013612  20E2               	addwfc	fsr1h,w,c
  7055   013614  6EDA               	movwf	fsr2h,c
  7056                           
  7057                           ;stkvar	?_XF_popEvent @ sp[(-6)+-6]
  7058   013616  0E06               	movlw	6
  7059   013618  6E2D               	movwf	btemp^0,c
  7060   01361A  0EF4               	movlw	-12
  7061   01361C                     us262999:
  7062   01361C  CFDE FFE3          	movff	postinc2,plusw1
  7063   013620  28E8               	incf	wreg,w,c
  7064   013622  2E2D               	decfsz	btemp^0,f,c
  7065   013624  D7FB               	bra	us262999
  7066   013626  EF43  F09B         	goto	l1227
  7067   01362A                     l4718:
  7068                           
  7069                           ;xf/xf.c: 154:     ev = theXF.eventQueue[theXF.out];
  7070   01362A  EE23  F0DD         	lfsr	2,_theXF+277
  7071   01362E  50DF               	movf	indf2,w,c
  7072   013630  0D06               	mullw	6
  7073   013632  0E28               	movlw	low (_theXF+96)
  7074   013634  24F3               	addwf	243,w,c
  7075   013636  6ED9               	movwf	fsr2l,c
  7076   013638  0E03               	movlw	high (_theXF+96)
  7077   01363A  20F4               	addwfc	prodh,w,c
  7078   01363C  6EDA               	movwf	fsr2h,c
  7079                           
  7080                           ;stkvar	_ev @ sp[(-6)+0]
  7081   01363E  0E06               	movlw	6
  7082   013640  6E2D               	movwf	btemp^0,c
  7083   013642  0EFA               	movlw	-6
  7084   013644                     us263999:
  7085   013644  CFDE FFE3          	movff	postinc2,plusw1
  7086   013648  28E8               	incf	wreg,w,c
  7087   01364A  2E2D               	decfsz	btemp^0,f,c
  7088   01364C  D7FB               	bra	us263999
  7089   01364E                     
  7090                           ;xf/xf.c: 155:     theXF.out = (theXF.out + 1)%(uint8_t)(30);
  7091   01364E  0E1E               	movlw	30
  7092   013650  6EE6               	movwf	postinc1,c
  7093   013652  0E00               	movlw	0
  7094   013654  6EE6               	movwf	postinc1,c
  7095   013656  EE23  F0DD         	lfsr	2,_theXF+277
  7096   01365A  50DF               	movf	indf2,w,c
  7097   01365C  6E37               	movwf	(btemp+10)^0,c
  7098   01365E  6A38               	clrf	(btemp+11)^0,c
  7099   013660  0E01               	movlw	1
  7100   013662  2637               	addwf	(btemp+10)^0,f,c
  7101   013664  0E00               	movlw	0
  7102   013666  2238               	addwfc	(btemp+11)^0,f,c
  7103   013668  C037  FFE6         	movff	btemp+10,postinc1
  7104   01366C  C038  FFE6         	movff	btemp+11,postinc1
  7105   013670  EC19  F094         	call	___awmod	;wreg free
  7106   013674  C02D  F3DD         	movff	btemp,_theXF+277
  7107   013678                     
  7108                           ;xf/xf.c: 156:     theXF.countEvt--;
  7109   013678  C3DF  FFE8         	movff	_theXF+279,wreg
  7110   01367C  0FFF               	addlw	-1
  7111   01367E  CFE8 F3DF          	movff	wreg,_theXF+279
  7112   013682  EF00  F09B         	goto	l4712
  7113   013686                     l1227:
  7114                           
  7115                           ; _XF_popEvent: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
  7116   013686  0EFA               	movlw	250
  7117   013688  26E1               	addwf	fsr1l,f,c
  7118   01368A  0EFF               	movlw	255
  7119   01368C  22E2               	addwfc	fsr1h,f,c
  7120   01368E  0012               	return		;funcret
  7121   013690                     __end_of_XF_popEvent:
  7122                           	callstack 0
  7123                           
  7124 ;; *************** function ___awmod *****************
  7125 ;; Defined at:
  7126 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;  dividend        2  [STACK] int 
  7129 ;;  divisor         2  [STACK] int 
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;  sign            1  [STACK] unsigned char 
  7132 ;;  counter         1  [STACK] unsigned char 
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  2  [STACK] int 
  7135 ;; Registers used:
  7136 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7146 ;;Total ram usage:        0 bytes
  7147 ;; Hardware stack levels used: 1
  7148 ;; Hardware stack levels required when called: 7
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_XF_pushEvent
  7153 ;;		_XF_popEvent
  7154 ;; This function uses a reentrant model
  7155 ;;
  7156                           
  7157                           	psect	text30
  7158   012832                     __ptext30:
  7159                           	callstack 0
  7160   012832                     ___awmod:
  7161                           	callstack 0
  7162                           
  7163                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7164   012832  52E6               	movf	postinc1,f,c
  7165   012834  52E6               	movf	postinc1,f,c
  7166   012836                     
  7167                           ;stkvar	_sign @ sp[(-2)+0]
  7168   012836  0EFE               	movlw	-2
  7169   012838  6AE3               	clrf	plusw1,c
  7170   01283A                     
  7171                           ;stkvar	_dividend @ sp[(-2)+-2]
  7172   01283A  0EFD               	movlw	-3
  7173   01283C  BEE3               	btfsc	plusw1,7,c
  7174   01283E  EF25  F094         	goto	u1800
  7175   012842  EF23  F094         	goto	u1801
  7176   012846                     u1801:
  7177   012846  EF2E  F094         	goto	l3990
  7178   01284A                     u1800:
  7179   01284A                     
  7180                           ;stkvar	_dividend @ sp[(-2)+-2]
  7181                           ;stkvar	_dividend @ sp[(-2)+-2]
  7182   01284A  0EFC               	movlw	-4
  7183   01284C  6CE3               	negf	plusw1,c
  7184   01284E  0EFD               	movlw	-3
  7185   012850  1EE3               	comf	plusw1,f,c
  7186   012852  B0D8               	btfsc	status,0,c
  7187   012854  2AE3               	incf	plusw1,f,c
  7188   012856                     
  7189                           ;stkvar	_sign @ sp[(-2)+0]
  7190   012856  0EFE               	movlw	-2
  7191   012858  6AE3               	clrf	plusw1,c
  7192   01285A  2AE3               	incf	plusw1,f,c
  7193   01285C                     l3990:
  7194                           
  7195                           ;stkvar	_divisor @ sp[(-2)+-4]
  7196   01285C  0EFB               	movlw	-5
  7197   01285E  BEE3               	btfsc	plusw1,7,c
  7198   012860  EF36  F094         	goto	u1810
  7199   012864  EF34  F094         	goto	u1811
  7200   012868                     u1811:
  7201   012868  EF3C  F094         	goto	l3994
  7202   01286C                     u1810:
  7203   01286C                     
  7204                           ;stkvar	_divisor @ sp[(-2)+-4]
  7205                           ;stkvar	_divisor @ sp[(-2)+-4]
  7206   01286C  0EFA               	movlw	-6
  7207   01286E  6CE3               	negf	plusw1,c
  7208   012870  0EFB               	movlw	-5
  7209   012872  1EE3               	comf	plusw1,f,c
  7210   012874  B0D8               	btfsc	status,0,c
  7211   012876  2AE3               	incf	plusw1,f,c
  7212   012878                     l3994:
  7213                           
  7214                           ;stkvar	_divisor @ sp[(-2)+-4]
  7215   012878  0EFA               	movlw	-6
  7216   01287A  CFE3 F02D          	movff	plusw1,btemp
  7217   01287E  0EFB               	movlw	-5
  7218   012880  50E3               	movf	plusw1,w,c
  7219   012882  102D               	iorwf	btemp^0,w,c
  7220   012884  B4D8               	btfsc	status,2,c
  7221   012886  EF47  F094         	goto	u1821
  7222   01288A  EF49  F094         	goto	u1820
  7223   01288E                     u1821:
  7224   01288E  EFA4  F094         	goto	l4012
  7225   012892                     u1820:
  7226   012892                     
  7227                           ;stkvar	_counter @ sp[(-2)+1]
  7228   012892  0EFF               	movlw	-1
  7229   012894  6AE3               	clrf	plusw1,c
  7230   012896  2AE3               	incf	plusw1,f,c
  7231   012898  EF5F  F094         	goto	l4002
  7232   01289C                     l3998:
  7233                           
  7234                           ;stkvar	_divisor @ sp[(-2)+-4]
  7235   01289C  0EFA               	movlw	-6
  7236   01289E  50E3               	movf	plusw1,w,c
  7237   0128A0  90D8               	bcf	status,0,c
  7238   0128A2  34E8               	rlcf	wreg,w,c
  7239   0128A4  6E2D               	movwf	btemp^0,c
  7240   0128A6  0EFA               	movlw	-6
  7241   0128A8  C02D  FFE3         	movff	btemp,plusw1
  7242   0128AC  0EFB               	movlw	-5
  7243   0128AE  50E3               	movf	plusw1,w,c
  7244   0128B0  34E8               	rlcf	wreg,w,c
  7245   0128B2  6E2D               	movwf	btemp^0,c
  7246   0128B4  0EFB               	movlw	-5
  7247   0128B6  C02D  FFE3         	movff	btemp,plusw1
  7248   0128BA                     
  7249                           ;stkvar	_counter @ sp[(-2)+1]
  7250   0128BA  0EFF               	movlw	-1
  7251   0128BC  2AE3               	incf	plusw1,f,c
  7252   0128BE                     l4002:
  7253                           
  7254                           ;stkvar	_divisor @ sp[(-2)+-4]
  7255   0128BE  0EFB               	movlw	-5
  7256   0128C0  AEE3               	btfss	plusw1,7,c
  7257   0128C2  EF65  F094         	goto	u1831
  7258   0128C6  EF67  F094         	goto	u1830
  7259   0128CA                     u1831:
  7260   0128CA  EF4E  F094         	goto	l3998
  7261   0128CE                     u1830:
  7262   0128CE                     l4004:
  7263                           
  7264                           ;stkvar	_divisor @ sp[(-2)+-4]
  7265   0128CE  0EFA               	movlw	-6
  7266   0128D0  CFE3 F037          	movff	plusw1,btemp+10
  7267   0128D4  0EFB               	movlw	-5
  7268   0128D6  CFE3 F038          	movff	plusw1,btemp+11
  7269                           
  7270                           ;stkvar	_dividend @ sp[(-2)+-2]
  7271   0128DA  0EFC               	movlw	-4
  7272   0128DC  CFE3 F035          	movff	plusw1,btemp+8
  7273   0128E0  0EFD               	movlw	-3
  7274   0128E2  CFE3 F036          	movff	plusw1,btemp+9
  7275   0128E6  5037               	movf	(btemp+10)^0,w,c
  7276   0128E8  5C35               	subwf	(btemp+8)^0,w,c
  7277   0128EA  5038               	movf	(btemp+11)^0,w,c
  7278   0128EC  5836               	subwfb	(btemp+9)^0,w,c
  7279   0128EE  A0D8               	btfss	status,0,c
  7280   0128F0  EF7C  F094         	goto	u1841
  7281   0128F4  EF7E  F094         	goto	u1840
  7282   0128F8                     u1841:
  7283   0128F8  EF90  F094         	goto	l4008
  7284   0128FC                     u1840:
  7285   0128FC                     
  7286                           ;stkvar	_divisor @ sp[(-2)+-4]
  7287                           ;stkvar	_dividend @ sp[(-2)+-2]
  7288   0128FC  0EFC               	movlw	-4
  7289   0128FE  50E3               	movf	plusw1,w,c
  7290   012900  6E2D               	movwf	btemp^0,c
  7291   012902  0EFA               	movlw	-6
  7292   012904  50E3               	movf	plusw1,w,c
  7293   012906  5E2D               	subwf	btemp^0,f,c
  7294   012908  0EFC               	movlw	-4
  7295   01290A  C02D  FFE3         	movff	btemp,plusw1
  7296   01290E  0EFD               	movlw	-3
  7297   012910  50E3               	movf	plusw1,w,c
  7298   012912  6E2D               	movwf	btemp^0,c
  7299   012914  0EFB               	movlw	-5
  7300   012916  50E3               	movf	plusw1,w,c
  7301   012918  5A2D               	subwfb	btemp^0,f,c
  7302   01291A  0EFD               	movlw	-3
  7303   01291C  C02D  FFE3         	movff	btemp,plusw1
  7304   012920                     l4008:
  7305                           
  7306                           ;stkvar	_divisor @ sp[(-2)+-4]
  7307   012920  90D8               	bcf	status,0,c
  7308   012922  0EFB               	movlw	-5
  7309   012924  32E3               	rrcf	plusw1,f,c
  7310   012926  0EFA               	movlw	-6
  7311   012928  32E3               	rrcf	plusw1,f,c
  7312   01292A                     
  7313                           ;stkvar	_counter @ sp[(-2)+1]
  7314   01292A  0EFF               	movlw	-1
  7315   01292C  50E3               	movf	plusw1,w,c
  7316   01292E  6E2D               	movwf	btemp^0,c
  7317   012930  0E01               	movlw	1
  7318   012932  5E2D               	subwf	btemp^0,f,c
  7319   012934  0EFF               	movlw	-1
  7320   012936  C02D  FFE3         	movff	btemp,plusw1
  7321   01293A  A4D8               	btfss	status,2,c
  7322   01293C  EFA2  F094         	goto	u1851
  7323   012940  EFA4  F094         	goto	u1850
  7324   012944                     u1851:
  7325   012944  EF67  F094         	goto	l4004
  7326   012948                     u1850:
  7327   012948                     l4012:
  7328                           
  7329                           ;stkvar	_sign @ sp[(-2)+0]
  7330   012948  0EFE               	movlw	-2
  7331   01294A  50E3               	movf	plusw1,w,c
  7332   01294C  B4D8               	btfsc	status,2,c
  7333   01294E  EFAB  F094         	goto	u1861
  7334   012952  EFAD  F094         	goto	u1860
  7335   012956                     u1861:
  7336   012956  EFB3  F094         	goto	l4016
  7337   01295A                     u1860:
  7338   01295A                     
  7339                           ;stkvar	_dividend @ sp[(-2)+-2]
  7340                           ;stkvar	_dividend @ sp[(-2)+-2]
  7341   01295A  0EFC               	movlw	-4
  7342   01295C  6CE3               	negf	plusw1,c
  7343   01295E  0EFD               	movlw	-3
  7344   012960  1EE3               	comf	plusw1,f,c
  7345   012962  B0D8               	btfsc	status,0,c
  7346   012964  2AE3               	incf	plusw1,f,c
  7347   012966                     l4016:
  7348                           
  7349                           ;stkvar	_dividend @ sp[(-2)+-2]
  7350   012966  0EFC               	movlw	-4
  7351   012968  CFE3 F02D          	movff	plusw1,btemp
  7352   01296C  0EFD               	movlw	-3
  7353   01296E  CFE3 F02E          	movff	plusw1,btemp+1
  7354   012972                     
  7355                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  7356   012972  0EFA               	movlw	250
  7357   012974  26E1               	addwf	fsr1l,f,c
  7358   012976  0EFF               	movlw	255
  7359   012978  22E2               	addwfc	fsr1h,f,c
  7360   01297A  0012               	return		;funcret
  7361   01297C                     __end_of___awmod:
  7362                           	callstack 0
  7363                           
  7364 ;; *************** function _LEAVECRITICAL *****************
  7365 ;; Defined at:
  7366 ;;		line 265 in file "xf/xf.c"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;  inISR           1  [STACK] _Bool 
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;		None
  7371 ;; Return value:  Size  Location     Type
  7372 ;;                  1  [STACK] void 
  7373 ;; Registers used:
  7374 ;;		wreg, fsr1l, fsr1h, status,2
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/0
  7377 ;;		On exit  : 0/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7384 ;;Total ram usage:        0 bytes
  7385 ;; Hardware stack levels used: 1
  7386 ;; Hardware stack levels required when called: 7
  7387 ;; This function calls:
  7388 ;;		Nothing
  7389 ;; This function is called by:
  7390 ;;		_XF_pushEvent
  7391 ;;		_XF_popEvent
  7392 ;;		_XF_scheduleTimer
  7393 ;;		_XF_unscheduleTimer
  7394 ;; This function uses a reentrant model
  7395 ;;
  7396                           
  7397                           	psect	text31
  7398   014582                     __ptext31:
  7399                           	callstack 0
  7400   014582                     _LEAVECRITICAL:
  7401                           	callstack 10
  7402   014582                     
  7403                           ;xf/xf.c: 265: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 266: {;xf/xf.c: 267:     
      +                          if (inISR == 0)
  7404                           ;stkvar	_inISR @ sp[(0)+-1]
  7405   014582  0EFF               	movlw	-1
  7406   014584  50E3               	movf	plusw1,w,c
  7407   014586  A4D8               	btfss	status,2,c
  7408   014588  EFC8  F0A2         	goto	u1571
  7409   01458C  EFCA  F0A2         	goto	u1570
  7410   014590                     u1571:
  7411   014590  EFCB  F0A2         	goto	l1254
  7412   014594                     u1570:
  7413   014594                     
  7414                           ;xf/xf.c: 268:     {;xf/xf.c: 270:      (INTCONbits.GIE = 1);
  7415   014594  8EF2               	bsf	242,7,c	;volatile
  7416   014596                     l1254:
  7417                           
  7418                           ; _LEAVECRITICAL: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  7419   014596  52E5               	movf	postdec1,f,c
  7420   014598  0012               	return		;funcret
  7421   01459A                     __end_of_LEAVECRITICAL:
  7422                           	callstack 0
  7423                           
  7424 ;; *************** function _ENTERCRITICAL *****************
  7425 ;; Defined at:
  7426 ;;		line 250 in file "xf/xf.c"
  7427 ;; Parameters:    Size  Location     Type
  7428 ;;  inISR           1  [STACK] _Bool 
  7429 ;; Auto vars:     Size  Location     Type
  7430 ;;		None
  7431 ;; Return value:  Size  Location     Type
  7432 ;;                  1  [STACK] void 
  7433 ;; Registers used:
  7434 ;;		wreg, fsr1l, fsr1h, status,2
  7435 ;; Tracked objects:
  7436 ;;		On entry : 0/0
  7437 ;;		On exit  : 0/0
  7438 ;;		Unchanged: 0/0
  7439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7444 ;;Total ram usage:        0 bytes
  7445 ;; Hardware stack levels used: 1
  7446 ;; Hardware stack levels required when called: 7
  7447 ;; This function calls:
  7448 ;;		Nothing
  7449 ;; This function is called by:
  7450 ;;		_XF_pushEvent
  7451 ;;		_XF_popEvent
  7452 ;;		_XF_scheduleTimer
  7453 ;;		_XF_unscheduleTimer
  7454 ;; This function uses a reentrant model
  7455 ;;
  7456                           
  7457                           	psect	text32
  7458   01459A                     __ptext32:
  7459                           	callstack 0
  7460   01459A                     _ENTERCRITICAL:
  7461                           	callstack 10
  7462   01459A                     
  7463                           ;xf/xf.c: 250: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 251: {;xf/xf.c: 252:     
      +                          if (inISR == 0)
  7464                           ;stkvar	_inISR @ sp[(0)+-1]
  7465   01459A  0EFF               	movlw	-1
  7466   01459C  50E3               	movf	plusw1,w,c
  7467   01459E  A4D8               	btfss	status,2,c
  7468   0145A0  EFD4  F0A2         	goto	u1561
  7469   0145A4  EFD6  F0A2         	goto	u1560
  7470   0145A8                     u1561:
  7471   0145A8  EFD7  F0A2         	goto	l1250
  7472   0145AC                     u1560:
  7473   0145AC                     
  7474                           ;xf/xf.c: 253:     {;xf/xf.c: 255:       (INTCONbits.GIE = 0);
  7475   0145AC  9EF2               	bcf	242,7,c	;volatile
  7476   0145AE                     l1250:
  7477                           
  7478                           ; _ENTERCRITICAL: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  7479   0145AE  52E5               	movf	postdec1,f,c
  7480   0145B0  0012               	return		;funcret
  7481   0145B2                     __end_of_ENTERCRITICAL:
  7482                           	callstack 0
  7483                           
  7484 ;; *************** function _SYSTEM_Initialize *****************
  7485 ;; Defined at:
  7486 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;		None
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;		None
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  1  [STACK] void 
  7493 ;; Registers used:
  7494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7504 ;;Total ram usage:        0 bytes
  7505 ;; Hardware stack levels used: 1
  7506 ;; Hardware stack levels required when called: 9
  7507 ;; This function calls:
  7508 ;;		_INTERRUPT_Initialize
  7509 ;;		_OSCILLATOR_Initialize
  7510 ;;		_PIN_MANAGER_Initialize
  7511 ;;		_SPI2_Initialize
  7512 ;;		_TMR0_Initialize
  7513 ;; This function is called by:
  7514 ;;		_main
  7515 ;; This function uses a reentrant model
  7516 ;;
  7517                           
  7518                           	psect	text33
  7519   0145B2                     __ptext33:
  7520                           	callstack 0
  7521   0145B2                     _SYSTEM_Initialize:
  7522                           	callstack 21
  7523   0145B2                     
  7524                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  7525   0145B2  ECF6  F0A2         	call	_INTERRUPT_Initialize	;wreg free
  7526   0145B6                     
  7527                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
  7528   0145B6  ECE4  F0A2         	call	_SPI2_Initialize	;wreg free
  7529                           
  7530                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  7531   0145BA  EC41  F0A2         	call	_PIN_MANAGER_Initialize	;wreg free
  7532                           
  7533                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  7534   0145BE  ECEC  F0A2         	call	_OSCILLATOR_Initialize	;wreg free
  7535   0145C2                     
  7536                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  7537   0145C2  ECD5  F0A1         	call	_TMR0_Initialize	;wreg free
  7538   0145C6                     
  7539                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7540   0145C6  0012               	return		;funcret
  7541   0145C8                     __end_of_SYSTEM_Initialize:
  7542                           	callstack 0
  7543                           
  7544 ;; *************** function _TMR0_Initialize *****************
  7545 ;; Defined at:
  7546 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;		None
  7549 ;; Auto vars:     Size  Location     Type
  7550 ;;		None
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  1  [STACK] void 
  7553 ;; Registers used:
  7554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7564 ;;Total ram usage:        0 bytes
  7565 ;; Hardware stack levels used: 1
  7566 ;; Hardware stack levels required when called: 8
  7567 ;; This function calls:
  7568 ;;		_TMR0_SetInterruptHandler
  7569 ;; This function is called by:
  7570 ;;		_SYSTEM_Initialize
  7571 ;; This function uses a reentrant model
  7572 ;;
  7573                           
  7574                           	psect	text34
  7575   0143AA                     __ptext34:
  7576                           	callstack 0
  7577   0143AA                     _TMR0_Initialize:
  7578                           	callstack 21
  7579   0143AA                     
  7580                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  7581   0143AA  9CD5               	bcf	213,6,c	;volatile
  7582   0143AC                     
  7583                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFD;
  7584   0143AC  0EFD               	movlw	253
  7585   0143AE  6ED7               	movwf	215,c	;volatile
  7586                           
  7587                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x9D;
  7588   0143B0  0E9D               	movlw	157
  7589   0143B2  6ED6               	movwf	214,c	;volatile
  7590   0143B4                     
  7591                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  7592   0143B4  50D6               	movf	214,w,c	;volatile
  7593   0143B6  CFD7 F02D          	movff	4055,btemp	;volatile
  7594   0143BA  6A2E               	clrf	(btemp+1)^0,c
  7595   0143BC  C02D  F02E         	movff	btemp,btemp+1
  7596   0143C0  6A2D               	clrf	btemp^0,c
  7597   0143C2  102D               	iorwf	btemp^0,w,c
  7598   0143C4  6E27               	movwf	_timer0ReloadVal^0,c	;volatile
  7599   0143C6  502E               	movf	(btemp+1)^0,w,c
  7600   0143C8  6E28               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  7601   0143CA                     
  7602                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  7603   0143CA  94F2               	bcf	242,2,c	;volatile
  7604   0143CC                     
  7605                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  7606   0143CC  8AF2               	bsf	242,5,c	;volatile
  7607   0143CE                     
  7608                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7609   0143CE  0EF0               	movlw	low _TMR0_DefaultInterruptHandler
  7610   0143D0  6EE6               	movwf	postinc1,c
  7611   0143D2  0E45               	movlw	high _TMR0_DefaultInterruptHandler
  7612   0143D4  6EE6               	movwf	postinc1,c
  7613   0143D6  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  7614   0143D8  6EE6               	movwf	postinc1,c
  7615   0143DA  EC95  F0A2         	call	_TMR0_SetInterruptHandler	;wreg free
  7616   0143DE                     
  7617                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x97;
  7618   0143DE  0E97               	movlw	151
  7619   0143E0  6ED5               	movwf	213,c	;volatile
  7620   0143E2                     
  7621                           ; _TMR0_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7622   0143E2  0012               	return		;funcret
  7623   0143E4                     __end_of_TMR0_Initialize:
  7624                           	callstack 0
  7625                           
  7626 ;; *************** function _TMR0_SetInterruptHandler *****************
  7627 ;; Defined at:
  7628 ;;		line 172 in file "mcc_generated_files/tmr0.c"
  7629 ;; Parameters:    Size  Location     Type
  7630 ;;  InterruptHan    3  [STACK] PTR FTN()void 
  7631 ;;		 -> XF_decrementAndQueueTimers(1), TMR0_DefaultInterruptHandler(1), 
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;		None
  7634 ;; Return value:  Size  Location     Type
  7635 ;;                  1  [STACK] void 
  7636 ;; Registers used:
  7637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  7638 ;; Tracked objects:
  7639 ;;		On entry : 0/0
  7640 ;;		On exit  : 0/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7647 ;;Total ram usage:        0 bytes
  7648 ;; Hardware stack levels used: 1
  7649 ;; Hardware stack levels required when called: 7
  7650 ;; This function calls:
  7651 ;;		Nothing
  7652 ;; This function is called by:
  7653 ;;		_TMR0_Initialize
  7654 ;;		_main
  7655 ;; This function uses a reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text35
  7659   01452A                     __ptext35:
  7660                           	callstack 0
  7661   01452A                     _TMR0_SetInterruptHandler:
  7662                           	callstack 23
  7663   01452A                     
  7664                           ;mcc_generated_files/tmr0.c: 173:     TMR0_InterruptHandler = InterruptHandler;
  7665                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
  7666   01452A  50E1               	movf	fsr1l,w,c
  7667   01452C  0FFD               	addlw	-3
  7668   01452E  6ED9               	movwf	fsr2l,c
  7669   014530  50E2               	movf	fsr1h,w,c
  7670   014532  6EDA               	movwf	fsr2h,c
  7671   014534  0EFF               	movlw	255
  7672   014536  22DA               	addwfc	fsr2h,f,c
  7673   014538  CFDE F05D          	movff	postinc2,_TMR0_InterruptHandler
  7674   01453C  CFDE F05E          	movff	postinc2,_TMR0_InterruptHandler+1
  7675   014540  CFDD F05F          	movff	postdec2,_TMR0_InterruptHandler+2
  7676   014544                     
  7677                           ; _TMR0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
  7678   014544  52E5               	movf	postdec1,f,c
  7679   014546  52E5               	movf	postdec1,f,c
  7680   014548  52E5               	movf	postdec1,f,c
  7681   01454A  0012               	return		;funcret
  7682   01454C                     __end_of_TMR0_SetInterruptHandler:
  7683                           	callstack 0
  7684                           
  7685 ;; *************** function _SPI2_Initialize *****************
  7686 ;; Defined at:
  7687 ;;		line 62 in file "mcc_generated_files/spi2.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;		None
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  1  [STACK] void 
  7694 ;; Registers used:
  7695 ;;		wreg, status,2
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;Total ram usage:        0 bytes
  7706 ;; Hardware stack levels used: 1
  7707 ;; Hardware stack levels required when called: 7
  7708 ;; This function calls:
  7709 ;;		Nothing
  7710 ;; This function is called by:
  7711 ;;		_SYSTEM_Initialize
  7712 ;; This function uses a reentrant model
  7713 ;;
  7714                           
  7715                           	psect	text36
  7716   0145C8                     __ptext36:
  7717                           	callstack 0
  7718   0145C8                     _SPI2_Initialize:
  7719                           	callstack 22
  7720   0145C8                     
  7721                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
  7722   0145C8  0E40               	movlw	64
  7723   0145CA  6E64               	movwf	100,c	;volatile
  7724                           
  7725                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
  7726   0145CC  0E01               	movlw	1
  7727   0145CE  6E63               	movwf	99,c	;volatile
  7728   0145D0                     
  7729                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x00;
  7730   0145D0  6A65               	clrf	101,c	;volatile
  7731   0145D2                     
  7732                           ;mcc_generated_files/spi2.c: 68:     TRISDbits.TRISD6 = 0;
  7733   0145D2  9C95               	bcf	149,6,c	;volatile
  7734   0145D4                     
  7735                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
  7736   0145D4  9A63               	bcf	99,5,c	;volatile
  7737   0145D6                     
  7738                           ; _SPI2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7739   0145D6  0012               	return		;funcret
  7740   0145D8                     __end_of_SPI2_Initialize:
  7741                           	callstack 0
  7742                           
  7743 ;; *************** function _PIN_MANAGER_Initialize *****************
  7744 ;; Defined at:
  7745 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;		None
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;		None
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  1  [STACK] void 
  7752 ;; Registers used:
  7753 ;;		wreg, status,2
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7763 ;;Total ram usage:        0 bytes
  7764 ;; Hardware stack levels used: 1
  7765 ;; Hardware stack levels required when called: 7
  7766 ;; This function calls:
  7767 ;;		Nothing
  7768 ;; This function is called by:
  7769 ;;		_SYSTEM_Initialize
  7770 ;; This function uses a reentrant model
  7771 ;;
  7772                           
  7773                           	psect	text37
  7774   014482                     __ptext37:
  7775                           	callstack 0
  7776   014482                     _PIN_MANAGER_Initialize:
  7777                           	callstack 22
  7778   014482                     
  7779                           ;mcc_generated_files/pin_manager.c: 55:     LATE = 0x00;
  7780   014482  6A8D               	clrf	141,c	;volatile
  7781                           
  7782                           ;mcc_generated_files/pin_manager.c: 56:     LATJ = 0x00;
  7783   014484  6A91               	clrf	145,c	;volatile
  7784                           
  7785                           ;mcc_generated_files/pin_manager.c: 57:     LATD = 0x00;
  7786   014486  6A8C               	clrf	140,c	;volatile
  7787                           
  7788                           ;mcc_generated_files/pin_manager.c: 58:     LATA = 0x00;
  7789   014488  6A89               	clrf	137,c	;volatile
  7790                           
  7791                           ;mcc_generated_files/pin_manager.c: 59:     LATF = 0x00;
  7792   01448A  6A8E               	clrf	142,c	;volatile
  7793                           
  7794                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
  7795   01448C  6A8A               	clrf	138,c	;volatile
  7796                           
  7797                           ;mcc_generated_files/pin_manager.c: 61:     LATG = 0x00;
  7798   01448E  6A8F               	clrf	143,c	;volatile
  7799                           
  7800                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  7801   014490  6A8B               	clrf	139,c	;volatile
  7802                           
  7803                           ;mcc_generated_files/pin_manager.c: 63:     LATH = 0x00;
  7804   014492  6A90               	clrf	144,c	;volatile
  7805                           
  7806                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0xFF;
  7807   014494  6896               	setf	150,c	;volatile
  7808                           
  7809                           ;mcc_generated_files/pin_manager.c: 69:     TRISF = 0xFF;
  7810   014496  6897               	setf	151,c	;volatile
  7811   014498                     
  7812                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x3F;
  7813   014498  0E3F               	movlw	63
  7814   01449A  6E92               	movwf	146,c	;volatile
  7815   01449C                     
  7816                           ;mcc_generated_files/pin_manager.c: 71:     TRISG = 0xFF;
  7817   01449C  6898               	setf	152,c	;volatile
  7818   01449E                     
  7819                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
  7820   01449E  6893               	setf	147,c	;volatile
  7821   0144A0                     
  7822                           ;mcc_generated_files/pin_manager.c: 73:     TRISH = 0xFF;
  7823   0144A0  6899               	setf	153,c	;volatile
  7824   0144A2                     
  7825                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xFF;
  7826   0144A2  6894               	setf	148,c	;volatile
  7827                           
  7828                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xAF;
  7829   0144A4  0EAF               	movlw	175
  7830   0144A6  6E95               	movwf	149,c	;volatile
  7831   0144A8                     
  7832                           ;mcc_generated_files/pin_manager.c: 76:     TRISJ = 0xFF;
  7833   0144A8  689A               	setf	154,c	;volatile
  7834                           
  7835                           ;mcc_generated_files/pin_manager.c: 81:     ADCON1bits.PCFG = 0x00;
  7836   0144AA  0EF0               	movlw	-16
  7837   0144AC  16C1               	andwf	193,f,c	;volatile
  7838   0144AE                     
  7839                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
  7840   0144AE  0012               	return		;funcret
  7841   0144B0                     __end_of_PIN_MANAGER_Initialize:
  7842                           	callstack 0
  7843                           
  7844 ;; *************** function _OSCILLATOR_Initialize *****************
  7845 ;; Defined at:
  7846 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7847 ;; Parameters:    Size  Location     Type
  7848 ;;		None
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;		None
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  1  [STACK] void 
  7853 ;; Registers used:
  7854 ;;		wreg, status,2
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7864 ;;Total ram usage:        0 bytes
  7865 ;; Hardware stack levels used: 1
  7866 ;; Hardware stack levels required when called: 7
  7867 ;; This function calls:
  7868 ;;		Nothing
  7869 ;; This function is called by:
  7870 ;;		_SYSTEM_Initialize
  7871 ;; This function uses a reentrant model
  7872 ;;
  7873                           
  7874                           	psect	text38
  7875   0145D8                     __ptext38:
  7876                           	callstack 0
  7877   0145D8                     _OSCILLATOR_Initialize:
  7878                           	callstack 22
  7879   0145D8                     
  7880                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x00;
  7881   0145D8  6AD3               	clrf	211,c	;volatile
  7882   0145DA                     
  7883                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x50;
  7884   0145DA  0E50               	movlw	80
  7885   0145DC  6E9B               	movwf	155,c	;volatile
  7886   0145DE                     
  7887                           ; _OSCILLATOR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 0, argsize = 0, vargsize = 0
  7888   0145DE  0012               	return		;funcret
  7889   0145E0                     __end_of_OSCILLATOR_Initialize:
  7890                           	callstack 0
  7891                           
  7892 ;; *************** function _INTERRUPT_Initialize *****************
  7893 ;; Defined at:
  7894 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;		None
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;		None
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  1  [STACK] void 
  7901 ;; Registers used:
  7902 ;;		None
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7912 ;;Total ram usage:        0 bytes
  7913 ;; Hardware stack levels used: 1
  7914 ;; Hardware stack levels required when called: 7
  7915 ;; This function calls:
  7916 ;;		Nothing
  7917 ;; This function is called by:
  7918 ;;		_SYSTEM_Initialize
  7919 ;; This function uses a reentrant model
  7920 ;;
  7921                           
  7922                           	psect	text39
  7923   0145EC                     __ptext39:
  7924                           	callstack 0
  7925   0145EC                     _INTERRUPT_Initialize:
  7926                           	callstack 22
  7927   0145EC                     
  7928                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  7929   0145EC  9ED0               	bcf	208,7,c	;volatile
  7930   0145EE                     
  7931                           ; _INTERRUPT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  7932   0145EE  0012               	return		;funcret
  7933   0145F0                     __end_of_INTERRUPT_Initialize:
  7934                           	callstack 0
  7935                           
  7936 ;; *************** function _CanSetFilter *****************
  7937 ;; Defined at:
  7938 ;;		line 231 in file "can/can.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;  filter          1  [STACK] enum E5325
  7941 ;;  fObj            2  [STACK] PTR struct _CAN_FILTEROB
  7942 ;;		 -> fObj(6), 
  7943 ;;  mObj            2  [STACK] PTR struct _CAN_MASKOBJ_
  7944 ;;		 -> mObj(6), 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;		None
  7947 ;; Return value:  Size  Location     Type
  7948 ;;                  1  [STACK] void 
  7949 ;; Registers used:
  7950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7951 ;; Tracked objects:
  7952 ;;		On entry : 0/0
  7953 ;;		On exit  : 0/0
  7954 ;;		Unchanged: 0/0
  7955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7960 ;;Total ram usage:        0 bytes
  7961 ;; Hardware stack levels used: 1
  7962 ;; Hardware stack levels required when called: 10
  7963 ;; This function calls:
  7964 ;;		_DRV_CANFDSPI_FilterDisable
  7965 ;;		_DRV_CANFDSPI_FilterMaskConfigure
  7966 ;;		_DRV_CANFDSPI_FilterObjectConfigure
  7967 ;;		_DRV_CANFDSPI_FilterToFifoLink
  7968 ;; This function is called by:
  7969 ;;		_main
  7970 ;; This function uses a reentrant model
  7971 ;;
  7972                           
  7973                           	psect	text40
  7974   014034                     __ptext40:
  7975                           	callstack 0
  7976   014034                     _CanSetFilter:
  7977                           	callstack 20
  7978   014034                     
  7979                           ;can/can.c: 231: void CanSetFilter(CAN_FILTER filter, CAN_FILTEROBJ_ID * fObj, CAN_MASKO
      +                          BJ_ID * mObj);can/can.c: 232: {;can/can.c: 234:     DRV_CANFDSPI_FilterDisable(filter);
  7980                           ;stkvar	_filter @ sp[(0)+-1]
  7981   014034  0EFF               	movlw	-1
  7982   014036  50E3               	movf	plusw1,w,c
  7983   014038  6EE6               	movwf	postinc1,c
  7984   01403A  EC0C  F09F         	call	_DRV_CANFDSPI_FilterDisable	;wreg free
  7985   01403E                     
  7986                           ;can/can.c: 235:     DRV_CANFDSPI_FilterObjectConfigure(filter,fObj);
  7987                           ;stkvar	_fObj @ sp[(0)+-3]
  7988   01403E  0EFD               	movlw	-3
  7989   014040  CFE3 FFE6          	movff	plusw1,postinc1
  7990   014044  CFE3 FFE6          	movff	plusw1,postinc1
  7991                           
  7992                           ;stkvar	_filter @ sp[(-2)+-1]
  7993   014048  0EFD               	movlw	-3
  7994   01404A  50E3               	movf	plusw1,w,c
  7995   01404C  6EE6               	movwf	postinc1,c
  7996   01404E  EC1A  F087         	call	_DRV_CANFDSPI_FilterObjectConfigure	;wreg free
  7997   014052                     
  7998                           ;can/can.c: 237:     DRV_CANFDSPI_FilterMaskConfigure(filter,mObj,fObj->EXIDE);
  7999                           ;stkvar	_fObj @ sp[(0)+-3]
  8000   014052  0EFD               	movlw	-3
  8001   014054  CFE3 F037          	movff	plusw1,btemp+10
  8002   014058  0EFE               	movlw	-2
  8003   01405A  CFE3 F038          	movff	plusw1,btemp+11
  8004   01405E  0E05               	movlw	5
  8005   014060  2437               	addwf	(btemp+10)^0,w,c
  8006   014062  6ED9               	movwf	fsr2l,c
  8007   014064  0E00               	movlw	0
  8008   014066  2038               	addwfc	(btemp+11)^0,w,c
  8009   014068  6EDA               	movwf	fsr2h,c
  8010   01406A  50DF               	movf	indf2,w,c
  8011   01406C  6EE6               	movwf	postinc1,c
  8012                           
  8013                           ;stkvar	_mObj @ sp[(-1)+-5]
  8014   01406E  0EFA               	movlw	-6
  8015   014070  CFE3 FFE6          	movff	plusw1,postinc1
  8016   014074  CFE3 FFE6          	movff	plusw1,postinc1
  8017                           
  8018                           ;stkvar	_filter @ sp[(-3)+-1]
  8019   014078  0EFC               	movlw	-4
  8020   01407A  50E3               	movf	plusw1,w,c
  8021   01407C  6EE6               	movwf	postinc1,c
  8022   01407E  ECBF  F088         	call	_DRV_CANFDSPI_FilterMaskConfigure	;wreg free
  8023   014082                     
  8024                           ;can/can.c: 239:     DRV_CANFDSPI_FilterToFifoLink(filter,CAN_FIFO_CH2,1);
  8025   014082  0E01               	movlw	1
  8026   014084  6EE6               	movwf	postinc1,c
  8027   014086  0E02               	movlw	2
  8028   014088  6EE6               	movwf	postinc1,c
  8029                           
  8030                           ;stkvar	_filter @ sp[(-2)+-1]
  8031   01408A  0EFD               	movlw	-3
  8032   01408C  50E3               	movf	plusw1,w,c
  8033   01408E  6EE6               	movwf	postinc1,c
  8034   014090  ECC1  F09E         	call	_DRV_CANFDSPI_FilterToFifoLink	;wreg free
  8035   014094                     
  8036                           ; _CanSetFilter: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, 
      +                          argsize = 5, vargsize = 0
  8037   014094  0EFB               	movlw	251
  8038   014096  26E1               	addwf	fsr1l,f,c
  8039   014098  0EFF               	movlw	255
  8040   01409A  22E2               	addwfc	fsr1h,f,c
  8041   01409C  0012               	return		;funcret
  8042   01409E                     __end_of_CanSetFilter:
  8043                           	callstack 0
  8044                           
  8045 ;; *************** function _DRV_CANFDSPI_FilterToFifoLink *****************
  8046 ;; Defined at:
  8047 ;;		line 1072 in file "can/can.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;  filter          1  [STACK] enum E5325
  8050 ;;  channel         1  [STACK] enum E5290
  8051 ;;  enable          1  [STACK] _Bool 
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;  a               2  [STACK] unsigned short 
  8054 ;;  fCtrl           1  [STACK] struct _REG_CiFLTCON_BYT
  8055 ;;  spiTransferE    1    0        char 
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1  [STACK] char 
  8058 ;; Registers used:
  8059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;Total ram usage:        0 bytes
  8070 ;; Hardware stack levels used: 1
  8071 ;; Hardware stack levels required when called: 9
  8072 ;; This function calls:
  8073 ;;		_DRV_CANFDSPI_WriteByte
  8074 ;; This function is called by:
  8075 ;;		_CanSetFilter
  8076 ;; This function uses a reentrant model
  8077 ;;
  8078                           
  8079                           	psect	text41
  8080   013D82                     __ptext41:
  8081                           	callstack 0
  8082   013D82                     _DRV_CANFDSPI_FilterToFifoLink:
  8083                           	callstack 0
  8084                           
  8085                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8086   013D82  52E6               	movf	postinc1,f,c
  8087   013D84  52E6               	movf	postinc1,f,c
  8088   013D86  52E6               	movf	postinc1,f,c
  8089   013D88                     
  8090                           ;can/can.c: 1080:     if (enable) {
  8091                           ;stkvar	_enable @ sp[(-3)+-3]
  8092   013D88  0EFA               	movlw	-6
  8093   013D8A  50E3               	movf	plusw1,w,c
  8094   013D8C  B4D8               	btfsc	status,2,c
  8095   013D8E  EFCB  F09E         	goto	u2571
  8096   013D92  EFCD  F09E         	goto	u2570
  8097   013D96                     u2571:
  8098   013D96  EFD7  F09E         	goto	l4660
  8099   013D9A                     u2570:
  8100   013D9A                     
  8101                           ;can/can.c: 1081:         fCtrl.bF.Enable = 1;
  8102                           ;stkvar	_fCtrl @ sp[(-3)+2]
  8103   013D9A  50E1               	movf	fsr1l,w,c
  8104   013D9C  0FFF               	addlw	-1
  8105   013D9E  6ED9               	movwf	fsr2l,c
  8106   013DA0  50E2               	movf	fsr1h,w,c
  8107   013DA2  6EDA               	movwf	fsr2h,c
  8108   013DA4  0EFF               	movlw	255
  8109   013DA6  22DA               	addwfc	fsr2h,f,c
  8110   013DA8  8EDF               	bsf	indf2,7,c
  8111                           
  8112                           ;can/can.c: 1082:     } else {
  8113   013DAA  EFDF  F09E         	goto	l4662
  8114   013DAE                     l4660:
  8115                           
  8116                           ;can/can.c: 1083:         fCtrl.bF.Enable = 0;
  8117                           ;stkvar	_fCtrl @ sp[(-3)+2]
  8118   013DAE  50E1               	movf	fsr1l,w,c
  8119   013DB0  0FFF               	addlw	-1
  8120   013DB2  6ED9               	movwf	fsr2l,c
  8121   013DB4  50E2               	movf	fsr1h,w,c
  8122   013DB6  6EDA               	movwf	fsr2h,c
  8123   013DB8  0EFF               	movlw	255
  8124   013DBA  22DA               	addwfc	fsr2h,f,c
  8125   013DBC  9EDF               	bcf	indf2,7,c
  8126   013DBE                     l4662:
  8127                           
  8128                           ;can/can.c: 1087:     fCtrl.bF.BufferPointer = channel;
  8129                           ;stkvar	_channel @ sp[(-3)+-2]
  8130   013DBE  0EFB               	movlw	-5
  8131   013DC0  CFE3 F038          	movff	plusw1,btemp+11
  8132                           
  8133                           ;stkvar	_fCtrl @ sp[(-3)+2]
  8134   013DC4  50E1               	movf	fsr1l,w,c
  8135   013DC6  0FFF               	addlw	-1
  8136   013DC8  6ED9               	movwf	fsr2l,c
  8137   013DCA  50E2               	movf	fsr1h,w,c
  8138   013DCC  6EDA               	movwf	fsr2h,c
  8139   013DCE  0EFF               	movlw	255
  8140   013DD0  22DA               	addwfc	fsr2h,f,c
  8141   013DD2  50DF               	movf	223,w,c
  8142   013DD4  1838               	xorwf	(btemp+11)^0,w,c
  8143   013DD6  0BE0               	andlw	-32
  8144   013DD8  1838               	xorwf	(btemp+11)^0,w,c
  8145   013DDA  6EDF               	movwf	223,c
  8146   013DDC                     
  8147                           ;can/can.c: 1088:     a = (0x050 +((3*4)*CAN_FIFO_TOTAL_CHANNELS)) + filter;
  8148                           ;stkvar	_filter @ sp[(-3)+-1]
  8149   013DDC  0EFC               	movlw	-4
  8150   013DDE  CFE3 F038          	movff	plusw1,btemp+11
  8151   013DE2  0ED0               	movlw	208
  8152   013DE4  2438               	addwf	(btemp+11)^0,w,c
  8153   013DE6  6E35               	movwf	(btemp+8)^0,c
  8154   013DE8  6A36               	clrf	(btemp+9)^0,c
  8155   013DEA  0E01               	movlw	1
  8156   013DEC  2236               	addwfc	(btemp+9)^0,f,c
  8157                           
  8158                           ;stkvar	_a @ sp[(-3)+0]
  8159   013DEE  0EFD               	movlw	-3
  8160   013DF0  C035  FFE3         	movff	btemp+8,plusw1
  8161   013DF4  0EFE               	movlw	-2
  8162   013DF6  C036  FFE3         	movff	btemp+9,plusw1
  8163   013DFA                     
  8164                           ;stkvar	_fCtrl @ sp[(-3)+2]
  8165   013DFA  0EFF               	movlw	-1
  8166   013DFC  50E3               	movf	plusw1,w,c
  8167   013DFE  6EE6               	movwf	postinc1,c
  8168                           
  8169                           ;stkvar	_a @ sp[(-4)+0]
  8170   013E00  0EFC               	movlw	-4
  8171   013E02  CFE3 FFE6          	movff	plusw1,postinc1
  8172   013E06  CFE3 FFE6          	movff	plusw1,postinc1
  8173   013E0A  EC40  F0A1         	call	_DRV_CANFDSPI_WriteByte	;wreg free
  8174   013E0E                     
  8175                           ; _DRV_CANFDSPI_FilterToFifoLink: autosize = 3, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 3, argsize = 3, vargsize = 0
  8176   013E0E  0EFA               	movlw	250
  8177   013E10  26E1               	addwf	fsr1l,f,c
  8178   013E12  0EFF               	movlw	255
  8179   013E14  22E2               	addwfc	fsr1h,f,c
  8180   013E16  0012               	return		;funcret
  8181   013E18                     __end_of_DRV_CANFDSPI_FilterToFifoLink:
  8182                           	callstack 0
  8183                           
  8184 ;; *************** function _DRV_CANFDSPI_FilterObjectConfigure *****************
  8185 ;; Defined at:
  8186 ;;		line 1001 in file "can/can.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;  filter          1  [STACK] enum E5325
  8189 ;;  id              2  [STACK] PTR struct _CAN_FILTEROB
  8190 ;;		 -> fObj(6), 
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;  temp32          4  [STACK] unsigned long 
  8193 ;;  fObj            6  [STACK] struct _REG_CiFLTOBJ
  8194 ;;  a               2  [STACK] unsigned short 
  8195 ;;  spiTransferE    1    0        char 
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  1  [STACK] char 
  8198 ;; Registers used:
  8199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8209 ;;Total ram usage:        0 bytes
  8210 ;; Hardware stack levels used: 1
  8211 ;; Hardware stack levels required when called: 9
  8212 ;; This function calls:
  8213 ;;		_DRV_CANFDSPI_WriteWord
  8214 ;; This function is called by:
  8215 ;;		_CanSetFilter
  8216 ;; This function uses a reentrant model
  8217 ;;
  8218                           
  8219                           	psect	text42
  8220   010E34                     __ptext42:
  8221                           	callstack 0
  8222   010E34                     _DRV_CANFDSPI_FilterObjectConfigure:
  8223                           	callstack 0
  8224                           
  8225                           ; autosize = 12, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8226   010E34  0E0C               	movlw	12
  8227   010E36  26E1               	addwf	fsr1l,f,c
  8228   010E38  0E00               	movlw	0
  8229   010E3A  22E2               	addwfc	fsr1h,f,c
  8230   010E3C                     
  8231                           ;can/can.c: 1009:     fObj.word = 0;
  8232                           ;stkvar	_fObj @ sp[(-12)+4]
  8233   010E3C  0EF8               	movlw	-8
  8234   010E3E  6AE3               	clrf	plusw1,c
  8235   010E40  0EF9               	movlw	-7
  8236   010E42  6AE3               	clrf	plusw1,c
  8237   010E44  0EFA               	movlw	-6
  8238   010E46  6AE3               	clrf	plusw1,c
  8239   010E48  0EFB               	movlw	-5
  8240   010E4A  6AE3               	clrf	plusw1,c
  8241   010E4C                     
  8242                           ;can/can.c: 1011:     if(id->EXIDE == 0)
  8243                           ;stkvar	_id @ sp[(-12)+-3]
  8244   010E4C  0EF1               	movlw	-15
  8245   010E4E  CFE3 F037          	movff	plusw1,btemp+10
  8246   010E52  0EF2               	movlw	-14
  8247   010E54  CFE3 F038          	movff	plusw1,btemp+11
  8248   010E58  0E05               	movlw	5
  8249   010E5A  2437               	addwf	(btemp+10)^0,w,c
  8250   010E5C  6ED9               	movwf	fsr2l,c
  8251   010E5E  0E00               	movlw	0
  8252   010E60  2038               	addwfc	(btemp+11)^0,w,c
  8253   010E62  6EDA               	movwf	fsr2h,c
  8254   010E64  50DF               	movf	indf2,w,c
  8255   010E66  A4D8               	btfss	status,2,c
  8256   010E68  EF38  F087         	goto	u2391
  8257   010E6C  EF3A  F087         	goto	u2390
  8258   010E70                     u2391:
  8259   010E70  EFD2  F087         	goto	l4606
  8260   010E74                     u2390:
  8261   010E74                     
  8262                           ;can/can.c: 1012:     {;can/can.c: 1013:       fObj.byte[0] = (uint8_t)id->ID;
  8263                           ;stkvar	_id @ sp[(-12)+-3]
  8264   010E74  0EF1               	movlw	-15
  8265   010E76  CFE3 FFD9          	movff	plusw1,fsr2l
  8266   010E7A  0EF2               	movlw	-14
  8267   010E7C  CFE3 FFDA          	movff	plusw1,fsr2h
  8268   010E80  50DF               	movf	indf2,w,c
  8269   010E82  6E38               	movwf	(btemp+11)^0,c
  8270                           
  8271                           ;stkvar	_fObj @ sp[(-12)+4]
  8272   010E84  0EF8               	movlw	-8
  8273   010E86  C038  FFE3         	movff	btemp+11,plusw1
  8274   010E8A                     
  8275                           ;can/can.c: 1014:       fObj.byte[1] = (uint8_t)(id->ID >> 8);
  8276                           ;stkvar	_fObj @ sp[(-12)+4]
  8277   010E8A  0EF9               	movlw	249
  8278   010E8C  24E1               	addwf	fsr1l,w,c
  8279   010E8E  6ED9               	movwf	fsr2l,c
  8280   010E90  0EFF               	movlw	255
  8281   010E92  20E2               	addwfc	fsr1h,w,c
  8282   010E94  6EDA               	movwf	fsr2h,c
  8283                           
  8284                           ;stkvar	_id @ sp[(-12)+-3]
  8285   010E96  0EF1               	movlw	-15
  8286   010E98  CFE3 FFE9          	movff	plusw1,fsr0l
  8287   010E9C  0EF2               	movlw	-14
  8288   010E9E  CFE3 FFEA          	movff	plusw1,fsr0h
  8289   010EA2  CFEE F035          	movff	postinc0,btemp+8
  8290   010EA6  CFEE F036          	movff	postinc0,btemp+9
  8291   010EAA  CFEE F037          	movff	postinc0,btemp+10
  8292   010EAE  CFEE F038          	movff	postinc0,btemp+11
  8293   010EB2  C036  F035         	movff	btemp+9,btemp+8
  8294   010EB6  C037  F036         	movff	btemp+10,btemp+9
  8295   010EBA  C038  F037         	movff	btemp+11,btemp+10
  8296   010EBE  6A38               	clrf	(btemp+11)^0,c
  8297   010EC0  5035               	movf	(btemp+8)^0,w,c
  8298   010EC2  6EDF               	movwf	indf2,c
  8299   010EC4                     
  8300                           ;can/can.c: 1015:       fObj.byte[2] = (uint8_t)(id->ID >> 16);
  8301                           ;stkvar	_fObj @ sp[(-12)+4]
  8302   010EC4  0EFA               	movlw	250
  8303   010EC6  24E1               	addwf	fsr1l,w,c
  8304   010EC8  6ED9               	movwf	fsr2l,c
  8305   010ECA  0EFF               	movlw	255
  8306   010ECC  20E2               	addwfc	fsr1h,w,c
  8307   010ECE  6EDA               	movwf	fsr2h,c
  8308                           
  8309                           ;stkvar	_id @ sp[(-12)+-3]
  8310   010ED0  0EF1               	movlw	-15
  8311   010ED2  CFE3 FFE9          	movff	plusw1,fsr0l
  8312   010ED6  0EF2               	movlw	-14
  8313   010ED8  CFE3 FFEA          	movff	plusw1,fsr0h
  8314   010EDC  CFEE F035          	movff	postinc0,btemp+8
  8315   010EE0  CFEE F036          	movff	postinc0,btemp+9
  8316   010EE4  CFEE F037          	movff	postinc0,btemp+10
  8317   010EE8  CFEE F038          	movff	postinc0,btemp+11
  8318   010EEC  0E11               	movlw	17
  8319   010EEE  EF7E  F087         	goto	u2400
  8320   010EF2                     u2405:
  8321   010EF2  90D8               	bcf	status,0,c
  8322   010EF4  3238               	rrcf	(btemp+11)^0,f,c
  8323   010EF6  3237               	rrcf	(btemp+10)^0,f,c
  8324   010EF8  3236               	rrcf	(btemp+9)^0,f,c
  8325   010EFA  3235               	rrcf	(btemp+8)^0,f,c
  8326   010EFC                     u2400:
  8327   010EFC  2EE8               	decfsz	wreg,f,c
  8328   010EFE  EF79  F087         	goto	u2405
  8329   010F02  5035               	movf	(btemp+8)^0,w,c
  8330   010F04  6EDF               	movwf	indf2,c
  8331   010F06                     
  8332                           ;can/can.c: 1016:       fObj.byte[3] = (uint8_t)(id->ID >> 24) | (uint8_t)(id->SID11 << 
      +                          5) | (uint8_t)(id->EXIDE << 6);
  8333                           ;stkvar	_fObj @ sp[(-12)+4]
  8334   010F06  0EFB               	movlw	251
  8335   010F08  24E1               	addwf	fsr1l,w,c
  8336   010F0A  6ED9               	movwf	fsr2l,c
  8337   010F0C  0EFF               	movlw	255
  8338   010F0E  20E2               	addwfc	fsr1h,w,c
  8339   010F10  6EDA               	movwf	fsr2h,c
  8340                           
  8341                           ;stkvar	_id @ sp[(-12)+-3]
  8342   010F12  0EF1               	movlw	-15
  8343   010F14  CFE3 F037          	movff	plusw1,btemp+10
  8344   010F18  0EF2               	movlw	-14
  8345   010F1A  CFE3 F038          	movff	plusw1,btemp+11
  8346   010F1E  0E05               	movlw	5
  8347   010F20  2437               	addwf	(btemp+10)^0,w,c
  8348   010F22  6EE9               	movwf	fsr0l,c
  8349   010F24  0E00               	movlw	0
  8350   010F26  2038               	addwfc	(btemp+11)^0,w,c
  8351   010F28  6EEA               	movwf	fsr0h,c
  8352   010F2A  50EF               	movf	indf0,w,c
  8353   010F2C  6E38               	movwf	(btemp+11)^0,c
  8354   010F2E  0E06               	movlw	6
  8355   010F30  6E2D               	movwf	btemp^0,c
  8356   010F32                     u2415:
  8357   010F32  90D8               	bcf	status,0,c
  8358   010F34  3638               	rlcf	(btemp+11)^0,f,c
  8359   010F36  2E2D               	decfsz	btemp^0,f,c
  8360   010F38  EF99  F087         	goto	u2415
  8361                           
  8362                           ;stkvar	_id @ sp[(-12)+-3]
  8363   010F3C  0EF1               	movlw	-15
  8364   010F3E  CFE3 F035          	movff	plusw1,btemp+8
  8365   010F42  0EF2               	movlw	-14
  8366   010F44  CFE3 F036          	movff	plusw1,btemp+9
  8367   010F48  0E04               	movlw	4
  8368   010F4A  2435               	addwf	(btemp+8)^0,w,c
  8369   010F4C  6EE9               	movwf	fsr0l,c
  8370   010F4E  0E00               	movlw	0
  8371   010F50  2036               	addwfc	(btemp+9)^0,w,c
  8372   010F52  6EEA               	movwf	fsr0h,c
  8373   010F54  50EF               	movf	indf0,w,c
  8374   010F56  6E37               	movwf	(btemp+10)^0,c
  8375   010F58  0E05               	movlw	5
  8376   010F5A  6E2D               	movwf	btemp^0,c
  8377   010F5C                     u2425:
  8378   010F5C  90D8               	bcf	status,0,c
  8379   010F5E  3637               	rlcf	(btemp+10)^0,f,c
  8380   010F60  2E2D               	decfsz	btemp^0,f,c
  8381   010F62  EFAE  F087         	goto	u2425
  8382                           
  8383                           ;stkvar	_id @ sp[(-12)+-3]
  8384   010F66  0EF1               	movlw	-15
  8385   010F68  CFE3 FFE9          	movff	plusw1,fsr0l
  8386   010F6C  0EF2               	movlw	-14
  8387   010F6E  CFE3 FFEA          	movff	plusw1,fsr0h
  8388   010F72  CFEE F031          	movff	postinc0,btemp+4
  8389   010F76  CFEE F032          	movff	postinc0,btemp+5
  8390   010F7A  CFEE F033          	movff	postinc0,btemp+6
  8391   010F7E  CFEE F034          	movff	postinc0,btemp+7
  8392   010F82  0E19               	movlw	25
  8393   010F84  EFC9  F087         	goto	u2430
  8394   010F88                     u2435:
  8395   010F88  90D8               	bcf	status,0,c
  8396   010F8A  3234               	rrcf	(btemp+7)^0,f,c
  8397   010F8C  3233               	rrcf	(btemp+6)^0,f,c
  8398   010F8E  3232               	rrcf	(btemp+5)^0,f,c
  8399   010F90  3231               	rrcf	(btemp+4)^0,f,c
  8400   010F92                     u2430:
  8401   010F92  2EE8               	decfsz	wreg,f,c
  8402   010F94  EFC4  F087         	goto	u2435
  8403   010F98  5031               	movf	(btemp+4)^0,w,c
  8404   010F9A  1037               	iorwf	(btemp+10)^0,w,c
  8405   010F9C  1038               	iorwf	(btemp+11)^0,w,c
  8406   010F9E  6EDF               	movwf	indf2,c
  8407                           
  8408                           ;can/can.c: 1017:     }
  8409   010FA0  EF97  F088         	goto	l4618
  8410   010FA4                     l4606:
  8411                           
  8412                           ;can/can.c: 1019:     {;can/can.c: 1020:       uint32_t temp32 = ((id->ID & 0x0003FFFF) 
      +                          << 11) |
  8413                           ;stkvar	_id @ sp[(-12)+-3]
  8414   010FA4  0EF1               	movlw	-15
  8415   010FA6  CFE3 FFD9          	movff	plusw1,fsr2l
  8416   010FAA  0EF2               	movlw	-14
  8417   010FAC  CFE3 FFDA          	movff	plusw1,fsr2h
  8418   010FB0  CFDE F035          	movff	postinc2,btemp+8
  8419   010FB4  CFDE F036          	movff	postinc2,btemp+9
  8420   010FB8  CFDE F037          	movff	postinc2,btemp+10
  8421   010FBC  CFDE F038          	movff	postinc2,btemp+11
  8422   010FC0  0E13               	movlw	19
  8423   010FC2  EFE8  F087         	goto	u2440
  8424   010FC6                     u2445:
  8425   010FC6  90D8               	bcf	status,0,c
  8426   010FC8  3238               	rrcf	(btemp+11)^0,f,c
  8427   010FCA  3237               	rrcf	(btemp+10)^0,f,c
  8428   010FCC  3236               	rrcf	(btemp+9)^0,f,c
  8429   010FCE  3235               	rrcf	(btemp+8)^0,f,c
  8430   010FD0                     u2440:
  8431   010FD0  2EE8               	decfsz	wreg,f,c
  8432   010FD2  EFE3  F087         	goto	u2445
  8433   010FD6  0EFF               	movlw	255
  8434   010FD8  1435               	andwf	(btemp+8)^0,w,c
  8435   010FDA  6E31               	movwf	(btemp+4)^0,c
  8436   010FDC  0E07               	movlw	7
  8437   010FDE  1436               	andwf	(btemp+9)^0,w,c
  8438   010FE0  6E32               	movwf	(btemp+5)^0,c
  8439   010FE2  0E00               	movlw	0
  8440   010FE4  1437               	andwf	(btemp+10)^0,w,c
  8441   010FE6  6E33               	movwf	(btemp+6)^0,c
  8442   010FE8  0E00               	movlw	0
  8443   010FEA  1438               	andwf	(btemp+11)^0,w,c
  8444   010FEC  6E34               	movwf	(btemp+7)^0,c
  8445                           
  8446                           ;stkvar	_id @ sp[(-12)+-3]
  8447   010FEE  0EF1               	movlw	-15
  8448   010FF0  CFE3 FFD9          	movff	plusw1,fsr2l
  8449   010FF4  0EF2               	movlw	-14
  8450   010FF6  CFE3 FFDA          	movff	plusw1,fsr2h
  8451   010FFA  0EFF               	movlw	255
  8452   010FFC  14DE               	andwf	postinc2,w,c
  8453   010FFE  6E35               	movwf	(btemp+8)^0,c
  8454   011000  0EFF               	movlw	255
  8455   011002  14DE               	andwf	postinc2,w,c
  8456   011004  6E36               	movwf	(btemp+9)^0,c
  8457   011006  0E03               	movlw	3
  8458   011008  14DE               	andwf	postinc2,w,c
  8459   01100A  6E37               	movwf	(btemp+10)^0,c
  8460   01100C  0E00               	movlw	0
  8461   01100E  14DE               	andwf	postinc2,w,c
  8462   011010  6E38               	movwf	(btemp+11)^0,c
  8463   011012  0E0B               	movlw	11
  8464   011014                     u2455:
  8465   011014  90D8               	bcf	status,0,c
  8466   011016  3635               	rlcf	(btemp+8)^0,f,c
  8467   011018  3636               	rlcf	(btemp+9)^0,f,c
  8468   01101A  3637               	rlcf	(btemp+10)^0,f,c
  8469   01101C  3638               	rlcf	(btemp+11)^0,f,c
  8470   01101E  2EE8               	decfsz	wreg,f,c
  8471   011020  EF0A  F088         	goto	u2455
  8472   011024  5031               	movf	(btemp+4)^0,w,c
  8473   011026  1035               	iorwf	(btemp+8)^0,w,c
  8474   011028  6E2D               	movwf	btemp^0,c
  8475   01102A  5032               	movf	(btemp+5)^0,w,c
  8476   01102C  1036               	iorwf	(btemp+9)^0,w,c
  8477   01102E  6E2E               	movwf	(btemp+1)^0,c
  8478   011030  5033               	movf	(btemp+6)^0,w,c
  8479   011032  1037               	iorwf	(btemp+10)^0,w,c
  8480   011034  6E2F               	movwf	(btemp+2)^0,c
  8481   011036  5034               	movf	(btemp+7)^0,w,c
  8482   011038  1038               	iorwf	(btemp+11)^0,w,c
  8483   01103A  6E30               	movwf	(btemp+3)^0,c
  8484                           
  8485                           ;stkvar	_temp32 @ sp[(-12)+0]
  8486   01103C  0EF4               	movlw	-12
  8487   01103E  C02D  FFE3         	movff	btemp,plusw1
  8488   011042  0EF5               	movlw	-11
  8489   011044  C02E  FFE3         	movff	btemp+1,plusw1
  8490   011048  0EF6               	movlw	-10
  8491   01104A  C02F  FFE3         	movff	btemp+2,plusw1
  8492   01104E  0EF7               	movlw	-9
  8493   011050  C030  FFE3         	movff	btemp+3,plusw1
  8494   011054                     
  8495                           ;can/can.c: 1022:       temp32 = temp32 & 0x1FFFFFFF;
  8496                           ;stkvar	_temp32 @ sp[(-12)+0]
  8497   011054  50E1               	movf	fsr1l,w,c
  8498   011056  0FF4               	addlw	-12
  8499   011058  6ED9               	movwf	fsr2l,c
  8500   01105A  50E2               	movf	fsr1h,w,c
  8501   01105C  6EDA               	movwf	fsr2h,c
  8502   01105E  0EFF               	movlw	255
  8503   011060  22DA               	addwfc	fsr2h,f,c
  8504   011062  0EFF               	movlw	255
  8505   011064  16DE               	andwf	postinc2,f,c
  8506   011066  0EFF               	movlw	255
  8507   011068  16DE               	andwf	postinc2,f,c
  8508   01106A  0EFF               	movlw	255
  8509   01106C  16DE               	andwf	postinc2,f,c
  8510   01106E  0E1F               	movlw	31
  8511   011070  16DE               	andwf	postinc2,f,c
  8512   011072                     
  8513                           ;can/can.c: 1023:       fObj.byte[0] = (uint8_t)temp32;
  8514                           ;stkvar	_temp32 @ sp[(-12)+0]
  8515                           ;stkvar	_fObj @ sp[(-12)+4]
  8516   011072  0EF4               	movlw	-12
  8517   011074  CFE3 F02D          	movff	plusw1,btemp
  8518   011078  0EF8               	movlw	-8
  8519   01107A  C02D  FFE3         	movff	btemp,plusw1
  8520   01107E                     
  8521                           ;can/can.c: 1024:       fObj.byte[1] = (uint8_t)(temp32 >> 8);
  8522                           ;stkvar	_temp32 @ sp[(-12)+0]
  8523   01107E  0EF5               	movlw	245
  8524   011080  24E1               	addwf	fsr1l,w,c
  8525   011082  6ED9               	movwf	fsr2l,c
  8526   011084  0EFF               	movlw	255
  8527   011086  20E2               	addwfc	fsr1h,w,c
  8528   011088  6EDA               	movwf	fsr2h,c
  8529                           
  8530                           ;stkvar	_fObj @ sp[(-12)+4]
  8531   01108A  0EF9               	movlw	249
  8532   01108C  24E1               	addwf	fsr1l,w,c
  8533   01108E  6EE9               	movwf	fsr0l,c
  8534   011090  0EFF               	movlw	255
  8535   011092  20E2               	addwfc	fsr1h,w,c
  8536   011094  6EEA               	movwf	fsr0h,c
  8537   011096  CFDF FFEF          	movff	indf2,indf0
  8538   01109A                     
  8539                           ;can/can.c: 1025:       fObj.byte[2] = (uint8_t)(temp32 >> 16);
  8540                           ;stkvar	_temp32 @ sp[(-12)+0]
  8541   01109A  0EF6               	movlw	246
  8542   01109C  24E1               	addwf	fsr1l,w,c
  8543   01109E  6ED9               	movwf	fsr2l,c
  8544   0110A0  0EFF               	movlw	255
  8545   0110A2  20E2               	addwfc	fsr1h,w,c
  8546   0110A4  6EDA               	movwf	fsr2h,c
  8547                           
  8548                           ;stkvar	_fObj @ sp[(-12)+4]
  8549   0110A6  0EFA               	movlw	250
  8550   0110A8  24E1               	addwf	fsr1l,w,c
  8551   0110AA  6EE9               	movwf	fsr0l,c
  8552   0110AC  0EFF               	movlw	255
  8553   0110AE  20E2               	addwfc	fsr1h,w,c
  8554   0110B0  6EEA               	movwf	fsr0h,c
  8555   0110B2  CFDF FFEF          	movff	indf2,indf0
  8556   0110B6                     
  8557                           ;can/can.c: 1026:       fObj.byte[3] = (uint8_t)(temp32 >> 24) | (uint8_t)(id->SID11 << 
      +                          5) | (uint8_t)(id->EXIDE << 6);
  8558                           ;stkvar	_fObj @ sp[(-12)+4]
  8559   0110B6  0EFB               	movlw	251
  8560   0110B8  24E1               	addwf	fsr1l,w,c
  8561   0110BA  6ED9               	movwf	fsr2l,c
  8562   0110BC  0EFF               	movlw	255
  8563   0110BE  20E2               	addwfc	fsr1h,w,c
  8564   0110C0  6EDA               	movwf	fsr2h,c
  8565                           
  8566                           ;stkvar	_temp32 @ sp[(-12)+0]
  8567   0110C2  0EF7               	movlw	247
  8568   0110C4  24E1               	addwf	fsr1l,w,c
  8569   0110C6  6EE9               	movwf	fsr0l,c
  8570   0110C8  0EFF               	movlw	255
  8571   0110CA  20E2               	addwfc	fsr1h,w,c
  8572   0110CC  6EEA               	movwf	fsr0h,c
  8573   0110CE  50EF               	movf	indf0,w,c
  8574   0110D0  6E38               	movwf	(btemp+11)^0,c
  8575                           
  8576                           ;stkvar	_id @ sp[(-12)+-3]
  8577   0110D2  0EF1               	movlw	-15
  8578   0110D4  CFE3 F035          	movff	plusw1,btemp+8
  8579   0110D8  0EF2               	movlw	-14
  8580   0110DA  CFE3 F036          	movff	plusw1,btemp+9
  8581   0110DE  0E05               	movlw	5
  8582   0110E0  2435               	addwf	(btemp+8)^0,w,c
  8583   0110E2  6EE9               	movwf	fsr0l,c
  8584   0110E4  0E00               	movlw	0
  8585   0110E6  2036               	addwfc	(btemp+9)^0,w,c
  8586   0110E8  6EEA               	movwf	fsr0h,c
  8587   0110EA  50EF               	movf	indf0,w,c
  8588   0110EC  6E37               	movwf	(btemp+10)^0,c
  8589   0110EE  0E06               	movlw	6
  8590   0110F0  6E2D               	movwf	btemp^0,c
  8591   0110F2                     u2465:
  8592   0110F2  90D8               	bcf	status,0,c
  8593   0110F4  3637               	rlcf	(btemp+10)^0,f,c
  8594   0110F6  2E2D               	decfsz	btemp^0,f,c
  8595   0110F8  EF79  F088         	goto	u2465
  8596                           
  8597                           ;stkvar	_id @ sp[(-12)+-3]
  8598   0110FC  0EF1               	movlw	-15
  8599   0110FE  CFE3 F035          	movff	plusw1,btemp+8
  8600   011102  0EF2               	movlw	-14
  8601   011104  CFE3 F036          	movff	plusw1,btemp+9
  8602   011108  0E04               	movlw	4
  8603   01110A  2435               	addwf	(btemp+8)^0,w,c
  8604   01110C  6EE9               	movwf	fsr0l,c
  8605   01110E  0E00               	movlw	0
  8606   011110  2036               	addwfc	(btemp+9)^0,w,c
  8607   011112  6EEA               	movwf	fsr0h,c
  8608   011114  50EF               	movf	indf0,w,c
  8609   011116  6E36               	movwf	(btemp+9)^0,c
  8610   011118  0E05               	movlw	5
  8611   01111A  6E2D               	movwf	btemp^0,c
  8612   01111C                     u2475:
  8613   01111C  90D8               	bcf	status,0,c
  8614   01111E  3636               	rlcf	(btemp+9)^0,f,c
  8615   011120  2E2D               	decfsz	btemp^0,f,c
  8616   011122  EF8E  F088         	goto	u2475
  8617   011126  5036               	movf	(btemp+9)^0,w,c
  8618   011128  1037               	iorwf	(btemp+10)^0,w,c
  8619   01112A  1038               	iorwf	(btemp+11)^0,w,c
  8620   01112C  6EDF               	movwf	indf2,c
  8621   01112E                     l4618:
  8622                           
  8623                           ;can/can.c: 1028:     a = ((0x050 +((3*4)*CAN_FIFO_TOTAL_CHANNELS))+CAN_FIFO_TOTAL_CHANN
      +                          ELS) + (filter * (2*4));
  8624                           ;stkvar	_filter @ sp[(-12)+-1]
  8625   01112E  0EF3               	movlw	-13
  8626   011130  50E3               	movf	plusw1,w,c
  8627   011132  0D08               	mullw	8
  8628   011134  CFF3 F037          	movff	prodl,btemp+10
  8629   011138  CFF4 F038          	movff	prodh,btemp+11
  8630   01113C  0EF0               	movlw	240
  8631   01113E  2437               	addwf	(btemp+10)^0,w,c
  8632   011140  6E35               	movwf	(btemp+8)^0,c
  8633   011142  0E01               	movlw	1
  8634   011144  2038               	addwfc	(btemp+11)^0,w,c
  8635   011146  6E36               	movwf	(btemp+9)^0,c
  8636                           
  8637                           ;stkvar	_a @ sp[(-12)+10]
  8638   011148  0EFE               	movlw	-2
  8639   01114A  C035  FFE3         	movff	btemp+8,plusw1
  8640   01114E  0EFF               	movlw	-1
  8641   011150  C036  FFE3         	movff	btemp+9,plusw1
  8642   011154                     
  8643                           ;stkvar	_fObj @ sp[(-12)+4]
  8644   011154  0EF8               	movlw	-8
  8645   011156  CFE3 FFE6          	movff	plusw1,postinc1
  8646   01115A  CFE3 FFE6          	movff	plusw1,postinc1
  8647   01115E  CFE3 FFE6          	movff	plusw1,postinc1
  8648   011162  CFE3 FFE6          	movff	plusw1,postinc1
  8649                           
  8650                           ;stkvar	_a @ sp[(-16)+10]
  8651   011166  0EFA               	movlw	-6
  8652   011168  CFE3 FFE6          	movff	plusw1,postinc1
  8653   01116C  CFE3 FFE6          	movff	plusw1,postinc1
  8654   011170  ECA8  F099         	call	_DRV_CANFDSPI_WriteWord	;wreg free
  8655   011174                     
  8656                           ; _DRV_CANFDSPI_FilterObjectConfigure: autosize = 12, savesize = 0, parsavesize = 0, tem
      +                          psize = 0 parsize = 3, argsize = 3, vargsize = 0
  8657   011174  0EF1               	movlw	241
  8658   011176  26E1               	addwf	fsr1l,f,c
  8659   011178  0EFF               	movlw	255
  8660   01117A  22E2               	addwfc	fsr1h,f,c
  8661   01117C  0012               	return		;funcret
  8662   01117E                     __end_of_DRV_CANFDSPI_FilterObjectConfigure:
  8663                           	callstack 0
  8664                           
  8665 ;; *************** function _DRV_CANFDSPI_FilterMaskConfigure *****************
  8666 ;; Defined at:
  8667 ;;		line 1035 in file "can/can.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;  filter          1  [STACK] enum E5325
  8670 ;;  mask            2  [STACK] PTR struct _CAN_MASKOBJ_
  8671 ;;		 -> mObj(6), 
  8672 ;;  EXIDE           1  [STACK] unsigned char 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;  temp32          4  [STACK] unsigned long 
  8675 ;;  mObj            6  [STACK] struct _REG_CiMASK
  8676 ;;  a               2  [STACK] unsigned short 
  8677 ;;  spiTransferE    1    0        char 
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  1  [STACK] char 
  8680 ;; Registers used:
  8681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;Total ram usage:        0 bytes
  8692 ;; Hardware stack levels used: 1
  8693 ;; Hardware stack levels required when called: 9
  8694 ;; This function calls:
  8695 ;;		_DRV_CANFDSPI_WriteWord
  8696 ;; This function is called by:
  8697 ;;		_CanSetFilter
  8698 ;; This function uses a reentrant model
  8699 ;;
  8700                           
  8701                           	psect	text43
  8702   01117E                     __ptext43:
  8703                           	callstack 0
  8704   01117E                     _DRV_CANFDSPI_FilterMaskConfigure:
  8705                           	callstack 0
  8706                           
  8707                           ; autosize = 12, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8708   01117E  0E0C               	movlw	12
  8709   011180  26E1               	addwf	fsr1l,f,c
  8710   011182  0E00               	movlw	0
  8711   011184  22E2               	addwfc	fsr1h,f,c
  8712   011186                     
  8713                           ;can/can.c: 1043:     mObj.word = 0;
  8714                           ;stkvar	_mObj @ sp[(-12)+4]
  8715   011186  0EF8               	movlw	-8
  8716   011188  6AE3               	clrf	plusw1,c
  8717   01118A  0EF9               	movlw	-7
  8718   01118C  6AE3               	clrf	plusw1,c
  8719   01118E  0EFA               	movlw	-6
  8720   011190  6AE3               	clrf	plusw1,c
  8721   011192  0EFB               	movlw	-5
  8722   011194  6AE3               	clrf	plusw1,c
  8723   011196                     
  8724                           ;can/can.c: 1047:     if(EXIDE == 0)
  8725                           ;stkvar	_EXIDE @ sp[(-12)+-4]
  8726   011196  0EF0               	movlw	-16
  8727   011198  50E3               	movf	plusw1,w,c
  8728   01119A  A4D8               	btfss	status,2,c
  8729   01119C  EFD2  F088         	goto	u2481
  8730   0111A0  EFD4  F088         	goto	u2480
  8731   0111A4                     u2481:
  8732   0111A4  EF6C  F089         	goto	l4638
  8733   0111A8                     u2480:
  8734   0111A8                     
  8735                           ;can/can.c: 1048:     {;can/can.c: 1049:       mObj.byte[0] = (uint8_t)mask->MID;
  8736                           ;stkvar	_mask @ sp[(-12)+-3]
  8737   0111A8  0EF1               	movlw	-15
  8738   0111AA  CFE3 FFD9          	movff	plusw1,fsr2l
  8739   0111AE  0EF2               	movlw	-14
  8740   0111B0  CFE3 FFDA          	movff	plusw1,fsr2h
  8741   0111B4  50DF               	movf	indf2,w,c
  8742   0111B6  6E38               	movwf	(btemp+11)^0,c
  8743                           
  8744                           ;stkvar	_mObj @ sp[(-12)+4]
  8745   0111B8  0EF8               	movlw	-8
  8746   0111BA  C038  FFE3         	movff	btemp+11,plusw1
  8747   0111BE                     
  8748                           ;can/can.c: 1050:       mObj.byte[1] = (uint8_t)(mask->MID >> 8);
  8749                           ;stkvar	_mObj @ sp[(-12)+4]
  8750   0111BE  0EF9               	movlw	249
  8751   0111C0  24E1               	addwf	fsr1l,w,c
  8752   0111C2  6ED9               	movwf	fsr2l,c
  8753   0111C4  0EFF               	movlw	255
  8754   0111C6  20E2               	addwfc	fsr1h,w,c
  8755   0111C8  6EDA               	movwf	fsr2h,c
  8756                           
  8757                           ;stkvar	_mask @ sp[(-12)+-3]
  8758   0111CA  0EF1               	movlw	-15
  8759   0111CC  CFE3 FFE9          	movff	plusw1,fsr0l
  8760   0111D0  0EF2               	movlw	-14
  8761   0111D2  CFE3 FFEA          	movff	plusw1,fsr0h
  8762   0111D6  CFEE F035          	movff	postinc0,btemp+8
  8763   0111DA  CFEE F036          	movff	postinc0,btemp+9
  8764   0111DE  CFEE F037          	movff	postinc0,btemp+10
  8765   0111E2  CFEE F038          	movff	postinc0,btemp+11
  8766   0111E6  C036  F035         	movff	btemp+9,btemp+8
  8767   0111EA  C037  F036         	movff	btemp+10,btemp+9
  8768   0111EE  C038  F037         	movff	btemp+11,btemp+10
  8769   0111F2  6A38               	clrf	(btemp+11)^0,c
  8770   0111F4  5035               	movf	(btemp+8)^0,w,c
  8771   0111F6  6EDF               	movwf	indf2,c
  8772   0111F8                     
  8773                           ;can/can.c: 1051:       mObj.byte[2] = (uint8_t)(mask->MID >> 16);
  8774                           ;stkvar	_mObj @ sp[(-12)+4]
  8775   0111F8  0EFA               	movlw	250
  8776   0111FA  24E1               	addwf	fsr1l,w,c
  8777   0111FC  6ED9               	movwf	fsr2l,c
  8778   0111FE  0EFF               	movlw	255
  8779   011200  20E2               	addwfc	fsr1h,w,c
  8780   011202  6EDA               	movwf	fsr2h,c
  8781                           
  8782                           ;stkvar	_mask @ sp[(-12)+-3]
  8783   011204  0EF1               	movlw	-15
  8784   011206  CFE3 FFE9          	movff	plusw1,fsr0l
  8785   01120A  0EF2               	movlw	-14
  8786   01120C  CFE3 FFEA          	movff	plusw1,fsr0h
  8787   011210  CFEE F035          	movff	postinc0,btemp+8
  8788   011214  CFEE F036          	movff	postinc0,btemp+9
  8789   011218  CFEE F037          	movff	postinc0,btemp+10
  8790   01121C  CFEE F038          	movff	postinc0,btemp+11
  8791   011220  0E11               	movlw	17
  8792   011222  EF18  F089         	goto	u2490
  8793   011226                     u2495:
  8794   011226  90D8               	bcf	status,0,c
  8795   011228  3238               	rrcf	(btemp+11)^0,f,c
  8796   01122A  3237               	rrcf	(btemp+10)^0,f,c
  8797   01122C  3236               	rrcf	(btemp+9)^0,f,c
  8798   01122E  3235               	rrcf	(btemp+8)^0,f,c
  8799   011230                     u2490:
  8800   011230  2EE8               	decfsz	wreg,f,c
  8801   011232  EF13  F089         	goto	u2495
  8802   011236  5035               	movf	(btemp+8)^0,w,c
  8803   011238  6EDF               	movwf	indf2,c
  8804   01123A                     
  8805                           ;can/can.c: 1052:       mObj.byte[3] = (uint8_t)(mask->MID >> 24) | (uint8_t)(mask->MSID
      +                          11 << 5) | (uint8_t)(mask->MIDE << 6);
  8806                           ;stkvar	_mObj @ sp[(-12)+4]
  8807   01123A  0EFB               	movlw	251
  8808   01123C  24E1               	addwf	fsr1l,w,c
  8809   01123E  6ED9               	movwf	fsr2l,c
  8810   011240  0EFF               	movlw	255
  8811   011242  20E2               	addwfc	fsr1h,w,c
  8812   011244  6EDA               	movwf	fsr2h,c
  8813                           
  8814                           ;stkvar	_mask @ sp[(-12)+-3]
  8815   011246  0EF1               	movlw	-15
  8816   011248  CFE3 F037          	movff	plusw1,btemp+10
  8817   01124C  0EF2               	movlw	-14
  8818   01124E  CFE3 F038          	movff	plusw1,btemp+11
  8819   011252  0E05               	movlw	5
  8820   011254  2437               	addwf	(btemp+10)^0,w,c
  8821   011256  6EE9               	movwf	fsr0l,c
  8822   011258  0E00               	movlw	0
  8823   01125A  2038               	addwfc	(btemp+11)^0,w,c
  8824   01125C  6EEA               	movwf	fsr0h,c
  8825   01125E  50EF               	movf	indf0,w,c
  8826   011260  6E38               	movwf	(btemp+11)^0,c
  8827   011262  0E06               	movlw	6
  8828   011264  6E2D               	movwf	btemp^0,c
  8829   011266                     u2505:
  8830   011266  90D8               	bcf	status,0,c
  8831   011268  3638               	rlcf	(btemp+11)^0,f,c
  8832   01126A  2E2D               	decfsz	btemp^0,f,c
  8833   01126C  EF33  F089         	goto	u2505
  8834                           
  8835                           ;stkvar	_mask @ sp[(-12)+-3]
  8836   011270  0EF1               	movlw	-15
  8837   011272  CFE3 F035          	movff	plusw1,btemp+8
  8838   011276  0EF2               	movlw	-14
  8839   011278  CFE3 F036          	movff	plusw1,btemp+9
  8840   01127C  0E04               	movlw	4
  8841   01127E  2435               	addwf	(btemp+8)^0,w,c
  8842   011280  6EE9               	movwf	fsr0l,c
  8843   011282  0E00               	movlw	0
  8844   011284  2036               	addwfc	(btemp+9)^0,w,c
  8845   011286  6EEA               	movwf	fsr0h,c
  8846   011288  50EF               	movf	indf0,w,c
  8847   01128A  6E37               	movwf	(btemp+10)^0,c
  8848   01128C  0E05               	movlw	5
  8849   01128E  6E2D               	movwf	btemp^0,c
  8850   011290                     u2515:
  8851   011290  90D8               	bcf	status,0,c
  8852   011292  3637               	rlcf	(btemp+10)^0,f,c
  8853   011294  2E2D               	decfsz	btemp^0,f,c
  8854   011296  EF48  F089         	goto	u2515
  8855                           
  8856                           ;stkvar	_mask @ sp[(-12)+-3]
  8857   01129A  0EF1               	movlw	-15
  8858   01129C  CFE3 FFE9          	movff	plusw1,fsr0l
  8859   0112A0  0EF2               	movlw	-14
  8860   0112A2  CFE3 FFEA          	movff	plusw1,fsr0h
  8861   0112A6  CFEE F031          	movff	postinc0,btemp+4
  8862   0112AA  CFEE F032          	movff	postinc0,btemp+5
  8863   0112AE  CFEE F033          	movff	postinc0,btemp+6
  8864   0112B2  CFEE F034          	movff	postinc0,btemp+7
  8865   0112B6  0E19               	movlw	25
  8866   0112B8  EF63  F089         	goto	u2520
  8867   0112BC                     u2525:
  8868   0112BC  90D8               	bcf	status,0,c
  8869   0112BE  3234               	rrcf	(btemp+7)^0,f,c
  8870   0112C0  3233               	rrcf	(btemp+6)^0,f,c
  8871   0112C2  3232               	rrcf	(btemp+5)^0,f,c
  8872   0112C4  3231               	rrcf	(btemp+4)^0,f,c
  8873   0112C6                     u2520:
  8874   0112C6  2EE8               	decfsz	wreg,f,c
  8875   0112C8  EF5E  F089         	goto	u2525
  8876   0112CC  5031               	movf	(btemp+4)^0,w,c
  8877   0112CE  1037               	iorwf	(btemp+10)^0,w,c
  8878   0112D0  1038               	iorwf	(btemp+11)^0,w,c
  8879   0112D2  6EDF               	movwf	indf2,c
  8880                           
  8881                           ;can/can.c: 1053:     }
  8882   0112D4  EF31  F08A         	goto	l4650
  8883   0112D8                     l4638:
  8884                           
  8885                           ;can/can.c: 1055:     {;can/can.c: 1056:       uint32_t temp32 = ((mask->MID & 0x0003FFF
      +                          F) << 11) |
  8886                           ;stkvar	_mask @ sp[(-12)+-3]
  8887   0112D8  0EF1               	movlw	-15
  8888   0112DA  CFE3 FFD9          	movff	plusw1,fsr2l
  8889   0112DE  0EF2               	movlw	-14
  8890   0112E0  CFE3 FFDA          	movff	plusw1,fsr2h
  8891   0112E4  CFDE F035          	movff	postinc2,btemp+8
  8892   0112E8  CFDE F036          	movff	postinc2,btemp+9
  8893   0112EC  CFDE F037          	movff	postinc2,btemp+10
  8894   0112F0  CFDE F038          	movff	postinc2,btemp+11
  8895   0112F4  0E13               	movlw	19
  8896   0112F6  EF82  F089         	goto	u2530
  8897   0112FA                     u2535:
  8898   0112FA  90D8               	bcf	status,0,c
  8899   0112FC  3238               	rrcf	(btemp+11)^0,f,c
  8900   0112FE  3237               	rrcf	(btemp+10)^0,f,c
  8901   011300  3236               	rrcf	(btemp+9)^0,f,c
  8902   011302  3235               	rrcf	(btemp+8)^0,f,c
  8903   011304                     u2530:
  8904   011304  2EE8               	decfsz	wreg,f,c
  8905   011306  EF7D  F089         	goto	u2535
  8906   01130A  0EFF               	movlw	255
  8907   01130C  1435               	andwf	(btemp+8)^0,w,c
  8908   01130E  6E31               	movwf	(btemp+4)^0,c
  8909   011310  0E07               	movlw	7
  8910   011312  1436               	andwf	(btemp+9)^0,w,c
  8911   011314  6E32               	movwf	(btemp+5)^0,c
  8912   011316  0E00               	movlw	0
  8913   011318  1437               	andwf	(btemp+10)^0,w,c
  8914   01131A  6E33               	movwf	(btemp+6)^0,c
  8915   01131C  0E00               	movlw	0
  8916   01131E  1438               	andwf	(btemp+11)^0,w,c
  8917   011320  6E34               	movwf	(btemp+7)^0,c
  8918                           
  8919                           ;stkvar	_mask @ sp[(-12)+-3]
  8920   011322  0EF1               	movlw	-15
  8921   011324  CFE3 FFD9          	movff	plusw1,fsr2l
  8922   011328  0EF2               	movlw	-14
  8923   01132A  CFE3 FFDA          	movff	plusw1,fsr2h
  8924   01132E  0EFF               	movlw	255
  8925   011330  14DE               	andwf	postinc2,w,c
  8926   011332  6E35               	movwf	(btemp+8)^0,c
  8927   011334  0EFF               	movlw	255
  8928   011336  14DE               	andwf	postinc2,w,c
  8929   011338  6E36               	movwf	(btemp+9)^0,c
  8930   01133A  0E03               	movlw	3
  8931   01133C  14DE               	andwf	postinc2,w,c
  8932   01133E  6E37               	movwf	(btemp+10)^0,c
  8933   011340  0E00               	movlw	0
  8934   011342  14DE               	andwf	postinc2,w,c
  8935   011344  6E38               	movwf	(btemp+11)^0,c
  8936   011346  0E0B               	movlw	11
  8937   011348                     u2545:
  8938   011348  90D8               	bcf	status,0,c
  8939   01134A  3635               	rlcf	(btemp+8)^0,f,c
  8940   01134C  3636               	rlcf	(btemp+9)^0,f,c
  8941   01134E  3637               	rlcf	(btemp+10)^0,f,c
  8942   011350  3638               	rlcf	(btemp+11)^0,f,c
  8943   011352  2EE8               	decfsz	wreg,f,c
  8944   011354  EFA4  F089         	goto	u2545
  8945   011358  5031               	movf	(btemp+4)^0,w,c
  8946   01135A  1035               	iorwf	(btemp+8)^0,w,c
  8947   01135C  6E2D               	movwf	btemp^0,c
  8948   01135E  5032               	movf	(btemp+5)^0,w,c
  8949   011360  1036               	iorwf	(btemp+9)^0,w,c
  8950   011362  6E2E               	movwf	(btemp+1)^0,c
  8951   011364  5033               	movf	(btemp+6)^0,w,c
  8952   011366  1037               	iorwf	(btemp+10)^0,w,c
  8953   011368  6E2F               	movwf	(btemp+2)^0,c
  8954   01136A  5034               	movf	(btemp+7)^0,w,c
  8955   01136C  1038               	iorwf	(btemp+11)^0,w,c
  8956   01136E  6E30               	movwf	(btemp+3)^0,c
  8957                           
  8958                           ;stkvar	_temp32 @ sp[(-12)+0]
  8959   011370  0EF4               	movlw	-12
  8960   011372  C02D  FFE3         	movff	btemp,plusw1
  8961   011376  0EF5               	movlw	-11
  8962   011378  C02E  FFE3         	movff	btemp+1,plusw1
  8963   01137C  0EF6               	movlw	-10
  8964   01137E  C02F  FFE3         	movff	btemp+2,plusw1
  8965   011382  0EF7               	movlw	-9
  8966   011384  C030  FFE3         	movff	btemp+3,plusw1
  8967   011388                     
  8968                           ;can/can.c: 1058:       temp32 = temp32 & 0x1FFFFFFF;
  8969                           ;stkvar	_temp32 @ sp[(-12)+0]
  8970   011388  50E1               	movf	fsr1l,w,c
  8971   01138A  0FF4               	addlw	-12
  8972   01138C  6ED9               	movwf	fsr2l,c
  8973   01138E  50E2               	movf	fsr1h,w,c
  8974   011390  6EDA               	movwf	fsr2h,c
  8975   011392  0EFF               	movlw	255
  8976   011394  22DA               	addwfc	fsr2h,f,c
  8977   011396  0EFF               	movlw	255
  8978   011398  16DE               	andwf	postinc2,f,c
  8979   01139A  0EFF               	movlw	255
  8980   01139C  16DE               	andwf	postinc2,f,c
  8981   01139E  0EFF               	movlw	255
  8982   0113A0  16DE               	andwf	postinc2,f,c
  8983   0113A2  0E1F               	movlw	31
  8984   0113A4  16DE               	andwf	postinc2,f,c
  8985   0113A6                     
  8986                           ;can/can.c: 1059:       mObj.byte[0] = (uint8_t)temp32;
  8987                           ;stkvar	_temp32 @ sp[(-12)+0]
  8988                           ;stkvar	_mObj @ sp[(-12)+4]
  8989   0113A6  0EF4               	movlw	-12
  8990   0113A8  CFE3 F02D          	movff	plusw1,btemp
  8991   0113AC  0EF8               	movlw	-8
  8992   0113AE  C02D  FFE3         	movff	btemp,plusw1
  8993   0113B2                     
  8994                           ;can/can.c: 1060:       mObj.byte[1] = (uint8_t)(temp32 >> 8);
  8995                           ;stkvar	_temp32 @ sp[(-12)+0]
  8996   0113B2  0EF5               	movlw	245
  8997   0113B4  24E1               	addwf	fsr1l,w,c
  8998   0113B6  6ED9               	movwf	fsr2l,c
  8999   0113B8  0EFF               	movlw	255
  9000   0113BA  20E2               	addwfc	fsr1h,w,c
  9001   0113BC  6EDA               	movwf	fsr2h,c
  9002                           
  9003                           ;stkvar	_mObj @ sp[(-12)+4]
  9004   0113BE  0EF9               	movlw	249
  9005   0113C0  24E1               	addwf	fsr1l,w,c
  9006   0113C2  6EE9               	movwf	fsr0l,c
  9007   0113C4  0EFF               	movlw	255
  9008   0113C6  20E2               	addwfc	fsr1h,w,c
  9009   0113C8  6EEA               	movwf	fsr0h,c
  9010   0113CA  CFDF FFEF          	movff	indf2,indf0
  9011   0113CE                     
  9012                           ;can/can.c: 1061:       mObj.byte[2] = (uint8_t)(temp32 >> 16);
  9013                           ;stkvar	_temp32 @ sp[(-12)+0]
  9014   0113CE  0EF6               	movlw	246
  9015   0113D0  24E1               	addwf	fsr1l,w,c
  9016   0113D2  6ED9               	movwf	fsr2l,c
  9017   0113D4  0EFF               	movlw	255
  9018   0113D6  20E2               	addwfc	fsr1h,w,c
  9019   0113D8  6EDA               	movwf	fsr2h,c
  9020                           
  9021                           ;stkvar	_mObj @ sp[(-12)+4]
  9022   0113DA  0EFA               	movlw	250
  9023   0113DC  24E1               	addwf	fsr1l,w,c
  9024   0113DE  6EE9               	movwf	fsr0l,c
  9025   0113E0  0EFF               	movlw	255
  9026   0113E2  20E2               	addwfc	fsr1h,w,c
  9027   0113E4  6EEA               	movwf	fsr0h,c
  9028   0113E6  CFDF FFEF          	movff	indf2,indf0
  9029   0113EA                     
  9030                           ;can/can.c: 1062:       mObj.byte[3] = (uint8_t)(temp32 >> 24) | (uint8_t)(mask->MSID11 
      +                          << 5) | (uint8_t)(mask->MIDE << 6);
  9031                           ;stkvar	_mObj @ sp[(-12)+4]
  9032   0113EA  0EFB               	movlw	251
  9033   0113EC  24E1               	addwf	fsr1l,w,c
  9034   0113EE  6ED9               	movwf	fsr2l,c
  9035   0113F0  0EFF               	movlw	255
  9036   0113F2  20E2               	addwfc	fsr1h,w,c
  9037   0113F4  6EDA               	movwf	fsr2h,c
  9038                           
  9039                           ;stkvar	_temp32 @ sp[(-12)+0]
  9040   0113F6  0EF7               	movlw	247
  9041   0113F8  24E1               	addwf	fsr1l,w,c
  9042   0113FA  6EE9               	movwf	fsr0l,c
  9043   0113FC  0EFF               	movlw	255
  9044   0113FE  20E2               	addwfc	fsr1h,w,c
  9045   011400  6EEA               	movwf	fsr0h,c
  9046   011402  50EF               	movf	indf0,w,c
  9047   011404  6E38               	movwf	(btemp+11)^0,c
  9048                           
  9049                           ;stkvar	_mask @ sp[(-12)+-3]
  9050   011406  0EF1               	movlw	-15
  9051   011408  CFE3 F035          	movff	plusw1,btemp+8
  9052   01140C  0EF2               	movlw	-14
  9053   01140E  CFE3 F036          	movff	plusw1,btemp+9
  9054   011412  0E05               	movlw	5
  9055   011414  2435               	addwf	(btemp+8)^0,w,c
  9056   011416  6EE9               	movwf	fsr0l,c
  9057   011418  0E00               	movlw	0
  9058   01141A  2036               	addwfc	(btemp+9)^0,w,c
  9059   01141C  6EEA               	movwf	fsr0h,c
  9060   01141E  50EF               	movf	indf0,w,c
  9061   011420  6E37               	movwf	(btemp+10)^0,c
  9062   011422  0E06               	movlw	6
  9063   011424  6E2D               	movwf	btemp^0,c
  9064   011426                     u2555:
  9065   011426  90D8               	bcf	status,0,c
  9066   011428  3637               	rlcf	(btemp+10)^0,f,c
  9067   01142A  2E2D               	decfsz	btemp^0,f,c
  9068   01142C  EF13  F08A         	goto	u2555
  9069                           
  9070                           ;stkvar	_mask @ sp[(-12)+-3]
  9071   011430  0EF1               	movlw	-15
  9072   011432  CFE3 F035          	movff	plusw1,btemp+8
  9073   011436  0EF2               	movlw	-14
  9074   011438  CFE3 F036          	movff	plusw1,btemp+9
  9075   01143C  0E04               	movlw	4
  9076   01143E  2435               	addwf	(btemp+8)^0,w,c
  9077   011440  6EE9               	movwf	fsr0l,c
  9078   011442  0E00               	movlw	0
  9079   011444  2036               	addwfc	(btemp+9)^0,w,c
  9080   011446  6EEA               	movwf	fsr0h,c
  9081   011448  50EF               	movf	indf0,w,c
  9082   01144A  6E36               	movwf	(btemp+9)^0,c
  9083   01144C  0E05               	movlw	5
  9084   01144E  6E2D               	movwf	btemp^0,c
  9085   011450                     u2565:
  9086   011450  90D8               	bcf	status,0,c
  9087   011452  3636               	rlcf	(btemp+9)^0,f,c
  9088   011454  2E2D               	decfsz	btemp^0,f,c
  9089   011456  EF28  F08A         	goto	u2565
  9090   01145A  5036               	movf	(btemp+9)^0,w,c
  9091   01145C  1037               	iorwf	(btemp+10)^0,w,c
  9092   01145E  1038               	iorwf	(btemp+11)^0,w,c
  9093   011460  6EDF               	movwf	indf2,c
  9094   011462                     l4650:
  9095                           
  9096                           ;can/can.c: 1065:     a = (((0x050 +((3*4)*CAN_FIFO_TOTAL_CHANNELS))+CAN_FIFO_TOTAL_CHAN
      +                          NELS)+4) + (filter * (2*4));
  9097                           ;stkvar	_filter @ sp[(-12)+-1]
  9098   011462  0EF3               	movlw	-13
  9099   011464  50E3               	movf	plusw1,w,c
  9100   011466  0D08               	mullw	8
  9101   011468  CFF3 F037          	movff	prodl,btemp+10
  9102   01146C  CFF4 F038          	movff	prodh,btemp+11
  9103   011470  0EF4               	movlw	244
  9104   011472  2437               	addwf	(btemp+10)^0,w,c
  9105   011474  6E35               	movwf	(btemp+8)^0,c
  9106   011476  0E01               	movlw	1
  9107   011478  2038               	addwfc	(btemp+11)^0,w,c
  9108   01147A  6E36               	movwf	(btemp+9)^0,c
  9109                           
  9110                           ;stkvar	_a @ sp[(-12)+10]
  9111   01147C  0EFE               	movlw	-2
  9112   01147E  C035  FFE3         	movff	btemp+8,plusw1
  9113   011482  0EFF               	movlw	-1
  9114   011484  C036  FFE3         	movff	btemp+9,plusw1
  9115   011488                     
  9116                           ;stkvar	_mObj @ sp[(-12)+4]
  9117   011488  0EF8               	movlw	-8
  9118   01148A  CFE3 FFE6          	movff	plusw1,postinc1
  9119   01148E  CFE3 FFE6          	movff	plusw1,postinc1
  9120   011492  CFE3 FFE6          	movff	plusw1,postinc1
  9121   011496  CFE3 FFE6          	movff	plusw1,postinc1
  9122                           
  9123                           ;stkvar	_a @ sp[(-16)+10]
  9124   01149A  0EFA               	movlw	-6
  9125   01149C  CFE3 FFE6          	movff	plusw1,postinc1
  9126   0114A0  CFE3 FFE6          	movff	plusw1,postinc1
  9127   0114A4  ECA8  F099         	call	_DRV_CANFDSPI_WriteWord	;wreg free
  9128   0114A8                     
  9129                           ; _DRV_CANFDSPI_FilterMaskConfigure: autosize = 12, savesize = 0, parsavesize = 0, temps
      +                          ize = 0 parsize = 4, argsize = 4, vargsize = 0
  9130   0114A8  0EF0               	movlw	240
  9131   0114AA  26E1               	addwf	fsr1l,f,c
  9132   0114AC  0EFF               	movlw	255
  9133   0114AE  22E2               	addwfc	fsr1h,f,c
  9134   0114B0  0012               	return		;funcret
  9135   0114B2                     __end_of_DRV_CANFDSPI_FilterMaskConfigure:
  9136                           	callstack 0
  9137                           
  9138 ;; *************** function _DRV_CANFDSPI_FilterDisable *****************
  9139 ;; Defined at:
  9140 ;;		line 1121 in file "can/can.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;  filter          1  [STACK] enum E5325
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;  a               2  [STACK] unsigned short 
  9145 ;;  spiTransferE    1  [STACK] char 
  9146 ;;  fCtrl           1  [STACK] struct _REG_CiFLTCON_BYT
  9147 ;; Return value:  Size  Location     Type
  9148 ;;                  1  [STACK] char 
  9149 ;; Registers used:
  9150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  9151 ;; Tracked objects:
  9152 ;;		On entry : 0/0
  9153 ;;		On exit  : 0/0
  9154 ;;		Unchanged: 0/0
  9155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9160 ;;Total ram usage:        0 bytes
  9161 ;; Hardware stack levels used: 1
  9162 ;; Hardware stack levels required when called: 9
  9163 ;; This function calls:
  9164 ;;		_DRV_CANFDSPI_ReadByte
  9165 ;;		_DRV_CANFDSPI_WriteByte
  9166 ;; This function is called by:
  9167 ;;		_CanSetFilter
  9168 ;; This function uses a reentrant model
  9169 ;;
  9170                           
  9171                           	psect	text44
  9172   013E18                     __ptext44:
  9173                           	callstack 0
  9174   013E18                     _DRV_CANFDSPI_FilterDisable:
  9175                           	callstack 0
  9176                           
  9177                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9178   013E18  52E6               	movf	postinc1,f,c
  9179   013E1A  52E6               	movf	postinc1,f,c
  9180   013E1C  52E6               	movf	postinc1,f,c
  9181   013E1E  52E6               	movf	postinc1,f,c
  9182   013E20                     
  9183                           ;can/can.c: 1128:     a = (0x050 +((3*4)*CAN_FIFO_TOTAL_CHANNELS)) + filter;
  9184                           ;stkvar	_filter @ sp[(-4)+-1]
  9185   013E20  0EFB               	movlw	-5
  9186   013E22  CFE3 F038          	movff	plusw1,btemp+11
  9187   013E26  0ED0               	movlw	208
  9188   013E28  2438               	addwf	(btemp+11)^0,w,c
  9189   013E2A  6E35               	movwf	(btemp+8)^0,c
  9190   013E2C  6A36               	clrf	(btemp+9)^0,c
  9191   013E2E  0E01               	movlw	1
  9192   013E30  2236               	addwfc	(btemp+9)^0,f,c
  9193                           
  9194                           ;stkvar	_a @ sp[(-4)+0]
  9195   013E32  0EFC               	movlw	-4
  9196   013E34  C035  FFE3         	movff	btemp+8,plusw1
  9197   013E38  0EFD               	movlw	-3
  9198   013E3A  C036  FFE3         	movff	btemp+9,plusw1
  9199   013E3E                     
  9200                           ;can/can.c: 1130:     spiTransferError = DRV_CANFDSPI_ReadByte( a, &fCtrl.byte);
  9201                           ;stkvar	_fCtrl @ sp[(-4)+3]
  9202   013E3E  0EFF               	movlw	255
  9203   013E40  24E1               	addwf	fsr1l,w,c
  9204   013E42  6E2D               	movwf	btemp^0,c
  9205   013E44  0EFF               	movlw	255
  9206   013E46  20E2               	addwfc	fsr1h,w,c
  9207   013E48  6E2E               	movwf	(btemp+1)^0,c
  9208   013E4A  C02D  FFE6         	movff	btemp,postinc1
  9209   013E4E  C02E  FFE6         	movff	btemp+1,postinc1
  9210                           
  9211                           ;stkvar	_a @ sp[(-6)+0]
  9212   013E52  0EFA               	movlw	-6
  9213   013E54  CFE3 FFE6          	movff	plusw1,postinc1
  9214   013E58  CFE3 FFE6          	movff	plusw1,postinc1
  9215   013E5C  ECB3  F0A0         	call	_DRV_CANFDSPI_ReadByte	;wreg free
  9216                           
  9217                           ;stkvar	_spiTransferError @ sp[(-4)+2]
  9218   013E60  0EFE               	movlw	-2
  9219   013E62  C02D  FFE3         	movff	btemp,plusw1
  9220   013E66                     
  9221                           ;can/can.c: 1131:     if (spiTransferError) {
  9222                           ;stkvar	_spiTransferError @ sp[(-4)+2]
  9223   013E66  0EFE               	movlw	-2
  9224   013E68  50E3               	movf	plusw1,w,c
  9225   013E6A  B4D8               	btfsc	status,2,c
  9226   013E6C  EF3A  F09F         	goto	u2381
  9227   013E70  EF3C  F09F         	goto	u2380
  9228   013E74                     u2381:
  9229   013E74  EF3E  F09F         	goto	l4584
  9230   013E78                     u2380:
  9231   013E78  EF50  F09F         	goto	l336
  9232   013E7C                     l4584:
  9233                           
  9234                           ;can/can.c: 1136:     fCtrl.bF.Enable = 0;
  9235                           ;stkvar	_fCtrl @ sp[(-4)+3]
  9236   013E7C  50E1               	movf	fsr1l,w,c
  9237   013E7E  0FFF               	addlw	-1
  9238   013E80  6ED9               	movwf	fsr2l,c
  9239   013E82  50E2               	movf	fsr1h,w,c
  9240   013E84  6EDA               	movwf	fsr2h,c
  9241   013E86  0EFF               	movlw	255
  9242   013E88  22DA               	addwfc	fsr2h,f,c
  9243   013E8A  9EDF               	bcf	indf2,7,c
  9244   013E8C                     
  9245                           ;stkvar	_fCtrl @ sp[(-4)+3]
  9246   013E8C  0EFF               	movlw	-1
  9247   013E8E  50E3               	movf	plusw1,w,c
  9248   013E90  6EE6               	movwf	postinc1,c
  9249                           
  9250                           ;stkvar	_a @ sp[(-5)+0]
  9251   013E92  0EFB               	movlw	-5
  9252   013E94  CFE3 FFE6          	movff	plusw1,postinc1
  9253   013E98  CFE3 FFE6          	movff	plusw1,postinc1
  9254   013E9C  EC40  F0A1         	call	_DRV_CANFDSPI_WriteByte	;wreg free
  9255   013EA0                     l336:
  9256                           
  9257                           ; _DRV_CANFDSPI_FilterDisable: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0
      +                           parsize = 1, argsize = 1, vargsize = 0
  9258   013EA0  0EFB               	movlw	251
  9259   013EA2  26E1               	addwf	fsr1l,f,c
  9260   013EA4  0EFF               	movlw	255
  9261   013EA6  22E2               	addwfc	fsr1h,f,c
  9262   013EA8  0012               	return		;funcret
  9263   013EAA                     __end_of_DRV_CANFDSPI_FilterDisable:
  9264                           	callstack 0
  9265                           
  9266 ;; *************** function _CanInit *****************
  9267 ;; Defined at:
  9268 ;;		line 156 in file "can/can.c"
  9269 ;; Parameters:    Size  Location     Type
  9270 ;;  bitTime         1  [STACK] enum E5607
  9271 ;;  withISR         1  [STACK] _Bool 
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;  txqConfig       4  [STACK] struct _CAN_TX_QUEUE_CON
  9274 ;;  config          3  [STACK] struct _CAN_CONFIG
  9275 ;;  rxfConfig       3  [STACK] struct _CAN_RX_FIFO_CONF
  9276 ;;  txfConfig       2  [STACK] struct _CAN_TX_FIFO_CONF
  9277 ;;  tefConfig       1  [STACK] struct _CAN_TEF_CONFIG
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  1  [STACK] void 
  9280 ;; Registers used:
  9281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9291 ;;Total ram usage:        0 bytes
  9292 ;; Hardware stack levels used: 1
  9293 ;; Hardware stack levels required when called: 10
  9294 ;; This function calls:
  9295 ;;		_DRV_CANFDSPI_BitTimeConfigureNominal40MHz
  9296 ;;		_DRV_CANFDSPI_Configure
  9297 ;;		_DRV_CANFDSPI_ConfigureObjectReset
  9298 ;;		_DRV_CANFDSPI_ModuleEventEnable
  9299 ;;		_DRV_CANFDSPI_OperationModeSelect
  9300 ;;		_DRV_CANFDSPI_ReceiveChannelConfigure
  9301 ;;		_DRV_CANFDSPI_Reset
  9302 ;;		_DRV_CANFDSPI_TefConfigure
  9303 ;;		_DRV_CANFDSPI_TimeStampEnable
  9304 ;;		_DRV_CANFDSPI_TimeStampPrescalerSet
  9305 ;;		_DRV_CANFDSPI_TimeStampSet
  9306 ;;		_DRV_CANFDSPI_TransmitChannelConfigure
  9307 ;;		_DRV_CANFDSPI_TransmitChannelConfigureObjectReset
  9308 ;;		_DRV_CANFDSPI_TransmitQueueConfigure
  9309 ;;		_DRV_CANFDSPI_TransmitQueueConfigureObjectReset
  9310 ;; This function is called by:
  9311 ;;		_main
  9312 ;; This function uses a reentrant model
  9313 ;;
  9314                           
  9315                           	psect	text45
  9316   011E64                     __ptext45:
  9317                           	callstack 0
  9318   011E64                     _CanInit:
  9319                           	callstack 0
  9320                           
  9321                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9322   011E64  0E0D               	movlw	13
  9323   011E66  26E1               	addwf	fsr1l,f,c
  9324   011E68  0E00               	movlw	0
  9325   011E6A  22E2               	addwfc	fsr1h,f,c
  9326   011E6C                     
  9327                           ;can/can.c: 156: void CanInit(CAN_BITTIME_SETUP bitTime, _Bool withISR);can/can.c: 157: 
      +                          {;can/can.c: 158:   TRISGbits.TRISG4 = 0;
  9328   011E6C  9898               	bcf	152,4,c	;volatile
  9329                           
  9330                           ;can/can.c: 159:   LATGbits.LATG4 = 1;
  9331   011E6E  888F               	bsf	143,4,c	;volatile
  9332   011E70                     
  9333                           ;can/can.c: 160:   DRV_CANFDSPI_Reset();
  9334   011E70  EC58  F0A2         	call	_DRV_CANFDSPI_Reset	;wreg free
  9335   011E74                     
  9336                           ;can/can.c: 161:   DRV_CANFDSPI_BitTimeConfigureNominal40MHz(bitTime);
  9337                           ;stkvar	_bitTime @ sp[(-13)+-1]
  9338   011E74  0EF2               	movlw	-14
  9339   011E76  50E3               	movf	plusw1,w,c
  9340   011E78  6EE6               	movwf	postinc1,c
  9341   011E7A  EC0C  F08E         	call	_DRV_CANFDSPI_BitTimeConfigureNominal40MHz	;wreg free
  9342   011E7E                     
  9343                           ;can/can.c: 163:     CAN_CONFIG config;;can/can.c: 164:     DRV_CANFDSPI_ConfigureObject
      +                          Reset(&config);
  9344                           ;stkvar	_config @ sp[(-13)+4]
  9345   011E7E  0EF7               	movlw	247
  9346   011E80  24E1               	addwf	fsr1l,w,c
  9347   011E82  6E2D               	movwf	btemp^0,c
  9348   011E84  0EFF               	movlw	255
  9349   011E86  20E2               	addwfc	fsr1h,w,c
  9350   011E88  6E2E               	movwf	(btemp+1)^0,c
  9351   011E8A  C02D  FFE6         	movff	btemp,postinc1
  9352   011E8E  C02E  FFE6         	movff	btemp+1,postinc1
  9353   011E92  ECDD  F08C         	call	_DRV_CANFDSPI_ConfigureObjectReset	;wreg free
  9354   011E96                     
  9355                           ;can/can.c: 165:     config.IsoCrcEnable = 1;
  9356                           ;stkvar	_config @ sp[(-13)+4]
  9357   011E96  50E1               	movf	fsr1l,w,c
  9358   011E98  0FF7               	addlw	-9
  9359   011E9A  6ED9               	movwf	fsr2l,c
  9360   011E9C  50E2               	movf	fsr1h,w,c
  9361   011E9E  6EDA               	movwf	fsr2h,c
  9362   011EA0  0EFF               	movlw	255
  9363   011EA2  22DA               	addwfc	fsr2h,f,c
  9364   011EA4  8ADF               	bsf	indf2,5,c
  9365   011EA6                     
  9366                           ;can/can.c: 166:     config.StoreInTEF = 1;
  9367                           ;stkvar	_config @ sp[(-13)+4]
  9368   011EA6  0EF8               	movlw	248
  9369   011EA8  24E1               	addwf	fsr1l,w,c
  9370   011EAA  6ED9               	movwf	fsr2l,c
  9371   011EAC  0EFF               	movlw	255
  9372   011EAE  20E2               	addwfc	fsr1h,w,c
  9373   011EB0  6EDA               	movwf	fsr2h,c
  9374   011EB2  8CDF               	bsf	indf2,6,c
  9375   011EB4                     
  9376                           ;can/can.c: 167:     config.TXQEnable = 1;
  9377                           ;stkvar	_config @ sp[(-13)+4]
  9378   011EB4  0EF8               	movlw	248
  9379   011EB6  24E1               	addwf	fsr1l,w,c
  9380   011EB8  6ED9               	movwf	fsr2l,c
  9381   011EBA  0EFF               	movlw	255
  9382   011EBC  20E2               	addwfc	fsr1h,w,c
  9383   011EBE  6EDA               	movwf	fsr2h,c
  9384   011EC0  8EDF               	bsf	indf2,7,c
  9385   011EC2                     
  9386                           ;can/can.c: 168:     DRV_CANFDSPI_Configure(&config);
  9387                           ;stkvar	_config @ sp[(-13)+4]
  9388   011EC2  0EF7               	movlw	247
  9389   011EC4  24E1               	addwf	fsr1l,w,c
  9390   011EC6  6E2D               	movwf	btemp^0,c
  9391   011EC8  0EFF               	movlw	255
  9392   011ECA  20E2               	addwfc	fsr1h,w,c
  9393   011ECC  6E2E               	movwf	(btemp+1)^0,c
  9394   011ECE  C02D  FFE6         	movff	btemp,postinc1
  9395   011ED2  C02E  FFE6         	movff	btemp+1,postinc1
  9396   011ED6  EC9D  F08B         	call	_DRV_CANFDSPI_Configure	;wreg free
  9397   011EDA                     
  9398                           ;can/can.c: 172:     CAN_TEF_CONFIG tefConfig;;can/can.c: 173:     tefConfig.FifoSize = 
      +                          11;
  9399                           ;stkvar	_tefConfig @ sp[(-13)+12]
  9400   011EDA  50E1               	movf	fsr1l,w,c
  9401   011EDC  0FFF               	addlw	-1
  9402   011EDE  6ED9               	movwf	fsr2l,c
  9403   011EE0  50E2               	movf	fsr1h,w,c
  9404   011EE2  6EDA               	movwf	fsr2h,c
  9405   011EE4  0EFF               	movlw	255
  9406   011EE6  22DA               	addwfc	fsr2h,f,c
  9407   011EE8  50DF               	movf	223,w,c
  9408   011EEA  0BC1               	andlw	-63
  9409   011EEC  0916               	iorlw	22
  9410   011EEE  6EDF               	movwf	223,c
  9411   011EF0                     
  9412                           ;can/can.c: 174:     tefConfig.TimeStampEnable = 1;
  9413                           ;stkvar	_tefConfig @ sp[(-13)+12]
  9414   011EF0  50E1               	movf	fsr1l,w,c
  9415   011EF2  0FFF               	addlw	-1
  9416   011EF4  6ED9               	movwf	fsr2l,c
  9417   011EF6  50E2               	movf	fsr1h,w,c
  9418   011EF8  6EDA               	movwf	fsr2h,c
  9419   011EFA  0EFF               	movlw	255
  9420   011EFC  22DA               	addwfc	fsr2h,f,c
  9421   011EFE  80DF               	bsf	indf2,0,c
  9422   011F00                     
  9423                           ;can/can.c: 175:     DRV_CANFDSPI_TefConfigure(&tefConfig);
  9424                           ;stkvar	_tefConfig @ sp[(-13)+12]
  9425   011F00  0EFF               	movlw	255
  9426   011F02  24E1               	addwf	fsr1l,w,c
  9427   011F04  6E2D               	movwf	btemp^0,c
  9428   011F06  0EFF               	movlw	255
  9429   011F08  20E2               	addwfc	fsr1h,w,c
  9430   011F0A  6E2E               	movwf	(btemp+1)^0,c
  9431   011F0C  C02D  FFE6         	movff	btemp,postinc1
  9432   011F10  C02E  FFE6         	movff	btemp+1,postinc1
  9433   011F14  EC0F  F09C         	call	_DRV_CANFDSPI_TefConfigure	;wreg free
  9434   011F18                     
  9435                           ;can/can.c: 178:     CAN_TX_QUEUE_CONFIG txqConfig;;can/can.c: 179:     DRV_CANFDSPI_Tra
      +                          nsmitQueueConfigureObjectReset(&txqConfig);
  9436                           ;stkvar	_txqConfig @ sp[(-13)+0]
  9437   011F18  0EF3               	movlw	243
  9438   011F1A  24E1               	addwf	fsr1l,w,c
  9439   011F1C  6E2D               	movwf	btemp^0,c
  9440   011F1E  0EFF               	movlw	255
  9441   011F20  20E2               	addwfc	fsr1h,w,c
  9442   011F22  6E2E               	movwf	(btemp+1)^0,c
  9443   011F24  C02D  FFE6         	movff	btemp,postinc1
  9444   011F28  C02E  FFE6         	movff	btemp+1,postinc1
  9445   011F2C  EC4C  F098         	call	_DRV_CANFDSPI_TransmitQueueConfigureObjectReset	;wreg free
  9446   011F30                     
  9447                           ;can/can.c: 180:     txqConfig.TxPriority =1;
  9448                           ;stkvar	_txqConfig @ sp[(-13)+0]
  9449   011F30  0EF3               	movlw	-13
  9450   011F32  6AE3               	clrf	plusw1,c
  9451   011F34  2AE3               	incf	plusw1,f,c
  9452   011F36                     
  9453                           ;can/can.c: 181:     txqConfig.FifoSize = 7;
  9454                           ;stkvar	_txqConfig @ sp[(-13)+0]
  9455   011F36  0EF5               	movlw	245
  9456   011F38  24E1               	addwf	fsr1l,w,c
  9457   011F3A  6ED9               	movwf	fsr2l,c
  9458   011F3C  0EFF               	movlw	255
  9459   011F3E  20E2               	addwfc	fsr1h,w,c
  9460   011F40  6EDA               	movwf	fsr2h,c
  9461   011F42  0E07               	movlw	7
  9462   011F44  6EDF               	movwf	indf2,c
  9463   011F46                     
  9464                           ;can/can.c: 182:     txqConfig.PayLoadSize = CAN_PLSIZE_32;
  9465                           ;stkvar	_txqConfig @ sp[(-13)+0]
  9466   011F46  0EF6               	movlw	246
  9467   011F48  24E1               	addwf	fsr1l,w,c
  9468   011F4A  6ED9               	movwf	fsr2l,c
  9469   011F4C  0EFF               	movlw	255
  9470   011F4E  20E2               	addwfc	fsr1h,w,c
  9471   011F50  6EDA               	movwf	fsr2h,c
  9472   011F52  0E05               	movlw	5
  9473   011F54  6EDF               	movwf	indf2,c
  9474   011F56                     
  9475                           ;can/can.c: 183:     DRV_CANFDSPI_TransmitQueueConfigure(&txqConfig);
  9476                           ;stkvar	_txqConfig @ sp[(-13)+0]
  9477   011F56  0EF3               	movlw	243
  9478   011F58  24E1               	addwf	fsr1l,w,c
  9479   011F5A  6E2D               	movwf	btemp^0,c
  9480   011F5C  0EFF               	movlw	255
  9481   011F5E  20E2               	addwfc	fsr1h,w,c
  9482   011F60  6E2E               	movwf	(btemp+1)^0,c
  9483   011F62  C02D  FFE6         	movff	btemp,postinc1
  9484   011F66  C02E  FFE6         	movff	btemp+1,postinc1
  9485   011F6A  EC03  F096         	call	_DRV_CANFDSPI_TransmitQueueConfigure	;wreg free
  9486   011F6E                     
  9487                           ;can/can.c: 186:     CAN_TX_FIFO_CONFIG txfConfig;;can/can.c: 187:     DRV_CANFDSPI_Tran
      +                          smitChannelConfigureObjectReset(&txfConfig);
  9488                           ;stkvar	_txfConfig @ sp[(-13)+10]
  9489   011F6E  0EFD               	movlw	253
  9490   011F70  24E1               	addwf	fsr1l,w,c
  9491   011F72  6E2D               	movwf	btemp^0,c
  9492   011F74  0EFF               	movlw	255
  9493   011F76  20E2               	addwfc	fsr1h,w,c
  9494   011F78  6E2E               	movwf	(btemp+1)^0,c
  9495   011F7A  C02D  FFE6         	movff	btemp,postinc1
  9496   011F7E  C02E  FFE6         	movff	btemp+1,postinc1
  9497   011F82  ECA3  F096         	call	_DRV_CANFDSPI_TransmitChannelConfigureObjectReset	;wreg free
  9498   011F86                     
  9499                           ;can/can.c: 188:     txfConfig.FifoSize = 4;
  9500                           ;stkvar	_txfConfig @ sp[(-13)+10]
  9501   011F86  0EFE               	movlw	254
  9502   011F88  24E1               	addwf	fsr1l,w,c
  9503   011F8A  6ED9               	movwf	fsr2l,c
  9504   011F8C  0EFF               	movlw	255
  9505   011F8E  20E2               	addwfc	fsr1h,w,c
  9506   011F90  6EDA               	movwf	fsr2h,c
  9507   011F92  50DF               	movf	223,w,c
  9508   011F94  0BE0               	andlw	-32
  9509   011F96  0904               	iorlw	4
  9510   011F98  6EDF               	movwf	223,c
  9511   011F9A                     
  9512                           ;can/can.c: 189:     txfConfig.PayLoadSize = CAN_PLSIZE_64;
  9513                           ;stkvar	_txfConfig @ sp[(-13)+10]
  9514   011F9A  0EFE               	movlw	254
  9515   011F9C  24E1               	addwf	fsr1l,w,c
  9516   011F9E  6ED9               	movwf	fsr2l,c
  9517   011FA0  0EFF               	movlw	255
  9518   011FA2  20E2               	addwfc	fsr1h,w,c
  9519   011FA4  6EDA               	movwf	fsr2h,c
  9520   011FA6  0EE0               	movlw	224
  9521   011FA8  12DF               	iorwf	223,f,c
  9522   011FAA                     
  9523                           ;can/can.c: 190:     txfConfig.TxPriority = 0;
  9524                           ;stkvar	_txfConfig @ sp[(-13)+10]
  9525   011FAA  50E1               	movf	fsr1l,w,c
  9526   011FAC  0FFD               	addlw	-3
  9527   011FAE  6ED9               	movwf	fsr2l,c
  9528   011FB0  50E2               	movf	fsr1h,w,c
  9529   011FB2  6EDA               	movwf	fsr2h,c
  9530   011FB4  0EFF               	movlw	255
  9531   011FB6  22DA               	addwfc	fsr2h,f,c
  9532   011FB8  0EC1               	movlw	-63
  9533   011FBA  16DF               	andwf	223,f,c
  9534   011FBC                     
  9535                           ;can/can.c: 191:     DRV_CANFDSPI_TransmitChannelConfigure(CAN_FIFO_CH1,&txfConfig);
  9536                           ;stkvar	_txfConfig @ sp[(-13)+10]
  9537   011FBC  0EFD               	movlw	253
  9538   011FBE  24E1               	addwf	fsr1l,w,c
  9539   011FC0  6E2D               	movwf	btemp^0,c
  9540   011FC2  0EFF               	movlw	255
  9541   011FC4  20E2               	addwfc	fsr1h,w,c
  9542   011FC6  6E2E               	movwf	(btemp+1)^0,c
  9543   011FC8  C02D  FFE6         	movff	btemp,postinc1
  9544   011FCC  C02E  FFE6         	movff	btemp+1,postinc1
  9545   011FD0  0E01               	movlw	1
  9546   011FD2  6EE6               	movwf	postinc1,c
  9547   011FD4  ECEE  F091         	call	_DRV_CANFDSPI_TransmitChannelConfigure	;wreg free
  9548   011FD8                     
  9549                           ;can/can.c: 194:     CAN_RX_FIFO_CONFIG rxfConfig;;can/can.c: 195:     rxfConfig.FifoSiz
      +                          e = 15;
  9550                           ;stkvar	_rxfConfig @ sp[(-13)+7]
  9551   011FD8  0EFB               	movlw	251
  9552   011FDA  24E1               	addwf	fsr1l,w,c
  9553   011FDC  6ED9               	movwf	fsr2l,c
  9554   011FDE  0EFF               	movlw	255
  9555   011FE0  20E2               	addwfc	fsr1h,w,c
  9556   011FE2  6EDA               	movwf	fsr2h,c
  9557   011FE4  0E0F               	movlw	15
  9558   011FE6  6EDF               	movwf	indf2,c
  9559   011FE8                     
  9560                           ;can/can.c: 196:     rxfConfig.PayLoadSize = CAN_PLSIZE_64;
  9561                           ;stkvar	_rxfConfig @ sp[(-13)+7]
  9562   011FE8  0EFC               	movlw	252
  9563   011FEA  24E1               	addwf	fsr1l,w,c
  9564   011FEC  6ED9               	movwf	fsr2l,c
  9565   011FEE  0EFF               	movlw	255
  9566   011FF0  20E2               	addwfc	fsr1h,w,c
  9567   011FF2  6EDA               	movwf	fsr2h,c
  9568   011FF4  0E07               	movlw	7
  9569   011FF6  6EDF               	movwf	indf2,c
  9570   011FF8                     
  9571                           ;can/can.c: 197:     rxfConfig.RxTimeStampEnable = 1;
  9572                           ;stkvar	_rxfConfig @ sp[(-13)+7]
  9573   011FF8  0EFA               	movlw	-6
  9574   011FFA  6AE3               	clrf	plusw1,c
  9575   011FFC  2AE3               	incf	plusw1,f,c
  9576   011FFE                     
  9577                           ;can/can.c: 198:     DRV_CANFDSPI_ReceiveChannelConfigure(CAN_FIFO_CH2,&rxfConfig);
  9578                           ;stkvar	_rxfConfig @ sp[(-13)+7]
  9579   011FFE  0EFA               	movlw	250
  9580   012000  24E1               	addwf	fsr1l,w,c
  9581   012002  6E2D               	movwf	btemp^0,c
  9582   012004  0EFF               	movlw	255
  9583   012006  20E2               	addwfc	fsr1h,w,c
  9584   012008  6E2E               	movwf	(btemp+1)^0,c
  9585   01200A  C02D  FFE6         	movff	btemp,postinc1
  9586   01200E  C02E  FFE6         	movff	btemp+1,postinc1
  9587   012012  0E02               	movlw	2
  9588   012014  6EE6               	movwf	postinc1,c
  9589   012016  EC62  F095         	call	_DRV_CANFDSPI_ReceiveChannelConfigure	;wreg free
  9590   01201A                     
  9591                           ;can/can.c: 200:     DRV_CANFDSPI_TimeStampPrescalerSet(39);
  9592   01201A  0E27               	movlw	39
  9593   01201C  6EE6               	movwf	postinc1,c
  9594   01201E  0E00               	movlw	0
  9595   012020  6EE6               	movwf	postinc1,c
  9596   012022  ECA6  F0A2         	call	_DRV_CANFDSPI_TimeStampPrescalerSet	;wreg free
  9597   012026                     
  9598                           ;can/can.c: 201:     DRV_CANFDSPI_TimeStampSet(0);
  9599   012026  0E00               	movlw	0
  9600   012028  6EE6               	movwf	postinc1,c
  9601   01202A  0E00               	movlw	0
  9602   01202C  6EE6               	movwf	postinc1,c
  9603   01202E  0E00               	movlw	0
  9604   012030  6EE6               	movwf	postinc1,c
  9605   012032  0E00               	movlw	0
  9606   012034  6EE6               	movwf	postinc1,c
  9607   012036  EC6E  F0A2         	call	_DRV_CANFDSPI_TimeStampSet	;wreg free
  9608   01203A                     
  9609                           ;can/can.c: 202:     DRV_CANFDSPI_TimeStampEnable();
  9610   01203A  ECE4  F0A0         	call	_DRV_CANFDSPI_TimeStampEnable	;wreg free
  9611   01203E                     
  9612                           ;can/can.c: 209:     if(withISR == 1)
  9613                           ;stkvar	_withISR @ sp[(-13)+-2]
  9614   01203E  0EF1               	movlw	-15
  9615   012040  04E3               	decf	plusw1,w,c
  9616   012042  A4D8               	btfss	status,2,c
  9617   012044  EF26  F090         	goto	u2701
  9618   012048  EF28  F090         	goto	u2700
  9619   01204C                     u2701:
  9620   01204C  EF30  F090         	goto	l4846
  9621   012050                     u2700:
  9622   012050                     
  9623                           ;can/can.c: 210:     {;can/can.c: 211:         DRV_CANFDSPI_ModuleEventEnable(0,CAN_RX_E
      +                          VENT);
  9624   012050  0E02               	movlw	2
  9625   012052  6EE6               	movwf	postinc1,c
  9626   012054  0E00               	movlw	0
  9627   012056  6EE6               	movwf	postinc1,c
  9628   012058  0E00               	movlw	0
  9629   01205A  6EE6               	movwf	postinc1,c
  9630   01205C  EC81  F0A0         	call	_DRV_CANFDSPI_ModuleEventEnable	;wreg free
  9631   012060                     l4846:
  9632                           
  9633                           ;can/can.c: 214:     DRV_CANFDSPI_OperationModeSelect(CAN_CLASSIC_MODE);
  9634   012060  0E06               	movlw	6
  9635   012062  6EE6               	movwf	postinc1,c
  9636   012064  EC9D  F09F         	call	_DRV_CANFDSPI_OperationModeSelect	;wreg free
  9637   012068                     
  9638                           ; _CanInit: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  9639   012068  0EF1               	movlw	241
  9640   01206A  26E1               	addwf	fsr1l,f,c
  9641   01206C  0EFF               	movlw	255
  9642   01206E  22E2               	addwfc	fsr1h,f,c
  9643   012070  0012               	return		;funcret
  9644   012072                     __end_of_CanInit:
  9645                           	callstack 0
  9646                           
  9647 ;; *************** function _DRV_CANFDSPI_TransmitQueueConfigureObjectReset *****************
  9648 ;; Defined at:
  9649 ;;		line 693 in file "can/can.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;  config          2  [STACK] PTR struct _CAN_TX_QUEUE
  9652 ;;		 -> txqConfig(4), 
  9653 ;; Auto vars:     Size  Location     Type
  9654 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
  9655 ;; Return value:  Size  Location     Type
  9656 ;;                  1  [STACK] char 
  9657 ;; Registers used:
  9658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru
  9659 ;; Tracked objects:
  9660 ;;		On entry : 0/0
  9661 ;;		On exit  : 0/0
  9662 ;;		Unchanged: 0/0
  9663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9668 ;;Total ram usage:        0 bytes
  9669 ;; Hardware stack levels used: 1
  9670 ;; Hardware stack levels required when called: 7
  9671 ;; This function calls:
  9672 ;;		Nothing
  9673 ;; This function is called by:
  9674 ;;		_CanInit
  9675 ;; This function uses a reentrant model
  9676 ;;
  9677                           
  9678                           	psect	text46
  9679   013098                     __ptext46:
  9680                           	callstack 0
  9681   013098                     _DRV_CANFDSPI_TransmitQueueConfigureObjectReset:
  9682                           	callstack 0
  9683                           
  9684                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9685   013098  0E05               	movlw	5
  9686   01309A  26E1               	addwf	fsr1l,f,c
  9687   01309C  0E00               	movlw	0
  9688   01309E  22E2               	addwfc	fsr1h,f,c
  9689   0130A0                     
  9690                           ;can/can.c: 693: int8_t DRV_CANFDSPI_TransmitQueueConfigureObjectReset(CAN_TX_QUEUE_CONF
      +                          IG* config);can/can.c: 694: {;can/can.c: 695:     REG_CiFIFOCON ciFifoCon;;can/can.c: 69
      +                          6:     ciFifoCon.word = canFifoResetValues[0];
  9691   0130A0  0EDD               	movlw	low _canFifoResetValues
  9692   0130A2  6EF6               	movwf	tblptrl,c
  9693   0130A4                     	if	1	;There is more than 1 active tblptr byte
  9694   0130A4  0EFF               	movlw	high _canFifoResetValues
  9695   0130A6  6EF7               	movwf	tblptrh,c
  9696   0130A8                     	endif
  9697   0130A8                     	if	1	;There are 3 active tblptr bytes
  9698   0130A8  0E00               	movlw	low (_canFifoResetValues shr (0+16))
  9699   0130AA  6EF8               	movwf	tblptru,c
  9700   0130AC                     	endif
  9701   0130AC  0009               	tblrd		*+
  9702   0130AE  CFF5 F035          	movff	tablat,btemp+8
  9703   0130B2  0009               	tblrd		*+
  9704   0130B4  CFF5 F036          	movff	tablat,btemp+9
  9705   0130B8  0009               	tblrd		*+
  9706   0130BA  CFF5 F037          	movff	tablat,btemp+10
  9707   0130BE  0009               	tblrd		*+
  9708   0130C0  CFF5 F038          	movff	tablat,btemp+11
  9709                           
  9710                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
  9711   0130C4  0EFB               	movlw	-5
  9712   0130C6  C035  FFE3         	movff	btemp+8,plusw1
  9713   0130CA  0EFC               	movlw	-4
  9714   0130CC  C036  FFE3         	movff	btemp+9,plusw1
  9715   0130D0  0EFD               	movlw	-3
  9716   0130D2  C037  FFE3         	movff	btemp+10,plusw1
  9717   0130D6  0EFE               	movlw	-2
  9718   0130D8  C038  FFE3         	movff	btemp+11,plusw1
  9719   0130DC                     
  9720                           ;can/can.c: 698:     config->TxPriority = ciFifoCon.txBF.TxPriority;
  9721                           ;stkvar	_config @ sp[(-5)+-2]
  9722   0130DC  0EF9               	movlw	-7
  9723   0130DE  CFE3 FFD9          	movff	plusw1,fsr2l
  9724   0130E2  0EFA               	movlw	-6
  9725   0130E4  CFE3 FFDA          	movff	plusw1,fsr2h
  9726                           
  9727                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
  9728   0130E8  0EFD               	movlw	253
  9729   0130EA  24E1               	addwf	fsr1l,w,c
  9730   0130EC  6EE9               	movwf	fsr0l,c
  9731   0130EE  0EFF               	movlw	255
  9732   0130F0  20E2               	addwfc	fsr1h,w,c
  9733   0130F2  6EEA               	movwf	fsr0h,c
  9734   0130F4  50EF               	movf	239,w,c
  9735   0130F6  0B1F               	andlw	31
  9736   0130F8  6EDF               	movwf	indf2,c
  9737   0130FA                     
  9738                           ;can/can.c: 699:     config->TxAttempts = ciFifoCon.txBF.TxAttempts;
  9739                           ;stkvar	_config @ sp[(-5)+-2]
  9740   0130FA  0EF9               	movlw	-7
  9741   0130FC  CFE3 F037          	movff	plusw1,btemp+10
  9742   013100  0EFA               	movlw	-6
  9743   013102  CFE3 F038          	movff	plusw1,btemp+11
  9744   013106  0E01               	movlw	1
  9745   013108  2437               	addwf	(btemp+10)^0,w,c
  9746   01310A  6ED9               	movwf	fsr2l,c
  9747   01310C  0E00               	movlw	0
  9748   01310E  2038               	addwfc	(btemp+11)^0,w,c
  9749   013110  6EDA               	movwf	fsr2h,c
  9750                           
  9751                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
  9752   013112  0EFD               	movlw	253
  9753   013114  24E1               	addwf	fsr1l,w,c
  9754   013116  6EE9               	movwf	fsr0l,c
  9755   013118  0EFF               	movlw	255
  9756   01311A  20E2               	addwfc	fsr1h,w,c
  9757   01311C  6EEA               	movwf	fsr0h,c
  9758   01311E  38EF               	swapf	239,w,c
  9759   013120  32E8               	rrcf	wreg,f,c
  9760   013122  0B03               	andlw	3
  9761   013124  6EDF               	movwf	indf2,c
  9762   013126                     
  9763                           ;can/can.c: 700:     config->FifoSize = ciFifoCon.txBF.FifoSize;
  9764                           ;stkvar	_config @ sp[(-5)+-2]
  9765   013126  0EF9               	movlw	-7
  9766   013128  CFE3 F037          	movff	plusw1,btemp+10
  9767   01312C  0EFA               	movlw	-6
  9768   01312E  CFE3 F038          	movff	plusw1,btemp+11
  9769   013132  0E02               	movlw	2
  9770   013134  2437               	addwf	(btemp+10)^0,w,c
  9771   013136  6ED9               	movwf	fsr2l,c
  9772   013138  0E00               	movlw	0
  9773   01313A  2038               	addwfc	(btemp+11)^0,w,c
  9774   01313C  6EDA               	movwf	fsr2h,c
  9775                           
  9776                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
  9777   01313E  0EFE               	movlw	254
  9778   013140  24E1               	addwf	fsr1l,w,c
  9779   013142  6EE9               	movwf	fsr0l,c
  9780   013144  0EFF               	movlw	255
  9781   013146  20E2               	addwfc	fsr1h,w,c
  9782   013148  6EEA               	movwf	fsr0h,c
  9783   01314A  50EF               	movf	239,w,c
  9784   01314C  0B1F               	andlw	31
  9785   01314E  6EDF               	movwf	indf2,c
  9786   013150                     
  9787                           ;can/can.c: 701:     config->PayLoadSize = ciFifoCon.txBF.PayLoadSize;
  9788                           ;stkvar	_config @ sp[(-5)+-2]
  9789   013150  0EF9               	movlw	-7
  9790   013152  CFE3 F037          	movff	plusw1,btemp+10
  9791   013156  0EFA               	movlw	-6
  9792   013158  CFE3 F038          	movff	plusw1,btemp+11
  9793   01315C  0E03               	movlw	3
  9794   01315E  2437               	addwf	(btemp+10)^0,w,c
  9795   013160  6ED9               	movwf	fsr2l,c
  9796   013162  0E00               	movlw	0
  9797   013164  2038               	addwfc	(btemp+11)^0,w,c
  9798   013166  6EDA               	movwf	fsr2h,c
  9799                           
  9800                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
  9801   013168  0EFE               	movlw	254
  9802   01316A  24E1               	addwf	fsr1l,w,c
  9803   01316C  6EE9               	movwf	fsr0l,c
  9804   01316E  0EFF               	movlw	255
  9805   013170  20E2               	addwfc	fsr1h,w,c
  9806   013172  6EEA               	movwf	fsr0h,c
  9807   013174  38EF               	swapf	239,w,c
  9808   013176  32E8               	rrcf	wreg,f,c
  9809   013178  0B07               	andlw	7
  9810   01317A  6EDF               	movwf	indf2,c
  9811   01317C                     
  9812                           ; _DRV_CANFDSPI_TransmitQueueConfigureObjectReset: autosize = 5, savesize = 0, parsavesi
      +                          ze = 0, tempsize = 0 parsize = 2, argsize = 2, vargsize = 0
  9813   01317C  0EF9               	movlw	249
  9814   01317E  26E1               	addwf	fsr1l,f,c
  9815   013180  0EFF               	movlw	255
  9816   013182  22E2               	addwfc	fsr1h,f,c
  9817   013184  0012               	return		;funcret
  9818   013186                     __end_of_DRV_CANFDSPI_TransmitQueueConfigureObjectReset:
  9819                           	callstack 0
  9820                           
  9821 ;; *************** function _DRV_CANFDSPI_TransmitQueueConfigure *****************
  9822 ;; Defined at:
  9823 ;;		line 671 in file "can/can.c"
  9824 ;; Parameters:    Size  Location     Type
  9825 ;;  config          2  [STACK] PTR struct _CAN_TX_QUEUE
  9826 ;;		 -> txqConfig(4), 
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;  ciFifoCon       4  [STACK] struct _REG_CiTXQCON
  9829 ;;  a               2    0        unsigned short 
  9830 ;;  spiTransferE    1    0        char 
  9831 ;; Return value:  Size  Location     Type
  9832 ;;                  1  [STACK] char 
  9833 ;; Registers used:
  9834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh,
      + tblptru, prodl, prodh
  9835 ;; Tracked objects:
  9836 ;;		On entry : 0/0
  9837 ;;		On exit  : 0/0
  9838 ;;		Unchanged: 0/0
  9839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9844 ;;Total ram usage:        0 bytes
  9845 ;; Hardware stack levels used: 1
  9846 ;; Hardware stack levels required when called: 9
  9847 ;; This function calls:
  9848 ;;		_DRV_CANFDSPI_WriteWord
  9849 ;; This function is called by:
  9850 ;;		_CanInit
  9851 ;; This function uses a reentrant model
  9852 ;;
  9853                           
  9854                           	psect	text47
  9855   012C06                     __ptext47:
  9856                           	callstack 0
  9857   012C06                     _DRV_CANFDSPI_TransmitQueueConfigure:
  9858                           	callstack 0
  9859                           
  9860                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9861   012C06  52E6               	movf	postinc1,f,c
  9862   012C08  52E6               	movf	postinc1,f,c
  9863   012C0A  52E6               	movf	postinc1,f,c
  9864   012C0C  52E6               	movf	postinc1,f,c
  9865   012C0E                     
  9866                           ;can/can.c: 678:     REG_CiTXQCON ciFifoCon;;can/can.c: 679:     ciFifoCon.word = canFif
      +                          oResetValues[0];
  9867   012C0E  0EDD               	movlw	low _canFifoResetValues
  9868   012C10  6EF6               	movwf	tblptrl,c
  9869   012C12                     	if	1	;There is more than 1 active tblptr byte
  9870   012C12  0EFF               	movlw	high _canFifoResetValues
  9871   012C14  6EF7               	movwf	tblptrh,c
  9872   012C16                     	endif
  9873   012C16                     	if	1	;There are 3 active tblptr bytes
  9874   012C16  0E00               	movlw	low (_canFifoResetValues shr (0+16))
  9875   012C18  6EF8               	movwf	tblptru,c
  9876   012C1A                     	endif
  9877   012C1A  0009               	tblrd		*+
  9878   012C1C  CFF5 F035          	movff	tablat,btemp+8
  9879   012C20  0009               	tblrd		*+
  9880   012C22  CFF5 F036          	movff	tablat,btemp+9
  9881   012C26  0009               	tblrd		*+
  9882   012C28  CFF5 F037          	movff	tablat,btemp+10
  9883   012C2C  0009               	tblrd		*+
  9884   012C2E  CFF5 F038          	movff	tablat,btemp+11
  9885                           
  9886                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
  9887   012C32  0EFC               	movlw	-4
  9888   012C34  C035  FFE3         	movff	btemp+8,plusw1
  9889   012C38  0EFD               	movlw	-3
  9890   012C3A  C036  FFE3         	movff	btemp+9,plusw1
  9891   012C3E  0EFE               	movlw	-2
  9892   012C40  C037  FFE3         	movff	btemp+10,plusw1
  9893   012C44  0EFF               	movlw	-1
  9894   012C46  C038  FFE3         	movff	btemp+11,plusw1
  9895   012C4A                     
  9896                           ;can/can.c: 681:     ciFifoCon.txBF.TxEnable = 1;
  9897                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
  9898   012C4A  50E1               	movf	fsr1l,w,c
  9899   012C4C  0FFC               	addlw	-4
  9900   012C4E  6ED9               	movwf	fsr2l,c
  9901   012C50  50E2               	movf	fsr1h,w,c
  9902   012C52  6EDA               	movwf	fsr2h,c
  9903   012C54  0EFF               	movlw	255
  9904   012C56  22DA               	addwfc	fsr2h,f,c
  9905   012C58  8EDF               	bsf	indf2,7,c
  9906   012C5A                     
  9907                           ;can/can.c: 682:     ciFifoCon.txBF.FifoSize = config->FifoSize;
  9908                           ;stkvar	_config @ sp[(-4)+-2]
  9909   012C5A  0EFA               	movlw	-6
  9910   012C5C  CFE3 F037          	movff	plusw1,btemp+10
  9911   012C60  0EFB               	movlw	-5
  9912   012C62  CFE3 F038          	movff	plusw1,btemp+11
  9913   012C66  0E02               	movlw	2
  9914   012C68  2437               	addwf	(btemp+10)^0,w,c
  9915   012C6A  6ED9               	movwf	fsr2l,c
  9916   012C6C  0E00               	movlw	0
  9917   012C6E  2038               	addwfc	(btemp+11)^0,w,c
  9918   012C70  6EDA               	movwf	fsr2h,c
  9919   012C72  50DF               	movf	indf2,w,c
  9920   012C74  6E38               	movwf	(btemp+11)^0,c
  9921                           
  9922                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
  9923   012C76  0EFF               	movlw	255
  9924   012C78  24E1               	addwf	fsr1l,w,c
  9925   012C7A  6ED9               	movwf	fsr2l,c
  9926   012C7C  0EFF               	movlw	255
  9927   012C7E  20E2               	addwfc	fsr1h,w,c
  9928   012C80  6EDA               	movwf	fsr2h,c
  9929   012C82  50DF               	movf	223,w,c
  9930   012C84  1838               	xorwf	(btemp+11)^0,w,c
  9931   012C86  0BE0               	andlw	-32
  9932   012C88  1838               	xorwf	(btemp+11)^0,w,c
  9933   012C8A  6EDF               	movwf	223,c
  9934   012C8C                     
  9935                           ;can/can.c: 683:     ciFifoCon.txBF.PayLoadSize = config->PayLoadSize;
  9936                           ;stkvar	_config @ sp[(-4)+-2]
  9937   012C8C  0EFA               	movlw	-6
  9938   012C8E  CFE3 F037          	movff	plusw1,btemp+10
  9939   012C92  0EFB               	movlw	-5
  9940   012C94  CFE3 F038          	movff	plusw1,btemp+11
  9941   012C98  0E03               	movlw	3
  9942   012C9A  2437               	addwf	(btemp+10)^0,w,c
  9943   012C9C  6ED9               	movwf	fsr2l,c
  9944   012C9E  0E00               	movlw	0
  9945   012CA0  2038               	addwfc	(btemp+11)^0,w,c
  9946   012CA2  6EDA               	movwf	fsr2h,c
  9947   012CA4  50DF               	movf	indf2,w,c
  9948   012CA6  6E38               	movwf	(btemp+11)^0,c
  9949                           
  9950                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
  9951   012CA8  0EFF               	movlw	255
  9952   012CAA  24E1               	addwf	fsr1l,w,c
  9953   012CAC  6ED9               	movwf	fsr2l,c
  9954   012CAE  0EFF               	movlw	255
  9955   012CB0  20E2               	addwfc	fsr1h,w,c
  9956   012CB2  6EDA               	movwf	fsr2h,c
  9957   012CB4  3A38               	swapf	(btemp+11)^0,f,c
  9958   012CB6  4638               	rlncf	(btemp+11)^0,f,c
  9959   012CB8  50DF               	movf	223,w,c
  9960   012CBA  1838               	xorwf	(btemp+11)^0,w,c
  9961   012CBC  0B1F               	andlw	-225
  9962   012CBE  1838               	xorwf	(btemp+11)^0,w,c
  9963   012CC0  6EDF               	movwf	223,c
  9964   012CC2                     
  9965                           ;can/can.c: 684:     ciFifoCon.txBF.TxAttempts = config->TxAttempts;
  9966                           ;stkvar	_config @ sp[(-4)+-2]
  9967   012CC2  0EFA               	movlw	-6
  9968   012CC4  CFE3 F037          	movff	plusw1,btemp+10
  9969   012CC8  0EFB               	movlw	-5
  9970   012CCA  CFE3 F038          	movff	plusw1,btemp+11
  9971   012CCE  0E01               	movlw	1
  9972   012CD0  2437               	addwf	(btemp+10)^0,w,c
  9973   012CD2  6ED9               	movwf	fsr2l,c
  9974   012CD4  0E00               	movlw	0
  9975   012CD6  2038               	addwfc	(btemp+11)^0,w,c
  9976   012CD8  6EDA               	movwf	fsr2h,c
  9977   012CDA  50DF               	movf	indf2,w,c
  9978   012CDC  6E38               	movwf	(btemp+11)^0,c
  9979                           
  9980                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
  9981   012CDE  0EFE               	movlw	254
  9982   012CE0  24E1               	addwf	fsr1l,w,c
  9983   012CE2  6ED9               	movwf	fsr2l,c
  9984   012CE4  0EFF               	movlw	255
  9985   012CE6  20E2               	addwfc	fsr1h,w,c
  9986   012CE8  6EDA               	movwf	fsr2h,c
  9987   012CEA  3A38               	swapf	(btemp+11)^0,f,c
  9988   012CEC  4638               	rlncf	(btemp+11)^0,f,c
  9989   012CEE  50DF               	movf	223,w,c
  9990   012CF0  1838               	xorwf	(btemp+11)^0,w,c
  9991   012CF2  0B9F               	andlw	-97
  9992   012CF4  1838               	xorwf	(btemp+11)^0,w,c
  9993   012CF6  6EDF               	movwf	223,c
  9994   012CF8                     
  9995                           ;can/can.c: 685:     ciFifoCon.txBF.TxPriority = config->TxPriority;
  9996                           ;stkvar	_config @ sp[(-4)+-2]
  9997   012CF8  0EFA               	movlw	-6
  9998   012CFA  CFE3 FFD9          	movff	plusw1,fsr2l
  9999   012CFE  0EFB               	movlw	-5
 10000   012D00  CFE3 FFDA          	movff	plusw1,fsr2h
 10001   012D04  50DF               	movf	indf2,w,c
 10002   012D06  6E38               	movwf	(btemp+11)^0,c
 10003                           
 10004                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
 10005   012D08  0EFE               	movlw	254
 10006   012D0A  24E1               	addwf	fsr1l,w,c
 10007   012D0C  6ED9               	movwf	fsr2l,c
 10008   012D0E  0EFF               	movlw	255
 10009   012D10  20E2               	addwfc	fsr1h,w,c
 10010   012D12  6EDA               	movwf	fsr2h,c
 10011   012D14  50DF               	movf	223,w,c
 10012   012D16  1838               	xorwf	(btemp+11)^0,w,c
 10013   012D18  0BE0               	andlw	-32
 10014   012D1A  1838               	xorwf	(btemp+11)^0,w,c
 10015   012D1C  6EDF               	movwf	223,c
 10016   012D1E                     
 10017                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
 10018   012D1E  0EFC               	movlw	-4
 10019   012D20  CFE3 FFE6          	movff	plusw1,postinc1
 10020   012D24  CFE3 FFE6          	movff	plusw1,postinc1
 10021   012D28  CFE3 FFE6          	movff	plusw1,postinc1
 10022   012D2C  CFE3 FFE6          	movff	plusw1,postinc1
 10023   012D30  0E50               	movlw	80
 10024   012D32  6EE6               	movwf	postinc1,c
 10025   012D34  0E00               	movlw	0
 10026   012D36  6EE6               	movwf	postinc1,c
 10027   012D38  ECA8  F099         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 10028   012D3C                     
 10029                           ; _DRV_CANFDSPI_TransmitQueueConfigure: autosize = 4, savesize = 0, parsavesize = 0, tem
      +                          psize = 0 parsize = 2, argsize = 2, vargsize = 0
 10030   012D3C  0EFA               	movlw	250
 10031   012D3E  26E1               	addwf	fsr1l,f,c
 10032   012D40  0EFF               	movlw	255
 10033   012D42  22E2               	addwfc	fsr1h,f,c
 10034   012D44  0012               	return		;funcret
 10035   012D46                     __end_of_DRV_CANFDSPI_TransmitQueueConfigure:
 10036                           	callstack 0
 10037                           
 10038 ;; *************** function _DRV_CANFDSPI_TransmitChannelConfigureObjectReset *****************
 10039 ;; Defined at:
 10040 ;;		line 657 in file "can/can.c"
 10041 ;; Parameters:    Size  Location     Type
 10042 ;;  config          2  [STACK] PTR struct _CAN_TX_FIFO_
 10043 ;;		 -> txfConfig(2), 
 10044 ;; Auto vars:     Size  Location     Type
 10045 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
 10046 ;; Return value:  Size  Location     Type
 10047 ;;                  1  [STACK] char 
 10048 ;; Registers used:
 10049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru
 10050 ;; Tracked objects:
 10051 ;;		On entry : 0/0
 10052 ;;		On exit  : 0/0
 10053 ;;		Unchanged: 0/0
 10054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10059 ;;Total ram usage:        0 bytes
 10060 ;; Hardware stack levels used: 1
 10061 ;; Hardware stack levels required when called: 7
 10062 ;; This function calls:
 10063 ;;		Nothing
 10064 ;; This function is called by:
 10065 ;;		_CanInit
 10066 ;; This function uses a reentrant model
 10067 ;;
 10068                           
 10069                           	psect	text48
 10070   012D46                     __ptext48:
 10071                           	callstack 0
 10072   012D46                     _DRV_CANFDSPI_TransmitChannelConfigureObjectReset:
 10073                           	callstack 0
 10074                           
 10075                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10076   012D46  0E05               	movlw	5
 10077   012D48  26E1               	addwf	fsr1l,f,c
 10078   012D4A  0E00               	movlw	0
 10079   012D4C  22E2               	addwfc	fsr1h,f,c
 10080   012D4E                     
 10081                           ;can/can.c: 657: int8_t DRV_CANFDSPI_TransmitChannelConfigureObjectReset(CAN_TX_FIFO_CON
      +                          FIG* config);can/can.c: 658: {;can/can.c: 659:     REG_CiFIFOCON ciFifoCon;;can/can.c: 6
      +                          60:     ciFifoCon.word = canFifoResetValues[0];
 10082   012D4E  0EDD               	movlw	low _canFifoResetValues
 10083   012D50  6EF6               	movwf	tblptrl,c
 10084   012D52                     	if	1	;There is more than 1 active tblptr byte
 10085   012D52  0EFF               	movlw	high _canFifoResetValues
 10086   012D54  6EF7               	movwf	tblptrh,c
 10087   012D56                     	endif
 10088   012D56                     	if	1	;There are 3 active tblptr bytes
 10089   012D56  0E00               	movlw	low (_canFifoResetValues shr (0+16))
 10090   012D58  6EF8               	movwf	tblptru,c
 10091   012D5A                     	endif
 10092   012D5A  0009               	tblrd		*+
 10093   012D5C  CFF5 F035          	movff	tablat,btemp+8
 10094   012D60  0009               	tblrd		*+
 10095   012D62  CFF5 F036          	movff	tablat,btemp+9
 10096   012D66  0009               	tblrd		*+
 10097   012D68  CFF5 F037          	movff	tablat,btemp+10
 10098   012D6C  0009               	tblrd		*+
 10099   012D6E  CFF5 F038          	movff	tablat,btemp+11
 10100                           
 10101                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 10102   012D72  0EFB               	movlw	-5
 10103   012D74  C035  FFE3         	movff	btemp+8,plusw1
 10104   012D78  0EFC               	movlw	-4
 10105   012D7A  C036  FFE3         	movff	btemp+9,plusw1
 10106   012D7E  0EFD               	movlw	-3
 10107   012D80  C037  FFE3         	movff	btemp+10,plusw1
 10108   012D84  0EFE               	movlw	-2
 10109   012D86  C038  FFE3         	movff	btemp+11,plusw1
 10110   012D8A                     
 10111                           ;can/can.c: 662:     config->RTREnable = ciFifoCon.txBF.RTREnable;
 10112                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 10113   012D8A  50E1               	movf	fsr1l,w,c
 10114   012D8C  0FFB               	addlw	-5
 10115   012D8E  6ED9               	movwf	fsr2l,c
 10116   012D90  50E2               	movf	fsr1h,w,c
 10117   012D92  6EDA               	movwf	fsr2h,c
 10118   012D94  0EFF               	movlw	255
 10119   012D96  22DA               	addwfc	fsr2h,f,c
 10120                           
 10121                           ;stkvar	_config @ sp[(-5)+-2]
 10122   012D98  0EF9               	movlw	-7
 10123   012D9A  CFE3 FFE9          	movff	plusw1,fsr0l
 10124   012D9E  0EFA               	movlw	-6
 10125   012DA0  CFE3 FFEA          	movff	plusw1,fsr0h
 10126   012DA4  90EF               	bcf	indf0,0,c
 10127   012DA6  ACDF               	btfss	indf2,6,c
 10128   012DA8  EFD7  F096         	goto	u975
 10129   012DAC  80EF               	bsf	indf0,0,c
 10130   012DAE                     u975:
 10131   012DAE                     
 10132                           ;can/can.c: 663:     config->TxPriority = ciFifoCon.txBF.TxPriority;
 10133                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 10134   012DAE  0EFD               	movlw	253
 10135   012DB0  24E1               	addwf	fsr1l,w,c
 10136   012DB2  6ED9               	movwf	fsr2l,c
 10137   012DB4  0EFF               	movlw	255
 10138   012DB6  20E2               	addwfc	fsr1h,w,c
 10139   012DB8  6EDA               	movwf	fsr2h,c
 10140   012DBA  50DF               	movf	223,w,c
 10141   012DBC  0B1F               	andlw	31
 10142   012DBE  6E38               	movwf	(btemp+11)^0,c
 10143                           
 10144                           ;stkvar	_config @ sp[(-5)+-2]
 10145   012DC0  0EF9               	movlw	-7
 10146   012DC2  CFE3 FFD9          	movff	plusw1,fsr2l
 10147   012DC6  0EFA               	movlw	-6
 10148   012DC8  CFE3 FFDA          	movff	plusw1,fsr2h
 10149   012DCC  4638               	rlncf	(btemp+11)^0,f,c
 10150   012DCE  50DF               	movf	223,w,c
 10151   012DD0  1838               	xorwf	(btemp+11)^0,w,c
 10152   012DD2  0BC1               	andlw	-63
 10153   012DD4  1838               	xorwf	(btemp+11)^0,w,c
 10154   012DD6  6EDF               	movwf	223,c
 10155   012DD8                     
 10156                           ;can/can.c: 664:     config->TxAttempts = ciFifoCon.txBF.TxAttempts;
 10157                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 10158   012DD8  0EFD               	movlw	253
 10159   012DDA  24E1               	addwf	fsr1l,w,c
 10160   012DDC  6ED9               	movwf	fsr2l,c
 10161   012DDE  0EFF               	movlw	255
 10162   012DE0  20E2               	addwfc	fsr1h,w,c
 10163   012DE2  6EDA               	movwf	fsr2h,c
 10164   012DE4  38DF               	swapf	223,w,c
 10165   012DE6  32E8               	rrcf	wreg,f,c
 10166   012DE8  0B03               	andlw	3
 10167   012DEA  6E38               	movwf	(btemp+11)^0,c
 10168                           
 10169                           ;stkvar	_config @ sp[(-5)+-2]
 10170   012DEC  0EF9               	movlw	-7
 10171   012DEE  CFE3 FFD9          	movff	plusw1,fsr2l
 10172   012DF2  0EFA               	movlw	-6
 10173   012DF4  CFE3 FFDA          	movff	plusw1,fsr2h
 10174   012DF8  3A38               	swapf	(btemp+11)^0,f,c
 10175   012DFA  4638               	rlncf	(btemp+11)^0,f,c
 10176   012DFC  4638               	rlncf	(btemp+11)^0,f,c
 10177   012DFE  50DF               	movf	223,w,c
 10178   012E00  1838               	xorwf	(btemp+11)^0,w,c
 10179   012E02  0B3F               	andlw	-193
 10180   012E04  1838               	xorwf	(btemp+11)^0,w,c
 10181   012E06  6EDF               	movwf	223,c
 10182   012E08                     
 10183                           ;can/can.c: 665:     config->FifoSize = ciFifoCon.txBF.FifoSize;
 10184                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 10185   012E08  0EFE               	movlw	254
 10186   012E0A  24E1               	addwf	fsr1l,w,c
 10187   012E0C  6ED9               	movwf	fsr2l,c
 10188   012E0E  0EFF               	movlw	255
 10189   012E10  20E2               	addwfc	fsr1h,w,c
 10190   012E12  6EDA               	movwf	fsr2h,c
 10191   012E14  50DF               	movf	223,w,c
 10192   012E16  0B1F               	andlw	31
 10193   012E18  6E38               	movwf	(btemp+11)^0,c
 10194                           
 10195                           ;stkvar	_config @ sp[(-5)+-2]
 10196   012E1A  0EF9               	movlw	-7
 10197   012E1C  CFE3 F035          	movff	plusw1,btemp+8
 10198   012E20  0EFA               	movlw	-6
 10199   012E22  CFE3 F036          	movff	plusw1,btemp+9
 10200   012E26  0E01               	movlw	1
 10201   012E28  2435               	addwf	(btemp+8)^0,w,c
 10202   012E2A  6ED9               	movwf	fsr2l,c
 10203   012E2C  0E00               	movlw	0
 10204   012E2E  2036               	addwfc	(btemp+9)^0,w,c
 10205   012E30  6EDA               	movwf	fsr2h,c
 10206   012E32  50DF               	movf	223,w,c
 10207   012E34  1838               	xorwf	(btemp+11)^0,w,c
 10208   012E36  0BE0               	andlw	-32
 10209   012E38  1838               	xorwf	(btemp+11)^0,w,c
 10210   012E3A  6EDF               	movwf	223,c
 10211   012E3C                     
 10212                           ;can/can.c: 666:     config->PayLoadSize = ciFifoCon.txBF.PayLoadSize;
 10213                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 10214   012E3C  0EFE               	movlw	254
 10215   012E3E  24E1               	addwf	fsr1l,w,c
 10216   012E40  6ED9               	movwf	fsr2l,c
 10217   012E42  0EFF               	movlw	255
 10218   012E44  20E2               	addwfc	fsr1h,w,c
 10219   012E46  6EDA               	movwf	fsr2h,c
 10220   012E48  38DF               	swapf	223,w,c
 10221   012E4A  32E8               	rrcf	wreg,f,c
 10222   012E4C  0B07               	andlw	7
 10223   012E4E  6E38               	movwf	(btemp+11)^0,c
 10224                           
 10225                           ;stkvar	_config @ sp[(-5)+-2]
 10226   012E50  0EF9               	movlw	-7
 10227   012E52  CFE3 F035          	movff	plusw1,btemp+8
 10228   012E56  0EFA               	movlw	-6
 10229   012E58  CFE3 F036          	movff	plusw1,btemp+9
 10230   012E5C  0E01               	movlw	1
 10231   012E5E  2435               	addwf	(btemp+8)^0,w,c
 10232   012E60  6ED9               	movwf	fsr2l,c
 10233   012E62  0E00               	movlw	0
 10234   012E64  2036               	addwfc	(btemp+9)^0,w,c
 10235   012E66  6EDA               	movwf	fsr2h,c
 10236   012E68  3A38               	swapf	(btemp+11)^0,f,c
 10237   012E6A  4638               	rlncf	(btemp+11)^0,f,c
 10238   012E6C  50DF               	movf	223,w,c
 10239   012E6E  1838               	xorwf	(btemp+11)^0,w,c
 10240   012E70  0B1F               	andlw	-225
 10241   012E72  1838               	xorwf	(btemp+11)^0,w,c
 10242   012E74  6EDF               	movwf	223,c
 10243   012E76                     
 10244                           ; _DRV_CANFDSPI_TransmitChannelConfigureObjectReset: autosize = 5, savesize = 0, parsave
      +                          size = 0, tempsize = 0 parsize = 2, argsize = 2, vargsize = 0
 10245   012E76  0EF9               	movlw	249
 10246   012E78  26E1               	addwf	fsr1l,f,c
 10247   012E7A  0EFF               	movlw	255
 10248   012E7C  22E2               	addwfc	fsr1h,f,c
 10249   012E7E  0012               	return		;funcret
 10250   012E80                     __end_of_DRV_CANFDSPI_TransmitChannelConfigureObjectReset:
 10251                           	callstack 0
 10252                           
 10253 ;; *************** function _DRV_CANFDSPI_TransmitChannelConfigure *****************
 10254 ;; Defined at:
 10255 ;;		line 633 in file "can/can.c"
 10256 ;; Parameters:    Size  Location     Type
 10257 ;;  channel         1  [STACK] enum E5290
 10258 ;;  config          2  [STACK] PTR struct _CAN_TX_FIFO_
 10259 ;;		 -> txfConfig(2), 
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
 10262 ;;  a               2  [STACK] unsigned short 
 10263 ;;  spiTransferE    1    0        char 
 10264 ;; Return value:  Size  Location     Type
 10265 ;;                  1  [STACK] char 
 10266 ;; Registers used:
 10267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 10268 ;; Tracked objects:
 10269 ;;		On entry : 0/0
 10270 ;;		On exit  : 0/0
 10271 ;;		Unchanged: 0/0
 10272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10277 ;;Total ram usage:        0 bytes
 10278 ;; Hardware stack levels used: 1
 10279 ;; Hardware stack levels required when called: 9
 10280 ;; This function calls:
 10281 ;;		_DRV_CANFDSPI_WriteWord
 10282 ;; This function is called by:
 10283 ;;		_CanInit
 10284 ;; This function uses a reentrant model
 10285 ;;
 10286                           
 10287                           	psect	text49
 10288   0123DC                     __ptext49:
 10289                           	callstack 0
 10290   0123DC                     _DRV_CANFDSPI_TransmitChannelConfigure:
 10291                           	callstack 0
 10292                           
 10293                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10294   0123DC  0E07               	movlw	7
 10295   0123DE  26E1               	addwf	fsr1l,f,c
 10296   0123E0  0E00               	movlw	0
 10297   0123E2  22E2               	addwfc	fsr1h,f,c
 10298   0123E4                     
 10299                           ;can/can.c: 640:     REG_CiFIFOCON ciFifoCon;;can/can.c: 641:     ciFifoCon.word = canFi
      +                          foResetValues[0];
 10300   0123E4  0EDD               	movlw	low _canFifoResetValues
 10301   0123E6  6EF6               	movwf	tblptrl,c
 10302   0123E8                     	if	1	;There is more than 1 active tblptr byte
 10303   0123E8  0EFF               	movlw	high _canFifoResetValues
 10304   0123EA  6EF7               	movwf	tblptrh,c
 10305   0123EC                     	endif
 10306   0123EC                     	if	1	;There are 3 active tblptr bytes
 10307   0123EC  0E00               	movlw	low (_canFifoResetValues shr (0+16))
 10308   0123EE  6EF8               	movwf	tblptru,c
 10309   0123F0                     	endif
 10310   0123F0  0009               	tblrd		*+
 10311   0123F2  CFF5 F035          	movff	tablat,btemp+8
 10312   0123F6  0009               	tblrd		*+
 10313   0123F8  CFF5 F036          	movff	tablat,btemp+9
 10314   0123FC  0009               	tblrd		*+
 10315   0123FE  CFF5 F037          	movff	tablat,btemp+10
 10316   012402  0009               	tblrd		*+
 10317   012404  CFF5 F038          	movff	tablat,btemp+11
 10318                           
 10319                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 10320   012408  0EF9               	movlw	-7
 10321   01240A  C035  FFE3         	movff	btemp+8,plusw1
 10322   01240E  0EFA               	movlw	-6
 10323   012410  C036  FFE3         	movff	btemp+9,plusw1
 10324   012414  0EFB               	movlw	-5
 10325   012416  C037  FFE3         	movff	btemp+10,plusw1
 10326   01241A  0EFC               	movlw	-4
 10327   01241C  C038  FFE3         	movff	btemp+11,plusw1
 10328   012420                     
 10329                           ;can/can.c: 643:     ciFifoCon.txBF.TxEnable = 1;
 10330                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 10331   012420  50E1               	movf	fsr1l,w,c
 10332   012422  0FF9               	addlw	-7
 10333   012424  6ED9               	movwf	fsr2l,c
 10334   012426  50E2               	movf	fsr1h,w,c
 10335   012428  6EDA               	movwf	fsr2h,c
 10336   01242A  0EFF               	movlw	255
 10337   01242C  22DA               	addwfc	fsr2h,f,c
 10338   01242E  8EDF               	bsf	indf2,7,c
 10339   012430                     
 10340                           ;can/can.c: 644:     ciFifoCon.txBF.FifoSize = config->FifoSize;
 10341                           ;stkvar	_config @ sp[(-7)+-3]
 10342   012430  0EF6               	movlw	-10
 10343   012432  CFE3 F037          	movff	plusw1,btemp+10
 10344   012436  0EF7               	movlw	-9
 10345   012438  CFE3 F038          	movff	plusw1,btemp+11
 10346   01243C  0E01               	movlw	1
 10347   01243E  2437               	addwf	(btemp+10)^0,w,c
 10348   012440  6ED9               	movwf	fsr2l,c
 10349   012442  0E00               	movlw	0
 10350   012444  2038               	addwfc	(btemp+11)^0,w,c
 10351   012446  6EDA               	movwf	fsr2h,c
 10352   012448  50DF               	movf	223,w,c
 10353   01244A  0B1F               	andlw	31
 10354   01244C  6E38               	movwf	(btemp+11)^0,c
 10355                           
 10356                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 10357   01244E  0EFC               	movlw	252
 10358   012450  24E1               	addwf	fsr1l,w,c
 10359   012452  6ED9               	movwf	fsr2l,c
 10360   012454  0EFF               	movlw	255
 10361   012456  20E2               	addwfc	fsr1h,w,c
 10362   012458  6EDA               	movwf	fsr2h,c
 10363   01245A  50DF               	movf	223,w,c
 10364   01245C  1838               	xorwf	(btemp+11)^0,w,c
 10365   01245E  0BE0               	andlw	-32
 10366   012460  1838               	xorwf	(btemp+11)^0,w,c
 10367   012462  6EDF               	movwf	223,c
 10368   012464                     
 10369                           ;can/can.c: 645:     ciFifoCon.txBF.PayLoadSize = config->PayLoadSize;
 10370                           ;stkvar	_config @ sp[(-7)+-3]
 10371   012464  0EF6               	movlw	-10
 10372   012466  CFE3 F037          	movff	plusw1,btemp+10
 10373   01246A  0EF7               	movlw	-9
 10374   01246C  CFE3 F038          	movff	plusw1,btemp+11
 10375   012470  0E01               	movlw	1
 10376   012472  2437               	addwf	(btemp+10)^0,w,c
 10377   012474  6ED9               	movwf	fsr2l,c
 10378   012476  0E00               	movlw	0
 10379   012478  2038               	addwfc	(btemp+11)^0,w,c
 10380   01247A  6EDA               	movwf	fsr2h,c
 10381   01247C  38DF               	swapf	223,w,c
 10382   01247E  32E8               	rrcf	wreg,f,c
 10383   012480  0B07               	andlw	7
 10384   012482  6E38               	movwf	(btemp+11)^0,c
 10385                           
 10386                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 10387   012484  0EFC               	movlw	252
 10388   012486  24E1               	addwf	fsr1l,w,c
 10389   012488  6ED9               	movwf	fsr2l,c
 10390   01248A  0EFF               	movlw	255
 10391   01248C  20E2               	addwfc	fsr1h,w,c
 10392   01248E  6EDA               	movwf	fsr2h,c
 10393   012490  3A38               	swapf	(btemp+11)^0,f,c
 10394   012492  4638               	rlncf	(btemp+11)^0,f,c
 10395   012494  50DF               	movf	223,w,c
 10396   012496  1838               	xorwf	(btemp+11)^0,w,c
 10397   012498  0B1F               	andlw	-225
 10398   01249A  1838               	xorwf	(btemp+11)^0,w,c
 10399   01249C  6EDF               	movwf	223,c
 10400   01249E                     
 10401                           ;can/can.c: 646:     ciFifoCon.txBF.TxAttempts = config->TxAttempts;
 10402                           ;stkvar	_config @ sp[(-7)+-3]
 10403   01249E  0EF6               	movlw	-10
 10404   0124A0  CFE3 FFD9          	movff	plusw1,fsr2l
 10405   0124A4  0EF7               	movlw	-9
 10406   0124A6  CFE3 FFDA          	movff	plusw1,fsr2h
 10407   0124AA  38DF               	swapf	223,w,c
 10408   0124AC  32E8               	rrcf	wreg,f,c
 10409   0124AE  32E8               	rrcf	wreg,f,c
 10410   0124B0  0B03               	andlw	3
 10411   0124B2  6E38               	movwf	(btemp+11)^0,c
 10412                           
 10413                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 10414   0124B4  0EFB               	movlw	251
 10415   0124B6  24E1               	addwf	fsr1l,w,c
 10416   0124B8  6ED9               	movwf	fsr2l,c
 10417   0124BA  0EFF               	movlw	255
 10418   0124BC  20E2               	addwfc	fsr1h,w,c
 10419   0124BE  6EDA               	movwf	fsr2h,c
 10420   0124C0  3A38               	swapf	(btemp+11)^0,f,c
 10421   0124C2  4638               	rlncf	(btemp+11)^0,f,c
 10422   0124C4  50DF               	movf	223,w,c
 10423   0124C6  1838               	xorwf	(btemp+11)^0,w,c
 10424   0124C8  0B9F               	andlw	-97
 10425   0124CA  1838               	xorwf	(btemp+11)^0,w,c
 10426   0124CC  6EDF               	movwf	223,c
 10427   0124CE                     
 10428                           ;can/can.c: 647:     ciFifoCon.txBF.TxPriority = config->TxPriority;
 10429                           ;stkvar	_config @ sp[(-7)+-3]
 10430   0124CE  0EF6               	movlw	-10
 10431   0124D0  CFE3 FFD9          	movff	plusw1,fsr2l
 10432   0124D4  0EF7               	movlw	-9
 10433   0124D6  CFE3 FFDA          	movff	plusw1,fsr2h
 10434   0124DA  30DF               	rrcf	223,w,c
 10435   0124DC  0B1F               	andlw	31
 10436   0124DE  6E38               	movwf	(btemp+11)^0,c
 10437                           
 10438                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 10439   0124E0  0EFB               	movlw	251
 10440   0124E2  24E1               	addwf	fsr1l,w,c
 10441   0124E4  6ED9               	movwf	fsr2l,c
 10442   0124E6  0EFF               	movlw	255
 10443   0124E8  20E2               	addwfc	fsr1h,w,c
 10444   0124EA  6EDA               	movwf	fsr2h,c
 10445   0124EC  50DF               	movf	223,w,c
 10446   0124EE  1838               	xorwf	(btemp+11)^0,w,c
 10447   0124F0  0BE0               	andlw	-32
 10448   0124F2  1838               	xorwf	(btemp+11)^0,w,c
 10449   0124F4  6EDF               	movwf	223,c
 10450   0124F6                     
 10451                           ;can/can.c: 648:     ciFifoCon.txBF.RTREnable = config->RTREnable;
 10452                           ;stkvar	_config @ sp[(-7)+-3]
 10453   0124F6  0EF6               	movlw	-10
 10454   0124F8  CFE3 FFD9          	movff	plusw1,fsr2l
 10455   0124FC  0EF7               	movlw	-9
 10456   0124FE  CFE3 FFDA          	movff	plusw1,fsr2h
 10457                           
 10458                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 10459   012502  50E1               	movf	fsr1l,w,c
 10460   012504  0FF9               	addlw	-7
 10461   012506  6EE9               	movwf	fsr0l,c
 10462   012508  50E2               	movf	fsr1h,w,c
 10463   01250A  6EEA               	movwf	fsr0h,c
 10464   01250C  0EFF               	movlw	255
 10465   01250E  22EA               	addwfc	fsr0h,f,c
 10466   012510  9CEF               	bcf	indf0,6,c
 10467   012512  A0DF               	btfss	indf2,0,c
 10468   012514  EF8D  F092         	goto	u2335
 10469   012518  8CEF               	bsf	indf0,6,c
 10470   01251A                     u2335:
 10471   01251A                     
 10472                           ;can/can.c: 650:     a = 0x050 + (channel * (3*4));
 10473                           ;stkvar	_channel @ sp[(-7)+-1]
 10474   01251A  0EF8               	movlw	-8
 10475   01251C  50E3               	movf	plusw1,w,c
 10476   01251E  0D0C               	mullw	12
 10477   012520  0E50               	movlw	80
 10478   012522  26F3               	addwf	243,f,c
 10479   012524  0E00               	movlw	0
 10480   012526  22F4               	addwfc	244,f,c
 10481                           
 10482                           ;stkvar	_a @ sp[(-7)+5]
 10483   012528  0EFE               	movlw	-2
 10484   01252A  CFF3 FFE3          	movff	prodl,plusw1
 10485   01252E  0EFF               	movlw	-1
 10486   012530  CFF4 FFE3          	movff	prodh,plusw1
 10487   012534                     
 10488                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 10489   012534  0EF9               	movlw	-7
 10490   012536  CFE3 FFE6          	movff	plusw1,postinc1
 10491   01253A  CFE3 FFE6          	movff	plusw1,postinc1
 10492   01253E  CFE3 FFE6          	movff	plusw1,postinc1
 10493   012542  CFE3 FFE6          	movff	plusw1,postinc1
 10494                           
 10495                           ;stkvar	_a @ sp[(-11)+5]
 10496   012546  0EFA               	movlw	-6
 10497   012548  CFE3 FFE6          	movff	plusw1,postinc1
 10498   01254C  CFE3 FFE6          	movff	plusw1,postinc1
 10499   012550  ECA8  F099         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 10500   012554                     
 10501                           ; _DRV_CANFDSPI_TransmitChannelConfigure: autosize = 7, savesize = 0, parsavesize = 0, t
      +                          empsize = 0 parsize = 3, argsize = 3, vargsize = 0
 10502   012554  0EF6               	movlw	246
 10503   012556  26E1               	addwf	fsr1l,f,c
 10504   012558  0EFF               	movlw	255
 10505   01255A  22E2               	addwfc	fsr1h,f,c
 10506   01255C  0012               	return		;funcret
 10507   01255E                     __end_of_DRV_CANFDSPI_TransmitChannelConfigure:
 10508                           	callstack 0
 10509                           
 10510 ;; *************** function _DRV_CANFDSPI_TimeStampSet *****************
 10511 ;; Defined at:
 10512 ;;		line 2690 in file "can/can.c"
 10513 ;; Parameters:    Size  Location     Type
 10514 ;;  ts              4  [STACK] unsigned long 
 10515 ;; Auto vars:     Size  Location     Type
 10516 ;;  spiTransferE    1    0        char 
 10517 ;; Return value:  Size  Location     Type
 10518 ;;                  1  [STACK] char 
 10519 ;; Registers used:
 10520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10521 ;; Tracked objects:
 10522 ;;		On entry : 0/0
 10523 ;;		On exit  : 0/0
 10524 ;;		Unchanged: 0/0
 10525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10530 ;;Total ram usage:        0 bytes
 10531 ;; Hardware stack levels used: 1
 10532 ;; Hardware stack levels required when called: 9
 10533 ;; This function calls:
 10534 ;;		_DRV_CANFDSPI_WriteWord
 10535 ;; This function is called by:
 10536 ;;		_CanInit
 10537 ;; This function uses a reentrant model
 10538 ;;
 10539                           
 10540                           	psect	text50
 10541   0144DC                     __ptext50:
 10542                           	callstack 0
 10543   0144DC                     _DRV_CANFDSPI_TimeStampSet:
 10544                           	callstack 20
 10545   0144DC                     
 10546                           ;stkvar	_ts @ sp[(0)+-4]
 10547   0144DC  0EFC               	movlw	-4
 10548   0144DE  CFE3 FFE6          	movff	plusw1,postinc1
 10549   0144E2  CFE3 FFE6          	movff	plusw1,postinc1
 10550   0144E6  CFE3 FFE6          	movff	plusw1,postinc1
 10551   0144EA  CFE3 FFE6          	movff	plusw1,postinc1
 10552   0144EE  0E10               	movlw	16
 10553   0144F0  6EE6               	movwf	postinc1,c
 10554   0144F2  0E00               	movlw	0
 10555   0144F4  6EE6               	movwf	postinc1,c
 10556   0144F6  ECA8  F099         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 10557   0144FA                     
 10558                           ; _DRV_CANFDSPI_TimeStampSet: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 4, argsize = 4, vargsize = 0
 10559   0144FA  52E5               	movf	postdec1,f,c
 10560   0144FC  52E5               	movf	postdec1,f,c
 10561   0144FE  52E5               	movf	postdec1,f,c
 10562   014500  52E5               	movf	postdec1,f,c
 10563   014502  0012               	return		;funcret
 10564   014504                     __end_of_DRV_CANFDSPI_TimeStampSet:
 10565                           	callstack 0
 10566                           
 10567 ;; *************** function _DRV_CANFDSPI_TimeStampPrescalerSet *****************
 10568 ;; Defined at:
 10569 ;;		line 2725 in file "can/can.c"
 10570 ;; Parameters:    Size  Location     Type
 10571 ;;  ps              2  [STACK] unsigned short 
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;  spiTransferE    1    0        char 
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  1  [STACK] char 
 10576 ;; Registers used:
 10577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10578 ;; Tracked objects:
 10579 ;;		On entry : 0/0
 10580 ;;		On exit  : 0/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10587 ;;Total ram usage:        0 bytes
 10588 ;; Hardware stack levels used: 1
 10589 ;; Hardware stack levels required when called: 9
 10590 ;; This function calls:
 10591 ;;		_DRV_CANFDSPI_WriteHalfWord
 10592 ;; This function is called by:
 10593 ;;		_CanInit
 10594 ;; This function uses a reentrant model
 10595 ;;
 10596                           
 10597                           	psect	text51
 10598   01454C                     __ptext51:
 10599                           	callstack 0
 10600   01454C                     _DRV_CANFDSPI_TimeStampPrescalerSet:
 10601                           	callstack 20
 10602   01454C                     
 10603                           ;stkvar	_ps @ sp[(0)+-2]
 10604   01454C  0EFE               	movlw	-2
 10605   01454E  CFE3 FFE6          	movff	plusw1,postinc1
 10606   014552  CFE3 FFE6          	movff	plusw1,postinc1
 10607   014556  0E14               	movlw	20
 10608   014558  6EE6               	movwf	postinc1,c
 10609   01455A  0E00               	movlw	0
 10610   01455C  6EE6               	movwf	postinc1,c
 10611   01455E  EC48  F09B         	call	_DRV_CANFDSPI_WriteHalfWord	;wreg free
 10612   014562                     
 10613                           ; _DRV_CANFDSPI_TimeStampPrescalerSet: autosize = 0, savesize = 0, parsavesize = 0, temp
      +                          size = 0 parsize = 2, argsize = 2, vargsize = 0
 10614   014562  52E5               	movf	postdec1,f,c
 10615   014564  52E5               	movf	postdec1,f,c
 10616   014566  0012               	return		;funcret
 10617   014568                     __end_of_DRV_CANFDSPI_TimeStampPrescalerSet:
 10618                           	callstack 0
 10619                           
 10620 ;; *************** function _DRV_CANFDSPI_TimeStampEnable *****************
 10621 ;; Defined at:
 10622 ;;		line 2634 in file "can/can.c"
 10623 ;; Parameters:    Size  Location     Type
 10624 ;;		None
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;  d               1  [STACK] unsigned char 
 10627 ;;  spiTransferE    1  [STACK] char 
 10628 ;; Return value:  Size  Location     Type
 10629 ;;                  1  [STACK] char 
 10630 ;; Registers used:
 10631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 10632 ;; Tracked objects:
 10633 ;;		On entry : 0/0
 10634 ;;		On exit  : 0/0
 10635 ;;		Unchanged: 0/0
 10636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10641 ;;Total ram usage:        0 bytes
 10642 ;; Hardware stack levels used: 1
 10643 ;; Hardware stack levels required when called: 9
 10644 ;; This function calls:
 10645 ;;		_DRV_CANFDSPI_ReadByte
 10646 ;;		_DRV_CANFDSPI_WriteByte
 10647 ;; This function is called by:
 10648 ;;		_CanInit
 10649 ;; This function uses a reentrant model
 10650 ;;
 10651                           
 10652                           	psect	text52
 10653   0141C8                     __ptext52:
 10654                           	callstack 0
 10655   0141C8                     _DRV_CANFDSPI_TimeStampEnable:
 10656                           	callstack 0
 10657                           
 10658                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10659   0141C8  52E6               	movf	postinc1,f,c
 10660   0141CA  52E6               	movf	postinc1,f,c
 10661   0141CC                     
 10662                           ;can/can.c: 2637:     uint8_t d = 0;
 10663                           ;stkvar	_d @ sp[(-2)+0]
 10664   0141CC  0EFE               	movlw	-2
 10665   0141CE  6AE3               	clrf	plusw1,c
 10666   0141D0                     
 10667                           ;can/can.c: 2640:     spiTransferError = DRV_CANFDSPI_ReadByte( 0x014 + 2, &d);
 10668                           ;stkvar	_d @ sp[(-2)+0]
 10669   0141D0  0EFE               	movlw	254
 10670   0141D2  24E1               	addwf	fsr1l,w,c
 10671   0141D4  6E2D               	movwf	btemp^0,c
 10672   0141D6  0EFF               	movlw	255
 10673   0141D8  20E2               	addwfc	fsr1h,w,c
 10674   0141DA  6E2E               	movwf	(btemp+1)^0,c
 10675   0141DC  C02D  FFE6         	movff	btemp,postinc1
 10676   0141E0  C02E  FFE6         	movff	btemp+1,postinc1
 10677   0141E4  0E16               	movlw	22
 10678   0141E6  6EE6               	movwf	postinc1,c
 10679   0141E8  0E00               	movlw	0
 10680   0141EA  6EE6               	movwf	postinc1,c
 10681   0141EC  ECB3  F0A0         	call	_DRV_CANFDSPI_ReadByte	;wreg free
 10682                           
 10683                           ;stkvar	_spiTransferError @ sp[(-2)+1]
 10684   0141F0  0EFF               	movlw	-1
 10685   0141F2  C02D  FFE3         	movff	btemp,plusw1
 10686   0141F6                     
 10687                           ;can/can.c: 2641:     if (spiTransferError) {
 10688                           ;stkvar	_spiTransferError @ sp[(-2)+1]
 10689   0141F6  0EFF               	movlw	-1
 10690   0141F8  50E3               	movf	plusw1,w,c
 10691   0141FA  B4D8               	btfsc	status,2,c
 10692   0141FC  EF02  F0A1         	goto	u2361
 10693   014200  EF04  F0A1         	goto	u2360
 10694   014204                     u2361:
 10695   014204  EF06  F0A1         	goto	l4532
 10696   014208                     u2360:
 10697   014208  EF11  F0A1         	goto	l623
 10698   01420C                     l4532:
 10699                           
 10700                           ;can/can.c: 2646:     d |= 0x01;
 10701                           ;stkvar	_d @ sp[(-2)+0]
 10702   01420C  0EFE               	movlw	-2
 10703   01420E  80E3               	bsf	plusw1,0,c
 10704   014210                     
 10705                           ;stkvar	_d @ sp[(-2)+0]
 10706   014210  0EFE               	movlw	-2
 10707   014212  50E3               	movf	plusw1,w,c
 10708   014214  6EE6               	movwf	postinc1,c
 10709   014216  0E16               	movlw	22
 10710   014218  6EE6               	movwf	postinc1,c
 10711   01421A  0E00               	movlw	0
 10712   01421C  6EE6               	movwf	postinc1,c
 10713   01421E  EC40  F0A1         	call	_DRV_CANFDSPI_WriteByte	;wreg free
 10714   014222                     l623:
 10715                           
 10716                           ; _DRV_CANFDSPI_TimeStampEnable: autosize = 2, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 10717   014222  52E5               	movf	postdec1,f,c
 10718   014224  52E5               	movf	postdec1,f,c
 10719   014226  0012               	return		;funcret
 10720   014228                     __end_of_DRV_CANFDSPI_TimeStampEnable:
 10721                           	callstack 0
 10722                           
 10723 ;; *************** function _DRV_CANFDSPI_TefConfigure *****************
 10724 ;; Defined at:
 10725 ;;		line 1539 in file "can/can.c"
 10726 ;; Parameters:    Size  Location     Type
 10727 ;;  config          2  [STACK] PTR struct _CAN_TEF_CONF
 10728 ;;		 -> tefConfig(1), 
 10729 ;; Auto vars:     Size  Location     Type
 10730 ;;  ciTefCon        4  [STACK] struct _REG_CiTEFCON
 10731 ;;  spiTransferE    1    0        char 
 10732 ;; Return value:  Size  Location     Type
 10733 ;;                  1  [STACK] char 
 10734 ;; Registers used:
 10735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 10736 ;; Tracked objects:
 10737 ;;		On entry : 0/0
 10738 ;;		On exit  : 0/0
 10739 ;;		Unchanged: 0/0
 10740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10745 ;;Total ram usage:        0 bytes
 10746 ;; Hardware stack levels used: 1
 10747 ;; Hardware stack levels required when called: 9
 10748 ;; This function calls:
 10749 ;;		_DRV_CANFDSPI_WriteWord
 10750 ;; This function is called by:
 10751 ;;		_CanInit
 10752 ;; This function uses a reentrant model
 10753 ;;
 10754                           
 10755                           	psect	text53
 10756   01381E                     __ptext53:
 10757                           	callstack 0
 10758   01381E                     _DRV_CANFDSPI_TefConfigure:
 10759                           	callstack 0
 10760                           
 10761                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10762   01381E  52E6               	movf	postinc1,f,c
 10763   013820  52E6               	movf	postinc1,f,c
 10764   013822  52E6               	movf	postinc1,f,c
 10765   013824  52E6               	movf	postinc1,f,c
 10766   013826                     
 10767                           ;can/can.c: 1544:     REG_CiTEFCON ciTefCon;;can/can.c: 1545:     ciTefCon.word = canFif
      +                          oResetValues[0];
 10768   013826  0EDD               	movlw	low _canFifoResetValues
 10769   013828  6EF6               	movwf	tblptrl,c
 10770   01382A                     	if	1	;There is more than 1 active tblptr byte
 10771   01382A  0EFF               	movlw	high _canFifoResetValues
 10772   01382C  6EF7               	movwf	tblptrh,c
 10773   01382E                     	endif
 10774   01382E                     	if	1	;There are 3 active tblptr bytes
 10775   01382E  0E00               	movlw	low (_canFifoResetValues shr (0+16))
 10776   013830  6EF8               	movwf	tblptru,c
 10777   013832                     	endif
 10778   013832  0009               	tblrd		*+
 10779   013834  CFF5 F035          	movff	tablat,btemp+8
 10780   013838  0009               	tblrd		*+
 10781   01383A  CFF5 F036          	movff	tablat,btemp+9
 10782   01383E  0009               	tblrd		*+
 10783   013840  CFF5 F037          	movff	tablat,btemp+10
 10784   013844  0009               	tblrd		*+
 10785   013846  CFF5 F038          	movff	tablat,btemp+11
 10786                           
 10787                           ;stkvar	_ciTefCon @ sp[(-4)+0]
 10788   01384A  0EFC               	movlw	-4
 10789   01384C  C035  FFE3         	movff	btemp+8,plusw1
 10790   013850  0EFD               	movlw	-3
 10791   013852  C036  FFE3         	movff	btemp+9,plusw1
 10792   013856  0EFE               	movlw	-2
 10793   013858  C037  FFE3         	movff	btemp+10,plusw1
 10794   01385C  0EFF               	movlw	-1
 10795   01385E  C038  FFE3         	movff	btemp+11,plusw1
 10796   013862                     
 10797                           ;can/can.c: 1547:     ciTefCon.bF.FifoSize = config->FifoSize;
 10798                           ;stkvar	_config @ sp[(-4)+-2]
 10799   013862  0EFA               	movlw	-6
 10800   013864  CFE3 FFD9          	movff	plusw1,fsr2l
 10801   013868  0EFB               	movlw	-5
 10802   01386A  CFE3 FFDA          	movff	plusw1,fsr2h
 10803   01386E  30DF               	rrcf	223,w,c
 10804   013870  0B1F               	andlw	31
 10805   013872  6E38               	movwf	(btemp+11)^0,c
 10806                           
 10807                           ;stkvar	_ciTefCon @ sp[(-4)+0]
 10808   013874  0EFF               	movlw	255
 10809   013876  24E1               	addwf	fsr1l,w,c
 10810   013878  6ED9               	movwf	fsr2l,c
 10811   01387A  0EFF               	movlw	255
 10812   01387C  20E2               	addwfc	fsr1h,w,c
 10813   01387E  6EDA               	movwf	fsr2h,c
 10814   013880  50DF               	movf	223,w,c
 10815   013882  1838               	xorwf	(btemp+11)^0,w,c
 10816   013884  0BE0               	andlw	-32
 10817   013886  1838               	xorwf	(btemp+11)^0,w,c
 10818   013888  6EDF               	movwf	223,c
 10819   01388A                     
 10820                           ;can/can.c: 1548:     ciTefCon.bF.TimeStampEnable = config->TimeStampEnable;
 10821                           ;stkvar	_config @ sp[(-4)+-2]
 10822   01388A  0EFA               	movlw	-6
 10823   01388C  CFE3 FFD9          	movff	plusw1,fsr2l
 10824   013890  0EFB               	movlw	-5
 10825   013892  CFE3 FFDA          	movff	plusw1,fsr2h
 10826                           
 10827                           ;stkvar	_ciTefCon @ sp[(-4)+0]
 10828   013896  50E1               	movf	fsr1l,w,c
 10829   013898  0FFC               	addlw	-4
 10830   01389A  6EE9               	movwf	fsr0l,c
 10831   01389C  50E2               	movf	fsr1h,w,c
 10832   01389E  6EEA               	movwf	fsr0h,c
 10833   0138A0  0EFF               	movlw	255
 10834   0138A2  22EA               	addwfc	fsr0h,f,c
 10835   0138A4  9AEF               	bcf	indf0,5,c
 10836   0138A6  A0DF               	btfss	indf2,0,c
 10837   0138A8  EF57  F09C         	goto	u2325
 10838   0138AC  8AEF               	bsf	indf0,5,c
 10839   0138AE                     u2325:
 10840   0138AE                     
 10841                           ;stkvar	_ciTefCon @ sp[(-4)+0]
 10842   0138AE  0EFC               	movlw	-4
 10843   0138B0  CFE3 FFE6          	movff	plusw1,postinc1
 10844   0138B4  CFE3 FFE6          	movff	plusw1,postinc1
 10845   0138B8  CFE3 FFE6          	movff	plusw1,postinc1
 10846   0138BC  CFE3 FFE6          	movff	plusw1,postinc1
 10847   0138C0  0E40               	movlw	64
 10848   0138C2  6EE6               	movwf	postinc1,c
 10849   0138C4  0E00               	movlw	0
 10850   0138C6  6EE6               	movwf	postinc1,c
 10851   0138C8  ECA8  F099         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 10852   0138CC                     
 10853                           ; _DRV_CANFDSPI_TefConfigure: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 2, argsize = 2, vargsize = 0
 10854   0138CC  0EFA               	movlw	250
 10855   0138CE  26E1               	addwf	fsr1l,f,c
 10856   0138D0  0EFF               	movlw	255
 10857   0138D2  22E2               	addwfc	fsr1h,f,c
 10858   0138D4  0012               	return		;funcret
 10859   0138D6                     __end_of_DRV_CANFDSPI_TefConfigure:
 10860                           	callstack 0
 10861                           
 10862 ;; *************** function _DRV_CANFDSPI_Reset *****************
 10863 ;; Defined at:
 10864 ;;		line 257 in file "can/can.c"
 10865 ;; Parameters:    Size  Location     Type
 10866 ;;		None
 10867 ;; Auto vars:     Size  Location     Type
 10868 ;;  spiTransferS    2    0        unsigned short 
 10869 ;;  spiTransferE    1    0        char 
 10870 ;; Return value:  Size  Location     Type
 10871 ;;                  1  [STACK] char 
 10872 ;; Registers used:
 10873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, p
      +rodh
 10874 ;; Tracked objects:
 10875 ;;		On entry : 0/0
 10876 ;;		On exit  : 0/0
 10877 ;;		Unchanged: 0/0
 10878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10883 ;;Total ram usage:        0 bytes
 10884 ;; Hardware stack levels used: 1
 10885 ;; Hardware stack levels required when called: 8
 10886 ;; This function calls:
 10887 ;;		_SPI2_Open
 10888 ;;		_SpiTransfer
 10889 ;; This function is called by:
 10890 ;;		_CanInit
 10891 ;; This function uses a reentrant model
 10892 ;;
 10893                           
 10894                           	psect	text54
 10895   0144B0                     __ptext54:
 10896                           	callstack 0
 10897   0144B0                     _DRV_CANFDSPI_Reset:
 10898                           	callstack 21
 10899   0144B0                     
 10900                           ;can/can.c: 263:     spiTransmitBuffer[0] = (uint8_t) (0x00 << 4);
 10901   0144B0  0101               	movlb	1	; () banked
 10902   0144B2  6B00               	clrf	_spiTransmitBuffer& (0+255),b
 10903   0144B4                     
 10904                           ; BSR set to: 1
 10905                           ;can/can.c: 264:     spiTransmitBuffer[1] = 0;
 10906   0144B4  6B01               	clrf	(_spiTransmitBuffer+1)& (0+255),b
 10907   0144B6                     
 10908                           ; BSR set to: 1
 10909                           ;can/can.c: 265:     SPI2_Open(SPI2_DEFAULT);
 10910   0144B6  0E00               	movlw	0
 10911   0144B8  6EE6               	movwf	postinc1,c
 10912   0144BA  EC6B  F09C         	call	_SPI2_Open	;wreg free
 10913   0144BE  0E02               	movlw	2
 10914   0144C0  6EE6               	movwf	postinc1,c
 10915   0144C2  0E00               	movlw	0
 10916   0144C4  6EE6               	movwf	postinc1,c
 10917   0144C6  0E00               	movlw	low _spiReceiveBuffer
 10918   0144C8  6EE6               	movwf	postinc1,c
 10919   0144CA  0E02               	movlw	high _spiReceiveBuffer
 10920   0144CC  6EE6               	movwf	postinc1,c
 10921   0144CE  0E00               	movlw	low _spiTransmitBuffer
 10922   0144D0  6EE6               	movwf	postinc1,c
 10923   0144D2  0E01               	movlw	high _spiTransmitBuffer
 10924   0144D4  6EE6               	movwf	postinc1,c
 10925   0144D6  ECAD  F09B         	call	_SpiTransfer	;wreg free
 10926   0144DA                     
 10927                           ; _DRV_CANFDSPI_Reset: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 10928   0144DA  0012               	return		;funcret
 10929   0144DC                     __end_of_DRV_CANFDSPI_Reset:
 10930                           	callstack 0
 10931                           
 10932 ;; *************** function _SPI2_Open *****************
 10933 ;; Defined at:
 10934 ;;		line 72 in file "mcc_generated_files/spi2.c"
 10935 ;; Parameters:    Size  Location     Type
 10936 ;;  spi2UniqueCo    1  [STACK] enum E358
 10937 ;; Auto vars:     Size  Location     Type
 10938 ;;		None
 10939 ;; Return value:  Size  Location     Type
 10940 ;;                  1  [STACK] _Bool 
 10941 ;; Registers used:
 10942 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10943 ;; Tracked objects:
 10944 ;;		On entry : 3F/1
 10945 ;;		On exit  : 0/0
 10946 ;;		Unchanged: 0/0
 10947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10952 ;;Total ram usage:        0 bytes
 10953 ;; Hardware stack levels used: 1
 10954 ;; Hardware stack levels required when called: 7
 10955 ;; This function calls:
 10956 ;;		Nothing
 10957 ;; This function is called by:
 10958 ;;		_DRV_CANFDSPI_Reset
 10959 ;; This function uses a reentrant model
 10960 ;;
 10961                           
 10962                           	psect	text55
 10963   0138D6                     __ptext55:
 10964                           	callstack 0
 10965   0138D6                     _SPI2_Open:
 10966                           	callstack 21
 10967   0138D6                     
 10968                           ;mcc_generated_files/spi2.c: 72: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 73: {;mcc_generated_files/spi2.c: 74:     if(!SSP2CON1bits.SS
      +                          PEN)
 10969   0138D6  BA63               	btfsc	99,5,c	;volatile
 10970   0138D8  EF70  F09C         	goto	u2091
 10971   0138DC  EF72  F09C         	goto	u2090
 10972   0138E0                     u2091:
 10973   0138E0  EFC4  F09C         	goto	l1120
 10974   0138E4                     u2090:
 10975   0138E4                     
 10976                           ;mcc_generated_files/spi2.c: 75:     {;mcc_generated_files/spi2.c: 76:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
 10977                           ;stkvar	_spi2UniqueConfiguration @ sp[(0)+-1]
 10978   0138E4  0EFF               	movlw	-1
 10979   0138E6  50E3               	movf	plusw1,w,c
 10980   0138E8  0D04               	mullw	4
 10981   0138EA  0E01               	movlw	1
 10982   0138EC  26F3               	addwf	243,f,c
 10983   0138EE  0E00               	movlw	0
 10984   0138F0  22F4               	addwfc	244,f,c
 10985   0138F2  0EE9               	movlw	low _spi2_configuration
 10986   0138F4  24F3               	addwf	243,w,c
 10987   0138F6  6EF6               	movwf	tblptrl,c
 10988   0138F8  0EFF               	movlw	high _spi2_configuration
 10989   0138FA  20F4               	addwfc	244,w,c
 10990   0138FC  6EF7               	movwf	tblptrh,c
 10991   0138FE                     	if	1	;There are 3 active tblptr bytes
 10992   0138FE  6AF8               	clrf	tblptru,c
 10993   013900  0E00               	movlw	low (__mediumconst shr (0+16))
 10994   013902  22F8               	addwfc	tblptru,f,c
 10995   013904                     	endif
 10996   013904  0008               	tblrd		*
 10997   013906  CFF5 FF64          	movff	tablat,3940	;volatile
 10998                           
 10999                           ;mcc_generated_files/spi2.c: 77:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
 11000                           ;stkvar	_spi2UniqueConfiguration @ sp[(0)+-1]
 11001   01390A  0EFF               	movlw	-1
 11002   01390C  50E3               	movf	plusw1,w,c
 11003   01390E  0D04               	mullw	4
 11004   013910  0EE9               	movlw	low _spi2_configuration
 11005   013912  24F3               	addwf	243,w,c
 11006   013914  6EF6               	movwf	tblptrl,c
 11007   013916  0EFF               	movlw	high _spi2_configuration
 11008   013918  20F4               	addwfc	244,w,c
 11009   01391A  6EF7               	movwf	tblptrh,c
 11010   01391C                     	if	1	;There are 3 active tblptr bytes
 11011   01391C  6AF8               	clrf	tblptru,c
 11012   01391E  0E00               	movlw	low (__mediumconst shr (0+16))
 11013   013920  22F8               	addwfc	tblptru,f,c
 11014   013922                     	endif
 11015   013922  0008               	tblrd		*
 11016   013924  CFF5 FF63          	movff	tablat,3939	;volatile
 11017   013928                     
 11018                           ;mcc_generated_files/spi2.c: 78:         SSP2CON2 = 0x00;
 11019   013928  6A62               	clrf	98,c	;volatile
 11020                           
 11021                           ;mcc_generated_files/spi2.c: 79:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
 11022                           ;stkvar	_spi2UniqueConfiguration @ sp[(0)+-1]
 11023   01392A  0EFF               	movlw	-1
 11024   01392C  50E3               	movf	plusw1,w,c
 11025   01392E  0D04               	mullw	4
 11026   013930  0E02               	movlw	2
 11027   013932  26F3               	addwf	243,f,c
 11028   013934  0E00               	movlw	0
 11029   013936  22F4               	addwfc	244,f,c
 11030   013938  0EE9               	movlw	low _spi2_configuration
 11031   01393A  24F3               	addwf	243,w,c
 11032   01393C  6EF6               	movwf	tblptrl,c
 11033   01393E  0EFF               	movlw	high _spi2_configuration
 11034   013940  20F4               	addwfc	244,w,c
 11035   013942  6EF7               	movwf	tblptrh,c
 11036   013944                     	if	1	;There are 3 active tblptr bytes
 11037   013944  6AF8               	clrf	tblptru,c
 11038   013946  0E00               	movlw	low (__mediumconst shr (0+16))
 11039   013948  22F8               	addwfc	tblptru,f,c
 11040   01394A                     	endif
 11041   01394A  0008               	tblrd		*
 11042   01394C  CFF5 FF65          	movff	tablat,3941	;volatile
 11043   013950                     
 11044                           ;mcc_generated_files/spi2.c: 80:         TRISDbits.TRISD6 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
 11045                           ;stkvar	_spi2UniqueConfiguration @ sp[(0)+-1]
 11046   013950  0EFF               	movlw	-1
 11047   013952  50E3               	movf	plusw1,w,c
 11048   013954  0D04               	mullw	4
 11049   013956  0E03               	movlw	3
 11050   013958  26F3               	addwf	243,f,c
 11051   01395A  0E00               	movlw	0
 11052   01395C  22F4               	addwfc	244,f,c
 11053   01395E  0EE9               	movlw	low _spi2_configuration
 11054   013960  24F3               	addwf	243,w,c
 11055   013962  6EF6               	movwf	tblptrl,c
 11056   013964  0EFF               	movlw	high _spi2_configuration
 11057   013966  20F4               	addwfc	244,w,c
 11058   013968  6EF7               	movwf	tblptrh,c
 11059   01396A                     	if	1	;There are 3 active tblptr bytes
 11060   01396A  6AF8               	clrf	tblptru,c
 11061   01396C  0E00               	movlw	low (__mediumconst shr (0+16))
 11062   01396E  22F8               	addwfc	tblptru,f,c
 11063   013970                     	endif
 11064   013970  0008               	tblrd		*
 11065   013972  CFF5 F038          	movff	tablat,btemp+11
 11066   013976  3A38               	swapf	(btemp+11)^0,f,c
 11067   013978  4638               	rlncf	(btemp+11)^0,f,c
 11068   01397A  4638               	rlncf	(btemp+11)^0,f,c
 11069   01397C  5095               	movf	149,w,c	;volatile
 11070   01397E  1838               	xorwf	(btemp+11)^0,w,c
 11071   013980  0BBF               	andlw	-65
 11072   013982  1838               	xorwf	(btemp+11)^0,w,c
 11073   013984  6E95               	movwf	149,c	;volatile
 11074   013986                     
 11075                           ;mcc_generated_files/spi2.c: 81:         SSP2CON1bits.SSPEN = 1;
 11076   013986  8A63               	bsf	99,5,c	;volatile
 11077   013988                     l1120:
 11078                           
 11079                           ; _SPI2_Open: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 11080   013988  52E5               	movf	postdec1,f,c
 11081   01398A  0012               	return		;funcret
 11082   01398C                     __end_of_SPI2_Open:
 11083                           	callstack 0
 11084                           
 11085 ;; *************** function _DRV_CANFDSPI_ReceiveChannelConfigure *****************
 11086 ;; Defined at:
 11087 ;;		line 1172 in file "can/can.c"
 11088 ;; Parameters:    Size  Location     Type
 11089 ;;  channel         1  [STACK] enum E5290
 11090 ;;  config          2  [STACK] PTR struct _CAN_RX_FIFO_
 11091 ;;		 -> rxfConfig(3), 
 11092 ;; Auto vars:     Size  Location     Type
 11093 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
 11094 ;;  a               2  [STACK] unsigned short 
 11095 ;;  spiTransferE    1    0        char 
 11096 ;; Return value:  Size  Location     Type
 11097 ;;                  1  [STACK] char 
 11098 ;; Registers used:
 11099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 11100 ;; Tracked objects:
 11101 ;;		On entry : 0/0
 11102 ;;		On exit  : 0/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11109 ;;Total ram usage:        0 bytes
 11110 ;; Hardware stack levels used: 1
 11111 ;; Hardware stack levels required when called: 9
 11112 ;; This function calls:
 11113 ;;		_DRV_CANFDSPI_WriteWord
 11114 ;; This function is called by:
 11115 ;;		_CanInit
 11116 ;; This function uses a reentrant model
 11117 ;;
 11118                           
 11119                           	psect	text56
 11120   012AC4                     __ptext56:
 11121                           	callstack 0
 11122   012AC4                     _DRV_CANFDSPI_ReceiveChannelConfigure:
 11123                           	callstack 0
 11124                           
 11125                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11126   012AC4  0E07               	movlw	7
 11127   012AC6  26E1               	addwf	fsr1l,f,c
 11128   012AC8  0E00               	movlw	0
 11129   012ACA  22E2               	addwfc	fsr1h,f,c
 11130   012ACC                     
 11131                           ;can/can.c: 1178:     if (channel == CAN_FIFO_CH0) {
 11132                           ;stkvar	_channel @ sp[(-7)+-1]
 11133   012ACC  0EF8               	movlw	-8
 11134   012ACE  50E3               	movf	plusw1,w,c
 11135   012AD0  A4D8               	btfss	status,2,c
 11136   012AD2  EF6D  F095         	goto	u2341
 11137   012AD6  EF6F  F095         	goto	u2340
 11138   012ADA                     u2341:
 11139   012ADA  EF71  F095         	goto	l4496
 11140   012ADE                     u2340:
 11141   012ADE  EFFE  F095         	goto	l346
 11142   012AE2                     l4496:
 11143                           
 11144                           ;can/can.c: 1183:     REG_CiFIFOCON ciFifoCon;;can/can.c: 1184:     ciFifoCon.word = can
      +                          FifoResetValues[0];
 11145   012AE2  0EDD               	movlw	low _canFifoResetValues
 11146   012AE4  6EF6               	movwf	tblptrl,c
 11147   012AE6                     	if	1	;There is more than 1 active tblptr byte
 11148   012AE6  0EFF               	movlw	high _canFifoResetValues
 11149   012AE8  6EF7               	movwf	tblptrh,c
 11150   012AEA                     	endif
 11151   012AEA                     	if	1	;There are 3 active tblptr bytes
 11152   012AEA  0E00               	movlw	low (_canFifoResetValues shr (0+16))
 11153   012AEC  6EF8               	movwf	tblptru,c
 11154   012AEE                     	endif
 11155   012AEE  0009               	tblrd		*+
 11156   012AF0  CFF5 F035          	movff	tablat,btemp+8
 11157   012AF4  0009               	tblrd		*+
 11158   012AF6  CFF5 F036          	movff	tablat,btemp+9
 11159   012AFA  0009               	tblrd		*+
 11160   012AFC  CFF5 F037          	movff	tablat,btemp+10
 11161   012B00  0009               	tblrd		*+
 11162   012B02  CFF5 F038          	movff	tablat,btemp+11
 11163                           
 11164                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 11165   012B06  0EF9               	movlw	-7
 11166   012B08  C035  FFE3         	movff	btemp+8,plusw1
 11167   012B0C  0EFA               	movlw	-6
 11168   012B0E  C036  FFE3         	movff	btemp+9,plusw1
 11169   012B12  0EFB               	movlw	-5
 11170   012B14  C037  FFE3         	movff	btemp+10,plusw1
 11171   012B18  0EFC               	movlw	-4
 11172   012B1A  C038  FFE3         	movff	btemp+11,plusw1
 11173   012B1E                     
 11174                           ;can/can.c: 1186:     ciFifoCon.rxBF.TxEnable = 0;
 11175                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 11176   012B1E  50E1               	movf	fsr1l,w,c
 11177   012B20  0FF9               	addlw	-7
 11178   012B22  6ED9               	movwf	fsr2l,c
 11179   012B24  50E2               	movf	fsr1h,w,c
 11180   012B26  6EDA               	movwf	fsr2h,c
 11181   012B28  0EFF               	movlw	255
 11182   012B2A  22DA               	addwfc	fsr2h,f,c
 11183   012B2C  9EDF               	bcf	indf2,7,c
 11184   012B2E                     
 11185                           ;can/can.c: 1189:     ciFifoCon.byte[3] = config->FifoSize | (uint8_t)(config->PayLoadSi
      +                          ze << 5);
 11186                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 11187   012B2E  0EFC               	movlw	252
 11188   012B30  24E1               	addwf	fsr1l,w,c
 11189   012B32  6ED9               	movwf	fsr2l,c
 11190   012B34  0EFF               	movlw	255
 11191   012B36  20E2               	addwfc	fsr1h,w,c
 11192   012B38  6EDA               	movwf	fsr2h,c
 11193                           
 11194                           ;stkvar	_config @ sp[(-7)+-3]
 11195   012B3A  0EF6               	movlw	-10
 11196   012B3C  CFE3 F037          	movff	plusw1,btemp+10
 11197   012B40  0EF7               	movlw	-9
 11198   012B42  CFE3 F038          	movff	plusw1,btemp+11
 11199   012B46  0E01               	movlw	1
 11200   012B48  2437               	addwf	(btemp+10)^0,w,c
 11201   012B4A  6EE9               	movwf	fsr0l,c
 11202   012B4C  0E00               	movlw	0
 11203   012B4E  2038               	addwfc	(btemp+11)^0,w,c
 11204   012B50  6EEA               	movwf	fsr0h,c
 11205   012B52  50EF               	movf	indf0,w,c
 11206   012B54  6E38               	movwf	(btemp+11)^0,c
 11207                           
 11208                           ;stkvar	_config @ sp[(-7)+-3]
 11209   012B56  0EF6               	movlw	-10
 11210   012B58  CFE3 F035          	movff	plusw1,btemp+8
 11211   012B5C  0EF7               	movlw	-9
 11212   012B5E  CFE3 F036          	movff	plusw1,btemp+9
 11213   012B62  0E02               	movlw	2
 11214   012B64  2435               	addwf	(btemp+8)^0,w,c
 11215   012B66  6EE9               	movwf	fsr0l,c
 11216   012B68  0E00               	movlw	0
 11217   012B6A  2036               	addwfc	(btemp+9)^0,w,c
 11218   012B6C  6EEA               	movwf	fsr0h,c
 11219   012B6E  50EF               	movf	indf0,w,c
 11220   012B70  6E37               	movwf	(btemp+10)^0,c
 11221   012B72  0E05               	movlw	5
 11222   012B74  6E2D               	movwf	btemp^0,c
 11223   012B76                     u2355:
 11224   012B76  90D8               	bcf	status,0,c
 11225   012B78  3637               	rlcf	(btemp+10)^0,f,c
 11226   012B7A  2E2D               	decfsz	btemp^0,f,c
 11227   012B7C  EFBB  F095         	goto	u2355
 11228   012B80  5037               	movf	(btemp+10)^0,w,c
 11229   012B82  1038               	iorwf	(btemp+11)^0,w,c
 11230   012B84  6EDF               	movwf	indf2,c
 11231   012B86                     
 11232                           ;can/can.c: 1190:     ciFifoCon.rxBF.RxTimeStampEnable = config->RxTimeStampEnable;
 11233                           ;stkvar	_config @ sp[(-7)+-3]
 11234   012B86  0EF6               	movlw	-10
 11235   012B88  CFE3 FFD9          	movff	plusw1,fsr2l
 11236   012B8C  0EF7               	movlw	-9
 11237   012B8E  CFE3 FFDA          	movff	plusw1,fsr2h
 11238   012B92  50DF               	movf	indf2,w,c
 11239   012B94  6E38               	movwf	(btemp+11)^0,c
 11240                           
 11241                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 11242   012B96  50E1               	movf	fsr1l,w,c
 11243   012B98  0FF9               	addlw	-7
 11244   012B9A  6ED9               	movwf	fsr2l,c
 11245   012B9C  50E2               	movf	fsr1h,w,c
 11246   012B9E  6EDA               	movwf	fsr2h,c
 11247   012BA0  0EFF               	movlw	255
 11248   012BA2  22DA               	addwfc	fsr2h,f,c
 11249   012BA4  3A38               	swapf	(btemp+11)^0,f,c
 11250   012BA6  4638               	rlncf	(btemp+11)^0,f,c
 11251   012BA8  50DF               	movf	223,w,c
 11252   012BAA  1838               	xorwf	(btemp+11)^0,w,c
 11253   012BAC  0BDF               	andlw	-33
 11254   012BAE  1838               	xorwf	(btemp+11)^0,w,c
 11255   012BB0  6EDF               	movwf	223,c
 11256   012BB2                     
 11257                           ;can/can.c: 1193:     ciFifoCon.rxBF.RxNotEmptyIE = 1;
 11258                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 11259   012BB2  50E1               	movf	fsr1l,w,c
 11260   012BB4  0FF9               	addlw	-7
 11261   012BB6  6ED9               	movwf	fsr2l,c
 11262   012BB8  50E2               	movf	fsr1h,w,c
 11263   012BBA  6EDA               	movwf	fsr2h,c
 11264   012BBC  0EFF               	movlw	255
 11265   012BBE  22DA               	addwfc	fsr2h,f,c
 11266   012BC0  80DF               	bsf	indf2,0,c
 11267   012BC2                     
 11268                           ;can/can.c: 1195:     a = 0x050 + (channel * (3*4));
 11269                           ;stkvar	_channel @ sp[(-7)+-1]
 11270   012BC2  0EF8               	movlw	-8
 11271   012BC4  50E3               	movf	plusw1,w,c
 11272   012BC6  0D0C               	mullw	12
 11273   012BC8  0E50               	movlw	80
 11274   012BCA  26F3               	addwf	243,f,c
 11275   012BCC  0E00               	movlw	0
 11276   012BCE  22F4               	addwfc	244,f,c
 11277                           
 11278                           ;stkvar	_a @ sp[(-7)+5]
 11279   012BD0  0EFE               	movlw	-2
 11280   012BD2  CFF3 FFE3          	movff	prodl,plusw1
 11281   012BD6  0EFF               	movlw	-1
 11282   012BD8  CFF4 FFE3          	movff	prodh,plusw1
 11283   012BDC                     
 11284                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 11285   012BDC  0EF9               	movlw	-7
 11286   012BDE  CFE3 FFE6          	movff	plusw1,postinc1
 11287   012BE2  CFE3 FFE6          	movff	plusw1,postinc1
 11288   012BE6  CFE3 FFE6          	movff	plusw1,postinc1
 11289   012BEA  CFE3 FFE6          	movff	plusw1,postinc1
 11290                           
 11291                           ;stkvar	_a @ sp[(-11)+5]
 11292   012BEE  0EFA               	movlw	-6
 11293   012BF0  CFE3 FFE6          	movff	plusw1,postinc1
 11294   012BF4  CFE3 FFE6          	movff	plusw1,postinc1
 11295   012BF8  ECA8  F099         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 11296   012BFC                     l346:
 11297                           
 11298                           ; _DRV_CANFDSPI_ReceiveChannelConfigure: autosize = 7, savesize = 0, parsavesize = 0, te
      +                          mpsize = 0 parsize = 3, argsize = 3, vargsize = 0
 11299   012BFC  0EF6               	movlw	246
 11300   012BFE  26E1               	addwf	fsr1l,f,c
 11301   012C00  0EFF               	movlw	255
 11302   012C02  22E2               	addwfc	fsr1h,f,c
 11303   012C04  0012               	return		;funcret
 11304   012C06                     __end_of_DRV_CANFDSPI_ReceiveChannelConfigure:
 11305                           	callstack 0
 11306                           
 11307 ;; *************** function _DRV_CANFDSPI_OperationModeSelect *****************
 11308 ;; Defined at:
 11309 ;;		line 499 in file "can/can.c"
 11310 ;; Parameters:    Size  Location     Type
 11311 ;;  opMode          1  [STACK] enum E5360
 11312 ;; Auto vars:     Size  Location     Type
 11313 ;;  d               1  [STACK] unsigned char 
 11314 ;;  spiTransferE    1  [STACK] char 
 11315 ;; Return value:  Size  Location     Type
 11316 ;;                  1  [STACK] char 
 11317 ;; Registers used:
 11318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11319 ;; Tracked objects:
 11320 ;;		On entry : 0/0
 11321 ;;		On exit  : 0/0
 11322 ;;		Unchanged: 0/0
 11323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11328 ;;Total ram usage:        0 bytes
 11329 ;; Hardware stack levels used: 1
 11330 ;; Hardware stack levels required when called: 9
 11331 ;; This function calls:
 11332 ;;		_DRV_CANFDSPI_ReadByte
 11333 ;;		_DRV_CANFDSPI_WriteByte
 11334 ;; This function is called by:
 11335 ;;		_CanInit
 11336 ;; This function uses a reentrant model
 11337 ;;
 11338                           
 11339                           	psect	text57
 11340   013F3A                     __ptext57:
 11341                           	callstack 0
 11342   013F3A                     _DRV_CANFDSPI_OperationModeSelect:
 11343                           	callstack 0
 11344                           
 11345                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11346   013F3A  52E6               	movf	postinc1,f,c
 11347   013F3C  52E6               	movf	postinc1,f,c
 11348   013F3E                     
 11349                           ;can/can.c: 499: int8_t DRV_CANFDSPI_OperationModeSelect(CAN_OPERATION_MODE opMode);can/
      +                          can.c: 500: {;can/can.c: 501:     uint8_t d = 0;
 11350                           ;stkvar	_d @ sp[(-2)+0]
 11351   013F3E  0EFE               	movlw	-2
 11352   013F40  6AE3               	clrf	plusw1,c
 11353   013F42                     
 11354                           ;can/can.c: 505:     spiTransferError = DRV_CANFDSPI_ReadByte(0x000 + 3, &d);
 11355                           ;stkvar	_d @ sp[(-2)+0]
 11356   013F42  0EFE               	movlw	254
 11357   013F44  24E1               	addwf	fsr1l,w,c
 11358   013F46  6E2D               	movwf	btemp^0,c
 11359   013F48  0EFF               	movlw	255
 11360   013F4A  20E2               	addwfc	fsr1h,w,c
 11361   013F4C  6E2E               	movwf	(btemp+1)^0,c
 11362   013F4E  C02D  FFE6         	movff	btemp,postinc1
 11363   013F52  C02E  FFE6         	movff	btemp+1,postinc1
 11364   013F56  0E03               	movlw	3
 11365   013F58  6EE6               	movwf	postinc1,c
 11366   013F5A  0E00               	movlw	0
 11367   013F5C  6EE6               	movwf	postinc1,c
 11368   013F5E  ECB3  F0A0         	call	_DRV_CANFDSPI_ReadByte	;wreg free
 11369                           
 11370                           ;stkvar	_spiTransferError @ sp[(-2)+1]
 11371   013F62  0EFF               	movlw	-1
 11372   013F64  C02D  FFE3         	movff	btemp,plusw1
 11373   013F68                     
 11374                           ;can/can.c: 506:     if (spiTransferError) {
 11375                           ;stkvar	_spiTransferError @ sp[(-2)+1]
 11376   013F68  0EFF               	movlw	-1
 11377   013F6A  50E3               	movf	plusw1,w,c
 11378   013F6C  B4D8               	btfsc	status,2,c
 11379   013F6E  EFBB  F09F         	goto	u2371
 11380   013F72  EFBD  F09F         	goto	u2370
 11381   013F76                     u2371:
 11382   013F76  EFBF  F09F         	goto	l4564
 11383   013F7A                     u2370:
 11384   013F7A  EFDC  F09F         	goto	l222
 11385   013F7E                     l4564:
 11386                           
 11387                           ;can/can.c: 511:     d &= ~0x07;
 11388                           ;stkvar	_d @ sp[(-2)+0]
 11389   013F7E  0EFE               	movlw	-2
 11390   013F80  CFE3 F02D          	movff	plusw1,btemp
 11391   013F84  0EF8               	movlw	248
 11392   013F86  162D               	andwf	btemp^0,f,c
 11393   013F88  0EFE               	movlw	-2
 11394   013F8A  C02D  FFE3         	movff	btemp,plusw1
 11395   013F8E                     
 11396                           ;can/can.c: 512:     d |= opMode;
 11397                           ;stkvar	_opMode @ sp[(-2)+-1]
 11398   013F8E  0EFD               	movlw	-3
 11399   013F90  CFE3 F038          	movff	plusw1,btemp+11
 11400                           
 11401                           ;stkvar	_d @ sp[(-2)+0]
 11402   013F94  50E1               	movf	fsr1l,w,c
 11403   013F96  0FFE               	addlw	-2
 11404   013F98  6ED9               	movwf	fsr2l,c
 11405   013F9A  50E2               	movf	fsr1h,w,c
 11406   013F9C  6EDA               	movwf	fsr2h,c
 11407   013F9E  0EFF               	movlw	255
 11408   013FA0  22DA               	addwfc	fsr2h,f,c
 11409   013FA2  5038               	movf	(btemp+11)^0,w,c
 11410   013FA4  12DF               	iorwf	indf2,f,c
 11411   013FA6                     
 11412                           ;stkvar	_d @ sp[(-2)+0]
 11413   013FA6  0EFE               	movlw	-2
 11414   013FA8  50E3               	movf	plusw1,w,c
 11415   013FAA  6EE6               	movwf	postinc1,c
 11416   013FAC  0E03               	movlw	3
 11417   013FAE  6EE6               	movwf	postinc1,c
 11418   013FB0  0E00               	movlw	0
 11419   013FB2  6EE6               	movwf	postinc1,c
 11420   013FB4  EC40  F0A1         	call	_DRV_CANFDSPI_WriteByte	;wreg free
 11421   013FB8                     l222:
 11422                           
 11423                           ; _DRV_CANFDSPI_OperationModeSelect: autosize = 2, savesize = 0, parsavesize = 0, tempsi
      +                          ze = 0 parsize = 1, argsize = 1, vargsize = 0
 11424   013FB8  52E5               	movf	postdec1,f,c
 11425   013FBA  52E5               	movf	postdec1,f,c
 11426   013FBC  52E5               	movf	postdec1,f,c
 11427   013FBE  0012               	return		;funcret
 11428   013FC0                     __end_of_DRV_CANFDSPI_OperationModeSelect:
 11429                           	callstack 0
 11430                           
 11431 ;; *************** function _DRV_CANFDSPI_WriteByte *****************
 11432 ;; Defined at:
 11433 ;;		line 294 in file "can/can.c"
 11434 ;; Parameters:    Size  Location     Type
 11435 ;;  address         2  [STACK] unsigned short 
 11436 ;;  txd             1  [STACK] unsigned char 
 11437 ;; Auto vars:     Size  Location     Type
 11438 ;;  spiTransferS    2    0        unsigned short 
 11439 ;;  spiTransferE    1  [STACK] char 
 11440 ;; Return value:  Size  Location     Type
 11441 ;;                  1  [STACK] char 
 11442 ;; Registers used:
 11443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11444 ;; Tracked objects:
 11445 ;;		On entry : 0/0
 11446 ;;		On exit  : 0/0
 11447 ;;		Unchanged: 0/0
 11448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11453 ;;Total ram usage:        0 bytes
 11454 ;; Hardware stack levels used: 1
 11455 ;; Hardware stack levels required when called: 8
 11456 ;; This function calls:
 11457 ;;		_SpiTransfer
 11458 ;; This function is called by:
 11459 ;;		_DRV_CANFDSPI_OperationModeSelect
 11460 ;;		_DRV_CANFDSPI_TransmitChannelUpdate
 11461 ;;		_DRV_CANFDSPI_FilterToFifoLink
 11462 ;;		_DRV_CANFDSPI_FilterDisable
 11463 ;;		_DRV_CANFDSPI_ReceiveChannelUpdate
 11464 ;;		_DRV_CANFDSPI_TimeStampEnable
 11465 ;; This function uses a reentrant model
 11466 ;;
 11467                           
 11468                           	psect	text58
 11469   014280                     __ptext58:
 11470                           	callstack 0
 11471   014280                     _DRV_CANFDSPI_WriteByte:
 11472                           	callstack 0
 11473                           
 11474                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11475   014280  52E6               	movf	postinc1,f,c
 11476   014282                     
 11477                           ;can/can.c: 300:     spiTransmitBuffer[0] = (uint8_t) ((0x02 << 4) + ((address >> 8) & 0
      +                          xF));
 11478                           ;stkvar	_address @ sp[(-1)+-2]
 11479   014282  0EFE               	movlw	254
 11480   014284  24E1               	addwf	fsr1l,w,c
 11481   014286  6ED9               	movwf	fsr2l,c
 11482   014288  0EFF               	movlw	255
 11483   01428A  20E2               	addwfc	fsr1h,w,c
 11484   01428C  6EDA               	movwf	fsr2h,c
 11485   01428E  50DF               	movf	indf2,w,c
 11486   014290  0B0F               	andlw	15
 11487   014292  0F20               	addlw	32
 11488   014294  0101               	movlb	1	; () banked
 11489   014296  6F00               	movwf	_spiTransmitBuffer& (0+255),b
 11490   014298                     
 11491                           ; BSR set to: 1
 11492                           ;can/can.c: 301:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
 11493                           ;stkvar	_address @ sp[(-1)+-2]
 11494   014298  0EFD               	movlw	-3
 11495   01429A  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
 11496   01429E                     
 11497                           ; BSR set to: 1
 11498                           ;can/can.c: 302:     spiTransmitBuffer[2] = txd;
 11499                           ;stkvar	_txd @ sp[(-1)+-3]
 11500   01429E  0EFC               	movlw	-4
 11501   0142A0  CFE3 F102          	movff	plusw1,_spiTransmitBuffer+2
 11502   0142A4                     
 11503                           ; BSR set to: 1
 11504                           ;can/can.c: 304:     spiTransferError = SpiTransfer(spiTransmitBuffer, spiReceiveBuffer,
      +                           spiTransferSize);
 11505   0142A4  0E03               	movlw	3
 11506   0142A6  6EE6               	movwf	postinc1,c
 11507   0142A8  0E00               	movlw	0
 11508   0142AA  6EE6               	movwf	postinc1,c
 11509   0142AC  0E00               	movlw	low _spiReceiveBuffer
 11510   0142AE  6EE6               	movwf	postinc1,c
 11511   0142B0  0E02               	movlw	high _spiReceiveBuffer
 11512   0142B2  6EE6               	movwf	postinc1,c
 11513   0142B4  0E00               	movlw	low _spiTransmitBuffer
 11514   0142B6  6EE6               	movwf	postinc1,c
 11515   0142B8  0E01               	movlw	high _spiTransmitBuffer
 11516   0142BA  6EE6               	movwf	postinc1,c
 11517   0142BC  ECAD  F09B         	call	_SpiTransfer	;wreg free
 11518                           
 11519                           ;stkvar	_spiTransferError @ sp[(-1)+0]
 11520   0142C0  0EFF               	movlw	-1
 11521   0142C2  C02D  FFE3         	movff	btemp,plusw1
 11522   0142C6                     
 11523                           ;can/can.c: 306:     return spiTransferError;
 11524                           ;stkvar	_spiTransferError @ sp[(-1)+0]
 11525   0142C6  0EFF               	movlw	-1
 11526   0142C8  CFE3 F02D          	movff	plusw1,btemp
 11527   0142CC                     
 11528                           ; _DRV_CANFDSPI_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 3, argsize = 3, vargsize = 0
 11529   0142CC  52E5               	movf	postdec1,f,c
 11530   0142CE  52E5               	movf	postdec1,f,c
 11531   0142D0  52E5               	movf	postdec1,f,c
 11532   0142D2  52E5               	movf	postdec1,f,c
 11533   0142D4  0012               	return		;funcret
 11534   0142D6                     __end_of_DRV_CANFDSPI_WriteByte:
 11535                           	callstack 0
 11536                           
 11537 ;; *************** function _DRV_CANFDSPI_ReadByte *****************
 11538 ;; Defined at:
 11539 ;;		line 276 in file "can/can.c"
 11540 ;; Parameters:    Size  Location     Type
 11541 ;;  address         2  [STACK] unsigned short 
 11542 ;;  rxd             2  [STACK] PTR unsigned char 
 11543 ;;		 -> b(1), iocon(4), osc(4), d(1), 
 11544 ;;		 -> d(1), d(1), d(1), crc(1), 
 11545 ;;		 -> crc(1), crc(1), crc(1), eccStat(1), 
 11546 ;;		 -> eccInterrupts(1), eccInterrupts(1), eccStatus(1), d(1), 
 11547 ;;		 -> d(1), f(1), icodeByte(1), filterHitByte(1), 
 11548 ;;		 -> txCodeByte(1), rxCodeByte(1), ciTefCon(4), ciTefSta(4), 
 11549 ;;		 -> d(1), fCtrl(1), d(1), d(1), 
 11550 ;;		 -> ciFifoSta(4), ciFifoCon(5), d(1), d(1), 
 11551 ;;		 -> d(1), d(1), 
 11552 ;; Auto vars:     Size  Location     Type
 11553 ;;  spiTransferS    2    0        unsigned short 
 11554 ;;  spiTransferE    1  [STACK] char 
 11555 ;; Return value:  Size  Location     Type
 11556 ;;                  1  [STACK] char 
 11557 ;; Registers used:
 11558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11559 ;; Tracked objects:
 11560 ;;		On entry : 0/0
 11561 ;;		On exit  : 0/0
 11562 ;;		Unchanged: 0/0
 11563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11568 ;;Total ram usage:        0 bytes
 11569 ;; Hardware stack levels used: 1
 11570 ;; Hardware stack levels required when called: 8
 11571 ;; This function calls:
 11572 ;;		_SpiTransfer
 11573 ;; This function is called by:
 11574 ;;		_DRV_CANFDSPI_OperationModeSelect
 11575 ;;		_DRV_CANFDSPI_FilterDisable
 11576 ;;		_DRV_CANFDSPI_TransmitChannelEventGet
 11577 ;;		_DRV_CANFDSPI_ReceiveChannelEventGet
 11578 ;;		_DRV_CANFDSPI_TimeStampEnable
 11579 ;; This function uses a reentrant model
 11580 ;;
 11581                           
 11582                           	psect	text59
 11583   014166                     __ptext59:
 11584                           	callstack 0
 11585   014166                     _DRV_CANFDSPI_ReadByte:
 11586                           	callstack 0
 11587                           
 11588                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11589   014166  52E6               	movf	postinc1,f,c
 11590   014168                     
 11591                           ;can/can.c: 282:     spiTransmitBuffer[0] = (uint8_t) ((0x03 << 4) + ((address >> 8) & 0
      +                          xF));
 11592                           ;stkvar	_address @ sp[(-1)+-2]
 11593   014168  0EFE               	movlw	254
 11594   01416A  24E1               	addwf	fsr1l,w,c
 11595   01416C  6ED9               	movwf	fsr2l,c
 11596   01416E  0EFF               	movlw	255
 11597   014170  20E2               	addwfc	fsr1h,w,c
 11598   014172  6EDA               	movwf	fsr2h,c
 11599   014174  50DF               	movf	indf2,w,c
 11600   014176  0B0F               	andlw	15
 11601   014178  0F30               	addlw	48
 11602   01417A  0101               	movlb	1	; () banked
 11603   01417C  6F00               	movwf	_spiTransmitBuffer& (0+255),b
 11604   01417E                     
 11605                           ; BSR set to: 1
 11606                           ;can/can.c: 283:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
 11607                           ;stkvar	_address @ sp[(-1)+-2]
 11608   01417E  0EFD               	movlw	-3
 11609   014180  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
 11610   014184                     
 11611                           ; BSR set to: 1
 11612                           ;can/can.c: 284:     spiTransmitBuffer[2] = 0;
 11613   014184  6B02               	clrf	(_spiTransmitBuffer+2)& (0+255),b
 11614   014186                     
 11615                           ; BSR set to: 1
 11616                           ;can/can.c: 286:     spiTransferError = SpiTransfer(spiTransmitBuffer, spiReceiveBuffer,
      +                           spiTransferSize);
 11617   014186  0E03               	movlw	3
 11618   014188  6EE6               	movwf	postinc1,c
 11619   01418A  0E00               	movlw	0
 11620   01418C  6EE6               	movwf	postinc1,c
 11621   01418E  0E00               	movlw	low _spiReceiveBuffer
 11622   014190  6EE6               	movwf	postinc1,c
 11623   014192  0E02               	movlw	high _spiReceiveBuffer
 11624   014194  6EE6               	movwf	postinc1,c
 11625   014196  0E00               	movlw	low _spiTransmitBuffer
 11626   014198  6EE6               	movwf	postinc1,c
 11627   01419A  0E01               	movlw	high _spiTransmitBuffer
 11628   01419C  6EE6               	movwf	postinc1,c
 11629   01419E  ECAD  F09B         	call	_SpiTransfer	;wreg free
 11630                           
 11631                           ;stkvar	_spiTransferError @ sp[(-1)+0]
 11632   0141A2  0EFF               	movlw	-1
 11633   0141A4  C02D  FFE3         	movff	btemp,plusw1
 11634   0141A8                     
 11635                           ;can/can.c: 289:     *rxd = spiReceiveBuffer[2];
 11636                           ;stkvar	_rxd @ sp[(-1)+-4]
 11637   0141A8  0EFB               	movlw	-5
 11638   0141AA  CFE3 FFD9          	movff	plusw1,fsr2l
 11639   0141AE  0EFC               	movlw	-4
 11640   0141B0  CFE3 FFDA          	movff	plusw1,fsr2h
 11641   0141B4  C202  FFDF         	movff	_spiReceiveBuffer+2,indf2
 11642   0141B8                     
 11643                           ;can/can.c: 291:     return spiTransferError;
 11644                           ;stkvar	_spiTransferError @ sp[(-1)+0]
 11645   0141B8  0EFF               	movlw	-1
 11646   0141BA  CFE3 F02D          	movff	plusw1,btemp
 11647   0141BE                     
 11648                           ; _DRV_CANFDSPI_ReadByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 4, argsize = 4, vargsize = 0
 11649   0141BE  0EFB               	movlw	251
 11650   0141C0  26E1               	addwf	fsr1l,f,c
 11651   0141C2  0EFF               	movlw	255
 11652   0141C4  22E2               	addwfc	fsr1h,f,c
 11653   0141C6  0012               	return		;funcret
 11654   0141C8                     __end_of_DRV_CANFDSPI_ReadByte:
 11655                           	callstack 0
 11656                           
 11657 ;; *************** function _DRV_CANFDSPI_ModuleEventEnable *****************
 11658 ;; Defined at:
 11659 ;;		line 1591 in file "can/can.c"
 11660 ;; Parameters:    Size  Location     Type
 11661 ;;  index           1  [STACK] unsigned char 
 11662 ;;  flags           2  [STACK] enum E5566
 11663 ;; Auto vars:     Size  Location     Type
 11664 ;;  intEnables      2  [STACK] struct _REG_CiINTENABLE
 11665 ;;  a               2    0        unsigned short 
 11666 ;;  spiTransferE    1    0        char 
 11667 ;; Return value:  Size  Location     Type
 11668 ;;                  1  [STACK] char 
 11669 ;; Registers used:
 11670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11671 ;; Tracked objects:
 11672 ;;		On entry : 0/0
 11673 ;;		On exit  : 0/0
 11674 ;;		Unchanged: 0/0
 11675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11680 ;;Total ram usage:        0 bytes
 11681 ;; Hardware stack levels used: 1
 11682 ;; Hardware stack levels required when called: 9
 11683 ;; This function calls:
 11684 ;;		_DRV_CANFDSPI_WriteHalfWord
 11685 ;; This function is called by:
 11686 ;;		_CanInit
 11687 ;; This function uses a reentrant model
 11688 ;;
 11689                           
 11690                           	psect	text60
 11691   014102                     __ptext60:
 11692                           	callstack 0
 11693   014102                     _DRV_CANFDSPI_ModuleEventEnable:
 11694                           	callstack 0
 11695                           
 11696                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11697   014102  52E6               	movf	postinc1,f,c
 11698   014104  52E6               	movf	postinc1,f,c
 11699   014106                     
 11700                           ;can/can.c: 1599:     REG_CiINTENABLE intEnables;;can/can.c: 1600:     intEnables.word =
      +                           0;
 11701                           ;stkvar	_intEnables @ sp[(-2)+0]
 11702   014106  0EFE               	movlw	-2
 11703   014108  6AE3               	clrf	plusw1,c
 11704   01410A  0EFF               	movlw	-1
 11705   01410C  6AE3               	clrf	plusw1,c
 11706   01410E                     
 11707                           ;can/can.c: 1608:     intEnables.word |= (flags & CAN_ALL_EVENTS);
 11708                           ;stkvar	_flags @ sp[(-2)+-3]
 11709   01410E  0EFB               	movlw	-5
 11710   014110  CFE3 F037          	movff	plusw1,btemp+10
 11711   014114  0EFC               	movlw	-4
 11712   014116  CFE3 F038          	movff	plusw1,btemp+11
 11713   01411A  0E1F               	movlw	31
 11714   01411C  1437               	andwf	(btemp+10)^0,w,c
 11715   01411E  6E35               	movwf	(btemp+8)^0,c
 11716   014120  0EFF               	movlw	255
 11717   014122  1438               	andwf	(btemp+11)^0,w,c
 11718   014124  6E36               	movwf	(btemp+9)^0,c
 11719                           
 11720                           ;stkvar	_intEnables @ sp[(-2)+0]
 11721   014126  0EFE               	movlw	-2
 11722   014128  CFE3 F02D          	movff	plusw1,btemp
 11723   01412C  5035               	movf	(btemp+8)^0,w,c
 11724   01412E  122D               	iorwf	btemp^0,f,c
 11725   014130  0EFE               	movlw	-2
 11726   014132  C02D  FFE3         	movff	btemp,plusw1
 11727   014136  0EFF               	movlw	-1
 11728   014138  CFE3 F02D          	movff	plusw1,btemp
 11729   01413C  5036               	movf	(btemp+9)^0,w,c
 11730   01413E  122D               	iorwf	btemp^0,f,c
 11731   014140  0EFF               	movlw	-1
 11732   014142  C02D  FFE3         	movff	btemp,plusw1
 11733   014146                     
 11734                           ;stkvar	_intEnables @ sp[(-2)+0]
 11735   014146  0EFE               	movlw	-2
 11736   014148  CFE3 FFE6          	movff	plusw1,postinc1
 11737   01414C  CFE3 FFE6          	movff	plusw1,postinc1
 11738   014150  0E1E               	movlw	30
 11739   014152  6EE6               	movwf	postinc1,c
 11740   014154  0E00               	movlw	0
 11741   014156  6EE6               	movwf	postinc1,c
 11742   014158  EC48  F09B         	call	_DRV_CANFDSPI_WriteHalfWord	;wreg free
 11743   01415C                     
 11744                           ; _DRV_CANFDSPI_ModuleEventEnable: autosize = 2, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 3, argsize = 3, vargsize = 0
 11745   01415C  0EFB               	movlw	251
 11746   01415E  26E1               	addwf	fsr1l,f,c
 11747   014160  0EFF               	movlw	255
 11748   014162  22E2               	addwfc	fsr1h,f,c
 11749   014164  0012               	return		;funcret
 11750   014166                     __end_of_DRV_CANFDSPI_ModuleEventEnable:
 11751                           	callstack 0
 11752                           
 11753 ;; *************** function _DRV_CANFDSPI_WriteHalfWord *****************
 11754 ;; Defined at:
 11755 ;;		line 332 in file "can/can.c"
 11756 ;; Parameters:    Size  Location     Type
 11757 ;;  address         2  [STACK] unsigned short 
 11758 ;;  txd             2  [STACK] unsigned short 
 11759 ;; Auto vars:     Size  Location     Type
 11760 ;;  spiTransferS    2  [STACK] unsigned short 
 11761 ;;  i               1  [STACK] unsigned char 
 11762 ;;  spiTransferE    1  [STACK] char 
 11763 ;; Return value:  Size  Location     Type
 11764 ;;                  1  [STACK] char 
 11765 ;; Registers used:
 11766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11767 ;; Tracked objects:
 11768 ;;		On entry : 0/0
 11769 ;;		On exit  : 0/0
 11770 ;;		Unchanged: 0/0
 11771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11776 ;;Total ram usage:        0 bytes
 11777 ;; Hardware stack levels used: 1
 11778 ;; Hardware stack levels required when called: 8
 11779 ;; This function calls:
 11780 ;;		_SpiTransfer
 11781 ;; This function is called by:
 11782 ;;		_DRV_CANFDSPI_ModuleEventEnable
 11783 ;;		_DRV_CANFDSPI_TimeStampPrescalerSet
 11784 ;; This function uses a reentrant model
 11785 ;;
 11786                           
 11787                           	psect	text61
 11788   013690                     __ptext61:
 11789                           	callstack 0
 11790   013690                     _DRV_CANFDSPI_WriteHalfWord:
 11791                           	callstack 0
 11792                           
 11793                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11794   013690  52E6               	movf	postinc1,f,c
 11795   013692  52E6               	movf	postinc1,f,c
 11796   013694  52E6               	movf	postinc1,f,c
 11797   013696  52E6               	movf	postinc1,f,c
 11798   013698                     
 11799                           ;can/can.c: 332: int8_t DRV_CANFDSPI_WriteHalfWord( uint16_t address,;can/can.c: 333:   
      +                                uint16_t txd);can/can.c: 334: {;can/can.c: 335:     uint8_t i;;can/can.c: 336:    
      +                           uint16_t spiTransferSize = 4;
 11800   013698  0E04               	movlw	4
 11801   01369A  6E37               	movwf	(btemp+10)^0,c
 11802   01369C  0E00               	movlw	0
 11803   01369E  6E38               	movwf	(btemp+11)^0,c
 11804                           
 11805                           ;stkvar	_spiTransferSize @ sp[(-4)+0]
 11806   0136A0  0EFC               	movlw	-4
 11807   0136A2  C037  FFE3         	movff	btemp+10,plusw1
 11808   0136A6  0EFD               	movlw	-3
 11809   0136A8  C038  FFE3         	movff	btemp+11,plusw1
 11810   0136AC                     
 11811                           ;can/can.c: 340:     spiTransmitBuffer[0] = (uint8_t) ((0x02 << 4) + ((address >> 8) & 0
      +                          xF));
 11812                           ;stkvar	_address @ sp[(-4)+-2]
 11813   0136AC  0EFB               	movlw	251
 11814   0136AE  24E1               	addwf	fsr1l,w,c
 11815   0136B0  6ED9               	movwf	fsr2l,c
 11816   0136B2  0EFF               	movlw	255
 11817   0136B4  20E2               	addwfc	fsr1h,w,c
 11818   0136B6  6EDA               	movwf	fsr2h,c
 11819   0136B8  50DF               	movf	indf2,w,c
 11820   0136BA  0B0F               	andlw	15
 11821   0136BC  0F20               	addlw	32
 11822   0136BE  0101               	movlb	1	; () banked
 11823   0136C0  6F00               	movwf	_spiTransmitBuffer& (0+255),b
 11824   0136C2                     
 11825                           ; BSR set to: 1
 11826                           ;can/can.c: 341:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
 11827                           ;stkvar	_address @ sp[(-4)+-2]
 11828   0136C2  0EFA               	movlw	-6
 11829   0136C4  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
 11830   0136C8                     
 11831                           ; BSR set to: 1
 11832                           ;can/can.c: 344:     for (i = 0; i < 2; i++) {
 11833                           ;stkvar	_i @ sp[(-4)+2]
 11834   0136C8  0EFE               	movlw	-2
 11835   0136CA  6AE3               	clrf	plusw1,c
 11836   0136CC                     l4282:
 11837                           
 11838                           ;can/can.c: 345:         spiTransmitBuffer[i + 2] = (uint8_t) ((txd >> (i * 8)) & 0xFF);
 11839                           ;stkvar	_i @ sp[(-4)+2]
 11840   0136CC  0EFE               	movlw	-2
 11841   0136CE  50E3               	movf	plusw1,w,c
 11842   0136D0  6E37               	movwf	(btemp+10)^0,c
 11843   0136D2  6A38               	clrf	(btemp+11)^0,c
 11844   0136D4  0E02               	movlw	low (_spiTransmitBuffer+2)
 11845   0136D6  2437               	addwf	(btemp+10)^0,w,c
 11846   0136D8  6ED9               	movwf	fsr2l,c
 11847   0136DA  0E01               	movlw	high (_spiTransmitBuffer+2)
 11848   0136DC  2038               	addwfc	(btemp+11)^0,w,c
 11849   0136DE  6EDA               	movwf	fsr2h,c
 11850                           
 11851                           ;stkvar	_i @ sp[(-4)+2]
 11852   0136E0  0EFE               	movlw	-2
 11853   0136E2  50E3               	movf	plusw1,w,c
 11854   0136E4  0D08               	mullw	8
 11855   0136E6  CFF3 F038          	movff	prodl,btemp+11
 11856                           
 11857                           ;stkvar	_txd @ sp[(-4)+-4]
 11858   0136EA  0EF8               	movlw	-8
 11859   0136EC  CFE3 F035          	movff	plusw1,btemp+8
 11860   0136F0  0EF9               	movlw	-7
 11861   0136F2  CFE3 F036          	movff	plusw1,btemp+9
 11862   0136F6  2A38               	incf	(btemp+11)^0,f,c
 11863   0136F8  EF81  F09B         	goto	u2124
 11864   0136FC                     u2125:
 11865   0136FC  90D8               	bcf	status,0,c
 11866   0136FE  3236               	rrcf	(btemp+9)^0,f,c
 11867   013700  3235               	rrcf	(btemp+8)^0,f,c
 11868   013702                     u2124:
 11869   013702  2E38               	decfsz	(btemp+11)^0,f,c
 11870   013704  EF7E  F09B         	goto	u2125
 11871   013708  5035               	movf	(btemp+8)^0,w,c
 11872   01370A  6EDF               	movwf	indf2,c
 11873   01370C                     
 11874                           ;can/can.c: 346:     }
 11875                           ;stkvar	_i @ sp[(-4)+2]
 11876   01370C  0EFE               	movlw	-2
 11877   01370E  2AE3               	incf	plusw1,f,c
 11878   013710                     
 11879                           ;stkvar	_i @ sp[(-4)+2]
 11880   013710  0EFE               	movlw	-2
 11881   013712  CFE3 F02D          	movff	plusw1,btemp
 11882   013716  0E01               	movlw	1
 11883   013718  642D               	cpfsgt	btemp^0,c
 11884   01371A  EF91  F09B         	goto	u2131
 11885   01371E  EF93  F09B         	goto	u2130
 11886   013722                     u2131:
 11887   013722  EF66  F09B         	goto	l4282
 11888   013726                     u2130:
 11889   013726                     
 11890                           ;can/can.c: 348:     spiTransferError = SpiTransfer( spiTransmitBuffer, spiReceiveBuffer
      +                          , spiTransferSize);
 11891                           ;stkvar	_spiTransferSize @ sp[(-4)+0]
 11892   013726  0EFC               	movlw	-4
 11893   013728  CFE3 FFE6          	movff	plusw1,postinc1
 11894   01372C  CFE3 FFE6          	movff	plusw1,postinc1
 11895   013730  0E00               	movlw	low _spiReceiveBuffer
 11896   013732  6EE6               	movwf	postinc1,c
 11897   013734  0E02               	movlw	high _spiReceiveBuffer
 11898   013736  6EE6               	movwf	postinc1,c
 11899   013738  0E00               	movlw	low _spiTransmitBuffer
 11900   01373A  6EE6               	movwf	postinc1,c
 11901   01373C  0E01               	movlw	high _spiTransmitBuffer
 11902   01373E  6EE6               	movwf	postinc1,c
 11903   013740  ECAD  F09B         	call	_SpiTransfer	;wreg free
 11904                           
 11905                           ;stkvar	_spiTransferError @ sp[(-4)+3]
 11906   013744  0EFF               	movlw	-1
 11907   013746  C02D  FFE3         	movff	btemp,plusw1
 11908   01374A                     
 11909                           ;can/can.c: 350:     return spiTransferError;
 11910                           ;stkvar	_spiTransferError @ sp[(-4)+3]
 11911   01374A  0EFF               	movlw	-1
 11912   01374C  CFE3 F02D          	movff	plusw1,btemp
 11913   013750                     
 11914                           ; _DRV_CANFDSPI_WriteHalfWord: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0
      +                           parsize = 4, argsize = 4, vargsize = 0
 11915   013750  0EF8               	movlw	248
 11916   013752  26E1               	addwf	fsr1l,f,c
 11917   013754  0EFF               	movlw	255
 11918   013756  22E2               	addwfc	fsr1h,f,c
 11919   013758  0012               	return		;funcret
 11920   01375A                     __end_of_DRV_CANFDSPI_WriteHalfWord:
 11921                           	callstack 0
 11922                           
 11923 ;; *************** function _DRV_CANFDSPI_ConfigureObjectReset *****************
 11924 ;; Defined at:
 11925 ;;		line 474 in file "can/can.c"
 11926 ;; Parameters:    Size  Location     Type
 11927 ;;  config          2  [STACK] PTR struct _CAN_CONFIG
 11928 ;;		 -> config(3), 
 11929 ;; Auto vars:     Size  Location     Type
 11930 ;;  ciCon           4  [STACK] struct _REG_CiCON
 11931 ;; Return value:  Size  Location     Type
 11932 ;;                  1  [STACK] char 
 11933 ;; Registers used:
 11934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru
 11935 ;; Tracked objects:
 11936 ;;		On entry : 0/0
 11937 ;;		On exit  : 0/0
 11938 ;;		Unchanged: 0/0
 11939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11944 ;;Total ram usage:        0 bytes
 11945 ;; Hardware stack levels used: 1
 11946 ;; Hardware stack levels required when called: 7
 11947 ;; This function calls:
 11948 ;;		Nothing
 11949 ;; This function is called by:
 11950 ;;		_CanInit
 11951 ;; This function uses a reentrant model
 11952 ;;
 11953                           
 11954                           	psect	text62
 11955   0119BA                     __ptext62:
 11956                           	callstack 0
 11957   0119BA                     _DRV_CANFDSPI_ConfigureObjectReset:
 11958                           	callstack 0
 11959                           
 11960                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11961   0119BA  52E6               	movf	postinc1,f,c
 11962   0119BC  52E6               	movf	postinc1,f,c
 11963   0119BE  52E6               	movf	postinc1,f,c
 11964   0119C0  52E6               	movf	postinc1,f,c
 11965   0119C2                     
 11966                           ;can/can.c: 474: int8_t DRV_CANFDSPI_ConfigureObjectReset(CAN_CONFIG* config);can/can.c:
      +                           475: {;can/can.c: 476:     REG_CiCON ciCon;;can/can.c: 477:     ciCon.word = canControl
      +                          ResetValues[0x000 / 4];
 11967   0119C2  0E8D               	movlw	low _canControlResetValues
 11968   0119C4  6EF6               	movwf	tblptrl,c
 11969   0119C6                     	if	1	;There is more than 1 active tblptr byte
 11970   0119C6  0EFF               	movlw	high _canControlResetValues
 11971   0119C8  6EF7               	movwf	tblptrh,c
 11972   0119CA                     	endif
 11973   0119CA                     	if	1	;There are 3 active tblptr bytes
 11974   0119CA  0E00               	movlw	low (_canControlResetValues shr (0+16))
 11975   0119CC  6EF8               	movwf	tblptru,c
 11976   0119CE                     	endif
 11977   0119CE  0009               	tblrd		*+
 11978   0119D0  CFF5 F035          	movff	tablat,btemp+8
 11979   0119D4  0009               	tblrd		*+
 11980   0119D6  CFF5 F036          	movff	tablat,btemp+9
 11981   0119DA  0009               	tblrd		*+
 11982   0119DC  CFF5 F037          	movff	tablat,btemp+10
 11983   0119E0  0009               	tblrd		*+
 11984   0119E2  CFF5 F038          	movff	tablat,btemp+11
 11985                           
 11986                           ;stkvar	_ciCon @ sp[(-4)+0]
 11987   0119E6  0EFC               	movlw	-4
 11988   0119E8  C035  FFE3         	movff	btemp+8,plusw1
 11989   0119EC  0EFD               	movlw	-3
 11990   0119EE  C036  FFE3         	movff	btemp+9,plusw1
 11991   0119F2  0EFE               	movlw	-2
 11992   0119F4  C037  FFE3         	movff	btemp+10,plusw1
 11993   0119F8  0EFF               	movlw	-1
 11994   0119FA  C038  FFE3         	movff	btemp+11,plusw1
 11995   0119FE                     
 11996                           ;can/can.c: 479:     config->DNetFilterCount = ciCon.bF.DNetFilterCount;
 11997                           ;stkvar	_ciCon @ sp[(-4)+0]
 11998   0119FE  50E1               	movf	fsr1l,w,c
 11999   011A00  0FFC               	addlw	-4
 12000   011A02  6ED9               	movwf	fsr2l,c
 12001   011A04  50E2               	movf	fsr1h,w,c
 12002   011A06  6EDA               	movwf	fsr2h,c
 12003   011A08  0EFF               	movlw	255
 12004   011A0A  22DA               	addwfc	fsr2h,f,c
 12005   011A0C  50DF               	movf	223,w,c
 12006   011A0E  0B1F               	andlw	31
 12007   011A10  6E38               	movwf	(btemp+11)^0,c
 12008                           
 12009                           ;stkvar	_config @ sp[(-4)+-2]
 12010   011A12  0EFA               	movlw	-6
 12011   011A14  CFE3 FFD9          	movff	plusw1,fsr2l
 12012   011A18  0EFB               	movlw	-5
 12013   011A1A  CFE3 FFDA          	movff	plusw1,fsr2h
 12014   011A1E  50DF               	movf	223,w,c
 12015   011A20  1838               	xorwf	(btemp+11)^0,w,c
 12016   011A22  0BE0               	andlw	-32
 12017   011A24  1838               	xorwf	(btemp+11)^0,w,c
 12018   011A26  6EDF               	movwf	223,c
 12019   011A28                     
 12020                           ;can/can.c: 480:     config->IsoCrcEnable = ciCon.bF.IsoCrcEnable;
 12021                           ;stkvar	_ciCon @ sp[(-4)+0]
 12022   011A28  50E1               	movf	fsr1l,w,c
 12023   011A2A  0FFC               	addlw	-4
 12024   011A2C  6ED9               	movwf	fsr2l,c
 12025   011A2E  50E2               	movf	fsr1h,w,c
 12026   011A30  6EDA               	movwf	fsr2h,c
 12027   011A32  0EFF               	movlw	255
 12028   011A34  22DA               	addwfc	fsr2h,f,c
 12029                           
 12030                           ;stkvar	_config @ sp[(-4)+-2]
 12031   011A36  0EFA               	movlw	-6
 12032   011A38  CFE3 FFE9          	movff	plusw1,fsr0l
 12033   011A3C  0EFB               	movlw	-5
 12034   011A3E  CFE3 FFEA          	movff	plusw1,fsr0h
 12035   011A42  9AEF               	bcf	indf0,5,c
 12036   011A44  AADF               	btfss	indf2,5,c
 12037   011A46  EF26  F08D         	goto	u785
 12038   011A4A  8AEF               	bsf	indf0,5,c
 12039   011A4C                     u785:
 12040   011A4C                     
 12041                           ;can/can.c: 481:     config->ProtocolExpectionEventDisable = ciCon.bF.ProtocolExceptionE
      +                          ventDisable;
 12042                           ;stkvar	_ciCon @ sp[(-4)+0]
 12043   011A4C  50E1               	movf	fsr1l,w,c
 12044   011A4E  0FFC               	addlw	-4
 12045   011A50  6ED9               	movwf	fsr2l,c
 12046   011A52  50E2               	movf	fsr1h,w,c
 12047   011A54  6EDA               	movwf	fsr2h,c
 12048   011A56  0EFF               	movlw	255
 12049   011A58  22DA               	addwfc	fsr2h,f,c
 12050                           
 12051                           ;stkvar	_config @ sp[(-4)+-2]
 12052   011A5A  0EFA               	movlw	-6
 12053   011A5C  CFE3 FFE9          	movff	plusw1,fsr0l
 12054   011A60  0EFB               	movlw	-5
 12055   011A62  CFE3 FFEA          	movff	plusw1,fsr0h
 12056   011A66  9CEF               	bcf	indf0,6,c
 12057   011A68  ACDF               	btfss	indf2,6,c
 12058   011A6A  EF38  F08D         	goto	u795
 12059   011A6E  8CEF               	bsf	indf0,6,c
 12060   011A70                     u795:
 12061   011A70                     
 12062                           ;can/can.c: 482:     config->WakeUpFilterEnable = ciCon.bF.WakeUpFilterEnable;
 12063                           ;stkvar	_ciCon @ sp[(-4)+0]
 12064   011A70  0EFD               	movlw	253
 12065   011A72  24E1               	addwf	fsr1l,w,c
 12066   011A74  6ED9               	movwf	fsr2l,c
 12067   011A76  0EFF               	movlw	255
 12068   011A78  20E2               	addwfc	fsr1h,w,c
 12069   011A7A  6EDA               	movwf	fsr2h,c
 12070                           
 12071                           ;stkvar	_config @ sp[(-4)+-2]
 12072   011A7C  0EFA               	movlw	-6
 12073   011A7E  CFE3 FFE9          	movff	plusw1,fsr0l
 12074   011A82  0EFB               	movlw	-5
 12075   011A84  CFE3 FFEA          	movff	plusw1,fsr0h
 12076   011A88  9EEF               	bcf	indf0,7,c
 12077   011A8A  A0DF               	btfss	indf2,0,c
 12078   011A8C  EF49  F08D         	goto	u805
 12079   011A90  8EEF               	bsf	indf0,7,c
 12080   011A92                     u805:
 12081   011A92                     
 12082                           ;can/can.c: 483:     config->WakeUpFilterTime = ciCon.bF.WakeUpFilterTime;
 12083                           ;stkvar	_ciCon @ sp[(-4)+0]
 12084   011A92  0EFD               	movlw	253
 12085   011A94  24E1               	addwf	fsr1l,w,c
 12086   011A96  6ED9               	movwf	fsr2l,c
 12087   011A98  0EFF               	movlw	255
 12088   011A9A  20E2               	addwfc	fsr1h,w,c
 12089   011A9C  6EDA               	movwf	fsr2h,c
 12090   011A9E  30DF               	rrcf	223,w,c
 12091   011AA0  0B03               	andlw	3
 12092   011AA2  6E38               	movwf	(btemp+11)^0,c
 12093                           
 12094                           ;stkvar	_config @ sp[(-4)+-2]
 12095   011AA4  0EFA               	movlw	-6
 12096   011AA6  CFE3 F035          	movff	plusw1,btemp+8
 12097   011AAA  0EFB               	movlw	-5
 12098   011AAC  CFE3 F036          	movff	plusw1,btemp+9
 12099   011AB0  0E01               	movlw	1
 12100   011AB2  2435               	addwf	(btemp+8)^0,w,c
 12101   011AB4  6ED9               	movwf	fsr2l,c
 12102   011AB6  0E00               	movlw	0
 12103   011AB8  2036               	addwfc	(btemp+9)^0,w,c
 12104   011ABA  6EDA               	movwf	fsr2h,c
 12105   011ABC  50DF               	movf	223,w,c
 12106   011ABE  1838               	xorwf	(btemp+11)^0,w,c
 12107   011AC0  0BFC               	andlw	-4
 12108   011AC2  1838               	xorwf	(btemp+11)^0,w,c
 12109   011AC4  6EDF               	movwf	223,c
 12110   011AC6                     
 12111                           ;can/can.c: 484:     config->BitRateSwitchDisable = ciCon.bF.BitRateSwitchDisable;
 12112                           ;stkvar	_ciCon @ sp[(-4)+0]
 12113   011AC6  0EFD               	movlw	253
 12114   011AC8  24E1               	addwf	fsr1l,w,c
 12115   011ACA  6ED9               	movwf	fsr2l,c
 12116   011ACC  0EFF               	movlw	255
 12117   011ACE  20E2               	addwfc	fsr1h,w,c
 12118   011AD0  6EDA               	movwf	fsr2h,c
 12119                           
 12120                           ;stkvar	_config @ sp[(-4)+-2]
 12121   011AD2  0EFA               	movlw	-6
 12122   011AD4  CFE3 F037          	movff	plusw1,btemp+10
 12123   011AD8  0EFB               	movlw	-5
 12124   011ADA  CFE3 F038          	movff	plusw1,btemp+11
 12125   011ADE  0E01               	movlw	1
 12126   011AE0  2437               	addwf	(btemp+10)^0,w,c
 12127   011AE2  6EE9               	movwf	fsr0l,c
 12128   011AE4  0E00               	movlw	0
 12129   011AE6  2038               	addwfc	(btemp+11)^0,w,c
 12130   011AE8  6EEA               	movwf	fsr0h,c
 12131   011AEA  94EF               	bcf	indf0,2,c
 12132   011AEC  A8DF               	btfss	indf2,4,c
 12133   011AEE  EF7A  F08D         	goto	u815
 12134   011AF2  84EF               	bsf	indf0,2,c
 12135   011AF4                     u815:
 12136   011AF4                     
 12137                           ;can/can.c: 485:     config->RestrictReTxAttempts = ciCon.bF.RestrictReTxAttempts;
 12138                           ;stkvar	_ciCon @ sp[(-4)+0]
 12139   011AF4  0EFE               	movlw	254
 12140   011AF6  24E1               	addwf	fsr1l,w,c
 12141   011AF8  6ED9               	movwf	fsr2l,c
 12142   011AFA  0EFF               	movlw	255
 12143   011AFC  20E2               	addwfc	fsr1h,w,c
 12144   011AFE  6EDA               	movwf	fsr2h,c
 12145                           
 12146                           ;stkvar	_config @ sp[(-4)+-2]
 12147   011B00  0EFA               	movlw	-6
 12148   011B02  CFE3 F037          	movff	plusw1,btemp+10
 12149   011B06  0EFB               	movlw	-5
 12150   011B08  CFE3 F038          	movff	plusw1,btemp+11
 12151   011B0C  0E01               	movlw	1
 12152   011B0E  2437               	addwf	(btemp+10)^0,w,c
 12153   011B10  6EE9               	movwf	fsr0l,c
 12154   011B12  0E00               	movlw	0
 12155   011B14  2038               	addwfc	(btemp+11)^0,w,c
 12156   011B16  6EEA               	movwf	fsr0h,c
 12157   011B18  96EF               	bcf	indf0,3,c
 12158   011B1A  A0DF               	btfss	indf2,0,c
 12159   011B1C  EF91  F08D         	goto	u825
 12160   011B20  86EF               	bsf	indf0,3,c
 12161   011B22                     u825:
 12162   011B22                     
 12163                           ;can/can.c: 486:     config->EsiInGatewayMode = ciCon.bF.EsiInGatewayMode;
 12164                           ;stkvar	_ciCon @ sp[(-4)+0]
 12165   011B22  0EFE               	movlw	254
 12166   011B24  24E1               	addwf	fsr1l,w,c
 12167   011B26  6ED9               	movwf	fsr2l,c
 12168   011B28  0EFF               	movlw	255
 12169   011B2A  20E2               	addwfc	fsr1h,w,c
 12170   011B2C  6EDA               	movwf	fsr2h,c
 12171                           
 12172                           ;stkvar	_config @ sp[(-4)+-2]
 12173   011B2E  0EFA               	movlw	-6
 12174   011B30  CFE3 F037          	movff	plusw1,btemp+10
 12175   011B34  0EFB               	movlw	-5
 12176   011B36  CFE3 F038          	movff	plusw1,btemp+11
 12177   011B3A  0E01               	movlw	1
 12178   011B3C  2437               	addwf	(btemp+10)^0,w,c
 12179   011B3E  6EE9               	movwf	fsr0l,c
 12180   011B40  0E00               	movlw	0
 12181   011B42  2038               	addwfc	(btemp+11)^0,w,c
 12182   011B44  6EEA               	movwf	fsr0h,c
 12183   011B46  98EF               	bcf	indf0,4,c
 12184   011B48  A2DF               	btfss	indf2,1,c
 12185   011B4A  EFA8  F08D         	goto	u835
 12186   011B4E  88EF               	bsf	indf0,4,c
 12187   011B50                     u835:
 12188   011B50                     
 12189                           ;can/can.c: 487:     config->SystemErrorToListenOnly = ciCon.bF.SystemErrorToListenOnly;
 12190                           ;stkvar	_ciCon @ sp[(-4)+0]
 12191   011B50  0EFE               	movlw	254
 12192   011B52  24E1               	addwf	fsr1l,w,c
 12193   011B54  6ED9               	movwf	fsr2l,c
 12194   011B56  0EFF               	movlw	255
 12195   011B58  20E2               	addwfc	fsr1h,w,c
 12196   011B5A  6EDA               	movwf	fsr2h,c
 12197                           
 12198                           ;stkvar	_config @ sp[(-4)+-2]
 12199   011B5C  0EFA               	movlw	-6
 12200   011B5E  CFE3 F037          	movff	plusw1,btemp+10
 12201   011B62  0EFB               	movlw	-5
 12202   011B64  CFE3 F038          	movff	plusw1,btemp+11
 12203   011B68  0E01               	movlw	1
 12204   011B6A  2437               	addwf	(btemp+10)^0,w,c
 12205   011B6C  6EE9               	movwf	fsr0l,c
 12206   011B6E  0E00               	movlw	0
 12207   011B70  2038               	addwfc	(btemp+11)^0,w,c
 12208   011B72  6EEA               	movwf	fsr0h,c
 12209   011B74  9AEF               	bcf	indf0,5,c
 12210   011B76  A4DF               	btfss	indf2,2,c
 12211   011B78  EFBF  F08D         	goto	u845
 12212   011B7C  8AEF               	bsf	indf0,5,c
 12213   011B7E                     u845:
 12214   011B7E                     
 12215                           ;can/can.c: 488:     config->StoreInTEF = ciCon.bF.StoreInTEF;
 12216                           ;stkvar	_ciCon @ sp[(-4)+0]
 12217   011B7E  0EFE               	movlw	254
 12218   011B80  24E1               	addwf	fsr1l,w,c
 12219   011B82  6ED9               	movwf	fsr2l,c
 12220   011B84  0EFF               	movlw	255
 12221   011B86  20E2               	addwfc	fsr1h,w,c
 12222   011B88  6EDA               	movwf	fsr2h,c
 12223                           
 12224                           ;stkvar	_config @ sp[(-4)+-2]
 12225   011B8A  0EFA               	movlw	-6
 12226   011B8C  CFE3 F037          	movff	plusw1,btemp+10
 12227   011B90  0EFB               	movlw	-5
 12228   011B92  CFE3 F038          	movff	plusw1,btemp+11
 12229   011B96  0E01               	movlw	1
 12230   011B98  2437               	addwf	(btemp+10)^0,w,c
 12231   011B9A  6EE9               	movwf	fsr0l,c
 12232   011B9C  0E00               	movlw	0
 12233   011B9E  2038               	addwfc	(btemp+11)^0,w,c
 12234   011BA0  6EEA               	movwf	fsr0h,c
 12235   011BA2  9CEF               	bcf	indf0,6,c
 12236   011BA4  A6DF               	btfss	indf2,3,c
 12237   011BA6  EFD6  F08D         	goto	u855
 12238   011BAA  8CEF               	bsf	indf0,6,c
 12239   011BAC                     u855:
 12240   011BAC                     
 12241                           ;can/can.c: 489:     config->TXQEnable = ciCon.bF.TXQEnable;
 12242                           ;stkvar	_ciCon @ sp[(-4)+0]
 12243   011BAC  0EFE               	movlw	254
 12244   011BAE  24E1               	addwf	fsr1l,w,c
 12245   011BB0  6ED9               	movwf	fsr2l,c
 12246   011BB2  0EFF               	movlw	255
 12247   011BB4  20E2               	addwfc	fsr1h,w,c
 12248   011BB6  6EDA               	movwf	fsr2h,c
 12249                           
 12250                           ;stkvar	_config @ sp[(-4)+-2]
 12251   011BB8  0EFA               	movlw	-6
 12252   011BBA  CFE3 F037          	movff	plusw1,btemp+10
 12253   011BBE  0EFB               	movlw	-5
 12254   011BC0  CFE3 F038          	movff	plusw1,btemp+11
 12255   011BC4  0E01               	movlw	1
 12256   011BC6  2437               	addwf	(btemp+10)^0,w,c
 12257   011BC8  6EE9               	movwf	fsr0l,c
 12258   011BCA  0E00               	movlw	0
 12259   011BCC  2038               	addwfc	(btemp+11)^0,w,c
 12260   011BCE  6EEA               	movwf	fsr0h,c
 12261   011BD0  9EEF               	bcf	indf0,7,c
 12262   011BD2  A8DF               	btfss	indf2,4,c
 12263   011BD4  EFED  F08D         	goto	u865
 12264   011BD8  8EEF               	bsf	indf0,7,c
 12265   011BDA                     u865:
 12266   011BDA                     
 12267                           ;can/can.c: 490:     config->TxBandWidthSharing = ciCon.bF.TxBandWidthSharing;
 12268                           ;stkvar	_ciCon @ sp[(-4)+0]
 12269   011BDA  0EFF               	movlw	255
 12270   011BDC  24E1               	addwf	fsr1l,w,c
 12271   011BDE  6ED9               	movwf	fsr2l,c
 12272   011BE0  0EFF               	movlw	255
 12273   011BE2  20E2               	addwfc	fsr1h,w,c
 12274   011BE4  6EDA               	movwf	fsr2h,c
 12275   011BE6  38DF               	swapf	223,w,c
 12276   011BE8  0B0F               	andlw	15
 12277   011BEA  6E38               	movwf	(btemp+11)^0,c
 12278                           
 12279                           ;stkvar	_config @ sp[(-4)+-2]
 12280   011BEC  0EFA               	movlw	-6
 12281   011BEE  CFE3 F035          	movff	plusw1,btemp+8
 12282   011BF2  0EFB               	movlw	-5
 12283   011BF4  CFE3 F036          	movff	plusw1,btemp+9
 12284   011BF8  0E02               	movlw	2
 12285   011BFA  2435               	addwf	(btemp+8)^0,w,c
 12286   011BFC  6ED9               	movwf	fsr2l,c
 12287   011BFE  0E00               	movlw	0
 12288   011C00  2036               	addwfc	(btemp+9)^0,w,c
 12289   011C02  6EDA               	movwf	fsr2h,c
 12290   011C04  50DF               	movf	223,w,c
 12291   011C06  1838               	xorwf	(btemp+11)^0,w,c
 12292   011C08  0BF0               	andlw	-16
 12293   011C0A  1838               	xorwf	(btemp+11)^0,w,c
 12294   011C0C  6EDF               	movwf	223,c
 12295   011C0E                     
 12296                           ; _DRV_CANFDSPI_ConfigureObjectReset: autosize = 4, savesize = 0, parsavesize = 0, temps
      +                          ize = 0 parsize = 2, argsize = 2, vargsize = 0
 12297   011C0E  0EFA               	movlw	250
 12298   011C10  26E1               	addwf	fsr1l,f,c
 12299   011C12  0EFF               	movlw	255
 12300   011C14  22E2               	addwfc	fsr1h,f,c
 12301   011C16  0012               	return		;funcret
 12302   011C18                     __end_of_DRV_CANFDSPI_ConfigureObjectReset:
 12303                           	callstack 0
 12304                           
 12305 ;; *************** function _DRV_CANFDSPI_Configure *****************
 12306 ;; Defined at:
 12307 ;;		line 446 in file "can/can.c"
 12308 ;; Parameters:    Size  Location     Type
 12309 ;;  config          2  [STACK] PTR struct _CAN_CONFIG
 12310 ;;		 -> config(3), 
 12311 ;; Auto vars:     Size  Location     Type
 12312 ;;  ciCon           4  [STACK] struct _REG_CiCON
 12313 ;;  spiTransferE    1    0        char 
 12314 ;; Return value:  Size  Location     Type
 12315 ;;                  1  [STACK] char 
 12316 ;; Registers used:
 12317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 12318 ;; Tracked objects:
 12319 ;;		On entry : 0/0
 12320 ;;		On exit  : 0/0
 12321 ;;		Unchanged: 0/0
 12322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12327 ;;Total ram usage:        0 bytes
 12328 ;; Hardware stack levels used: 1
 12329 ;; Hardware stack levels required when called: 9
 12330 ;; This function calls:
 12331 ;;		_DRV_CANFDSPI_WriteWord
 12332 ;; This function is called by:
 12333 ;;		_CanInit
 12334 ;; This function uses a reentrant model
 12335 ;;
 12336                           
 12337                           	psect	text63
 12338   01173A                     __ptext63:
 12339                           	callstack 0
 12340   01173A                     _DRV_CANFDSPI_Configure:
 12341                           	callstack 0
 12342                           
 12343                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12344   01173A  52E6               	movf	postinc1,f,c
 12345   01173C  52E6               	movf	postinc1,f,c
 12346   01173E  52E6               	movf	postinc1,f,c
 12347   011740  52E6               	movf	postinc1,f,c
 12348   011742                     
 12349                           ;can/can.c: 451:     ciCon.word = canControlResetValues[0x000 / 4];
 12350   011742  0E8D               	movlw	low _canControlResetValues
 12351   011744  6EF6               	movwf	tblptrl,c
 12352   011746                     	if	1	;There is more than 1 active tblptr byte
 12353   011746  0EFF               	movlw	high _canControlResetValues
 12354   011748  6EF7               	movwf	tblptrh,c
 12355   01174A                     	endif
 12356   01174A                     	if	1	;There are 3 active tblptr bytes
 12357   01174A  0E00               	movlw	low (_canControlResetValues shr (0+16))
 12358   01174C  6EF8               	movwf	tblptru,c
 12359   01174E                     	endif
 12360   01174E  0009               	tblrd		*+
 12361   011750  CFF5 F035          	movff	tablat,btemp+8
 12362   011754  0009               	tblrd		*+
 12363   011756  CFF5 F036          	movff	tablat,btemp+9
 12364   01175A  0009               	tblrd		*+
 12365   01175C  CFF5 F037          	movff	tablat,btemp+10
 12366   011760  0009               	tblrd		*+
 12367   011762  CFF5 F038          	movff	tablat,btemp+11
 12368                           
 12369                           ;stkvar	_ciCon @ sp[(-4)+0]
 12370   011766  0EFC               	movlw	-4
 12371   011768  C035  FFE3         	movff	btemp+8,plusw1
 12372   01176C  0EFD               	movlw	-3
 12373   01176E  C036  FFE3         	movff	btemp+9,plusw1
 12374   011772  0EFE               	movlw	-2
 12375   011774  C037  FFE3         	movff	btemp+10,plusw1
 12376   011778  0EFF               	movlw	-1
 12377   01177A  C038  FFE3         	movff	btemp+11,plusw1
 12378   01177E                     
 12379                           ;can/can.c: 453:     ciCon.bF.DNetFilterCount = config->DNetFilterCount;
 12380                           ;stkvar	_config @ sp[(-4)+-2]
 12381   01177E  0EFA               	movlw	-6
 12382   011780  CFE3 FFD9          	movff	plusw1,fsr2l
 12383   011784  0EFB               	movlw	-5
 12384   011786  CFE3 FFDA          	movff	plusw1,fsr2h
 12385   01178A  50DF               	movf	223,w,c
 12386   01178C  0B1F               	andlw	31
 12387   01178E  6E38               	movwf	(btemp+11)^0,c
 12388                           
 12389                           ;stkvar	_ciCon @ sp[(-4)+0]
 12390   011790  50E1               	movf	fsr1l,w,c
 12391   011792  0FFC               	addlw	-4
 12392   011794  6ED9               	movwf	fsr2l,c
 12393   011796  50E2               	movf	fsr1h,w,c
 12394   011798  6EDA               	movwf	fsr2h,c
 12395   01179A  0EFF               	movlw	255
 12396   01179C  22DA               	addwfc	fsr2h,f,c
 12397   01179E  50DF               	movf	223,w,c
 12398   0117A0  1838               	xorwf	(btemp+11)^0,w,c
 12399   0117A2  0BE0               	andlw	-32
 12400   0117A4  1838               	xorwf	(btemp+11)^0,w,c
 12401   0117A6  6EDF               	movwf	223,c
 12402   0117A8                     
 12403                           ;can/can.c: 454:     ciCon.bF.IsoCrcEnable = config->IsoCrcEnable;
 12404                           ;stkvar	_config @ sp[(-4)+-2]
 12405   0117A8  0EFA               	movlw	-6
 12406   0117AA  CFE3 FFD9          	movff	plusw1,fsr2l
 12407   0117AE  0EFB               	movlw	-5
 12408   0117B0  CFE3 FFDA          	movff	plusw1,fsr2h
 12409                           
 12410                           ;stkvar	_ciCon @ sp[(-4)+0]
 12411   0117B4  50E1               	movf	fsr1l,w,c
 12412   0117B6  0FFC               	addlw	-4
 12413   0117B8  6EE9               	movwf	fsr0l,c
 12414   0117BA  50E2               	movf	fsr1h,w,c
 12415   0117BC  6EEA               	movwf	fsr0h,c
 12416   0117BE  0EFF               	movlw	255
 12417   0117C0  22EA               	addwfc	fsr0h,f,c
 12418   0117C2  9AEF               	bcf	indf0,5,c
 12419   0117C4  AADF               	btfss	indf2,5,c
 12420   0117C6  EFE6  F08B         	goto	u2235
 12421   0117CA  8AEF               	bsf	indf0,5,c
 12422   0117CC                     u2235:
 12423   0117CC                     
 12424                           ;can/can.c: 455:     ciCon.bF.ProtocolExceptionEventDisable = config->ProtocolExpectionE
      +                          ventDisable;
 12425                           ;stkvar	_config @ sp[(-4)+-2]
 12426   0117CC  0EFA               	movlw	-6
 12427   0117CE  CFE3 FFD9          	movff	plusw1,fsr2l
 12428   0117D2  0EFB               	movlw	-5
 12429   0117D4  CFE3 FFDA          	movff	plusw1,fsr2h
 12430                           
 12431                           ;stkvar	_ciCon @ sp[(-4)+0]
 12432   0117D8  50E1               	movf	fsr1l,w,c
 12433   0117DA  0FFC               	addlw	-4
 12434   0117DC  6EE9               	movwf	fsr0l,c
 12435   0117DE  50E2               	movf	fsr1h,w,c
 12436   0117E0  6EEA               	movwf	fsr0h,c
 12437   0117E2  0EFF               	movlw	255
 12438   0117E4  22EA               	addwfc	fsr0h,f,c
 12439   0117E6  9CEF               	bcf	indf0,6,c
 12440   0117E8  ACDF               	btfss	indf2,6,c
 12441   0117EA  EFF8  F08B         	goto	u2245
 12442   0117EE  8CEF               	bsf	indf0,6,c
 12443   0117F0                     u2245:
 12444   0117F0                     
 12445                           ;can/can.c: 456:     ciCon.bF.WakeUpFilterEnable = config->WakeUpFilterEnable;
 12446                           ;stkvar	_config @ sp[(-4)+-2]
 12447   0117F0  0EFA               	movlw	-6
 12448   0117F2  CFE3 FFD9          	movff	plusw1,fsr2l
 12449   0117F6  0EFB               	movlw	-5
 12450   0117F8  CFE3 FFDA          	movff	plusw1,fsr2h
 12451                           
 12452                           ;stkvar	_ciCon @ sp[(-4)+0]
 12453   0117FC  0EFD               	movlw	253
 12454   0117FE  24E1               	addwf	fsr1l,w,c
 12455   011800  6EE9               	movwf	fsr0l,c
 12456   011802  0EFF               	movlw	255
 12457   011804  20E2               	addwfc	fsr1h,w,c
 12458   011806  6EEA               	movwf	fsr0h,c
 12459   011808  90EF               	bcf	indf0,0,c
 12460   01180A  AEDF               	btfss	indf2,7,c
 12461   01180C  EF09  F08C         	goto	u2255
 12462   011810  80EF               	bsf	indf0,0,c
 12463   011812                     u2255:
 12464   011812                     
 12465                           ;can/can.c: 457:     ciCon.bF.WakeUpFilterTime = config->WakeUpFilterTime;
 12466                           ;stkvar	_config @ sp[(-4)+-2]
 12467   011812  0EFA               	movlw	-6
 12468   011814  CFE3 F037          	movff	plusw1,btemp+10
 12469   011818  0EFB               	movlw	-5
 12470   01181A  CFE3 F038          	movff	plusw1,btemp+11
 12471   01181E  0E01               	movlw	1
 12472   011820  2437               	addwf	(btemp+10)^0,w,c
 12473   011822  6ED9               	movwf	fsr2l,c
 12474   011824  0E00               	movlw	0
 12475   011826  2038               	addwfc	(btemp+11)^0,w,c
 12476   011828  6EDA               	movwf	fsr2h,c
 12477   01182A  50DF               	movf	223,w,c
 12478   01182C  0B03               	andlw	3
 12479   01182E  6E38               	movwf	(btemp+11)^0,c
 12480                           
 12481                           ;stkvar	_ciCon @ sp[(-4)+0]
 12482   011830  0EFD               	movlw	253
 12483   011832  24E1               	addwf	fsr1l,w,c
 12484   011834  6ED9               	movwf	fsr2l,c
 12485   011836  0EFF               	movlw	255
 12486   011838  20E2               	addwfc	fsr1h,w,c
 12487   01183A  6EDA               	movwf	fsr2h,c
 12488   01183C  4638               	rlncf	(btemp+11)^0,f,c
 12489   01183E  50DF               	movf	223,w,c
 12490   011840  1838               	xorwf	(btemp+11)^0,w,c
 12491   011842  0BF9               	andlw	-7
 12492   011844  1838               	xorwf	(btemp+11)^0,w,c
 12493   011846  6EDF               	movwf	223,c
 12494   011848                     
 12495                           ;can/can.c: 458:     ciCon.bF.BitRateSwitchDisable = config->BitRateSwitchDisable;
 12496                           ;stkvar	_config @ sp[(-4)+-2]
 12497   011848  0EFA               	movlw	-6
 12498   01184A  CFE3 F037          	movff	plusw1,btemp+10
 12499   01184E  0EFB               	movlw	-5
 12500   011850  CFE3 F038          	movff	plusw1,btemp+11
 12501   011854  0E01               	movlw	1
 12502   011856  2437               	addwf	(btemp+10)^0,w,c
 12503   011858  6ED9               	movwf	fsr2l,c
 12504   01185A  0E00               	movlw	0
 12505   01185C  2038               	addwfc	(btemp+11)^0,w,c
 12506   01185E  6EDA               	movwf	fsr2h,c
 12507                           
 12508                           ;stkvar	_ciCon @ sp[(-4)+0]
 12509   011860  0EFD               	movlw	253
 12510   011862  24E1               	addwf	fsr1l,w,c
 12511   011864  6EE9               	movwf	fsr0l,c
 12512   011866  0EFF               	movlw	255
 12513   011868  20E2               	addwfc	fsr1h,w,c
 12514   01186A  6EEA               	movwf	fsr0h,c
 12515   01186C  98EF               	bcf	indf0,4,c
 12516   01186E  A4DF               	btfss	indf2,2,c
 12517   011870  EF3B  F08C         	goto	u2265
 12518   011874  88EF               	bsf	indf0,4,c
 12519   011876                     u2265:
 12520   011876                     
 12521                           ;can/can.c: 459:     ciCon.bF.RestrictReTxAttempts = config->RestrictReTxAttempts;
 12522                           ;stkvar	_config @ sp[(-4)+-2]
 12523   011876  0EFA               	movlw	-6
 12524   011878  CFE3 F037          	movff	plusw1,btemp+10
 12525   01187C  0EFB               	movlw	-5
 12526   01187E  CFE3 F038          	movff	plusw1,btemp+11
 12527   011882  0E01               	movlw	1
 12528   011884  2437               	addwf	(btemp+10)^0,w,c
 12529   011886  6ED9               	movwf	fsr2l,c
 12530   011888  0E00               	movlw	0
 12531   01188A  2038               	addwfc	(btemp+11)^0,w,c
 12532   01188C  6EDA               	movwf	fsr2h,c
 12533                           
 12534                           ;stkvar	_ciCon @ sp[(-4)+0]
 12535   01188E  0EFE               	movlw	254
 12536   011890  24E1               	addwf	fsr1l,w,c
 12537   011892  6EE9               	movwf	fsr0l,c
 12538   011894  0EFF               	movlw	255
 12539   011896  20E2               	addwfc	fsr1h,w,c
 12540   011898  6EEA               	movwf	fsr0h,c
 12541   01189A  90EF               	bcf	indf0,0,c
 12542   01189C  A6DF               	btfss	indf2,3,c
 12543   01189E  EF52  F08C         	goto	u2275
 12544   0118A2  80EF               	bsf	indf0,0,c
 12545   0118A4                     u2275:
 12546   0118A4                     
 12547                           ;can/can.c: 460:     ciCon.bF.EsiInGatewayMode = config->EsiInGatewayMode;
 12548                           ;stkvar	_config @ sp[(-4)+-2]
 12549   0118A4  0EFA               	movlw	-6
 12550   0118A6  CFE3 F037          	movff	plusw1,btemp+10
 12551   0118AA  0EFB               	movlw	-5
 12552   0118AC  CFE3 F038          	movff	plusw1,btemp+11
 12553   0118B0  0E01               	movlw	1
 12554   0118B2  2437               	addwf	(btemp+10)^0,w,c
 12555   0118B4  6ED9               	movwf	fsr2l,c
 12556   0118B6  0E00               	movlw	0
 12557   0118B8  2038               	addwfc	(btemp+11)^0,w,c
 12558   0118BA  6EDA               	movwf	fsr2h,c
 12559                           
 12560                           ;stkvar	_ciCon @ sp[(-4)+0]
 12561   0118BC  0EFE               	movlw	254
 12562   0118BE  24E1               	addwf	fsr1l,w,c
 12563   0118C0  6EE9               	movwf	fsr0l,c
 12564   0118C2  0EFF               	movlw	255
 12565   0118C4  20E2               	addwfc	fsr1h,w,c
 12566   0118C6  6EEA               	movwf	fsr0h,c
 12567   0118C8  92EF               	bcf	indf0,1,c
 12568   0118CA  A8DF               	btfss	indf2,4,c
 12569   0118CC  EF69  F08C         	goto	u2285
 12570   0118D0  82EF               	bsf	indf0,1,c
 12571   0118D2                     u2285:
 12572   0118D2                     
 12573                           ;can/can.c: 461:     ciCon.bF.SystemErrorToListenOnly = config->SystemErrorToListenOnly;
 12574                           ;stkvar	_config @ sp[(-4)+-2]
 12575   0118D2  0EFA               	movlw	-6
 12576   0118D4  CFE3 F037          	movff	plusw1,btemp+10
 12577   0118D8  0EFB               	movlw	-5
 12578   0118DA  CFE3 F038          	movff	plusw1,btemp+11
 12579   0118DE  0E01               	movlw	1
 12580   0118E0  2437               	addwf	(btemp+10)^0,w,c
 12581   0118E2  6ED9               	movwf	fsr2l,c
 12582   0118E4  0E00               	movlw	0
 12583   0118E6  2038               	addwfc	(btemp+11)^0,w,c
 12584   0118E8  6EDA               	movwf	fsr2h,c
 12585                           
 12586                           ;stkvar	_ciCon @ sp[(-4)+0]
 12587   0118EA  0EFE               	movlw	254
 12588   0118EC  24E1               	addwf	fsr1l,w,c
 12589   0118EE  6EE9               	movwf	fsr0l,c
 12590   0118F0  0EFF               	movlw	255
 12591   0118F2  20E2               	addwfc	fsr1h,w,c
 12592   0118F4  6EEA               	movwf	fsr0h,c
 12593   0118F6  94EF               	bcf	indf0,2,c
 12594   0118F8  AADF               	btfss	indf2,5,c
 12595   0118FA  EF80  F08C         	goto	u2295
 12596   0118FE  84EF               	bsf	indf0,2,c
 12597   011900                     u2295:
 12598   011900                     
 12599                           ;can/can.c: 462:     ciCon.bF.StoreInTEF = config->StoreInTEF;
 12600                           ;stkvar	_config @ sp[(-4)+-2]
 12601   011900  0EFA               	movlw	-6
 12602   011902  CFE3 F037          	movff	plusw1,btemp+10
 12603   011906  0EFB               	movlw	-5
 12604   011908  CFE3 F038          	movff	plusw1,btemp+11
 12605   01190C  0E01               	movlw	1
 12606   01190E  2437               	addwf	(btemp+10)^0,w,c
 12607   011910  6ED9               	movwf	fsr2l,c
 12608   011912  0E00               	movlw	0
 12609   011914  2038               	addwfc	(btemp+11)^0,w,c
 12610   011916  6EDA               	movwf	fsr2h,c
 12611                           
 12612                           ;stkvar	_ciCon @ sp[(-4)+0]
 12613   011918  0EFE               	movlw	254
 12614   01191A  24E1               	addwf	fsr1l,w,c
 12615   01191C  6EE9               	movwf	fsr0l,c
 12616   01191E  0EFF               	movlw	255
 12617   011920  20E2               	addwfc	fsr1h,w,c
 12618   011922  6EEA               	movwf	fsr0h,c
 12619   011924  96EF               	bcf	indf0,3,c
 12620   011926  ACDF               	btfss	indf2,6,c
 12621   011928  EF97  F08C         	goto	u2305
 12622   01192C  86EF               	bsf	indf0,3,c
 12623   01192E                     u2305:
 12624   01192E                     
 12625                           ;can/can.c: 463:     ciCon.bF.TXQEnable = config->TXQEnable;
 12626                           ;stkvar	_config @ sp[(-4)+-2]
 12627   01192E  0EFA               	movlw	-6
 12628   011930  CFE3 F037          	movff	plusw1,btemp+10
 12629   011934  0EFB               	movlw	-5
 12630   011936  CFE3 F038          	movff	plusw1,btemp+11
 12631   01193A  0E01               	movlw	1
 12632   01193C  2437               	addwf	(btemp+10)^0,w,c
 12633   01193E  6ED9               	movwf	fsr2l,c
 12634   011940  0E00               	movlw	0
 12635   011942  2038               	addwfc	(btemp+11)^0,w,c
 12636   011944  6EDA               	movwf	fsr2h,c
 12637                           
 12638                           ;stkvar	_ciCon @ sp[(-4)+0]
 12639   011946  0EFE               	movlw	254
 12640   011948  24E1               	addwf	fsr1l,w,c
 12641   01194A  6EE9               	movwf	fsr0l,c
 12642   01194C  0EFF               	movlw	255
 12643   01194E  20E2               	addwfc	fsr1h,w,c
 12644   011950  6EEA               	movwf	fsr0h,c
 12645   011952  98EF               	bcf	indf0,4,c
 12646   011954  AEDF               	btfss	indf2,7,c
 12647   011956  EFAE  F08C         	goto	u2315
 12648   01195A  88EF               	bsf	indf0,4,c
 12649   01195C                     u2315:
 12650   01195C                     
 12651                           ;can/can.c: 464:     ciCon.bF.TxBandWidthSharing = config->TxBandWidthSharing;
 12652                           ;stkvar	_config @ sp[(-4)+-2]
 12653   01195C  0EFA               	movlw	-6
 12654   01195E  CFE3 F037          	movff	plusw1,btemp+10
 12655   011962  0EFB               	movlw	-5
 12656   011964  CFE3 F038          	movff	plusw1,btemp+11
 12657   011968  0E02               	movlw	2
 12658   01196A  2437               	addwf	(btemp+10)^0,w,c
 12659   01196C  6ED9               	movwf	fsr2l,c
 12660   01196E  0E00               	movlw	0
 12661   011970  2038               	addwfc	(btemp+11)^0,w,c
 12662   011972  6EDA               	movwf	fsr2h,c
 12663   011974  50DF               	movf	223,w,c
 12664   011976  0B0F               	andlw	15
 12665   011978  6E38               	movwf	(btemp+11)^0,c
 12666                           
 12667                           ;stkvar	_ciCon @ sp[(-4)+0]
 12668   01197A  0EFF               	movlw	255
 12669   01197C  24E1               	addwf	fsr1l,w,c
 12670   01197E  6ED9               	movwf	fsr2l,c
 12671   011980  0EFF               	movlw	255
 12672   011982  20E2               	addwfc	fsr1h,w,c
 12673   011984  6EDA               	movwf	fsr2h,c
 12674   011986  3A38               	swapf	(btemp+11)^0,f,c
 12675   011988  50DF               	movf	223,w,c
 12676   01198A  1838               	xorwf	(btemp+11)^0,w,c
 12677   01198C  0B0F               	andlw	-241
 12678   01198E  1838               	xorwf	(btemp+11)^0,w,c
 12679   011990  6EDF               	movwf	223,c
 12680   011992                     
 12681                           ;stkvar	_ciCon @ sp[(-4)+0]
 12682   011992  0EFC               	movlw	-4
 12683   011994  CFE3 FFE6          	movff	plusw1,postinc1
 12684   011998  CFE3 FFE6          	movff	plusw1,postinc1
 12685   01199C  CFE3 FFE6          	movff	plusw1,postinc1
 12686   0119A0  CFE3 FFE6          	movff	plusw1,postinc1
 12687   0119A4  0E00               	movlw	0
 12688   0119A6  6EE6               	movwf	postinc1,c
 12689   0119A8  0E00               	movlw	0
 12690   0119AA  6EE6               	movwf	postinc1,c
 12691   0119AC  ECA8  F099         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 12692   0119B0                     
 12693                           ; _DRV_CANFDSPI_Configure: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 2, argsize = 2, vargsize = 0
 12694   0119B0  0EFA               	movlw	250
 12695   0119B2  26E1               	addwf	fsr1l,f,c
 12696   0119B4  0EFF               	movlw	255
 12697   0119B6  22E2               	addwfc	fsr1h,f,c
 12698   0119B8  0012               	return		;funcret
 12699   0119BA                     __end_of_DRV_CANFDSPI_Configure:
 12700                           	callstack 0
 12701                           
 12702 ;; *************** function _DRV_CANFDSPI_BitTimeConfigureNominal40MHz *****************
 12703 ;; Defined at:
 12704 ;;		line 2825 in file "can/can.c"
 12705 ;; Parameters:    Size  Location     Type
 12706 ;;  bitTime         1  [STACK] enum E5607
 12707 ;; Auto vars:     Size  Location     Type
 12708 ;;  ciNbtcfg        4  [STACK] struct _REG_CiNBTCFG
 12709 ;;  spiTransferE    1    0        char 
 12710 ;; Return value:  Size  Location     Type
 12711 ;;                  1  [STACK] char 
 12712 ;; Registers used:
 12713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh,
      + tblptru, prodl, prodh
 12714 ;; Tracked objects:
 12715 ;;		On entry : 0/0
 12716 ;;		On exit  : 0/0
 12717 ;;		Unchanged: 0/0
 12718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12723 ;;Total ram usage:        0 bytes
 12724 ;; Hardware stack levels used: 1
 12725 ;; Hardware stack levels required when called: 9
 12726 ;; This function calls:
 12727 ;;		_DRV_CANFDSPI_WriteWord
 12728 ;; This function is called by:
 12729 ;;		_CanInit
 12730 ;; This function uses a reentrant model
 12731 ;;
 12732                           
 12733                           	psect	text64
 12734   011C18                     __ptext64:
 12735                           	callstack 0
 12736   011C18                     _DRV_CANFDSPI_BitTimeConfigureNominal40MHz:
 12737                           	callstack 0
 12738                           
 12739                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12740   011C18  52E6               	movf	postinc1,f,c
 12741   011C1A  52E6               	movf	postinc1,f,c
 12742   011C1C  52E6               	movf	postinc1,f,c
 12743   011C1E  52E6               	movf	postinc1,f,c
 12744   011C20                     
 12745                           ;can/can.c: 2829:     REG_CiNBTCFG ciNbtcfg;;can/can.c: 2831:     ciNbtcfg.word = canCon
      +                          trolResetValues[0x004 / 4];
 12746   011C20  0E91               	movlw	low (_canControlResetValues+4)
 12747   011C22  6EF6               	movwf	tblptrl,c
 12748   011C24  0EFF               	movlw	high (_canControlResetValues+4)
 12749   011C26  6EF7               	movwf	tblptrh,c
 12750   011C28                     	if	0	;tblptru may be non-zero
 12751   011C28                     	endif
 12752   011C28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12753   011C28  0E00               	movlw	low (__mediumconst shr (0+16))
 12754   011C2A  6EF8               	movwf	tblptru,c
 12755   011C2C                     	endif
 12756   011C2C  0009               	tblrd		*+
 12757   011C2E  CFF5 F035          	movff	tablat,btemp+8
 12758   011C32  0009               	tblrd		*+
 12759   011C34  CFF5 F036          	movff	tablat,btemp+9
 12760   011C38  0009               	tblrd		*+
 12761   011C3A  CFF5 F037          	movff	tablat,btemp+10
 12762   011C3E  0009               	tblrd		*+
 12763   011C40  CFF5 F038          	movff	tablat,btemp+11
 12764                           
 12765                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12766   011C44  0EFC               	movlw	-4
 12767   011C46  C035  FFE3         	movff	btemp+8,plusw1
 12768   011C4A  0EFD               	movlw	-3
 12769   011C4C  C036  FFE3         	movff	btemp+9,plusw1
 12770   011C50  0EFE               	movlw	-2
 12771   011C52  C037  FFE3         	movff	btemp+10,plusw1
 12772   011C56  0EFF               	movlw	-1
 12773   011C58  C038  FFE3         	movff	btemp+11,plusw1
 12774                           
 12775                           ;can/can.c: 2834:     switch (bitTime) {
 12776   011C5C  EFC8  F08E         	goto	l4386
 12777   011C60                     l665:
 12778   011C60                     l4366:
 12779                           
 12780                           ;can/can.c: 2844:             ciNbtcfg.bF.BRP = 0;
 12781                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12782   011C60  0EFF               	movlw	255
 12783   011C62  24E1               	addwf	fsr1l,w,c
 12784   011C64  6ED9               	movwf	fsr2l,c
 12785   011C66  0EFF               	movlw	255
 12786   011C68  20E2               	addwfc	fsr1h,w,c
 12787   011C6A  6EDA               	movwf	fsr2h,c
 12788   011C6C  6ADF               	clrf	indf2,c
 12789                           
 12790                           ;can/can.c: 2845:             ciNbtcfg.bF.TSEG1 = 62;
 12791                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12792   011C6E  0EFE               	movlw	254
 12793   011C70  24E1               	addwf	fsr1l,w,c
 12794   011C72  6ED9               	movwf	fsr2l,c
 12795   011C74  0EFF               	movlw	255
 12796   011C76  20E2               	addwfc	fsr1h,w,c
 12797   011C78  6EDA               	movwf	fsr2h,c
 12798   011C7A  0E3E               	movlw	62
 12799   011C7C  6EDF               	movwf	indf2,c
 12800                           
 12801                           ;can/can.c: 2846:             ciNbtcfg.bF.TSEG2 = 15;
 12802                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12803   011C7E  0EFD               	movlw	253
 12804   011C80  24E1               	addwf	fsr1l,w,c
 12805   011C82  6ED9               	movwf	fsr2l,c
 12806   011C84  0EFF               	movlw	255
 12807   011C86  20E2               	addwfc	fsr1h,w,c
 12808   011C88  6EDA               	movwf	fsr2h,c
 12809   011C8A  50DF               	movf	223,w,c
 12810   011C8C  0B80               	andlw	-128
 12811   011C8E  090F               	iorlw	15
 12812   011C90  6EDF               	movwf	223,c
 12813   011C92                     
 12814                           ;can/can.c: 2847:             ciNbtcfg.bF.SJW = 15;
 12815                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12816   011C92  50E1               	movf	fsr1l,w,c
 12817   011C94  0FFC               	addlw	-4
 12818   011C96  6ED9               	movwf	fsr2l,c
 12819   011C98  50E2               	movf	fsr1h,w,c
 12820   011C9A  6EDA               	movwf	fsr2h,c
 12821   011C9C  0EFF               	movlw	255
 12822   011C9E  22DA               	addwfc	fsr2h,f,c
 12823   011CA0  50DF               	movf	223,w,c
 12824   011CA2  0B80               	andlw	-128
 12825   011CA4  090F               	iorlw	15
 12826   011CA6  6EDF               	movwf	223,c
 12827                           
 12828                           ;can/can.c: 2848:             break;
 12829   011CA8  EF1E  F08F         	goto	l4388
 12830   011CAC                     l674:
 12831   011CAC                     l4370:
 12832                           
 12833                           ;can/can.c: 2858:             ciNbtcfg.bF.BRP = 0;
 12834                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12835   011CAC  0EFF               	movlw	255
 12836   011CAE  24E1               	addwf	fsr1l,w,c
 12837   011CB0  6ED9               	movwf	fsr2l,c
 12838   011CB2  0EFF               	movlw	255
 12839   011CB4  20E2               	addwfc	fsr1h,w,c
 12840   011CB6  6EDA               	movwf	fsr2h,c
 12841   011CB8  6ADF               	clrf	indf2,c
 12842                           
 12843                           ;can/can.c: 2859:             ciNbtcfg.bF.TSEG1 = 126;
 12844                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12845   011CBA  0EFE               	movlw	254
 12846   011CBC  24E1               	addwf	fsr1l,w,c
 12847   011CBE  6ED9               	movwf	fsr2l,c
 12848   011CC0  0EFF               	movlw	255
 12849   011CC2  20E2               	addwfc	fsr1h,w,c
 12850   011CC4  6EDA               	movwf	fsr2h,c
 12851   011CC6  0E7E               	movlw	126
 12852   011CC8  6EDF               	movwf	indf2,c
 12853                           
 12854                           ;can/can.c: 2860:             ciNbtcfg.bF.TSEG2 = 31;
 12855                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12856   011CCA  0EFD               	movlw	253
 12857   011CCC  24E1               	addwf	fsr1l,w,c
 12858   011CCE  6ED9               	movwf	fsr2l,c
 12859   011CD0  0EFF               	movlw	255
 12860   011CD2  20E2               	addwfc	fsr1h,w,c
 12861   011CD4  6EDA               	movwf	fsr2h,c
 12862   011CD6  50DF               	movf	223,w,c
 12863   011CD8  0B80               	andlw	-128
 12864   011CDA  091F               	iorlw	31
 12865   011CDC  6EDF               	movwf	223,c
 12866   011CDE                     
 12867                           ;can/can.c: 2861:             ciNbtcfg.bF.SJW = 31;
 12868                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12869   011CDE  50E1               	movf	fsr1l,w,c
 12870   011CE0  0FFC               	addlw	-4
 12871   011CE2  6ED9               	movwf	fsr2l,c
 12872   011CE4  50E2               	movf	fsr1h,w,c
 12873   011CE6  6EDA               	movwf	fsr2h,c
 12874   011CE8  0EFF               	movlw	255
 12875   011CEA  22DA               	addwfc	fsr2h,f,c
 12876   011CEC  50DF               	movf	223,w,c
 12877   011CEE  0B80               	andlw	-128
 12878   011CF0  091F               	iorlw	31
 12879   011CF2  6EDF               	movwf	223,c
 12880                           
 12881                           ;can/can.c: 2862:             break;
 12882   011CF4  EF1E  F08F         	goto	l4388
 12883   011CF8                     l4374:
 12884                           
 12885                           ;can/can.c: 2866:             ciNbtcfg.bF.BRP = 0;
 12886                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12887   011CF8  0EFF               	movlw	255
 12888   011CFA  24E1               	addwf	fsr1l,w,c
 12889   011CFC  6ED9               	movwf	fsr2l,c
 12890   011CFE  0EFF               	movlw	255
 12891   011D00  20E2               	addwfc	fsr1h,w,c
 12892   011D02  6EDA               	movwf	fsr2h,c
 12893   011D04  6ADF               	clrf	indf2,c
 12894                           
 12895                           ;can/can.c: 2867:             ciNbtcfg.bF.TSEG1 = 30;
 12896                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12897   011D06  0EFE               	movlw	254
 12898   011D08  24E1               	addwf	fsr1l,w,c
 12899   011D0A  6ED9               	movwf	fsr2l,c
 12900   011D0C  0EFF               	movlw	255
 12901   011D0E  20E2               	addwfc	fsr1h,w,c
 12902   011D10  6EDA               	movwf	fsr2h,c
 12903   011D12  0E1E               	movlw	30
 12904   011D14  6EDF               	movwf	indf2,c
 12905                           
 12906                           ;can/can.c: 2868:             ciNbtcfg.bF.TSEG2 = 7;
 12907                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12908   011D16  0EFD               	movlw	253
 12909   011D18  24E1               	addwf	fsr1l,w,c
 12910   011D1A  6ED9               	movwf	fsr2l,c
 12911   011D1C  0EFF               	movlw	255
 12912   011D1E  20E2               	addwfc	fsr1h,w,c
 12913   011D20  6EDA               	movwf	fsr2h,c
 12914   011D22  50DF               	movf	223,w,c
 12915   011D24  0B80               	andlw	-128
 12916   011D26  0907               	iorlw	7
 12917   011D28  6EDF               	movwf	223,c
 12918   011D2A                     
 12919                           ;can/can.c: 2869:             ciNbtcfg.bF.SJW = 7;
 12920                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12921   011D2A  50E1               	movf	fsr1l,w,c
 12922   011D2C  0FFC               	addlw	-4
 12923   011D2E  6ED9               	movwf	fsr2l,c
 12924   011D30  50E2               	movf	fsr1h,w,c
 12925   011D32  6EDA               	movwf	fsr2h,c
 12926   011D34  0EFF               	movlw	255
 12927   011D36  22DA               	addwfc	fsr2h,f,c
 12928   011D38  50DF               	movf	223,w,c
 12929   011D3A  0B80               	andlw	-128
 12930   011D3C  0907               	iorlw	7
 12931   011D3E  6EDF               	movwf	223,c
 12932                           
 12933                           ;can/can.c: 2870:             break;
 12934   011D40  EF1E  F08F         	goto	l4388
 12935   011D44                     l4378:
 12936                           
 12937                           ;can/can.c: 2873:             ciNbtcfg.bF.BRP = 0;
 12938                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12939   011D44  0EFF               	movlw	255
 12940   011D46  24E1               	addwf	fsr1l,w,c
 12941   011D48  6ED9               	movwf	fsr2l,c
 12942   011D4A  0EFF               	movlw	255
 12943   011D4C  20E2               	addwfc	fsr1h,w,c
 12944   011D4E  6EDA               	movwf	fsr2h,c
 12945   011D50  6ADF               	clrf	indf2,c
 12946                           
 12947                           ;can/can.c: 2874:             ciNbtcfg.bF.TSEG1 = 254;
 12948                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12949   011D52  0EFE               	movlw	254
 12950   011D54  24E1               	addwf	fsr1l,w,c
 12951   011D56  6ED9               	movwf	fsr2l,c
 12952   011D58  0EFF               	movlw	255
 12953   011D5A  20E2               	addwfc	fsr1h,w,c
 12954   011D5C  6EDA               	movwf	fsr2h,c
 12955   011D5E  0EFE               	movlw	254
 12956   011D60  6EDF               	movwf	indf2,c
 12957                           
 12958                           ;can/can.c: 2875:             ciNbtcfg.bF.TSEG2 = 63;
 12959                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12960   011D62  0EFD               	movlw	253
 12961   011D64  24E1               	addwf	fsr1l,w,c
 12962   011D66  6ED9               	movwf	fsr2l,c
 12963   011D68  0EFF               	movlw	255
 12964   011D6A  20E2               	addwfc	fsr1h,w,c
 12965   011D6C  6EDA               	movwf	fsr2h,c
 12966   011D6E  50DF               	movf	223,w,c
 12967   011D70  0B80               	andlw	-128
 12968   011D72  093F               	iorlw	63
 12969   011D74  6EDF               	movwf	223,c
 12970   011D76                     
 12971                           ;can/can.c: 2876:             ciNbtcfg.bF.SJW = 63;
 12972                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 12973   011D76  50E1               	movf	fsr1l,w,c
 12974   011D78  0FFC               	addlw	-4
 12975   011D7A  6ED9               	movwf	fsr2l,c
 12976   011D7C  50E2               	movf	fsr1h,w,c
 12977   011D7E  6EDA               	movwf	fsr2h,c
 12978   011D80  0EFF               	movlw	255
 12979   011D82  22DA               	addwfc	fsr2h,f,c
 12980   011D84  50DF               	movf	223,w,c
 12981   011D86  0B80               	andlw	-128
 12982   011D88  093F               	iorlw	63
 12983   011D8A  6EDF               	movwf	223,c
 12984                           
 12985                           ;can/can.c: 2877:             break;
 12986   011D8C  EF1E  F08F         	goto	l4388
 12987   011D90                     l4386:
 12988                           
 12989                           ;stkvar	_bitTime @ sp[(-4)+-1]
 12990   011D90  0EFB               	movlw	-5
 12991   011D92  50E3               	movf	plusw1,w,c
 12992   011D94  6E37               	movwf	(btemp+10)^0,c
 12993   011D96  6A38               	clrf	(btemp+11)^0,c
 12994                           
 12995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12996                           ; Switch size 1, requested type "simple"
 12997                           ; Number of cases is 1, Range of values is 0 to 0
 12998                           ; switch strategies available:
 12999                           ; Name         Instructions Cycles
 13000                           ; simple_byte            4     3 (average)
 13001                           ;	Chosen strategy is simple_byte
 13002   011D98  5038               	movf	(btemp+11)^0,w,c
 13003   011D9A  0A00               	xorlw	0	; case 0
 13004   011D9C  B4D8               	btfsc	status,2,c
 13005   011D9E  EFD3  F08E         	goto	l5032
 13006   011DA2  EF2D  F08F         	goto	l682
 13007   011DA6                     l5032:
 13008                           
 13009                           ; Switch size 1, requested type "simple"
 13010                           ; Number of cases is 18, Range of values is 0 to 17
 13011                           ; switch strategies available:
 13012                           ; Name         Instructions Cycles
 13013                           ; simple_byte           55    28 (average)
 13014                           ;	Chosen strategy is simple_byte
 13015   011DA6  5037               	movf	(btemp+10)^0,w,c
 13016   011DA8  0A00               	xorlw	0	; case 0
 13017   011DAA  B4D8               	btfsc	status,2,c
 13018   011DAC  EF30  F08E         	goto	l665
 13019   011DB0  0A01               	xorlw	1	; case 1
 13020   011DB2  B4D8               	btfsc	status,2,c
 13021   011DB4  EF30  F08E         	goto	l4366
 13022   011DB8  0A03               	xorlw	3	; case 2
 13023   011DBA  B4D8               	btfsc	status,2,c
 13024   011DBC  EF30  F08E         	goto	l4366
 13025   011DC0  0A01               	xorlw	1	; case 3
 13026   011DC2  B4D8               	btfsc	status,2,c
 13027   011DC4  EF30  F08E         	goto	l4366
 13028   011DC8  0A07               	xorlw	7	; case 4
 13029   011DCA  B4D8               	btfsc	status,2,c
 13030   011DCC  EF30  F08E         	goto	l4366
 13031   011DD0  0A01               	xorlw	1	; case 5
 13032   011DD2  B4D8               	btfsc	status,2,c
 13033   011DD4  EF30  F08E         	goto	l4366
 13034   011DD8  0A03               	xorlw	3	; case 6
 13035   011DDA  B4D8               	btfsc	status,2,c
 13036   011DDC  EF30  F08E         	goto	l4366
 13037   011DE0  0A01               	xorlw	1	; case 7
 13038   011DE2  B4D8               	btfsc	status,2,c
 13039   011DE4  EF30  F08E         	goto	l4366
 13040   011DE8  0A0F               	xorlw	15	; case 8
 13041   011DEA  B4D8               	btfsc	status,2,c
 13042   011DEC  EF56  F08E         	goto	l674
 13043   011DF0  0A01               	xorlw	1	; case 9
 13044   011DF2  B4D8               	btfsc	status,2,c
 13045   011DF4  EF56  F08E         	goto	l4370
 13046   011DF8  0A03               	xorlw	3	; case 10
 13047   011DFA  B4D8               	btfsc	status,2,c
 13048   011DFC  EF56  F08E         	goto	l4370
 13049   011E00  0A01               	xorlw	1	; case 11
 13050   011E02  B4D8               	btfsc	status,2,c
 13051   011E04  EF56  F08E         	goto	l4370
 13052   011E08  0A07               	xorlw	7	; case 12
 13053   011E0A  B4D8               	btfsc	status,2,c
 13054   011E0C  EF56  F08E         	goto	l4370
 13055   011E10  0A01               	xorlw	1	; case 13
 13056   011E12  B4D8               	btfsc	status,2,c
 13057   011E14  EF56  F08E         	goto	l4370
 13058   011E18  0A03               	xorlw	3	; case 14
 13059   011E1A  B4D8               	btfsc	status,2,c
 13060   011E1C  EF56  F08E         	goto	l4370
 13061   011E20  0A01               	xorlw	1	; case 15
 13062   011E22  B4D8               	btfsc	status,2,c
 13063   011E24  EF7C  F08E         	goto	l4374
 13064   011E28  0A1F               	xorlw	31	; case 16
 13065   011E2A  B4D8               	btfsc	status,2,c
 13066   011E2C  EF7C  F08E         	goto	l4374
 13067   011E30  0A01               	xorlw	1	; case 17
 13068   011E32  B4D8               	btfsc	status,2,c
 13069   011E34  EFA2  F08E         	goto	l4378
 13070   011E38  EF2D  F08F         	goto	l682
 13071   011E3C                     l4388:
 13072                           
 13073                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 13074   011E3C  0EFC               	movlw	-4
 13075   011E3E  CFE3 FFE6          	movff	plusw1,postinc1
 13076   011E42  CFE3 FFE6          	movff	plusw1,postinc1
 13077   011E46  CFE3 FFE6          	movff	plusw1,postinc1
 13078   011E4A  CFE3 FFE6          	movff	plusw1,postinc1
 13079   011E4E  0E04               	movlw	4
 13080   011E50  6EE6               	movwf	postinc1,c
 13081   011E52  0E00               	movlw	0
 13082   011E54  6EE6               	movwf	postinc1,c
 13083   011E56  ECA8  F099         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 13084   011E5A                     l682:
 13085                           
 13086                           ; _DRV_CANFDSPI_BitTimeConfigureNominal40MHz: autosize = 4, savesize = 0, parsavesize = 
      +                          0, tempsize = 0 parsize = 1, argsize = 1, vargsize = 0
 13087   011E5A  0EFB               	movlw	251
 13088   011E5C  26E1               	addwf	fsr1l,f,c
 13089   011E5E  0EFF               	movlw	255
 13090   011E60  22E2               	addwfc	fsr1h,f,c
 13091   011E62  0012               	return		;funcret
 13092   011E64                     __end_of_DRV_CANFDSPI_BitTimeConfigureNominal40MHz:
 13093                           	callstack 0
 13094                           
 13095 ;; *************** function _DRV_CANFDSPI_WriteWord *****************
 13096 ;; Defined at:
 13097 ;;		line 310 in file "can/can.c"
 13098 ;; Parameters:    Size  Location     Type
 13099 ;;  address         2  [STACK] unsigned short 
 13100 ;;  txd             4  [STACK] unsigned long 
 13101 ;; Auto vars:     Size  Location     Type
 13102 ;;  spiTransferS    2  [STACK] unsigned short 
 13103 ;;  i               1  [STACK] unsigned char 
 13104 ;;  spiTransferE    1  [STACK] char 
 13105 ;; Return value:  Size  Location     Type
 13106 ;;                  1  [STACK] char 
 13107 ;; Registers used:
 13108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 13109 ;; Tracked objects:
 13110 ;;		On entry : 0/0
 13111 ;;		On exit  : 0/0
 13112 ;;		Unchanged: 0/0
 13113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13118 ;;Total ram usage:        0 bytes
 13119 ;; Hardware stack levels used: 1
 13120 ;; Hardware stack levels required when called: 8
 13121 ;; This function calls:
 13122 ;;		_SpiTransfer
 13123 ;; This function is called by:
 13124 ;;		_DRV_CANFDSPI_Configure
 13125 ;;		_DRV_CANFDSPI_TransmitChannelConfigure
 13126 ;;		_DRV_CANFDSPI_TransmitQueueConfigure
 13127 ;;		_DRV_CANFDSPI_FilterObjectConfigure
 13128 ;;		_DRV_CANFDSPI_FilterMaskConfigure
 13129 ;;		_DRV_CANFDSPI_ReceiveChannelConfigure
 13130 ;;		_DRV_CANFDSPI_TefConfigure
 13131 ;;		_DRV_CANFDSPI_TimeStampSet
 13132 ;;		_DRV_CANFDSPI_BitTimeConfigureNominal40MHz
 13133 ;; This function uses a reentrant model
 13134 ;;
 13135                           
 13136                           	psect	text65
 13137   013350                     __ptext65:
 13138                           	callstack 0
 13139   013350                     _DRV_CANFDSPI_WriteWord:
 13140                           	callstack 0
 13141                           
 13142                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13143   013350  52E6               	movf	postinc1,f,c
 13144   013352  52E6               	movf	postinc1,f,c
 13145   013354  52E6               	movf	postinc1,f,c
 13146   013356  52E6               	movf	postinc1,f,c
 13147   013358                     
 13148                           ;can/can.c: 310: int8_t DRV_CANFDSPI_WriteWord( uint16_t address,;can/can.c: 311:       
      +                            uint32_t txd);can/can.c: 312: {;can/can.c: 313:     uint8_t i;;can/can.c: 314:     uin
      +                          t16_t spiTransferSize = 6;
 13149   013358  0E06               	movlw	6
 13150   01335A  6E37               	movwf	(btemp+10)^0,c
 13151   01335C  0E00               	movlw	0
 13152   01335E  6E38               	movwf	(btemp+11)^0,c
 13153                           
 13154                           ;stkvar	_spiTransferSize @ sp[(-4)+0]
 13155   013360  0EFC               	movlw	-4
 13156   013362  C037  FFE3         	movff	btemp+10,plusw1
 13157   013366  0EFD               	movlw	-3
 13158   013368  C038  FFE3         	movff	btemp+11,plusw1
 13159   01336C                     
 13160                           ;can/can.c: 318:     spiTransmitBuffer[0] = (uint8_t) ((0x02 << 4) + ((address >> 8) & 0
      +                          xF));
 13161                           ;stkvar	_address @ sp[(-4)+-2]
 13162   01336C  0EFB               	movlw	251
 13163   01336E  24E1               	addwf	fsr1l,w,c
 13164   013370  6ED9               	movwf	fsr2l,c
 13165   013372  0EFF               	movlw	255
 13166   013374  20E2               	addwfc	fsr1h,w,c
 13167   013376  6EDA               	movwf	fsr2h,c
 13168   013378  50DF               	movf	indf2,w,c
 13169   01337A  0B0F               	andlw	15
 13170   01337C  0F20               	addlw	32
 13171   01337E  0101               	movlb	1	; () banked
 13172   013380  6F00               	movwf	_spiTransmitBuffer& (0+255),b
 13173   013382                     
 13174                           ; BSR set to: 1
 13175                           ;can/can.c: 319:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
 13176                           ;stkvar	_address @ sp[(-4)+-2]
 13177   013382  0EFA               	movlw	-6
 13178   013384  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
 13179   013388                     
 13180                           ; BSR set to: 1
 13181                           ;can/can.c: 322:     for (i = 0; i < 4; i++) {
 13182                           ;stkvar	_i @ sp[(-4)+2]
 13183   013388  0EFE               	movlw	-2
 13184   01338A  6AE3               	clrf	plusw1,c
 13185   01338C                     l4256:
 13186                           
 13187                           ;can/can.c: 323:         spiTransmitBuffer[i + 2] = (uint8_t) ((txd >> (i * 8)) & 0xFF);
 13188                           ;stkvar	_i @ sp[(-4)+2]
 13189   01338C  0EFE               	movlw	-2
 13190   01338E  50E3               	movf	plusw1,w,c
 13191   013390  6E37               	movwf	(btemp+10)^0,c
 13192   013392  6A38               	clrf	(btemp+11)^0,c
 13193   013394  0E02               	movlw	low (_spiTransmitBuffer+2)
 13194   013396  2437               	addwf	(btemp+10)^0,w,c
 13195   013398  6ED9               	movwf	fsr2l,c
 13196   01339A  0E01               	movlw	high (_spiTransmitBuffer+2)
 13197   01339C  2038               	addwfc	(btemp+11)^0,w,c
 13198   01339E  6EDA               	movwf	fsr2h,c
 13199                           
 13200                           ;stkvar	_txd @ sp[(-4)+-6]
 13201   0133A0  0EF6               	movlw	-10
 13202   0133A2  CFE3 F035          	movff	plusw1,btemp+8
 13203   0133A6  0EF7               	movlw	-9
 13204   0133A8  CFE3 F036          	movff	plusw1,btemp+9
 13205   0133AC  0EF8               	movlw	-8
 13206   0133AE  CFE3 F037          	movff	plusw1,btemp+10
 13207   0133B2  0EF9               	movlw	-7
 13208   0133B4  CFE3 F038          	movff	plusw1,btemp+11
 13209                           
 13210                           ;stkvar	_i @ sp[(-4)+2]
 13211   0133B8  0EFE               	movlw	-2
 13212   0133BA  50E3               	movf	plusw1,w,c
 13213   0133BC  0D08               	mullw	8
 13214   0133BE  50F3               	movf	243,w,c
 13215   0133C0  2AE8               	incf	wreg,f,c
 13216   0133C2  EFE8  F099         	goto	u2100
 13217   0133C6                     u2105:
 13218   0133C6  90D8               	bcf	status,0,c
 13219   0133C8  3238               	rrcf	(btemp+11)^0,f,c
 13220   0133CA  3237               	rrcf	(btemp+10)^0,f,c
 13221   0133CC  3236               	rrcf	(btemp+9)^0,f,c
 13222   0133CE  3235               	rrcf	(btemp+8)^0,f,c
 13223   0133D0                     u2100:
 13224   0133D0  2EE8               	decfsz	wreg,f,c
 13225   0133D2  EFE3  F099         	goto	u2105
 13226   0133D6  5035               	movf	(btemp+8)^0,w,c
 13227   0133D8  6EDF               	movwf	indf2,c
 13228   0133DA                     
 13229                           ;can/can.c: 324:     }
 13230                           ;stkvar	_i @ sp[(-4)+2]
 13231   0133DA  0EFE               	movlw	-2
 13232   0133DC  2AE3               	incf	plusw1,f,c
 13233   0133DE                     
 13234                           ;stkvar	_i @ sp[(-4)+2]
 13235   0133DE  0EFE               	movlw	-2
 13236   0133E0  CFE3 F02D          	movff	plusw1,btemp
 13237   0133E4  0E03               	movlw	3
 13238   0133E6  642D               	cpfsgt	btemp^0,c
 13239   0133E8  EFF8  F099         	goto	u2111
 13240   0133EC  EFFA  F099         	goto	u2110
 13241   0133F0                     u2111:
 13242   0133F0  EFC6  F099         	goto	l4256
 13243   0133F4                     u2110:
 13244   0133F4                     
 13245                           ;can/can.c: 326:     spiTransferError = SpiTransfer( spiTransmitBuffer, spiReceiveBuffer
      +                          , spiTransferSize);
 13246                           ;stkvar	_spiTransferSize @ sp[(-4)+0]
 13247   0133F4  0EFC               	movlw	-4
 13248   0133F6  CFE3 FFE6          	movff	plusw1,postinc1
 13249   0133FA  CFE3 FFE6          	movff	plusw1,postinc1
 13250   0133FE  0E00               	movlw	low _spiReceiveBuffer
 13251   013400  6EE6               	movwf	postinc1,c
 13252   013402  0E02               	movlw	high _spiReceiveBuffer
 13253   013404  6EE6               	movwf	postinc1,c
 13254   013406  0E00               	movlw	low _spiTransmitBuffer
 13255   013408  6EE6               	movwf	postinc1,c
 13256   01340A  0E01               	movlw	high _spiTransmitBuffer
 13257   01340C  6EE6               	movwf	postinc1,c
 13258   01340E  ECAD  F09B         	call	_SpiTransfer	;wreg free
 13259                           
 13260                           ;stkvar	_spiTransferError @ sp[(-4)+3]
 13261   013412  0EFF               	movlw	-1
 13262   013414  C02D  FFE3         	movff	btemp,plusw1
 13263   013418                     
 13264                           ;can/can.c: 328:     return spiTransferError;
 13265                           ;stkvar	_spiTransferError @ sp[(-4)+3]
 13266   013418  0EFF               	movlw	-1
 13267   01341A  CFE3 F02D          	movff	plusw1,btemp
 13268   01341E                     
 13269                           ; _DRV_CANFDSPI_WriteWord: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 6, argsize = 6, vargsize = 0
 13270   01341E  0EF6               	movlw	246
 13271   013420  26E1               	addwf	fsr1l,f,c
 13272   013422  0EFF               	movlw	255
 13273   013424  22E2               	addwfc	fsr1h,f,c
 13274   013426  0012               	return		;funcret
 13275   013428                     __end_of_DRV_CANFDSPI_WriteWord:
 13276                           	callstack 0
 13277                           
 13278 ;; *************** function _SpiTransfer *****************
 13279 ;; Defined at:
 13280 ;;		line 132 in file "can/can.c"
 13281 ;; Parameters:    Size  Location     Type
 13282 ;;  txPtr           2  [STACK] PTR unsigned char 
 13283 ;;		 -> spiTransmitBuffer(200), 
 13284 ;;  rxPtr           2  [STACK] PTR unsigned char 
 13285 ;;		 -> spiReceiveBuffer(200), 
 13286 ;;  size            2  [STACK] unsigned short 
 13287 ;; Auto vars:     Size  Location     Type
 13288 ;;  dummy           1  [STACK] volatile unsigned char 
 13289 ;; Return value:  Size  Location     Type
 13290 ;;                  1  [STACK] char 
 13291 ;; Registers used:
 13292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 13293 ;; Tracked objects:
 13294 ;;		On entry : 0/1
 13295 ;;		On exit  : 0/0
 13296 ;;		Unchanged: 0/0
 13297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13302 ;;Total ram usage:        0 bytes
 13303 ;; Hardware stack levels used: 1
 13304 ;; Hardware stack levels required when called: 7
 13305 ;; This function calls:
 13306 ;;		Nothing
 13307 ;; This function is called by:
 13308 ;;		_DRV_CANFDSPI_Reset
 13309 ;;		_DRV_CANFDSPI_ReadByte
 13310 ;;		_DRV_CANFDSPI_WriteByte
 13311 ;;		_DRV_CANFDSPI_WriteWord
 13312 ;;		_DRV_CANFDSPI_WriteHalfWord
 13313 ;;		_DRV_CANFDSPI_ReadByteArray
 13314 ;;		_DRV_CANFDSPI_WriteByteArray
 13315 ;;		_DRV_CANFDSPI_ReadWordArray
 13316 ;; This function uses a reentrant model
 13317 ;;
 13318                           
 13319                           	psect	text66
 13320   01375A                     __ptext66:
 13321                           	callstack 0
 13322   01375A                     _SpiTransfer:
 13323                           	callstack 0
 13324                           
 13325                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13326   01375A  52E6               	movf	postinc1,f,c
 13327   01375C                     
 13328                           ;can/can.c: 132: static int8_t SpiTransfer(uint8_t * txPtr, uint8_t * rxPtr, uint16_t si
      +                          ze);can/can.c: 133: {;can/can.c: 134:   volatile uint8_t dummy;;can/can.c: 135:   LATGbi
      +                          ts.LATG4 = 0;
 13329   01375C  988F               	bcf	143,4,c	;volatile
 13330                           
 13331                           ;can/can.c: 136:   while(size > 0)
 13332   01375E  EFFA  F09B         	goto	l3658
 13333   013762                     l145:
 13334                           
 13335                           ;can/can.c: 137:   {;can/can.c: 138:     SSP2STATbits.BF = 0;
 13336   013762  9064               	bcf	100,0,c	;volatile
 13337   013764                     
 13338                           ;can/can.c: 139:     dummy = SSP2BUF;
 13339                           ;stkvar	_dummy @ sp[(-1)+0]
 13340   013764  0EFF               	movlw	-1
 13341   013766  CF66 FFE3          	movff	3942,plusw1	;volatile
 13342   01376A                     
 13343                           ;can/can.c: 140:     SSP2BUF = *txPtr;
 13344                           ;stkvar	_txPtr @ sp[(-1)+-2]
 13345   01376A  0EFD               	movlw	-3
 13346   01376C  CFE3 FFD9          	movff	plusw1,fsr2l
 13347   013770  0EFE               	movlw	-2
 13348   013772  CFE3 FFDA          	movff	plusw1,fsr2h
 13349   013776  50DF               	movf	indf2,w,c
 13350   013778  6E66               	movwf	102,c	;volatile
 13351   01377A                     l146:
 13352   01377A  A064               	btfss	100,0,c	;volatile
 13353   01377C  EFC2  F09B         	goto	u1471
 13354   013780  EFC4  F09B         	goto	u1470
 13355   013784                     u1471:
 13356   013784  EFBD  F09B         	goto	l146
 13357   013788                     u1470:
 13358   013788                     
 13359                           ;can/can.c: 142:     *rxPtr = SSP2BUF;
 13360                           ;stkvar	_rxPtr @ sp[(-1)+-4]
 13361   013788  0EFB               	movlw	-5
 13362   01378A  CFE3 FFD9          	movff	plusw1,fsr2l
 13363   01378E  0EFC               	movlw	-4
 13364   013790  CFE3 FFDA          	movff	plusw1,fsr2h
 13365   013794  CF66 FFDF          	movff	3942,indf2	;volatile
 13366   013798                     
 13367                           ;can/can.c: 143:     txPtr++;
 13368                           ;stkvar	_txPtr @ sp[(-1)+-2]
 13369   013798  0EFD               	movlw	-3
 13370   01379A  50E3               	movf	plusw1,w,c
 13371   01379C  0F01               	addlw	1
 13372   01379E  6E2D               	movwf	btemp^0,c
 13373   0137A0  0EFD               	movlw	-3
 13374   0137A2  C02D  FFE3         	movff	btemp,plusw1
 13375   0137A6  6A2D               	clrf	btemp^0,c
 13376   0137A8  0EFE               	movlw	-2
 13377   0137AA  50E3               	movf	plusw1,w,c
 13378   0137AC  202D               	addwfc	btemp^0,w,c
 13379   0137AE  6E2D               	movwf	btemp^0,c
 13380   0137B0  0EFE               	movlw	-2
 13381   0137B2  C02D  FFE3         	movff	btemp,plusw1
 13382   0137B6                     
 13383                           ;can/can.c: 144:     rxPtr++;
 13384                           ;stkvar	_rxPtr @ sp[(-1)+-4]
 13385   0137B6  0EFB               	movlw	-5
 13386   0137B8  50E3               	movf	plusw1,w,c
 13387   0137BA  0F01               	addlw	1
 13388   0137BC  6E2D               	movwf	btemp^0,c
 13389   0137BE  0EFB               	movlw	-5
 13390   0137C0  C02D  FFE3         	movff	btemp,plusw1
 13391   0137C4  6A2D               	clrf	btemp^0,c
 13392   0137C6  0EFC               	movlw	-4
 13393   0137C8  50E3               	movf	plusw1,w,c
 13394   0137CA  202D               	addwfc	btemp^0,w,c
 13395   0137CC  6E2D               	movwf	btemp^0,c
 13396   0137CE  0EFC               	movlw	-4
 13397   0137D0  C02D  FFE3         	movff	btemp,plusw1
 13398   0137D4                     
 13399                           ;can/can.c: 145:     size--;
 13400                           ;stkvar	_size @ sp[(-1)+-6]
 13401   0137D4  0EF9               	movlw	-7
 13402   0137D6  CFE3 F02D          	movff	plusw1,btemp
 13403   0137DA  0E01               	movlw	1
 13404   0137DC  5E2D               	subwf	btemp^0,f,c
 13405   0137DE  0EF9               	movlw	-7
 13406   0137E0  C02D  FFE3         	movff	btemp,plusw1
 13407   0137E4  0EFA               	movlw	-6
 13408   0137E6  CFE3 F02D          	movff	plusw1,btemp
 13409   0137EA  0E00               	movlw	0
 13410   0137EC  5A2D               	subwfb	btemp^0,f,c
 13411   0137EE  0EFA               	movlw	-6
 13412   0137F0  C02D  FFE3         	movff	btemp,plusw1
 13413   0137F4                     l3658:
 13414                           
 13415                           ;can/can.c: 136:   while(size > 0)
 13416                           ;stkvar	_size @ sp[(-1)+-6]
 13417   0137F4  0EF9               	movlw	-7
 13418   0137F6  CFE3 F02D          	movff	plusw1,btemp
 13419   0137FA  0EFA               	movlw	-6
 13420   0137FC  50E3               	movf	plusw1,w,c
 13421   0137FE  102D               	iorwf	btemp^0,w,c
 13422   013800  A4D8               	btfss	status,2,c
 13423   013802  EF05  F09C         	goto	u1481
 13424   013806  EF07  F09C         	goto	u1480
 13425   01380A                     u1481:
 13426   01380A  EFB1  F09B         	goto	l145
 13427   01380E                     u1480:
 13428   01380E                     
 13429                           ;can/can.c: 147:   LATGbits.LATG4 = 1;
 13430   01380E  888F               	bsf	143,4,c	;volatile
 13431   013810                     
 13432                           ;can/can.c: 148:   return 0;
 13433   013810  0E00               	movlw	0
 13434   013812  6E2D               	movwf	btemp^0,c
 13435   013814                     
 13436                           ; _SpiTransfer: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 13437   013814  0EF9               	movlw	249
 13438   013816  26E1               	addwf	fsr1l,f,c
 13439   013818  0EFF               	movlw	255
 13440   01381A  22E2               	addwfc	fsr1h,f,c
 13441   01381C  0012               	return		;funcret
 13442   01381E                     __end_of_SpiTransfer:
 13443                           	callstack 0
 13444                           
 13445 ;; *************** function _INTERRUPT_InterruptManager *****************
 13446 ;; Defined at:
 13447 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 13448 ;; Parameters:    Size  Location     Type
 13449 ;;		None
 13450 ;; Auto vars:     Size  Location     Type
 13451 ;;		None
 13452 ;; Return value:  Size  Location     Type
 13453 ;;                  1    wreg      void 
 13454 ;; Registers used:
 13455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, prodl, prodh
 13456 ;; Tracked objects:
 13457 ;;		On entry : 0/0
 13458 ;;		On exit  : 0/0
 13459 ;;		Unchanged: 0/0
 13460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13463 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13464 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13465 ;;Total ram usage:       16 bytes
 13466 ;; Hardware stack levels used: 1
 13467 ;; Hardware stack levels required when called: 6
 13468 ;; This function calls:
 13469 ;;		_TMR0_ISR
 13470 ;; This function is called by:
 13471 ;;		Interrupt level 2
 13472 ;; This function uses a non-reentrant model
 13473 ;;
 13474                           
 13475                           	psect	intcode
 13476   000008                     __pintcode:
 13477                           	callstack 0
 13478   000008                     _INTERRUPT_InterruptManager:
 13479                           	callstack 16
 13480                           
 13481                           ;incstack = 0
 13482   000008  CFFA F04D          	movff	pclath,??_INTERRUPT_InterruptManager
 13483   00000C  CFFB F04E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13484   000010  CFE9 F04F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 13485   000014  CFEA F050          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 13486   000018  CFE1 F051          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 13487   00001C  CFE2 F052          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 13488   000020  CFD9 F053          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 13489   000024  CFDA F054          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 13490   000028  CFF3 F055          	movff	prodl,??_INTERRUPT_InterruptManager+8
 13491   00002C  CFF4 F056          	movff	prodh,??_INTERRUPT_InterruptManager+9
 13492   000030  C02D  F057         	movff	btemp,??_INTERRUPT_InterruptManager+10
 13493   000034  C02E  F058         	movff	btemp+1,??_INTERRUPT_InterruptManager+11
 13494   000038  C035  F059         	movff	btemp+8,??_INTERRUPT_InterruptManager+12
 13495   00003C  C036  F05A         	movff	btemp+9,??_INTERRUPT_InterruptManager+13
 13496   000040  C037  F05B         	movff	btemp+10,??_INTERRUPT_InterruptManager+14
 13497   000044  C038  F05C         	movff	btemp+11,??_INTERRUPT_InterruptManager+15
 13498   000048  EE19  F031         	lfsr	1,___inthi_sp
 13499   00004C                     
 13500                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 13501   00004C  AAF2               	btfss	242,5,c	;volatile
 13502   00004E  EF2B  F000         	goto	i2u280_41
 13503   000052  EF2D  F000         	goto	i2u280_40
 13504   000056                     i2u280_41:
 13505   000056  EF36  F000         	goto	i2l1039
 13506   00005A                     i2u280_40:
 13507   00005A  A4F2               	btfss	242,2,c	;volatile
 13508   00005C  EF32  F000         	goto	i2u281_41
 13509   000060  EF34  F000         	goto	i2u281_40
 13510   000064                     i2u281_41:
 13511   000064  EF36  F000         	goto	i2l1039
 13512   000068                     i2u281_40:
 13513   000068                     
 13514                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 13515   000068  EC29  F0A2         	call	_TMR0_ISR	;wreg free
 13516   00006C                     i2l1039:
 13517   00006C  C05C  F038         	movff	??_INTERRUPT_InterruptManager+15,btemp+11
 13518   000070  C05B  F037         	movff	??_INTERRUPT_InterruptManager+14,btemp+10
 13519   000074  C05A  F036         	movff	??_INTERRUPT_InterruptManager+13,btemp+9
 13520   000078  C059  F035         	movff	??_INTERRUPT_InterruptManager+12,btemp+8
 13521   00007C  C058  F02E         	movff	??_INTERRUPT_InterruptManager+11,btemp+1
 13522   000080  C057  F02D         	movff	??_INTERRUPT_InterruptManager+10,btemp
 13523   000084  C056  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 13524   000088  C055  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 13525   00008C  C054  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 13526   000090  C053  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 13527   000094  C052  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 13528   000098  C051  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 13529   00009C  C050  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 13530   0000A0  C04F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 13531   0000A4  C04E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 13532   0000A8  C04D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 13533   0000AC  0011               	retfie		f
 13534   0000AE                     __end_of_INTERRUPT_InterruptManager:
 13535                           	callstack 0
 13536                           
 13537 ;; *************** function _TMR0_ISR *****************
 13538 ;; Defined at:
 13539 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 13540 ;; Parameters:    Size  Location     Type
 13541 ;;		None
 13542 ;; Auto vars:     Size  Location     Type
 13543 ;;		None
 13544 ;; Return value:  Size  Location     Type
 13545 ;;                  1  [STACK] void 
 13546 ;; Registers used:
 13547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, prodl, prodh
 13548 ;; Tracked objects:
 13549 ;;		On entry : 0/0
 13550 ;;		On exit  : 0/0
 13551 ;;		Unchanged: 0/0
 13552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13557 ;;Total ram usage:        0 bytes
 13558 ;; Hardware stack levels used: 1
 13559 ;; Hardware stack levels required when called: 5
 13560 ;; This function calls:
 13561 ;;		_TMR0_CallBack
 13562 ;; This function is called by:
 13563 ;;		_INTERRUPT_InterruptManager
 13564 ;; This function uses a reentrant model
 13565 ;;
 13566                           
 13567                           	psect	text68
 13568   014452                     __ptext68:
 13569                           	callstack 0
 13570   014452                     _TMR0_ISR:
 13571                           	callstack 16
 13572   014452                     
 13573                           ;mcc_generated_files/tmr0.c: 138:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 141:     INTCONbits.TMR0IF = 0;
 13574   014452  94F2               	bcf	242,2,c	;volatile
 13575                           
 13576                           ;mcc_generated_files/tmr0.c: 145:     TMR0H = timer0ReloadVal >> 8;
 13577   014454  C028  FFD7         	movff	_timer0ReloadVal+1,4055	;volatile
 13578                           
 13579                           ;mcc_generated_files/tmr0.c: 146:     TMR0L = (uint8_t) timer0ReloadVal;
 13580   014458  C027  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 13581   01445C                     
 13582                           ;mcc_generated_files/tmr0.c: 147:     carState.ms20Elapsed = 1;
 13583   01445C  0E01               	movlw	1
 13584   01445E  0100               	movlb	0	; () banked
 13585   014460  6F76               	movwf	(_carState+22)& (0+255),b
 13586   014462                     
 13587                           ; BSR set to: 0
 13588                           ;mcc_generated_files/tmr0.c: 150:     if (++CountCallBack >= 1)
 13589   014462  4A25               	infsnz	TMR0_ISR@CountCallBack^0,f,c	;volatile
 13590   014464  2A26               	incf	(TMR0_ISR@CountCallBack+1)^0,f,c	;volatile
 13591   014466  5025               	movf	TMR0_ISR@CountCallBack^0,w,c	;volatile
 13592   014468  1026               	iorwf	(TMR0_ISR@CountCallBack+1)^0,w,c	;volatile
 13593   01446A  B4D8               	btfsc	status,2,c
 13594   01446C  EF3A  F0A2         	goto	u271_41
 13595   014470  EF3C  F0A2         	goto	u271_40
 13596   014474                     u271_41:
 13597   014474  EF40  F0A2         	goto	l1085
 13598   014478                     u271_40:
 13599   014478                     
 13600                           ; BSR set to: 0
 13601                           ;mcc_generated_files/tmr0.c: 151:     {;mcc_generated_files/tmr0.c: 153:         TMR0_Ca
      +                          llBack();
 13602   014478  EC0E  F0A2         	call	_TMR0_CallBack	;wreg free
 13603   01447C                     
 13604                           ;mcc_generated_files/tmr0.c: 156:         CountCallBack = 0;
 13605   01447C  6A25               	clrf	TMR0_ISR@CountCallBack^0,c	;volatile
 13606   01447E  6A26               	clrf	(TMR0_ISR@CountCallBack+1)^0,c	;volatile
 13607   014480                     l1085:
 13608                           
 13609                           ; _TMR0_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 13610   014480  0012               	return		;funcret
 13611   014482                     __end_of_TMR0_ISR:
 13612                           	callstack 0
 13613                           
 13614 ;; *************** function _TMR0_CallBack *****************
 13615 ;; Defined at:
 13616 ;;		line 162 in file "mcc_generated_files/tmr0.c"
 13617 ;; Parameters:    Size  Location     Type
 13618 ;;		None
 13619 ;; Auto vars:     Size  Location     Type
 13620 ;;		None
 13621 ;; Return value:  Size  Location     Type
 13622 ;;                  1  [STACK] void 
 13623 ;; Registers used:
 13624 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, prodl, prodh
 13625 ;; Tracked objects:
 13626 ;;		On entry : 3F/0
 13627 ;;		On exit  : 0/0
 13628 ;;		Unchanged: 0/0
 13629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13634 ;;Total ram usage:        0 bytes
 13635 ;; Hardware stack levels used: 1
 13636 ;; Hardware stack levels required when called: 4
 13637 ;; This function calls:
 13638 ;;		NULL
 13639 ;;		_TMR0_DefaultInterruptHandler
 13640 ;;		_XF_decrementAndQueueTimers
 13641 ;; This function is called by:
 13642 ;;		_TMR0_ISR
 13643 ;; This function uses a reentrant model
 13644 ;;
 13645                           
 13646                           	psect	text69
 13647   01441C                     __ptext69:
 13648                           	callstack 0
 13649   01441C                     _TMR0_CallBack:
 13650                           	callstack 16
 13651   01441C                     
 13652                           ;mcc_generated_files/tmr0.c: 165:     carState.secondElapsed=1;
 13653   01441C  0E01               	movlw	1
 13654   01441E  0100               	movlb	0	; () banked
 13655   014420  6F75               	movwf	(_carState+21)& (0+255),b
 13656   014422                     
 13657                           ; BSR set to: 0
 13658                           ;mcc_generated_files/tmr0.c: 166:     if(TMR0_InterruptHandler)
 13659   014422  505D               	movf	_TMR0_InterruptHandler^0,w,c
 13660   014424  105E               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
 13661   014426  105F               	iorwf	(_TMR0_InterruptHandler+2)^0,w,c
 13662   014428  B4D8               	btfsc	status,2,c
 13663   01442A  EF19  F0A2         	goto	u259_41
 13664   01442E  EF1B  F0A2         	goto	u259_40
 13665   014432                     u259_41:
 13666   014432  EF28  F0A2         	goto	l1089
 13667   014436                     u259_40:
 13668   014436                     
 13669                           ; BSR set to: 0
 13670                           ;mcc_generated_files/tmr0.c: 167:     {;mcc_generated_files/tmr0.c: 168:         TMR0_In
      +                          terruptHandler();
 13671   014436  D802               	call	u260_48
 13672   014438  EF28  F0A2         	goto	u260_49
 13673   01443C                     u260_48:
 13674   01443C  0005               	push	
 13675   01443E  6EFA               	movwf	pclath,c
 13676   014440  505D               	movf	_TMR0_InterruptHandler^0,w,c
 13677   014442  6EFD               	movwf	tosl,c
 13678   014444  505E               	movf	(_TMR0_InterruptHandler+1)^0,w,c
 13679   014446  6EFE               	movwf	tosh,c
 13680   014448  505F               	movf	(_TMR0_InterruptHandler+2)^0,w,c
 13681   01444A  6EFF               	movwf	tosu,c
 13682   01444C  50FA               	movf	pclath,w,c
 13683   01444E  0012               	return		;indir
 13684   014450                     u260_49:
 13685   014450                     l1089:
 13686                           
 13687                           ; _TMR0_CallBack: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 13688   014450  0012               	return		;funcret
 13689   014452                     __end_of_TMR0_CallBack:
 13690                           	callstack 0
 13691                           
 13692 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 13693 ;; Defined at:
 13694 ;;		line 176 in file "mcc_generated_files/tmr0.c"
 13695 ;; Parameters:    Size  Location     Type
 13696 ;;		None
 13697 ;; Auto vars:     Size  Location     Type
 13698 ;;		None
 13699 ;; Return value:  Size  Location     Type
 13700 ;;                  1  [STACK] void 
 13701 ;; Registers used:
 13702 ;;		None
 13703 ;; Tracked objects:
 13704 ;;		On entry : 3F/0
 13705 ;;		On exit  : 0/0
 13706 ;;		Unchanged: 0/0
 13707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13712 ;;Total ram usage:        0 bytes
 13713 ;; Hardware stack levels used: 1
 13714 ;; This function calls:
 13715 ;;		Nothing
 13716 ;; This function is called by:
 13717 ;;		_TMR0_Initialize
 13718 ;;		_TMR0_CallBack
 13719 ;; This function uses a reentrant model
 13720 ;;
 13721                           
 13722                           	psect	text70
 13723   0145F0                     __ptext70:
 13724                           	callstack 0
 13725   0145F0                     _TMR0_DefaultInterruptHandler:
 13726                           	callstack 19
 13727   0145F0                     
 13728                           ; _TMR0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13729   0145F0  0012               	return		;funcret
 13730   0145F2                     __end_of_TMR0_DefaultInterruptHandler:
 13731                           	callstack 0
 13732                           
 13733 ;; *************** function _XF_decrementAndQueueTimers *****************
 13734 ;; Defined at:
 13735 ;;		line 217 in file "xf/xf.c"
 13736 ;; Parameters:    Size  Location     Type
 13737 ;;		None
 13738 ;; Auto vars:     Size  Location     Type
 13739 ;;  dummy           1  [STACK] unsigned char 
 13740 ;;  i               1  [STACK] unsigned char 
 13741 ;; Return value:  Size  Location     Type
 13742 ;;                  1  [STACK] void 
 13743 ;; Registers used:
 13744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
 13745 ;; Tracked objects:
 13746 ;;		On entry : 3F/0
 13747 ;;		On exit  : 0/0
 13748 ;;		Unchanged: 0/0
 13749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13754 ;;Total ram usage:        0 bytes
 13755 ;; Hardware stack levels used: 1
 13756 ;; Hardware stack levels required when called: 3
 13757 ;; This function calls:
 13758 ;;		_XF_pushEvent
 13759 ;;		_XF_unscheduleTimer
 13760 ;; This function is called by:
 13761 ;;		_main
 13762 ;;		_TMR0_CallBack
 13763 ;; This function uses a reentrant model
 13764 ;;
 13765                           
 13766                           	psect	text71
 13767   012F9A                     __ptext71:
 13768                           	callstack 0
 13769   012F9A                     _XF_decrementAndQueueTimers:
 13770                           	callstack 0
 13771                           
 13772                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13773   012F9A  52E6               	movf	postinc1,f,c
 13774   012F9C  52E6               	movf	postinc1,f,c
 13775   012F9E                     
 13776                           ;xf/xf.c: 219:     uint8_t i;;xf/xf.c: 220:     for (i=0; i<12; i++)
 13777                           ;stkvar	_i @ sp[(-2)+1]
 13778   012F9E  0EFF               	movlw	-1
 13779   012FA0  6AE3               	clrf	plusw1,c
 13780   012FA2                     l4304:
 13781                           
 13782                           ;xf/xf.c: 221:     {;xf/xf.c: 222:         if (theXF.timerList[i].ev.id != 0)
 13783                           ;stkvar	_i @ sp[(-2)+1]
 13784   012FA2  0EFF               	movlw	-1
 13785   012FA4  50E3               	movf	plusw1,w,c
 13786   012FA6  0D08               	mullw	8
 13787   012FA8  0ECA               	movlw	low (_theXF+2)
 13788   012FAA  24F3               	addwf	243,w,c
 13789   012FAC  6ED9               	movwf	fsr2l,c
 13790   012FAE  0E02               	movlw	high (_theXF+2)
 13791   012FB0  20F4               	addwfc	prodh,w,c
 13792   012FB2  6EDA               	movwf	fsr2h,c
 13793   012FB4  50DF               	movf	indf2,w,c
 13794   012FB6  B4D8               	btfsc	status,2,c
 13795   012FB8  EFE0  F097         	goto	u214_41
 13796   012FBC  EFE2  F097         	goto	u214_40
 13797   012FC0                     u214_41:
 13798   012FC0  EF3C  F098         	goto	l4316
 13799   012FC4                     u214_40:
 13800   012FC4                     
 13801                           ;xf/xf.c: 223:         {;xf/xf.c: 224:             theXF.timerList[i].tm-=10;
 13802                           ;stkvar	_i @ sp[(-2)+1]
 13803   012FC4  0EFF               	movlw	-1
 13804   012FC6  50E3               	movf	plusw1,w,c
 13805   012FC8  0D08               	mullw	8
 13806   012FCA  0EC8               	movlw	low _theXF
 13807   012FCC  24F3               	addwf	243,w,c
 13808   012FCE  6ED9               	movwf	fsr2l,c
 13809   012FD0  0E02               	movlw	high _theXF
 13810   012FD2  20F4               	addwfc	prodh,w,c
 13811   012FD4  6EDA               	movwf	fsr2h,c
 13812   012FD6  0E0A               	movlw	10
 13813   012FD8  5EDE               	subwf	postinc2,f,c
 13814   012FDA  0E00               	movlw	0
 13815   012FDC  5ADD               	subwfb	postdec2,f,c
 13816   012FDE                     
 13817                           ;xf/xf.c: 225:             if (theXF.timerList[i].tm ==0)
 13818                           ;stkvar	_i @ sp[(-2)+1]
 13819   012FDE  0EFF               	movlw	-1
 13820   012FE0  50E3               	movf	plusw1,w,c
 13821   012FE2  0D08               	mullw	8
 13822   012FE4  0EC8               	movlw	low _theXF
 13823   012FE6  24F3               	addwf	243,w,c
 13824   012FE8  6ED9               	movwf	fsr2l,c
 13825   012FEA  0E02               	movlw	high _theXF
 13826   012FEC  20F4               	addwfc	prodh,w,c
 13827   012FEE  6EDA               	movwf	fsr2h,c
 13828   012FF0  50DE               	movf	postinc2,w,c
 13829   012FF2  10DE               	iorwf	postinc2,w,c
 13830   012FF4  A4D8               	btfss	status,2,c
 13831   012FF6  EFFF  F097         	goto	u215_41
 13832   012FFA  EF01  F098         	goto	u215_40
 13833   012FFE                     u215_41:
 13834   012FFE  EF3C  F098         	goto	l4316
 13835   013002                     u215_40:
 13836   013002                     
 13837                           ;xf/xf.c: 226:             {;xf/xf.c: 227:                 uint8_t dummy;;xf/xf.c: 228: 
      +                                          if (XF_pushEvent(theXF.timerList[i].ev, 1, &dummy) == 1)
 13838                           ;stkvar	_dummy @ sp[(-2)+0]
 13839   013002  0EFE               	movlw	254
 13840   013004  24E1               	addwf	fsr1l,w,c
 13841   013006  6E2D               	movwf	btemp^0,c
 13842   013008  0EFF               	movlw	255
 13843   01300A  20E2               	addwfc	fsr1h,w,c
 13844   01300C  6E2E               	movwf	(btemp+1)^0,c
 13845   01300E  C02D  FFE6         	movff	btemp,postinc1
 13846   013012  C02E  FFE6         	movff	btemp+1,postinc1
 13847   013016  0E01               	movlw	1
 13848   013018  6EE6               	movwf	postinc1,c
 13849                           
 13850                           ;stkvar	_i @ sp[(-5)+1]
 13851   01301A  0EFC               	movlw	-4
 13852   01301C  50E3               	movf	plusw1,w,c
 13853   01301E  0D08               	mullw	8
 13854   013020  0ECA               	movlw	low (_theXF+2)
 13855   013022  24F3               	addwf	243,w,c
 13856   013024  6ED9               	movwf	fsr2l,c
 13857   013026  0E02               	movlw	high (_theXF+2)
 13858   013028  20F4               	addwfc	prodh,w,c
 13859   01302A  6EDA               	movwf	fsr2h,c
 13860   01302C  0E06               	movlw	6
 13861   01302E                     u216_41:
 13862   01302E  CFDE FFE6          	movff	postinc2,postinc1
 13863   013032  2CE8               	decfsz	wreg,w,c
 13864   013034  EF17  F098         	goto	u216_41
 13865   013038  ECAF  F092         	call	_XF_pushEvent	;wreg free
 13866   01303C  042D               	decf	btemp^0,w,c
 13867   01303E  A4D8               	btfss	status,2,c
 13868   013040  EF24  F098         	goto	u217_41
 13869   013044  EF26  F098         	goto	u217_40
 13870   013048                     u217_41:
 13871   013048  EF2F  F098         	goto	l4314
 13872   01304C                     u217_40:
 13873   01304C                     
 13874                           ;xf/xf.c: 229:                 {;xf/xf.c: 230:                   XF_unscheduleTimer(i, 1
      +                          );
 13875   01304C  0E01               	movlw	1
 13876   01304E  6EE6               	movwf	postinc1,c
 13877                           
 13878                           ;stkvar	_i @ sp[(-3)+1]
 13879   013050  0EFE               	movlw	-2
 13880   013052  50E3               	movf	plusw1,w,c
 13881   013054  6EE6               	movwf	postinc1,c
 13882   013056  EC14  F0A1         	call	_XF_unscheduleTimer	;wreg free
 13883                           
 13884                           ;xf/xf.c: 231:                 }
 13885   01305A  EF3C  F098         	goto	l4316
 13886   01305E                     l4314:
 13887                           
 13888                           ;xf/xf.c: 233:                 {;xf/xf.c: 234:                   theXF.timerList[i].tm=1
      +                          ;
 13889                           ;stkvar	_i @ sp[(-2)+1]
 13890   01305E  0EFF               	movlw	-1
 13891   013060  50E3               	movf	plusw1,w,c
 13892   013062  0D08               	mullw	8
 13893   013064  0EC8               	movlw	low _theXF
 13894   013066  24F3               	addwf	243,w,c
 13895   013068  6ED9               	movwf	fsr2l,c
 13896   01306A  0E02               	movlw	high _theXF
 13897   01306C  20F4               	addwfc	prodh,w,c
 13898   01306E  6EDA               	movwf	fsr2h,c
 13899   013070  0E01               	movlw	1
 13900   013072  6EDE               	movwf	postinc2,c
 13901   013074  0E00               	movlw	0
 13902   013076  6EDD               	movwf	postdec2,c
 13903   013078                     l4316:
 13904                           
 13905                           ;xf/xf.c: 238:     }
 13906                           ;stkvar	_i @ sp[(-2)+1]
 13907   013078  0EFF               	movlw	-1
 13908   01307A  2AE3               	incf	plusw1,f,c
 13909   01307C                     
 13910                           ;stkvar	_i @ sp[(-2)+1]
 13911   01307C  0EFF               	movlw	-1
 13912   01307E  CFE3 F02D          	movff	plusw1,btemp
 13913   013082  0E0B               	movlw	11
 13914   013084  642D               	cpfsgt	btemp^0,c
 13915   013086  EF47  F098         	goto	u218_41
 13916   01308A  EF49  F098         	goto	u218_40
 13917   01308E                     u218_41:
 13918   01308E  EFD1  F097         	goto	l4304
 13919   013092                     u218_40:
 13920   013092                     
 13921                           ; _XF_decrementAndQueueTimers: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0
      +                           parsize = 0, argsize = 0, vargsize = 0
 13922   013092  52E5               	movf	postdec1,f,c
 13923   013094  52E5               	movf	postdec1,f,c
 13924   013096  0012               	return		;funcret
 13925   013098                     __end_of_XF_decrementAndQueueTimers:
 13926                           	callstack 0
 13927                           
 13928 ;; *************** function _XF_unscheduleTimer *****************
 13929 ;; Defined at:
 13930 ;;		line 202 in file "xf/xf.c"
 13931 ;; Parameters:    Size  Location     Type
 13932 ;;  id              1  [STACK] unsigned char 
 13933 ;;  inISR           1  [STACK] _Bool 
 13934 ;; Auto vars:     Size  Location     Type
 13935 ;;		None
 13936 ;; Return value:  Size  Location     Type
 13937 ;;                  1  [STACK] void 
 13938 ;; Registers used:
 13939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11, prodl, prodh
 13940 ;; Tracked objects:
 13941 ;;		On entry : 0/0
 13942 ;;		On exit  : 0/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13949 ;;Total ram usage:        0 bytes
 13950 ;; Hardware stack levels used: 1
 13951 ;; Hardware stack levels required when called: 1
 13952 ;; This function calls:
 13953 ;;		_ENTERCRITICAL
 13954 ;;		_Event_init
 13955 ;;		_LEAVECRITICAL
 13956 ;; This function is called by:
 13957 ;;		_XF_decrementAndQueueTimers
 13958 ;; This function uses a reentrant model
 13959 ;;
 13960                           
 13961                           	psect	text72
 13962   014228                     __ptext72:
 13963                           	callstack 0
 13964   014228                     _XF_unscheduleTimer:
 13965                           	callstack 17
 13966   014228                     
 13967                           ;xf/xf.c: 202: void XF_unscheduleTimer(uint8_t id, _Bool inISR);xf/xf.c: 203: {;xf/xf.c:
      +                           204:     ENTERCRITICAL(inISR);
 13968                           ;stkvar	_inISR @ sp[(0)+-2]
 13969   014228  0EFE               	movlw	-2
 13970   01422A  50E3               	movf	plusw1,w,c
 13971   01422C  6EE6               	movwf	postinc1,c
 13972   01422E  ECCD  F0A2         	call	_ENTERCRITICAL	;wreg free
 13973   014232                     
 13974                           ;xf/xf.c: 205:     theXF.timerList[id].tm = 0;
 13975                           ;stkvar	_id @ sp[(0)+-1]
 13976   014232  0EFF               	movlw	-1
 13977   014234  50E3               	movf	plusw1,w,c
 13978   014236  0D08               	mullw	8
 13979   014238  0EC8               	movlw	low _theXF
 13980   01423A  24F3               	addwf	243,w,c
 13981   01423C  6ED9               	movwf	fsr2l,c
 13982   01423E  0E02               	movlw	high _theXF
 13983   014240  20F4               	addwfc	prodh,w,c
 13984   014242  6EDA               	movwf	fsr2h,c
 13985   014244  6ADE               	clrf	postinc2,c
 13986   014246  6ADD               	clrf	postdec2,c
 13987   014248                     
 13988                           ;xf/xf.c: 206:     Event_init(&(theXF.timerList[id].ev));
 13989                           ;stkvar	_id @ sp[(0)+-1]
 13990   014248  0EFF               	movlw	-1
 13991   01424A  50E3               	movf	plusw1,w,c
 13992   01424C  0D08               	mullw	8
 13993   01424E  0ECA               	movlw	low (_theXF+2)
 13994   014250  24F3               	addwf	243,w,c
 13995   014252  6E37               	movwf	(btemp+10)^0,c
 13996   014254  0E02               	movlw	high (_theXF+2)
 13997   014256  20F4               	addwfc	prodh,w,c
 13998   014258  6E38               	movwf	(btemp+11)^0,c
 13999   01425A  C037  FFE6         	movff	btemp+10,postinc1
 14000   01425E  C038  FFE6         	movff	btemp+11,postinc1
 14001   014262  EC6B  F0A1         	call	_Event_init	;wreg free
 14002   014266                     
 14003                           ;xf/xf.c: 207:     theXF.countTmr--;
 14004   014266  C3E1  FFE8         	movff	_theXF+281,wreg
 14005   01426A  0FFF               	addlw	-1
 14006   01426C  CFE8 F3E1          	movff	wreg,_theXF+281
 14007   014270                     
 14008                           ;xf/xf.c: 208:     LEAVECRITICAL(inISR);
 14009                           ;stkvar	_inISR @ sp[(0)+-2]
 14010   014270  0EFE               	movlw	-2
 14011   014272  50E3               	movf	plusw1,w,c
 14012   014274  6EE6               	movwf	postinc1,c
 14013   014276  ECC1  F0A2         	call	_LEAVECRITICAL	;wreg free
 14014   01427A                     
 14015                           ; _XF_unscheduleTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 14016   01427A  52E5               	movf	postdec1,f,c
 14017   01427C  52E5               	movf	postdec1,f,c
 14018   01427E  0012               	return		;funcret
 14019   014280                     __end_of_XF_unscheduleTimer:
 14020                           	callstack 0
 14021                           
 14022                           	psect	rparam
 14023   000000                     
 14024                           	psect	temp
 14025   00002D                     btemp:
 14026                           	callstack 0
 14027   00002D                     	ds	32
 14028   000000                     wtemp0	set	btemp
 14029   000000                     wtemp1	set	btemp+2
 14030   000000                     wtemp2	set	btemp+4
 14031   000000                     wtemp3	set	btemp+6
 14032   000000                     wtemp4	set	btemp+8
 14033   000000                     wtemp5	set	btemp+10
 14034   000000                     wtemp8	set	btemp+1
 14035   000000                     ttemp0	set	btemp
 14036   000000                     ttemp1	set	btemp+3
 14037   000000                     ttemp2	set	btemp+6
 14038   000000                     ttemp3	set	btemp+9
 14039   000000                     ttemp5	set	btemp+1
 14040   000000                     ttemp6	set	btemp+4
 14041   000000                     ttemp7	set	btemp+8
 14042   000000                     ltemp0	set	btemp
 14043   000000                     ltemp1	set	btemp+4
 14044   000000                     ltemp2	set	btemp+8
 14045   000000                     lltemp0	set	btemp
 14046   000000                     lltemp1	set	btemp+8
 14047   000000                     lltemp2	set	btemp+16
 14048   000000                     lltemp3	set	btemp+24
 14049                           
 14050                           	psect	config
 14051                           
 14052                           ;Config register CONFIG1L @ 0x1FFF8
 14053                           ;	Watchdog Timer Enable bit
 14054                           ;	WDT = OFF, WDT disabled (control is placed on SWDTEN bit)
 14055                           ;	Stack Overflow/Underflow Reset Enable bit
 14056                           ;	STVR = ON, Reset on stack overflow/underflow enabled
 14057                           ;	Extended Instruction Set Enable bit
 14058                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 14059                           ;	Background Debugger Enable bit
 14060                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
 14061   01FFF8                     	org	131064
 14062   01FFF8  A0                 	db	160
 14063                           
 14064                           ;Config register CONFIG1H @ 0x1FFF9
 14065                           ;	Code Protection bit
 14066                           ;	CP0 = OFF, Program memory is not code-protected
 14067   01FFF9                     	org	131065
 14068   01FFF9  F4                 	db	244
 14069                           
 14070                           ;Config register CONFIG2L @ 0x1FFFA
 14071                           ;	Oscillator Selection bits
 14072                           ;	FOSC = HSPLL, HS oscillator, PLL enabled and under software control
 14073                           ;	Default/Reset System Clock Select bit
 14074                           ;	FOSC2 = ON, Clock selected by FOSC1:FOSC0 as system clock is enabled when OSCCON<1:0> 
      +                          = 00
 14075                           ;	Fail-Safe Clock Monitor Enable
 14076                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 14077                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
 14078                           ;	IESO = ON, Two-Speed Start-up enabled
 14079   01FFFA                     	org	131066
 14080   01FFFA  C5                 	db	197
 14081                           
 14082                           ;Config register CONFIG2H @ 0x1FFFB
 14083                           ;	Watchdog Timer Postscaler Select bits
 14084                           ;	WDTPS = 32768, 1:32768
 14085   01FFFB                     	org	131067
 14086   01FFFB  FF                 	db	255
 14087                           
 14088                           ;Config register CONFIG3L @ 0x1FFFC
 14089                           ;	External Address Bus Shift Enable bit
 14090                           ;	EASHFT = ON, Address shifting enabled; address on external bus is offset to start at 0
      +                          00000h
 14091                           ;	External Memory Bus
 14092                           ;	MODE = MM, Microcontroller mode, external bus disabled
 14093                           ;	Data Bus Width Select bit
 14094                           ;	BW = 16, 16-Bit Data Width mode
 14095                           ;	External Bus Wait Enable bit
 14096                           ;	WAIT = OFF, Wait states for operations on external memory bus disabled
 14097   01FFFC                     	org	131068
 14098   01FFFC  F8                 	db	248
 14099                           
 14100                           ;Config register CONFIG3H @ 0x1FFFD
 14101                           ;	ECCP2 MUX bit
 14102                           ;	CCP2MX = ON, ECCP2/P2A is multiplexed with RC1
 14103                           ;	ECCP MUX bit
 14104                           ;	ECCPMX = ON, ECCP1 outputs (P1B/P1C) are multiplexed with RE6 and RE5; ECCP3 outputs (
      +                          P3B/P3C) are multiplexed with RE4 and RE3
 14105                           ;	Ethernet LED Enable bit
 14106                           ;	ETHLED = ON, RA0/RA1 are multiplexed with LEDA/LEDB when Ethernet module is enabled an
      +                          d function as I/O when Ethernet is disabled
 14107   01FFFD                     	org	131069
 14108   01FFFD  F7                 	db	247
 14109                           tosu	equ	0xFFF
 14110                           tosh	equ	0xFFE
 14111                           tosl	equ	0xFFD
 14112                           stkptr	equ	0xFFC
 14113                           pclatu	equ	0xFFB
 14114                           pclath	equ	0xFFA
 14115                           pcl	equ	0xFF9
 14116                           tblptru	equ	0xFF8
 14117                           tblptrh	equ	0xFF7
 14118                           tblptrl	equ	0xFF6
 14119                           tablat	equ	0xFF5
 14120                           prodh	equ	0xFF4
 14121                           prodl	equ	0xFF3
 14122                           indf0	equ	0xFEF
 14123                           postinc0	equ	0xFEE
 14124                           postdec0	equ	0xFED
 14125                           preinc0	equ	0xFEC
 14126                           plusw0	equ	0xFEB
 14127                           fsr0h	equ	0xFEA
 14128                           fsr0l	equ	0xFE9
 14129                           wreg	equ	0xFE8
 14130                           indf1	equ	0xFE7
 14131                           postinc1	equ	0xFE6
 14132                           postdec1	equ	0xFE5
 14133                           preinc1	equ	0xFE4
 14134                           plusw1	equ	0xFE3
 14135                           fsr1h	equ	0xFE2
 14136                           fsr1l	equ	0xFE1
 14137                           bsr	equ	0xFE0
 14138                           indf2	equ	0xFDF
 14139                           postinc2	equ	0xFDE
 14140                           postdec2	equ	0xFDD
 14141                           preinc2	equ	0xFDC
 14142                           plusw2	equ	0xFDB
 14143                           fsr2h	equ	0xFDA
 14144                           fsr2l	equ	0xFD9
 14145                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    96
    Data        0
    BSS         753
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     16      63
    BANK0           160      0      27
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    config	PTR struct _CAN_TEF_CONFIG size(2) Largest target is 1
		 -> tefConfig(STACK[1]), 

    config	PTR struct _CAN_RX_FIFO_CONFIG size(2) Largest target is 3
		 -> rxfConfig(STACK[3]), 

    config	PTR struct _CAN_TX_QUEUE_CONFIG size(2) Largest target is 4
		 -> txqConfig(STACK[4]), 

    config	PTR struct _CAN_TX_QUEUE_CONFIG size(2) Largest target is 4
		 -> txqConfig(STACK[4]), 

    config	PTR struct _CAN_TX_FIFO_CONFIG size(2) Largest target is 2
		 -> txfConfig(STACK[2]), 

    config	PTR struct _CAN_TX_FIFO_CONFIG size(2) Largest target is 2
		 -> txfConfig(STACK[2]), 

    config	PTR struct _CAN_CONFIG size(2) Largest target is 3
		 -> config(STACK[3]), 

    config	PTR struct _CAN_CONFIG size(2) Largest target is 3
		 -> config(STACK[3]), 

    DRV_CANFDSPI_ReadHalfWord$2	PTR unsigned short  size(2) Largest target is 2
		 -> intEnables(STACK[2]), intFlags(STACK[2]), 

    DRV_CANFDSPI_ReadWord$2	PTR unsigned long  size(2) Largest target is 4
		 -> ciFifoSta(STACK[4]), ciTrec(STACK[4]), reg(STACK[4]), 

    DRV_CANFDSPI_WriteWordArray$2	PTR unsigned long  size(2) Largest target is 8
		 -> w(STACK[8]), 

    ev	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    ev$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), NULL(NULL[0]), 

    flags	PTR enum E5591 size(2) Largest target is 1
		 -> rxFlags(STACK[1]), 

    flags	PTR enum E5583 size(2) Largest target is 1
		 -> txFlags(STACK[1]), 

    fObj	PTR struct _CAN_FILTEROBJ_ID size(2) Largest target is 6
		 -> fObj(STACK[6]), 

    id	PTR struct _CAN_FILTEROBJ_ID size(2) Largest target is 6
		 -> fObj(STACK[6]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), XF_decrementAndQueueTimers(), 

    mask	PTR struct _CAN_MASKOBJ_ID size(2) Largest target is 6
		 -> mObj(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 282
		 -> ev(STACK[6]), theXF(BIGRAM[282]), theXF$eventQueue(BIGRAM[180]), theXF$timerList(BIGRAM[96]), 

    me$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), NULL(NULL[0]), 

    mObj	PTR struct _CAN_MASKOBJ_ID size(2) Largest target is 6
		 -> mObj(STACK[6]), 

    processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), 

    processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), 

    processEvent$0	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    processEvent$0	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    rxd	PTR unsigned char  size(2) Largest target is 8
		 -> rxdata(STACK[8]), 

    rxd	PTR unsigned long  size(2) Largest target is 12
		 -> fifoReg(STACK[12]), fifoReg(STACK[12]), fifoReg(STACK[8]), fifoReg(STACK[12]), 
		 -> w(STACK[12]), 

    rxd	PTR unsigned char  size(2) Largest target is 76
		 -> ba(STACK[12]), ba(STACK[76]), 

    rxd	PTR unsigned char  size(2) Largest target is 5
		 -> b(STACK[1]), ciFifoCon(STACK[5]), ciFifoSta(STACK[4]), ciTefCon(STACK[4]), 
		 -> ciTefSta(STACK[4]), crc(STACK[1]), crc(STACK[1]), crc(STACK[1]), 
		 -> crc(STACK[1]), d(STACK[1]), d(STACK[1]), d(STACK[1]), 
		 -> d(STACK[1]), d(STACK[1]), d(STACK[1]), d(STACK[1]), 
		 -> d(STACK[1]), d(STACK[1]), d(STACK[1]), d(STACK[1]), 
		 -> d(STACK[1]), d(STACK[1]), eccInterrupts(STACK[1]), eccInterrupts(STACK[1]), 
		 -> eccStat(STACK[1]), eccStatus(STACK[1]), f(STACK[1]), fCtrl(STACK[1]), 
		 -> filterHitByte(STACK[1]), icodeByte(STACK[1]), iocon(STACK[4]), osc(STACK[4]), 
		 -> rxCodeByte(STACK[1]), txCodeByte(STACK[1]), 

    rxd	PTR unsigned char  size(2) Largest target is 8
		 -> rxdata(STACK[8]), 

    rxObj	PTR struct _CAN_RX_MSGOBJ size(2) Largest target is 16
		 -> rxObj(STACK[16]), txMsg(STACK[16]), 

    rxObj	PTR struct _CAN_RX_MSGOBJ size(2) Largest target is 16
		 -> rxObj(STACK[16]), 

    rxPtr	PTR unsigned char  size(2) Largest target is 200
		 -> spiReceiveBuffer(BANK2[200]), 

    S4923$1$0	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    S4923Event_$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), NULL(NULL[0]), 

    sp__Event_getPE	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), NULL(NULL[0]), 

    sp__Event_getPE$0	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    theXF$eventQueue$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), NULL(NULL[0]), 

    theXF$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 0
		 -> lightControl_Process(), NULL(NULL[0]), 

    theXF$timerList$ev$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), NULL(NULL[0]), 

    tmid	PTR unsigned char  size(2) Largest target is 1
		 -> dummy(STACK[1]), tmid(STACK[1]), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), XF_decrementAndQueueTimers(), NULL(), 

    txd	PTR unsigned char  size(2) Largest target is 8
		 -> txdata(STACK[8]), txdata(STACK[8]), 

    txd	PTR unsigned char  size(2) Largest target is 200
		 -> txBuffer(STACK[76]), txd(STACK[200]), 

    txd	PTR unsigned char  size(2) Largest target is 8
		 -> txdata(STACK[8]), txdata(STACK[8]), 

    txObj	PTR struct _CAN_TX_MSGOBJ size(2) Largest target is 16
		 -> txMsg(STACK[16]), 

    txObj	PTR struct _CAN_TX_MSGOBJ size(2) Largest target is 16
		 -> txMsg(STACK[16]), 

    txPtr	PTR unsigned char  size(2) Largest target is 200
		 -> spiTransmitBuffer(BANK1[200]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[17]), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), 

    ?_XF_popEvent$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   22776
                            _CanInit
                       _CanSetFilter
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                     _XF_executeOnce
                            _XF_init
                            _XF_post
                     _updateCarState
 ---------------------------------------------------------------------------------
 (1) _updateCarState                                      24    24      0    4571
                         _CanReceive
                            _XF_post
 ---------------------------------------------------------------------------------
 (2) _XF_post                                             13     7      6    1387
                         _Event_init
                     _Event_setDelay
                        _Event_setId
                        _Event_setPE
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (13) _XF_pushEvent                                       12     3      9     982
                      _ENTERCRITICAL
                     _Event_getDelay
                     _Event_setDelay
                      _LEAVECRITICAL
                     _XF_noMoreEvent
                   _XF_scheduleTimer
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) _XF_scheduleTimer                                   10     1      9     310
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                     _XF_noMoreTimer
 ---------------------------------------------------------------------------------
 (15) _XF_noMoreTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _XF_noMoreEvent                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _Event_setDelay                                      4     0      4      44
 ---------------------------------------------------------------------------------
 (14) _Event_getDelay                                      2     0      2      22
 ---------------------------------------------------------------------------------
 (3) _Event_setPE                                          5     0      5      44
 ---------------------------------------------------------------------------------
 (3) _Event_setId                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _CanReceive                                           5     1      4    3055
_DRV_CANFDSPI_ReceiveChannelEventGet
     _DRV_CANFDSPI_ReceiveMessageGet
 ---------------------------------------------------------------------------------
 (3) _DRV_CANFDSPI_ReceiveMessageGet                     120   114      6    2616
         _DRV_CANFDSPI_ReadByteArray
         _DRV_CANFDSPI_ReadWordArray
  _DRV_CANFDSPI_ReceiveChannelUpdate
 ---------------------------------------------------------------------------------
 (4) _DRV_CANFDSPI_ReceiveChannelUpdate                    9     8      1     299
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DRV_CANFDSPI_ReadByteArray                          11     5      6     364
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (3) _DRV_CANFDSPI_ReceiveChannelEventGet                 10     7      3     349
              _DRV_CANFDSPI_ReadByte
 ---------------------------------------------------------------------------------
 (1) _XF_init                                              2     2      0     224
                         _Event_init
 ---------------------------------------------------------------------------------
 (14) _Event_init                                          2     0      2      66
 ---------------------------------------------------------------------------------
 (1) _XF_executeOnce                                       6     6      0    7266
                        _XF_popEvent
               _lightControl_Process *
 ---------------------------------------------------------------------------------
 (2) _lightControl_Process                                 2     0      2    6725
              _lightContol_BackLight
             _lightContol_FrontLight
 ---------------------------------------------------------------------------------
 (3) _lightContol_FrontLight                              25    24      1    3336
                            _CanSend
 ---------------------------------------------------------------------------------
 (3) _lightContol_BackLight                               25    24      1    3301
                            _CanSend
 ---------------------------------------------------------------------------------
 (4) _CanSend                                              5     1      4    3165
_DRV_CANFDSPI_TransmitChannelEventGe
   _DRV_CANFDSPI_TransmitChannelLoad
 ---------------------------------------------------------------------------------
 (5) _DRV_CANFDSPI_TransmitChannelLoad                   128   118     10    2688
        _DRV_CANFDSPI_DlcToDataBytes
         _DRV_CANFDSPI_ReadWordArray
 _DRV_CANFDSPI_TransmitChannelUpdate
        _DRV_CANFDSPI_WriteByteArray
 ---------------------------------------------------------------------------------
 (6) _DRV_CANFDSPI_WriteByteArray                         11     5      6     296
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (6) _DRV_CANFDSPI_TransmitChannelUpdate                  10     8      2     364
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DRV_CANFDSPI_ReadWordArray                          19    13      6     525
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (6) _DRV_CANFDSPI_DlcToDataBytes                          5     4      1      60
 ---------------------------------------------------------------------------------
 (5) _DRV_CANFDSPI_TransmitChannelEventGet                10     7      3     343
              _DRV_CANFDSPI_ReadByte
 ---------------------------------------------------------------------------------
 (2) _XF_popEvent                                         12     6      6     474
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (14) _LEAVECRITICAL                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (14) _ENTERCRITICAL                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      15
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CanSetFilter                                         5     0      5    2657
         _DRV_CANFDSPI_FilterDisable
   _DRV_CANFDSPI_FilterMaskConfigure
 _DRV_CANFDSPI_FilterObjectConfigure
      _DRV_CANFDSPI_FilterToFifoLink
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_FilterToFifoLink                        7     4      3     308
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_FilterObjectConfigure                  16    13      3     831
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_FilterMaskConfigure                    17    13      4     831
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_FilterDisable                           5     4      1     533
              _DRV_CANFDSPI_ReadByte
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (1) _CanInit                                             15    13      2    6572
_DRV_CANFDSPI_BitTimeConfigureNomina
             _DRV_CANFDSPI_Configure
  _DRV_CANFDSPI_ConfigureObjectReset
     _DRV_CANFDSPI_ModuleEventEnable
   _DRV_CANFDSPI_OperationModeSelect
_DRV_CANFDSPI_ReceiveChannelConfigur
                 _DRV_CANFDSPI_Reset
          _DRV_CANFDSPI_TefConfigure
       _DRV_CANFDSPI_TimeStampEnable
 _DRV_CANFDSPI_TimeStampPrescalerSet
          _DRV_CANFDSPI_TimeStampSet
_DRV_CANFDSPI_TransmitChannelConfigu
_DRV_CANFDSPI_TransmitChannelConfigu
_DRV_CANFDSPI_TransmitQueueConfigure
_DRV_CANFDSPI_TransmitQueueConfigure
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TransmitQueueConfigureObjectReset       7     5      2     120
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TransmitQueueConfigure                  9     7      2     506
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TransmitChannelConfigureObjectReset     7     5      2     150
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TransmitChannelConfigure               11     8      3     578
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TimeStampSet                            5     1      4     304
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TimeStampPrescalerSet                   3     1      2     304
         _DRV_CANFDSPI_WriteHalfWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TimeStampEnable                         2     2      0     469
              _DRV_CANFDSPI_ReadByte
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TefConfigure                            7     5      2     372
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_Reset                                   3     3      0     189
                          _SPI2_Open
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (3) _SPI2_Open                                            1     0      1      88
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_ReceiveChannelConfigure                11     8      3     464
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_OperationModeSelect                     3     2      1     492
              _DRV_CANFDSPI_ReadByte
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (5) _DRV_CANFDSPI_WriteByte                               6     3      3     184
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (4) _DRV_CANFDSPI_ReadByte                                7     3      4     184
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_ModuleEventEnable                       8     5      3     374
         _DRV_CANFDSPI_WriteHalfWord
 ---------------------------------------------------------------------------------
 (3) _DRV_CANFDSPI_WriteHalfWord                           8     4      4     274
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_ConfigureObjectReset                    6     4      2     360
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_Configure                               7     5      2     810
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_BitTimeConfigureNominal40MHz            6     5      1     615
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (3) _DRV_CANFDSPI_WriteWord                              10     4      6     274
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (6) _SpiTransfer                                          7     1      6      70
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                          16    16      0    1382
                                              0 COMRAM    16    16      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0    1382
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (11) _TMR0_CallBack                                       0     0      0    1382
                                NULL *
       _TMR0_DefaultInterruptHandler *
         _XF_decrementAndQueueTimers *
 ---------------------------------------------------------------------------------
 (12) _XF_decrementAndQueueTimers                          2     2      0    1382
                       _XF_pushEvent
                 _XF_unscheduleTimer
 ---------------------------------------------------------------------------------
 (13) _XF_unscheduleTimer                                  2     0      2     198
                      _ENTERCRITICAL
                         _Event_init
                      _LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (14) _Event_init                                          2     0      2      66
 ---------------------------------------------------------------------------------
 (13) _XF_pushEvent                                       12     3      9     982
                      _ENTERCRITICAL
                     _Event_getDelay
                     _Event_setDelay
                      _LEAVECRITICAL
                     _XF_noMoreEvent
                   _XF_scheduleTimer
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (14) _XF_scheduleTimer                                   10     1      9     310
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                     _XF_noMoreTimer
 ---------------------------------------------------------------------------------
 (15) _XF_noMoreTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _LEAVECRITICAL                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (14) _ENTERCRITICAL                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (14) _XF_noMoreEvent                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _Event_setDelay                                      4     0      4      44
 ---------------------------------------------------------------------------------
 (14) _Event_getDelay                                      2     0      2      22
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CanInit
     _DRV_CANFDSPI_BitTimeConfigureNominal40MHz
       _DRV_CANFDSPI_WriteWord
         _SpiTransfer
     _DRV_CANFDSPI_Configure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_ConfigureObjectReset
     _DRV_CANFDSPI_ModuleEventEnable
       _DRV_CANFDSPI_WriteHalfWord
         _SpiTransfer
     _DRV_CANFDSPI_OperationModeSelect
       _DRV_CANFDSPI_ReadByte
         _SpiTransfer
       _DRV_CANFDSPI_WriteByte
         _SpiTransfer
     _DRV_CANFDSPI_ReceiveChannelConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_Reset
       _SPI2_Open
       _SpiTransfer
     _DRV_CANFDSPI_TefConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_TimeStampEnable
       _DRV_CANFDSPI_ReadByte
       _DRV_CANFDSPI_WriteByte
     _DRV_CANFDSPI_TimeStampPrescalerSet
       _DRV_CANFDSPI_WriteHalfWord
     _DRV_CANFDSPI_TimeStampSet
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_TransmitChannelConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_TransmitChannelConfigureObjectReset
     _DRV_CANFDSPI_TransmitQueueConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_TransmitQueueConfigureObjectReset
   _CanSetFilter
     _DRV_CANFDSPI_FilterDisable
       _DRV_CANFDSPI_ReadByte
       _DRV_CANFDSPI_WriteByte
     _DRV_CANFDSPI_FilterMaskConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_FilterObjectConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_FilterToFifoLink
       _DRV_CANFDSPI_WriteByte
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _XF_executeOnce
     _XF_popEvent
       _ENTERCRITICAL
       _LEAVECRITICAL
       ___awmod
     _lightControl_Process *
       _lightContol_BackLight
         _CanSend
           _DRV_CANFDSPI_TransmitChannelEventGet
             _DRV_CANFDSPI_ReadByte
           _DRV_CANFDSPI_TransmitChannelLoad
             _DRV_CANFDSPI_DlcToDataBytes
             _DRV_CANFDSPI_ReadWordArray
               _SpiTransfer
             _DRV_CANFDSPI_TransmitChannelUpdate
               _DRV_CANFDSPI_WriteByte
             _DRV_CANFDSPI_WriteByteArray
               _SpiTransfer
       _lightContol_FrontLight
         _CanSend
   _XF_init
     _Event_init
   _XF_post
     _Event_init
     _Event_setDelay
     _Event_setId
     _Event_setPE
     _XF_pushEvent
       _ENTERCRITICAL
       _Event_getDelay
       _Event_setDelay
       _LEAVECRITICAL
       _XF_noMoreEvent
       _XF_scheduleTimer
         _ENTERCRITICAL
         _LEAVECRITICAL
         _XF_noMoreTimer
       ___awmod
   _updateCarState
     _CanReceive
       _DRV_CANFDSPI_ReceiveChannelEventGet
         _DRV_CANFDSPI_ReadByte
       _DRV_CANFDSPI_ReceiveMessageGet
         _DRV_CANFDSPI_ReadByteArray
           _SpiTransfer
         _DRV_CANFDSPI_ReadWordArray
         _DRV_CANFDSPI_ReceiveChannelUpdate
           _DRV_CANFDSPI_WriteByte
     _XF_post

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
       _XF_decrementAndQueueTimers *
         _XF_pushEvent
           _ENTERCRITICAL
           _Event_getDelay
           _Event_setDelay
           _LEAVECRITICAL
           _XF_noMoreEvent
           _XF_scheduleTimer
             _ENTERCRITICAL
             _LEAVECRITICAL
             _XF_noMoreTimer
           ___awmod
         _XF_unscheduleTimer
           _ENTERCRITICAL
           _Event_init
           _LEAVECRITICAL

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7F      0     11A      48        7.6%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      1B       5       16.9%
BITBIGSFR           80      0       0      47        0.0%
BITBANK14           80      0       0      33        0.0%
BANK14              80      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      46        0.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     10      3F       1      100.0%
BITBIGSFR_1lhhl     21      0       0      44        0.0%
BITBIGSFR_1hhhl     1C      0       0      42        0.0%
BITBIGSFR_1hhhh     1A      0       0      38        0.0%
BITBIGSFR_1hhhl      E      0       0      41        0.0%
BITBIGSFR_1hhhh      D      0       0      37        0.0%
BITBIGSFR_1hhhl      8      0       0      43        0.0%
BITBIGSFR_1hhhl      2      0       0      40        0.0%
BITBIGSFR_1ll        2      0       0      45        0.0%
BITBIGSFR_1hhhh      1      0       0      39        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0      FA       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1EA      32        0.0%
DATA                 0      0     3FE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Feb 25 16:34:05 2025

                                  __end_of_updateCarState 3350  
                                              _CanReceive 409E  
                                         _timer0ReloadVal 0027  
                                                     l150 3814  
                                                     l222 3FB8  
                                                     l206 1730  
                                                     l215 19B0  
                                                     l145 3762  
                                                     l401 38CC  
                                                     l161 4094  
                                                     l146 377A  
                                                     l218 1C0E  
                                                     l154 2068  
                                                     l322 14A8  
                                                     l171 41BE  
                                                     l251 2554  
                                                     l412 415C  
                                                     l260 317C  
                                                     l149 380E  
                                                     l317 1174  
                                                     l165 40F8  
                                                     l174 42CC  
                                                     l254 2E76  
                                                     l158 3C3C  
                                                     l327 3E0E  
                                                     l184 3750  
                                                     l168 44DA  
                                                     l336 3EA0  
                                                     l264 0742  
                                                     l257 2D3C  
                                                     l193 23D2  
                                                     l346 2BFC  
                                                     l179 341E  
                                                     l453 3D78  
                                                     l293 3B92  
                                                     l357 0E2A  
                                                     l623 4222  
                                                     l199 2F90  
                                                     l482 3CE0  
                                                     l643 4562  
                                                     l635 44FA  
                                                     l379 402A  
                                                     l665 1C60  
                                                     l682 1E5A  
                                                     l674 1CAC  
                                                     l875 2246  
                                                     l976 45C6  
                                                     l979 45DE  
                                                     u100 20A4  
                                                     u101 20A0  
                                                     u805 1A92  
                                                     u815 1AF4  
                                                     u825 1B22  
                                                     u835 1B50  
                                                     u845 1B7E  
                                                     u855 1BAC  
                                                     u865 1BDA  
                                                     u785 1A4C  
                                                     u795 1A70  
                                                     u975 2DAE  
       __end_of_DRV_CANFDSPI_BitTimeConfigureNominal40MHz 1E64  
               _DRV_CANFDSPI_BitTimeConfigureNominal40MHz 1C18  
                  __end_of_DRV_CANFDSPI_ModuleEventEnable 4166  
                          _DRV_CANFDSPI_ModuleEventEnable 4102  
                                                     prod 0FF3  
                                                     tosl 0FFD  
                                                     wreg 0FE8  
            __end_of_DRV_CANFDSPI_TransmitChannelEventGet 3D82  
                    _DRV_CANFDSPI_TransmitChannelEventGet 3CEA  
                                                    l1020 44AE  
                                                    l1120 3988  
                                                    l1032 45EE  
                                                    l1200 45E6  
                                                    l1201 45E6  
                                                    l1116 45D6  
                                                    l1206 45E0  
                                                    l1215 2814  
                                                    l1207 45E0  
                                                    l1231 325E  
                                                    l1223 26D4  
                                                    l1064 43E2  
                                                    l1216 282C  
                                                    l3010 30DC  
                                                    l1250 45AE  
                                                    l1162 43A0  
                                                    l1234 3266  
                                                    l1227 3686  
                                                    l3012 30FA  
                                                    l1092 4544  
                                                    l2300 208C  
                                                    l1237 427A  
                                                    l1085 4480  
                                                    l1421 3AE4  
                                                    l1261 3F30  
                                                    l1246 3092  
                                                    l3014 3126  
                                                    l1254 4596  
                                                    l2310 211C  
                                                    l2302 208E  
                                                    l1174 4412  
                                                    l1095 45F0  
                                                    l1159 431E  
                                                    l3016 3150  
                                                    l3008 30A0  
                                                    l4000 28BA  
                                                    l2312 2142  
                                                    l2304 20A4  
                                                    l1168 457A  
                                                    l1089 4450  
                                                    l1177 4524  
                                                    l1257 35BA  
                                                    l3050 2E08  
                                                    l3042 2D4E  
                                                    l4010 292A  
                                                    l4002 28BE  
                                                    l2314 2168  
                                                    l2306 20D0  
                                                    l2322 21DA  
                                                    l3052 2E3C  
                                                    l3044 2D8A  
                                                    l3300 45D8  
                                                    l4004 28CE  
                                                    l4012 2948  
                                                    l2316 218E  
                                                    l2308 20F6  
                                                    l2324 222E  
                                                    l4020 3B9E  
                                                    l4100 26BC  
                                                    l1429 3A36  
                                                    l1461 3346  
                                                    l4110 4232  
                                                    l3046 2DAE  
                                                    l3302 45DA  
                                                    l4014 295A  
                                                    l4006 28FC  
                                                    l2318 21B4  
                                                    l4022 3BC6  
                                                    l4030 2258  
                                                    l4102 26C6  
                                                    l1447 2A5C  
                                                    l4112 4248  
                                                    l3048 2DD8  
                                                    l4016 2966  
                                                    l4008 2920  
                                                    l4024 3BE2  
                                                    l1448 2ABE  
                                                    l4120 3C4E  
                                                    l4040 22AA  
                                                    l4032 2276  
                                                    l4200 0C9E  
                                                    l4104 26D0  
                                                    l4114 4266  
                                                    l4026 3BF2  
                                                    l4130 3C8E  
                                                    l4122 3C4E  
                                                    l4050 2340  
                                                    l4042 22C4  
                                                    l4034 2276  
                                                    l4210 0D5E  
                                                    l4202 0CBA  
                                                    l4116 4270  
                                                    l4108 4228  
                                                    l1708 2972  
                                                    l4132 3CB6  
                                                    l4052 2380  
                                                    l4044 22E2  
                                                    l4036 228C  
                                                    l4060 3FC8  
                                                    l4220 0DFA  
                                                    l4212 0D62  
                                                    l4204 0CD6  
                                                    l4140 0754  
                                                    l4310 3002  
                                                    l4230 38D6  
                                                    l5030 21F0  
                                                    l4126 3C64  
                                                    l4118 3C4E  
                                                    l4054 239E  
                                                    l4046 2310  
                                                    l4038 2292  
                                                    l4070 4000  
                                                    l4062 3FC8  
                                                    l4222 0DFE  
                                                    l4206 0D0C  
                                                    l4214 0D88  
                                                    l4150 07BC  
                                                    l4142 075C  
                                                    l4312 304C  
                                                    l4304 2FA2  
                                                    l5032 1DA6  
                                                    l4400 177E  
                                                    l4232 38E4  
                                                    l3280 45D0  
                                                    l2296 207A  
                                                    l4320 3A48  
                                                    l4136 3CCC  
                                                    l4128 3C74  
                                                    l4056 23CC  
                                                    l4048 2334  
                                                    l4072 4024  
                                                    l4064 3FC8  
                                                    l4216 0DA8  
                                                    l4224 0E20  
                                                    l4208 0D14  
                                                    l4160 0858  
                                                    l4152 07EC  
                                                    l4144 0776  
                                                    l4080 25A2  
                                                    l4314 305E  
                                                    l4306 2FC4  
                                                    l4250 3388  
                                                    l4242 3358  
                                                    l4410 1848  
                                                    l4402 17A8  
                                                    l4234 3928  
                                                    l3290 449C  
                                                    l3282 45D2  
                                                    l2298 208A  
                                                    l4330 3AAC  
                                                    l4322 3A5C  
                                                    l5026 2A28  
                                                    l4066 3FD8  
                                                    l4218 0DB0  
                                                    l4170 08C4  
                                                    l4162 086E  
                                                    l4146 07A6  
                                                    l4090 263E  
                                                    l4082 25C2  
                                                    l4308 2FDE  
                                                    l4316 3078  
                                                    l4260 33DE  
                                                    l4244 336C  
                                                    l4420 192E  
                                                    l4412 1876  
                                                    l4404 17CC  
                                                    l4500 2B2E  
                                                    l4236 3950  
                                                    l3276 45EC  
                                                    l3292 449E  
                                                    l3284 45D4  
                                                    l3700 3B8C  
                                                    l4340 39C2  
                                                    l4332 3AB8  
                                                    l4324 3A70  
                                                    l5028 2AA0  
                                                    l4068 3FF2  
                                                    l4172 08E4  
                                                    l4164 0880  
                                                    l4156 080C  
                                                    l4092 2648  
                                                    l4084 2602  
                                                    l4076 2564  
                                                    l4318 307C  
                                                    l4262 33F4  
                                                    l4246 336C  
                                                    l4422 195C  
                                                    l4414 18A4  
                                                    l4406 17F0  
                                                    l4270 36AC  
                                                    l3710 417E  
                                                    l4502 2B86  
                                                    l4238 3986  
                                                    l4350 44B0  
                                                    l4430 3826  
                                                    l3294 44A0  
                                                    l3286 4482  
                                                    l3278 45C8  
                                                    l2830 452A  
                                                    l4342 39EA  
                                                    l4334 3994  
                                                    l4326 3A76  
                                                    l4190 0BF0  
                                                    l4182 094C  
                                                    l4174 08FA  
                                                    l4166 089C  
                                                    l4158 0840  
                                                    l4094 2662  
                                                    l4086 260C  
                                                    l4078 2588  
                                                    l4264 3418  
                                                    l4256 338C  
                                                    l4248 3382  
                                                    l4424 1992  
                                                    l4416 18D2  
                                                    l4408 1812  
                                                    l4272 36AC  
                                                    l3712 4184  
                                                    l3704 4168  
                                                    l4504 2BB2  
                                                    l4352 44B0  
                                                    l4432 3826  
                                                    l4512 454C  
                                                    l4520 44DC  
                                                    l4600 0E8A  
                                                    l3296 44A2  
                                                    l3288 4498  
                                                    l3800 4582  
                                                    l4344 39FE  
                                                    l4336 39A8  
                                                    l4328 3A98  
                                                    l4192 0C1A  
                                                    l4184 0974  
                                                    l4176 0904  
                                                    l4168 08AC  
                                                    l4096 2666  
                                                    l4088 263A  
                                                    l3650 3788  
                                                    l4258 33DA  
                                                    l4370 1CAC  
                                                    l4362 1C20  
                                                    l4418 1900  
                                                    l4290 374A  
                                                    l4282 36CC  
                                                    l4274 36C2  
                                                    l3714 4186  
                                                    l3706 4168  
                                                    l4506 2BC2  
                                                    l4354 44B4  
                                                    l4434 3862  
                                                    l4514 454C  
                                                    l4450 2C5A  
                                                    l4442 2C0E  
                                                    l4610 1072  
                                                    l4602 0EC4  
                                                    l3298 44A8  
                                                    l3802 4594  
                                                    l3730 2EC2  
                                                    l3722 2E88  
                                                    l3810 005A  
                                                    l4346 3A0A  
                                                    l4338 39BC  
                                                    l4194 0C50  
                                                    l4186 099A  
                                                    l4178 0936  
                                                    l4098 2692  
                                                    l4700 4422  
                                                    l3660 3810  
                                                    l3652 3798  
                                                    l3644 375C  
                                                    l4380 1D76  
                                                    l4372 1CDE  
                                                    l4364 1C20  
                                                    l2940 1A4C  
                                                    l4284 370C  
                                                    l4276 36C8  
                                                    l4268 3698  
                                                    l4540 4106  
                                                    l3716 41A8  
                                                    l3708 4168  
                                                    l4508 2BDC  
                                                    l4356 44B6  
                                                    l4348 44B0  
                                                    l4436 388A  
                                                    l4532 420C  
                                                    l4524 41CC  
                                                    l4460 2D1E  
                                                    l4452 2C8C  
                                                    l4444 2C0E  
                                                    l4620 1154  
                                                    l4612 107E  
                                                    l4604 0F06  
                                                    l3740 2F8A  
                                                    l3732 2EDA  
                                                    l3724 2EA6  
                                                    l3820 00C0  
                                                    l3812 006C  
                                                    l3804 0008  
                                                    l4196 0C6C  
                                                    l4188 0A70  
                                                    l4702 4436  
                                                    l3654 37B6  
                                                    l3646 3764  
                                                    l4374 1CF8  
                                                    l4366 1C60  
                                                    l2950 1B22  
                                                    l2942 1A70  
                                                    l2934 19C2  
                                                    l4286 3710  
                                                    l4550 4146  
                                                    l4542 4106  
                                                    l3718 41B8  
                                                    l3670 4298  
                                                    l4358 44BE  
                                                    l4438 38AE  
                                                    l4534 4210  
                                                    l4526 41D0  
                                                    l4518 44DC  
                                                    l4470 2420  
                                                    l4454 2CC2  
                                                    l4446 2C0E  
                                                    l4630 11A8  
                                                    l4614 109A  
                                                    l4606 0FA4  
                                                    l4710 35EC  
                                                    l3750 14FC  
                                                    l3734 2F1A  
                                                    l3726 2EA6  
                                                    l3910 073C  
                                                    l3902 070C  
                                                    l3806 0008  
                                                    l4198 0C82  
                                                    l4294 436E  
                                                    l3656 37D4  
                                                    l3648 376A  
                                                    l4376 1D2A  
                                                    l4368 1C92  
                                                    l2952 1B50  
                                                    l2944 1A92  
                                                    l2936 19FE  
                                                    l4288 3726  
                                                    l4544 4106  
                                                    l3672 429E  
                                                    l3664 4282  
                                                    l4560 3F68  
                                                    l4528 41F6  
                                                    l4480 24F6  
                                                    l4472 2430  
                                                    l4464 23E4  
                                                    l4456 2CF8  
                                                    l4448 2C4A  
                                                    l4800 1EC2  
                                                    l4640 1388  
                                                    l4632 11BE  
                                                    l4624 1186  
                                                    l4616 10B6  
                                                    l4608 1054  
                                                    l4720 364E  
                                                    l4712 3600  
                                                    l4704 35CC  
                                                    l3920 3D02  
                                                    l3760 1580  
                                                    l3752 1502  
                                                    l3744 14BA  
                                                    l3680 3AF6  
                                                    l3736 2F38  
                                                    l3728 2EBC  
                                                    l3904 0722  
                                                    l3840 01E6  
                                                    l3832 013E  
                                                    l3824 00C8  
                                                    l3816 0074  
                                                    l3808 002A  
                                                    l4296 4568  
                                                    l4298 2F9E  
                                                    l3658 37F4  
                                                    l4378 1D44  
                                                    l4386 1D90  
                                                    l2954 1B7E  
                                                    l2946 1AC6  
                                                    l2938 1A28  
                                                    l4546 4106  
                                                    l3674 42A4  
                                                    l3666 4282  
                                                    l4490 2ACC  
                                                    l4482 251A  
                                                    l4474 2464  
                                                    l4466 23E4  
                                                    l4458 2D1E  
                                                    l4810 1F30  
                                                    l4802 1EDA  
                                                    l4642 13A6  
                                                    l4650 1462  
                                                    l4634 11F8  
                                                    l4626 1186  
                                                    l4618 112E  
                                                    l4722 3678  
                                                    l4714 360A  
                                                    l4706 35D0  
                                                    l3930 3D5E  
                                                    l3922 3D1C  
                                                    l3914 3CF2  
                                                    l3770 15D4  
                                                    l3762 15A4  
                                                    l3754 151A  
                                                    l3746 14E6  
                                                    l3690 3B40  
                                                    l3682 3AF6  
                                                    l3738 2F66  
                                                    l3906 0734  
                                                    l3850 039A  
                                                    l3842 01FC  
                                                    l3834 0172  
                                                    l3826 0102  
                                                    l3818 00A4  
                                                    l4730 3500  
                                                    l4388 1E3C  
                                                    l4396 1742  
                                                    l2956 1BAC  
                                                    l2948 1AF4  
                                                    l4548 410E  
                                                    l3676 42C6  
                                                    l3668 4282  
                                                    l4564 3F7E  
                                                    l4556 3F3E  
                                                    l4492 2ACC  
                                                    l4484 2534  
                                                    l4476 249E  
                                                    l4468 23E4  
                                                    l4820 1F86  
                                                    l4812 1F36  
                                                    l4804 1EF0  
                                                    l4580 3E66  
                                                    l4652 1488  
                                                    l4644 13B2  
                                                    l4636 123A  
                                                    l4628 1196  
                                                    l4660 3DAE  
                                                    l4708 35E2  
                                                    l3932 3D72  
                                                    l3924 3D44  
                                                    l3916 3CF2  
                                                    l3780 1638  
                                                    l3772 15E0  
                                                    l3764 15B6  
                                                    l3756 1534  
                                                    l3748 14E6  
                                                    l3692 3B4E  
                                                    l3684 3B10  
                                                    l3852 03B8  
                                                    l3860 0448  
                                                    l3844 0236  
                                                    l3836 01A2  
                                                    l3828 0136  
                                                    l4900 3ED6  
                                                    l3940 4300  
                                                    l4740 3586  
                                                    l4732 3508  
                                                    l4398 1742  
                                                    l2958 1BDA  
                                                    l4566 3F8E  
                                                    l4558 3F42  
                                                    l4478 24CE  
                                                    l4830 1FE8  
                                                    l4822 1F9A  
                                                    l4814 1F46  
                                                    l4806 1F00  
                                                    l4574 3E20  
                                                    l4646 13CE  
                                                    l4638 12D8  
                                                    l4662 3DBE  
                                                    l4718 362A  
                                                    l3926 3D56  
                                                    l3918 3CF2  
                                                    l3782 1656  
                                                    l3790 16FE  
                                                    l3758 1552  
                                                    l3694 3B72  
                                                    l3686 3B20  
                                                    l3870 0560  
                                                    l3862 0470  
                                                    l3854 03C4  
                                                    l3846 0278  
                                                    l3838 01C0  
                                                    l4750 29A6  
                                                    l4902 3EF6  
                                                    l4670 40A0  
                                                    l3942 43E4  
                                                    l4734 3520  
                                                    l4910 32F8  
                                                    l4568 3FA6  
                                                    l4496 2AE2  
                                                    l4488 2ACC  
                                                    l4840 203A  
                                                    l4832 1FF8  
                                                    l4824 1FAA  
                                                    l4816 1F56  
                                                    l4808 1F18  
                                                    l4584 3E7C  
                                                    l4576 3E20  
                                                    l4648 13EA  
                                                    l4592 0E3C  
                                                    l4664 3DDC  
                                                    l4656 3D88  
                                                    l3784 1674  
                                                    l3768 15C0  
                                                    l3696 3B84  
                                                    l3688 3B2E  
                                                    l3880 05EC  
                                                    l3872 05AA  
                                                    l3864 04BC  
                                                    l3856 03E0  
                                                    l3848 02EA  
                                                    l4760 2A0C  
                                                    l4752 29C4  
                                                    l4744 297C  
                                                    l3936 42D6  
                                                    l4680 40F4  
                                                    l4672 40BC  
                                                    l3944 4504  
                                                    l3960 3212  
                                                    l4736 3546  
                                                    l4912 330A  
                                                    l4904 3278  
                                                    l4498 2B1E  
                                                    l4842 203E  
                                                    l4834 1FFE  
                                                    l4826 1FBC  
                                                    l4818 1F6E  
                                                    l4586 3E8C  
                                                    l4578 3E3E  
                                                    l4594 0E3C  
                                                    l4666 3DFA  
                                                    l4658 3D9A  
                                                    l4850 403E  
                                                    l4690 43CA  
                                                    l3786 1692  
                                                    l3778 15F8  
                                                    l3890 067C  
                                                    l3882 0604  
                                                    l3874 05AE  
                                                    l3866 050A  
                                                    l3858 03FC  
                                                    l4770 2A64  
                                                    l4754 29CC  
                                                    l4746 2980  
                                                    l3938 42E4  
                                                    l4674 40CC  
                                                    l3962 322C  
                                                    l3954 3196  
                                                    l4738 3564  
                                                    l4914 332A  
                                                    l4906 32B4  
                                                    l4930 3454  
                                                    l4922 3430  
                                                    l4844 2050  
                                                    l4836 201A  
                                                    l4828 1FD8  
                                                    l4596 0E4C  
                                                    l4852 4052  
                                                    l4692 43CC  
                                                    l4684 43AA  
                                                    l4860 45C2  
                                                    l3796 459A  
                                                    l3788 16E0  
                                                    l3892 0680  
                                                    l3884 0634  
                                                    l3876 05E4  
                                                    l3868 0558  
                                                    l4772 2A78  
                                                    l4748 299E  
                                                    l4764 2A14  
                                                    l4676 40EC  
                                                    l3964 3230  
                                                    l3956 31B8  
                                                    l3972 3244  
                                                    l3948 3188  
                                                    l4908 32F2  
                                                    l4940 34CC  
                                                    l4932 3476  
                                                    l4924 3434  
                                                    l4870 447C  
                                                    l4862 4452  
                                                    l4846 2060  
                                                    l4838 2026  
                                                    l4790 1E74  
                                                    l4598 0E74  
                                                    l4854 4082  
                                                    l4694 43CE  
                                                    l4686 43AC  
                                                    l3798 45AC  
                                                    l3990 285C  
                                                    l3982 2836  
                                                    l3886 0646  
                                                    l3894 06A2  
                                                    l3878 05EC  
                                                    l4758 29EE  
                                                    l4766 2A46  
                                                    l3974 3248  
                                                    l3966 323A  
                                                    l3958 3208  
                                                    l4942 34E8  
                                                    l4934 3498  
                                                    l4926 3438  
                                                    l4864 445C  
                                                    l4792 1E7E  
                                                    l4848 4034  
                                                    l4696 43DE  
                                                    l4688 43B4  
                                                    l4856 45B2  
                                                    l3992 286C  
                                                    l3984 283A  
                                                    l3896 06F2  
                                                    l3888 064E  
                                                    l4776 2A8C  
                                                    l4880 2720  
                                                    l4872 26E2  
                                                    l4944 34EC  
                                                    l4936 34C8  
                                                    l4928 3448  
                                                    l4698 441C  
                                                    l4866 4462  
                                                    l4794 1E96  
                                                    l4786 1E6C  
                                                    l4858 45B6  
                                                    l3994 2878  
                                                    l3986 284A  
                                                    l3898 0704  
                                                    l4890 276C  
                                                    l4882 273E  
                                                    l4938 34CA  
                                                    l4868 4478  
                                                    l4796 1EA6  
                                                    l4788 1E70  
                                                    l3996 2892  
                                                    l3988 2856  
                                                    l4892 279A  
                                                    l4884 2764  
                                                    l4798 1EB4  
                                                    l3998 289C  
                                                    l4894 27D0  
                                                    l4878 26EA  
                                                    l4896 27EE  
                                                    l4898 3EB2  
                                     __end_of_XF_popEvent 3690  
                                                    STR_1 FFED  
                                                    u2000 08C4  
                                                    u2001 08C0  
                                                    u2010 08FA  
                                                    u2011 08F6  
                                                    u2100 33D0  
                                                    u2020 0948  
                                                    u2021 0944  
                                                    u2110 33F4  
                                                    u2030 099A  
                                                    u2111 33F0  
                                                    u2031 0996  
                                                    u2200 3A70  
                                                    u2040 0B66  
                                                    u2105 33C6  
                                                    u2201 3A6C  
                                                    u2130 3726  
                                                    u2131 3722  
                                                    u2124 3702  
                                                    u1500 3B84  
                                                    u2220 39BC  
                                                    u2060 0C6C  
                                                    u2125 36FC  
                                                    u1501 3B80  
                                                    u2221 39B8  
                                                    u2061 0C68  
                                                    u2045 0B5C  
                                                    _LATA 0F89  
                                                    u1510 2F66  
                                                    u2070 0D84  
                                                    _LATB 0F8A  
                                                    u1511 2F62  
                                                    u2071 0D80  
                                                    u2055 0BAC  
                                                    _LATC 0F8B  
                                                    u2400 0EFC  
                                                    u1520 1580  
                                                    u1600 0136  
                                                    u2080 0E20  
                                                    _LATD 0F8C  
                                                    u2305 192E  
                                                    u1521 157C  
                                                    u1601 0132  
                                                    u2081 0E1C  
                                                    _LATE 0F8D  
                                                    u2090 38E4  
                                                    u1530 15B6  
                                                    u1610 01E6  
                                                    _LATF 0F8E  
                                                    u2315 195C  
                                                    u2235 17CC  
                                                    u2091 38E0  
                                                    u1531 15B2  
                                                    u1611 01E2  
                                                    _LATG 0F8F  
                                                    u2340 2ADE  
                                                    u1540 1692  
                                                    u1700 05E4  
                                                    u1620 026E  
                                                    _LATH 0F90  
                                                    u2245 17F0  
                                                    u2341 2ADA  
                                                    u2325 38AE  
                                                    u2405 0EF2  
                                                    u1541 168E  
                                                    u1701 05E0  
                                                    u1470 3788  
                                                    u2430 0F92  
                                                    u1550 172C  
                                                    u1710 0604  
                                                    _LATJ 0F91  
                                                    u1471 3784  
                                                    u2255 1812  
                                                    u2335 251A  
                                                    u2415 0F32  
                                                    u1551 1728  
                                                    u1711 0600  
                                                    u1480 380E  
                                                    u2360 4208  
                                                    u2520 12C6  
                                                    u2440 0FD0  
                                                    u1560 45AC  
                                                    u1800 284A  
                                                    u1720 06A2  
                                                    u1640 02DA  
                                                    u1481 380A  
                                                    u2265 1876  
                                                    u2361 4204  
                                                    u2505 1266  
                                                    u2425 0F5C  
                                                    u1561 45A8  
                                                    u1801 2846  
                                                    u1721 069E  
                                                    u1625 0264  
                                                    u2370 3F7A  
                                                    u2530 1304  
                                                    u1570 4594  
                                                    u1810 286C  
                                                    u2610 3600  
                                                    u1490 3B40  
                                                    u1730 0704  
                                                    u1650 0316  
                                                    u2275 18A4  
                                                    u2371 3F76  
                                                    u2355 2B76  
                                                    u2515 1290  
                                                    u2435 0F88  
                                                    u1571 4590  
                                                    u1811 2868  
                                                    u2611 35FC  
                                                    u1491 3B3C  
                                                    u1731 0700  
                                                    u1635 02A4  
                                                    u2700 2050  
                                                    u2380 3E78  
                                                    u1820 2892  
                                                    u1740 0734  
                                                    u1580 006C  
                                                    u1900 25A2  
                                                    u2285 18D2  
                                                    u2701 204C  
                                                    u2381 3E74  
                                                    u2525 12BC  
                                                    u2445 0FC6  
                                                    u1821 288E  
                                                    u1741 0730  
                                                    u1645 02D0  
                                                    u1581 0068  
                                                    u1901 259E  
                                                    u2390 0E74  
                                                    u1830 28CE  
                                                    u1750 3D56  
                                                    u1590 00C0  
                                                    u2295 1900  
                                                    u2535 12FA  
                                                    u2455 1014  
                                                    u2391 0E70  
                                                    u1831 28CA  
                                                    u1751 3D52  
                                                    u1655 030C  
                                                    u1591 00BC  
                                                    u1911 25D6  
                                                    u2480 11A8  
                                                    u1840 28FC  
                                                    u1680 0500  
                                                    u2720 2764  
                                                    u1760 31B8  
                                                    u1920 263A  
                                                    u2545 1348  
                                                    u2481 11A4  
                                                    u2465 10F2  
                                                    u1841 28F8  
                                                    u1665 035A  
                                                    u2721 2760  
                                                    u1761 31B4  
                                                    u1921 2636  
                                                    u2641 35AC  
                                                    u2490 1230  
                                                    u2570 3D9A  
                                                    u1850 2948  
                                                    u1690 054E  
                                                    u2650 299E  
                                                    u2730 2814  
                                                    u1930 2662  
                                                    u2555 1426  
                                                    u2475 111C  
                                                    u2571 3D96  
                                                    u1851 2944  
                                                    u1675 0438  
                                                    u2651 299A  
                                                    u2731 2810  
                                                    u1771 3200  
                                                    u1931 265E  
                                                    u1860 295A  
                                                    u2660 29C4  
                                                    u2580 40CC  
                                                    u1780 322C  
                                                    u2565 1450  
                                                    u1861 2956  
                                                    u1685 04F6  
                                                    u2661 29C0  
                                                    u2581 40C8  
                                                    u1781 3228  
                                                    u1941 26B4  
                                                    u1870 3BF2  
                                                    u2670 29EA  
                                                    u2750 3EF6  
                                                    u1950 3C60  
                                                    u1790 325E  
                                                    u2495 1226  
                                                    u1695 0544  
                                                    u1871 3BEE  
                                                    u2671 29E6  
                                                    u2751 3EF2  
                                                    u1951 3C5C  
                                                    u1791 325A  
                                                    u2680 2A0C  
                                                    u1960 3CC8  
                                                    u1880 2310  
                                                    u2681 2A08  
                                                    u1961 3CC4  
                                                    u1881 230C  
                                                    u2690 2A58  
                                                    u1890 23CC  
                                                    u1970 07B8  
                                                    u2770 32B4  
                                                    u2691 2A54  
                                                    u1891 23C8  
                                                    u1971 07B4  
                                                    u2771 32B0  
                                                    u1980 0808  
                                                    u2780 32F2  
                                                    u1981 0804  
                                                    u2781 32EE  
                                                    u1990 089C  
                                                    u2790 330A  
                                                    u1991 0898  
                                                    u2791 3306  
                                                    u2768 3F1C  
                                                    u2769 3F30  
                       __end_of_DRV_CANFDSPI_TimeStampSet 4504  
                                                    _main 3428  
                                        _XF_scheduleTimer 3186  
                                                    fsr0h 0FEA  
                                                    fsr1h 0FE2  
                                                    indf0 0FEF  
                                                    fsr2h 0FDA  
                                                    fsr0l 0FE9  
                                                    indf1 0FE7  
                                                    indf2 0FDF  
                                                    fsr1l 0FE1  
                                                    fsr2l 0FD9  
                                   _canControlResetValues FF8D  
                                                    btemp 002D  
                                            _CanSetFilter 4034  
                                         __end_of_CanInit 2072  
                                         __end_of_CanSend 3C46  
                                   _lightContol_BackLight 398C  
                                                    prodh 0FF4  
                                                    prodl 0FF3  
                                                    start 00AE  
                                         __end_of_XF_init 2832  
                                         __end_of_XF_post 35C4  
                                            ___param_bank 0000  
             __end_of_DRV_CANFDSPI_TransmitQueueConfigure 2D46  
                     _DRV_CANFDSPI_TransmitQueueConfigure 2C06  
                                 __end_of_TMR0_Initialize 43E4  
                     __end_of_DRV_CANFDSPI_WriteByteArray 2F9A  
                             _DRV_CANFDSPI_WriteByteArray 2E80  
                           __end_of_OSCILLATOR_Initialize 45E0  
                                         __end_of___awmod 297C  
__end_of_DRV_CANFDSPI_TransmitChannelConfigureObjectReset 2E80  
        _DRV_CANFDSPI_TransmitChannelConfigureObjectReset 2D46  
                                                   _T0CON 0FD5  
                                                   _TMR0H 0FD7  
                                                   _TMR0L 0FD6  
                                                   _PORTJ 0F88  
                                                   _TRISA 0F92  
                                                   _TRISB 0F93  
                                                   _TRISC 0F94  
                                                   _TRISD 0F95  
                                                   _TRISE 0F96  
                                                   _TRISF 0F97  
                                                   _TRISG 0F98  
                                                   _TRISH 0F99  
                                                   _TRISJ 0F9A  
                                        __end_of_TMR0_ISR 4482  
                                                   _dummy 0021  
                                                   _theXF 02C8  
                          __end_of_DRV_CANFDSPI_Configure 19BA  
                                    __end_of_XF_pushEvent 26DE  
                                                   pclath 0FFA  
                                                   pclatu 0FFB  
                                                   tablat 0FF5  
                                                   ltemp0 002D  
                                                   ltemp1 0031  
                                                   ltemp2 0035  
                            lightControl_Process@oldState 0029  
                                                   plusw0 0FEB  
                                                   plusw1 0FE3  
                                                   plusw2 0FDB  
                                                   ttemp0 002D  
                                                   ttemp1 0030  
                                                   ttemp2 0033  
                                                   ttemp3 0036  
                                                   ttemp5 002E  
                                                   ttemp6 0031  
                                                   ttemp7 0035  
                                                   status 0FD8  
                                                   wtemp0 002D  
                                                   wtemp1 002F  
                                                   wtemp2 0031  
                                                   wtemp3 0033  
                                                   wtemp4 0035  
                                                   wtemp5 0037  
                                                   wtemp8 002E  
                   __end_of_DRV_CANFDSPI_FilterToFifoLink 3E18  
                           _DRV_CANFDSPI_FilterToFifoLink 3D82  
                               _DRV_CANFDSPI_TefConfigure 381E  
                                         __initialization 4324  
                                              _Event_init 42D6  
                                            __end_of_main 34F8  
                             ?_INTERRUPT_InterruptManager 004D  
                      __end_of_DRV_CANFDSPI_ReadByteArray 23DC  
                              _DRV_CANFDSPI_ReadByteArray 2250  
                                     __end_of_Event_setPE 43AA  
                                     __end_of_Event_setId 4582  
                                           __activetblptr 0003  
                                          _Event_getDelay 4504  
                                             _XF_popEvent 35C4  
                                        _spiReceiveBuffer 0200  
                  __end_of_DRV_CANFDSPI_ReceiveMessageGet 0E34  
                          _DRV_CANFDSPI_ReceiveMessageGet 074C  
                                                  i2l1039 006C  
                                                  u214_40 2FC4  
                                                  u214_41 2FC0  
                                                  u215_40 3002  
                                                  u215_41 2FFE  
                                                  u216_41 302E  
                                                  i2l4920 0068  
                                                  u217_40 304C  
                                                  i2l4916 004C  
                                                  u217_41 3048  
                                                  i2l4918 005A  
                                                  u218_40 3092  
                                                  u218_41 308E  
                                                  u260_48 443C  
                                                  u260_49 4450  
                                                  u271_40 4478  
                                                  u271_41 4474  
                                                  u259_40 4436  
                                                  u259_41 4432  
                                                  _OSCCON 0FD3  
                                          _Event_setDelay 43E4  
                                          _XF_noMoreEvent 45E6  
                                          _XF_noMoreTimer 45E0  
                          __end_of_DRV_CANFDSPI_WriteByte 42D6  
                          __end_of_DRV_CANFDSPI_WriteWord 3428  
                                       __end_of_SPI2_Open 398C  
                                          _XF_executeOnce 3EAA  
                      __end_of_DRV_CANFDSPI_ReadWordArray 173A  
                              _DRV_CANFDSPI_ReadWordArray 14B2  
                                                  clear_0 432C  
                                                  clear_1 433E  
                                                  clear_2 434A  
                                                  clear_3 4356  
                                                  clear_4 4362  
                                                  isa$std 0001  
                                  __end_of_Event_getDelay 452A  
                                                  lltemp0 002D  
                                                  lltemp1 0035  
                                                  lltemp2 003D  
                                                  lltemp3 0045  
                                            __mediumconst FF8C  
                      __end_of_DRV_CANFDSPI_WriteHalfWord 375A  
                              _DRV_CANFDSPI_WriteHalfWord 3690  
                                                  tblptrh 0FF7  
                                                  tblptrl 0FF6  
                                                  tblptru 0FF8  
                                   __end_of_TMR0_CallBack 4452  
                                  __end_of_Event_setDelay 441C  
                                  __end_of_XF_noMoreEvent 45EC  
                                  __end_of_XF_noMoreTimer 45E6  
                                       _SYSTEM_Initialize 45B2  
                         lightContol_FrontLight@lastLight 002C  
                                              __accesstop 0060  
                                 __end_of__initialization 4368  
                                           ___rparam_used 0001  
                                  __end_of_XF_executeOnce 3F3A  
                                  _lightContol_FrontLight 3A40  
                              __end_of_spi2_configuration FFED  
                                          __pcstackCOMRAM 004D  
                                              ___inthi_sp 0931  
                                             _Event_setPE 436E  
                                             _Event_setId 4568  
                                __end_of_XF_scheduleTimer 3270  
                                   TMR0_ISR@CountCallBack 0025  
                                     __end_of_SpiTransfer 381E  
                                   __end_of_LEAVECRITICAL 459A  
                               __end_of_SYSTEM_Initialize 45C8  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pnvCOMRAM 005D  
                        __end_of_TMR0_SetInterruptHandler 454C  
                               _DRV_CANFDSPI_TimeStampSet 44DC  
                                            _XF_pushEvent 255E  
              __end_of_DRV_CANFDSPI_FilterObjectConfigure 117E  
                      _DRV_CANFDSPI_FilterObjectConfigure 0E34  
                                                 _OSCTUNE 0F9B  
                                   __end_of_ENTERCRITICAL 45B2  
                                                 _SSP2ADD 0F65  
                                                 _SSP2BUF 0F66  
                                                 _CanInit 1E64  
                                                 _CanSend 3B9C  
                                                 _XF_init 26DE  
                                                 _XF_post 34F8  
                                                 __Hparam 0000  
                                                 __Lparam 0000  
                     __end_of_DRV_CANFDSPI_DlcToDataBytes 2250  
                             _DRV_CANFDSPI_DlcToDataBytes 2072  
            __end_of_DRV_CANFDSPI_ReceiveChannelConfigure 2C06  
                    _DRV_CANFDSPI_ReceiveChannelConfigure 2AC4  
                                                 ___awmod 2832  
                                                 uf274999 3ECA  
             __end_of_DRV_CANFDSPI_ReceiveChannelEventGet 3CEA  
                     _DRV_CANFDSPI_ReceiveChannelEventGet 3C46  
                                                 __pcinit 4324  
                                                 __ramtop 1000  
                                                 __ptext0 3428  
                                                 __ptext1 3270  
                                                 __ptext2 34F8  
                                                 __ptext3 255E  
                                                 __ptext4 3186  
                                                 __ptext5 45E0  
                                                 __ptext6 45E6  
                                                 __ptext7 43E4  
                                                 __ptext8 4504  
                                                 __ptext9 436E  
                                             _SpiTransfer 375A  
                                               _T0CONbits 0FD5  
                                                 us221999 399E  
                                                 us219999 3A52  
                                                 us262999 361C  
                                                 us263999 3644  
                                   _OSCILLATOR_Initialize 45D8  
                             lightContol_FrontLight@F6636 0011  
                                    end_of_initialization 4368  
                              __end_of_DRV_CANFDSPI_Reset 44DC  
                                      __end_of_CanReceive 4102  
                                                 postdec0 0FED  
                                                 postdec1 0FE5  
                                                 postdec2 0FDD  
                                                 postinc0 0FEE  
                                                 postinc1 0FE6  
                                                 postinc2 0FDE  
  __end_of_DRV_CANFDSPI_TransmitQueueConfigureObjectReset 3186  
          _DRV_CANFDSPI_TransmitQueueConfigureObjectReset 3098  
                                               _SPI2_Open 38D6  
                                _TMR0_SetInterruptHandler 452A  
                                               _TRISDbits 0F95  
                                               _TRISGbits 0F98  
                            __end_of_INTERRUPT_Initialize 45F0  
                            __end_of_lightControl_Process 2AC4  
                                         _SPI2_Initialize 45C8  
                                      _spi2_configuration FFE9  
                                     start_initialization 4324  
                           __end_of_DRV_CANFDSPI_ReadByte 41C8  
                              __end_of_canFifoResetValues FFE9  
                                      __end_of_Event_init 4324  
                          __end_of_lightContol_FrontLight 3AEE  
                              __end_of_XF_unscheduleTimer 4280  
                                             __pbssBIGRAM 02C8  
                                             __pbssCOMRAM 0001  
           __end_of_DRV_CANFDSPI_TransmitChannelConfigure 255E  
                   _DRV_CANFDSPI_TransmitChannelConfigure 23DC  
                                       _spiTransmitBuffer 0100  
                               lightControl_Process@state 002A  
                                   _TMR0_InterruptHandler 005D  
                                  _PIN_MANAGER_Initialize 4482  
                                               __pintcode 0008  
                                           __pmediumconst FF8C  
                                 __end_of_SPI2_Initialize 45D8  
                            ??_INTERRUPT_InterruptManager 004D  
                                           _TMR0_CallBack 441C  
                                    _INTERRUPT_Initialize 45EC  
                           __end_of_canControlResetValues FFDD  
                                    _lightControl_Process 297C  
                           __end_of_lightContol_BackLight 3A40  
                                                _LATDbits 0F8C  
                                                _LATGbits 0F8F  
                __end_of_DRV_CANFDSPI_OperationModeSelect 3FC0  
                        _DRV_CANFDSPI_OperationModeSelect 3F3A  
                                                i2u280_40 005A  
                                                i2u280_41 0056  
                                                i2u281_40 0068  
                                                i2u281_41 0064  
                                                _PIR3bits 0FA4  
                                                _RCONbits 0FD0  
                                      _DRV_CANFDSPI_Reset 44B0  
                                                _SSP2CON1 0F63  
                                                _SSP2CON2 0F62  
                                                _TMR0_ISR 4452  
                                                _SSP2STAT 0F64  
                                              _ADCON1bits 0FC1  
                          lightContol_BackLight@lastLight 002B  
                                           _LEAVECRITICAL 4582  
              __end_of_DRV_CANFDSPI_TimeStampPrescalerSet 4568  
                      _DRV_CANFDSPI_TimeStampPrescalerSet 454C  
                                  _DRV_CANFDSPI_Configure 173A  
                                                __Hrparam 0000  
                                                __Lrparam 0000  
                __end_of_DRV_CANFDSPI_TransmitChannelLoad 074C  
                        _DRV_CANFDSPI_TransmitChannelLoad 0000  
                                    __end_of_CanSetFilter 409E  
              __end_of_DRV_CANFDSPI_TransmitChannelUpdate 3B9C  
                      _DRV_CANFDSPI_TransmitChannelUpdate 3AEE  
                                                _carState 0060  
                       __end_of_DRV_CANFDSPI_TefConfigure 38D6  
                                                __ptext10 4568  
                                                __ptext11 409E  
                                                __ptext20 3A40  
                                                __ptext12 074C  
                                                __ptext21 398C  
                                                __ptext13 3FC0  
                                                __ptext30 2832  
                                                __ptext22 3B9C  
                                                __ptext14 2250  
                                                __ptext31 4582  
                                                __ptext23 0000  
                                                __ptext15 3C46  
                                                __ptext40 4034  
                                                __ptext32 459A  
                                                __ptext24 2E80  
                                                __ptext16 26DE  
                                                __ptext41 3D82  
                                                __ptext33 45B2  
                                                __ptext25 3AEE  
                                                __ptext17 42D6  
                                                __ptext50 44DC  
                                                __ptext42 0E34  
                                                __ptext34 43AA  
                                                __ptext26 14B2  
                                                __ptext18 3EAA  
                                                __ptext51 454C  
                                                __ptext43 117E  
                                                __ptext35 452A  
                                                __ptext27 2072  
                                                __ptext19 297C  
                                                __ptext60 4102  
                                                __ptext52 41C8  
                                                __ptext44 3E18  
                                                __ptext36 45C8  
                                                __ptext28 3CEA  
                                                __ptext61 3690  
                                                __ptext53 381E  
                                                __ptext45 1E64  
                                                __ptext37 4482  
                                                __ptext29 35C4  
                                                __ptext70 45F0  
                                                __ptext62 19BA  
                                                __ptext54 44B0  
                                                __ptext46 3098  
                                                __ptext38 45D8  
                                                __ptext71 2F9A  
                                                __ptext63 173A  
                                                __ptext55 38D6  
                                                __ptext47 2C06  
                                                __ptext39 45EC  
                                                __ptext72 4228  
                                                __ptext64 1C18  
                                                __ptext56 2AC4  
                                                __ptext48 2D46  
                                                __ptext65 3350  
                                                __ptext57 3F3A  
                                                __ptext49 23DC  
                                                __ptext66 375A  
                                                __ptext58 4280  
                                                __ptext59 4166  
                                                __ptext68 4452  
                                                __ptext69 441C  
                                           _ENTERCRITICAL 459A  
                                            _SSP2CON1bits 0F63  
                      __end_of_XF_decrementAndQueueTimers 3098  
                              _XF_decrementAndQueueTimers 2F9A  
                    __end_of_TMR0_DefaultInterruptHandler 45F2  
                            _TMR0_DefaultInterruptHandler 45F0  
                                      _canFifoResetValues FFDD  
                __end_of_DRV_CANFDSPI_FilterMaskConfigure 14B2  
                        _DRV_CANFDSPI_FilterMaskConfigure 117E  
                                                isa$xinst 0000  
                                      _XF_unscheduleTimer 4228  
                      __end_of_INTERRUPT_InterruptManager 00AE  
                              _INTERRUPT_InterruptManager 0008  
                                  _DRV_CANFDSPI_WriteByte 4280  
                                  _DRV_CANFDSPI_WriteWord 3350  
                                            _SSP2STATbits 0F64  
                      __end_of_DRV_CANFDSPI_FilterDisable 3EAA  
                              _DRV_CANFDSPI_FilterDisable 3E18  
                                              _INTCONbits 0FF2  
                                   _DRV_CANFDSPI_ReadByte 4166  
                    __end_of_DRV_CANFDSPI_TimeStampEnable 4228  
                            _DRV_CANFDSPI_TimeStampEnable 41C8  
                                                intlevel2 0000  
               __end_of_DRV_CANFDSPI_ReceiveChannelUpdate 4034  
                       _DRV_CANFDSPI_ReceiveChannelUpdate 3FC0  
               __end_of_DRV_CANFDSPI_ConfigureObjectReset 1C18  
                       _DRV_CANFDSPI_ConfigureObjectReset 19BA  
                                          _updateCarState 3270  
                                         _TMR0_Initialize 43AA  
                              lightContol_BackLight@F6642 0001  
                          __end_of_PIN_MANAGER_Initialize 44B0  
