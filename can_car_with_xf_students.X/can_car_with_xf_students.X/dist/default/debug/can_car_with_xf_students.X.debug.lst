

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Feb 27 13:21:05 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=1
    47                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    93   000000                     
    94                           ; Generated 17/08/2023 GMT
    95                           ; 
    96                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution. Publication is not required when
   110                           ;        this file is used in an embedded application.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F97J60 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128   000FE0                     bsr             equ	4064
   129   000FE9                     fsr0            equ	4073
   130   000FEA                     fsr0h           equ	4074
   131   000FE9                     fsr0l           equ	4073
   132   000FE1                     fsr1            equ	4065
   133   000FE2                     fsr1h           equ	4066
   134   000FE1                     fsr1l           equ	4065
   135   000FD9                     fsr2            equ	4057
   136   000FDA                     fsr2h           equ	4058
   137   000FD9                     fsr2l           equ	4057
   138   000FEF                     indf0           equ	4079
   139   000FE7                     indf1           equ	4071
   140   000FDF                     indf2           equ	4063
   141   000FF2                     intcon          equ	4082
   142   000000                     nvmcon          equ	0
   143   000FF9                     pcl             equ	4089
   144   000FFA                     pclath          equ	4090
   145   000FFB                     pclatu          equ	4091
   146   000FEB                     plusw0          equ	4075
   147   000FE3                     plusw1          equ	4067
   148   000FDB                     plusw2          equ	4059
   149   000FED                     postdec0        equ	4077
   150   000FE5                     postdec1        equ	4069
   151   000FDD                     postdec2        equ	4061
   152   000FEE                     postinc0        equ	4078
   153   000FE6                     postinc1        equ	4070
   154   000FDE                     postinc2        equ	4062
   155   000FEC                     preinc0         equ	4076
   156   000FE4                     preinc1         equ	4068
   157   000FDC                     preinc2         equ	4060
   158   000FF3                     prod            equ	4083
   159   000FF4                     prodh           equ	4084
   160   000FF3                     prodl           equ	4083
   161   000FD8                     status          equ	4056
   162   000FF5                     tablat          equ	4085
   163   000FF6                     tblptr          equ	4086
   164   000FF7                     tblptrh         equ	4087
   165   000FF6                     tblptrl         equ	4086
   166   000FF8                     tblptru         equ	4088
   167   000FFD                     tosl            equ	4093
   168   000FE8                     wreg            equ	4072
   169   000E80                     MAADR5          equ	3712	;# 
   170   000E81                     MAADR6          equ	3713	;# 
   171   000E82                     MAADR3          equ	3714	;# 
   172   000E83                     MAADR4          equ	3715	;# 
   173   000E84                     MAADR1          equ	3716	;# 
   174   000E85                     MAADR2          equ	3717	;# 
   175   000E8A                     MISTAT          equ	3722	;# 
   176   000E97                     EFLOCON         equ	3735	;# 
   177   000E98                     EPAUS           equ	3736	;# 
   178   000E98                     EPAUSL          equ	3736	;# 
   179   000E99                     EPAUSH          equ	3737	;# 
   180   000EA0                     MACON1          equ	3744	;# 
   181   000EA2                     MACON3          equ	3746	;# 
   182   000EA3                     MACON4          equ	3747	;# 
   183   000EA4                     MABBIPG         equ	3748	;# 
   184   000EA6                     MAIPG           equ	3750	;# 
   185   000EA6                     MAIPGL          equ	3750	;# 
   186   000EA7                     MAIPGH          equ	3751	;# 
   187   000EAA                     MAMXFL          equ	3754	;# 
   188   000EAA                     MAMXFLL         equ	3754	;# 
   189   000EAB                     MAMXFLH         equ	3755	;# 
   190   000EB2                     MICMD           equ	3762	;# 
   191   000EB4                     MIREGADR        equ	3764	;# 
   192   000EB6                     MIWR            equ	3766	;# 
   193   000EB6                     MIWRL           equ	3766	;# 
   194   000EB7                     MIWRH           equ	3767	;# 
   195   000EB8                     MIRD            equ	3768	;# 
   196   000EB8                     MIRDL           equ	3768	;# 
   197   000EB9                     MIRDH           equ	3769	;# 
   198   000EC0                     EHT0            equ	3776	;# 
   199   000EC1                     EHT1            equ	3777	;# 
   200   000EC2                     EHT2            equ	3778	;# 
   201   000EC3                     EHT3            equ	3779	;# 
   202   000EC4                     EHT4            equ	3780	;# 
   203   000EC5                     EHT5            equ	3781	;# 
   204   000EC6                     EHT6            equ	3782	;# 
   205   000EC7                     EHT7            equ	3783	;# 
   206   000EC8                     EPMM0           equ	3784	;# 
   207   000EC9                     EPMM1           equ	3785	;# 
   208   000ECA                     EPMM2           equ	3786	;# 
   209   000ECB                     EPMM3           equ	3787	;# 
   210   000ECC                     EPMM4           equ	3788	;# 
   211   000ECD                     EPMM5           equ	3789	;# 
   212   000ECE                     EPMM6           equ	3790	;# 
   213   000ECF                     EPMM7           equ	3791	;# 
   214   000ED0                     EPMCS           equ	3792	;# 
   215   000ED0                     EPMCSL          equ	3792	;# 
   216   000ED1                     EPMCSH          equ	3793	;# 
   217   000ED4                     EPMO            equ	3796	;# 
   218   000ED4                     EPMOL           equ	3796	;# 
   219   000ED5                     EPMOH           equ	3797	;# 
   220   000ED8                     ERXFCON         equ	3800	;# 
   221   000ED9                     EPKTCNT         equ	3801	;# 
   222   000EE2                     EWRPT           equ	3810	;# 
   223   000EE2                     EWRPTL          equ	3810	;# 
   224   000EE3                     EWRPTH          equ	3811	;# 
   225   000EE4                     ETXST           equ	3812	;# 
   226   000EE4                     ETXSTL          equ	3812	;# 
   227   000EE5                     ETXSTH          equ	3813	;# 
   228   000EE6                     ETXND           equ	3814	;# 
   229   000EE6                     ETXNDL          equ	3814	;# 
   230   000EE7                     ETXNDH          equ	3815	;# 
   231   000EE8                     ERXST           equ	3816	;# 
   232   000EE8                     ERXSTL          equ	3816	;# 
   233   000EE9                     ERXSTH          equ	3817	;# 
   234   000EEA                     ERXND           equ	3818	;# 
   235   000EEA                     ERXNDL          equ	3818	;# 
   236   000EEB                     ERXNDH          equ	3819	;# 
   237   000EEC                     ERXRDPT         equ	3820	;# 
   238   000EEC                     ERXRDPTL        equ	3820	;# 
   239   000EED                     ERXRDPTH        equ	3821	;# 
   240   000EEE                     ERXWRPT         equ	3822	;# 
   241   000EEE                     ERXWRPTL        equ	3822	;# 
   242   000EEF                     ERXWRPTH        equ	3823	;# 
   243   000EF0                     EDMAST          equ	3824	;# 
   244   000EF0                     EDMASTL         equ	3824	;# 
   245   000EF1                     EDMASTH         equ	3825	;# 
   246   000EF2                     EDMAND          equ	3826	;# 
   247   000EF2                     EDMANDL         equ	3826	;# 
   248   000EF3                     EDMANDH         equ	3827	;# 
   249   000EF4                     EDMADST         equ	3828	;# 
   250   000EF4                     EDMADSTL        equ	3828	;# 
   251   000EF5                     EDMADSTH        equ	3829	;# 
   252   000EF6                     EDMACS          equ	3830	;# 
   253   000EF6                     EDMACSL         equ	3830	;# 
   254   000EF7                     EDMACSH         equ	3831	;# 
   255   000EFB                     EIE             equ	3835	;# 
   256   000EFD                     ESTAT           equ	3837	;# 
   257   000EFE                     ECON2           equ	3838	;# 
   258   000F60                     EIR             equ	3936	;# 
   259   000F61                     EDATA           equ	3937	;# 
   260   000F62                     SSP2CON2        equ	3938	;# 
   261   000F63                     SSP2CON1        equ	3939	;# 
   262   000F64                     SSP2STAT        equ	3940	;# 
   263   000F65                     SSP2ADD         equ	3941	;# 
   264   000F66                     SSP2BUF         equ	3942	;# 
   265   000F67                     ECCP2DEL        equ	3943	;# 
   266   000F68                     ECCP2AS         equ	3944	;# 
   267   000F69                     ECCP3DEL        equ	3945	;# 
   268   000F6A                     ECCP3AS         equ	3946	;# 
   269   000F6B                     RCSTA2          equ	3947	;# 
   270   000F6C                     TXSTA2          equ	3948	;# 
   271   000F6D                     TXREG2          equ	3949	;# 
   272   000F6E                     RCREG2          equ	3950	;# 
   273   000F6F                     SPBRG2          equ	3951	;# 
   274   000F70                     CCP5CON         equ	3952	;# 
   275   000F71                     CCPR5           equ	3953	;# 
   276   000F71                     CCPR5L          equ	3953	;# 
   277   000F72                     CCPR5H          equ	3954	;# 
   278   000F73                     CCP4CON         equ	3955	;# 
   279   000F74                     CCPR4           equ	3956	;# 
   280   000F74                     CCPR4L          equ	3956	;# 
   281   000F75                     CCPR4H          equ	3957	;# 
   282   000F76                     T4CON           equ	3958	;# 
   283   000F77                     PR4             equ	3959	;# 
   284   000F78                     TMR4            equ	3960	;# 
   285   000F79                     ECCP1DEL        equ	3961	;# 
   286   000F7A                     ERDPT           equ	3962	;# 
   287   000F7A                     ERDPTL          equ	3962	;# 
   288   000F7B                     ERDPTH          equ	3963	;# 
   289   000F7C                     BAUDCON2        equ	3964	;# 
   290   000F7C                     BAUDCTL2        equ	3964	;# 
   291   000F7D                     SPBRGH2         equ	3965	;# 
   292   000F7E                     BAUDCON1        equ	3966	;# 
   293   000F7E                     BAUDCON         equ	3966	;# 
   294   000F7E                     BAUDCTL         equ	3966	;# 
   295   000F7E                     BAUDCTL1        equ	3966	;# 
   296   000F7F                     SPBRGH1         equ	3967	;# 
   297   000F7F                     SPBRGH          equ	3967	;# 
   298   000F80                     PORTA           equ	3968	;# 
   299   000F81                     PORTB           equ	3969	;# 
   300   000F82                     PORTC           equ	3970	;# 
   301   000F83                     PORTD           equ	3971	;# 
   302   000F84                     PORTE           equ	3972	;# 
   303   000F85                     PORTF           equ	3973	;# 
   304   000F86                     PORTG           equ	3974	;# 
   305   000F87                     PORTH           equ	3975	;# 
   306   000F88                     PORTJ           equ	3976	;# 
   307   000F89                     LATA            equ	3977	;# 
   308   000F8A                     LATB            equ	3978	;# 
   309   000F8B                     LATC            equ	3979	;# 
   310   000F8C                     LATD            equ	3980	;# 
   311   000F8D                     LATE            equ	3981	;# 
   312   000F8E                     LATF            equ	3982	;# 
   313   000F8F                     LATG            equ	3983	;# 
   314   000F90                     LATH            equ	3984	;# 
   315   000F91                     LATJ            equ	3985	;# 
   316   000F92                     TRISA           equ	3986	;# 
   317   000F92                     DDRA            equ	3986	;# 
   318   000F93                     TRISB           equ	3987	;# 
   319   000F93                     DDRB            equ	3987	;# 
   320   000F94                     TRISC           equ	3988	;# 
   321   000F94                     DDRC            equ	3988	;# 
   322   000F95                     TRISD           equ	3989	;# 
   323   000F95                     DDRD            equ	3989	;# 
   324   000F96                     TRISE           equ	3990	;# 
   325   000F96                     DDRE            equ	3990	;# 
   326   000F97                     TRISF           equ	3991	;# 
   327   000F97                     DDRF            equ	3991	;# 
   328   000F98                     TRISG           equ	3992	;# 
   329   000F98                     DDRG            equ	3992	;# 
   330   000F99                     TRISH           equ	3993	;# 
   331   000F99                     DDRH            equ	3993	;# 
   332   000F9A                     TRISJ           equ	3994	;# 
   333   000F9A                     DDRJ            equ	3994	;# 
   334   000F9B                     OSCTUNE         equ	3995	;# 
   335   000F9C                     MEMCON          equ	3996	;# 
   336   000F9D                     PIE1            equ	3997	;# 
   337   000F9E                     PIR1            equ	3998	;# 
   338   000F9F                     IPR1            equ	3999	;# 
   339   000FA0                     PIE2            equ	4000	;# 
   340   000FA1                     PIR2            equ	4001	;# 
   341   000FA2                     IPR2            equ	4002	;# 
   342   000FA3                     PIE3            equ	4003	;# 
   343   000FA4                     PIR3            equ	4004	;# 
   344   000FA5                     IPR3            equ	4005	;# 
   345   000FA6                     EECON1          equ	4006	;# 
   346   000FA7                     EECON2          equ	4007	;# 
   347   000FAB                     RCSTA1          equ	4011	;# 
   348   000FAB                     RCSTA           equ	4011	;# 
   349   000FAC                     TXSTA1          equ	4012	;# 
   350   000FAC                     TXSTA           equ	4012	;# 
   351   000FAD                     TXREG1          equ	4013	;# 
   352   000FAD                     TXREG           equ	4013	;# 
   353   000FAE                     RCREG1          equ	4014	;# 
   354   000FAE                     RCREG           equ	4014	;# 
   355   000FAF                     SPBRG1          equ	4015	;# 
   356   000FAF                     SPBRG           equ	4015	;# 
   357   000FB0                     PSPCON          equ	4016	;# 
   358   000FB1                     T3CON           equ	4017	;# 
   359   000FB2                     TMR3            equ	4018	;# 
   360   000FB2                     TMR3L           equ	4018	;# 
   361   000FB3                     TMR3H           equ	4019	;# 
   362   000FB4                     CMCON           equ	4020	;# 
   363   000FB5                     CVRCON          equ	4021	;# 
   364   000FB6                     ECCP1AS         equ	4022	;# 
   365   000FB7                     CCP3CON         equ	4023	;# 
   366   000FB7                     ECCP3CON        equ	4023	;# 
   367   000FB8                     CCPR3           equ	4024	;# 
   368   000FB8                     CCPR3L          equ	4024	;# 
   369   000FB9                     CCPR3H          equ	4025	;# 
   370   000FBA                     CCP2CON         equ	4026	;# 
   371   000FBA                     ECCP2CON        equ	4026	;# 
   372   000FBB                     CCPR2           equ	4027	;# 
   373   000FBB                     CCPR2L          equ	4027	;# 
   374   000FBC                     CCPR2H          equ	4028	;# 
   375   000FBD                     CCP1CON         equ	4029	;# 
   376   000FBD                     ECCP1CON        equ	4029	;# 
   377   000FBE                     CCPR1           equ	4030	;# 
   378   000FBE                     CCPR1L          equ	4030	;# 
   379   000FBF                     CCPR1H          equ	4031	;# 
   380   000FC0                     ADCON2          equ	4032	;# 
   381   000FC1                     ADCON1          equ	4033	;# 
   382   000FC2                     ADCON0          equ	4034	;# 
   383   000FC3                     ADRES           equ	4035	;# 
   384   000FC3                     ADRESL          equ	4035	;# 
   385   000FC4                     ADRESH          equ	4036	;# 
   386   000FC5                     SSP1CON2        equ	4037	;# 
   387   000FC5                     SSPCON2         equ	4037	;# 
   388   000FC6                     SSP1CON1        equ	4038	;# 
   389   000FC6                     SSPCON1         equ	4038	;# 
   390   000FC7                     SSP1STAT        equ	4039	;# 
   391   000FC7                     SSPSTAT         equ	4039	;# 
   392   000FC8                     SSP1ADD         equ	4040	;# 
   393   000FC8                     SSPADD          equ	4040	;# 
   394   000FC9                     SSP1BUF         equ	4041	;# 
   395   000FC9                     SSPBUF          equ	4041	;# 
   396   000FCA                     T2CON           equ	4042	;# 
   397   000FCB                     PR2             equ	4043	;# 
   398   000FCC                     TMR2            equ	4044	;# 
   399   000FCD                     T1CON           equ	4045	;# 
   400   000FCE                     TMR1            equ	4046	;# 
   401   000FCE                     TMR1L           equ	4046	;# 
   402   000FCF                     TMR1H           equ	4047	;# 
   403   000FD0                     RCON            equ	4048	;# 
   404   000FD1                     WDTCON          equ	4049	;# 
   405   000FD2                     ECON1           equ	4050	;# 
   406   000FD3                     OSCCON          equ	4051	;# 
   407   000FD5                     T0CON           equ	4053	;# 
   408   000FD6                     TMR0            equ	4054	;# 
   409   000FD6                     TMR0L           equ	4054	;# 
   410   000FD7                     TMR0H           equ	4055	;# 
   411   000FD8                     STATUS          equ	4056	;# 
   412   000FD9                     FSR2            equ	4057	;# 
   413   000FD9                     FSR2L           equ	4057	;# 
   414   000FDA                     FSR2H           equ	4058	;# 
   415   000FDB                     PLUSW2          equ	4059	;# 
   416   000FDC                     PREINC2         equ	4060	;# 
   417   000FDD                     POSTDEC2        equ	4061	;# 
   418   000FDE                     POSTINC2        equ	4062	;# 
   419   000FDF                     INDF2           equ	4063	;# 
   420   000FE0                     BSR             equ	4064	;# 
   421   000FE1                     FSR1            equ	4065	;# 
   422   000FE1                     FSR1L           equ	4065	;# 
   423   000FE2                     FSR1H           equ	4066	;# 
   424   000FE3                     PLUSW1          equ	4067	;# 
   425   000FE4                     PREINC1         equ	4068	;# 
   426   000FE5                     POSTDEC1        equ	4069	;# 
   427   000FE6                     POSTINC1        equ	4070	;# 
   428   000FE7                     INDF1           equ	4071	;# 
   429   000FE8                     WREG            equ	4072	;# 
   430   000FE9                     FSR0            equ	4073	;# 
   431   000FE9                     FSR0L           equ	4073	;# 
   432   000FEA                     FSR0H           equ	4074	;# 
   433   000FEB                     PLUSW0          equ	4075	;# 
   434   000FEC                     PREINC0         equ	4076	;# 
   435   000FED                     POSTDEC0        equ	4077	;# 
   436   000FEE                     POSTINC0        equ	4078	;# 
   437   000FEF                     INDF0           equ	4079	;# 
   438   000FF0                     INTCON3         equ	4080	;# 
   439   000FF1                     INTCON2         equ	4081	;# 
   440   000FF2                     INTCON          equ	4082	;# 
   441   000FF3                     PROD            equ	4083	;# 
   442   000FF3                     PRODL           equ	4083	;# 
   443   000FF4                     PRODH           equ	4084	;# 
   444   000FF5                     TABLAT          equ	4085	;# 
   445   000FF6                     TBLPTR          equ	4086	;# 
   446   000FF6                     TBLPTRL         equ	4086	;# 
   447   000FF7                     TBLPTRH         equ	4087	;# 
   448   000FF8                     TBLPTRU         equ	4088	;# 
   449   000FF9                     PCLAT           equ	4089	;# 
   450   000FF9                     PC              equ	4089	;# 
   451   000FF9                     PCL             equ	4089	;# 
   452   000FFA                     PCLATH          equ	4090	;# 
   453   000FFB                     PCLATU          equ	4091	;# 
   454   000FFC                     STKPTR          equ	4092	;# 
   455   000FFD                     TOS             equ	4093	;# 
   456   000FFD                     TOSL            equ	4093	;# 
   457   000FFE                     TOSH            equ	4094	;# 
   458   000FFF                     TOSU            equ	4095	;# 
   459   000E80                     MAADR5          equ	3712	;# 
   460   000E81                     MAADR6          equ	3713	;# 
   461   000E82                     MAADR3          equ	3714	;# 
   462   000E83                     MAADR4          equ	3715	;# 
   463   000E84                     MAADR1          equ	3716	;# 
   464   000E85                     MAADR2          equ	3717	;# 
   465   000E8A                     MISTAT          equ	3722	;# 
   466   000E97                     EFLOCON         equ	3735	;# 
   467   000E98                     EPAUS           equ	3736	;# 
   468   000E98                     EPAUSL          equ	3736	;# 
   469   000E99                     EPAUSH          equ	3737	;# 
   470   000EA0                     MACON1          equ	3744	;# 
   471   000EA2                     MACON3          equ	3746	;# 
   472   000EA3                     MACON4          equ	3747	;# 
   473   000EA4                     MABBIPG         equ	3748	;# 
   474   000EA6                     MAIPG           equ	3750	;# 
   475   000EA6                     MAIPGL          equ	3750	;# 
   476   000EA7                     MAIPGH          equ	3751	;# 
   477   000EAA                     MAMXFL          equ	3754	;# 
   478   000EAA                     MAMXFLL         equ	3754	;# 
   479   000EAB                     MAMXFLH         equ	3755	;# 
   480   000EB2                     MICMD           equ	3762	;# 
   481   000EB4                     MIREGADR        equ	3764	;# 
   482   000EB6                     MIWR            equ	3766	;# 
   483   000EB6                     MIWRL           equ	3766	;# 
   484   000EB7                     MIWRH           equ	3767	;# 
   485   000EB8                     MIRD            equ	3768	;# 
   486   000EB8                     MIRDL           equ	3768	;# 
   487   000EB9                     MIRDH           equ	3769	;# 
   488   000EC0                     EHT0            equ	3776	;# 
   489   000EC1                     EHT1            equ	3777	;# 
   490   000EC2                     EHT2            equ	3778	;# 
   491   000EC3                     EHT3            equ	3779	;# 
   492   000EC4                     EHT4            equ	3780	;# 
   493   000EC5                     EHT5            equ	3781	;# 
   494   000EC6                     EHT6            equ	3782	;# 
   495   000EC7                     EHT7            equ	3783	;# 
   496   000EC8                     EPMM0           equ	3784	;# 
   497   000EC9                     EPMM1           equ	3785	;# 
   498   000ECA                     EPMM2           equ	3786	;# 
   499   000ECB                     EPMM3           equ	3787	;# 
   500   000ECC                     EPMM4           equ	3788	;# 
   501   000ECD                     EPMM5           equ	3789	;# 
   502   000ECE                     EPMM6           equ	3790	;# 
   503   000ECF                     EPMM7           equ	3791	;# 
   504   000ED0                     EPMCS           equ	3792	;# 
   505   000ED0                     EPMCSL          equ	3792	;# 
   506   000ED1                     EPMCSH          equ	3793	;# 
   507   000ED4                     EPMO            equ	3796	;# 
   508   000ED4                     EPMOL           equ	3796	;# 
   509   000ED5                     EPMOH           equ	3797	;# 
   510   000ED8                     ERXFCON         equ	3800	;# 
   511   000ED9                     EPKTCNT         equ	3801	;# 
   512   000EE2                     EWRPT           equ	3810	;# 
   513   000EE2                     EWRPTL          equ	3810	;# 
   514   000EE3                     EWRPTH          equ	3811	;# 
   515   000EE4                     ETXST           equ	3812	;# 
   516   000EE4                     ETXSTL          equ	3812	;# 
   517   000EE5                     ETXSTH          equ	3813	;# 
   518   000EE6                     ETXND           equ	3814	;# 
   519   000EE6                     ETXNDL          equ	3814	;# 
   520   000EE7                     ETXNDH          equ	3815	;# 
   521   000EE8                     ERXST           equ	3816	;# 
   522   000EE8                     ERXSTL          equ	3816	;# 
   523   000EE9                     ERXSTH          equ	3817	;# 
   524   000EEA                     ERXND           equ	3818	;# 
   525   000EEA                     ERXNDL          equ	3818	;# 
   526   000EEB                     ERXNDH          equ	3819	;# 
   527   000EEC                     ERXRDPT         equ	3820	;# 
   528   000EEC                     ERXRDPTL        equ	3820	;# 
   529   000EED                     ERXRDPTH        equ	3821	;# 
   530   000EEE                     ERXWRPT         equ	3822	;# 
   531   000EEE                     ERXWRPTL        equ	3822	;# 
   532   000EEF                     ERXWRPTH        equ	3823	;# 
   533   000EF0                     EDMAST          equ	3824	;# 
   534   000EF0                     EDMASTL         equ	3824	;# 
   535   000EF1                     EDMASTH         equ	3825	;# 
   536   000EF2                     EDMAND          equ	3826	;# 
   537   000EF2                     EDMANDL         equ	3826	;# 
   538   000EF3                     EDMANDH         equ	3827	;# 
   539   000EF4                     EDMADST         equ	3828	;# 
   540   000EF4                     EDMADSTL        equ	3828	;# 
   541   000EF5                     EDMADSTH        equ	3829	;# 
   542   000EF6                     EDMACS          equ	3830	;# 
   543   000EF6                     EDMACSL         equ	3830	;# 
   544   000EF7                     EDMACSH         equ	3831	;# 
   545   000EFB                     EIE             equ	3835	;# 
   546   000EFD                     ESTAT           equ	3837	;# 
   547   000EFE                     ECON2           equ	3838	;# 
   548   000F60                     EIR             equ	3936	;# 
   549   000F61                     EDATA           equ	3937	;# 
   550   000F62                     SSP2CON2        equ	3938	;# 
   551   000F63                     SSP2CON1        equ	3939	;# 
   552   000F64                     SSP2STAT        equ	3940	;# 
   553   000F65                     SSP2ADD         equ	3941	;# 
   554   000F66                     SSP2BUF         equ	3942	;# 
   555   000F67                     ECCP2DEL        equ	3943	;# 
   556   000F68                     ECCP2AS         equ	3944	;# 
   557   000F69                     ECCP3DEL        equ	3945	;# 
   558   000F6A                     ECCP3AS         equ	3946	;# 
   559   000F6B                     RCSTA2          equ	3947	;# 
   560   000F6C                     TXSTA2          equ	3948	;# 
   561   000F6D                     TXREG2          equ	3949	;# 
   562   000F6E                     RCREG2          equ	3950	;# 
   563   000F6F                     SPBRG2          equ	3951	;# 
   564   000F70                     CCP5CON         equ	3952	;# 
   565   000F71                     CCPR5           equ	3953	;# 
   566   000F71                     CCPR5L          equ	3953	;# 
   567   000F72                     CCPR5H          equ	3954	;# 
   568   000F73                     CCP4CON         equ	3955	;# 
   569   000F74                     CCPR4           equ	3956	;# 
   570   000F74                     CCPR4L          equ	3956	;# 
   571   000F75                     CCPR4H          equ	3957	;# 
   572   000F76                     T4CON           equ	3958	;# 
   573   000F77                     PR4             equ	3959	;# 
   574   000F78                     TMR4            equ	3960	;# 
   575   000F79                     ECCP1DEL        equ	3961	;# 
   576   000F7A                     ERDPT           equ	3962	;# 
   577   000F7A                     ERDPTL          equ	3962	;# 
   578   000F7B                     ERDPTH          equ	3963	;# 
   579   000F7C                     BAUDCON2        equ	3964	;# 
   580   000F7C                     BAUDCTL2        equ	3964	;# 
   581   000F7D                     SPBRGH2         equ	3965	;# 
   582   000F7E                     BAUDCON1        equ	3966	;# 
   583   000F7E                     BAUDCON         equ	3966	;# 
   584   000F7E                     BAUDCTL         equ	3966	;# 
   585   000F7E                     BAUDCTL1        equ	3966	;# 
   586   000F7F                     SPBRGH1         equ	3967	;# 
   587   000F7F                     SPBRGH          equ	3967	;# 
   588   000F80                     PORTA           equ	3968	;# 
   589   000F81                     PORTB           equ	3969	;# 
   590   000F82                     PORTC           equ	3970	;# 
   591   000F83                     PORTD           equ	3971	;# 
   592   000F84                     PORTE           equ	3972	;# 
   593   000F85                     PORTF           equ	3973	;# 
   594   000F86                     PORTG           equ	3974	;# 
   595   000F87                     PORTH           equ	3975	;# 
   596   000F88                     PORTJ           equ	3976	;# 
   597   000F89                     LATA            equ	3977	;# 
   598   000F8A                     LATB            equ	3978	;# 
   599   000F8B                     LATC            equ	3979	;# 
   600   000F8C                     LATD            equ	3980	;# 
   601   000F8D                     LATE            equ	3981	;# 
   602   000F8E                     LATF            equ	3982	;# 
   603   000F8F                     LATG            equ	3983	;# 
   604   000F90                     LATH            equ	3984	;# 
   605   000F91                     LATJ            equ	3985	;# 
   606   000F92                     TRISA           equ	3986	;# 
   607   000F92                     DDRA            equ	3986	;# 
   608   000F93                     TRISB           equ	3987	;# 
   609   000F93                     DDRB            equ	3987	;# 
   610   000F94                     TRISC           equ	3988	;# 
   611   000F94                     DDRC            equ	3988	;# 
   612   000F95                     TRISD           equ	3989	;# 
   613   000F95                     DDRD            equ	3989	;# 
   614   000F96                     TRISE           equ	3990	;# 
   615   000F96                     DDRE            equ	3990	;# 
   616   000F97                     TRISF           equ	3991	;# 
   617   000F97                     DDRF            equ	3991	;# 
   618   000F98                     TRISG           equ	3992	;# 
   619   000F98                     DDRG            equ	3992	;# 
   620   000F99                     TRISH           equ	3993	;# 
   621   000F99                     DDRH            equ	3993	;# 
   622   000F9A                     TRISJ           equ	3994	;# 
   623   000F9A                     DDRJ            equ	3994	;# 
   624   000F9B                     OSCTUNE         equ	3995	;# 
   625   000F9C                     MEMCON          equ	3996	;# 
   626   000F9D                     PIE1            equ	3997	;# 
   627   000F9E                     PIR1            equ	3998	;# 
   628   000F9F                     IPR1            equ	3999	;# 
   629   000FA0                     PIE2            equ	4000	;# 
   630   000FA1                     PIR2            equ	4001	;# 
   631   000FA2                     IPR2            equ	4002	;# 
   632   000FA3                     PIE3            equ	4003	;# 
   633   000FA4                     PIR3            equ	4004	;# 
   634   000FA5                     IPR3            equ	4005	;# 
   635   000FA6                     EECON1          equ	4006	;# 
   636   000FA7                     EECON2          equ	4007	;# 
   637   000FAB                     RCSTA1          equ	4011	;# 
   638   000FAB                     RCSTA           equ	4011	;# 
   639   000FAC                     TXSTA1          equ	4012	;# 
   640   000FAC                     TXSTA           equ	4012	;# 
   641   000FAD                     TXREG1          equ	4013	;# 
   642   000FAD                     TXREG           equ	4013	;# 
   643   000FAE                     RCREG1          equ	4014	;# 
   644   000FAE                     RCREG           equ	4014	;# 
   645   000FAF                     SPBRG1          equ	4015	;# 
   646   000FAF                     SPBRG           equ	4015	;# 
   647   000FB0                     PSPCON          equ	4016	;# 
   648   000FB1                     T3CON           equ	4017	;# 
   649   000FB2                     TMR3            equ	4018	;# 
   650   000FB2                     TMR3L           equ	4018	;# 
   651   000FB3                     TMR3H           equ	4019	;# 
   652   000FB4                     CMCON           equ	4020	;# 
   653   000FB5                     CVRCON          equ	4021	;# 
   654   000FB6                     ECCP1AS         equ	4022	;# 
   655   000FB7                     CCP3CON         equ	4023	;# 
   656   000FB7                     ECCP3CON        equ	4023	;# 
   657   000FB8                     CCPR3           equ	4024	;# 
   658   000FB8                     CCPR3L          equ	4024	;# 
   659   000FB9                     CCPR3H          equ	4025	;# 
   660   000FBA                     CCP2CON         equ	4026	;# 
   661   000FBA                     ECCP2CON        equ	4026	;# 
   662   000FBB                     CCPR2           equ	4027	;# 
   663   000FBB                     CCPR2L          equ	4027	;# 
   664   000FBC                     CCPR2H          equ	4028	;# 
   665   000FBD                     CCP1CON         equ	4029	;# 
   666   000FBD                     ECCP1CON        equ	4029	;# 
   667   000FBE                     CCPR1           equ	4030	;# 
   668   000FBE                     CCPR1L          equ	4030	;# 
   669   000FBF                     CCPR1H          equ	4031	;# 
   670   000FC0                     ADCON2          equ	4032	;# 
   671   000FC1                     ADCON1          equ	4033	;# 
   672   000FC2                     ADCON0          equ	4034	;# 
   673   000FC3                     ADRES           equ	4035	;# 
   674   000FC3                     ADRESL          equ	4035	;# 
   675   000FC4                     ADRESH          equ	4036	;# 
   676   000FC5                     SSP1CON2        equ	4037	;# 
   677   000FC5                     SSPCON2         equ	4037	;# 
   678   000FC6                     SSP1CON1        equ	4038	;# 
   679   000FC6                     SSPCON1         equ	4038	;# 
   680   000FC7                     SSP1STAT        equ	4039	;# 
   681   000FC7                     SSPSTAT         equ	4039	;# 
   682   000FC8                     SSP1ADD         equ	4040	;# 
   683   000FC8                     SSPADD          equ	4040	;# 
   684   000FC9                     SSP1BUF         equ	4041	;# 
   685   000FC9                     SSPBUF          equ	4041	;# 
   686   000FCA                     T2CON           equ	4042	;# 
   687   000FCB                     PR2             equ	4043	;# 
   688   000FCC                     TMR2            equ	4044	;# 
   689   000FCD                     T1CON           equ	4045	;# 
   690   000FCE                     TMR1            equ	4046	;# 
   691   000FCE                     TMR1L           equ	4046	;# 
   692   000FCF                     TMR1H           equ	4047	;# 
   693   000FD0                     RCON            equ	4048	;# 
   694   000FD1                     WDTCON          equ	4049	;# 
   695   000FD2                     ECON1           equ	4050	;# 
   696   000FD3                     OSCCON          equ	4051	;# 
   697   000FD5                     T0CON           equ	4053	;# 
   698   000FD6                     TMR0            equ	4054	;# 
   699   000FD6                     TMR0L           equ	4054	;# 
   700   000FD7                     TMR0H           equ	4055	;# 
   701   000FD8                     STATUS          equ	4056	;# 
   702   000FD9                     FSR2            equ	4057	;# 
   703   000FD9                     FSR2L           equ	4057	;# 
   704   000FDA                     FSR2H           equ	4058	;# 
   705   000FDB                     PLUSW2          equ	4059	;# 
   706   000FDC                     PREINC2         equ	4060	;# 
   707   000FDD                     POSTDEC2        equ	4061	;# 
   708   000FDE                     POSTINC2        equ	4062	;# 
   709   000FDF                     INDF2           equ	4063	;# 
   710   000FE0                     BSR             equ	4064	;# 
   711   000FE1                     FSR1            equ	4065	;# 
   712   000FE1                     FSR1L           equ	4065	;# 
   713   000FE2                     FSR1H           equ	4066	;# 
   714   000FE3                     PLUSW1          equ	4067	;# 
   715   000FE4                     PREINC1         equ	4068	;# 
   716   000FE5                     POSTDEC1        equ	4069	;# 
   717   000FE6                     POSTINC1        equ	4070	;# 
   718   000FE7                     INDF1           equ	4071	;# 
   719   000FE8                     WREG            equ	4072	;# 
   720   000FE9                     FSR0            equ	4073	;# 
   721   000FE9                     FSR0L           equ	4073	;# 
   722   000FEA                     FSR0H           equ	4074	;# 
   723   000FEB                     PLUSW0          equ	4075	;# 
   724   000FEC                     PREINC0         equ	4076	;# 
   725   000FED                     POSTDEC0        equ	4077	;# 
   726   000FEE                     POSTINC0        equ	4078	;# 
   727   000FEF                     INDF0           equ	4079	;# 
   728   000FF0                     INTCON3         equ	4080	;# 
   729   000FF1                     INTCON2         equ	4081	;# 
   730   000FF2                     INTCON          equ	4082	;# 
   731   000FF3                     PROD            equ	4083	;# 
   732   000FF3                     PRODL           equ	4083	;# 
   733   000FF4                     PRODH           equ	4084	;# 
   734   000FF5                     TABLAT          equ	4085	;# 
   735   000FF6                     TBLPTR          equ	4086	;# 
   736   000FF6                     TBLPTRL         equ	4086	;# 
   737   000FF7                     TBLPTRH         equ	4087	;# 
   738   000FF8                     TBLPTRU         equ	4088	;# 
   739   000FF9                     PCLAT           equ	4089	;# 
   740   000FF9                     PC              equ	4089	;# 
   741   000FF9                     PCL             equ	4089	;# 
   742   000FFA                     PCLATH          equ	4090	;# 
   743   000FFB                     PCLATU          equ	4091	;# 
   744   000FFC                     STKPTR          equ	4092	;# 
   745   000FFD                     TOS             equ	4093	;# 
   746   000FFD                     TOSL            equ	4093	;# 
   747   000FFE                     TOSH            equ	4094	;# 
   748   000FFF                     TOSU            equ	4095	;# 
   749   000E80                     MAADR5          equ	3712	;# 
   750   000E81                     MAADR6          equ	3713	;# 
   751   000E82                     MAADR3          equ	3714	;# 
   752   000E83                     MAADR4          equ	3715	;# 
   753   000E84                     MAADR1          equ	3716	;# 
   754   000E85                     MAADR2          equ	3717	;# 
   755   000E8A                     MISTAT          equ	3722	;# 
   756   000E97                     EFLOCON         equ	3735	;# 
   757   000E98                     EPAUS           equ	3736	;# 
   758   000E98                     EPAUSL          equ	3736	;# 
   759   000E99                     EPAUSH          equ	3737	;# 
   760   000EA0                     MACON1          equ	3744	;# 
   761   000EA2                     MACON3          equ	3746	;# 
   762   000EA3                     MACON4          equ	3747	;# 
   763   000EA4                     MABBIPG         equ	3748	;# 
   764   000EA6                     MAIPG           equ	3750	;# 
   765   000EA6                     MAIPGL          equ	3750	;# 
   766   000EA7                     MAIPGH          equ	3751	;# 
   767   000EAA                     MAMXFL          equ	3754	;# 
   768   000EAA                     MAMXFLL         equ	3754	;# 
   769   000EAB                     MAMXFLH         equ	3755	;# 
   770   000EB2                     MICMD           equ	3762	;# 
   771   000EB4                     MIREGADR        equ	3764	;# 
   772   000EB6                     MIWR            equ	3766	;# 
   773   000EB6                     MIWRL           equ	3766	;# 
   774   000EB7                     MIWRH           equ	3767	;# 
   775   000EB8                     MIRD            equ	3768	;# 
   776   000EB8                     MIRDL           equ	3768	;# 
   777   000EB9                     MIRDH           equ	3769	;# 
   778   000EC0                     EHT0            equ	3776	;# 
   779   000EC1                     EHT1            equ	3777	;# 
   780   000EC2                     EHT2            equ	3778	;# 
   781   000EC3                     EHT3            equ	3779	;# 
   782   000EC4                     EHT4            equ	3780	;# 
   783   000EC5                     EHT5            equ	3781	;# 
   784   000EC6                     EHT6            equ	3782	;# 
   785   000EC7                     EHT7            equ	3783	;# 
   786   000EC8                     EPMM0           equ	3784	;# 
   787   000EC9                     EPMM1           equ	3785	;# 
   788   000ECA                     EPMM2           equ	3786	;# 
   789   000ECB                     EPMM3           equ	3787	;# 
   790   000ECC                     EPMM4           equ	3788	;# 
   791   000ECD                     EPMM5           equ	3789	;# 
   792   000ECE                     EPMM6           equ	3790	;# 
   793   000ECF                     EPMM7           equ	3791	;# 
   794   000ED0                     EPMCS           equ	3792	;# 
   795   000ED0                     EPMCSL          equ	3792	;# 
   796   000ED1                     EPMCSH          equ	3793	;# 
   797   000ED4                     EPMO            equ	3796	;# 
   798   000ED4                     EPMOL           equ	3796	;# 
   799   000ED5                     EPMOH           equ	3797	;# 
   800   000ED8                     ERXFCON         equ	3800	;# 
   801   000ED9                     EPKTCNT         equ	3801	;# 
   802   000EE2                     EWRPT           equ	3810	;# 
   803   000EE2                     EWRPTL          equ	3810	;# 
   804   000EE3                     EWRPTH          equ	3811	;# 
   805   000EE4                     ETXST           equ	3812	;# 
   806   000EE4                     ETXSTL          equ	3812	;# 
   807   000EE5                     ETXSTH          equ	3813	;# 
   808   000EE6                     ETXND           equ	3814	;# 
   809   000EE6                     ETXNDL          equ	3814	;# 
   810   000EE7                     ETXNDH          equ	3815	;# 
   811   000EE8                     ERXST           equ	3816	;# 
   812   000EE8                     ERXSTL          equ	3816	;# 
   813   000EE9                     ERXSTH          equ	3817	;# 
   814   000EEA                     ERXND           equ	3818	;# 
   815   000EEA                     ERXNDL          equ	3818	;# 
   816   000EEB                     ERXNDH          equ	3819	;# 
   817   000EEC                     ERXRDPT         equ	3820	;# 
   818   000EEC                     ERXRDPTL        equ	3820	;# 
   819   000EED                     ERXRDPTH        equ	3821	;# 
   820   000EEE                     ERXWRPT         equ	3822	;# 
   821   000EEE                     ERXWRPTL        equ	3822	;# 
   822   000EEF                     ERXWRPTH        equ	3823	;# 
   823   000EF0                     EDMAST          equ	3824	;# 
   824   000EF0                     EDMASTL         equ	3824	;# 
   825   000EF1                     EDMASTH         equ	3825	;# 
   826   000EF2                     EDMAND          equ	3826	;# 
   827   000EF2                     EDMANDL         equ	3826	;# 
   828   000EF3                     EDMANDH         equ	3827	;# 
   829   000EF4                     EDMADST         equ	3828	;# 
   830   000EF4                     EDMADSTL        equ	3828	;# 
   831   000EF5                     EDMADSTH        equ	3829	;# 
   832   000EF6                     EDMACS          equ	3830	;# 
   833   000EF6                     EDMACSL         equ	3830	;# 
   834   000EF7                     EDMACSH         equ	3831	;# 
   835   000EFB                     EIE             equ	3835	;# 
   836   000EFD                     ESTAT           equ	3837	;# 
   837   000EFE                     ECON2           equ	3838	;# 
   838   000F60                     EIR             equ	3936	;# 
   839   000F61                     EDATA           equ	3937	;# 
   840   000F62                     SSP2CON2        equ	3938	;# 
   841   000F63                     SSP2CON1        equ	3939	;# 
   842   000F64                     SSP2STAT        equ	3940	;# 
   843   000F65                     SSP2ADD         equ	3941	;# 
   844   000F66                     SSP2BUF         equ	3942	;# 
   845   000F67                     ECCP2DEL        equ	3943	;# 
   846   000F68                     ECCP2AS         equ	3944	;# 
   847   000F69                     ECCP3DEL        equ	3945	;# 
   848   000F6A                     ECCP3AS         equ	3946	;# 
   849   000F6B                     RCSTA2          equ	3947	;# 
   850   000F6C                     TXSTA2          equ	3948	;# 
   851   000F6D                     TXREG2          equ	3949	;# 
   852   000F6E                     RCREG2          equ	3950	;# 
   853   000F6F                     SPBRG2          equ	3951	;# 
   854   000F70                     CCP5CON         equ	3952	;# 
   855   000F71                     CCPR5           equ	3953	;# 
   856   000F71                     CCPR5L          equ	3953	;# 
   857   000F72                     CCPR5H          equ	3954	;# 
   858   000F73                     CCP4CON         equ	3955	;# 
   859   000F74                     CCPR4           equ	3956	;# 
   860   000F74                     CCPR4L          equ	3956	;# 
   861   000F75                     CCPR4H          equ	3957	;# 
   862   000F76                     T4CON           equ	3958	;# 
   863   000F77                     PR4             equ	3959	;# 
   864   000F78                     TMR4            equ	3960	;# 
   865   000F79                     ECCP1DEL        equ	3961	;# 
   866   000F7A                     ERDPT           equ	3962	;# 
   867   000F7A                     ERDPTL          equ	3962	;# 
   868   000F7B                     ERDPTH          equ	3963	;# 
   869   000F7C                     BAUDCON2        equ	3964	;# 
   870   000F7C                     BAUDCTL2        equ	3964	;# 
   871   000F7D                     SPBRGH2         equ	3965	;# 
   872   000F7E                     BAUDCON1        equ	3966	;# 
   873   000F7E                     BAUDCON         equ	3966	;# 
   874   000F7E                     BAUDCTL         equ	3966	;# 
   875   000F7E                     BAUDCTL1        equ	3966	;# 
   876   000F7F                     SPBRGH1         equ	3967	;# 
   877   000F7F                     SPBRGH          equ	3967	;# 
   878   000F80                     PORTA           equ	3968	;# 
   879   000F81                     PORTB           equ	3969	;# 
   880   000F82                     PORTC           equ	3970	;# 
   881   000F83                     PORTD           equ	3971	;# 
   882   000F84                     PORTE           equ	3972	;# 
   883   000F85                     PORTF           equ	3973	;# 
   884   000F86                     PORTG           equ	3974	;# 
   885   000F87                     PORTH           equ	3975	;# 
   886   000F88                     PORTJ           equ	3976	;# 
   887   000F89                     LATA            equ	3977	;# 
   888   000F8A                     LATB            equ	3978	;# 
   889   000F8B                     LATC            equ	3979	;# 
   890   000F8C                     LATD            equ	3980	;# 
   891   000F8D                     LATE            equ	3981	;# 
   892   000F8E                     LATF            equ	3982	;# 
   893   000F8F                     LATG            equ	3983	;# 
   894   000F90                     LATH            equ	3984	;# 
   895   000F91                     LATJ            equ	3985	;# 
   896   000F92                     TRISA           equ	3986	;# 
   897   000F92                     DDRA            equ	3986	;# 
   898   000F93                     TRISB           equ	3987	;# 
   899   000F93                     DDRB            equ	3987	;# 
   900   000F94                     TRISC           equ	3988	;# 
   901   000F94                     DDRC            equ	3988	;# 
   902   000F95                     TRISD           equ	3989	;# 
   903   000F95                     DDRD            equ	3989	;# 
   904   000F96                     TRISE           equ	3990	;# 
   905   000F96                     DDRE            equ	3990	;# 
   906   000F97                     TRISF           equ	3991	;# 
   907   000F97                     DDRF            equ	3991	;# 
   908   000F98                     TRISG           equ	3992	;# 
   909   000F98                     DDRG            equ	3992	;# 
   910   000F99                     TRISH           equ	3993	;# 
   911   000F99                     DDRH            equ	3993	;# 
   912   000F9A                     TRISJ           equ	3994	;# 
   913   000F9A                     DDRJ            equ	3994	;# 
   914   000F9B                     OSCTUNE         equ	3995	;# 
   915   000F9C                     MEMCON          equ	3996	;# 
   916   000F9D                     PIE1            equ	3997	;# 
   917   000F9E                     PIR1            equ	3998	;# 
   918   000F9F                     IPR1            equ	3999	;# 
   919   000FA0                     PIE2            equ	4000	;# 
   920   000FA1                     PIR2            equ	4001	;# 
   921   000FA2                     IPR2            equ	4002	;# 
   922   000FA3                     PIE3            equ	4003	;# 
   923   000FA4                     PIR3            equ	4004	;# 
   924   000FA5                     IPR3            equ	4005	;# 
   925   000FA6                     EECON1          equ	4006	;# 
   926   000FA7                     EECON2          equ	4007	;# 
   927   000FAB                     RCSTA1          equ	4011	;# 
   928   000FAB                     RCSTA           equ	4011	;# 
   929   000FAC                     TXSTA1          equ	4012	;# 
   930   000FAC                     TXSTA           equ	4012	;# 
   931   000FAD                     TXREG1          equ	4013	;# 
   932   000FAD                     TXREG           equ	4013	;# 
   933   000FAE                     RCREG1          equ	4014	;# 
   934   000FAE                     RCREG           equ	4014	;# 
   935   000FAF                     SPBRG1          equ	4015	;# 
   936   000FAF                     SPBRG           equ	4015	;# 
   937   000FB0                     PSPCON          equ	4016	;# 
   938   000FB1                     T3CON           equ	4017	;# 
   939   000FB2                     TMR3            equ	4018	;# 
   940   000FB2                     TMR3L           equ	4018	;# 
   941   000FB3                     TMR3H           equ	4019	;# 
   942   000FB4                     CMCON           equ	4020	;# 
   943   000FB5                     CVRCON          equ	4021	;# 
   944   000FB6                     ECCP1AS         equ	4022	;# 
   945   000FB7                     CCP3CON         equ	4023	;# 
   946   000FB7                     ECCP3CON        equ	4023	;# 
   947   000FB8                     CCPR3           equ	4024	;# 
   948   000FB8                     CCPR3L          equ	4024	;# 
   949   000FB9                     CCPR3H          equ	4025	;# 
   950   000FBA                     CCP2CON         equ	4026	;# 
   951   000FBA                     ECCP2CON        equ	4026	;# 
   952   000FBB                     CCPR2           equ	4027	;# 
   953   000FBB                     CCPR2L          equ	4027	;# 
   954   000FBC                     CCPR2H          equ	4028	;# 
   955   000FBD                     CCP1CON         equ	4029	;# 
   956   000FBD                     ECCP1CON        equ	4029	;# 
   957   000FBE                     CCPR1           equ	4030	;# 
   958   000FBE                     CCPR1L          equ	4030	;# 
   959   000FBF                     CCPR1H          equ	4031	;# 
   960   000FC0                     ADCON2          equ	4032	;# 
   961   000FC1                     ADCON1          equ	4033	;# 
   962   000FC2                     ADCON0          equ	4034	;# 
   963   000FC3                     ADRES           equ	4035	;# 
   964   000FC3                     ADRESL          equ	4035	;# 
   965   000FC4                     ADRESH          equ	4036	;# 
   966   000FC5                     SSP1CON2        equ	4037	;# 
   967   000FC5                     SSPCON2         equ	4037	;# 
   968   000FC6                     SSP1CON1        equ	4038	;# 
   969   000FC6                     SSPCON1         equ	4038	;# 
   970   000FC7                     SSP1STAT        equ	4039	;# 
   971   000FC7                     SSPSTAT         equ	4039	;# 
   972   000FC8                     SSP1ADD         equ	4040	;# 
   973   000FC8                     SSPADD          equ	4040	;# 
   974   000FC9                     SSP1BUF         equ	4041	;# 
   975   000FC9                     SSPBUF          equ	4041	;# 
   976   000FCA                     T2CON           equ	4042	;# 
   977   000FCB                     PR2             equ	4043	;# 
   978   000FCC                     TMR2            equ	4044	;# 
   979   000FCD                     T1CON           equ	4045	;# 
   980   000FCE                     TMR1            equ	4046	;# 
   981   000FCE                     TMR1L           equ	4046	;# 
   982   000FCF                     TMR1H           equ	4047	;# 
   983   000FD0                     RCON            equ	4048	;# 
   984   000FD1                     WDTCON          equ	4049	;# 
   985   000FD2                     ECON1           equ	4050	;# 
   986   000FD3                     OSCCON          equ	4051	;# 
   987   000FD5                     T0CON           equ	4053	;# 
   988   000FD6                     TMR0            equ	4054	;# 
   989   000FD6                     TMR0L           equ	4054	;# 
   990   000FD7                     TMR0H           equ	4055	;# 
   991   000FD8                     STATUS          equ	4056	;# 
   992   000FD9                     FSR2            equ	4057	;# 
   993   000FD9                     FSR2L           equ	4057	;# 
   994   000FDA                     FSR2H           equ	4058	;# 
   995   000FDB                     PLUSW2          equ	4059	;# 
   996   000FDC                     PREINC2         equ	4060	;# 
   997   000FDD                     POSTDEC2        equ	4061	;# 
   998   000FDE                     POSTINC2        equ	4062	;# 
   999   000FDF                     INDF2           equ	4063	;# 
  1000   000FE0                     BSR             equ	4064	;# 
  1001   000FE1                     FSR1            equ	4065	;# 
  1002   000FE1                     FSR1L           equ	4065	;# 
  1003   000FE2                     FSR1H           equ	4066	;# 
  1004   000FE3                     PLUSW1          equ	4067	;# 
  1005   000FE4                     PREINC1         equ	4068	;# 
  1006   000FE5                     POSTDEC1        equ	4069	;# 
  1007   000FE6                     POSTINC1        equ	4070	;# 
  1008   000FE7                     INDF1           equ	4071	;# 
  1009   000FE8                     WREG            equ	4072	;# 
  1010   000FE9                     FSR0            equ	4073	;# 
  1011   000FE9                     FSR0L           equ	4073	;# 
  1012   000FEA                     FSR0H           equ	4074	;# 
  1013   000FEB                     PLUSW0          equ	4075	;# 
  1014   000FEC                     PREINC0         equ	4076	;# 
  1015   000FED                     POSTDEC0        equ	4077	;# 
  1016   000FEE                     POSTINC0        equ	4078	;# 
  1017   000FEF                     INDF0           equ	4079	;# 
  1018   000FF0                     INTCON3         equ	4080	;# 
  1019   000FF1                     INTCON2         equ	4081	;# 
  1020   000FF2                     INTCON          equ	4082	;# 
  1021   000FF3                     PROD            equ	4083	;# 
  1022   000FF3                     PRODL           equ	4083	;# 
  1023   000FF4                     PRODH           equ	4084	;# 
  1024   000FF5                     TABLAT          equ	4085	;# 
  1025   000FF6                     TBLPTR          equ	4086	;# 
  1026   000FF6                     TBLPTRL         equ	4086	;# 
  1027   000FF7                     TBLPTRH         equ	4087	;# 
  1028   000FF8                     TBLPTRU         equ	4088	;# 
  1029   000FF9                     PCLAT           equ	4089	;# 
  1030   000FF9                     PC              equ	4089	;# 
  1031   000FF9                     PCL             equ	4089	;# 
  1032   000FFA                     PCLATH          equ	4090	;# 
  1033   000FFB                     PCLATU          equ	4091	;# 
  1034   000FFC                     STKPTR          equ	4092	;# 
  1035   000FFD                     TOS             equ	4093	;# 
  1036   000FFD                     TOSL            equ	4093	;# 
  1037   000FFE                     TOSH            equ	4094	;# 
  1038   000FFF                     TOSU            equ	4095	;# 
  1039   000E80                     MAADR5          equ	3712	;# 
  1040   000E81                     MAADR6          equ	3713	;# 
  1041   000E82                     MAADR3          equ	3714	;# 
  1042   000E83                     MAADR4          equ	3715	;# 
  1043   000E84                     MAADR1          equ	3716	;# 
  1044   000E85                     MAADR2          equ	3717	;# 
  1045   000E8A                     MISTAT          equ	3722	;# 
  1046   000E97                     EFLOCON         equ	3735	;# 
  1047   000E98                     EPAUS           equ	3736	;# 
  1048   000E98                     EPAUSL          equ	3736	;# 
  1049   000E99                     EPAUSH          equ	3737	;# 
  1050   000EA0                     MACON1          equ	3744	;# 
  1051   000EA2                     MACON3          equ	3746	;# 
  1052   000EA3                     MACON4          equ	3747	;# 
  1053   000EA4                     MABBIPG         equ	3748	;# 
  1054   000EA6                     MAIPG           equ	3750	;# 
  1055   000EA6                     MAIPGL          equ	3750	;# 
  1056   000EA7                     MAIPGH          equ	3751	;# 
  1057   000EAA                     MAMXFL          equ	3754	;# 
  1058   000EAA                     MAMXFLL         equ	3754	;# 
  1059   000EAB                     MAMXFLH         equ	3755	;# 
  1060   000EB2                     MICMD           equ	3762	;# 
  1061   000EB4                     MIREGADR        equ	3764	;# 
  1062   000EB6                     MIWR            equ	3766	;# 
  1063   000EB6                     MIWRL           equ	3766	;# 
  1064   000EB7                     MIWRH           equ	3767	;# 
  1065   000EB8                     MIRD            equ	3768	;# 
  1066   000EB8                     MIRDL           equ	3768	;# 
  1067   000EB9                     MIRDH           equ	3769	;# 
  1068   000EC0                     EHT0            equ	3776	;# 
  1069   000EC1                     EHT1            equ	3777	;# 
  1070   000EC2                     EHT2            equ	3778	;# 
  1071   000EC3                     EHT3            equ	3779	;# 
  1072   000EC4                     EHT4            equ	3780	;# 
  1073   000EC5                     EHT5            equ	3781	;# 
  1074   000EC6                     EHT6            equ	3782	;# 
  1075   000EC7                     EHT7            equ	3783	;# 
  1076   000EC8                     EPMM0           equ	3784	;# 
  1077   000EC9                     EPMM1           equ	3785	;# 
  1078   000ECA                     EPMM2           equ	3786	;# 
  1079   000ECB                     EPMM3           equ	3787	;# 
  1080   000ECC                     EPMM4           equ	3788	;# 
  1081   000ECD                     EPMM5           equ	3789	;# 
  1082   000ECE                     EPMM6           equ	3790	;# 
  1083   000ECF                     EPMM7           equ	3791	;# 
  1084   000ED0                     EPMCS           equ	3792	;# 
  1085   000ED0                     EPMCSL          equ	3792	;# 
  1086   000ED1                     EPMCSH          equ	3793	;# 
  1087   000ED4                     EPMO            equ	3796	;# 
  1088   000ED4                     EPMOL           equ	3796	;# 
  1089   000ED5                     EPMOH           equ	3797	;# 
  1090   000ED8                     ERXFCON         equ	3800	;# 
  1091   000ED9                     EPKTCNT         equ	3801	;# 
  1092   000EE2                     EWRPT           equ	3810	;# 
  1093   000EE2                     EWRPTL          equ	3810	;# 
  1094   000EE3                     EWRPTH          equ	3811	;# 
  1095   000EE4                     ETXST           equ	3812	;# 
  1096   000EE4                     ETXSTL          equ	3812	;# 
  1097   000EE5                     ETXSTH          equ	3813	;# 
  1098   000EE6                     ETXND           equ	3814	;# 
  1099   000EE6                     ETXNDL          equ	3814	;# 
  1100   000EE7                     ETXNDH          equ	3815	;# 
  1101   000EE8                     ERXST           equ	3816	;# 
  1102   000EE8                     ERXSTL          equ	3816	;# 
  1103   000EE9                     ERXSTH          equ	3817	;# 
  1104   000EEA                     ERXND           equ	3818	;# 
  1105   000EEA                     ERXNDL          equ	3818	;# 
  1106   000EEB                     ERXNDH          equ	3819	;# 
  1107   000EEC                     ERXRDPT         equ	3820	;# 
  1108   000EEC                     ERXRDPTL        equ	3820	;# 
  1109   000EED                     ERXRDPTH        equ	3821	;# 
  1110   000EEE                     ERXWRPT         equ	3822	;# 
  1111   000EEE                     ERXWRPTL        equ	3822	;# 
  1112   000EEF                     ERXWRPTH        equ	3823	;# 
  1113   000EF0                     EDMAST          equ	3824	;# 
  1114   000EF0                     EDMASTL         equ	3824	;# 
  1115   000EF1                     EDMASTH         equ	3825	;# 
  1116   000EF2                     EDMAND          equ	3826	;# 
  1117   000EF2                     EDMANDL         equ	3826	;# 
  1118   000EF3                     EDMANDH         equ	3827	;# 
  1119   000EF4                     EDMADST         equ	3828	;# 
  1120   000EF4                     EDMADSTL        equ	3828	;# 
  1121   000EF5                     EDMADSTH        equ	3829	;# 
  1122   000EF6                     EDMACS          equ	3830	;# 
  1123   000EF6                     EDMACSL         equ	3830	;# 
  1124   000EF7                     EDMACSH         equ	3831	;# 
  1125   000EFB                     EIE             equ	3835	;# 
  1126   000EFD                     ESTAT           equ	3837	;# 
  1127   000EFE                     ECON2           equ	3838	;# 
  1128   000F60                     EIR             equ	3936	;# 
  1129   000F61                     EDATA           equ	3937	;# 
  1130   000F62                     SSP2CON2        equ	3938	;# 
  1131   000F63                     SSP2CON1        equ	3939	;# 
  1132   000F64                     SSP2STAT        equ	3940	;# 
  1133   000F65                     SSP2ADD         equ	3941	;# 
  1134   000F66                     SSP2BUF         equ	3942	;# 
  1135   000F67                     ECCP2DEL        equ	3943	;# 
  1136   000F68                     ECCP2AS         equ	3944	;# 
  1137   000F69                     ECCP3DEL        equ	3945	;# 
  1138   000F6A                     ECCP3AS         equ	3946	;# 
  1139   000F6B                     RCSTA2          equ	3947	;# 
  1140   000F6C                     TXSTA2          equ	3948	;# 
  1141   000F6D                     TXREG2          equ	3949	;# 
  1142   000F6E                     RCREG2          equ	3950	;# 
  1143   000F6F                     SPBRG2          equ	3951	;# 
  1144   000F70                     CCP5CON         equ	3952	;# 
  1145   000F71                     CCPR5           equ	3953	;# 
  1146   000F71                     CCPR5L          equ	3953	;# 
  1147   000F72                     CCPR5H          equ	3954	;# 
  1148   000F73                     CCP4CON         equ	3955	;# 
  1149   000F74                     CCPR4           equ	3956	;# 
  1150   000F74                     CCPR4L          equ	3956	;# 
  1151   000F75                     CCPR4H          equ	3957	;# 
  1152   000F76                     T4CON           equ	3958	;# 
  1153   000F77                     PR4             equ	3959	;# 
  1154   000F78                     TMR4            equ	3960	;# 
  1155   000F79                     ECCP1DEL        equ	3961	;# 
  1156   000F7A                     ERDPT           equ	3962	;# 
  1157   000F7A                     ERDPTL          equ	3962	;# 
  1158   000F7B                     ERDPTH          equ	3963	;# 
  1159   000F7C                     BAUDCON2        equ	3964	;# 
  1160   000F7C                     BAUDCTL2        equ	3964	;# 
  1161   000F7D                     SPBRGH2         equ	3965	;# 
  1162   000F7E                     BAUDCON1        equ	3966	;# 
  1163   000F7E                     BAUDCON         equ	3966	;# 
  1164   000F7E                     BAUDCTL         equ	3966	;# 
  1165   000F7E                     BAUDCTL1        equ	3966	;# 
  1166   000F7F                     SPBRGH1         equ	3967	;# 
  1167   000F7F                     SPBRGH          equ	3967	;# 
  1168   000F80                     PORTA           equ	3968	;# 
  1169   000F81                     PORTB           equ	3969	;# 
  1170   000F82                     PORTC           equ	3970	;# 
  1171   000F83                     PORTD           equ	3971	;# 
  1172   000F84                     PORTE           equ	3972	;# 
  1173   000F85                     PORTF           equ	3973	;# 
  1174   000F86                     PORTG           equ	3974	;# 
  1175   000F87                     PORTH           equ	3975	;# 
  1176   000F88                     PORTJ           equ	3976	;# 
  1177   000F89                     LATA            equ	3977	;# 
  1178   000F8A                     LATB            equ	3978	;# 
  1179   000F8B                     LATC            equ	3979	;# 
  1180   000F8C                     LATD            equ	3980	;# 
  1181   000F8D                     LATE            equ	3981	;# 
  1182   000F8E                     LATF            equ	3982	;# 
  1183   000F8F                     LATG            equ	3983	;# 
  1184   000F90                     LATH            equ	3984	;# 
  1185   000F91                     LATJ            equ	3985	;# 
  1186   000F92                     TRISA           equ	3986	;# 
  1187   000F92                     DDRA            equ	3986	;# 
  1188   000F93                     TRISB           equ	3987	;# 
  1189   000F93                     DDRB            equ	3987	;# 
  1190   000F94                     TRISC           equ	3988	;# 
  1191   000F94                     DDRC            equ	3988	;# 
  1192   000F95                     TRISD           equ	3989	;# 
  1193   000F95                     DDRD            equ	3989	;# 
  1194   000F96                     TRISE           equ	3990	;# 
  1195   000F96                     DDRE            equ	3990	;# 
  1196   000F97                     TRISF           equ	3991	;# 
  1197   000F97                     DDRF            equ	3991	;# 
  1198   000F98                     TRISG           equ	3992	;# 
  1199   000F98                     DDRG            equ	3992	;# 
  1200   000F99                     TRISH           equ	3993	;# 
  1201   000F99                     DDRH            equ	3993	;# 
  1202   000F9A                     TRISJ           equ	3994	;# 
  1203   000F9A                     DDRJ            equ	3994	;# 
  1204   000F9B                     OSCTUNE         equ	3995	;# 
  1205   000F9C                     MEMCON          equ	3996	;# 
  1206   000F9D                     PIE1            equ	3997	;# 
  1207   000F9E                     PIR1            equ	3998	;# 
  1208   000F9F                     IPR1            equ	3999	;# 
  1209   000FA0                     PIE2            equ	4000	;# 
  1210   000FA1                     PIR2            equ	4001	;# 
  1211   000FA2                     IPR2            equ	4002	;# 
  1212   000FA3                     PIE3            equ	4003	;# 
  1213   000FA4                     PIR3            equ	4004	;# 
  1214   000FA5                     IPR3            equ	4005	;# 
  1215   000FA6                     EECON1          equ	4006	;# 
  1216   000FA7                     EECON2          equ	4007	;# 
  1217   000FAB                     RCSTA1          equ	4011	;# 
  1218   000FAB                     RCSTA           equ	4011	;# 
  1219   000FAC                     TXSTA1          equ	4012	;# 
  1220   000FAC                     TXSTA           equ	4012	;# 
  1221   000FAD                     TXREG1          equ	4013	;# 
  1222   000FAD                     TXREG           equ	4013	;# 
  1223   000FAE                     RCREG1          equ	4014	;# 
  1224   000FAE                     RCREG           equ	4014	;# 
  1225   000FAF                     SPBRG1          equ	4015	;# 
  1226   000FAF                     SPBRG           equ	4015	;# 
  1227   000FB0                     PSPCON          equ	4016	;# 
  1228   000FB1                     T3CON           equ	4017	;# 
  1229   000FB2                     TMR3            equ	4018	;# 
  1230   000FB2                     TMR3L           equ	4018	;# 
  1231   000FB3                     TMR3H           equ	4019	;# 
  1232   000FB4                     CMCON           equ	4020	;# 
  1233   000FB5                     CVRCON          equ	4021	;# 
  1234   000FB6                     ECCP1AS         equ	4022	;# 
  1235   000FB7                     CCP3CON         equ	4023	;# 
  1236   000FB7                     ECCP3CON        equ	4023	;# 
  1237   000FB8                     CCPR3           equ	4024	;# 
  1238   000FB8                     CCPR3L          equ	4024	;# 
  1239   000FB9                     CCPR3H          equ	4025	;# 
  1240   000FBA                     CCP2CON         equ	4026	;# 
  1241   000FBA                     ECCP2CON        equ	4026	;# 
  1242   000FBB                     CCPR2           equ	4027	;# 
  1243   000FBB                     CCPR2L          equ	4027	;# 
  1244   000FBC                     CCPR2H          equ	4028	;# 
  1245   000FBD                     CCP1CON         equ	4029	;# 
  1246   000FBD                     ECCP1CON        equ	4029	;# 
  1247   000FBE                     CCPR1           equ	4030	;# 
  1248   000FBE                     CCPR1L          equ	4030	;# 
  1249   000FBF                     CCPR1H          equ	4031	;# 
  1250   000FC0                     ADCON2          equ	4032	;# 
  1251   000FC1                     ADCON1          equ	4033	;# 
  1252   000FC2                     ADCON0          equ	4034	;# 
  1253   000FC3                     ADRES           equ	4035	;# 
  1254   000FC3                     ADRESL          equ	4035	;# 
  1255   000FC4                     ADRESH          equ	4036	;# 
  1256   000FC5                     SSP1CON2        equ	4037	;# 
  1257   000FC5                     SSPCON2         equ	4037	;# 
  1258   000FC6                     SSP1CON1        equ	4038	;# 
  1259   000FC6                     SSPCON1         equ	4038	;# 
  1260   000FC7                     SSP1STAT        equ	4039	;# 
  1261   000FC7                     SSPSTAT         equ	4039	;# 
  1262   000FC8                     SSP1ADD         equ	4040	;# 
  1263   000FC8                     SSPADD          equ	4040	;# 
  1264   000FC9                     SSP1BUF         equ	4041	;# 
  1265   000FC9                     SSPBUF          equ	4041	;# 
  1266   000FCA                     T2CON           equ	4042	;# 
  1267   000FCB                     PR2             equ	4043	;# 
  1268   000FCC                     TMR2            equ	4044	;# 
  1269   000FCD                     T1CON           equ	4045	;# 
  1270   000FCE                     TMR1            equ	4046	;# 
  1271   000FCE                     TMR1L           equ	4046	;# 
  1272   000FCF                     TMR1H           equ	4047	;# 
  1273   000FD0                     RCON            equ	4048	;# 
  1274   000FD1                     WDTCON          equ	4049	;# 
  1275   000FD2                     ECON1           equ	4050	;# 
  1276   000FD3                     OSCCON          equ	4051	;# 
  1277   000FD5                     T0CON           equ	4053	;# 
  1278   000FD6                     TMR0            equ	4054	;# 
  1279   000FD6                     TMR0L           equ	4054	;# 
  1280   000FD7                     TMR0H           equ	4055	;# 
  1281   000FD8                     STATUS          equ	4056	;# 
  1282   000FD9                     FSR2            equ	4057	;# 
  1283   000FD9                     FSR2L           equ	4057	;# 
  1284   000FDA                     FSR2H           equ	4058	;# 
  1285   000FDB                     PLUSW2          equ	4059	;# 
  1286   000FDC                     PREINC2         equ	4060	;# 
  1287   000FDD                     POSTDEC2        equ	4061	;# 
  1288   000FDE                     POSTINC2        equ	4062	;# 
  1289   000FDF                     INDF2           equ	4063	;# 
  1290   000FE0                     BSR             equ	4064	;# 
  1291   000FE1                     FSR1            equ	4065	;# 
  1292   000FE1                     FSR1L           equ	4065	;# 
  1293   000FE2                     FSR1H           equ	4066	;# 
  1294   000FE3                     PLUSW1          equ	4067	;# 
  1295   000FE4                     PREINC1         equ	4068	;# 
  1296   000FE5                     POSTDEC1        equ	4069	;# 
  1297   000FE6                     POSTINC1        equ	4070	;# 
  1298   000FE7                     INDF1           equ	4071	;# 
  1299   000FE8                     WREG            equ	4072	;# 
  1300   000FE9                     FSR0            equ	4073	;# 
  1301   000FE9                     FSR0L           equ	4073	;# 
  1302   000FEA                     FSR0H           equ	4074	;# 
  1303   000FEB                     PLUSW0          equ	4075	;# 
  1304   000FEC                     PREINC0         equ	4076	;# 
  1305   000FED                     POSTDEC0        equ	4077	;# 
  1306   000FEE                     POSTINC0        equ	4078	;# 
  1307   000FEF                     INDF0           equ	4079	;# 
  1308   000FF0                     INTCON3         equ	4080	;# 
  1309   000FF1                     INTCON2         equ	4081	;# 
  1310   000FF2                     INTCON          equ	4082	;# 
  1311   000FF3                     PROD            equ	4083	;# 
  1312   000FF3                     PRODL           equ	4083	;# 
  1313   000FF4                     PRODH           equ	4084	;# 
  1314   000FF5                     TABLAT          equ	4085	;# 
  1315   000FF6                     TBLPTR          equ	4086	;# 
  1316   000FF6                     TBLPTRL         equ	4086	;# 
  1317   000FF7                     TBLPTRH         equ	4087	;# 
  1318   000FF8                     TBLPTRU         equ	4088	;# 
  1319   000FF9                     PCLAT           equ	4089	;# 
  1320   000FF9                     PC              equ	4089	;# 
  1321   000FF9                     PCL             equ	4089	;# 
  1322   000FFA                     PCLATH          equ	4090	;# 
  1323   000FFB                     PCLATU          equ	4091	;# 
  1324   000FFC                     STKPTR          equ	4092	;# 
  1325   000FFD                     TOS             equ	4093	;# 
  1326   000FFD                     TOSL            equ	4093	;# 
  1327   000FFE                     TOSH            equ	4094	;# 
  1328   000FFF                     TOSU            equ	4095	;# 
  1329   000E80                     MAADR5          equ	3712	;# 
  1330   000E81                     MAADR6          equ	3713	;# 
  1331   000E82                     MAADR3          equ	3714	;# 
  1332   000E83                     MAADR4          equ	3715	;# 
  1333   000E84                     MAADR1          equ	3716	;# 
  1334   000E85                     MAADR2          equ	3717	;# 
  1335   000E8A                     MISTAT          equ	3722	;# 
  1336   000E97                     EFLOCON         equ	3735	;# 
  1337   000E98                     EPAUS           equ	3736	;# 
  1338   000E98                     EPAUSL          equ	3736	;# 
  1339   000E99                     EPAUSH          equ	3737	;# 
  1340   000EA0                     MACON1          equ	3744	;# 
  1341   000EA2                     MACON3          equ	3746	;# 
  1342   000EA3                     MACON4          equ	3747	;# 
  1343   000EA4                     MABBIPG         equ	3748	;# 
  1344   000EA6                     MAIPG           equ	3750	;# 
  1345   000EA6                     MAIPGL          equ	3750	;# 
  1346   000EA7                     MAIPGH          equ	3751	;# 
  1347   000EAA                     MAMXFL          equ	3754	;# 
  1348   000EAA                     MAMXFLL         equ	3754	;# 
  1349   000EAB                     MAMXFLH         equ	3755	;# 
  1350   000EB2                     MICMD           equ	3762	;# 
  1351   000EB4                     MIREGADR        equ	3764	;# 
  1352   000EB6                     MIWR            equ	3766	;# 
  1353   000EB6                     MIWRL           equ	3766	;# 
  1354   000EB7                     MIWRH           equ	3767	;# 
  1355   000EB8                     MIRD            equ	3768	;# 
  1356   000EB8                     MIRDL           equ	3768	;# 
  1357   000EB9                     MIRDH           equ	3769	;# 
  1358   000EC0                     EHT0            equ	3776	;# 
  1359   000EC1                     EHT1            equ	3777	;# 
  1360   000EC2                     EHT2            equ	3778	;# 
  1361   000EC3                     EHT3            equ	3779	;# 
  1362   000EC4                     EHT4            equ	3780	;# 
  1363   000EC5                     EHT5            equ	3781	;# 
  1364   000EC6                     EHT6            equ	3782	;# 
  1365   000EC7                     EHT7            equ	3783	;# 
  1366   000EC8                     EPMM0           equ	3784	;# 
  1367   000EC9                     EPMM1           equ	3785	;# 
  1368   000ECA                     EPMM2           equ	3786	;# 
  1369   000ECB                     EPMM3           equ	3787	;# 
  1370   000ECC                     EPMM4           equ	3788	;# 
  1371   000ECD                     EPMM5           equ	3789	;# 
  1372   000ECE                     EPMM6           equ	3790	;# 
  1373   000ECF                     EPMM7           equ	3791	;# 
  1374   000ED0                     EPMCS           equ	3792	;# 
  1375   000ED0                     EPMCSL          equ	3792	;# 
  1376   000ED1                     EPMCSH          equ	3793	;# 
  1377   000ED4                     EPMO            equ	3796	;# 
  1378   000ED4                     EPMOL           equ	3796	;# 
  1379   000ED5                     EPMOH           equ	3797	;# 
  1380   000ED8                     ERXFCON         equ	3800	;# 
  1381   000ED9                     EPKTCNT         equ	3801	;# 
  1382   000EE2                     EWRPT           equ	3810	;# 
  1383   000EE2                     EWRPTL          equ	3810	;# 
  1384   000EE3                     EWRPTH          equ	3811	;# 
  1385   000EE4                     ETXST           equ	3812	;# 
  1386   000EE4                     ETXSTL          equ	3812	;# 
  1387   000EE5                     ETXSTH          equ	3813	;# 
  1388   000EE6                     ETXND           equ	3814	;# 
  1389   000EE6                     ETXNDL          equ	3814	;# 
  1390   000EE7                     ETXNDH          equ	3815	;# 
  1391   000EE8                     ERXST           equ	3816	;# 
  1392   000EE8                     ERXSTL          equ	3816	;# 
  1393   000EE9                     ERXSTH          equ	3817	;# 
  1394   000EEA                     ERXND           equ	3818	;# 
  1395   000EEA                     ERXNDL          equ	3818	;# 
  1396   000EEB                     ERXNDH          equ	3819	;# 
  1397   000EEC                     ERXRDPT         equ	3820	;# 
  1398   000EEC                     ERXRDPTL        equ	3820	;# 
  1399   000EED                     ERXRDPTH        equ	3821	;# 
  1400   000EEE                     ERXWRPT         equ	3822	;# 
  1401   000EEE                     ERXWRPTL        equ	3822	;# 
  1402   000EEF                     ERXWRPTH        equ	3823	;# 
  1403   000EF0                     EDMAST          equ	3824	;# 
  1404   000EF0                     EDMASTL         equ	3824	;# 
  1405   000EF1                     EDMASTH         equ	3825	;# 
  1406   000EF2                     EDMAND          equ	3826	;# 
  1407   000EF2                     EDMANDL         equ	3826	;# 
  1408   000EF3                     EDMANDH         equ	3827	;# 
  1409   000EF4                     EDMADST         equ	3828	;# 
  1410   000EF4                     EDMADSTL        equ	3828	;# 
  1411   000EF5                     EDMADSTH        equ	3829	;# 
  1412   000EF6                     EDMACS          equ	3830	;# 
  1413   000EF6                     EDMACSL         equ	3830	;# 
  1414   000EF7                     EDMACSH         equ	3831	;# 
  1415   000EFB                     EIE             equ	3835	;# 
  1416   000EFD                     ESTAT           equ	3837	;# 
  1417   000EFE                     ECON2           equ	3838	;# 
  1418   000F60                     EIR             equ	3936	;# 
  1419   000F61                     EDATA           equ	3937	;# 
  1420   000F62                     SSP2CON2        equ	3938	;# 
  1421   000F63                     SSP2CON1        equ	3939	;# 
  1422   000F64                     SSP2STAT        equ	3940	;# 
  1423   000F65                     SSP2ADD         equ	3941	;# 
  1424   000F66                     SSP2BUF         equ	3942	;# 
  1425   000F67                     ECCP2DEL        equ	3943	;# 
  1426   000F68                     ECCP2AS         equ	3944	;# 
  1427   000F69                     ECCP3DEL        equ	3945	;# 
  1428   000F6A                     ECCP3AS         equ	3946	;# 
  1429   000F6B                     RCSTA2          equ	3947	;# 
  1430   000F6C                     TXSTA2          equ	3948	;# 
  1431   000F6D                     TXREG2          equ	3949	;# 
  1432   000F6E                     RCREG2          equ	3950	;# 
  1433   000F6F                     SPBRG2          equ	3951	;# 
  1434   000F70                     CCP5CON         equ	3952	;# 
  1435   000F71                     CCPR5           equ	3953	;# 
  1436   000F71                     CCPR5L          equ	3953	;# 
  1437   000F72                     CCPR5H          equ	3954	;# 
  1438   000F73                     CCP4CON         equ	3955	;# 
  1439   000F74                     CCPR4           equ	3956	;# 
  1440   000F74                     CCPR4L          equ	3956	;# 
  1441   000F75                     CCPR4H          equ	3957	;# 
  1442   000F76                     T4CON           equ	3958	;# 
  1443   000F77                     PR4             equ	3959	;# 
  1444   000F78                     TMR4            equ	3960	;# 
  1445   000F79                     ECCP1DEL        equ	3961	;# 
  1446   000F7A                     ERDPT           equ	3962	;# 
  1447   000F7A                     ERDPTL          equ	3962	;# 
  1448   000F7B                     ERDPTH          equ	3963	;# 
  1449   000F7C                     BAUDCON2        equ	3964	;# 
  1450   000F7C                     BAUDCTL2        equ	3964	;# 
  1451   000F7D                     SPBRGH2         equ	3965	;# 
  1452   000F7E                     BAUDCON1        equ	3966	;# 
  1453   000F7E                     BAUDCON         equ	3966	;# 
  1454   000F7E                     BAUDCTL         equ	3966	;# 
  1455   000F7E                     BAUDCTL1        equ	3966	;# 
  1456   000F7F                     SPBRGH1         equ	3967	;# 
  1457   000F7F                     SPBRGH          equ	3967	;# 
  1458   000F80                     PORTA           equ	3968	;# 
  1459   000F81                     PORTB           equ	3969	;# 
  1460   000F82                     PORTC           equ	3970	;# 
  1461   000F83                     PORTD           equ	3971	;# 
  1462   000F84                     PORTE           equ	3972	;# 
  1463   000F85                     PORTF           equ	3973	;# 
  1464   000F86                     PORTG           equ	3974	;# 
  1465   000F87                     PORTH           equ	3975	;# 
  1466   000F88                     PORTJ           equ	3976	;# 
  1467   000F89                     LATA            equ	3977	;# 
  1468   000F8A                     LATB            equ	3978	;# 
  1469   000F8B                     LATC            equ	3979	;# 
  1470   000F8C                     LATD            equ	3980	;# 
  1471   000F8D                     LATE            equ	3981	;# 
  1472   000F8E                     LATF            equ	3982	;# 
  1473   000F8F                     LATG            equ	3983	;# 
  1474   000F90                     LATH            equ	3984	;# 
  1475   000F91                     LATJ            equ	3985	;# 
  1476   000F92                     TRISA           equ	3986	;# 
  1477   000F92                     DDRA            equ	3986	;# 
  1478   000F93                     TRISB           equ	3987	;# 
  1479   000F93                     DDRB            equ	3987	;# 
  1480   000F94                     TRISC           equ	3988	;# 
  1481   000F94                     DDRC            equ	3988	;# 
  1482   000F95                     TRISD           equ	3989	;# 
  1483   000F95                     DDRD            equ	3989	;# 
  1484   000F96                     TRISE           equ	3990	;# 
  1485   000F96                     DDRE            equ	3990	;# 
  1486   000F97                     TRISF           equ	3991	;# 
  1487   000F97                     DDRF            equ	3991	;# 
  1488   000F98                     TRISG           equ	3992	;# 
  1489   000F98                     DDRG            equ	3992	;# 
  1490   000F99                     TRISH           equ	3993	;# 
  1491   000F99                     DDRH            equ	3993	;# 
  1492   000F9A                     TRISJ           equ	3994	;# 
  1493   000F9A                     DDRJ            equ	3994	;# 
  1494   000F9B                     OSCTUNE         equ	3995	;# 
  1495   000F9C                     MEMCON          equ	3996	;# 
  1496   000F9D                     PIE1            equ	3997	;# 
  1497   000F9E                     PIR1            equ	3998	;# 
  1498   000F9F                     IPR1            equ	3999	;# 
  1499   000FA0                     PIE2            equ	4000	;# 
  1500   000FA1                     PIR2            equ	4001	;# 
  1501   000FA2                     IPR2            equ	4002	;# 
  1502   000FA3                     PIE3            equ	4003	;# 
  1503   000FA4                     PIR3            equ	4004	;# 
  1504   000FA5                     IPR3            equ	4005	;# 
  1505   000FA6                     EECON1          equ	4006	;# 
  1506   000FA7                     EECON2          equ	4007	;# 
  1507   000FAB                     RCSTA1          equ	4011	;# 
  1508   000FAB                     RCSTA           equ	4011	;# 
  1509   000FAC                     TXSTA1          equ	4012	;# 
  1510   000FAC                     TXSTA           equ	4012	;# 
  1511   000FAD                     TXREG1          equ	4013	;# 
  1512   000FAD                     TXREG           equ	4013	;# 
  1513   000FAE                     RCREG1          equ	4014	;# 
  1514   000FAE                     RCREG           equ	4014	;# 
  1515   000FAF                     SPBRG1          equ	4015	;# 
  1516   000FAF                     SPBRG           equ	4015	;# 
  1517   000FB0                     PSPCON          equ	4016	;# 
  1518   000FB1                     T3CON           equ	4017	;# 
  1519   000FB2                     TMR3            equ	4018	;# 
  1520   000FB2                     TMR3L           equ	4018	;# 
  1521   000FB3                     TMR3H           equ	4019	;# 
  1522   000FB4                     CMCON           equ	4020	;# 
  1523   000FB5                     CVRCON          equ	4021	;# 
  1524   000FB6                     ECCP1AS         equ	4022	;# 
  1525   000FB7                     CCP3CON         equ	4023	;# 
  1526   000FB7                     ECCP3CON        equ	4023	;# 
  1527   000FB8                     CCPR3           equ	4024	;# 
  1528   000FB8                     CCPR3L          equ	4024	;# 
  1529   000FB9                     CCPR3H          equ	4025	;# 
  1530   000FBA                     CCP2CON         equ	4026	;# 
  1531   000FBA                     ECCP2CON        equ	4026	;# 
  1532   000FBB                     CCPR2           equ	4027	;# 
  1533   000FBB                     CCPR2L          equ	4027	;# 
  1534   000FBC                     CCPR2H          equ	4028	;# 
  1535   000FBD                     CCP1CON         equ	4029	;# 
  1536   000FBD                     ECCP1CON        equ	4029	;# 
  1537   000FBE                     CCPR1           equ	4030	;# 
  1538   000FBE                     CCPR1L          equ	4030	;# 
  1539   000FBF                     CCPR1H          equ	4031	;# 
  1540   000FC0                     ADCON2          equ	4032	;# 
  1541   000FC1                     ADCON1          equ	4033	;# 
  1542   000FC2                     ADCON0          equ	4034	;# 
  1543   000FC3                     ADRES           equ	4035	;# 
  1544   000FC3                     ADRESL          equ	4035	;# 
  1545   000FC4                     ADRESH          equ	4036	;# 
  1546   000FC5                     SSP1CON2        equ	4037	;# 
  1547   000FC5                     SSPCON2         equ	4037	;# 
  1548   000FC6                     SSP1CON1        equ	4038	;# 
  1549   000FC6                     SSPCON1         equ	4038	;# 
  1550   000FC7                     SSP1STAT        equ	4039	;# 
  1551   000FC7                     SSPSTAT         equ	4039	;# 
  1552   000FC8                     SSP1ADD         equ	4040	;# 
  1553   000FC8                     SSPADD          equ	4040	;# 
  1554   000FC9                     SSP1BUF         equ	4041	;# 
  1555   000FC9                     SSPBUF          equ	4041	;# 
  1556   000FCA                     T2CON           equ	4042	;# 
  1557   000FCB                     PR2             equ	4043	;# 
  1558   000FCC                     TMR2            equ	4044	;# 
  1559   000FCD                     T1CON           equ	4045	;# 
  1560   000FCE                     TMR1            equ	4046	;# 
  1561   000FCE                     TMR1L           equ	4046	;# 
  1562   000FCF                     TMR1H           equ	4047	;# 
  1563   000FD0                     RCON            equ	4048	;# 
  1564   000FD1                     WDTCON          equ	4049	;# 
  1565   000FD2                     ECON1           equ	4050	;# 
  1566   000FD3                     OSCCON          equ	4051	;# 
  1567   000FD5                     T0CON           equ	4053	;# 
  1568   000FD6                     TMR0            equ	4054	;# 
  1569   000FD6                     TMR0L           equ	4054	;# 
  1570   000FD7                     TMR0H           equ	4055	;# 
  1571   000FD8                     STATUS          equ	4056	;# 
  1572   000FD9                     FSR2            equ	4057	;# 
  1573   000FD9                     FSR2L           equ	4057	;# 
  1574   000FDA                     FSR2H           equ	4058	;# 
  1575   000FDB                     PLUSW2          equ	4059	;# 
  1576   000FDC                     PREINC2         equ	4060	;# 
  1577   000FDD                     POSTDEC2        equ	4061	;# 
  1578   000FDE                     POSTINC2        equ	4062	;# 
  1579   000FDF                     INDF2           equ	4063	;# 
  1580   000FE0                     BSR             equ	4064	;# 
  1581   000FE1                     FSR1            equ	4065	;# 
  1582   000FE1                     FSR1L           equ	4065	;# 
  1583   000FE2                     FSR1H           equ	4066	;# 
  1584   000FE3                     PLUSW1          equ	4067	;# 
  1585   000FE4                     PREINC1         equ	4068	;# 
  1586   000FE5                     POSTDEC1        equ	4069	;# 
  1587   000FE6                     POSTINC1        equ	4070	;# 
  1588   000FE7                     INDF1           equ	4071	;# 
  1589   000FE8                     WREG            equ	4072	;# 
  1590   000FE9                     FSR0            equ	4073	;# 
  1591   000FE9                     FSR0L           equ	4073	;# 
  1592   000FEA                     FSR0H           equ	4074	;# 
  1593   000FEB                     PLUSW0          equ	4075	;# 
  1594   000FEC                     PREINC0         equ	4076	;# 
  1595   000FED                     POSTDEC0        equ	4077	;# 
  1596   000FEE                     POSTINC0        equ	4078	;# 
  1597   000FEF                     INDF0           equ	4079	;# 
  1598   000FF0                     INTCON3         equ	4080	;# 
  1599   000FF1                     INTCON2         equ	4081	;# 
  1600   000FF2                     INTCON          equ	4082	;# 
  1601   000FF3                     PROD            equ	4083	;# 
  1602   000FF3                     PRODL           equ	4083	;# 
  1603   000FF4                     PRODH           equ	4084	;# 
  1604   000FF5                     TABLAT          equ	4085	;# 
  1605   000FF6                     TBLPTR          equ	4086	;# 
  1606   000FF6                     TBLPTRL         equ	4086	;# 
  1607   000FF7                     TBLPTRH         equ	4087	;# 
  1608   000FF8                     TBLPTRU         equ	4088	;# 
  1609   000FF9                     PCLAT           equ	4089	;# 
  1610   000FF9                     PC              equ	4089	;# 
  1611   000FF9                     PCL             equ	4089	;# 
  1612   000FFA                     PCLATH          equ	4090	;# 
  1613   000FFB                     PCLATU          equ	4091	;# 
  1614   000FFC                     STKPTR          equ	4092	;# 
  1615   000FFD                     TOS             equ	4093	;# 
  1616   000FFD                     TOSL            equ	4093	;# 
  1617   000FFE                     TOSH            equ	4094	;# 
  1618   000FFF                     TOSU            equ	4095	;# 
  1619   000E80                     MAADR5          equ	3712	;# 
  1620   000E81                     MAADR6          equ	3713	;# 
  1621   000E82                     MAADR3          equ	3714	;# 
  1622   000E83                     MAADR4          equ	3715	;# 
  1623   000E84                     MAADR1          equ	3716	;# 
  1624   000E85                     MAADR2          equ	3717	;# 
  1625   000E8A                     MISTAT          equ	3722	;# 
  1626   000E97                     EFLOCON         equ	3735	;# 
  1627   000E98                     EPAUS           equ	3736	;# 
  1628   000E98                     EPAUSL          equ	3736	;# 
  1629   000E99                     EPAUSH          equ	3737	;# 
  1630   000EA0                     MACON1          equ	3744	;# 
  1631   000EA2                     MACON3          equ	3746	;# 
  1632   000EA3                     MACON4          equ	3747	;# 
  1633   000EA4                     MABBIPG         equ	3748	;# 
  1634   000EA6                     MAIPG           equ	3750	;# 
  1635   000EA6                     MAIPGL          equ	3750	;# 
  1636   000EA7                     MAIPGH          equ	3751	;# 
  1637   000EAA                     MAMXFL          equ	3754	;# 
  1638   000EAA                     MAMXFLL         equ	3754	;# 
  1639   000EAB                     MAMXFLH         equ	3755	;# 
  1640   000EB2                     MICMD           equ	3762	;# 
  1641   000EB4                     MIREGADR        equ	3764	;# 
  1642   000EB6                     MIWR            equ	3766	;# 
  1643   000EB6                     MIWRL           equ	3766	;# 
  1644   000EB7                     MIWRH           equ	3767	;# 
  1645   000EB8                     MIRD            equ	3768	;# 
  1646   000EB8                     MIRDL           equ	3768	;# 
  1647   000EB9                     MIRDH           equ	3769	;# 
  1648   000EC0                     EHT0            equ	3776	;# 
  1649   000EC1                     EHT1            equ	3777	;# 
  1650   000EC2                     EHT2            equ	3778	;# 
  1651   000EC3                     EHT3            equ	3779	;# 
  1652   000EC4                     EHT4            equ	3780	;# 
  1653   000EC5                     EHT5            equ	3781	;# 
  1654   000EC6                     EHT6            equ	3782	;# 
  1655   000EC7                     EHT7            equ	3783	;# 
  1656   000EC8                     EPMM0           equ	3784	;# 
  1657   000EC9                     EPMM1           equ	3785	;# 
  1658   000ECA                     EPMM2           equ	3786	;# 
  1659   000ECB                     EPMM3           equ	3787	;# 
  1660   000ECC                     EPMM4           equ	3788	;# 
  1661   000ECD                     EPMM5           equ	3789	;# 
  1662   000ECE                     EPMM6           equ	3790	;# 
  1663   000ECF                     EPMM7           equ	3791	;# 
  1664   000ED0                     EPMCS           equ	3792	;# 
  1665   000ED0                     EPMCSL          equ	3792	;# 
  1666   000ED1                     EPMCSH          equ	3793	;# 
  1667   000ED4                     EPMO            equ	3796	;# 
  1668   000ED4                     EPMOL           equ	3796	;# 
  1669   000ED5                     EPMOH           equ	3797	;# 
  1670   000ED8                     ERXFCON         equ	3800	;# 
  1671   000ED9                     EPKTCNT         equ	3801	;# 
  1672   000EE2                     EWRPT           equ	3810	;# 
  1673   000EE2                     EWRPTL          equ	3810	;# 
  1674   000EE3                     EWRPTH          equ	3811	;# 
  1675   000EE4                     ETXST           equ	3812	;# 
  1676   000EE4                     ETXSTL          equ	3812	;# 
  1677   000EE5                     ETXSTH          equ	3813	;# 
  1678   000EE6                     ETXND           equ	3814	;# 
  1679   000EE6                     ETXNDL          equ	3814	;# 
  1680   000EE7                     ETXNDH          equ	3815	;# 
  1681   000EE8                     ERXST           equ	3816	;# 
  1682   000EE8                     ERXSTL          equ	3816	;# 
  1683   000EE9                     ERXSTH          equ	3817	;# 
  1684   000EEA                     ERXND           equ	3818	;# 
  1685   000EEA                     ERXNDL          equ	3818	;# 
  1686   000EEB                     ERXNDH          equ	3819	;# 
  1687   000EEC                     ERXRDPT         equ	3820	;# 
  1688   000EEC                     ERXRDPTL        equ	3820	;# 
  1689   000EED                     ERXRDPTH        equ	3821	;# 
  1690   000EEE                     ERXWRPT         equ	3822	;# 
  1691   000EEE                     ERXWRPTL        equ	3822	;# 
  1692   000EEF                     ERXWRPTH        equ	3823	;# 
  1693   000EF0                     EDMAST          equ	3824	;# 
  1694   000EF0                     EDMASTL         equ	3824	;# 
  1695   000EF1                     EDMASTH         equ	3825	;# 
  1696   000EF2                     EDMAND          equ	3826	;# 
  1697   000EF2                     EDMANDL         equ	3826	;# 
  1698   000EF3                     EDMANDH         equ	3827	;# 
  1699   000EF4                     EDMADST         equ	3828	;# 
  1700   000EF4                     EDMADSTL        equ	3828	;# 
  1701   000EF5                     EDMADSTH        equ	3829	;# 
  1702   000EF6                     EDMACS          equ	3830	;# 
  1703   000EF6                     EDMACSL         equ	3830	;# 
  1704   000EF7                     EDMACSH         equ	3831	;# 
  1705   000EFB                     EIE             equ	3835	;# 
  1706   000EFD                     ESTAT           equ	3837	;# 
  1707   000EFE                     ECON2           equ	3838	;# 
  1708   000F60                     EIR             equ	3936	;# 
  1709   000F61                     EDATA           equ	3937	;# 
  1710   000F62                     SSP2CON2        equ	3938	;# 
  1711   000F63                     SSP2CON1        equ	3939	;# 
  1712   000F64                     SSP2STAT        equ	3940	;# 
  1713   000F65                     SSP2ADD         equ	3941	;# 
  1714   000F66                     SSP2BUF         equ	3942	;# 
  1715   000F67                     ECCP2DEL        equ	3943	;# 
  1716   000F68                     ECCP2AS         equ	3944	;# 
  1717   000F69                     ECCP3DEL        equ	3945	;# 
  1718   000F6A                     ECCP3AS         equ	3946	;# 
  1719   000F6B                     RCSTA2          equ	3947	;# 
  1720   000F6C                     TXSTA2          equ	3948	;# 
  1721   000F6D                     TXREG2          equ	3949	;# 
  1722   000F6E                     RCREG2          equ	3950	;# 
  1723   000F6F                     SPBRG2          equ	3951	;# 
  1724   000F70                     CCP5CON         equ	3952	;# 
  1725   000F71                     CCPR5           equ	3953	;# 
  1726   000F71                     CCPR5L          equ	3953	;# 
  1727   000F72                     CCPR5H          equ	3954	;# 
  1728   000F73                     CCP4CON         equ	3955	;# 
  1729   000F74                     CCPR4           equ	3956	;# 
  1730   000F74                     CCPR4L          equ	3956	;# 
  1731   000F75                     CCPR4H          equ	3957	;# 
  1732   000F76                     T4CON           equ	3958	;# 
  1733   000F77                     PR4             equ	3959	;# 
  1734   000F78                     TMR4            equ	3960	;# 
  1735   000F79                     ECCP1DEL        equ	3961	;# 
  1736   000F7A                     ERDPT           equ	3962	;# 
  1737   000F7A                     ERDPTL          equ	3962	;# 
  1738   000F7B                     ERDPTH          equ	3963	;# 
  1739   000F7C                     BAUDCON2        equ	3964	;# 
  1740   000F7C                     BAUDCTL2        equ	3964	;# 
  1741   000F7D                     SPBRGH2         equ	3965	;# 
  1742   000F7E                     BAUDCON1        equ	3966	;# 
  1743   000F7E                     BAUDCON         equ	3966	;# 
  1744   000F7E                     BAUDCTL         equ	3966	;# 
  1745   000F7E                     BAUDCTL1        equ	3966	;# 
  1746   000F7F                     SPBRGH1         equ	3967	;# 
  1747   000F7F                     SPBRGH          equ	3967	;# 
  1748   000F80                     PORTA           equ	3968	;# 
  1749   000F81                     PORTB           equ	3969	;# 
  1750   000F82                     PORTC           equ	3970	;# 
  1751   000F83                     PORTD           equ	3971	;# 
  1752   000F84                     PORTE           equ	3972	;# 
  1753   000F85                     PORTF           equ	3973	;# 
  1754   000F86                     PORTG           equ	3974	;# 
  1755   000F87                     PORTH           equ	3975	;# 
  1756   000F88                     PORTJ           equ	3976	;# 
  1757   000F89                     LATA            equ	3977	;# 
  1758   000F8A                     LATB            equ	3978	;# 
  1759   000F8B                     LATC            equ	3979	;# 
  1760   000F8C                     LATD            equ	3980	;# 
  1761   000F8D                     LATE            equ	3981	;# 
  1762   000F8E                     LATF            equ	3982	;# 
  1763   000F8F                     LATG            equ	3983	;# 
  1764   000F90                     LATH            equ	3984	;# 
  1765   000F91                     LATJ            equ	3985	;# 
  1766   000F92                     TRISA           equ	3986	;# 
  1767   000F92                     DDRA            equ	3986	;# 
  1768   000F93                     TRISB           equ	3987	;# 
  1769   000F93                     DDRB            equ	3987	;# 
  1770   000F94                     TRISC           equ	3988	;# 
  1771   000F94                     DDRC            equ	3988	;# 
  1772   000F95                     TRISD           equ	3989	;# 
  1773   000F95                     DDRD            equ	3989	;# 
  1774   000F96                     TRISE           equ	3990	;# 
  1775   000F96                     DDRE            equ	3990	;# 
  1776   000F97                     TRISF           equ	3991	;# 
  1777   000F97                     DDRF            equ	3991	;# 
  1778   000F98                     TRISG           equ	3992	;# 
  1779   000F98                     DDRG            equ	3992	;# 
  1780   000F99                     TRISH           equ	3993	;# 
  1781   000F99                     DDRH            equ	3993	;# 
  1782   000F9A                     TRISJ           equ	3994	;# 
  1783   000F9A                     DDRJ            equ	3994	;# 
  1784   000F9B                     OSCTUNE         equ	3995	;# 
  1785   000F9C                     MEMCON          equ	3996	;# 
  1786   000F9D                     PIE1            equ	3997	;# 
  1787   000F9E                     PIR1            equ	3998	;# 
  1788   000F9F                     IPR1            equ	3999	;# 
  1789   000FA0                     PIE2            equ	4000	;# 
  1790   000FA1                     PIR2            equ	4001	;# 
  1791   000FA2                     IPR2            equ	4002	;# 
  1792   000FA3                     PIE3            equ	4003	;# 
  1793   000FA4                     PIR3            equ	4004	;# 
  1794   000FA5                     IPR3            equ	4005	;# 
  1795   000FA6                     EECON1          equ	4006	;# 
  1796   000FA7                     EECON2          equ	4007	;# 
  1797   000FAB                     RCSTA1          equ	4011	;# 
  1798   000FAB                     RCSTA           equ	4011	;# 
  1799   000FAC                     TXSTA1          equ	4012	;# 
  1800   000FAC                     TXSTA           equ	4012	;# 
  1801   000FAD                     TXREG1          equ	4013	;# 
  1802   000FAD                     TXREG           equ	4013	;# 
  1803   000FAE                     RCREG1          equ	4014	;# 
  1804   000FAE                     RCREG           equ	4014	;# 
  1805   000FAF                     SPBRG1          equ	4015	;# 
  1806   000FAF                     SPBRG           equ	4015	;# 
  1807   000FB0                     PSPCON          equ	4016	;# 
  1808   000FB1                     T3CON           equ	4017	;# 
  1809   000FB2                     TMR3            equ	4018	;# 
  1810   000FB2                     TMR3L           equ	4018	;# 
  1811   000FB3                     TMR3H           equ	4019	;# 
  1812   000FB4                     CMCON           equ	4020	;# 
  1813   000FB5                     CVRCON          equ	4021	;# 
  1814   000FB6                     ECCP1AS         equ	4022	;# 
  1815   000FB7                     CCP3CON         equ	4023	;# 
  1816   000FB7                     ECCP3CON        equ	4023	;# 
  1817   000FB8                     CCPR3           equ	4024	;# 
  1818   000FB8                     CCPR3L          equ	4024	;# 
  1819   000FB9                     CCPR3H          equ	4025	;# 
  1820   000FBA                     CCP2CON         equ	4026	;# 
  1821   000FBA                     ECCP2CON        equ	4026	;# 
  1822   000FBB                     CCPR2           equ	4027	;# 
  1823   000FBB                     CCPR2L          equ	4027	;# 
  1824   000FBC                     CCPR2H          equ	4028	;# 
  1825   000FBD                     CCP1CON         equ	4029	;# 
  1826   000FBD                     ECCP1CON        equ	4029	;# 
  1827   000FBE                     CCPR1           equ	4030	;# 
  1828   000FBE                     CCPR1L          equ	4030	;# 
  1829   000FBF                     CCPR1H          equ	4031	;# 
  1830   000FC0                     ADCON2          equ	4032	;# 
  1831   000FC1                     ADCON1          equ	4033	;# 
  1832   000FC2                     ADCON0          equ	4034	;# 
  1833   000FC3                     ADRES           equ	4035	;# 
  1834   000FC3                     ADRESL          equ	4035	;# 
  1835   000FC4                     ADRESH          equ	4036	;# 
  1836   000FC5                     SSP1CON2        equ	4037	;# 
  1837   000FC5                     SSPCON2         equ	4037	;# 
  1838   000FC6                     SSP1CON1        equ	4038	;# 
  1839   000FC6                     SSPCON1         equ	4038	;# 
  1840   000FC7                     SSP1STAT        equ	4039	;# 
  1841   000FC7                     SSPSTAT         equ	4039	;# 
  1842   000FC8                     SSP1ADD         equ	4040	;# 
  1843   000FC8                     SSPADD          equ	4040	;# 
  1844   000FC9                     SSP1BUF         equ	4041	;# 
  1845   000FC9                     SSPBUF          equ	4041	;# 
  1846   000FCA                     T2CON           equ	4042	;# 
  1847   000FCB                     PR2             equ	4043	;# 
  1848   000FCC                     TMR2            equ	4044	;# 
  1849   000FCD                     T1CON           equ	4045	;# 
  1850   000FCE                     TMR1            equ	4046	;# 
  1851   000FCE                     TMR1L           equ	4046	;# 
  1852   000FCF                     TMR1H           equ	4047	;# 
  1853   000FD0                     RCON            equ	4048	;# 
  1854   000FD1                     WDTCON          equ	4049	;# 
  1855   000FD2                     ECON1           equ	4050	;# 
  1856   000FD3                     OSCCON          equ	4051	;# 
  1857   000FD5                     T0CON           equ	4053	;# 
  1858   000FD6                     TMR0            equ	4054	;# 
  1859   000FD6                     TMR0L           equ	4054	;# 
  1860   000FD7                     TMR0H           equ	4055	;# 
  1861   000FD8                     STATUS          equ	4056	;# 
  1862   000FD9                     FSR2            equ	4057	;# 
  1863   000FD9                     FSR2L           equ	4057	;# 
  1864   000FDA                     FSR2H           equ	4058	;# 
  1865   000FDB                     PLUSW2          equ	4059	;# 
  1866   000FDC                     PREINC2         equ	4060	;# 
  1867   000FDD                     POSTDEC2        equ	4061	;# 
  1868   000FDE                     POSTINC2        equ	4062	;# 
  1869   000FDF                     INDF2           equ	4063	;# 
  1870   000FE0                     BSR             equ	4064	;# 
  1871   000FE1                     FSR1            equ	4065	;# 
  1872   000FE1                     FSR1L           equ	4065	;# 
  1873   000FE2                     FSR1H           equ	4066	;# 
  1874   000FE3                     PLUSW1          equ	4067	;# 
  1875   000FE4                     PREINC1         equ	4068	;# 
  1876   000FE5                     POSTDEC1        equ	4069	;# 
  1877   000FE6                     POSTINC1        equ	4070	;# 
  1878   000FE7                     INDF1           equ	4071	;# 
  1879   000FE8                     WREG            equ	4072	;# 
  1880   000FE9                     FSR0            equ	4073	;# 
  1881   000FE9                     FSR0L           equ	4073	;# 
  1882   000FEA                     FSR0H           equ	4074	;# 
  1883   000FEB                     PLUSW0          equ	4075	;# 
  1884   000FEC                     PREINC0         equ	4076	;# 
  1885   000FED                     POSTDEC0        equ	4077	;# 
  1886   000FEE                     POSTINC0        equ	4078	;# 
  1887   000FEF                     INDF0           equ	4079	;# 
  1888   000FF0                     INTCON3         equ	4080	;# 
  1889   000FF1                     INTCON2         equ	4081	;# 
  1890   000FF2                     INTCON          equ	4082	;# 
  1891   000FF3                     PROD            equ	4083	;# 
  1892   000FF3                     PRODL           equ	4083	;# 
  1893   000FF4                     PRODH           equ	4084	;# 
  1894   000FF5                     TABLAT          equ	4085	;# 
  1895   000FF6                     TBLPTR          equ	4086	;# 
  1896   000FF6                     TBLPTRL         equ	4086	;# 
  1897   000FF7                     TBLPTRH         equ	4087	;# 
  1898   000FF8                     TBLPTRU         equ	4088	;# 
  1899   000FF9                     PCLAT           equ	4089	;# 
  1900   000FF9                     PC              equ	4089	;# 
  1901   000FF9                     PCL             equ	4089	;# 
  1902   000FFA                     PCLATH          equ	4090	;# 
  1903   000FFB                     PCLATU          equ	4091	;# 
  1904   000FFC                     STKPTR          equ	4092	;# 
  1905   000FFD                     TOS             equ	4093	;# 
  1906   000FFD                     TOSL            equ	4093	;# 
  1907   000FFE                     TOSH            equ	4094	;# 
  1908   000FFF                     TOSU            equ	4095	;# 
  1909   000E80                     MAADR5          equ	3712	;# 
  1910   000E81                     MAADR6          equ	3713	;# 
  1911   000E82                     MAADR3          equ	3714	;# 
  1912   000E83                     MAADR4          equ	3715	;# 
  1913   000E84                     MAADR1          equ	3716	;# 
  1914   000E85                     MAADR2          equ	3717	;# 
  1915   000E8A                     MISTAT          equ	3722	;# 
  1916   000E97                     EFLOCON         equ	3735	;# 
  1917   000E98                     EPAUS           equ	3736	;# 
  1918   000E98                     EPAUSL          equ	3736	;# 
  1919   000E99                     EPAUSH          equ	3737	;# 
  1920   000EA0                     MACON1          equ	3744	;# 
  1921   000EA2                     MACON3          equ	3746	;# 
  1922   000EA3                     MACON4          equ	3747	;# 
  1923   000EA4                     MABBIPG         equ	3748	;# 
  1924   000EA6                     MAIPG           equ	3750	;# 
  1925   000EA6                     MAIPGL          equ	3750	;# 
  1926   000EA7                     MAIPGH          equ	3751	;# 
  1927   000EAA                     MAMXFL          equ	3754	;# 
  1928   000EAA                     MAMXFLL         equ	3754	;# 
  1929   000EAB                     MAMXFLH         equ	3755	;# 
  1930   000EB2                     MICMD           equ	3762	;# 
  1931   000EB4                     MIREGADR        equ	3764	;# 
  1932   000EB6                     MIWR            equ	3766	;# 
  1933   000EB6                     MIWRL           equ	3766	;# 
  1934   000EB7                     MIWRH           equ	3767	;# 
  1935   000EB8                     MIRD            equ	3768	;# 
  1936   000EB8                     MIRDL           equ	3768	;# 
  1937   000EB9                     MIRDH           equ	3769	;# 
  1938   000EC0                     EHT0            equ	3776	;# 
  1939   000EC1                     EHT1            equ	3777	;# 
  1940   000EC2                     EHT2            equ	3778	;# 
  1941   000EC3                     EHT3            equ	3779	;# 
  1942   000EC4                     EHT4            equ	3780	;# 
  1943   000EC5                     EHT5            equ	3781	;# 
  1944   000EC6                     EHT6            equ	3782	;# 
  1945   000EC7                     EHT7            equ	3783	;# 
  1946   000EC8                     EPMM0           equ	3784	;# 
  1947   000EC9                     EPMM1           equ	3785	;# 
  1948   000ECA                     EPMM2           equ	3786	;# 
  1949   000ECB                     EPMM3           equ	3787	;# 
  1950   000ECC                     EPMM4           equ	3788	;# 
  1951   000ECD                     EPMM5           equ	3789	;# 
  1952   000ECE                     EPMM6           equ	3790	;# 
  1953   000ECF                     EPMM7           equ	3791	;# 
  1954   000ED0                     EPMCS           equ	3792	;# 
  1955   000ED0                     EPMCSL          equ	3792	;# 
  1956   000ED1                     EPMCSH          equ	3793	;# 
  1957   000ED4                     EPMO            equ	3796	;# 
  1958   000ED4                     EPMOL           equ	3796	;# 
  1959   000ED5                     EPMOH           equ	3797	;# 
  1960   000ED8                     ERXFCON         equ	3800	;# 
  1961   000ED9                     EPKTCNT         equ	3801	;# 
  1962   000EE2                     EWRPT           equ	3810	;# 
  1963   000EE2                     EWRPTL          equ	3810	;# 
  1964   000EE3                     EWRPTH          equ	3811	;# 
  1965   000EE4                     ETXST           equ	3812	;# 
  1966   000EE4                     ETXSTL          equ	3812	;# 
  1967   000EE5                     ETXSTH          equ	3813	;# 
  1968   000EE6                     ETXND           equ	3814	;# 
  1969   000EE6                     ETXNDL          equ	3814	;# 
  1970   000EE7                     ETXNDH          equ	3815	;# 
  1971   000EE8                     ERXST           equ	3816	;# 
  1972   000EE8                     ERXSTL          equ	3816	;# 
  1973   000EE9                     ERXSTH          equ	3817	;# 
  1974   000EEA                     ERXND           equ	3818	;# 
  1975   000EEA                     ERXNDL          equ	3818	;# 
  1976   000EEB                     ERXNDH          equ	3819	;# 
  1977   000EEC                     ERXRDPT         equ	3820	;# 
  1978   000EEC                     ERXRDPTL        equ	3820	;# 
  1979   000EED                     ERXRDPTH        equ	3821	;# 
  1980   000EEE                     ERXWRPT         equ	3822	;# 
  1981   000EEE                     ERXWRPTL        equ	3822	;# 
  1982   000EEF                     ERXWRPTH        equ	3823	;# 
  1983   000EF0                     EDMAST          equ	3824	;# 
  1984   000EF0                     EDMASTL         equ	3824	;# 
  1985   000EF1                     EDMASTH         equ	3825	;# 
  1986   000EF2                     EDMAND          equ	3826	;# 
  1987   000EF2                     EDMANDL         equ	3826	;# 
  1988   000EF3                     EDMANDH         equ	3827	;# 
  1989   000EF4                     EDMADST         equ	3828	;# 
  1990   000EF4                     EDMADSTL        equ	3828	;# 
  1991   000EF5                     EDMADSTH        equ	3829	;# 
  1992   000EF6                     EDMACS          equ	3830	;# 
  1993   000EF6                     EDMACSL         equ	3830	;# 
  1994   000EF7                     EDMACSH         equ	3831	;# 
  1995   000EFB                     EIE             equ	3835	;# 
  1996   000EFD                     ESTAT           equ	3837	;# 
  1997   000EFE                     ECON2           equ	3838	;# 
  1998   000F60                     EIR             equ	3936	;# 
  1999   000F61                     EDATA           equ	3937	;# 
  2000   000F62                     SSP2CON2        equ	3938	;# 
  2001   000F63                     SSP2CON1        equ	3939	;# 
  2002   000F64                     SSP2STAT        equ	3940	;# 
  2003   000F65                     SSP2ADD         equ	3941	;# 
  2004   000F66                     SSP2BUF         equ	3942	;# 
  2005   000F67                     ECCP2DEL        equ	3943	;# 
  2006   000F68                     ECCP2AS         equ	3944	;# 
  2007   000F69                     ECCP3DEL        equ	3945	;# 
  2008   000F6A                     ECCP3AS         equ	3946	;# 
  2009   000F6B                     RCSTA2          equ	3947	;# 
  2010   000F6C                     TXSTA2          equ	3948	;# 
  2011   000F6D                     TXREG2          equ	3949	;# 
  2012   000F6E                     RCREG2          equ	3950	;# 
  2013   000F6F                     SPBRG2          equ	3951	;# 
  2014   000F70                     CCP5CON         equ	3952	;# 
  2015   000F71                     CCPR5           equ	3953	;# 
  2016   000F71                     CCPR5L          equ	3953	;# 
  2017   000F72                     CCPR5H          equ	3954	;# 
  2018   000F73                     CCP4CON         equ	3955	;# 
  2019   000F74                     CCPR4           equ	3956	;# 
  2020   000F74                     CCPR4L          equ	3956	;# 
  2021   000F75                     CCPR4H          equ	3957	;# 
  2022   000F76                     T4CON           equ	3958	;# 
  2023   000F77                     PR4             equ	3959	;# 
  2024   000F78                     TMR4            equ	3960	;# 
  2025   000F79                     ECCP1DEL        equ	3961	;# 
  2026   000F7A                     ERDPT           equ	3962	;# 
  2027   000F7A                     ERDPTL          equ	3962	;# 
  2028   000F7B                     ERDPTH          equ	3963	;# 
  2029   000F7C                     BAUDCON2        equ	3964	;# 
  2030   000F7C                     BAUDCTL2        equ	3964	;# 
  2031   000F7D                     SPBRGH2         equ	3965	;# 
  2032   000F7E                     BAUDCON1        equ	3966	;# 
  2033   000F7E                     BAUDCON         equ	3966	;# 
  2034   000F7E                     BAUDCTL         equ	3966	;# 
  2035   000F7E                     BAUDCTL1        equ	3966	;# 
  2036   000F7F                     SPBRGH1         equ	3967	;# 
  2037   000F7F                     SPBRGH          equ	3967	;# 
  2038   000F80                     PORTA           equ	3968	;# 
  2039   000F81                     PORTB           equ	3969	;# 
  2040   000F82                     PORTC           equ	3970	;# 
  2041   000F83                     PORTD           equ	3971	;# 
  2042   000F84                     PORTE           equ	3972	;# 
  2043   000F85                     PORTF           equ	3973	;# 
  2044   000F86                     PORTG           equ	3974	;# 
  2045   000F87                     PORTH           equ	3975	;# 
  2046   000F88                     PORTJ           equ	3976	;# 
  2047   000F89                     LATA            equ	3977	;# 
  2048   000F8A                     LATB            equ	3978	;# 
  2049   000F8B                     LATC            equ	3979	;# 
  2050   000F8C                     LATD            equ	3980	;# 
  2051   000F8D                     LATE            equ	3981	;# 
  2052   000F8E                     LATF            equ	3982	;# 
  2053   000F8F                     LATG            equ	3983	;# 
  2054   000F90                     LATH            equ	3984	;# 
  2055   000F91                     LATJ            equ	3985	;# 
  2056   000F92                     TRISA           equ	3986	;# 
  2057   000F92                     DDRA            equ	3986	;# 
  2058   000F93                     TRISB           equ	3987	;# 
  2059   000F93                     DDRB            equ	3987	;# 
  2060   000F94                     TRISC           equ	3988	;# 
  2061   000F94                     DDRC            equ	3988	;# 
  2062   000F95                     TRISD           equ	3989	;# 
  2063   000F95                     DDRD            equ	3989	;# 
  2064   000F96                     TRISE           equ	3990	;# 
  2065   000F96                     DDRE            equ	3990	;# 
  2066   000F97                     TRISF           equ	3991	;# 
  2067   000F97                     DDRF            equ	3991	;# 
  2068   000F98                     TRISG           equ	3992	;# 
  2069   000F98                     DDRG            equ	3992	;# 
  2070   000F99                     TRISH           equ	3993	;# 
  2071   000F99                     DDRH            equ	3993	;# 
  2072   000F9A                     TRISJ           equ	3994	;# 
  2073   000F9A                     DDRJ            equ	3994	;# 
  2074   000F9B                     OSCTUNE         equ	3995	;# 
  2075   000F9C                     MEMCON          equ	3996	;# 
  2076   000F9D                     PIE1            equ	3997	;# 
  2077   000F9E                     PIR1            equ	3998	;# 
  2078   000F9F                     IPR1            equ	3999	;# 
  2079   000FA0                     PIE2            equ	4000	;# 
  2080   000FA1                     PIR2            equ	4001	;# 
  2081   000FA2                     IPR2            equ	4002	;# 
  2082   000FA3                     PIE3            equ	4003	;# 
  2083   000FA4                     PIR3            equ	4004	;# 
  2084   000FA5                     IPR3            equ	4005	;# 
  2085   000FA6                     EECON1          equ	4006	;# 
  2086   000FA7                     EECON2          equ	4007	;# 
  2087   000FAB                     RCSTA1          equ	4011	;# 
  2088   000FAB                     RCSTA           equ	4011	;# 
  2089   000FAC                     TXSTA1          equ	4012	;# 
  2090   000FAC                     TXSTA           equ	4012	;# 
  2091   000FAD                     TXREG1          equ	4013	;# 
  2092   000FAD                     TXREG           equ	4013	;# 
  2093   000FAE                     RCREG1          equ	4014	;# 
  2094   000FAE                     RCREG           equ	4014	;# 
  2095   000FAF                     SPBRG1          equ	4015	;# 
  2096   000FAF                     SPBRG           equ	4015	;# 
  2097   000FB0                     PSPCON          equ	4016	;# 
  2098   000FB1                     T3CON           equ	4017	;# 
  2099   000FB2                     TMR3            equ	4018	;# 
  2100   000FB2                     TMR3L           equ	4018	;# 
  2101   000FB3                     TMR3H           equ	4019	;# 
  2102   000FB4                     CMCON           equ	4020	;# 
  2103   000FB5                     CVRCON          equ	4021	;# 
  2104   000FB6                     ECCP1AS         equ	4022	;# 
  2105   000FB7                     CCP3CON         equ	4023	;# 
  2106   000FB7                     ECCP3CON        equ	4023	;# 
  2107   000FB8                     CCPR3           equ	4024	;# 
  2108   000FB8                     CCPR3L          equ	4024	;# 
  2109   000FB9                     CCPR3H          equ	4025	;# 
  2110   000FBA                     CCP2CON         equ	4026	;# 
  2111   000FBA                     ECCP2CON        equ	4026	;# 
  2112   000FBB                     CCPR2           equ	4027	;# 
  2113   000FBB                     CCPR2L          equ	4027	;# 
  2114   000FBC                     CCPR2H          equ	4028	;# 
  2115   000FBD                     CCP1CON         equ	4029	;# 
  2116   000FBD                     ECCP1CON        equ	4029	;# 
  2117   000FBE                     CCPR1           equ	4030	;# 
  2118   000FBE                     CCPR1L          equ	4030	;# 
  2119   000FBF                     CCPR1H          equ	4031	;# 
  2120   000FC0                     ADCON2          equ	4032	;# 
  2121   000FC1                     ADCON1          equ	4033	;# 
  2122   000FC2                     ADCON0          equ	4034	;# 
  2123   000FC3                     ADRES           equ	4035	;# 
  2124   000FC3                     ADRESL          equ	4035	;# 
  2125   000FC4                     ADRESH          equ	4036	;# 
  2126   000FC5                     SSP1CON2        equ	4037	;# 
  2127   000FC5                     SSPCON2         equ	4037	;# 
  2128   000FC6                     SSP1CON1        equ	4038	;# 
  2129   000FC6                     SSPCON1         equ	4038	;# 
  2130   000FC7                     SSP1STAT        equ	4039	;# 
  2131   000FC7                     SSPSTAT         equ	4039	;# 
  2132   000FC8                     SSP1ADD         equ	4040	;# 
  2133   000FC8                     SSPADD          equ	4040	;# 
  2134   000FC9                     SSP1BUF         equ	4041	;# 
  2135   000FC9                     SSPBUF          equ	4041	;# 
  2136   000FCA                     T2CON           equ	4042	;# 
  2137   000FCB                     PR2             equ	4043	;# 
  2138   000FCC                     TMR2            equ	4044	;# 
  2139   000FCD                     T1CON           equ	4045	;# 
  2140   000FCE                     TMR1            equ	4046	;# 
  2141   000FCE                     TMR1L           equ	4046	;# 
  2142   000FCF                     TMR1H           equ	4047	;# 
  2143   000FD0                     RCON            equ	4048	;# 
  2144   000FD1                     WDTCON          equ	4049	;# 
  2145   000FD2                     ECON1           equ	4050	;# 
  2146   000FD3                     OSCCON          equ	4051	;# 
  2147   000FD5                     T0CON           equ	4053	;# 
  2148   000FD6                     TMR0            equ	4054	;# 
  2149   000FD6                     TMR0L           equ	4054	;# 
  2150   000FD7                     TMR0H           equ	4055	;# 
  2151   000FD8                     STATUS          equ	4056	;# 
  2152   000FD9                     FSR2            equ	4057	;# 
  2153   000FD9                     FSR2L           equ	4057	;# 
  2154   000FDA                     FSR2H           equ	4058	;# 
  2155   000FDB                     PLUSW2          equ	4059	;# 
  2156   000FDC                     PREINC2         equ	4060	;# 
  2157   000FDD                     POSTDEC2        equ	4061	;# 
  2158   000FDE                     POSTINC2        equ	4062	;# 
  2159   000FDF                     INDF2           equ	4063	;# 
  2160   000FE0                     BSR             equ	4064	;# 
  2161   000FE1                     FSR1            equ	4065	;# 
  2162   000FE1                     FSR1L           equ	4065	;# 
  2163   000FE2                     FSR1H           equ	4066	;# 
  2164   000FE3                     PLUSW1          equ	4067	;# 
  2165   000FE4                     PREINC1         equ	4068	;# 
  2166   000FE5                     POSTDEC1        equ	4069	;# 
  2167   000FE6                     POSTINC1        equ	4070	;# 
  2168   000FE7                     INDF1           equ	4071	;# 
  2169   000FE8                     WREG            equ	4072	;# 
  2170   000FE9                     FSR0            equ	4073	;# 
  2171   000FE9                     FSR0L           equ	4073	;# 
  2172   000FEA                     FSR0H           equ	4074	;# 
  2173   000FEB                     PLUSW0          equ	4075	;# 
  2174   000FEC                     PREINC0         equ	4076	;# 
  2175   000FED                     POSTDEC0        equ	4077	;# 
  2176   000FEE                     POSTINC0        equ	4078	;# 
  2177   000FEF                     INDF0           equ	4079	;# 
  2178   000FF0                     INTCON3         equ	4080	;# 
  2179   000FF1                     INTCON2         equ	4081	;# 
  2180   000FF2                     INTCON          equ	4082	;# 
  2181   000FF3                     PROD            equ	4083	;# 
  2182   000FF3                     PRODL           equ	4083	;# 
  2183   000FF4                     PRODH           equ	4084	;# 
  2184   000FF5                     TABLAT          equ	4085	;# 
  2185   000FF6                     TBLPTR          equ	4086	;# 
  2186   000FF6                     TBLPTRL         equ	4086	;# 
  2187   000FF7                     TBLPTRH         equ	4087	;# 
  2188   000FF8                     TBLPTRU         equ	4088	;# 
  2189   000FF9                     PCLAT           equ	4089	;# 
  2190   000FF9                     PC              equ	4089	;# 
  2191   000FF9                     PCL             equ	4089	;# 
  2192   000FFA                     PCLATH          equ	4090	;# 
  2193   000FFB                     PCLATU          equ	4091	;# 
  2194   000FFC                     STKPTR          equ	4092	;# 
  2195   000FFD                     TOS             equ	4093	;# 
  2196   000FFD                     TOSL            equ	4093	;# 
  2197   000FFE                     TOSH            equ	4094	;# 
  2198   000FFF                     TOSU            equ	4095	;# 
  2199   000E80                     MAADR5          equ	3712	;# 
  2200   000E81                     MAADR6          equ	3713	;# 
  2201   000E82                     MAADR3          equ	3714	;# 
  2202   000E83                     MAADR4          equ	3715	;# 
  2203   000E84                     MAADR1          equ	3716	;# 
  2204   000E85                     MAADR2          equ	3717	;# 
  2205   000E8A                     MISTAT          equ	3722	;# 
  2206   000E97                     EFLOCON         equ	3735	;# 
  2207   000E98                     EPAUS           equ	3736	;# 
  2208   000E98                     EPAUSL          equ	3736	;# 
  2209   000E99                     EPAUSH          equ	3737	;# 
  2210   000EA0                     MACON1          equ	3744	;# 
  2211   000EA2                     MACON3          equ	3746	;# 
  2212   000EA3                     MACON4          equ	3747	;# 
  2213   000EA4                     MABBIPG         equ	3748	;# 
  2214   000EA6                     MAIPG           equ	3750	;# 
  2215   000EA6                     MAIPGL          equ	3750	;# 
  2216   000EA7                     MAIPGH          equ	3751	;# 
  2217   000EAA                     MAMXFL          equ	3754	;# 
  2218   000EAA                     MAMXFLL         equ	3754	;# 
  2219   000EAB                     MAMXFLH         equ	3755	;# 
  2220   000EB2                     MICMD           equ	3762	;# 
  2221   000EB4                     MIREGADR        equ	3764	;# 
  2222   000EB6                     MIWR            equ	3766	;# 
  2223   000EB6                     MIWRL           equ	3766	;# 
  2224   000EB7                     MIWRH           equ	3767	;# 
  2225   000EB8                     MIRD            equ	3768	;# 
  2226   000EB8                     MIRDL           equ	3768	;# 
  2227   000EB9                     MIRDH           equ	3769	;# 
  2228   000EC0                     EHT0            equ	3776	;# 
  2229   000EC1                     EHT1            equ	3777	;# 
  2230   000EC2                     EHT2            equ	3778	;# 
  2231   000EC3                     EHT3            equ	3779	;# 
  2232   000EC4                     EHT4            equ	3780	;# 
  2233   000EC5                     EHT5            equ	3781	;# 
  2234   000EC6                     EHT6            equ	3782	;# 
  2235   000EC7                     EHT7            equ	3783	;# 
  2236   000EC8                     EPMM0           equ	3784	;# 
  2237   000EC9                     EPMM1           equ	3785	;# 
  2238   000ECA                     EPMM2           equ	3786	;# 
  2239   000ECB                     EPMM3           equ	3787	;# 
  2240   000ECC                     EPMM4           equ	3788	;# 
  2241   000ECD                     EPMM5           equ	3789	;# 
  2242   000ECE                     EPMM6           equ	3790	;# 
  2243   000ECF                     EPMM7           equ	3791	;# 
  2244   000ED0                     EPMCS           equ	3792	;# 
  2245   000ED0                     EPMCSL          equ	3792	;# 
  2246   000ED1                     EPMCSH          equ	3793	;# 
  2247   000ED4                     EPMO            equ	3796	;# 
  2248   000ED4                     EPMOL           equ	3796	;# 
  2249   000ED5                     EPMOH           equ	3797	;# 
  2250   000ED8                     ERXFCON         equ	3800	;# 
  2251   000ED9                     EPKTCNT         equ	3801	;# 
  2252   000EE2                     EWRPT           equ	3810	;# 
  2253   000EE2                     EWRPTL          equ	3810	;# 
  2254   000EE3                     EWRPTH          equ	3811	;# 
  2255   000EE4                     ETXST           equ	3812	;# 
  2256   000EE4                     ETXSTL          equ	3812	;# 
  2257   000EE5                     ETXSTH          equ	3813	;# 
  2258   000EE6                     ETXND           equ	3814	;# 
  2259   000EE6                     ETXNDL          equ	3814	;# 
  2260   000EE7                     ETXNDH          equ	3815	;# 
  2261   000EE8                     ERXST           equ	3816	;# 
  2262   000EE8                     ERXSTL          equ	3816	;# 
  2263   000EE9                     ERXSTH          equ	3817	;# 
  2264   000EEA                     ERXND           equ	3818	;# 
  2265   000EEA                     ERXNDL          equ	3818	;# 
  2266   000EEB                     ERXNDH          equ	3819	;# 
  2267   000EEC                     ERXRDPT         equ	3820	;# 
  2268   000EEC                     ERXRDPTL        equ	3820	;# 
  2269   000EED                     ERXRDPTH        equ	3821	;# 
  2270   000EEE                     ERXWRPT         equ	3822	;# 
  2271   000EEE                     ERXWRPTL        equ	3822	;# 
  2272   000EEF                     ERXWRPTH        equ	3823	;# 
  2273   000EF0                     EDMAST          equ	3824	;# 
  2274   000EF0                     EDMASTL         equ	3824	;# 
  2275   000EF1                     EDMASTH         equ	3825	;# 
  2276   000EF2                     EDMAND          equ	3826	;# 
  2277   000EF2                     EDMANDL         equ	3826	;# 
  2278   000EF3                     EDMANDH         equ	3827	;# 
  2279   000EF4                     EDMADST         equ	3828	;# 
  2280   000EF4                     EDMADSTL        equ	3828	;# 
  2281   000EF5                     EDMADSTH        equ	3829	;# 
  2282   000EF6                     EDMACS          equ	3830	;# 
  2283   000EF6                     EDMACSL         equ	3830	;# 
  2284   000EF7                     EDMACSH         equ	3831	;# 
  2285   000EFB                     EIE             equ	3835	;# 
  2286   000EFD                     ESTAT           equ	3837	;# 
  2287   000EFE                     ECON2           equ	3838	;# 
  2288   000F60                     EIR             equ	3936	;# 
  2289   000F61                     EDATA           equ	3937	;# 
  2290   000F62                     SSP2CON2        equ	3938	;# 
  2291   000F63                     SSP2CON1        equ	3939	;# 
  2292   000F64                     SSP2STAT        equ	3940	;# 
  2293   000F65                     SSP2ADD         equ	3941	;# 
  2294   000F66                     SSP2BUF         equ	3942	;# 
  2295   000F67                     ECCP2DEL        equ	3943	;# 
  2296   000F68                     ECCP2AS         equ	3944	;# 
  2297   000F69                     ECCP3DEL        equ	3945	;# 
  2298   000F6A                     ECCP3AS         equ	3946	;# 
  2299   000F6B                     RCSTA2          equ	3947	;# 
  2300   000F6C                     TXSTA2          equ	3948	;# 
  2301   000F6D                     TXREG2          equ	3949	;# 
  2302   000F6E                     RCREG2          equ	3950	;# 
  2303   000F6F                     SPBRG2          equ	3951	;# 
  2304   000F70                     CCP5CON         equ	3952	;# 
  2305   000F71                     CCPR5           equ	3953	;# 
  2306   000F71                     CCPR5L          equ	3953	;# 
  2307   000F72                     CCPR5H          equ	3954	;# 
  2308   000F73                     CCP4CON         equ	3955	;# 
  2309   000F74                     CCPR4           equ	3956	;# 
  2310   000F74                     CCPR4L          equ	3956	;# 
  2311   000F75                     CCPR4H          equ	3957	;# 
  2312   000F76                     T4CON           equ	3958	;# 
  2313   000F77                     PR4             equ	3959	;# 
  2314   000F78                     TMR4            equ	3960	;# 
  2315   000F79                     ECCP1DEL        equ	3961	;# 
  2316   000F7A                     ERDPT           equ	3962	;# 
  2317   000F7A                     ERDPTL          equ	3962	;# 
  2318   000F7B                     ERDPTH          equ	3963	;# 
  2319   000F7C                     BAUDCON2        equ	3964	;# 
  2320   000F7C                     BAUDCTL2        equ	3964	;# 
  2321   000F7D                     SPBRGH2         equ	3965	;# 
  2322   000F7E                     BAUDCON1        equ	3966	;# 
  2323   000F7E                     BAUDCON         equ	3966	;# 
  2324   000F7E                     BAUDCTL         equ	3966	;# 
  2325   000F7E                     BAUDCTL1        equ	3966	;# 
  2326   000F7F                     SPBRGH1         equ	3967	;# 
  2327   000F7F                     SPBRGH          equ	3967	;# 
  2328   000F80                     PORTA           equ	3968	;# 
  2329   000F81                     PORTB           equ	3969	;# 
  2330   000F82                     PORTC           equ	3970	;# 
  2331   000F83                     PORTD           equ	3971	;# 
  2332   000F84                     PORTE           equ	3972	;# 
  2333   000F85                     PORTF           equ	3973	;# 
  2334   000F86                     PORTG           equ	3974	;# 
  2335   000F87                     PORTH           equ	3975	;# 
  2336   000F88                     PORTJ           equ	3976	;# 
  2337   000F89                     LATA            equ	3977	;# 
  2338   000F8A                     LATB            equ	3978	;# 
  2339   000F8B                     LATC            equ	3979	;# 
  2340   000F8C                     LATD            equ	3980	;# 
  2341   000F8D                     LATE            equ	3981	;# 
  2342   000F8E                     LATF            equ	3982	;# 
  2343   000F8F                     LATG            equ	3983	;# 
  2344   000F90                     LATH            equ	3984	;# 
  2345   000F91                     LATJ            equ	3985	;# 
  2346   000F92                     TRISA           equ	3986	;# 
  2347   000F92                     DDRA            equ	3986	;# 
  2348   000F93                     TRISB           equ	3987	;# 
  2349   000F93                     DDRB            equ	3987	;# 
  2350   000F94                     TRISC           equ	3988	;# 
  2351   000F94                     DDRC            equ	3988	;# 
  2352   000F95                     TRISD           equ	3989	;# 
  2353   000F95                     DDRD            equ	3989	;# 
  2354   000F96                     TRISE           equ	3990	;# 
  2355   000F96                     DDRE            equ	3990	;# 
  2356   000F97                     TRISF           equ	3991	;# 
  2357   000F97                     DDRF            equ	3991	;# 
  2358   000F98                     TRISG           equ	3992	;# 
  2359   000F98                     DDRG            equ	3992	;# 
  2360   000F99                     TRISH           equ	3993	;# 
  2361   000F99                     DDRH            equ	3993	;# 
  2362   000F9A                     TRISJ           equ	3994	;# 
  2363   000F9A                     DDRJ            equ	3994	;# 
  2364   000F9B                     OSCTUNE         equ	3995	;# 
  2365   000F9C                     MEMCON          equ	3996	;# 
  2366   000F9D                     PIE1            equ	3997	;# 
  2367   000F9E                     PIR1            equ	3998	;# 
  2368   000F9F                     IPR1            equ	3999	;# 
  2369   000FA0                     PIE2            equ	4000	;# 
  2370   000FA1                     PIR2            equ	4001	;# 
  2371   000FA2                     IPR2            equ	4002	;# 
  2372   000FA3                     PIE3            equ	4003	;# 
  2373   000FA4                     PIR3            equ	4004	;# 
  2374   000FA5                     IPR3            equ	4005	;# 
  2375   000FA6                     EECON1          equ	4006	;# 
  2376   000FA7                     EECON2          equ	4007	;# 
  2377   000FAB                     RCSTA1          equ	4011	;# 
  2378   000FAB                     RCSTA           equ	4011	;# 
  2379   000FAC                     TXSTA1          equ	4012	;# 
  2380   000FAC                     TXSTA           equ	4012	;# 
  2381   000FAD                     TXREG1          equ	4013	;# 
  2382   000FAD                     TXREG           equ	4013	;# 
  2383   000FAE                     RCREG1          equ	4014	;# 
  2384   000FAE                     RCREG           equ	4014	;# 
  2385   000FAF                     SPBRG1          equ	4015	;# 
  2386   000FAF                     SPBRG           equ	4015	;# 
  2387   000FB0                     PSPCON          equ	4016	;# 
  2388   000FB1                     T3CON           equ	4017	;# 
  2389   000FB2                     TMR3            equ	4018	;# 
  2390   000FB2                     TMR3L           equ	4018	;# 
  2391   000FB3                     TMR3H           equ	4019	;# 
  2392   000FB4                     CMCON           equ	4020	;# 
  2393   000FB5                     CVRCON          equ	4021	;# 
  2394   000FB6                     ECCP1AS         equ	4022	;# 
  2395   000FB7                     CCP3CON         equ	4023	;# 
  2396   000FB7                     ECCP3CON        equ	4023	;# 
  2397   000FB8                     CCPR3           equ	4024	;# 
  2398   000FB8                     CCPR3L          equ	4024	;# 
  2399   000FB9                     CCPR3H          equ	4025	;# 
  2400   000FBA                     CCP2CON         equ	4026	;# 
  2401   000FBA                     ECCP2CON        equ	4026	;# 
  2402   000FBB                     CCPR2           equ	4027	;# 
  2403   000FBB                     CCPR2L          equ	4027	;# 
  2404   000FBC                     CCPR2H          equ	4028	;# 
  2405   000FBD                     CCP1CON         equ	4029	;# 
  2406   000FBD                     ECCP1CON        equ	4029	;# 
  2407   000FBE                     CCPR1           equ	4030	;# 
  2408   000FBE                     CCPR1L          equ	4030	;# 
  2409   000FBF                     CCPR1H          equ	4031	;# 
  2410   000FC0                     ADCON2          equ	4032	;# 
  2411   000FC1                     ADCON1          equ	4033	;# 
  2412   000FC2                     ADCON0          equ	4034	;# 
  2413   000FC3                     ADRES           equ	4035	;# 
  2414   000FC3                     ADRESL          equ	4035	;# 
  2415   000FC4                     ADRESH          equ	4036	;# 
  2416   000FC5                     SSP1CON2        equ	4037	;# 
  2417   000FC5                     SSPCON2         equ	4037	;# 
  2418   000FC6                     SSP1CON1        equ	4038	;# 
  2419   000FC6                     SSPCON1         equ	4038	;# 
  2420   000FC7                     SSP1STAT        equ	4039	;# 
  2421   000FC7                     SSPSTAT         equ	4039	;# 
  2422   000FC8                     SSP1ADD         equ	4040	;# 
  2423   000FC8                     SSPADD          equ	4040	;# 
  2424   000FC9                     SSP1BUF         equ	4041	;# 
  2425   000FC9                     SSPBUF          equ	4041	;# 
  2426   000FCA                     T2CON           equ	4042	;# 
  2427   000FCB                     PR2             equ	4043	;# 
  2428   000FCC                     TMR2            equ	4044	;# 
  2429   000FCD                     T1CON           equ	4045	;# 
  2430   000FCE                     TMR1            equ	4046	;# 
  2431   000FCE                     TMR1L           equ	4046	;# 
  2432   000FCF                     TMR1H           equ	4047	;# 
  2433   000FD0                     RCON            equ	4048	;# 
  2434   000FD1                     WDTCON          equ	4049	;# 
  2435   000FD2                     ECON1           equ	4050	;# 
  2436   000FD3                     OSCCON          equ	4051	;# 
  2437   000FD5                     T0CON           equ	4053	;# 
  2438   000FD6                     TMR0            equ	4054	;# 
  2439   000FD6                     TMR0L           equ	4054	;# 
  2440   000FD7                     TMR0H           equ	4055	;# 
  2441   000FD8                     STATUS          equ	4056	;# 
  2442   000FD9                     FSR2            equ	4057	;# 
  2443   000FD9                     FSR2L           equ	4057	;# 
  2444   000FDA                     FSR2H           equ	4058	;# 
  2445   000FDB                     PLUSW2          equ	4059	;# 
  2446   000FDC                     PREINC2         equ	4060	;# 
  2447   000FDD                     POSTDEC2        equ	4061	;# 
  2448   000FDE                     POSTINC2        equ	4062	;# 
  2449   000FDF                     INDF2           equ	4063	;# 
  2450   000FE0                     BSR             equ	4064	;# 
  2451   000FE1                     FSR1            equ	4065	;# 
  2452   000FE1                     FSR1L           equ	4065	;# 
  2453   000FE2                     FSR1H           equ	4066	;# 
  2454   000FE3                     PLUSW1          equ	4067	;# 
  2455   000FE4                     PREINC1         equ	4068	;# 
  2456   000FE5                     POSTDEC1        equ	4069	;# 
  2457   000FE6                     POSTINC1        equ	4070	;# 
  2458   000FE7                     INDF1           equ	4071	;# 
  2459   000FE8                     WREG            equ	4072	;# 
  2460   000FE9                     FSR0            equ	4073	;# 
  2461   000FE9                     FSR0L           equ	4073	;# 
  2462   000FEA                     FSR0H           equ	4074	;# 
  2463   000FEB                     PLUSW0          equ	4075	;# 
  2464   000FEC                     PREINC0         equ	4076	;# 
  2465   000FED                     POSTDEC0        equ	4077	;# 
  2466   000FEE                     POSTINC0        equ	4078	;# 
  2467   000FEF                     INDF0           equ	4079	;# 
  2468   000FF0                     INTCON3         equ	4080	;# 
  2469   000FF1                     INTCON2         equ	4081	;# 
  2470   000FF2                     INTCON          equ	4082	;# 
  2471   000FF3                     PROD            equ	4083	;# 
  2472   000FF3                     PRODL           equ	4083	;# 
  2473   000FF4                     PRODH           equ	4084	;# 
  2474   000FF5                     TABLAT          equ	4085	;# 
  2475   000FF6                     TBLPTR          equ	4086	;# 
  2476   000FF6                     TBLPTRL         equ	4086	;# 
  2477   000FF7                     TBLPTRH         equ	4087	;# 
  2478   000FF8                     TBLPTRU         equ	4088	;# 
  2479   000FF9                     PCLAT           equ	4089	;# 
  2480   000FF9                     PC              equ	4089	;# 
  2481   000FF9                     PCL             equ	4089	;# 
  2482   000FFA                     PCLATH          equ	4090	;# 
  2483   000FFB                     PCLATU          equ	4091	;# 
  2484   000FFC                     STKPTR          equ	4092	;# 
  2485   000FFD                     TOS             equ	4093	;# 
  2486   000FFD                     TOSL            equ	4093	;# 
  2487   000FFE                     TOSH            equ	4094	;# 
  2488   000FFF                     TOSU            equ	4095	;# 
  2489   000E80                     MAADR5          equ	3712	;# 
  2490   000E81                     MAADR6          equ	3713	;# 
  2491   000E82                     MAADR3          equ	3714	;# 
  2492   000E83                     MAADR4          equ	3715	;# 
  2493   000E84                     MAADR1          equ	3716	;# 
  2494   000E85                     MAADR2          equ	3717	;# 
  2495   000E8A                     MISTAT          equ	3722	;# 
  2496   000E97                     EFLOCON         equ	3735	;# 
  2497   000E98                     EPAUS           equ	3736	;# 
  2498   000E98                     EPAUSL          equ	3736	;# 
  2499   000E99                     EPAUSH          equ	3737	;# 
  2500   000EA0                     MACON1          equ	3744	;# 
  2501   000EA2                     MACON3          equ	3746	;# 
  2502   000EA3                     MACON4          equ	3747	;# 
  2503   000EA4                     MABBIPG         equ	3748	;# 
  2504   000EA6                     MAIPG           equ	3750	;# 
  2505   000EA6                     MAIPGL          equ	3750	;# 
  2506   000EA7                     MAIPGH          equ	3751	;# 
  2507   000EAA                     MAMXFL          equ	3754	;# 
  2508   000EAA                     MAMXFLL         equ	3754	;# 
  2509   000EAB                     MAMXFLH         equ	3755	;# 
  2510   000EB2                     MICMD           equ	3762	;# 
  2511   000EB4                     MIREGADR        equ	3764	;# 
  2512   000EB6                     MIWR            equ	3766	;# 
  2513   000EB6                     MIWRL           equ	3766	;# 
  2514   000EB7                     MIWRH           equ	3767	;# 
  2515   000EB8                     MIRD            equ	3768	;# 
  2516   000EB8                     MIRDL           equ	3768	;# 
  2517   000EB9                     MIRDH           equ	3769	;# 
  2518   000EC0                     EHT0            equ	3776	;# 
  2519   000EC1                     EHT1            equ	3777	;# 
  2520   000EC2                     EHT2            equ	3778	;# 
  2521   000EC3                     EHT3            equ	3779	;# 
  2522   000EC4                     EHT4            equ	3780	;# 
  2523   000EC5                     EHT5            equ	3781	;# 
  2524   000EC6                     EHT6            equ	3782	;# 
  2525   000EC7                     EHT7            equ	3783	;# 
  2526   000EC8                     EPMM0           equ	3784	;# 
  2527   000EC9                     EPMM1           equ	3785	;# 
  2528   000ECA                     EPMM2           equ	3786	;# 
  2529   000ECB                     EPMM3           equ	3787	;# 
  2530   000ECC                     EPMM4           equ	3788	;# 
  2531   000ECD                     EPMM5           equ	3789	;# 
  2532   000ECE                     EPMM6           equ	3790	;# 
  2533   000ECF                     EPMM7           equ	3791	;# 
  2534   000ED0                     EPMCS           equ	3792	;# 
  2535   000ED0                     EPMCSL          equ	3792	;# 
  2536   000ED1                     EPMCSH          equ	3793	;# 
  2537   000ED4                     EPMO            equ	3796	;# 
  2538   000ED4                     EPMOL           equ	3796	;# 
  2539   000ED5                     EPMOH           equ	3797	;# 
  2540   000ED8                     ERXFCON         equ	3800	;# 
  2541   000ED9                     EPKTCNT         equ	3801	;# 
  2542   000EE2                     EWRPT           equ	3810	;# 
  2543   000EE2                     EWRPTL          equ	3810	;# 
  2544   000EE3                     EWRPTH          equ	3811	;# 
  2545   000EE4                     ETXST           equ	3812	;# 
  2546   000EE4                     ETXSTL          equ	3812	;# 
  2547   000EE5                     ETXSTH          equ	3813	;# 
  2548   000EE6                     ETXND           equ	3814	;# 
  2549   000EE6                     ETXNDL          equ	3814	;# 
  2550   000EE7                     ETXNDH          equ	3815	;# 
  2551   000EE8                     ERXST           equ	3816	;# 
  2552   000EE8                     ERXSTL          equ	3816	;# 
  2553   000EE9                     ERXSTH          equ	3817	;# 
  2554   000EEA                     ERXND           equ	3818	;# 
  2555   000EEA                     ERXNDL          equ	3818	;# 
  2556   000EEB                     ERXNDH          equ	3819	;# 
  2557   000EEC                     ERXRDPT         equ	3820	;# 
  2558   000EEC                     ERXRDPTL        equ	3820	;# 
  2559   000EED                     ERXRDPTH        equ	3821	;# 
  2560   000EEE                     ERXWRPT         equ	3822	;# 
  2561   000EEE                     ERXWRPTL        equ	3822	;# 
  2562   000EEF                     ERXWRPTH        equ	3823	;# 
  2563   000EF0                     EDMAST          equ	3824	;# 
  2564   000EF0                     EDMASTL         equ	3824	;# 
  2565   000EF1                     EDMASTH         equ	3825	;# 
  2566   000EF2                     EDMAND          equ	3826	;# 
  2567   000EF2                     EDMANDL         equ	3826	;# 
  2568   000EF3                     EDMANDH         equ	3827	;# 
  2569   000EF4                     EDMADST         equ	3828	;# 
  2570   000EF4                     EDMADSTL        equ	3828	;# 
  2571   000EF5                     EDMADSTH        equ	3829	;# 
  2572   000EF6                     EDMACS          equ	3830	;# 
  2573   000EF6                     EDMACSL         equ	3830	;# 
  2574   000EF7                     EDMACSH         equ	3831	;# 
  2575   000EFB                     EIE             equ	3835	;# 
  2576   000EFD                     ESTAT           equ	3837	;# 
  2577   000EFE                     ECON2           equ	3838	;# 
  2578   000F60                     EIR             equ	3936	;# 
  2579   000F61                     EDATA           equ	3937	;# 
  2580   000F62                     SSP2CON2        equ	3938	;# 
  2581   000F63                     SSP2CON1        equ	3939	;# 
  2582   000F64                     SSP2STAT        equ	3940	;# 
  2583   000F65                     SSP2ADD         equ	3941	;# 
  2584   000F66                     SSP2BUF         equ	3942	;# 
  2585   000F67                     ECCP2DEL        equ	3943	;# 
  2586   000F68                     ECCP2AS         equ	3944	;# 
  2587   000F69                     ECCP3DEL        equ	3945	;# 
  2588   000F6A                     ECCP3AS         equ	3946	;# 
  2589   000F6B                     RCSTA2          equ	3947	;# 
  2590   000F6C                     TXSTA2          equ	3948	;# 
  2591   000F6D                     TXREG2          equ	3949	;# 
  2592   000F6E                     RCREG2          equ	3950	;# 
  2593   000F6F                     SPBRG2          equ	3951	;# 
  2594   000F70                     CCP5CON         equ	3952	;# 
  2595   000F71                     CCPR5           equ	3953	;# 
  2596   000F71                     CCPR5L          equ	3953	;# 
  2597   000F72                     CCPR5H          equ	3954	;# 
  2598   000F73                     CCP4CON         equ	3955	;# 
  2599   000F74                     CCPR4           equ	3956	;# 
  2600   000F74                     CCPR4L          equ	3956	;# 
  2601   000F75                     CCPR4H          equ	3957	;# 
  2602   000F76                     T4CON           equ	3958	;# 
  2603   000F77                     PR4             equ	3959	;# 
  2604   000F78                     TMR4            equ	3960	;# 
  2605   000F79                     ECCP1DEL        equ	3961	;# 
  2606   000F7A                     ERDPT           equ	3962	;# 
  2607   000F7A                     ERDPTL          equ	3962	;# 
  2608   000F7B                     ERDPTH          equ	3963	;# 
  2609   000F7C                     BAUDCON2        equ	3964	;# 
  2610   000F7C                     BAUDCTL2        equ	3964	;# 
  2611   000F7D                     SPBRGH2         equ	3965	;# 
  2612   000F7E                     BAUDCON1        equ	3966	;# 
  2613   000F7E                     BAUDCON         equ	3966	;# 
  2614   000F7E                     BAUDCTL         equ	3966	;# 
  2615   000F7E                     BAUDCTL1        equ	3966	;# 
  2616   000F7F                     SPBRGH1         equ	3967	;# 
  2617   000F7F                     SPBRGH          equ	3967	;# 
  2618   000F80                     PORTA           equ	3968	;# 
  2619   000F81                     PORTB           equ	3969	;# 
  2620   000F82                     PORTC           equ	3970	;# 
  2621   000F83                     PORTD           equ	3971	;# 
  2622   000F84                     PORTE           equ	3972	;# 
  2623   000F85                     PORTF           equ	3973	;# 
  2624   000F86                     PORTG           equ	3974	;# 
  2625   000F87                     PORTH           equ	3975	;# 
  2626   000F88                     PORTJ           equ	3976	;# 
  2627   000F89                     LATA            equ	3977	;# 
  2628   000F8A                     LATB            equ	3978	;# 
  2629   000F8B                     LATC            equ	3979	;# 
  2630   000F8C                     LATD            equ	3980	;# 
  2631   000F8D                     LATE            equ	3981	;# 
  2632   000F8E                     LATF            equ	3982	;# 
  2633   000F8F                     LATG            equ	3983	;# 
  2634   000F90                     LATH            equ	3984	;# 
  2635   000F91                     LATJ            equ	3985	;# 
  2636   000F92                     TRISA           equ	3986	;# 
  2637   000F92                     DDRA            equ	3986	;# 
  2638   000F93                     TRISB           equ	3987	;# 
  2639   000F93                     DDRB            equ	3987	;# 
  2640   000F94                     TRISC           equ	3988	;# 
  2641   000F94                     DDRC            equ	3988	;# 
  2642   000F95                     TRISD           equ	3989	;# 
  2643   000F95                     DDRD            equ	3989	;# 
  2644   000F96                     TRISE           equ	3990	;# 
  2645   000F96                     DDRE            equ	3990	;# 
  2646   000F97                     TRISF           equ	3991	;# 
  2647   000F97                     DDRF            equ	3991	;# 
  2648   000F98                     TRISG           equ	3992	;# 
  2649   000F98                     DDRG            equ	3992	;# 
  2650   000F99                     TRISH           equ	3993	;# 
  2651   000F99                     DDRH            equ	3993	;# 
  2652   000F9A                     TRISJ           equ	3994	;# 
  2653   000F9A                     DDRJ            equ	3994	;# 
  2654   000F9B                     OSCTUNE         equ	3995	;# 
  2655   000F9C                     MEMCON          equ	3996	;# 
  2656   000F9D                     PIE1            equ	3997	;# 
  2657   000F9E                     PIR1            equ	3998	;# 
  2658   000F9F                     IPR1            equ	3999	;# 
  2659   000FA0                     PIE2            equ	4000	;# 
  2660   000FA1                     PIR2            equ	4001	;# 
  2661   000FA2                     IPR2            equ	4002	;# 
  2662   000FA3                     PIE3            equ	4003	;# 
  2663   000FA4                     PIR3            equ	4004	;# 
  2664   000FA5                     IPR3            equ	4005	;# 
  2665   000FA6                     EECON1          equ	4006	;# 
  2666   000FA7                     EECON2          equ	4007	;# 
  2667   000FAB                     RCSTA1          equ	4011	;# 
  2668   000FAB                     RCSTA           equ	4011	;# 
  2669   000FAC                     TXSTA1          equ	4012	;# 
  2670   000FAC                     TXSTA           equ	4012	;# 
  2671   000FAD                     TXREG1          equ	4013	;# 
  2672   000FAD                     TXREG           equ	4013	;# 
  2673   000FAE                     RCREG1          equ	4014	;# 
  2674   000FAE                     RCREG           equ	4014	;# 
  2675   000FAF                     SPBRG1          equ	4015	;# 
  2676   000FAF                     SPBRG           equ	4015	;# 
  2677   000FB0                     PSPCON          equ	4016	;# 
  2678   000FB1                     T3CON           equ	4017	;# 
  2679   000FB2                     TMR3            equ	4018	;# 
  2680   000FB2                     TMR3L           equ	4018	;# 
  2681   000FB3                     TMR3H           equ	4019	;# 
  2682   000FB4                     CMCON           equ	4020	;# 
  2683   000FB5                     CVRCON          equ	4021	;# 
  2684   000FB6                     ECCP1AS         equ	4022	;# 
  2685   000FB7                     CCP3CON         equ	4023	;# 
  2686   000FB7                     ECCP3CON        equ	4023	;# 
  2687   000FB8                     CCPR3           equ	4024	;# 
  2688   000FB8                     CCPR3L          equ	4024	;# 
  2689   000FB9                     CCPR3H          equ	4025	;# 
  2690   000FBA                     CCP2CON         equ	4026	;# 
  2691   000FBA                     ECCP2CON        equ	4026	;# 
  2692   000FBB                     CCPR2           equ	4027	;# 
  2693   000FBB                     CCPR2L          equ	4027	;# 
  2694   000FBC                     CCPR2H          equ	4028	;# 
  2695   000FBD                     CCP1CON         equ	4029	;# 
  2696   000FBD                     ECCP1CON        equ	4029	;# 
  2697   000FBE                     CCPR1           equ	4030	;# 
  2698   000FBE                     CCPR1L          equ	4030	;# 
  2699   000FBF                     CCPR1H          equ	4031	;# 
  2700   000FC0                     ADCON2          equ	4032	;# 
  2701   000FC1                     ADCON1          equ	4033	;# 
  2702   000FC2                     ADCON0          equ	4034	;# 
  2703   000FC3                     ADRES           equ	4035	;# 
  2704   000FC3                     ADRESL          equ	4035	;# 
  2705   000FC4                     ADRESH          equ	4036	;# 
  2706   000FC5                     SSP1CON2        equ	4037	;# 
  2707   000FC5                     SSPCON2         equ	4037	;# 
  2708   000FC6                     SSP1CON1        equ	4038	;# 
  2709   000FC6                     SSPCON1         equ	4038	;# 
  2710   000FC7                     SSP1STAT        equ	4039	;# 
  2711   000FC7                     SSPSTAT         equ	4039	;# 
  2712   000FC8                     SSP1ADD         equ	4040	;# 
  2713   000FC8                     SSPADD          equ	4040	;# 
  2714   000FC9                     SSP1BUF         equ	4041	;# 
  2715   000FC9                     SSPBUF          equ	4041	;# 
  2716   000FCA                     T2CON           equ	4042	;# 
  2717   000FCB                     PR2             equ	4043	;# 
  2718   000FCC                     TMR2            equ	4044	;# 
  2719   000FCD                     T1CON           equ	4045	;# 
  2720   000FCE                     TMR1            equ	4046	;# 
  2721   000FCE                     TMR1L           equ	4046	;# 
  2722   000FCF                     TMR1H           equ	4047	;# 
  2723   000FD0                     RCON            equ	4048	;# 
  2724   000FD1                     WDTCON          equ	4049	;# 
  2725   000FD2                     ECON1           equ	4050	;# 
  2726   000FD3                     OSCCON          equ	4051	;# 
  2727   000FD5                     T0CON           equ	4053	;# 
  2728   000FD6                     TMR0            equ	4054	;# 
  2729   000FD6                     TMR0L           equ	4054	;# 
  2730   000FD7                     TMR0H           equ	4055	;# 
  2731   000FD8                     STATUS          equ	4056	;# 
  2732   000FD9                     FSR2            equ	4057	;# 
  2733   000FD9                     FSR2L           equ	4057	;# 
  2734   000FDA                     FSR2H           equ	4058	;# 
  2735   000FDB                     PLUSW2          equ	4059	;# 
  2736   000FDC                     PREINC2         equ	4060	;# 
  2737   000FDD                     POSTDEC2        equ	4061	;# 
  2738   000FDE                     POSTINC2        equ	4062	;# 
  2739   000FDF                     INDF2           equ	4063	;# 
  2740   000FE0                     BSR             equ	4064	;# 
  2741   000FE1                     FSR1            equ	4065	;# 
  2742   000FE1                     FSR1L           equ	4065	;# 
  2743   000FE2                     FSR1H           equ	4066	;# 
  2744   000FE3                     PLUSW1          equ	4067	;# 
  2745   000FE4                     PREINC1         equ	4068	;# 
  2746   000FE5                     POSTDEC1        equ	4069	;# 
  2747   000FE6                     POSTINC1        equ	4070	;# 
  2748   000FE7                     INDF1           equ	4071	;# 
  2749   000FE8                     WREG            equ	4072	;# 
  2750   000FE9                     FSR0            equ	4073	;# 
  2751   000FE9                     FSR0L           equ	4073	;# 
  2752   000FEA                     FSR0H           equ	4074	;# 
  2753   000FEB                     PLUSW0          equ	4075	;# 
  2754   000FEC                     PREINC0         equ	4076	;# 
  2755   000FED                     POSTDEC0        equ	4077	;# 
  2756   000FEE                     POSTINC0        equ	4078	;# 
  2757   000FEF                     INDF0           equ	4079	;# 
  2758   000FF0                     INTCON3         equ	4080	;# 
  2759   000FF1                     INTCON2         equ	4081	;# 
  2760   000FF2                     INTCON          equ	4082	;# 
  2761   000FF3                     PROD            equ	4083	;# 
  2762   000FF3                     PRODL           equ	4083	;# 
  2763   000FF4                     PRODH           equ	4084	;# 
  2764   000FF5                     TABLAT          equ	4085	;# 
  2765   000FF6                     TBLPTR          equ	4086	;# 
  2766   000FF6                     TBLPTRL         equ	4086	;# 
  2767   000FF7                     TBLPTRH         equ	4087	;# 
  2768   000FF8                     TBLPTRU         equ	4088	;# 
  2769   000FF9                     PCLAT           equ	4089	;# 
  2770   000FF9                     PC              equ	4089	;# 
  2771   000FF9                     PCL             equ	4089	;# 
  2772   000FFA                     PCLATH          equ	4090	;# 
  2773   000FFB                     PCLATU          equ	4091	;# 
  2774   000FFC                     STKPTR          equ	4092	;# 
  2775   000FFD                     TOS             equ	4093	;# 
  2776   000FFD                     TOSL            equ	4093	;# 
  2777   000FFE                     TOSH            equ	4094	;# 
  2778   000FFF                     TOSU            equ	4095	;# 
  2779   000E80                     MAADR5          equ	3712	;# 
  2780   000E81                     MAADR6          equ	3713	;# 
  2781   000E82                     MAADR3          equ	3714	;# 
  2782   000E83                     MAADR4          equ	3715	;# 
  2783   000E84                     MAADR1          equ	3716	;# 
  2784   000E85                     MAADR2          equ	3717	;# 
  2785   000E8A                     MISTAT          equ	3722	;# 
  2786   000E97                     EFLOCON         equ	3735	;# 
  2787   000E98                     EPAUS           equ	3736	;# 
  2788   000E98                     EPAUSL          equ	3736	;# 
  2789   000E99                     EPAUSH          equ	3737	;# 
  2790   000EA0                     MACON1          equ	3744	;# 
  2791   000EA2                     MACON3          equ	3746	;# 
  2792   000EA3                     MACON4          equ	3747	;# 
  2793   000EA4                     MABBIPG         equ	3748	;# 
  2794   000EA6                     MAIPG           equ	3750	;# 
  2795   000EA6                     MAIPGL          equ	3750	;# 
  2796   000EA7                     MAIPGH          equ	3751	;# 
  2797   000EAA                     MAMXFL          equ	3754	;# 
  2798   000EAA                     MAMXFLL         equ	3754	;# 
  2799   000EAB                     MAMXFLH         equ	3755	;# 
  2800   000EB2                     MICMD           equ	3762	;# 
  2801   000EB4                     MIREGADR        equ	3764	;# 
  2802   000EB6                     MIWR            equ	3766	;# 
  2803   000EB6                     MIWRL           equ	3766	;# 
  2804   000EB7                     MIWRH           equ	3767	;# 
  2805   000EB8                     MIRD            equ	3768	;# 
  2806   000EB8                     MIRDL           equ	3768	;# 
  2807   000EB9                     MIRDH           equ	3769	;# 
  2808   000EC0                     EHT0            equ	3776	;# 
  2809   000EC1                     EHT1            equ	3777	;# 
  2810   000EC2                     EHT2            equ	3778	;# 
  2811   000EC3                     EHT3            equ	3779	;# 
  2812   000EC4                     EHT4            equ	3780	;# 
  2813   000EC5                     EHT5            equ	3781	;# 
  2814   000EC6                     EHT6            equ	3782	;# 
  2815   000EC7                     EHT7            equ	3783	;# 
  2816   000EC8                     EPMM0           equ	3784	;# 
  2817   000EC9                     EPMM1           equ	3785	;# 
  2818   000ECA                     EPMM2           equ	3786	;# 
  2819   000ECB                     EPMM3           equ	3787	;# 
  2820   000ECC                     EPMM4           equ	3788	;# 
  2821   000ECD                     EPMM5           equ	3789	;# 
  2822   000ECE                     EPMM6           equ	3790	;# 
  2823   000ECF                     EPMM7           equ	3791	;# 
  2824   000ED0                     EPMCS           equ	3792	;# 
  2825   000ED0                     EPMCSL          equ	3792	;# 
  2826   000ED1                     EPMCSH          equ	3793	;# 
  2827   000ED4                     EPMO            equ	3796	;# 
  2828   000ED4                     EPMOL           equ	3796	;# 
  2829   000ED5                     EPMOH           equ	3797	;# 
  2830   000ED8                     ERXFCON         equ	3800	;# 
  2831   000ED9                     EPKTCNT         equ	3801	;# 
  2832   000EE2                     EWRPT           equ	3810	;# 
  2833   000EE2                     EWRPTL          equ	3810	;# 
  2834   000EE3                     EWRPTH          equ	3811	;# 
  2835   000EE4                     ETXST           equ	3812	;# 
  2836   000EE4                     ETXSTL          equ	3812	;# 
  2837   000EE5                     ETXSTH          equ	3813	;# 
  2838   000EE6                     ETXND           equ	3814	;# 
  2839   000EE6                     ETXNDL          equ	3814	;# 
  2840   000EE7                     ETXNDH          equ	3815	;# 
  2841   000EE8                     ERXST           equ	3816	;# 
  2842   000EE8                     ERXSTL          equ	3816	;# 
  2843   000EE9                     ERXSTH          equ	3817	;# 
  2844   000EEA                     ERXND           equ	3818	;# 
  2845   000EEA                     ERXNDL          equ	3818	;# 
  2846   000EEB                     ERXNDH          equ	3819	;# 
  2847   000EEC                     ERXRDPT         equ	3820	;# 
  2848   000EEC                     ERXRDPTL        equ	3820	;# 
  2849   000EED                     ERXRDPTH        equ	3821	;# 
  2850   000EEE                     ERXWRPT         equ	3822	;# 
  2851   000EEE                     ERXWRPTL        equ	3822	;# 
  2852   000EEF                     ERXWRPTH        equ	3823	;# 
  2853   000EF0                     EDMAST          equ	3824	;# 
  2854   000EF0                     EDMASTL         equ	3824	;# 
  2855   000EF1                     EDMASTH         equ	3825	;# 
  2856   000EF2                     EDMAND          equ	3826	;# 
  2857   000EF2                     EDMANDL         equ	3826	;# 
  2858   000EF3                     EDMANDH         equ	3827	;# 
  2859   000EF4                     EDMADST         equ	3828	;# 
  2860   000EF4                     EDMADSTL        equ	3828	;# 
  2861   000EF5                     EDMADSTH        equ	3829	;# 
  2862   000EF6                     EDMACS          equ	3830	;# 
  2863   000EF6                     EDMACSL         equ	3830	;# 
  2864   000EF7                     EDMACSH         equ	3831	;# 
  2865   000EFB                     EIE             equ	3835	;# 
  2866   000EFD                     ESTAT           equ	3837	;# 
  2867   000EFE                     ECON2           equ	3838	;# 
  2868   000F60                     EIR             equ	3936	;# 
  2869   000F61                     EDATA           equ	3937	;# 
  2870   000F62                     SSP2CON2        equ	3938	;# 
  2871   000F63                     SSP2CON1        equ	3939	;# 
  2872   000F64                     SSP2STAT        equ	3940	;# 
  2873   000F65                     SSP2ADD         equ	3941	;# 
  2874   000F66                     SSP2BUF         equ	3942	;# 
  2875   000F67                     ECCP2DEL        equ	3943	;# 
  2876   000F68                     ECCP2AS         equ	3944	;# 
  2877   000F69                     ECCP3DEL        equ	3945	;# 
  2878   000F6A                     ECCP3AS         equ	3946	;# 
  2879   000F6B                     RCSTA2          equ	3947	;# 
  2880   000F6C                     TXSTA2          equ	3948	;# 
  2881   000F6D                     TXREG2          equ	3949	;# 
  2882   000F6E                     RCREG2          equ	3950	;# 
  2883   000F6F                     SPBRG2          equ	3951	;# 
  2884   000F70                     CCP5CON         equ	3952	;# 
  2885   000F71                     CCPR5           equ	3953	;# 
  2886   000F71                     CCPR5L          equ	3953	;# 
  2887   000F72                     CCPR5H          equ	3954	;# 
  2888   000F73                     CCP4CON         equ	3955	;# 
  2889   000F74                     CCPR4           equ	3956	;# 
  2890   000F74                     CCPR4L          equ	3956	;# 
  2891   000F75                     CCPR4H          equ	3957	;# 
  2892   000F76                     T4CON           equ	3958	;# 
  2893   000F77                     PR4             equ	3959	;# 
  2894   000F78                     TMR4            equ	3960	;# 
  2895   000F79                     ECCP1DEL        equ	3961	;# 
  2896   000F7A                     ERDPT           equ	3962	;# 
  2897   000F7A                     ERDPTL          equ	3962	;# 
  2898   000F7B                     ERDPTH          equ	3963	;# 
  2899   000F7C                     BAUDCON2        equ	3964	;# 
  2900   000F7C                     BAUDCTL2        equ	3964	;# 
  2901   000F7D                     SPBRGH2         equ	3965	;# 
  2902   000F7E                     BAUDCON1        equ	3966	;# 
  2903   000F7E                     BAUDCON         equ	3966	;# 
  2904   000F7E                     BAUDCTL         equ	3966	;# 
  2905   000F7E                     BAUDCTL1        equ	3966	;# 
  2906   000F7F                     SPBRGH1         equ	3967	;# 
  2907   000F7F                     SPBRGH          equ	3967	;# 
  2908   000F80                     PORTA           equ	3968	;# 
  2909   000F81                     PORTB           equ	3969	;# 
  2910   000F82                     PORTC           equ	3970	;# 
  2911   000F83                     PORTD           equ	3971	;# 
  2912   000F84                     PORTE           equ	3972	;# 
  2913   000F85                     PORTF           equ	3973	;# 
  2914   000F86                     PORTG           equ	3974	;# 
  2915   000F87                     PORTH           equ	3975	;# 
  2916   000F88                     PORTJ           equ	3976	;# 
  2917   000F89                     LATA            equ	3977	;# 
  2918   000F8A                     LATB            equ	3978	;# 
  2919   000F8B                     LATC            equ	3979	;# 
  2920   000F8C                     LATD            equ	3980	;# 
  2921   000F8D                     LATE            equ	3981	;# 
  2922   000F8E                     LATF            equ	3982	;# 
  2923   000F8F                     LATG            equ	3983	;# 
  2924   000F90                     LATH            equ	3984	;# 
  2925   000F91                     LATJ            equ	3985	;# 
  2926   000F92                     TRISA           equ	3986	;# 
  2927   000F92                     DDRA            equ	3986	;# 
  2928   000F93                     TRISB           equ	3987	;# 
  2929   000F93                     DDRB            equ	3987	;# 
  2930   000F94                     TRISC           equ	3988	;# 
  2931   000F94                     DDRC            equ	3988	;# 
  2932   000F95                     TRISD           equ	3989	;# 
  2933   000F95                     DDRD            equ	3989	;# 
  2934   000F96                     TRISE           equ	3990	;# 
  2935   000F96                     DDRE            equ	3990	;# 
  2936   000F97                     TRISF           equ	3991	;# 
  2937   000F97                     DDRF            equ	3991	;# 
  2938   000F98                     TRISG           equ	3992	;# 
  2939   000F98                     DDRG            equ	3992	;# 
  2940   000F99                     TRISH           equ	3993	;# 
  2941   000F99                     DDRH            equ	3993	;# 
  2942   000F9A                     TRISJ           equ	3994	;# 
  2943   000F9A                     DDRJ            equ	3994	;# 
  2944   000F9B                     OSCTUNE         equ	3995	;# 
  2945   000F9C                     MEMCON          equ	3996	;# 
  2946   000F9D                     PIE1            equ	3997	;# 
  2947   000F9E                     PIR1            equ	3998	;# 
  2948   000F9F                     IPR1            equ	3999	;# 
  2949   000FA0                     PIE2            equ	4000	;# 
  2950   000FA1                     PIR2            equ	4001	;# 
  2951   000FA2                     IPR2            equ	4002	;# 
  2952   000FA3                     PIE3            equ	4003	;# 
  2953   000FA4                     PIR3            equ	4004	;# 
  2954   000FA5                     IPR3            equ	4005	;# 
  2955   000FA6                     EECON1          equ	4006	;# 
  2956   000FA7                     EECON2          equ	4007	;# 
  2957   000FAB                     RCSTA1          equ	4011	;# 
  2958   000FAB                     RCSTA           equ	4011	;# 
  2959   000FAC                     TXSTA1          equ	4012	;# 
  2960   000FAC                     TXSTA           equ	4012	;# 
  2961   000FAD                     TXREG1          equ	4013	;# 
  2962   000FAD                     TXREG           equ	4013	;# 
  2963   000FAE                     RCREG1          equ	4014	;# 
  2964   000FAE                     RCREG           equ	4014	;# 
  2965   000FAF                     SPBRG1          equ	4015	;# 
  2966   000FAF                     SPBRG           equ	4015	;# 
  2967   000FB0                     PSPCON          equ	4016	;# 
  2968   000FB1                     T3CON           equ	4017	;# 
  2969   000FB2                     TMR3            equ	4018	;# 
  2970   000FB2                     TMR3L           equ	4018	;# 
  2971   000FB3                     TMR3H           equ	4019	;# 
  2972   000FB4                     CMCON           equ	4020	;# 
  2973   000FB5                     CVRCON          equ	4021	;# 
  2974   000FB6                     ECCP1AS         equ	4022	;# 
  2975   000FB7                     CCP3CON         equ	4023	;# 
  2976   000FB7                     ECCP3CON        equ	4023	;# 
  2977   000FB8                     CCPR3           equ	4024	;# 
  2978   000FB8                     CCPR3L          equ	4024	;# 
  2979   000FB9                     CCPR3H          equ	4025	;# 
  2980   000FBA                     CCP2CON         equ	4026	;# 
  2981   000FBA                     ECCP2CON        equ	4026	;# 
  2982   000FBB                     CCPR2           equ	4027	;# 
  2983   000FBB                     CCPR2L          equ	4027	;# 
  2984   000FBC                     CCPR2H          equ	4028	;# 
  2985   000FBD                     CCP1CON         equ	4029	;# 
  2986   000FBD                     ECCP1CON        equ	4029	;# 
  2987   000FBE                     CCPR1           equ	4030	;# 
  2988   000FBE                     CCPR1L          equ	4030	;# 
  2989   000FBF                     CCPR1H          equ	4031	;# 
  2990   000FC0                     ADCON2          equ	4032	;# 
  2991   000FC1                     ADCON1          equ	4033	;# 
  2992   000FC2                     ADCON0          equ	4034	;# 
  2993   000FC3                     ADRES           equ	4035	;# 
  2994   000FC3                     ADRESL          equ	4035	;# 
  2995   000FC4                     ADRESH          equ	4036	;# 
  2996   000FC5                     SSP1CON2        equ	4037	;# 
  2997   000FC5                     SSPCON2         equ	4037	;# 
  2998   000FC6                     SSP1CON1        equ	4038	;# 
  2999   000FC6                     SSPCON1         equ	4038	;# 
  3000   000FC7                     SSP1STAT        equ	4039	;# 
  3001   000FC7                     SSPSTAT         equ	4039	;# 
  3002   000FC8                     SSP1ADD         equ	4040	;# 
  3003   000FC8                     SSPADD          equ	4040	;# 
  3004   000FC9                     SSP1BUF         equ	4041	;# 
  3005   000FC9                     SSPBUF          equ	4041	;# 
  3006   000FCA                     T2CON           equ	4042	;# 
  3007   000FCB                     PR2             equ	4043	;# 
  3008   000FCC                     TMR2            equ	4044	;# 
  3009   000FCD                     T1CON           equ	4045	;# 
  3010   000FCE                     TMR1            equ	4046	;# 
  3011   000FCE                     TMR1L           equ	4046	;# 
  3012   000FCF                     TMR1H           equ	4047	;# 
  3013   000FD0                     RCON            equ	4048	;# 
  3014   000FD1                     WDTCON          equ	4049	;# 
  3015   000FD2                     ECON1           equ	4050	;# 
  3016   000FD3                     OSCCON          equ	4051	;# 
  3017   000FD5                     T0CON           equ	4053	;# 
  3018   000FD6                     TMR0            equ	4054	;# 
  3019   000FD6                     TMR0L           equ	4054	;# 
  3020   000FD7                     TMR0H           equ	4055	;# 
  3021   000FD8                     STATUS          equ	4056	;# 
  3022   000FD9                     FSR2            equ	4057	;# 
  3023   000FD9                     FSR2L           equ	4057	;# 
  3024   000FDA                     FSR2H           equ	4058	;# 
  3025   000FDB                     PLUSW2          equ	4059	;# 
  3026   000FDC                     PREINC2         equ	4060	;# 
  3027   000FDD                     POSTDEC2        equ	4061	;# 
  3028   000FDE                     POSTINC2        equ	4062	;# 
  3029   000FDF                     INDF2           equ	4063	;# 
  3030   000FE0                     BSR             equ	4064	;# 
  3031   000FE1                     FSR1            equ	4065	;# 
  3032   000FE1                     FSR1L           equ	4065	;# 
  3033   000FE2                     FSR1H           equ	4066	;# 
  3034   000FE3                     PLUSW1          equ	4067	;# 
  3035   000FE4                     PREINC1         equ	4068	;# 
  3036   000FE5                     POSTDEC1        equ	4069	;# 
  3037   000FE6                     POSTINC1        equ	4070	;# 
  3038   000FE7                     INDF1           equ	4071	;# 
  3039   000FE8                     WREG            equ	4072	;# 
  3040   000FE9                     FSR0            equ	4073	;# 
  3041   000FE9                     FSR0L           equ	4073	;# 
  3042   000FEA                     FSR0H           equ	4074	;# 
  3043   000FEB                     PLUSW0          equ	4075	;# 
  3044   000FEC                     PREINC0         equ	4076	;# 
  3045   000FED                     POSTDEC0        equ	4077	;# 
  3046   000FEE                     POSTINC0        equ	4078	;# 
  3047   000FEF                     INDF0           equ	4079	;# 
  3048   000FF0                     INTCON3         equ	4080	;# 
  3049   000FF1                     INTCON2         equ	4081	;# 
  3050   000FF2                     INTCON          equ	4082	;# 
  3051   000FF3                     PROD            equ	4083	;# 
  3052   000FF3                     PRODL           equ	4083	;# 
  3053   000FF4                     PRODH           equ	4084	;# 
  3054   000FF5                     TABLAT          equ	4085	;# 
  3055   000FF6                     TBLPTR          equ	4086	;# 
  3056   000FF6                     TBLPTRL         equ	4086	;# 
  3057   000FF7                     TBLPTRH         equ	4087	;# 
  3058   000FF8                     TBLPTRU         equ	4088	;# 
  3059   000FF9                     PCLAT           equ	4089	;# 
  3060   000FF9                     PC              equ	4089	;# 
  3061   000FF9                     PCL             equ	4089	;# 
  3062   000FFA                     PCLATH          equ	4090	;# 
  3063   000FFB                     PCLATU          equ	4091	;# 
  3064   000FFC                     STKPTR          equ	4092	;# 
  3065   000FFD                     TOS             equ	4093	;# 
  3066   000FFD                     TOSL            equ	4093	;# 
  3067   000FFE                     TOSH            equ	4094	;# 
  3068   000FFF                     TOSU            equ	4095	;# 
  3069                           
  3070 ;;_fObj	offset	0
  3071 ;;_mObj	offset	6
  3072 ;;_rxObj	offset	0
  3073 ;;_rxdata	offset	16
  3074 ;;_ev	offset	0
  3075 ;;_tmid	offset	6
  3076 ;;_processEvent	offset=-3 (param)
  3077 ;;_id	offset=-4 (param)
  3078 ;;_delay	offset=-6 (param)
  3079 ;;_tm	offset	0
  3080 ;;_temp	offset	2
  3081 ;;_ev	offset=-6 (param)
  3082 ;;_inISR	offset=-7 (param)
  3083 ;;_tmid	offset=-9 (param)
  3084 ;;_i	offset	0
  3085 ;;_tm	offset=-2 (param)
  3086 ;;_ev	offset=-8 (param)
  3087 ;;_inISR	offset=-9 (param)
  3088 ;;_me	offset=-2 (param)
  3089 ;;_delay	offset=-4 (param)
  3090 ;;_me	offset=-2 (param)
  3091 ;;_me	offset=-2 (param)
  3092 ;;_processEvent	offset=-5 (param)
  3093 ;;_me	offset=-2 (param)
  3094 ;;_eventID	offset=-3 (param)
  3095 ;;_rxFlags	offset	0
  3096 ;;_rxObj	offset=-2 (param)
  3097 ;;_rxd	offset=-4 (param)
  3098 ;;_temp32	offset	0
  3099 ;;_ba	offset	4
  3100 ;;_fifoReg	offset	80
  3101 ;;_ciFifoCon	offset	92
  3102 ;;_myReg	offset	97
  3103 ;;_ciFifoUa	offset	101
  3104 ;;_a	offset	105
  3105 ;;_i	offset	107
  3106 ;;_n	offset	108
  3107 ;;_spiTransferError	offset	109
  3108 ;;_channel	offset=-1 (param)
  3109 ;;_rxObj	offset=-3 (param)
  3110 ;;_rxd	offset=-5 (param)
  3111 ;;_nBytes	offset=-6 (param)
  3112 ;;_ciFifoCon	offset	0
  3113 ;;_a	offset	5
  3114 ;;_spiTransferError	offset	7
  3115 ;;_channel	offset=-1 (param)
  3116 ;;_i	offset	0
  3117 ;;_spiTransferSize	offset	2
  3118 ;;_spiTransferError	offset	4
  3119 ;;_address	offset=-2 (param)
  3120 ;;_rxd	offset=-4 (param)
  3121 ;;_nBytes	offset=-6 (param)
  3122 ;;_ciFifoSta	offset	0
  3123 ;;_a	offset	4
  3124 ;;_spiTransferError	offset	6
  3125 ;;_channel	offset=-1 (param)
  3126 ;;_flags	offset=-3 (param)
  3127 ;;_i	offset	0
  3128 ;;_me	offset=-2 (param)
  3129 ;;_ev	offset	0
  3130 ;;_ev	offset=-2 (param)
  3131 ;;_txMsg	offset	0
  3132 ;;_txdata	offset	16
  3133 ;;_percent	offset=-1 (param)
  3134 ;;_ev	offset=-2 (param)
  3135 ;;_txMsg	offset	0
  3136 ;;_txdata	offset	16
  3137 ;;_light	offset=-1 (param)
  3138 ;;_txMsg	offset	0
  3139 ;;_txdata	offset	16
  3140 ;;_light	offset=-1 (param)
  3141 ;;_txFlags	offset	0
  3142 ;;_txObj	offset=-2 (param)
  3143 ;;_txd	offset=-4 (param)
  3144 ;;_temp32	offset	0
  3145 ;;_txBuffer	offset	4
  3146 ;;_fifoReg	offset	80
  3147 ;;_ciFifoCon	offset	92
  3148 ;;_a	offset	97
  3149 ;;_ciFifoUa	offset	101
  3150 ;;_dataBytesInObject	offset	105
  3151 ;;_n	offset	109
  3152 ;;_spiTransferError	offset	111
  3153 ;;_i	offset	112
  3154 ;;_j	offset	113
  3155 ;;_channel	offset=-1 (param)
  3156 ;;_txObj	offset=-3 (param)
  3157 ;;_txd	offset=-5 (param)
  3158 ;;_txdNumBytes	offset=-9 (param)
  3159 ;;_flush	offset=-10 (param)
  3160 ;;_i	offset	0
  3161 ;;_spiTransferSize	offset	2
  3162 ;;_spiTransferError	offset	4
  3163 ;;_address	offset=-2 (param)
  3164 ;;_txd	offset=-4 (param)
  3165 ;;_nBytes	offset=-6 (param)
  3166 ;;_ciFifoCon	offset	0
  3167 ;;_a	offset	5
  3168 ;;_spiTransferError	offset	7
  3169 ;;_channel	offset=-1 (param)
  3170 ;;_flush	offset=-2 (param)
  3171 ;;_w	offset	0
  3172 ;;_i	offset	4
  3173 ;;_j	offset	6
  3174 ;;_spiTransferSize	offset	8
  3175 ;;_n	offset	10
  3176 ;;_spiTransferError	offset	12
  3177 ;;_address	offset=-2 (param)
  3178 ;;_rxd	offset=-4 (param)
  3179 ;;_nWords	offset=-6 (param)
  3180 ;;_dataBytesInObject	offset	0
  3181 ;;_dlc	offset=-1 (param)
  3182 ;;_ciFifoSta	offset	0
  3183 ;;_a	offset	4
  3184 ;;_spiTransferError	offset	6
  3185 ;;_channel	offset=-1 (param)
  3186 ;;_flags	offset=-3 (param)
  3187 ;;_ev	offset	0
  3188 ;;_inISR	offset=-6 (param)
  3189 ;;_sign	offset	0
  3190 ;;_counter	offset	1
  3191 ;;_dividend	offset=-2 (param)
  3192 ;;_divisor	offset=-4 (param)
  3193 ;;_inISR	offset=-1 (param)
  3194 ;;_inISR	offset=-1 (param)
  3195 ;;_InterruptHandler	offset=-3 (param)
  3196 ;;_filter	offset=-1 (param)
  3197 ;;_fObj	offset=-3 (param)
  3198 ;;_mObj	offset=-5 (param)
  3199 ;;_a	offset	0
  3200 ;;_fCtrl	offset	2
  3201 ;;_filter	offset=-1 (param)
  3202 ;;_channel	offset=-2 (param)
  3203 ;;_enable	offset=-3 (param)
  3204 ;;_temp32	offset	0
  3205 ;;_fObj	offset	4
  3206 ;;_a	offset	10
  3207 ;;_filter	offset=-1 (param)
  3208 ;;_id	offset=-3 (param)
  3209 ;;_temp32	offset	0
  3210 ;;_mObj	offset	4
  3211 ;;_a	offset	10
  3212 ;;_filter	offset=-1 (param)
  3213 ;;_mask	offset=-3 (param)
  3214 ;;_EXIDE	offset=-4 (param)
  3215 ;;_a	offset	0
  3216 ;;_spiTransferError	offset	2
  3217 ;;_fCtrl	offset	3
  3218 ;;_filter	offset=-1 (param)
  3219 ;;_txqConfig	offset	0
  3220 ;;_config	offset	4
  3221 ;;_rxfConfig	offset	7
  3222 ;;_txfConfig	offset	10
  3223 ;;_tefConfig	offset	12
  3224 ;;_bitTime	offset=-1 (param)
  3225 ;;_withISR	offset=-2 (param)
  3226 ;;_ciFifoCon	offset	0
  3227 ;;_config	offset=-2 (param)
  3228 ;;_ciFifoCon	offset	0
  3229 ;;_config	offset=-2 (param)
  3230 ;;_ciFifoCon	offset	0
  3231 ;;_config	offset=-2 (param)
  3232 ;;_ciFifoCon	offset	0
  3233 ;;_a	offset	5
  3234 ;;_channel	offset=-1 (param)
  3235 ;;_config	offset=-3 (param)
  3236 ;;_ts	offset=-4 (param)
  3237 ;;_ps	offset=-2 (param)
  3238 ;;_d	offset	0
  3239 ;;_spiTransferError	offset	1
  3240 ;;_ciTefCon	offset	0
  3241 ;;_config	offset=-2 (param)
  3242 ;;_spi2UniqueConfiguration	offset=-1 (param)
  3243 ;;_ciFifoCon	offset	0
  3244 ;;_a	offset	5
  3245 ;;_channel	offset=-1 (param)
  3246 ;;_config	offset=-3 (param)
  3247 ;;_d	offset	0
  3248 ;;_spiTransferError	offset	1
  3249 ;;_opMode	offset=-1 (param)
  3250 ;;_spiTransferError	offset	0
  3251 ;;_address	offset=-2 (param)
  3252 ;;_txd	offset=-3 (param)
  3253 ;;_spiTransferError	offset	0
  3254 ;;_address	offset=-2 (param)
  3255 ;;_rxd	offset=-4 (param)
  3256 ;;_intEnables	offset	0
  3257 ;;_index	offset=-1 (param)
  3258 ;;_flags	offset=-3 (param)
  3259 ;;_spiTransferSize	offset	0
  3260 ;;_i	offset	2
  3261 ;;_spiTransferError	offset	3
  3262 ;;_address	offset=-2 (param)
  3263 ;;_txd	offset=-4 (param)
  3264 ;;_ciCon	offset	0
  3265 ;;_config	offset=-2 (param)
  3266 ;;_ciCon	offset	0
  3267 ;;_config	offset=-2 (param)
  3268 ;;_ciNbtcfg	offset	0
  3269 ;;_bitTime	offset=-1 (param)
  3270 ;;_spiTransferSize	offset	0
  3271 ;;_i	offset	2
  3272 ;;_spiTransferError	offset	3
  3273 ;;_address	offset=-2 (param)
  3274 ;;_txd	offset=-6 (param)
  3275 ;;_dummy	offset	0
  3276 ;;_txPtr	offset=-2 (param)
  3277 ;;_rxPtr	offset=-4 (param)
  3278 ;;_size	offset=-6 (param)
  3279 ;;_dummy	offset	0
  3280 ;;_i	offset	1
  3281 ;;_id	offset=-1 (param)
  3282 ;;_inISR	offset=-2 (param)
  3283 ;;_me	offset=-2 (param)
  3284 ;;_tm	offset	0
  3285 ;;_temp	offset	2
  3286 ;;_ev	offset=-6 (param)
  3287 ;;_inISR	offset=-7 (param)
  3288 ;;_tmid	offset=-9 (param)
  3289 ;;_sign	offset	0
  3290 ;;_counter	offset	1
  3291 ;;_dividend	offset=-2 (param)
  3292 ;;_divisor	offset=-4 (param)
  3293 ;;_i	offset	0
  3294 ;;_tm	offset=-2 (param)
  3295 ;;_ev	offset=-8 (param)
  3296 ;;_inISR	offset=-9 (param)
  3297 ;;_inISR	offset=-1 (param)
  3298 ;;_inISR	offset=-1 (param)
  3299 ;;_me	offset=-2 (param)
  3300 ;;_delay	offset=-4 (param)
  3301 ;;_me	offset=-2 (param)
  3302                           
  3303                           	psect	mediumconst
  3304   00FF8C                     __pmediumconst:
  3305                           	callstack 0
  3306   00FF8C  00                 	db	0
  3307   00FF8D                     _canControlResetValues:
  3308                           	callstack 0
  3309   00FF8D  0760               	dw	1888
  3310   00FF8F  0498               	dw	1176
  3311   00FF91  0F0F               	dw	3855
  3312   00FF93  003E               	dw	62
  3313   00FF95  0303               	dw	771
  3314   00FF97  000E               	dw	14
  3315   00FF99  1000               	dw	4096
  3316   00FF9B  0002               	dw	2
  3317   00FF9D  0000               	dw	0
  3318   00FF9F  0000               	dw	0
  3319   00FFA1  0000               	dw	0
  3320   00FFA3  0000               	dw	0
  3321   00FFA5  0040               	dw	64
  3322   00FFA7  4040               	dw	16448
  3323   00FFA9  0000               	dw	0
  3324   00FFAB  0000               	dw	0
  3325   00FFAD  0000               	dw	0
  3326   00FFAF  0000               	dw	0
  3327   00FFB1  0000               	dw	0
  3328   00FFB3  0000               	dw	0
  3329   00FFB5  0000               	dw	0
  3330   00FFB7  0000               	dw	0
  3331   00FFB9  0000               	dw	0
  3332   00FFBB  0000               	dw	0
  3333   00FFBD  0000               	dw	0
  3334   00FFBF  0000               	dw	0
  3335   00FFC1  0000               	dw	0
  3336   00FFC3  0020               	dw	32
  3337   00FFC5  0000               	dw	0
  3338   00FFC7  0000               	dw	0
  3339   00FFC9  0000               	dw	0
  3340   00FFCB  0000               	dw	0
  3341   00FFCD  0400               	dw	1024
  3342   00FFCF  0000               	dw	0
  3343   00FFD1  0000               	dw	0
  3344   00FFD3  0000               	dw	0
  3345   00FFD5  0000               	dw	0
  3346   00FFD7  0000               	dw	0
  3347   00FFD9  0000               	dw	0
  3348   00FFDB  0000               	dw	0
  3349   00FFDD                     __end_of_canControlResetValues:
  3350                           	callstack 0
  3351   00FFDD                     _canFifoResetValues:
  3352                           	callstack 0
  3353   00FFDD  0400               	dw	1024
  3354   00FFDF  0060               	dw	96
  3355   00FFE1  0000               	dw	0
  3356   00FFE3  0000               	dw	0
  3357   00FFE5  0000               	dw	0
  3358   00FFE7  0000               	dw	0
  3359   00FFE9                     __end_of_canFifoResetValues:
  3360                           	callstack 0
  3361   00FFE9                     _spi2_configuration:
  3362                           	callstack 0
  3363   00FFE9  01                 	db	1
  3364   00FFEA  40                 	db	64
  3365   00FFEB  00                 	db	0
  3366   00FFEC  00                 	db	0
  3367   00FFED                     __end_of_spi2_configuration:
  3368                           	callstack 0
  3369   00FFED                     STR_1:
  3370   00FFED  20                 	db	32
  3371   00FFEE  20                 	db	32
  3372   00FFEF  20                 	db	32
  3373   00FFF0  20                 	db	32
  3374   00FFF1  20                 	db	32
  3375   00FFF2  20                 	db	32
  3376   00FFF3  20                 	db	32
  3377   00FFF4  20                 	db	32
  3378   00FFF5  20                 	db	32
  3379   00FFF6  20                 	db	32
  3380   00FFF7  20                 	db	32
  3381   00FFF8  20                 	db	32
  3382   00FFF9  20                 	db	32
  3383   00FFFA  20                 	db	32
  3384   00FFFB  20                 	db	32
  3385   00FFFC  20                 	db	32
  3386   00FFFD  00                 	db	0
  3387   00FFED                     STR_2           equ	STR_1
  3388   00FFFE  00                 	db	0	; dummy byte at the end
  3389   000003                     __activetblptr  equ	3
  3390                           
  3391                           	psect	nvCOMRAM
  3392   000050                     __pnvCOMRAM:
  3393                           	callstack 0
  3394   000050                     _TMR0_InterruptHandler:
  3395                           	callstack 0
  3396   000050                     	ds	3
  3397   000F62                     _SSP2CON2       set	3938
  3398   000F63                     _SSP2CON1bits   set	3939
  3399   000F65                     _SSP2ADD        set	3941
  3400   000F63                     _SSP2CON1       set	3939
  3401   000F64                     _SSP2STAT       set	3940
  3402   000FD5                     _T0CON          set	4053
  3403   000FD6                     _TMR0L          set	4054
  3404   000FD7                     _TMR0H          set	4055
  3405   000FD5                     _T0CONbits      set	4053
  3406   000FF2                     _INTCONbits     set	4082
  3407   000FD0                     _RCONbits       set	4048
  3408   000FC1                     _ADCON1bits     set	4033
  3409   000F95                     _TRISD          set	3989
  3410   000F94                     _TRISC          set	3988
  3411   000F99                     _TRISH          set	3993
  3412   000F93                     _TRISB          set	3987
  3413   000F98                     _TRISG          set	3992
  3414   000F92                     _TRISA          set	3986
  3415   000F97                     _TRISF          set	3991
  3416   000F96                     _TRISE          set	3990
  3417   000F90                     _LATH           set	3984
  3418   000F8B                     _LATC           set	3979
  3419   000F8F                     _LATG           set	3983
  3420   000F8A                     _LATB           set	3978
  3421   000F8E                     _LATF           set	3982
  3422   000F89                     _LATA           set	3977
  3423   000F8C                     _LATD           set	3980
  3424   000F91                     _LATJ           set	3985
  3425   000F8D                     _LATE           set	3981
  3426   000F9B                     _OSCTUNE        set	3995
  3427   000FD3                     _OSCCON         set	4051
  3428   000F9A                     _TRISJ          set	3994
  3429   000F95                     _TRISDbits      set	3989
  3430   000F98                     _TRISGbits      set	3992
  3431   000F66                     _SSP2BUF        set	3942
  3432   000F64                     _SSP2STATbits   set	3940
  3433   000F8F                     _LATGbits       set	3983
  3434                           
  3435                           ; #config settings
  3436                           
  3437                           	psect	cinit
  3438   014662                     __pcinit:
  3439                           	callstack 0
  3440   014662                     start_initialization:
  3441                           	callstack 0
  3442   014662                     __initialization:
  3443                           	callstack 0
  3444                           
  3445                           ; Clear objects allocated to BIGRAM (282 bytes)
  3446   014662  EE02  F0C8         	lfsr	0,__pbssBIGRAM
  3447   014666  EE21 F01A          	lfsr	2,282
  3448   01466A                     clear_0:
  3449   01466A  6AEE               	clrf	postinc0,c
  3450   01466C  50DD               	movf	postdec2,w,c
  3451   01466E  50D9               	movf	fsr2l,w,c
  3452   014670  E1FC               	bnz	clear_0
  3453   014672  50DA               	movf	fsr2h,w,c
  3454   014674  E1FA               	bnz	clear_0
  3455                           
  3456                           ; Clear objects allocated to BANK2 (200 bytes)
  3457   014676  EE02  F000         	lfsr	0,__pbssBANK2
  3458   01467A  0EC8               	movlw	200
  3459   01467C                     clear_1:
  3460   01467C  6AEE               	clrf	postinc0,c
  3461   01467E  06E8               	decf	wreg,f,c
  3462   014680  E1FD               	bnz	clear_1
  3463                           
  3464                           ; Clear objects allocated to BANK1 (200 bytes)
  3465   014682  EE01  F000         	lfsr	0,__pbssBANK1
  3466   014686  0EC8               	movlw	200
  3467   014688                     clear_2:
  3468   014688  6AEE               	clrf	postinc0,c
  3469   01468A  06E8               	decf	wreg,f,c
  3470   01468C  E1FD               	bnz	clear_2
  3471                           
  3472                           ; Clear objects allocated to BANK0 (59 bytes)
  3473   01468E  EE00  F060         	lfsr	0,__pbssBANK0
  3474   014692  0E3B               	movlw	59
  3475   014694                     clear_3:
  3476   014694  6AEE               	clrf	postinc0,c
  3477   014696  06E8               	decf	wreg,f,c
  3478   014698  E1FD               	bnz	clear_3
  3479                           
  3480                           ; Clear objects allocated to COMRAM (31 bytes)
  3481   01469A  EE00  F021         	lfsr	0,__pbssCOMRAM
  3482   01469E  0E1F               	movlw	31
  3483   0146A0                     clear_4:
  3484   0146A0  6AEE               	clrf	postinc0,c
  3485   0146A2  06E8               	decf	wreg,f,c
  3486   0146A4  E1FD               	bnz	clear_4
  3487   0146A6                     end_of_initialization:
  3488                           	callstack 0
  3489   0146A6                     __end_of__initialization:
  3490                           	callstack 0
  3491   0146A6  0100               	movlb	0
  3492   0146A8  EF59  F09B         	goto	_main	;jump to C main() function
  3493                           
  3494                           	psect	bssCOMRAM
  3495   000021                     __pbssCOMRAM:
  3496                           	callstack 0
  3497   000021                     motorControl@F6645:
  3498                           	callstack 0
  3499   000021                     	ds	16
  3500   000031                     _dummy:
  3501                           	callstack 0
  3502   000031                     	ds	4
  3503   000035                     TMR0_ISR@CountCallBack:
  3504                           	callstack 0
  3505   000035                     	ds	2
  3506   000037                     _timer0ReloadVal:
  3507                           	callstack 0
  3508   000037                     	ds	2
  3509   000039                     lightControl_Process@oldState:
  3510                           	callstack 0
  3511   000039                     	ds	1
  3512   00003A                     lightControl_Process@state:
  3513                           	callstack 0
  3514   00003A                     	ds	1
  3515   00003B                     lightContol_BackLight@lastLight:
  3516                           	callstack 0
  3517   00003B                     	ds	1
  3518   00003C                     lightContol_FrontLight@lastLight:
  3519                           	callstack 0
  3520   00003C                     	ds	1
  3521   00003D                     motorControl_Process@oldState:
  3522                           	callstack 0
  3523   00003D                     	ds	1
  3524   00003E                     motorControl_Process@state:
  3525                           	callstack 0
  3526   00003E                     	ds	1
  3527   00003F                     motorControl@lastPercent:
  3528                           	callstack 0
  3529   00003F                     	ds	1
  3530                           
  3531                           	psect	bssBANK0
  3532   000060                     __pbssBANK0:
  3533                           	callstack 0
  3534   000060                     _carState:
  3535                           	callstack 0
  3536   000060                     	ds	27
  3537   00007B                     lightContol_BackLight@F6668:
  3538                           	callstack 0
  3539   00007B                     	ds	16
  3540   00008B                     lightContol_FrontLight@F6662:
  3541                           	callstack 0
  3542   00008B                     	ds	16
  3543                           
  3544                           	psect	bssBANK1
  3545   000100                     __pbssBANK1:
  3546                           	callstack 0
  3547   000100                     _spiTransmitBuffer:
  3548                           	callstack 0
  3549   000100                     	ds	200
  3550                           
  3551                           	psect	bssBANK2
  3552   000200                     __pbssBANK2:
  3553                           	callstack 0
  3554   000200                     _spiReceiveBuffer:
  3555                           	callstack 0
  3556   000200                     	ds	200
  3557                           
  3558                           	psect	bssBIGRAM
  3559   0002C8                     __pbssBIGRAM:
  3560                           	callstack 0
  3561   0002C8                     _theXF:
  3562                           	callstack 0
  3563   0002C8                     	ds	282
  3564                           
  3565                           	psect	cstackCOMRAM
  3566   000040                     __pcstackCOMRAM:
  3567                           	callstack 0
  3568   000040                     ??_INTERRUPT_InterruptManager:
  3569                           
  3570                           ; 1 bytes @ 0x0
  3571   000040                     	ds	16
  3572                           
  3573 ;;
  3574 ;;Main: autosize = 12, tempsize = 0, incstack = 0, save=0
  3575 ;;
  3576 ;; *************** function _main *****************
  3577 ;; Defined at:
  3578 ;;		line 56 in file "main.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;		None
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;  fObj            6  [STACK] struct _CAN_FILTEROBJ_ID
  3583 ;;  mObj            6  [STACK] struct _CAN_MASKOBJ_ID
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1  [STACK] void 
  3586 ;; Registers used:
  3587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl,
      + prodh
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;Total ram usage:        0 bytes
  3598 ;; Hardware stack levels required when called: 15
  3599 ;; This function calls:
  3600 ;;		_CanInit
  3601 ;;		_CanSetFilter
  3602 ;;		_SYSTEM_Initialize
  3603 ;;		_TMR0_SetInterruptHandler
  3604 ;;		_XF_executeOnce
  3605 ;;		_XF_init
  3606 ;;		_XF_post
  3607 ;;		_updateCarState
  3608 ;; This function is called by:
  3609 ;;		Startup code after reset
  3610 ;; This function uses a reentrant model
  3611 ;;
  3612                           
  3613                           	psect	text0
  3614   0136B2                     __ptext0:
  3615                           	callstack 0
  3616   0136B2                     _main:
  3617                           	callstack 0
  3618                           
  3619                           ; autosize = 12, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3620   0136B2  0E0C               	movlw	12
  3621   0136B4  26E1               	addwf	fsr1l,f,c
  3622   0136B6  0E00               	movlw	0
  3623   0136B8  22E2               	addwfc	fsr1h,f,c
  3624   0136BA                     
  3625                           ;main.c: 60:     SYSTEM_Initialize();
  3626   0136BA  EC78  F0A4         	call	_SYSTEM_Initialize	;wreg free
  3627   0136BE                     
  3628                           ;main.c: 61:     XF_init();
  3629   0136BE  ECC8  F095         	call	_XF_init	;wreg free
  3630   0136C2                     
  3631                           ;main.c: 62:     TMR0_SetInterruptHandler(XF_decrementAndQueueTimers);
  3632   0136C2  0E04               	movlw	low _XF_decrementAndQueueTimers
  3633   0136C4  6EE6               	movwf	postinc1,c
  3634   0136C6  0E33               	movlw	high _XF_decrementAndQueueTimers
  3635   0136C8  6EE6               	movwf	postinc1,c
  3636   0136CA  0E01               	movlw	low (_XF_decrementAndQueueTimers shr (0+16))
  3637   0136CC  6EE6               	movwf	postinc1,c
  3638   0136CE  EC34  F0A4         	call	_TMR0_SetInterruptHandler	;wreg free
  3639   0136D2                     
  3640                           ;main.c: 64:     CanInit(CAN_250K_500K,0);
  3641   0136D2  0E00               	movlw	0
  3642   0136D4  6EE6               	movwf	postinc1,c
  3643   0136D6  0E08               	movlw	8
  3644   0136D8  6EE6               	movwf	postinc1,c
  3645   0136DA  EC32  F08F         	call	_CanInit	;wreg free
  3646   0136DE                     
  3647                           ;main.c: 65:     CAN_FILTEROBJ_ID fObj;;main.c: 66:     fObj.ID = 0x001;
  3648   0136DE  0E01               	movlw	1
  3649   0136E0  6E09               	movwf	(btemp+8)^0,c
  3650   0136E2  6A0A               	clrf	(btemp+9)^0,c
  3651   0136E4  6A0B               	clrf	(btemp+10)^0,c
  3652   0136E6  6A0C               	clrf	(btemp+11)^0,c
  3653                           
  3654                           ;stkvar	_fObj @ sp[(-12)+0]
  3655   0136E8  0EF4               	movlw	-12
  3656   0136EA  C009  FFE3         	movff	btemp+8,plusw1
  3657   0136EE  0EF5               	movlw	-11
  3658   0136F0  C00A  FFE3         	movff	btemp+9,plusw1
  3659   0136F4  0EF6               	movlw	-10
  3660   0136F6  C00B  FFE3         	movff	btemp+10,plusw1
  3661   0136FA  0EF7               	movlw	-9
  3662   0136FC  C00C  FFE3         	movff	btemp+11,plusw1
  3663   013700                     
  3664                           ;main.c: 67:     CAN_MASKOBJ_ID mObj;;main.c: 68:     mObj.MID = 0x00F;
  3665   013700  0E0F               	movlw	15
  3666   013702  6E09               	movwf	(btemp+8)^0,c
  3667   013704  6A0A               	clrf	(btemp+9)^0,c
  3668   013706  6A0B               	clrf	(btemp+10)^0,c
  3669   013708  6A0C               	clrf	(btemp+11)^0,c
  3670                           
  3671                           ;stkvar	_mObj @ sp[(-12)+6]
  3672   01370A  0EFA               	movlw	-6
  3673   01370C  C009  FFE3         	movff	btemp+8,plusw1
  3674   013710  0EFB               	movlw	-5
  3675   013712  C00A  FFE3         	movff	btemp+9,plusw1
  3676   013716  0EFC               	movlw	-4
  3677   013718  C00B  FFE3         	movff	btemp+10,plusw1
  3678   01371C  0EFD               	movlw	-3
  3679   01371E  C00C  FFE3         	movff	btemp+11,plusw1
  3680   013722                     
  3681                           ;main.c: 69:     CanSetFilter(CAN_FILTER0,&fObj,&mObj);
  3682                           ;stkvar	_mObj @ sp[(-12)+6]
  3683   013722  0EFA               	movlw	250
  3684   013724  24E1               	addwf	fsr1l,w,c
  3685   013726  6E01               	movwf	btemp^0,c
  3686   013728  0EFF               	movlw	255
  3687   01372A  20E2               	addwfc	fsr1h,w,c
  3688   01372C  6E02               	movwf	(btemp+1)^0,c
  3689   01372E  C001  FFE6         	movff	btemp,postinc1
  3690   013732  C002  FFE6         	movff	btemp+1,postinc1
  3691                           
  3692                           ;stkvar	_fObj @ sp[(-14)+0]
  3693   013736  0EF2               	movlw	242
  3694   013738  24E1               	addwf	fsr1l,w,c
  3695   01373A  6E01               	movwf	btemp^0,c
  3696   01373C  0EFF               	movlw	255
  3697   01373E  20E2               	addwfc	fsr1h,w,c
  3698   013740  6E02               	movwf	(btemp+1)^0,c
  3699   013742  C001  FFE6         	movff	btemp,postinc1
  3700   013746  C002  FFE6         	movff	btemp+1,postinc1
  3701   01374A  0E00               	movlw	0
  3702   01374C  6EE6               	movwf	postinc1,c
  3703   01374E  ECB9  F0A1         	call	_CanSetFilter	;wreg free
  3704   013752                     
  3705                           ;main.c: 75:     (INTCONbits.GIE = 1);
  3706   013752  8EF2               	bsf	242,7,c	;volatile
  3707   013754                     
  3708                           ;main.c: 81:     (INTCONbits.PEIE = 1);
  3709   013754  8CF2               	bsf	242,6,c	;volatile
  3710   013756                     
  3711                           ;main.c: 85:     XF_post(lightControl_Process,E_INIT,0);
  3712   013756  0E00               	movlw	0
  3713   013758  6EE6               	movwf	postinc1,c
  3714   01375A  0E00               	movlw	0
  3715   01375C  6EE6               	movwf	postinc1,c
  3716   01375E  0E01               	movlw	1
  3717   013760  6EE6               	movwf	postinc1,c
  3718   013762  0E88               	movlw	low _lightControl_Process
  3719   013764  6EE6               	movwf	postinc1,c
  3720   013766  0E25               	movlw	high _lightControl_Process
  3721   013768  6EE6               	movwf	postinc1,c
  3722   01376A  0E01               	movlw	low (_lightControl_Process shr (0+16))
  3723   01376C  6EE6               	movwf	postinc1,c
  3724   01376E  ECC1  F09B         	call	_XF_post	;wreg free
  3725   013772                     l5317:
  3726                           
  3727                           ;main.c: 87:     {;main.c: 88:         updateCarState();
  3728   013772  EC48  F094         	call	_updateCarState	;wreg free
  3729   013776                     
  3730                           ;main.c: 89:         XF_executeOnce();
  3731   013776  ECF4  F0A0         	call	_XF_executeOnce	;wreg free
  3732   01377A  EFB9  F09B         	goto	l5317
  3733   01377E  EF57  F000         	goto	start
  3734   013782                     __end_of_main:
  3735                           	callstack 0
  3736                           
  3737 ;; *************** function _updateCarState *****************
  3738 ;; Defined at:
  3739 ;;		line 218 in file "carFunctions.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;		None
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;  rxObj          16  [STACK] struct _CAN_RX_MSGOBJ
  3744 ;;  rxdata          8  [STACK] unsigned char [8]
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1  [STACK] void 
  3747 ;; Registers used:
  3748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;Total ram usage:        0 bytes
  3759 ;; Hardware stack levels used: 1
  3760 ;; Hardware stack levels required when called: 12
  3761 ;; This function calls:
  3762 ;;		_CanReceive
  3763 ;;		_XF_post
  3764 ;; This function is called by:
  3765 ;;		_main
  3766 ;; This function uses a reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text1
  3770   012890                     __ptext1:
  3771                           	callstack 0
  3772   012890                     _updateCarState:
  3773                           	callstack 0
  3774                           
  3775                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3776   012890  0E18               	movlw	24
  3777   012892  26E1               	addwf	fsr1l,f,c
  3778   012894  0E00               	movlw	0
  3779   012896  22E2               	addwfc	fsr1h,f,c
  3780   012898                     
  3781                           ;carFunctions.c: 221:     CAN_RX_MSGOBJ rxObj;;carFunctions.c: 222:     uint8_t rxdata[8
      +                          ];;carFunctions.c: 224:     if (CanReceive(&rxObj, rxdata) == 0)
  3782                           ;stkvar	_rxdata @ sp[(-24)+16]
  3783   012898  0EF8               	movlw	248
  3784   01289A  24E1               	addwf	fsr1l,w,c
  3785   01289C  6E01               	movwf	btemp^0,c
  3786   01289E  0EFF               	movlw	255
  3787   0128A0  20E2               	addwfc	fsr1h,w,c
  3788   0128A2  6E02               	movwf	(btemp+1)^0,c
  3789   0128A4  C001  FFE6         	movff	btemp,postinc1
  3790   0128A8  C002  FFE6         	movff	btemp+1,postinc1
  3791                           
  3792                           ;stkvar	_rxObj @ sp[(-26)+0]
  3793   0128AC  0EE6               	movlw	230
  3794   0128AE  24E1               	addwf	fsr1l,w,c
  3795   0128B0  6E01               	movwf	btemp^0,c
  3796   0128B2  0EFF               	movlw	255
  3797   0128B4  20E2               	addwfc	fsr1h,w,c
  3798   0128B6  6E02               	movwf	(btemp+1)^0,c
  3799   0128B8  C001  FFE6         	movff	btemp,postinc1
  3800   0128BC  C002  FFE6         	movff	btemp+1,postinc1
  3801   0128C0  ECEE  F0A1         	call	_CanReceive	;wreg free
  3802   0128C4  5001               	movf	btemp^0,w,c
  3803   0128C6  A4D8               	btfss	status,2,c
  3804   0128C8  EF68  F094         	goto	u2981
  3805   0128CC  EF6A  F094         	goto	u2980
  3806   0128D0                     u2981:
  3807   0128D0  EF03  F095         	goto	l1512
  3808   0128D4                     u2980:
  3809   0128D4  EFD0  F094         	goto	l5277
  3810   0128D8                     l5261:
  3811                           
  3812                           ;carFunctions.c: 230:                 carState.contactKey = rxdata[0];
  3813                           ;stkvar	_rxdata @ sp[(-24)+16]
  3814   0128D8  0EF8               	movlw	-8
  3815   0128DA  CFE3 F06E          	movff	plusw1,_carState+14
  3816   0128DE                     
  3817                           ;carFunctions.c: 232:                 if (rxdata[0] == 0)
  3818                           ;stkvar	_rxdata @ sp[(-24)+16]
  3819   0128DE  0EF8               	movlw	-8
  3820   0128E0  50E3               	movf	plusw1,w,c
  3821   0128E2  A4D8               	btfss	status,2,c
  3822   0128E4  EF76  F094         	goto	u2991
  3823   0128E8  EF78  F094         	goto	u2990
  3824   0128EC                     u2991:
  3825   0128EC  EF96  F094         	goto	l5267
  3826   0128F0                     u2990:
  3827   0128F0                     
  3828                           ;carFunctions.c: 233:                 {;carFunctions.c: 234:                     XF_post
      +                          (lightControl_Process, E_CONTACT_OFF, 0);
  3829   0128F0  0E00               	movlw	0
  3830   0128F2  6EE6               	movwf	postinc1,c
  3831   0128F4  0E00               	movlw	0
  3832   0128F6  6EE6               	movwf	postinc1,c
  3833   0128F8  0E02               	movlw	2
  3834   0128FA  6EE6               	movwf	postinc1,c
  3835   0128FC  0E88               	movlw	low _lightControl_Process
  3836   0128FE  6EE6               	movwf	postinc1,c
  3837   012900  0E25               	movlw	high _lightControl_Process
  3838   012902  6EE6               	movwf	postinc1,c
  3839   012904  0E01               	movlw	low (_lightControl_Process shr (0+16))
  3840   012906  6EE6               	movwf	postinc1,c
  3841   012908  ECC1  F09B         	call	_XF_post	;wreg free
  3842                           
  3843                           ;carFunctions.c: 235:                     XF_post(motorControl_Process, E_CONTACT_OFF, 0
      +                          );
  3844   01290C  0E00               	movlw	0
  3845   01290E  6EE6               	movwf	postinc1,c
  3846   012910  0E00               	movlw	0
  3847   012912  6EE6               	movwf	postinc1,c
  3848   012914  0E02               	movlw	2
  3849   012916  6EE6               	movwf	postinc1,c
  3850   012918  0E50               	movlw	low _motorControl_Process
  3851   01291A  6EE6               	movwf	postinc1,c
  3852   01291C  0E22               	movlw	high _motorControl_Process
  3853   01291E  6EE6               	movwf	postinc1,c
  3854   012920  0E01               	movlw	low (_motorControl_Process shr (0+16))
  3855   012922  6EE6               	movwf	postinc1,c
  3856   012924  ECC1  F09B         	call	_XF_post	;wreg free
  3857                           
  3858                           ;carFunctions.c: 236:                 }
  3859   012928  EF03  F095         	goto	l1512
  3860   01292C                     l5267:
  3861                           
  3862                           ;carFunctions.c: 238:                 {;carFunctions.c: 239:                     XF_post
      +                          (lightControl_Process, E_CONTACT_ON, 0);
  3863   01292C  0E00               	movlw	0
  3864   01292E  6EE6               	movwf	postinc1,c
  3865   012930  0E00               	movlw	0
  3866   012932  6EE6               	movwf	postinc1,c
  3867   012934  0E03               	movlw	3
  3868   012936  6EE6               	movwf	postinc1,c
  3869   012938  0E88               	movlw	low _lightControl_Process
  3870   01293A  6EE6               	movwf	postinc1,c
  3871   01293C  0E25               	movlw	high _lightControl_Process
  3872   01293E  6EE6               	movwf	postinc1,c
  3873   012940  0E01               	movlw	low (_lightControl_Process shr (0+16))
  3874   012942  6EE6               	movwf	postinc1,c
  3875   012944  ECC1  F09B         	call	_XF_post	;wreg free
  3876                           
  3877                           ;carFunctions.c: 240:                     XF_post(motorControl_Process, E_CONTACT_ON, 0)
      +                          ;
  3878   012948  0E00               	movlw	0
  3879   01294A  6EE6               	movwf	postinc1,c
  3880   01294C  0E00               	movlw	0
  3881   01294E  6EE6               	movwf	postinc1,c
  3882   012950  0E03               	movlw	3
  3883   012952  6EE6               	movwf	postinc1,c
  3884   012954  0E50               	movlw	low _motorControl_Process
  3885   012956  6EE6               	movwf	postinc1,c
  3886   012958  0E22               	movlw	high _motorControl_Process
  3887   01295A  6EE6               	movwf	postinc1,c
  3888   01295C  0E01               	movlw	low (_motorControl_Process shr (0+16))
  3889   01295E  6EE6               	movwf	postinc1,c
  3890   012960  ECC1  F09B         	call	_XF_post	;wreg free
  3891   012964  EF03  F095         	goto	l1512
  3892   012968                     l5269:
  3893                           
  3894                           ;carFunctions.c: 246:                 carState.brakePedal = rxdata[0];
  3895                           ;stkvar	_rxdata @ sp[(-24)+16]
  3896   012968  0EF8               	movlw	-8
  3897   01296A  CFE3 F06C          	movff	plusw1,_carState+12
  3898   01296E                     
  3899                           ;carFunctions.c: 248:                 if (rxdata[0] > 0)
  3900                           ;stkvar	_rxdata @ sp[(-24)+16]
  3901   01296E  0EF8               	movlw	-8
  3902   012970  50E3               	movf	plusw1,w,c
  3903   012972  B4D8               	btfsc	status,2,c
  3904   012974  EFBE  F094         	goto	u3001
  3905   012978  EFC0  F094         	goto	u3000
  3906   01297C                     u3001:
  3907   01297C  EF03  F095         	goto	l1512
  3908   012980                     u3000:
  3909   012980                     
  3910                           ;carFunctions.c: 249:                 {;carFunctions.c: 250:                     XF_post
      +                          (lightControl_Process, E_HIGH_BRAKE, 0);
  3911   012980  0E00               	movlw	0
  3912   012982  6EE6               	movwf	postinc1,c
  3913   012984  0E00               	movlw	0
  3914   012986  6EE6               	movwf	postinc1,c
  3915   012988  0E04               	movlw	4
  3916   01298A  6EE6               	movwf	postinc1,c
  3917   01298C  0E88               	movlw	low _lightControl_Process
  3918   01298E  6EE6               	movwf	postinc1,c
  3919   012990  0E25               	movlw	high _lightControl_Process
  3920   012992  6EE6               	movwf	postinc1,c
  3921   012994  0E01               	movlw	low (_lightControl_Process shr (0+16))
  3922   012996  6EE6               	movwf	postinc1,c
  3923   012998  ECC1  F09B         	call	_XF_post	;wreg free
  3924   01299C  EF03  F095         	goto	l1512
  3925   0129A0                     l5277:
  3926                           
  3927                           ;stkvar	_rxObj @ sp[(-24)+0]
  3928   0129A0  50E1               	movf	fsr1l,w,c
  3929   0129A2  0FE8               	addlw	-24
  3930   0129A4  6ED9               	movwf	fsr2l,c
  3931   0129A6  50E2               	movf	fsr1h,w,c
  3932   0129A8  6EDA               	movwf	fsr2h,c
  3933   0129AA  0EFF               	movlw	255
  3934   0129AC  22DA               	addwfc	fsr2h,f,c
  3935   0129AE  0EF0               	movlw	240
  3936   0129B0  14DE               	andwf	postinc2,w,c
  3937   0129B2  6E09               	movwf	(btemp+8)^0,c
  3938   0129B4  0E03               	movlw	3
  3939   0129B6  14DE               	andwf	postinc2,w,c
  3940   0129B8  6E0A               	movwf	(btemp+9)^0,c
  3941   0129BA  0E00               	movlw	0
  3942   0129BC  14DE               	andwf	postinc2,w,c
  3943   0129BE  6E0B               	movwf	(btemp+10)^0,c
  3944   0129C0  0E00               	movlw	0
  3945   0129C2  14DE               	andwf	postinc2,w,c
  3946   0129C4  6E0C               	movwf	(btemp+11)^0,c
  3947                           
  3948                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  3949                           ; Switch size 1, requested type "simple"
  3950                           ; Number of cases is 1, Range of values is 0 to 0
  3951                           ; switch strategies available:
  3952                           ; Name         Instructions Cycles
  3953                           ; simple_byte            4     3 (average)
  3954                           ;	Chosen strategy is simple_byte
  3955   0129C6  500C               	movf	(btemp+11)^0,w,c
  3956   0129C8  0A00               	xorlw	0	; case 0
  3957   0129CA  B4D8               	btfsc	status,2,c
  3958   0129CC  EFFC  F094         	goto	l5503
  3959   0129D0  EF03  F095         	goto	l1512
  3960   0129D4                     l5501:
  3961                           
  3962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3963                           ; Switch size 1, requested type "simple"
  3964                           ; Number of cases is 1, Range of values is 0 to 0
  3965                           ; switch strategies available:
  3966                           ; Name         Instructions Cycles
  3967                           ; simple_byte            4     3 (average)
  3968                           ;	Chosen strategy is simple_byte
  3969   0129D4  500A               	movf	(btemp+9)^0,w,c
  3970   0129D6  0A00               	xorlw	0	; case 0
  3971   0129D8  B4D8               	btfsc	status,2,c
  3972   0129DA  EFF1  F094         	goto	l5505
  3973   0129DE  EF03  F095         	goto	l1512
  3974   0129E2                     l5505:
  3975                           
  3976                           ; Switch size 1, requested type "simple"
  3977                           ; Number of cases is 2, Range of values is 64 to 80
  3978                           ; switch strategies available:
  3979                           ; Name         Instructions Cycles
  3980                           ; simple_byte            7     4 (average)
  3981                           ;	Chosen strategy is simple_byte
  3982   0129E2  5009               	movf	(btemp+8)^0,w,c
  3983   0129E4  0A40               	xorlw	64	; case 64
  3984   0129E6  B4D8               	btfsc	status,2,c
  3985   0129E8  EFB4  F094         	goto	l5269
  3986   0129EC  0A10               	xorlw	16	; case 80
  3987   0129EE  B4D8               	btfsc	status,2,c
  3988   0129F0  EF6C  F094         	goto	l5261
  3989   0129F4  EF03  F095         	goto	l1512
  3990   0129F8                     l5503:
  3991                           
  3992                           ; Switch size 1, requested type "simple"
  3993                           ; Number of cases is 1, Range of values is 0 to 0
  3994                           ; switch strategies available:
  3995                           ; Name         Instructions Cycles
  3996                           ; simple_byte            4     3 (average)
  3997                           ;	Chosen strategy is simple_byte
  3998   0129F8  500B               	movf	(btemp+10)^0,w,c
  3999   0129FA  0A00               	xorlw	0	; case 0
  4000   0129FC  B4D8               	btfsc	status,2,c
  4001   0129FE  EFEA  F094         	goto	l5501
  4002   012A02  EF03  F095         	goto	l1512
  4003   012A06                     l1512:
  4004                           
  4005                           ; _updateCarState: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  4006   012A06  0EE8               	movlw	232
  4007   012A08  26E1               	addwf	fsr1l,f,c
  4008   012A0A  0EFF               	movlw	255
  4009   012A0C  22E2               	addwfc	fsr1h,f,c
  4010   012A0E  0012               	return		;funcret
  4011   012A10                     __end_of_updateCarState:
  4012                           	callstack 0
  4013                           
  4014 ;; *************** function _XF_post *****************
  4015 ;; Defined at:
  4016 ;;		line 274 in file "xf/xf.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;  processEvent    3  [STACK] PTR FTN(PTR struct Event
  4019 ;;		 -> motorControl_Process(1), lightControl_Process(1), 
  4020 ;;  id              1  [STACK] unsigned char 
  4021 ;;  delay           2  [STACK] unsigned short 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  ev              6  [STACK] struct Event_
  4024 ;;  tmid            1  [STACK] unsigned char 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1  [STACK] unsigned char 
  4027 ;; Registers used:
  4028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;Total ram usage:        0 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; Hardware stack levels required when called: 10
  4041 ;; This function calls:
  4042 ;;		_Event_init
  4043 ;;		_Event_setDelay
  4044 ;;		_Event_setId
  4045 ;;		_Event_setPE
  4046 ;;		_XF_pushEvent
  4047 ;; This function is called by:
  4048 ;;		_main
  4049 ;;		_updateCarState
  4050 ;; This function uses a reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text2
  4054   013782                     __ptext2:
  4055                           	callstack 0
  4056   013782                     _XF_post:
  4057                           	callstack 0
  4058                           
  4059                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4060   013782  0E07               	movlw	7
  4061   013784  26E1               	addwf	fsr1l,f,c
  4062   013786  0E00               	movlw	0
  4063   013788  22E2               	addwfc	fsr1h,f,c
  4064   01378A                     
  4065                           ;xf/xf.c: 274: uint8_t XF_post(processEventT processEvent, uint8_t id, uint16_t delay);x
      +                          f/xf.c: 275: {;xf/xf.c: 276:     uint8_t tmid = 12;
  4066                           ;stkvar	_tmid @ sp[(-7)+6]
  4067   01378A  0EFF               	movlw	-1
  4068   01378C  6AE3               	clrf	plusw1,c
  4069   01378E  84E3               	bsf	plusw1,2,c
  4070   013790  86E3               	bsf	plusw1,3,c	;indir
  4071   013792                     
  4072                           ;xf/xf.c: 279:     Event ev;;xf/xf.c: 280:     Event_init(&ev);
  4073                           ;stkvar	_ev @ sp[(-7)+0]
  4074   013792  0EF9               	movlw	249
  4075   013794  24E1               	addwf	fsr1l,w,c
  4076   013796  6E01               	movwf	btemp^0,c
  4077   013798  0EFF               	movlw	255
  4078   01379A  20E2               	addwfc	fsr1h,w,c
  4079   01379C  6E02               	movwf	(btemp+1)^0,c
  4080   01379E  C001  FFE6         	movff	btemp,postinc1
  4081   0137A2  C002  FFE6         	movff	btemp+1,postinc1
  4082   0137A6  EC0A  F0A3         	call	_Event_init	;wreg free
  4083   0137AA                     
  4084                           ;xf/xf.c: 282:     Event_setPE(&ev,processEvent);
  4085                           ;stkvar	_processEvent @ sp[(-7)+-3]
  4086   0137AA  0EF6               	movlw	-10
  4087   0137AC  CFE3 FFE6          	movff	plusw1,postinc1
  4088   0137B0  CFE3 FFE6          	movff	plusw1,postinc1
  4089   0137B4  CFE3 FFE6          	movff	plusw1,postinc1
  4090                           
  4091                           ;stkvar	_ev @ sp[(-10)+0]
  4092   0137B8  0EF6               	movlw	246
  4093   0137BA  24E1               	addwf	fsr1l,w,c
  4094   0137BC  6E01               	movwf	btemp^0,c
  4095   0137BE  0EFF               	movlw	255
  4096   0137C0  20E2               	addwfc	fsr1h,w,c
  4097   0137C2  6E02               	movwf	(btemp+1)^0,c
  4098   0137C4  C001  FFE6         	movff	btemp,postinc1
  4099   0137C8  C002  FFE6         	movff	btemp+1,postinc1
  4100   0137CC  EC56  F0A3         	call	_Event_setPE	;wreg free
  4101   0137D0                     
  4102                           ;xf/xf.c: 283:     Event_setId(&ev,id);
  4103                           ;stkvar	_id @ sp[(-7)+-4]
  4104   0137D0  0EF5               	movlw	-11
  4105   0137D2  50E3               	movf	plusw1,w,c
  4106   0137D4  6EE6               	movwf	postinc1,c
  4107                           
  4108                           ;stkvar	_ev @ sp[(-8)+0]
  4109   0137D6  0EF8               	movlw	248
  4110   0137D8  24E1               	addwf	fsr1l,w,c
  4111   0137DA  6E01               	movwf	btemp^0,c
  4112   0137DC  0EFF               	movlw	255
  4113   0137DE  20E2               	addwfc	fsr1h,w,c
  4114   0137E0  6E02               	movwf	(btemp+1)^0,c
  4115   0137E2  C001  FFE6         	movff	btemp,postinc1
  4116   0137E6  C002  FFE6         	movff	btemp+1,postinc1
  4117   0137EA  EC53  F0A4         	call	_Event_setId	;wreg free
  4118   0137EE                     
  4119                           ;xf/xf.c: 284:     Event_setDelay(&ev,delay);
  4120                           ;stkvar	_delay @ sp[(-7)+-6]
  4121   0137EE  0EF3               	movlw	-13
  4122   0137F0  CFE3 FFE6          	movff	plusw1,postinc1
  4123   0137F4  CFE3 FFE6          	movff	plusw1,postinc1
  4124                           
  4125                           ;stkvar	_ev @ sp[(-9)+0]
  4126   0137F8  0EF7               	movlw	247
  4127   0137FA  24E1               	addwf	fsr1l,w,c
  4128   0137FC  6E01               	movwf	btemp^0,c
  4129   0137FE  0EFF               	movlw	255
  4130   013800  20E2               	addwfc	fsr1h,w,c
  4131   013802  6E02               	movwf	(btemp+1)^0,c
  4132   013804  C001  FFE6         	movff	btemp,postinc1
  4133   013808  C002  FFE6         	movff	btemp+1,postinc1
  4134   01380C  EC91  F0A3         	call	_Event_setDelay	;wreg free
  4135   013810                     
  4136                           ;xf/xf.c: 286:     XF_pushEvent(ev,0,&tmid);
  4137                           ;stkvar	_tmid @ sp[(-7)+6]
  4138   013810  0EFF               	movlw	255
  4139   013812  24E1               	addwf	fsr1l,w,c
  4140   013814  6E01               	movwf	btemp^0,c
  4141   013816  0EFF               	movlw	255
  4142   013818  20E2               	addwfc	fsr1h,w,c
  4143   01381A  6E02               	movwf	(btemp+1)^0,c
  4144   01381C  C001  FFE6         	movff	btemp,postinc1
  4145   013820  C002  FFE6         	movff	btemp+1,postinc1
  4146   013824  0E00               	movlw	0
  4147   013826  6EE6               	movwf	postinc1,c
  4148                           
  4149                           ;stkvar	_ev @ sp[(-10)+0]
  4150   013828  0EF6               	movlw	246
  4151   01382A  24E1               	addwf	fsr1l,w,c
  4152   01382C  6ED9               	movwf	fsr2l,c
  4153   01382E  0EFF               	movlw	255
  4154   013830  20E2               	addwfc	fsr1h,w,c
  4155   013832  6EDA               	movwf	fsr2h,c
  4156   013834  0E06               	movlw	6
  4157   013836                     u2771:
  4158   013836  CFDE FFE6          	movff	postinc2,postinc1
  4159   01383A  2CE8               	decfsz	wreg,w,c
  4160   01383C  EF1B  F09C         	goto	u2771
  4161   013840  EC08  F095         	call	_XF_pushEvent	;wreg free
  4162   013844                     
  4163                           ; _XF_post: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  4164   013844  0EF3               	movlw	243
  4165   013846  26E1               	addwf	fsr1l,f,c
  4166   013848  0EFF               	movlw	255
  4167   01384A  22E2               	addwfc	fsr1h,f,c
  4168   01384C  0012               	return		;funcret
  4169   01384E                     __end_of_XF_post:
  4170                           	callstack 0
  4171                           
  4172 ;; *************** function _XF_pushEvent *****************
  4173 ;; Defined at:
  4174 ;;		line 106 in file "xf/xf.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  ev              6  [STACK] struct Event_
  4177 ;;  inISR           1  [STACK] _Bool 
  4178 ;;  tmid            2  [STACK] PTR unsigned char 
  4179 ;;		 -> tmid(1), dummy(1), 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  tm              2  [STACK] unsigned short 
  4182 ;;  temp            1  [STACK] unsigned char 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1  [STACK] _Bool 
  4185 ;; Registers used:
  4186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4196 ;;Total ram usage:        0 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; Hardware stack levels required when called: 9
  4199 ;; This function calls:
  4200 ;;		_ENTERCRITICAL
  4201 ;;		_Event_getDelay
  4202 ;;		_Event_setDelay
  4203 ;;		_LEAVECRITICAL
  4204 ;;		_XF_noMoreEvent
  4205 ;;		_XF_scheduleTimer
  4206 ;;		___awmod
  4207 ;; This function is called by:
  4208 ;;		_XF_decrementAndQueueTimers
  4209 ;;		_XF_post
  4210 ;; This function uses a reentrant model
  4211 ;;
  4212                           
  4213                           	psect	text3
  4214   012A10                     __ptext3:
  4215                           	callstack 0
  4216   012A10                     _XF_pushEvent:
  4217                           	callstack 0
  4218                           
  4219                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 9, argsize = 9 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4220   012A10  52E6               	movf	postinc1,f,c
  4221   012A12  52E6               	movf	postinc1,f,c
  4222   012A14  52E6               	movf	postinc1,f,c
  4223   012A16                     
  4224                           ;xf/xf.c: 106: _Bool XF_pushEvent(Event ev, _Bool inISR, uint8_t* tmid);xf/xf.c: 107: {;
      +                          xf/xf.c: 108:     uint8_t temp;;xf/xf.c: 109:     uint16_t tm;;xf/xf.c: 110:     tm = Ev
      +                          ent_getDelay(&ev);
  4225                           ;stkvar	_ev @ sp[(-3)+-6]
  4226   012A16  0EF7               	movlw	247
  4227   012A18  24E1               	addwf	fsr1l,w,c
  4228   012A1A  6E01               	movwf	btemp^0,c
  4229   012A1C  0EFF               	movlw	255
  4230   012A1E  20E2               	addwfc	fsr1h,w,c
  4231   012A20  6E02               	movwf	(btemp+1)^0,c
  4232   012A22  C001  FFE6         	movff	btemp,postinc1
  4233   012A26  C002  FFE6         	movff	btemp+1,postinc1
  4234   012A2A  EC21  F0A4         	call	_Event_getDelay	;wreg free
  4235                           
  4236                           ;stkvar	_tm @ sp[(-3)+0]
  4237   012A2E  0EFD               	movlw	-3
  4238   012A30  C001  FFE3         	movff	btemp,plusw1
  4239   012A34  0EFE               	movlw	-2
  4240   012A36  C002  FFE3         	movff	btemp+1,plusw1
  4241   012A3A                     
  4242                           ;xf/xf.c: 111:     if ( tm > 0)
  4243                           ;stkvar	_tm @ sp[(-3)+0]
  4244   012A3A  0EFD               	movlw	-3
  4245   012A3C  CFE3 F001          	movff	plusw1,btemp
  4246   012A40  0EFE               	movlw	-2
  4247   012A42  50E3               	movf	plusw1,w,c
  4248   012A44  1001               	iorwf	btemp^0,w,c
  4249   012A46  B4D8               	btfsc	status,2,c
  4250   012A48  EF28  F095         	goto	u2011
  4251   012A4C  EF2A  F095         	goto	u2010
  4252   012A50                     u2011:
  4253   012A50  EF5A  F095         	goto	l4365
  4254   012A54                     u2010:
  4255   012A54                     
  4256                           ;xf/xf.c: 112:     {;xf/xf.c: 113:         Event_setDelay(&ev,0);
  4257   012A54  0E00               	movlw	0
  4258   012A56  6EE6               	movwf	postinc1,c
  4259   012A58  0E00               	movlw	0
  4260   012A5A  6EE6               	movwf	postinc1,c
  4261                           
  4262                           ;stkvar	_ev @ sp[(-5)+-6]
  4263   012A5C  0EF5               	movlw	245
  4264   012A5E  24E1               	addwf	fsr1l,w,c
  4265   012A60  6E01               	movwf	btemp^0,c
  4266   012A62  0EFF               	movlw	255
  4267   012A64  20E2               	addwfc	fsr1h,w,c
  4268   012A66  6E02               	movwf	(btemp+1)^0,c
  4269   012A68  C001  FFE6         	movff	btemp,postinc1
  4270   012A6C  C002  FFE6         	movff	btemp+1,postinc1
  4271   012A70  EC91  F0A3         	call	_Event_setDelay	;wreg free
  4272   012A74                     
  4273                           ;xf/xf.c: 114:         *tmid = XF_scheduleTimer(tm, ev, inISR);
  4274                           ;stkvar	_inISR @ sp[(-3)+-7]
  4275   012A74  0EF6               	movlw	-10
  4276   012A76  50E3               	movf	plusw1,w,c
  4277   012A78  6EE6               	movwf	postinc1,c
  4278                           
  4279                           ;stkvar	_ev @ sp[(-4)+-6]
  4280   012A7A  0EF6               	movlw	246
  4281   012A7C  24E1               	addwf	fsr1l,w,c
  4282   012A7E  6ED9               	movwf	fsr2l,c
  4283   012A80  0EFF               	movlw	255
  4284   012A82  20E2               	addwfc	fsr1h,w,c
  4285   012A84  6EDA               	movwf	fsr2h,c
  4286   012A86  0E06               	movlw	6
  4287   012A88                     u2021:
  4288   012A88  CFDE FFE6          	movff	postinc2,postinc1
  4289   012A8C  2CE8               	decfsz	wreg,w,c
  4290   012A8E  EF44  F095         	goto	u2021
  4291                           
  4292                           ;stkvar	_tm @ sp[(-10)+0]
  4293   012A92  0EF6               	movlw	-10
  4294   012A94  CFE3 FFE6          	movff	plusw1,postinc1
  4295   012A98  CFE3 FFE6          	movff	plusw1,postinc1
  4296   012A9C  EC78  F09A         	call	_XF_scheduleTimer	;wreg free
  4297                           
  4298                           ;stkvar	_tmid @ sp[(-3)+-9]
  4299   012AA0  0EF4               	movlw	-12
  4300   012AA2  CFE3 FFD9          	movff	plusw1,fsr2l
  4301   012AA6  0EF5               	movlw	-11
  4302   012AA8  CFE3 FFDA          	movff	plusw1,fsr2h
  4303   012AAC  C001  FFDF         	movff	btemp,indf2
  4304                           
  4305                           ;xf/xf.c: 115:     }
  4306   012AB0  EFC1  F095         	goto	l4385
  4307   012AB4                     l4365:
  4308                           
  4309                           ;xf/xf.c: 117:     {;xf/xf.c: 118:         ENTERCRITICAL(inISR);
  4310                           ;stkvar	_inISR @ sp[(-3)+-7]
  4311   012AB4  0EF6               	movlw	-10
  4312   012AB6  50E3               	movf	plusw1,w,c
  4313   012AB8  6EE6               	movwf	postinc1,c
  4314   012ABA  EC6C  F0A4         	call	_ENTERCRITICAL	;wreg free
  4315   012ABE                     
  4316                           ;xf/xf.c: 119:         if((theXF.countEvt+1) >= 30)
  4317   012ABE  EE23  F0DF         	lfsr	2,_theXF+279
  4318   012AC2  50DF               	movf	indf2,w,c
  4319   012AC4  6E0B               	movwf	(btemp+10)^0,c
  4320   012AC6  6A0C               	clrf	(btemp+11)^0,c
  4321   012AC8  0E01               	movlw	1
  4322   012ACA  260B               	addwf	(btemp+10)^0,f,c
  4323   012ACC  0E00               	movlw	0
  4324   012ACE  220C               	addwfc	(btemp+11)^0,f,c
  4325   012AD0  BE0C               	btfsc	(btemp+11)^0,7,c
  4326   012AD2  EF74  F095         	goto	u2031
  4327   012AD6  500C               	movf	(btemp+11)^0,w,c
  4328   012AD8  E109               	bnz	u2030
  4329   012ADA  0E1E               	movlw	30
  4330   012ADC  5C0B               	subwf	(btemp+10)^0,w,c
  4331   012ADE  A0D8               	btfss	status,0,c
  4332   012AE0  EF74  F095         	goto	u2031
  4333   012AE4  EF76  F095         	goto	u2030
  4334   012AE8                     u2031:
  4335   012AE8  EF78  F095         	goto	l4371
  4336   012AEC                     u2030:
  4337   012AEC                     
  4338                           ;xf/xf.c: 120:         {;xf/xf.c: 121:             XF_noMoreEvent();
  4339   012AEC  EC92  F0A4         	call	_XF_noMoreEvent	;wreg free
  4340   012AF0                     l4371:
  4341                           
  4342                           ;xf/xf.c: 123:         theXF.countEvt++;
  4343   012AF0  C3DF  FFE8         	movff	_theXF+279,wreg
  4344   012AF4  0F01               	addlw	1
  4345   012AF6  CFE8 F3DF          	movff	wreg,_theXF+279
  4346   012AFA                     
  4347                           ;xf/xf.c: 124:         if(theXF.maxEvt < theXF.countEvt)
  4348   012AFA  EE23  F0DF         	lfsr	2,_theXF+279
  4349   012AFE  EE03  F0DE         	lfsr	0,_theXF+278
  4350   012B02  50DE               	movf	postinc2,w,c
  4351   012B04  5CEE               	subwf	postinc0,w,c
  4352   012B06  B0D8               	btfsc	status,0,c
  4353   012B08  EF88  F095         	goto	u2041
  4354   012B0C  EF8A  F095         	goto	u2040
  4355   012B10                     u2041:
  4356   012B10  EF8C  F095         	goto	l4377
  4357   012B14                     u2040:
  4358   012B14                     
  4359                           ;xf/xf.c: 125:         {;xf/xf.c: 126:             theXF.maxEvt = theXF.countEvt;
  4360   012B14  C3DF  F3DE         	movff	_theXF+279,_theXF+278
  4361   012B18                     l4377:
  4362                           
  4363                           ;xf/xf.c: 128:         temp = (theXF.in+1) % (uint8_t)(30);
  4364   012B18  0E1E               	movlw	30
  4365   012B1A  6EE6               	movwf	postinc1,c
  4366   012B1C  0E00               	movlw	0
  4367   012B1E  6EE6               	movwf	postinc1,c
  4368   012B20  EE23  F0DC         	lfsr	2,_theXF+276
  4369   012B24  50DF               	movf	indf2,w,c
  4370   012B26  6E0B               	movwf	(btemp+10)^0,c
  4371   012B28  6A0C               	clrf	(btemp+11)^0,c
  4372   012B2A  0E01               	movlw	1
  4373   012B2C  260B               	addwf	(btemp+10)^0,f,c
  4374   012B2E  0E00               	movlw	0
  4375   012B30  220C               	addwfc	(btemp+11)^0,f,c
  4376   012B32  C00B  FFE6         	movff	btemp+10,postinc1
  4377   012B36  C00C  FFE6         	movff	btemp+11,postinc1
  4378   012B3A  EC72  F096         	call	___awmod	;wreg free
  4379                           
  4380                           ;stkvar	_temp @ sp[(-3)+2]
  4381   012B3E  0EFF               	movlw	-1
  4382   012B40  C001  FFE3         	movff	btemp,plusw1
  4383   012B44                     
  4384                           ;xf/xf.c: 129:         theXF.eventQueue[theXF.in] = ev;
  4385                           ;stkvar	_ev @ sp[(-3)+-6]
  4386   012B44  0EF7               	movlw	247
  4387   012B46  24E1               	addwf	fsr1l,w,c
  4388   012B48  6ED9               	movwf	fsr2l,c
  4389   012B4A  0EFF               	movlw	255
  4390   012B4C  20E2               	addwfc	fsr1h,w,c
  4391   012B4E  6EDA               	movwf	fsr2h,c
  4392   012B50  EE03  F0DC         	lfsr	0,_theXF+276
  4393   012B54  50EF               	movf	indf0,w,c
  4394   012B56  0D06               	mullw	6
  4395   012B58  0E28               	movlw	low (_theXF+96)
  4396   012B5A  24F3               	addwf	243,w,c
  4397   012B5C  6EE9               	movwf	fsr0l,c
  4398   012B5E  0E03               	movlw	high (_theXF+96)
  4399   012B60  20F4               	addwfc	prodh,w,c
  4400   012B62  6EEA               	movwf	fsr0h,c
  4401   012B64  0E05               	movlw	5
  4402   012B66                     u2051:
  4403   012B66  CFDB FFEB          	movff	plusw2,plusw0
  4404   012B6A  06E8               	decf	wreg,f,c
  4405   012B6C  E2FC               	bc	u2051
  4406   012B6E                     
  4407                           ;xf/xf.c: 130:         theXF.in = temp;
  4408                           ;stkvar	_temp @ sp[(-3)+2]
  4409   012B6E  0EFF               	movlw	-1
  4410   012B70  CFE3 F00C          	movff	plusw1,btemp+11
  4411   012B74  C00C  F3DC         	movff	btemp+11,_theXF+276
  4412   012B78                     
  4413                           ;xf/xf.c: 131:         LEAVECRITICAL(inISR);
  4414                           ;stkvar	_inISR @ sp[(-3)+-7]
  4415   012B78  0EF6               	movlw	-10
  4416   012B7A  50E3               	movf	plusw1,w,c
  4417   012B7C  6EE6               	movwf	postinc1,c
  4418   012B7E  EC60  F0A4         	call	_LEAVECRITICAL	;wreg free
  4419   012B82                     l4385:
  4420                           
  4421                           ;xf/xf.c: 133:     return 1;
  4422   012B82  0E01               	movlw	1
  4423   012B84  6E01               	movwf	btemp^0,c
  4424   012B86                     
  4425                           ; _XF_pushEvent: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 9, 
      +                          argsize = 9, vargsize = 0
  4426   012B86  0EF4               	movlw	244
  4427   012B88  26E1               	addwf	fsr1l,f,c
  4428   012B8A  0EFF               	movlw	255
  4429   012B8C  22E2               	addwfc	fsr1h,f,c
  4430   012B8E  0012               	return		;funcret
  4431   012B90                     __end_of_XF_pushEvent:
  4432                           	callstack 0
  4433                           
  4434 ;; *************** function _XF_scheduleTimer *****************
  4435 ;; Defined at:
  4436 ;;		line 169 in file "xf/xf.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  tm              2  [STACK] unsigned short 
  4439 ;;  ev              6  [STACK] struct Event_
  4440 ;;  inISR           1  [STACK] _Bool 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  i               1  [STACK] unsigned char 
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1  [STACK] unsigned char 
  4445 ;; Registers used:
  4446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;Total ram usage:        0 bytes
  4457 ;; Hardware stack levels used: 1
  4458 ;; Hardware stack levels required when called: 8
  4459 ;; This function calls:
  4460 ;;		_ENTERCRITICAL
  4461 ;;		_LEAVECRITICAL
  4462 ;;		_XF_noMoreTimer
  4463 ;; This function is called by:
  4464 ;;		_XF_pushEvent
  4465 ;; This function uses a reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text4
  4469   0134F0                     __ptext4:
  4470                           	callstack 0
  4471   0134F0                     _XF_scheduleTimer:
  4472                           	callstack 0
  4473                           
  4474                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 9, argsize = 9 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4475   0134F0  52E6               	movf	postinc1,f,c
  4476   0134F2                     
  4477                           ;xf/xf.c: 169: uint8_t XF_scheduleTimer(uint16_t tm, Event ev, _Bool inISR);xf/xf.c: 170
      +                          : {;xf/xf.c: 171:     uint8_t i;;xf/xf.c: 173:     ENTERCRITICAL(inISR);
  4478                           ;stkvar	_inISR @ sp[(-1)+-9]
  4479   0134F2  0EF6               	movlw	-10
  4480   0134F4  50E3               	movf	plusw1,w,c
  4481   0134F6  6EE6               	movwf	postinc1,c
  4482   0134F8  EC6C  F0A4         	call	_ENTERCRITICAL	;wreg free
  4483                           
  4484                           ;xf/xf.c: 174:     for (i=0; i<12; i++)
  4485                           ;stkvar	_i @ sp[(-1)+0]
  4486   0134FC  0EFF               	movlw	-1
  4487   0134FE  6AE3               	clrf	plusw1,c
  4488   013500                     l4235:
  4489                           
  4490                           ;xf/xf.c: 175:     {;xf/xf.c: 176:         if (theXF.timerList[i].ev.id == 0)
  4491                           ;stkvar	_i @ sp[(-1)+0]
  4492   013500  0EFF               	movlw	-1
  4493   013502  50E3               	movf	plusw1,w,c
  4494   013504  0D08               	mullw	8
  4495   013506  0ECA               	movlw	low (_theXF+2)
  4496   013508  24F3               	addwf	243,w,c
  4497   01350A  6ED9               	movwf	fsr2l,c
  4498   01350C  0E02               	movlw	high (_theXF+2)
  4499   01350E  20F4               	addwfc	prodh,w,c
  4500   013510  6EDA               	movwf	fsr2h,c
  4501   013512  50DF               	movf	indf2,w,c
  4502   013514  A4D8               	btfss	status,2,c
  4503   013516  EF8F  F09A         	goto	u1871
  4504   01351A  EF91  F09A         	goto	u1870
  4505   01351E                     u1871:
  4506   01351E  EFD7  F09A         	goto	l4253
  4507   013522                     u1870:
  4508   013522                     
  4509                           ;xf/xf.c: 177:         {;xf/xf.c: 178:             theXF.timerList[i].tm = tm;
  4510                           ;stkvar	_tm @ sp[(-1)+-2]
  4511   013522  50E1               	movf	fsr1l,w,c
  4512   013524  0FFD               	addlw	-3
  4513   013526  6ED9               	movwf	fsr2l,c
  4514   013528  50E2               	movf	fsr1h,w,c
  4515   01352A  6EDA               	movwf	fsr2h,c
  4516   01352C  0EFF               	movlw	255
  4517   01352E  22DA               	addwfc	fsr2h,f,c
  4518                           
  4519                           ;stkvar	_i @ sp[(-1)+0]
  4520   013530  0EFF               	movlw	-1
  4521   013532  50E3               	movf	plusw1,w,c
  4522   013534  0D08               	mullw	8
  4523   013536  0EC8               	movlw	low _theXF
  4524   013538  24F3               	addwf	243,w,c
  4525   01353A  6EE9               	movwf	fsr0l,c
  4526   01353C  0E02               	movlw	high _theXF
  4527   01353E  20F4               	addwfc	prodh,w,c
  4528   013540  6EEA               	movwf	fsr0h,c
  4529   013542  CFDE FFEE          	movff	postinc2,postinc0
  4530   013546  CFDD FFED          	movff	postdec2,postdec0
  4531                           
  4532                           ;xf/xf.c: 179:             theXF.timerList[i].ev = ev;
  4533                           ;stkvar	_ev @ sp[(-1)+-8]
  4534   01354A  0EF7               	movlw	247
  4535   01354C  24E1               	addwf	fsr1l,w,c
  4536   01354E  6ED9               	movwf	fsr2l,c
  4537   013550  0EFF               	movlw	255
  4538   013552  20E2               	addwfc	fsr1h,w,c
  4539   013554  6EDA               	movwf	fsr2h,c
  4540                           
  4541                           ;stkvar	_i @ sp[(-1)+0]
  4542   013556  0EFF               	movlw	-1
  4543   013558  50E3               	movf	plusw1,w,c
  4544   01355A  0D08               	mullw	8
  4545   01355C  0ECA               	movlw	low (_theXF+2)
  4546   01355E  24F3               	addwf	243,w,c
  4547   013560  6EE9               	movwf	fsr0l,c
  4548   013562  0E02               	movlw	high (_theXF+2)
  4549   013564  20F4               	addwfc	prodh,w,c
  4550   013566  6EEA               	movwf	fsr0h,c
  4551   013568  0E05               	movlw	5
  4552   01356A                     u1881:
  4553   01356A  CFDB FFEB          	movff	plusw2,plusw0
  4554   01356E  06E8               	decf	wreg,f,c
  4555   013570  E2FC               	bc	u1881
  4556   013572                     
  4557                           ;xf/xf.c: 180:             theXF.countTmr++;
  4558   013572  C3E1  FFE8         	movff	_theXF+281,wreg
  4559   013576  0F01               	addlw	1
  4560   013578  CFE8 F3E1          	movff	wreg,_theXF+281
  4561   01357C                     
  4562                           ;xf/xf.c: 181:             if(theXF.countTmr > theXF.maxTmr)
  4563   01357C  EE23  F0E1         	lfsr	2,_theXF+281
  4564   013580  EE03  F0E0         	lfsr	0,_theXF+280
  4565   013584  50DE               	movf	postinc2,w,c
  4566   013586  5CEE               	subwf	postinc0,w,c
  4567   013588  B0D8               	btfsc	status,0,c
  4568   01358A  EFC9  F09A         	goto	u1891
  4569   01358E  EFCB  F09A         	goto	u1890
  4570   013592                     u1891:
  4571   013592  EFCD  F09A         	goto	l4245
  4572   013596                     u1890:
  4573   013596                     
  4574                           ;xf/xf.c: 182:             {;xf/xf.c: 183:                 theXF.maxTmr = theXF.countTmr
      +                          ;
  4575   013596  C3E1  F3E0         	movff	_theXF+281,_theXF+280
  4576   01359A                     l4245:
  4577                           
  4578                           ;xf/xf.c: 185:             LEAVECRITICAL(inISR);
  4579                           ;stkvar	_inISR @ sp[(-1)+-9]
  4580   01359A  0EF6               	movlw	-10
  4581   01359C  50E3               	movf	plusw1,w,c
  4582   01359E  6EE6               	movwf	postinc1,c
  4583   0135A0  EC60  F0A4         	call	_LEAVECRITICAL	;wreg free
  4584   0135A4                     
  4585                           ;xf/xf.c: 186:             return i;
  4586                           ;stkvar	_i @ sp[(-1)+0]
  4587   0135A4  0EFF               	movlw	-1
  4588   0135A6  CFE3 F001          	movff	plusw1,btemp
  4589   0135AA  EFE8  F09A         	goto	l1234
  4590   0135AE                     l4253:
  4591                           
  4592                           ;xf/xf.c: 189:     }
  4593                           ;stkvar	_i @ sp[(-1)+0]
  4594   0135AE  0EFF               	movlw	-1
  4595   0135B0  2AE3               	incf	plusw1,f,c
  4596   0135B2                     
  4597                           ;stkvar	_i @ sp[(-1)+0]
  4598   0135B2  0EFF               	movlw	-1
  4599   0135B4  CFE3 F001          	movff	plusw1,btemp
  4600   0135B8  0E0B               	movlw	11
  4601   0135BA  6401               	cpfsgt	btemp^0,c
  4602   0135BC  EFE2  F09A         	goto	u1901
  4603   0135C0  EFE4  F09A         	goto	u1900
  4604   0135C4                     u1901:
  4605   0135C4  EF80  F09A         	goto	l4235
  4606   0135C8                     u1900:
  4607   0135C8                     
  4608                           ;xf/xf.c: 190:     XF_noMoreTimer();
  4609   0135C8  EC8F  F0A4         	call	_XF_noMoreTimer	;wreg free
  4610   0135CC  EFCD  F09A         	goto	l4245
  4611   0135D0                     l1234:
  4612                           
  4613                           ; _XF_scheduleTimer: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           9, argsize = 9, vargsize = 0
  4614   0135D0  0EF6               	movlw	246
  4615   0135D2  26E1               	addwf	fsr1l,f,c
  4616   0135D4  0EFF               	movlw	255
  4617   0135D6  22E2               	addwfc	fsr1h,f,c
  4618   0135D8  0012               	return		;funcret
  4619   0135DA                     __end_of_XF_scheduleTimer:
  4620                           	callstack 0
  4621                           
  4622 ;; *************** function _XF_noMoreTimer *****************
  4623 ;; Defined at:
  4624 ;;		line 69 in file "xf/xf.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;		None
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1  [STACK] void 
  4631 ;; Registers used:
  4632 ;;		None
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4642 ;;Total ram usage:        0 bytes
  4643 ;; Hardware stack levels used: 1
  4644 ;; Hardware stack levels required when called: 7
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_XF_scheduleTimer
  4649 ;; This function uses a reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text5
  4653   01491E                     __ptext5:
  4654                           	callstack 0
  4655   01491E                     _XF_noMoreTimer:
  4656                           	callstack 9
  4657   01491E                     l1206:
  4658   01491E  EF8F  F0A4         	goto	l1206
  4659                           
  4660                           ; _XF_noMoreTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4661   014922  0012               	return		;funcret
  4662   014924                     __end_of_XF_noMoreTimer:
  4663                           	callstack 0
  4664                           
  4665 ;; *************** function _XF_noMoreEvent *****************
  4666 ;; Defined at:
  4667 ;;		line 65 in file "xf/xf.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;		None
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  1  [STACK] void 
  4674 ;; Registers used:
  4675 ;;		None
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;Total ram usage:        0 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; Hardware stack levels required when called: 7
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_XF_pushEvent
  4692 ;; This function uses a reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text6
  4696   014924                     __ptext6:
  4697                           	callstack 0
  4698   014924                     _XF_noMoreEvent:
  4699                           	callstack 10
  4700   014924                     l1200:
  4701   014924  EF92  F0A4         	goto	l1200
  4702                           
  4703                           ; _XF_noMoreEvent: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4704   014928  0012               	return		;funcret
  4705   01492A                     __end_of_XF_noMoreEvent:
  4706                           	callstack 0
  4707                           
  4708 ;; *************** function _Event_setDelay *****************
  4709 ;; Defined at:
  4710 ;;		line 32 in file "xf/event.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;  me              2  [STACK] PTR struct Event_
  4713 ;;		 -> ev(6), 
  4714 ;;  delay           2  [STACK] unsigned short 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;		None
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1  [STACK] void 
  4719 ;; Registers used:
  4720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;Total ram usage:        0 bytes
  4731 ;; Hardware stack levels used: 1
  4732 ;; Hardware stack levels required when called: 7
  4733 ;; This function calls:
  4734 ;;		Nothing
  4735 ;; This function is called by:
  4736 ;;		_XF_pushEvent
  4737 ;;		_XF_post
  4738 ;; This function uses a reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text7
  4742   014722                     __ptext7:
  4743                           	callstack 0
  4744   014722                     _Event_setDelay:
  4745                           	callstack 10
  4746   014722                     
  4747                           ;xf/event.c: 32: void Event_setDelay(Event* me, uint16_t delay);xf/event.c: 33: {;xf/eve
      +                          nt.c: 34:     me->delay = delay;
  4748                           ;stkvar	_delay @ sp[(0)+-4]
  4749   014722  50E1               	movf	fsr1l,w,c
  4750   014724  0FFC               	addlw	-4
  4751   014726  6ED9               	movwf	fsr2l,c
  4752   014728  50E2               	movf	fsr1h,w,c
  4753   01472A  6EDA               	movwf	fsr2h,c
  4754   01472C  0EFF               	movlw	255
  4755   01472E  22DA               	addwfc	fsr2h,f,c
  4756                           
  4757                           ;stkvar	_me @ sp[(0)+-2]
  4758   014730  0EFE               	movlw	-2
  4759   014732  CFE3 F00B          	movff	plusw1,btemp+10
  4760   014736  0EFF               	movlw	-1
  4761   014738  CFE3 F00C          	movff	plusw1,btemp+11
  4762   01473C  0E04               	movlw	4
  4763   01473E  240B               	addwf	(btemp+10)^0,w,c
  4764   014740  6EE9               	movwf	fsr0l,c
  4765   014742  0E00               	movlw	0
  4766   014744  200C               	addwfc	(btemp+11)^0,w,c
  4767   014746  6EEA               	movwf	fsr0h,c
  4768   014748  CFDE FFEE          	movff	postinc2,postinc0
  4769   01474C  CFDD FFED          	movff	postdec2,postdec0
  4770   014750                     
  4771                           ; _Event_setDelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  4772   014750  52E5               	movf	postdec1,f,c
  4773   014752  52E5               	movf	postdec1,f,c
  4774   014754  52E5               	movf	postdec1,f,c
  4775   014756  52E5               	movf	postdec1,f,c
  4776   014758  0012               	return		;funcret
  4777   01475A                     __end_of_Event_setDelay:
  4778                           	callstack 0
  4779                           
  4780 ;; *************** function _Event_getDelay *****************
  4781 ;; Defined at:
  4782 ;;		line 37 in file "xf/event.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  me              2  [STACK] PTR struct Event_
  4785 ;;		 -> ev(6), 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  2  [STACK] unsigned short 
  4790 ;; Registers used:
  4791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4801 ;;Total ram usage:        0 bytes
  4802 ;; Hardware stack levels used: 1
  4803 ;; Hardware stack levels required when called: 7
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_XF_pushEvent
  4808 ;; This function uses a reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text8
  4812   014842                     __ptext8:
  4813                           	callstack 0
  4814   014842                     _Event_getDelay:
  4815                           	callstack 10
  4816   014842                     
  4817                           ;xf/event.c: 37: uint16_t Event_getDelay(Event* me);xf/event.c: 38: {;xf/event.c: 39:   
      +                            return me->delay;
  4818                           ;stkvar	_me @ sp[(0)+-2]
  4819   014842  0EFE               	movlw	-2
  4820   014844  CFE3 F00B          	movff	plusw1,btemp+10
  4821   014848  0EFF               	movlw	-1
  4822   01484A  CFE3 F00C          	movff	plusw1,btemp+11
  4823   01484E  0E04               	movlw	4
  4824   014850  240B               	addwf	(btemp+10)^0,w,c
  4825   014852  6ED9               	movwf	fsr2l,c
  4826   014854  0E00               	movlw	0
  4827   014856  200C               	addwfc	(btemp+11)^0,w,c
  4828   014858  6EDA               	movwf	fsr2h,c
  4829   01485A  CFDE F001          	movff	postinc2,btemp
  4830   01485E  CFDD F002          	movff	postdec2,btemp+1
  4831   014862                     
  4832                           ; _Event_getDelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
  4833   014862  52E5               	movf	postdec1,f,c
  4834   014864  52E5               	movf	postdec1,f,c
  4835   014866  0012               	return		;funcret
  4836   014868                     __end_of_Event_getDelay:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function _Event_setPE *****************
  4840 ;; Defined at:
  4841 ;;		line 12 in file "xf/event.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  me              2  [STACK] PTR struct Event_
  4844 ;;		 -> ev(6), 
  4845 ;;  processEvent    3  [STACK] PTR FTN(PTR struct Event
  4846 ;;		 -> motorControl_Process(1), lightControl_Process(1), 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;		None
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1  [STACK] void 
  4851 ;; Registers used:
  4852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4862 ;;Total ram usage:        0 bytes
  4863 ;; Hardware stack levels used: 1
  4864 ;; Hardware stack levels required when called: 7
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_XF_post
  4869 ;; This function uses a reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text9
  4873   0146AC                     __ptext9:
  4874                           	callstack 0
  4875   0146AC                     _Event_setPE:
  4876                           	callstack 21
  4877   0146AC                     
  4878                           ;xf/event.c: 12: void Event_setPE(Event* me, processEventT processEvent);xf/event.c: 13:
      +                           {;xf/event.c: 14:     me->processEvent = processEvent;
  4879                           ;stkvar	_processEvent @ sp[(0)+-5]
  4880   0146AC  50E1               	movf	fsr1l,w,c
  4881   0146AE  0FFB               	addlw	-5
  4882   0146B0  6ED9               	movwf	fsr2l,c
  4883   0146B2  50E2               	movf	fsr1h,w,c
  4884   0146B4  6EDA               	movwf	fsr2h,c
  4885   0146B6  0EFF               	movlw	255
  4886   0146B8  22DA               	addwfc	fsr2h,f,c
  4887                           
  4888                           ;stkvar	_me @ sp[(0)+-2]
  4889   0146BA  0EFE               	movlw	-2
  4890   0146BC  CFE3 F00B          	movff	plusw1,btemp+10
  4891   0146C0  0EFF               	movlw	-1
  4892   0146C2  CFE3 F00C          	movff	plusw1,btemp+11
  4893   0146C6  0E01               	movlw	1
  4894   0146C8  240B               	addwf	(btemp+10)^0,w,c
  4895   0146CA  6EE9               	movwf	fsr0l,c
  4896   0146CC  0E00               	movlw	0
  4897   0146CE  200C               	addwfc	(btemp+11)^0,w,c
  4898   0146D0  6EEA               	movwf	fsr0h,c
  4899   0146D2  CFDE FFEE          	movff	postinc2,postinc0
  4900   0146D6  CFDE FFEE          	movff	postinc2,postinc0
  4901   0146DA  CFDE FFEE          	movff	postinc2,postinc0
  4902   0146DE                     
  4903                           ; _Event_setPE: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, a
      +                          rgsize = 5, vargsize = 0
  4904   0146DE  0EFB               	movlw	251
  4905   0146E0  26E1               	addwf	fsr1l,f,c
  4906   0146E2  0EFF               	movlw	255
  4907   0146E4  22E2               	addwfc	fsr1h,f,c
  4908   0146E6  0012               	return		;funcret
  4909   0146E8                     __end_of_Event_setPE:
  4910                           	callstack 0
  4911                           
  4912 ;; *************** function _Event_setId *****************
  4913 ;; Defined at:
  4914 ;;		line 22 in file "xf/event.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;  me              2  [STACK] PTR struct Event_
  4917 ;;		 -> ev(6), 
  4918 ;;  eventID         1  [STACK] unsigned char 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;		None
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  1  [STACK] void 
  4923 ;; Registers used:
  4924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4934 ;;Total ram usage:        0 bytes
  4935 ;; Hardware stack levels used: 1
  4936 ;; Hardware stack levels required when called: 7
  4937 ;; This function calls:
  4938 ;;		Nothing
  4939 ;; This function is called by:
  4940 ;;		_XF_post
  4941 ;; This function uses a reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text10
  4945   0148A6                     __ptext10:
  4946                           	callstack 0
  4947   0148A6                     _Event_setId:
  4948                           	callstack 21
  4949   0148A6                     
  4950                           ;xf/event.c: 22: void Event_setId(Event* me, evIDT eventID);xf/event.c: 23: {;xf/event.c
      +                          : 24:     me->id = eventID;
  4951                           ;stkvar	_eventID @ sp[(0)+-3]
  4952                           ;stkvar	_me @ sp[(0)+-2]
  4953   0148A6  0EFE               	movlw	-2
  4954   0148A8  CFE3 FFD9          	movff	plusw1,fsr2l
  4955   0148AC  0EFF               	movlw	-1
  4956   0148AE  CFE3 FFDA          	movff	plusw1,fsr2h
  4957   0148B2  0EFD               	movlw	-3
  4958   0148B4  CFE3 FFDF          	movff	plusw1,indf2
  4959   0148B8                     
  4960                           ; _Event_setId: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, a
      +                          rgsize = 3, vargsize = 0
  4961   0148B8  52E5               	movf	postdec1,f,c
  4962   0148BA  52E5               	movf	postdec1,f,c
  4963   0148BC  52E5               	movf	postdec1,f,c
  4964   0148BE  0012               	return		;funcret
  4965   0148C0                     __end_of_Event_setId:
  4966                           	callstack 0
  4967                           
  4968 ;; *************** function _CanReceive *****************
  4969 ;; Defined at:
  4970 ;;		line 242 in file "can/can.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  rxObj           2  [STACK] PTR struct _CAN_RX_MSGOB
  4973 ;;		 -> rxObj(16), 
  4974 ;;  rxd             2  [STACK] PTR unsigned char 
  4975 ;;		 -> rxdata(8), 
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  rxFlags         1  [STACK] enum E5591
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1  [STACK] char 
  4980 ;; Registers used:
  4981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;Total ram usage:        0 bytes
  4992 ;; Hardware stack levels used: 1
  4993 ;; Hardware stack levels required when called: 11
  4994 ;; This function calls:
  4995 ;;		_DRV_CANFDSPI_ReceiveChannelEventGet
  4996 ;;		_DRV_CANFDSPI_ReceiveMessageGet
  4997 ;; This function is called by:
  4998 ;;		_updateCarState
  4999 ;; This function uses a reentrant model
  5000 ;;
  5001                           
  5002                           	psect	text11
  5003   0143DC                     __ptext11:
  5004                           	callstack 0
  5005   0143DC                     _CanReceive:
  5006                           	callstack 0
  5007                           
  5008                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5009   0143DC  52E6               	movf	postinc1,f,c
  5010   0143DE                     
  5011                           ;can/can.c: 242: int8_t CanReceive(CAN_RX_MSGOBJ * rxObj, uint8_t * rxd);can/can.c: 243:
      +                           {;can/can.c: 244:   CAN_RX_FIFO_EVENT rxFlags;;can/can.c: 245:   DRV_CANFDSPI_ReceiveCh
      +                          annelEventGet(CAN_FIFO_CH2,&rxFlags);
  5012                           ;stkvar	_rxFlags @ sp[(-1)+0]
  5013   0143DE  0EFF               	movlw	255
  5014   0143E0  24E1               	addwf	fsr1l,w,c
  5015   0143E2  6E01               	movwf	btemp^0,c
  5016   0143E4  0EFF               	movlw	255
  5017   0143E6  20E2               	addwfc	fsr1h,w,c
  5018   0143E8  6E02               	movwf	(btemp+1)^0,c
  5019   0143EA  C001  FFE6         	movff	btemp,postinc1
  5020   0143EE  C002  FFE6         	movff	btemp+1,postinc1
  5021   0143F2  0E02               	movlw	2
  5022   0143F4  6EE6               	movwf	postinc1,c
  5023   0143F6  ECC2  F09F         	call	_DRV_CANFDSPI_ReceiveChannelEventGet	;wreg free
  5024   0143FA                     
  5025                           ;can/can.c: 246:   if(rxFlags & CAN_RX_FIFO_NOT_EMPTY_EVENT)
  5026                           ;stkvar	_rxFlags @ sp[(-1)+0]
  5027   0143FA  0EFF               	movlw	-1
  5028   0143FC  A0E3               	btfss	plusw1,0,c
  5029   0143FE  EF03  F0A2         	goto	u2711
  5030   014402  EF05  F0A2         	goto	u2710
  5031   014406                     u2711:
  5032   014406  EF19  F0A2         	goto	l4975
  5033   01440A                     u2710:
  5034   01440A                     
  5035                           ;can/can.c: 247:   {;can/can.c: 248:     DRV_CANFDSPI_ReceiveMessageGet(CAN_FIFO_CH2,rxO
      +                          bj,rxd,8);
  5036   01440A  0E08               	movlw	8
  5037   01440C  6EE6               	movwf	postinc1,c
  5038                           
  5039                           ;stkvar	_rxd @ sp[(-2)+-4]
  5040   01440E  0EFA               	movlw	-6
  5041   014410  CFE3 FFE6          	movff	plusw1,postinc1
  5042   014414  CFE3 FFE6          	movff	plusw1,postinc1
  5043                           
  5044                           ;stkvar	_rxObj @ sp[(-4)+-2]
  5045   014418  0EFA               	movlw	-6
  5046   01441A  CFE3 FFE6          	movff	plusw1,postinc1
  5047   01441E  CFE3 FFE6          	movff	plusw1,postinc1
  5048   014422  0E02               	movlw	2
  5049   014424  6EE6               	movwf	postinc1,c
  5050   014426  ECA6  F083         	call	_DRV_CANFDSPI_ReceiveMessageGet	;wreg free
  5051   01442A                     
  5052                           ;can/can.c: 249:     return 0;
  5053   01442A  0E00               	movlw	0
  5054   01442C  6E01               	movwf	btemp^0,c
  5055   01442E  EF1B  F0A2         	goto	l165
  5056   014432                     l4975:
  5057                           
  5058                           ;can/can.c: 251:   return -1;
  5059   014432  0EFF               	movlw	255
  5060   014434  6E01               	movwf	btemp^0,c
  5061   014436                     l165:
  5062                           
  5063                           ; _CanReceive: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  5064   014436  0EFB               	movlw	251
  5065   014438  26E1               	addwf	fsr1l,f,c
  5066   01443A  0EFF               	movlw	255
  5067   01443C  22E2               	addwfc	fsr1h,f,c
  5068   01443E  0012               	return		;funcret
  5069   014440                     __end_of_CanReceive:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function _DRV_CANFDSPI_ReceiveMessageGet *****************
  5073 ;; Defined at:
  5074 ;;		line 1236 in file "can/can.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  channel         1  [STACK] enum E5290
  5077 ;;  rxObj           2  [STACK] PTR struct _CAN_RX_MSGOB
  5078 ;;		 -> rxObj(16), txMsg(16), 
  5079 ;;  rxd             2  [STACK] PTR unsigned char 
  5080 ;;		 -> rxdata(8), 
  5081 ;;  nBytes          1  [STACK] unsigned char 
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;  temp32          4  [STACK] unsigned long 
  5084 ;;  ba             76  [STACK] unsigned char [76]
  5085 ;;  fifoReg        12  [STACK] unsigned long [3]
  5086 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
  5087 ;;  myReg           4  [STACK] struct _REG_t
  5088 ;;  ciFifoUa        4  [STACK] struct _REG_CiFIFOUA
  5089 ;;  ciFifoSta       4    0        struct _REG_CiFIFOSTA
  5090 ;;  a               2  [STACK] unsigned short 
  5091 ;;  i               1  [STACK] unsigned char 
  5092 ;;  n               1  [STACK] unsigned char 
  5093 ;;  spiTransferE    1  [STACK] char 
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  1  [STACK] char 
  5096 ;; Registers used:
  5097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;Total ram usage:        0 bytes
  5108 ;; Hardware stack levels used: 1
  5109 ;; Hardware stack levels required when called: 10
  5110 ;; This function calls:
  5111 ;;		_DRV_CANFDSPI_ReadByteArray
  5112 ;;		_DRV_CANFDSPI_ReadWordArray
  5113 ;;		_DRV_CANFDSPI_ReceiveChannelUpdate
  5114 ;; This function is called by:
  5115 ;;		_CanReceive
  5116 ;; This function uses a reentrant model
  5117 ;;
  5118                           
  5119                           	psect	text12
  5120   01074C                     __ptext12:
  5121                           	callstack 0
  5122   01074C                     _DRV_CANFDSPI_ReceiveMessageGet:
  5123                           	callstack 0
  5124                           
  5125                           ; autosize = 110, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 v
      +                          argsize = 0, retsize = 0 argfudge = 0
  5126   01074C  0E6E               	movlw	110
  5127   01074E  26E1               	addwf	fsr1l,f,c
  5128   010750  0E00               	movlw	0
  5129   010752  22E2               	addwfc	fsr1h,f,c
  5130   010754                     
  5131                           ;can/can.c: 1241:     uint8_t i = 0;
  5132                           ;stkvar	_i @ sp[(-110)+107]
  5133   010754  0EFD               	movlw	-3
  5134   010756  6AE3               	clrf	plusw1,c
  5135                           
  5136                           ;can/can.c: 1242:     uint16_t a;;can/can.c: 1243:     uint32_t fifoReg[3];;can/can.c: 1
      +                          244:     REG_CiFIFOCON ciFifoCon;;can/can.c: 1245:     __attribute__((unused)) REG_CiFIF
      +                          OSTA ciFifoSta;;can/can.c: 1246:     REG_CiFIFOUA ciFifoUa;;can/can.c: 1247:     int8_t 
      +                          spiTransferError = 0;
  5137                           ;stkvar	_spiTransferError @ sp[(-110)+109]
  5138   010758  0EFF               	movlw	-1
  5139   01075A  6AE3               	clrf	plusw1,c
  5140   01075C                     
  5141                           ;can/can.c: 1250:     a = 0x050 + (channel * (3*4));
  5142                           ;stkvar	_channel @ sp[(-110)+-1]
  5143   01075C  0E91               	movlw	-111
  5144   01075E  50E3               	movf	plusw1,w,c
  5145   010760  0D0C               	mullw	12
  5146   010762  0E50               	movlw	80
  5147   010764  26F3               	addwf	243,f,c
  5148   010766  0E00               	movlw	0
  5149   010768  22F4               	addwfc	244,f,c
  5150                           
  5151                           ;stkvar	_a @ sp[(-110)+105]
  5152   01076A  0EFB               	movlw	-5
  5153   01076C  CFF3 FFE3          	movff	prodl,plusw1
  5154   010770  0EFC               	movlw	-4
  5155   010772  CFF4 FFE3          	movff	prodh,plusw1
  5156   010776                     
  5157                           ;can/can.c: 1252:     spiTransferError = DRV_CANFDSPI_ReadWordArray( a, fifoReg, 3);
  5158   010776  0E03               	movlw	3
  5159   010778  6EE6               	movwf	postinc1,c
  5160   01077A  0E00               	movlw	0
  5161   01077C  6EE6               	movwf	postinc1,c
  5162                           
  5163                           ;stkvar	_fifoReg @ sp[(-112)+80]
  5164   01077E  0EE0               	movlw	224
  5165   010780  24E1               	addwf	fsr1l,w,c
  5166   010782  6E01               	movwf	btemp^0,c
  5167   010784  0EFF               	movlw	255
  5168   010786  20E2               	addwfc	fsr1h,w,c
  5169   010788  6E02               	movwf	(btemp+1)^0,c
  5170   01078A  C001  FFE6         	movff	btemp,postinc1
  5171   01078E  C002  FFE6         	movff	btemp+1,postinc1
  5172                           
  5173                           ;stkvar	_a @ sp[(-114)+105]
  5174   010792  0EF7               	movlw	-9
  5175   010794  CFE3 FFE6          	movff	plusw1,postinc1
  5176   010798  CFE3 FFE6          	movff	plusw1,postinc1
  5177   01079C  EC59  F08A         	call	_DRV_CANFDSPI_ReadWordArray	;wreg free
  5178                           
  5179                           ;stkvar	_spiTransferError @ sp[(-110)+109]
  5180   0107A0  0EFF               	movlw	-1
  5181   0107A2  C001  FFE3         	movff	btemp,plusw1
  5182   0107A6                     
  5183                           ;can/can.c: 1253:     if (spiTransferError) {
  5184                           ;stkvar	_spiTransferError @ sp[(-110)+109]
  5185   0107A6  0EFF               	movlw	-1
  5186   0107A8  50E3               	movf	plusw1,w,c
  5187   0107AA  B4D8               	btfsc	status,2,c
  5188   0107AC  EFDA  F083         	goto	u2081
  5189   0107B0  EFDC  F083         	goto	u2080
  5190   0107B4                     u2081:
  5191   0107B4  EFDE  F083         	goto	l4431
  5192   0107B8                     u2080:
  5193   0107B8  EF15  F087         	goto	l357
  5194   0107BC                     l4431:
  5195                           
  5196                           ;can/can.c: 1258:     ciFifoCon.word = fifoReg[0];
  5197                           ;stkvar	_fifoReg @ sp[(-110)+80]
  5198   0107BC  0EE2               	movlw	-30
  5199   0107BE  CFE3 F009          	movff	plusw1,btemp+8
  5200   0107C2  0EE3               	movlw	-29
  5201   0107C4  CFE3 F00A          	movff	plusw1,btemp+9
  5202   0107C8  0EE4               	movlw	-28
  5203   0107CA  CFE3 F00B          	movff	plusw1,btemp+10
  5204   0107CE  0EE5               	movlw	-27
  5205   0107D0  CFE3 F00C          	movff	plusw1,btemp+11
  5206                           
  5207                           ;stkvar	_ciFifoCon @ sp[(-110)+92]
  5208   0107D4  0EEE               	movlw	-18
  5209   0107D6  C009  FFE3         	movff	btemp+8,plusw1
  5210   0107DA  0EEF               	movlw	-17
  5211   0107DC  C00A  FFE3         	movff	btemp+9,plusw1
  5212   0107E0  0EF0               	movlw	-16
  5213   0107E2  C00B  FFE3         	movff	btemp+10,plusw1
  5214   0107E6  0EF1               	movlw	-15
  5215   0107E8  C00C  FFE3         	movff	btemp+11,plusw1
  5216   0107EC                     
  5217                           ;can/can.c: 1259:     if (ciFifoCon.txBF.TxEnable) {
  5218                           ;stkvar	_ciFifoCon @ sp[(-110)+92]
  5219   0107EC  50E1               	movf	fsr1l,w,c
  5220   0107EE  0FEE               	addlw	-18
  5221   0107F0  6ED9               	movwf	fsr2l,c
  5222   0107F2  50E2               	movf	fsr1h,w,c
  5223   0107F4  6EDA               	movwf	fsr2h,c
  5224   0107F6  0EFF               	movlw	255
  5225   0107F8  22DA               	addwfc	fsr2h,f,c
  5226   0107FA  AEDF               	btfss	indf2,7,c
  5227   0107FC  EF02  F084         	goto	u2091
  5228   010800  EF04  F084         	goto	u2090
  5229   010804                     u2091:
  5230   010804  EF06  F084         	goto	l4437
  5231   010808                     u2090:
  5232   010808  EF15  F087         	goto	l357
  5233   01080C                     l4437:
  5234                           
  5235                           ;can/can.c: 1267:     ciFifoUa.word = fifoReg[2];
  5236                           ;stkvar	_fifoReg @ sp[(-110)+80]
  5237   01080C  0EEA               	movlw	234
  5238   01080E  24E1               	addwf	fsr1l,w,c
  5239   010810  6ED9               	movwf	fsr2l,c
  5240   010812  0EFF               	movlw	255
  5241   010814  20E2               	addwfc	fsr1h,w,c
  5242   010816  6EDA               	movwf	fsr2h,c
  5243   010818  CFDE F009          	movff	postinc2,btemp+8
  5244   01081C  CFDE F00A          	movff	postinc2,btemp+9
  5245   010820  CFDE F00B          	movff	postinc2,btemp+10
  5246   010824  CFDE F00C          	movff	postinc2,btemp+11
  5247                           
  5248                           ;stkvar	_ciFifoUa @ sp[(-110)+101]
  5249   010828  0EF7               	movlw	-9
  5250   01082A  C009  FFE3         	movff	btemp+8,plusw1
  5251   01082E  0EF8               	movlw	-8
  5252   010830  C00A  FFE3         	movff	btemp+9,plusw1
  5253   010834  0EF9               	movlw	-7
  5254   010836  C00B  FFE3         	movff	btemp+10,plusw1
  5255   01083A  0EFA               	movlw	-6
  5256   01083C  C00C  FFE3         	movff	btemp+11,plusw1
  5257   010840                     
  5258                           ;can/can.c: 1271:     a = (uint16_t)ciFifoUa.bF.UserAddress;
  5259                           ;stkvar	_ciFifoUa @ sp[(-110)+101]
  5260                           ;stkvar	_a @ sp[(-110)+105]
  5261   010840  0EF7               	movlw	-9
  5262   010842  CFE3 F001          	movff	plusw1,btemp
  5263   010846  0EFB               	movlw	-5
  5264   010848  C001  FFE3         	movff	btemp,plusw1
  5265   01084C  0EF8               	movlw	-8
  5266   01084E  CFE3 F001          	movff	plusw1,btemp
  5267   010852  0EFC               	movlw	-4
  5268   010854  C001  FFE3         	movff	btemp,plusw1
  5269   010858                     
  5270                           ;can/can.c: 1273:     a += 0x400;
  5271                           ;stkvar	_a @ sp[(-110)+105]
  5272   010858  50E1               	movf	fsr1l,w,c
  5273   01085A  0FFB               	addlw	-5
  5274   01085C  6ED9               	movwf	fsr2l,c
  5275   01085E  50E2               	movf	fsr1h,w,c
  5276   010860  6EDA               	movwf	fsr2h,c
  5277   010862  0EFF               	movlw	255
  5278   010864  22DA               	addwfc	fsr2h,f,c
  5279   010866  0E00               	movlw	0
  5280   010868  26DE               	addwf	postinc2,f,c
  5281   01086A  0E04               	movlw	4
  5282   01086C  22DD               	addwfc	postdec2,f,c
  5283   01086E                     
  5284                           ;can/can.c: 1276:     n = nBytes + 8;
  5285   01086E  0E08               	movlw	8
  5286   010870  6E0C               	movwf	(btemp+11)^0,c
  5287                           
  5288                           ;stkvar	_nBytes @ sp[(-110)+-6]
  5289   010872  0E8C               	movlw	-116
  5290   010874  50E3               	movf	plusw1,w,c
  5291   010876  240C               	addwf	(btemp+11)^0,w,c
  5292   010878  6E0B               	movwf	(btemp+10)^0,c
  5293                           
  5294                           ;stkvar	_n @ sp[(-110)+108]
  5295   01087A  0EFE               	movlw	-2
  5296   01087C  C00B  FFE3         	movff	btemp+10,plusw1
  5297   010880                     
  5298                           ;can/can.c: 1278:     if (ciFifoCon.rxBF.RxTimeStampEnable) {
  5299                           ;stkvar	_ciFifoCon @ sp[(-110)+92]
  5300   010880  50E1               	movf	fsr1l,w,c
  5301   010882  0FEE               	addlw	-18
  5302   010884  6ED9               	movwf	fsr2l,c
  5303   010886  50E2               	movf	fsr1h,w,c
  5304   010888  6EDA               	movwf	fsr2h,c
  5305   01088A  0EFF               	movlw	255
  5306   01088C  22DA               	addwfc	fsr2h,f,c
  5307   01088E  AADF               	btfss	indf2,5,c
  5308   010890  EF4C  F084         	goto	u2101
  5309   010894  EF4E  F084         	goto	u2100
  5310   010898                     u2101:
  5311   010898  EF56  F084         	goto	l4449
  5312   01089C                     u2100:
  5313   01089C                     
  5314                           ;can/can.c: 1279:         n += 4;
  5315                           ;stkvar	_n @ sp[(-110)+108]
  5316   01089C  0EFE               	movlw	-2
  5317   01089E  CFE3 F001          	movff	plusw1,btemp
  5318   0108A2  0E04               	movlw	4
  5319   0108A4  2601               	addwf	btemp^0,f,c
  5320   0108A6  0EFE               	movlw	-2
  5321   0108A8  C001  FFE3         	movff	btemp,plusw1
  5322   0108AC                     l4449:
  5323                           
  5324                           ;can/can.c: 1283:     if (n % 4) {
  5325                           ;stkvar	_n @ sp[(-110)+108]
  5326   0108AC  0EFE               	movlw	-2
  5327   0108AE  CFE3 F00C          	movff	plusw1,btemp+11
  5328   0108B2  0E03               	movlw	3
  5329   0108B4  160C               	andwf	(btemp+11)^0,f,c
  5330   0108B6  B4D8               	btfsc	status,2,c
  5331   0108B8  EF60  F084         	goto	u2111
  5332   0108BC  EF62  F084         	goto	u2110
  5333   0108C0                     u2111:
  5334   0108C0  EF72  F084         	goto	l4453
  5335   0108C4                     u2110:
  5336   0108C4                     
  5337                           ;can/can.c: 1284:         n = n + 4 - (n % 4);
  5338                           ;stkvar	_n @ sp[(-110)+108]
  5339   0108C4  0EFE               	movlw	-2
  5340   0108C6  CFE3 F00C          	movff	plusw1,btemp+11
  5341   0108CA  0E03               	movlw	3
  5342   0108CC  160C               	andwf	(btemp+11)^0,f,c
  5343                           
  5344                           ;stkvar	_n @ sp[(-110)+108]
  5345   0108CE  0EFE               	movlw	-2
  5346   0108D0  CFE3 F00B          	movff	plusw1,btemp+10
  5347   0108D4  500C               	movf	(btemp+11)^0,w,c
  5348   0108D6  5C0B               	subwf	(btemp+10)^0,w,c
  5349   0108D8  6E0C               	movwf	(btemp+11)^0,c
  5350   0108DA  0E04               	movlw	4
  5351   0108DC  260C               	addwf	(btemp+11)^0,f,c
  5352                           
  5353                           ;stkvar	_n @ sp[(-110)+108]
  5354   0108DE  0EFE               	movlw	-2
  5355   0108E0  C00C  FFE3         	movff	btemp+11,plusw1
  5356   0108E4                     l4453:
  5357                           
  5358                           ;can/can.c: 1288:     uint8_t ba[76];;can/can.c: 1290:     if (n > 76) {
  5359                           ;stkvar	_n @ sp[(-110)+108]
  5360   0108E4  0EFE               	movlw	-2
  5361   0108E6  CFE3 F001          	movff	plusw1,btemp
  5362   0108EA  0E4C               	movlw	76
  5363   0108EC  6401               	cpfsgt	btemp^0,c
  5364   0108EE  EF7B  F084         	goto	u2121
  5365   0108F2  EF7D  F084         	goto	u2120
  5366   0108F6                     u2121:
  5367   0108F6  EF82  F084         	goto	l4457
  5368   0108FA                     u2120:
  5369   0108FA                     
  5370                           ;can/can.c: 1291:         n = 76;
  5371   0108FA  0E4C               	movlw	76
  5372   0108FC  6E0C               	movwf	(btemp+11)^0,c
  5373                           
  5374                           ;stkvar	_n @ sp[(-110)+108]
  5375   0108FE  0EFE               	movlw	-2
  5376   010900  C00C  FFE3         	movff	btemp+11,plusw1
  5377   010904                     l4457:
  5378                           
  5379                           ;can/can.c: 1294:     spiTransferError = DRV_CANFDSPI_ReadByteArray( a, ba, n);
  5380                           ;stkvar	_n @ sp[(-110)+108]
  5381   010904  0EFE               	movlw	-2
  5382   010906  50E3               	movf	plusw1,w,c
  5383   010908  6EE6               	movwf	postinc1,c
  5384   01090A  0E00               	movlw	0
  5385   01090C  6EE6               	movwf	postinc1,c
  5386                           
  5387                           ;stkvar	_ba @ sp[(-112)+4]
  5388   01090E  0E94               	movlw	148
  5389   010910  24E1               	addwf	fsr1l,w,c
  5390   010912  6E01               	movwf	btemp^0,c
  5391   010914  0EFF               	movlw	255
  5392   010916  20E2               	addwfc	fsr1h,w,c
  5393   010918  6E02               	movwf	(btemp+1)^0,c
  5394   01091A  C001  FFE6         	movff	btemp,postinc1
  5395   01091E  C002  FFE6         	movff	btemp+1,postinc1
  5396                           
  5397                           ;stkvar	_a @ sp[(-114)+105]
  5398   010922  0EF7               	movlw	-9
  5399   010924  CFE3 FFE6          	movff	plusw1,postinc1
  5400   010928  CFE3 FFE6          	movff	plusw1,postinc1
  5401   01092C  ECFE  F091         	call	_DRV_CANFDSPI_ReadByteArray	;wreg free
  5402                           
  5403                           ;stkvar	_spiTransferError @ sp[(-110)+109]
  5404   010930  0EFF               	movlw	-1
  5405   010932  C001  FFE3         	movff	btemp,plusw1
  5406   010936                     
  5407                           ;can/can.c: 1295:     if (spiTransferError) {
  5408                           ;stkvar	_spiTransferError @ sp[(-110)+109]
  5409   010936  0EFF               	movlw	-1
  5410   010938  50E3               	movf	plusw1,w,c
  5411   01093A  B4D8               	btfsc	status,2,c
  5412   01093C  EFA2  F084         	goto	u2131
  5413   010940  EFA4  F084         	goto	u2130
  5414   010944                     u2131:
  5415   010944  EFA6  F084         	goto	l4463
  5416   010948                     u2130:
  5417   010948  EF15  F087         	goto	l357
  5418   01094C                     l4463:
  5419                           
  5420                           ;can/can.c: 1300:     REG_t myReg;;can/can.c: 1315:     rxObj->byte[6] = ba[4];
  5421                           ;stkvar	_ba @ sp[(-110)+4]
  5422   01094C  0E9A               	movlw	154
  5423   01094E  24E1               	addwf	fsr1l,w,c
  5424   010950  6ED9               	movwf	fsr2l,c
  5425   010952  0EFF               	movlw	255
  5426   010954  20E2               	addwfc	fsr1h,w,c
  5427   010956  6EDA               	movwf	fsr2h,c
  5428                           
  5429                           ;stkvar	_rxObj @ sp[(-110)+-3]
  5430   010958  0E8F               	movlw	-113
  5431   01095A  CFE3 F00B          	movff	plusw1,btemp+10
  5432   01095E  0E90               	movlw	-112
  5433   010960  CFE3 F00C          	movff	plusw1,btemp+11
  5434   010964  0E06               	movlw	6
  5435   010966  240B               	addwf	(btemp+10)^0,w,c
  5436   010968  6EE9               	movwf	fsr0l,c
  5437   01096A  0E00               	movlw	0
  5438   01096C  200C               	addwfc	(btemp+11)^0,w,c
  5439   01096E  6EEA               	movwf	fsr0h,c
  5440   010970  CFDF FFEF          	movff	indf2,indf0
  5441   010974                     
  5442                           ;can/can.c: 1316:     if(rxObj->bF.ctrl.IDE == 0)
  5443                           ;stkvar	_rxObj @ sp[(-110)+-3]
  5444   010974  0E8F               	movlw	-113
  5445   010976  CFE3 F00B          	movff	plusw1,btemp+10
  5446   01097A  0E90               	movlw	-112
  5447   01097C  CFE3 F00C          	movff	plusw1,btemp+11
  5448   010980  0E06               	movlw	6
  5449   010982  240B               	addwf	(btemp+10)^0,w,c
  5450   010984  6ED9               	movwf	fsr2l,c
  5451   010986  0E00               	movlw	0
  5452   010988  200C               	addwfc	(btemp+11)^0,w,c
  5453   01098A  6EDA               	movwf	fsr2h,c
  5454   01098C  B8DF               	btfsc	indf2,4,c
  5455   01098E  EFCB  F084         	goto	u2141
  5456   010992  EFCD  F084         	goto	u2140
  5457   010996                     u2141:
  5458   010996  EF38  F085         	goto	l4469
  5459   01099A                     u2140:
  5460   01099A                     
  5461                           ;can/can.c: 1317:     {;can/can.c: 1318:       rxObj->bF.id.ID = ba[0] | ((uint32_t)ba[1
      +                          ] << 8) |
  5462                           ;stkvar	_ba @ sp[(-110)+4]
  5463   01099A  0E99               	movlw	153
  5464   01099C  24E1               	addwf	fsr1l,w,c
  5465   01099E  6ED9               	movwf	fsr2l,c
  5466   0109A0  0EFF               	movlw	255
  5467   0109A2  20E2               	addwfc	fsr1h,w,c
  5468   0109A4  6EDA               	movwf	fsr2h,c
  5469   0109A6  50DF               	movf	indf2,w,c
  5470   0109A8  6E0C               	movwf	(btemp+11)^0,c
  5471   0109AA  0E1F               	movlw	31
  5472   0109AC  160C               	andwf	(btemp+11)^0,f,c
  5473   0109AE  C00C  F005         	movff	btemp+11,btemp+4
  5474   0109B2  6A06               	clrf	(btemp+5)^0,c
  5475   0109B4  6A07               	clrf	(btemp+6)^0,c
  5476   0109B6  6A08               	clrf	(btemp+7)^0,c
  5477   0109B8  C005  F008         	movff	btemp+4,btemp+7
  5478   0109BC  6A07               	clrf	(btemp+6)^0,c
  5479   0109BE  6A06               	clrf	(btemp+5)^0,c
  5480   0109C0  6A05               	clrf	(btemp+4)^0,c
  5481                           
  5482                           ;stkvar	_ba @ sp[(-110)+4]
  5483   0109C2  0E97               	movlw	151
  5484   0109C4  24E1               	addwf	fsr1l,w,c
  5485   0109C6  6ED9               	movwf	fsr2l,c
  5486   0109C8  0EFF               	movlw	255
  5487   0109CA  20E2               	addwfc	fsr1h,w,c
  5488   0109CC  6EDA               	movwf	fsr2h,c
  5489   0109CE  50DF               	movf	indf2,w,c
  5490   0109D0  6E0C               	movwf	(btemp+11)^0,c
  5491   0109D2  C00C  F001         	movff	btemp+11,btemp
  5492   0109D6  6A02               	clrf	(btemp+1)^0,c
  5493   0109D8  6A03               	clrf	(btemp+2)^0,c
  5494   0109DA  6A04               	clrf	(btemp+3)^0,c
  5495   0109DC  C003  F004         	movff	btemp+2,btemp+3
  5496   0109E0  C002  F003         	movff	btemp+1,btemp+2
  5497   0109E4  C001  F002         	movff	btemp,btemp+1
  5498   0109E8  6A01               	clrf	btemp^0,c
  5499                           
  5500                           ;stkvar	_ba @ sp[(-110)+4]
  5501   0109EA  0E96               	movlw	-106
  5502   0109EC  50E3               	movf	plusw1,w,c
  5503   0109EE  6E09               	movwf	(btemp+8)^0,c
  5504   0109F0  6A0A               	clrf	(btemp+9)^0,c
  5505   0109F2  6A0B               	clrf	(btemp+10)^0,c
  5506   0109F4  6A0C               	clrf	(btemp+11)^0,c
  5507   0109F6  5001               	movf	btemp^0,w,c
  5508   0109F8  1209               	iorwf	(btemp+8)^0,f,c
  5509   0109FA  5002               	movf	(btemp+1)^0,w,c
  5510   0109FC  120A               	iorwf	(btemp+9)^0,f,c
  5511   0109FE  5003               	movf	(btemp+2)^0,w,c
  5512   010A00  120B               	iorwf	(btemp+10)^0,f,c
  5513   010A02  5004               	movf	(btemp+3)^0,w,c
  5514   010A04  120C               	iorwf	(btemp+11)^0,f,c
  5515                           
  5516                           ;stkvar	_ba @ sp[(-110)+4]
  5517   010A06  0E98               	movlw	152
  5518   010A08  24E1               	addwf	fsr1l,w,c
  5519   010A0A  6ED9               	movwf	fsr2l,c
  5520   010A0C  0EFF               	movlw	255
  5521   010A0E  20E2               	addwfc	fsr1h,w,c
  5522   010A10  6EDA               	movwf	fsr2h,c
  5523   010A12  50DF               	movf	indf2,w,c
  5524   010A14  6E01               	movwf	btemp^0,c
  5525   010A16  6A02               	clrf	(btemp+1)^0,c
  5526   010A18  6A03               	clrf	(btemp+2)^0,c
  5527   010A1A  6A04               	clrf	(btemp+3)^0,c
  5528   010A1C  C002  F004         	movff	btemp+1,btemp+3
  5529   010A20  C001  F003         	movff	btemp,btemp+2
  5530   010A24  6A02               	clrf	(btemp+1)^0,c
  5531   010A26  6A01               	clrf	btemp^0,c
  5532   010A28  5001               	movf	btemp^0,w,c
  5533   010A2A  1209               	iorwf	(btemp+8)^0,f,c
  5534   010A2C  5002               	movf	(btemp+1)^0,w,c
  5535   010A2E  120A               	iorwf	(btemp+9)^0,f,c
  5536   010A30  5003               	movf	(btemp+2)^0,w,c
  5537   010A32  120B               	iorwf	(btemp+10)^0,f,c
  5538   010A34  5004               	movf	(btemp+3)^0,w,c
  5539   010A36  120C               	iorwf	(btemp+11)^0,f,c
  5540   010A38  5005               	movf	(btemp+4)^0,w,c
  5541   010A3A  1009               	iorwf	(btemp+8)^0,w,c
  5542   010A3C  6E01               	movwf	btemp^0,c
  5543   010A3E  5006               	movf	(btemp+5)^0,w,c
  5544   010A40  100A               	iorwf	(btemp+9)^0,w,c
  5545   010A42  6E02               	movwf	(btemp+1)^0,c
  5546   010A44  5007               	movf	(btemp+6)^0,w,c
  5547   010A46  100B               	iorwf	(btemp+10)^0,w,c
  5548   010A48  6E03               	movwf	(btemp+2)^0,c
  5549   010A4A  5008               	movf	(btemp+7)^0,w,c
  5550   010A4C  100C               	iorwf	(btemp+11)^0,w,c
  5551   010A4E  6E04               	movwf	(btemp+3)^0,c
  5552                           
  5553                           ;stkvar	_rxObj @ sp[(-110)+-3]
  5554   010A50  0E8F               	movlw	-113
  5555   010A52  CFE3 FFD9          	movff	plusw1,fsr2l
  5556   010A56  0E90               	movlw	-112
  5557   010A58  CFE3 FFDA          	movff	plusw1,fsr2h
  5558   010A5C  C001  FFDE         	movff	btemp,postinc2
  5559   010A60  C002  FFDE         	movff	btemp+1,postinc2
  5560   010A64  C003  FFDE         	movff	btemp+2,postinc2
  5561   010A68  C004  FFDE         	movff	btemp+3,postinc2
  5562                           
  5563                           ;can/can.c: 1320:     }
  5564   010A6C  EFF8  F085         	goto	l4471
  5565   010A70                     l4469:
  5566                           
  5567                           ;can/can.c: 1322:     {;can/can.c: 1323:       uint32_t temp32 = ba[0] | ((uint32_t)ba[1
      +                          ] << 8) |
  5568                           ;stkvar	_ba @ sp[(-110)+4]
  5569   010A70  0E99               	movlw	153
  5570   010A72  24E1               	addwf	fsr1l,w,c
  5571   010A74  6ED9               	movwf	fsr2l,c
  5572   010A76  0EFF               	movlw	255
  5573   010A78  20E2               	addwfc	fsr1h,w,c
  5574   010A7A  6EDA               	movwf	fsr2h,c
  5575   010A7C  50DF               	movf	indf2,w,c
  5576   010A7E  6E0C               	movwf	(btemp+11)^0,c
  5577   010A80  0E1F               	movlw	31
  5578   010A82  160C               	andwf	(btemp+11)^0,f,c
  5579   010A84  C00C  F005         	movff	btemp+11,btemp+4
  5580   010A88  6A06               	clrf	(btemp+5)^0,c
  5581   010A8A  6A07               	clrf	(btemp+6)^0,c
  5582   010A8C  6A08               	clrf	(btemp+7)^0,c
  5583   010A8E  C005  F008         	movff	btemp+4,btemp+7
  5584   010A92  6A07               	clrf	(btemp+6)^0,c
  5585   010A94  6A06               	clrf	(btemp+5)^0,c
  5586   010A96  6A05               	clrf	(btemp+4)^0,c
  5587                           
  5588                           ;stkvar	_ba @ sp[(-110)+4]
  5589   010A98  0E97               	movlw	151
  5590   010A9A  24E1               	addwf	fsr1l,w,c
  5591   010A9C  6ED9               	movwf	fsr2l,c
  5592   010A9E  0EFF               	movlw	255
  5593   010AA0  20E2               	addwfc	fsr1h,w,c
  5594   010AA2  6EDA               	movwf	fsr2h,c
  5595   010AA4  50DF               	movf	indf2,w,c
  5596   010AA6  6E0C               	movwf	(btemp+11)^0,c
  5597   010AA8  C00C  F001         	movff	btemp+11,btemp
  5598   010AAC  6A02               	clrf	(btemp+1)^0,c
  5599   010AAE  6A03               	clrf	(btemp+2)^0,c
  5600   010AB0  6A04               	clrf	(btemp+3)^0,c
  5601   010AB2  C003  F004         	movff	btemp+2,btemp+3
  5602   010AB6  C002  F003         	movff	btemp+1,btemp+2
  5603   010ABA  C001  F002         	movff	btemp,btemp+1
  5604   010ABE  6A01               	clrf	btemp^0,c
  5605                           
  5606                           ;stkvar	_ba @ sp[(-110)+4]
  5607   010AC0  0E96               	movlw	-106
  5608   010AC2  50E3               	movf	plusw1,w,c
  5609   010AC4  6E09               	movwf	(btemp+8)^0,c
  5610   010AC6  6A0A               	clrf	(btemp+9)^0,c
  5611   010AC8  6A0B               	clrf	(btemp+10)^0,c
  5612   010ACA  6A0C               	clrf	(btemp+11)^0,c
  5613   010ACC  5001               	movf	btemp^0,w,c
  5614   010ACE  1209               	iorwf	(btemp+8)^0,f,c
  5615   010AD0  5002               	movf	(btemp+1)^0,w,c
  5616   010AD2  120A               	iorwf	(btemp+9)^0,f,c
  5617   010AD4  5003               	movf	(btemp+2)^0,w,c
  5618   010AD6  120B               	iorwf	(btemp+10)^0,f,c
  5619   010AD8  5004               	movf	(btemp+3)^0,w,c
  5620   010ADA  120C               	iorwf	(btemp+11)^0,f,c
  5621                           
  5622                           ;stkvar	_ba @ sp[(-110)+4]
  5623   010ADC  0E98               	movlw	152
  5624   010ADE  24E1               	addwf	fsr1l,w,c
  5625   010AE0  6ED9               	movwf	fsr2l,c
  5626   010AE2  0EFF               	movlw	255
  5627   010AE4  20E2               	addwfc	fsr1h,w,c
  5628   010AE6  6EDA               	movwf	fsr2h,c
  5629   010AE8  50DF               	movf	indf2,w,c
  5630   010AEA  6E01               	movwf	btemp^0,c
  5631   010AEC  6A02               	clrf	(btemp+1)^0,c
  5632   010AEE  6A03               	clrf	(btemp+2)^0,c
  5633   010AF0  6A04               	clrf	(btemp+3)^0,c
  5634   010AF2  C002  F004         	movff	btemp+1,btemp+3
  5635   010AF6  C001  F003         	movff	btemp,btemp+2
  5636   010AFA  6A02               	clrf	(btemp+1)^0,c
  5637   010AFC  6A01               	clrf	btemp^0,c
  5638   010AFE  5001               	movf	btemp^0,w,c
  5639   010B00  1209               	iorwf	(btemp+8)^0,f,c
  5640   010B02  5002               	movf	(btemp+1)^0,w,c
  5641   010B04  120A               	iorwf	(btemp+9)^0,f,c
  5642   010B06  5003               	movf	(btemp+2)^0,w,c
  5643   010B08  120B               	iorwf	(btemp+10)^0,f,c
  5644   010B0A  5004               	movf	(btemp+3)^0,w,c
  5645   010B0C  120C               	iorwf	(btemp+11)^0,f,c
  5646   010B0E  5005               	movf	(btemp+4)^0,w,c
  5647   010B10  1009               	iorwf	(btemp+8)^0,w,c
  5648   010B12  6E01               	movwf	btemp^0,c
  5649   010B14  5006               	movf	(btemp+5)^0,w,c
  5650   010B16  100A               	iorwf	(btemp+9)^0,w,c
  5651   010B18  6E02               	movwf	(btemp+1)^0,c
  5652   010B1A  5007               	movf	(btemp+6)^0,w,c
  5653   010B1C  100B               	iorwf	(btemp+10)^0,w,c
  5654   010B1E  6E03               	movwf	(btemp+2)^0,c
  5655   010B20  5008               	movf	(btemp+7)^0,w,c
  5656   010B22  100C               	iorwf	(btemp+11)^0,w,c
  5657   010B24  6E04               	movwf	(btemp+3)^0,c
  5658                           
  5659                           ;stkvar	_temp32 @ sp[(-110)+0]
  5660   010B26  0E92               	movlw	-110
  5661   010B28  C001  FFE3         	movff	btemp,plusw1
  5662   010B2C  0E93               	movlw	-109
  5663   010B2E  C002  FFE3         	movff	btemp+1,plusw1
  5664   010B32  0E94               	movlw	-108
  5665   010B34  C003  FFE3         	movff	btemp+2,plusw1
  5666   010B38  0E95               	movlw	-107
  5667   010B3A  C004  FFE3         	movff	btemp+3,plusw1
  5668                           
  5669                           ;can/can.c: 1326:       rxObj->bF.id.ID = ((temp32 & 0x000007FF) << 18) |
  5670                           ;stkvar	_temp32 @ sp[(-110)+0]
  5671   010B3E  0E92               	movlw	-110
  5672   010B40  CFE3 F009          	movff	plusw1,btemp+8
  5673   010B44  0E93               	movlw	-109
  5674   010B46  CFE3 F00A          	movff	plusw1,btemp+9
  5675   010B4A  0E94               	movlw	-108
  5676   010B4C  CFE3 F00B          	movff	plusw1,btemp+10
  5677   010B50  0E95               	movlw	-107
  5678   010B52  CFE3 F00C          	movff	plusw1,btemp+11
  5679   010B56  0E0C               	movlw	12
  5680   010B58  EFB3  F085         	goto	u2150
  5681   010B5C                     u2155:
  5682   010B5C  90D8               	bcf	status,0,c
  5683   010B5E  320C               	rrcf	(btemp+11)^0,f,c
  5684   010B60  320B               	rrcf	(btemp+10)^0,f,c
  5685   010B62  320A               	rrcf	(btemp+9)^0,f,c
  5686   010B64  3209               	rrcf	(btemp+8)^0,f,c
  5687   010B66                     u2150:
  5688   010B66  2EE8               	decfsz	wreg,f,c
  5689   010B68  EFAE  F085         	goto	u2155
  5690   010B6C  0EFF               	movlw	255
  5691   010B6E  1409               	andwf	(btemp+8)^0,w,c
  5692   010B70  6E05               	movwf	(btemp+4)^0,c
  5693   010B72  0EFF               	movlw	255
  5694   010B74  140A               	andwf	(btemp+9)^0,w,c
  5695   010B76  6E06               	movwf	(btemp+5)^0,c
  5696   010B78  0E03               	movlw	3
  5697   010B7A  140B               	andwf	(btemp+10)^0,w,c
  5698   010B7C  6E07               	movwf	(btemp+6)^0,c
  5699   010B7E  0E00               	movlw	0
  5700   010B80  140C               	andwf	(btemp+11)^0,w,c
  5701   010B82  6E08               	movwf	(btemp+7)^0,c
  5702                           
  5703                           ;stkvar	_temp32 @ sp[(-110)+0]
  5704   010B84  50E1               	movf	fsr1l,w,c
  5705   010B86  0F92               	addlw	-110
  5706   010B88  6ED9               	movwf	fsr2l,c
  5707   010B8A  50E2               	movf	fsr1h,w,c
  5708   010B8C  6EDA               	movwf	fsr2h,c
  5709   010B8E  0EFF               	movlw	255
  5710   010B90  22DA               	addwfc	fsr2h,f,c
  5711   010B92  0EFF               	movlw	255
  5712   010B94  14DE               	andwf	postinc2,w,c
  5713   010B96  6E09               	movwf	(btemp+8)^0,c
  5714   010B98  0E07               	movlw	7
  5715   010B9A  14DE               	andwf	postinc2,w,c
  5716   010B9C  6E0A               	movwf	(btemp+9)^0,c
  5717   010B9E  0E00               	movlw	0
  5718   010BA0  14DE               	andwf	postinc2,w,c
  5719   010BA2  6E0B               	movwf	(btemp+10)^0,c
  5720   010BA4  0E00               	movlw	0
  5721   010BA6  14DE               	andwf	postinc2,w,c
  5722   010BA8  6E0C               	movwf	(btemp+11)^0,c
  5723   010BAA  0E12               	movlw	18
  5724   010BAC                     u2165:
  5725   010BAC  90D8               	bcf	status,0,c
  5726   010BAE  3609               	rlcf	(btemp+8)^0,f,c
  5727   010BB0  360A               	rlcf	(btemp+9)^0,f,c
  5728   010BB2  360B               	rlcf	(btemp+10)^0,f,c
  5729   010BB4  360C               	rlcf	(btemp+11)^0,f,c
  5730   010BB6  2EE8               	decfsz	wreg,f,c
  5731   010BB8  EFD6  F085         	goto	u2165
  5732   010BBC  5005               	movf	(btemp+4)^0,w,c
  5733   010BBE  1009               	iorwf	(btemp+8)^0,w,c
  5734   010BC0  6E01               	movwf	btemp^0,c
  5735   010BC2  5006               	movf	(btemp+5)^0,w,c
  5736   010BC4  100A               	iorwf	(btemp+9)^0,w,c
  5737   010BC6  6E02               	movwf	(btemp+1)^0,c
  5738   010BC8  5007               	movf	(btemp+6)^0,w,c
  5739   010BCA  100B               	iorwf	(btemp+10)^0,w,c
  5740   010BCC  6E03               	movwf	(btemp+2)^0,c
  5741   010BCE  5008               	movf	(btemp+7)^0,w,c
  5742   010BD0  100C               	iorwf	(btemp+11)^0,w,c
  5743   010BD2  6E04               	movwf	(btemp+3)^0,c
  5744                           
  5745                           ;stkvar	_rxObj @ sp[(-110)+-3]
  5746   010BD4  0E8F               	movlw	-113
  5747   010BD6  CFE3 FFD9          	movff	plusw1,fsr2l
  5748   010BDA  0E90               	movlw	-112
  5749   010BDC  CFE3 FFDA          	movff	plusw1,fsr2h
  5750   010BE0  C001  FFDE         	movff	btemp,postinc2
  5751   010BE4  C002  FFDE         	movff	btemp+1,postinc2
  5752   010BE8  C003  FFDE         	movff	btemp+2,postinc2
  5753   010BEC  C004  FFDE         	movff	btemp+3,postinc2
  5754   010BF0                     l4471:
  5755                           
  5756                           ;can/can.c: 1330:     rxObj->bF.ctrl.ESI = ba[5] & 0x01;
  5757                           ;stkvar	_rxObj @ sp[(-110)+-3]
  5758   010BF0  0E8F               	movlw	-113
  5759   010BF2  CFE3 F00B          	movff	plusw1,btemp+10
  5760   010BF6  0E90               	movlw	-112
  5761   010BF8  CFE3 F00C          	movff	plusw1,btemp+11
  5762   010BFC  0E07               	movlw	7
  5763   010BFE  240B               	addwf	(btemp+10)^0,w,c
  5764   010C00  6ED9               	movwf	fsr2l,c
  5765   010C02  0E00               	movlw	0
  5766   010C04  200C               	addwfc	(btemp+11)^0,w,c
  5767   010C06  6EDA               	movwf	fsr2h,c
  5768                           
  5769                           ;stkvar	_ba @ sp[(-110)+4]
  5770   010C08  0E9B               	movlw	155
  5771   010C0A  24E1               	addwf	fsr1l,w,c
  5772   010C0C  6EE9               	movwf	fsr0l,c
  5773   010C0E  0EFF               	movlw	255
  5774   010C10  20E2               	addwfc	fsr1h,w,c
  5775   010C12  6EEA               	movwf	fsr0h,c
  5776   010C14  50EF               	movf	indf0,w,c
  5777   010C16  0B01               	andlw	1
  5778   010C18  6EDF               	movwf	indf2,c
  5779   010C1A                     
  5780                           ;can/can.c: 1331:     rxObj->bF.ctrl.FilterHit = ba[5] >> 3;
  5781                           ;stkvar	_rxObj @ sp[(-110)+-3]
  5782   010C1A  0E8F               	movlw	-113
  5783   010C1C  CFE3 F00B          	movff	plusw1,btemp+10
  5784   010C20  0E90               	movlw	-112
  5785   010C22  CFE3 F00C          	movff	plusw1,btemp+11
  5786   010C26  0E08               	movlw	8
  5787   010C28  240B               	addwf	(btemp+10)^0,w,c
  5788   010C2A  6ED9               	movwf	fsr2l,c
  5789   010C2C  0E00               	movlw	0
  5790   010C2E  200C               	addwfc	(btemp+11)^0,w,c
  5791   010C30  6EDA               	movwf	fsr2h,c
  5792                           
  5793                           ;stkvar	_ba @ sp[(-110)+4]
  5794   010C32  0E9B               	movlw	155
  5795   010C34  24E1               	addwf	fsr1l,w,c
  5796   010C36  6EE9               	movwf	fsr0l,c
  5797   010C38  0EFF               	movlw	255
  5798   010C3A  20E2               	addwfc	fsr1h,w,c
  5799   010C3C  6EEA               	movwf	fsr0h,c
  5800   010C3E  50EF               	movf	indf0,w,c
  5801   010C40  6E0C               	movwf	(btemp+11)^0,c
  5802   010C42  90D8               	bcf	status,0,c
  5803   010C44  320C               	rrcf	(btemp+11)^0,f,c
  5804   010C46  90D8               	bcf	status,0,c
  5805   010C48  320C               	rrcf	(btemp+11)^0,f,c
  5806   010C4A  90D8               	bcf	status,0,c
  5807   010C4C  300C               	rrcf	(btemp+11)^0,w,c
  5808   010C4E  6EDF               	movwf	indf2,c
  5809   010C50                     
  5810                           ;can/can.c: 1332:     if (ciFifoCon.rxBF.RxTimeStampEnable) {
  5811                           ;stkvar	_ciFifoCon @ sp[(-110)+92]
  5812   010C50  50E1               	movf	fsr1l,w,c
  5813   010C52  0FEE               	addlw	-18
  5814   010C54  6ED9               	movwf	fsr2l,c
  5815   010C56  50E2               	movf	fsr1h,w,c
  5816   010C58  6EDA               	movwf	fsr2h,c
  5817   010C5A  0EFF               	movlw	255
  5818   010C5C  22DA               	addwfc	fsr2h,f,c
  5819   010C5E  AADF               	btfss	indf2,5,c
  5820   010C60  EF34  F086         	goto	u2171
  5821   010C64  EF36  F086         	goto	u2170
  5822   010C68                     u2171:
  5823   010C68  EFC4  F086         	goto	l4495
  5824   010C6C                     u2170:
  5825   010C6C                     
  5826                           ;can/can.c: 1333:         myReg.byte[0] = ba[8];
  5827                           ;stkvar	_ba @ sp[(-110)+4]
  5828   010C6C  0E9E               	movlw	158
  5829   010C6E  24E1               	addwf	fsr1l,w,c
  5830   010C70  6ED9               	movwf	fsr2l,c
  5831   010C72  0EFF               	movlw	255
  5832   010C74  20E2               	addwfc	fsr1h,w,c
  5833   010C76  6EDA               	movwf	fsr2h,c
  5834   010C78  50DF               	movf	indf2,w,c
  5835   010C7A  6E0C               	movwf	(btemp+11)^0,c
  5836                           
  5837                           ;stkvar	_myReg @ sp[(-110)+97]
  5838   010C7C  0EF3               	movlw	-13
  5839   010C7E  C00C  FFE3         	movff	btemp+11,plusw1
  5840   010C82                     
  5841                           ;can/can.c: 1334:         myReg.byte[1] = ba[9];
  5842                           ;stkvar	_ba @ sp[(-110)+4]
  5843   010C82  0E9F               	movlw	159
  5844   010C84  24E1               	addwf	fsr1l,w,c
  5845   010C86  6ED9               	movwf	fsr2l,c
  5846   010C88  0EFF               	movlw	255
  5847   010C8A  20E2               	addwfc	fsr1h,w,c
  5848   010C8C  6EDA               	movwf	fsr2h,c
  5849                           
  5850                           ;stkvar	_myReg @ sp[(-110)+97]
  5851   010C8E  0EF4               	movlw	244
  5852   010C90  24E1               	addwf	fsr1l,w,c
  5853   010C92  6EE9               	movwf	fsr0l,c
  5854   010C94  0EFF               	movlw	255
  5855   010C96  20E2               	addwfc	fsr1h,w,c
  5856   010C98  6EEA               	movwf	fsr0h,c
  5857   010C9A  CFDF FFEF          	movff	indf2,indf0
  5858   010C9E                     
  5859                           ;can/can.c: 1335:         myReg.byte[2] = ba[10];
  5860                           ;stkvar	_ba @ sp[(-110)+4]
  5861   010C9E  0EA0               	movlw	160
  5862   010CA0  24E1               	addwf	fsr1l,w,c
  5863   010CA2  6ED9               	movwf	fsr2l,c
  5864   010CA4  0EFF               	movlw	255
  5865   010CA6  20E2               	addwfc	fsr1h,w,c
  5866   010CA8  6EDA               	movwf	fsr2h,c
  5867                           
  5868                           ;stkvar	_myReg @ sp[(-110)+97]
  5869   010CAA  0EF5               	movlw	245
  5870   010CAC  24E1               	addwf	fsr1l,w,c
  5871   010CAE  6EE9               	movwf	fsr0l,c
  5872   010CB0  0EFF               	movlw	255
  5873   010CB2  20E2               	addwfc	fsr1h,w,c
  5874   010CB4  6EEA               	movwf	fsr0h,c
  5875   010CB6  CFDF FFEF          	movff	indf2,indf0
  5876   010CBA                     
  5877                           ;can/can.c: 1336:         myReg.byte[3] = ba[11];
  5878                           ;stkvar	_ba @ sp[(-110)+4]
  5879   010CBA  0EA1               	movlw	161
  5880   010CBC  24E1               	addwf	fsr1l,w,c
  5881   010CBE  6ED9               	movwf	fsr2l,c
  5882   010CC0  0EFF               	movlw	255
  5883   010CC2  20E2               	addwfc	fsr1h,w,c
  5884   010CC4  6EDA               	movwf	fsr2h,c
  5885                           
  5886                           ;stkvar	_myReg @ sp[(-110)+97]
  5887   010CC6  0EF6               	movlw	246
  5888   010CC8  24E1               	addwf	fsr1l,w,c
  5889   010CCA  6EE9               	movwf	fsr0l,c
  5890   010CCC  0EFF               	movlw	255
  5891   010CCE  20E2               	addwfc	fsr1h,w,c
  5892   010CD0  6EEA               	movwf	fsr0h,c
  5893   010CD2  CFDF FFEF          	movff	indf2,indf0
  5894   010CD6                     
  5895                           ;can/can.c: 1337:         rxObj->bF.timeStamp = myReg.word;
  5896                           ;stkvar	_myReg @ sp[(-110)+97]
  5897   010CD6  50E1               	movf	fsr1l,w,c
  5898   010CD8  0FF3               	addlw	-13
  5899   010CDA  6ED9               	movwf	fsr2l,c
  5900   010CDC  50E2               	movf	fsr1h,w,c
  5901   010CDE  6EDA               	movwf	fsr2h,c
  5902   010CE0  0EFF               	movlw	255
  5903   010CE2  22DA               	addwfc	fsr2h,f,c
  5904                           
  5905                           ;stkvar	_rxObj @ sp[(-110)+-3]
  5906   010CE4  0E8F               	movlw	-113
  5907   010CE6  CFE3 F00B          	movff	plusw1,btemp+10
  5908   010CEA  0E90               	movlw	-112
  5909   010CEC  CFE3 F00C          	movff	plusw1,btemp+11
  5910   010CF0  0E09               	movlw	9
  5911   010CF2  240B               	addwf	(btemp+10)^0,w,c
  5912   010CF4  6EE9               	movwf	fsr0l,c
  5913   010CF6  0E00               	movlw	0
  5914   010CF8  200C               	addwfc	(btemp+11)^0,w,c
  5915   010CFA  6EEA               	movwf	fsr0h,c
  5916   010CFC  CFDE FFEE          	movff	postinc2,postinc0
  5917   010D00  CFDE FFEE          	movff	postinc2,postinc0
  5918   010D04  CFDE FFEE          	movff	postinc2,postinc0
  5919   010D08  CFDE FFEE          	movff	postinc2,postinc0
  5920   010D0C                     
  5921                           ;can/can.c: 1340:         for (i = 0; i < nBytes; i++) {
  5922                           ;stkvar	_i @ sp[(-110)+107]
  5923   010D0C  0EFD               	movlw	-3
  5924   010D0E  6AE3               	clrf	plusw1,c
  5925   010D10  EFB1  F086         	goto	l4493
  5926   010D14                     l4489:
  5927                           
  5928                           ;can/can.c: 1341:             rxd[i] = ba[i + 12];
  5929                           ;stkvar	_i @ sp[(-110)+107]
  5930   010D14  0EFD               	movlw	-3
  5931   010D16  50E3               	movf	plusw1,w,c
  5932   010D18  6E0B               	movwf	(btemp+10)^0,c
  5933   010D1A  6A0C               	clrf	(btemp+11)^0,c
  5934   010D1C  0E0C               	movlw	12
  5935   010D1E  260B               	addwf	(btemp+10)^0,f,c
  5936   010D20  0E00               	movlw	0
  5937   010D22  220C               	addwfc	(btemp+11)^0,f,c
  5938                           
  5939                           ;stkvar	_ba @ sp[(-110)+4]
  5940   010D24  0E96               	movlw	150
  5941   010D26  24E1               	addwf	fsr1l,w,c
  5942   010D28  6E09               	movwf	(btemp+8)^0,c
  5943   010D2A  0EFF               	movlw	255
  5944   010D2C  20E2               	addwfc	fsr1h,w,c
  5945   010D2E  6E0A               	movwf	(btemp+9)^0,c
  5946   010D30  500B               	movf	(btemp+10)^0,w,c
  5947   010D32  2409               	addwf	(btemp+8)^0,w,c
  5948   010D34  6ED9               	movwf	fsr2l,c
  5949   010D36  500C               	movf	(btemp+11)^0,w,c
  5950   010D38  200A               	addwfc	(btemp+9)^0,w,c
  5951   010D3A  6EDA               	movwf	fsr2h,c
  5952                           
  5953                           ;stkvar	_i @ sp[(-110)+107]
  5954   010D3C  0EFD               	movlw	-3
  5955   010D3E  CFE3 F00C          	movff	plusw1,btemp+11
  5956                           
  5957                           ;stkvar	_rxd @ sp[(-110)+-5]
  5958   010D42  0E8D               	movlw	-115
  5959   010D44  CFE3 F009          	movff	plusw1,btemp+8
  5960   010D48  0E8E               	movlw	-114
  5961   010D4A  CFE3 F00A          	movff	plusw1,btemp+9
  5962   010D4E  500C               	movf	(btemp+11)^0,w,c
  5963   010D50  2409               	addwf	(btemp+8)^0,w,c
  5964   010D52  6EE9               	movwf	fsr0l,c
  5965   010D54  0E00               	movlw	0
  5966   010D56  200A               	addwfc	(btemp+9)^0,w,c
  5967   010D58  6EEA               	movwf	fsr0h,c
  5968   010D5A  CFDF FFEF          	movff	indf2,indf0
  5969   010D5E                     
  5970                           ;can/can.c: 1342:         }
  5971                           ;stkvar	_i @ sp[(-110)+107]
  5972   010D5E  0EFD               	movlw	-3
  5973   010D60  2AE3               	incf	plusw1,f,c
  5974   010D62                     l4493:
  5975                           
  5976                           ;stkvar	_nBytes @ sp[(-110)+-6]
  5977                           ;stkvar	_i @ sp[(-110)+107]
  5978   010D62  50E1               	movf	fsr1l,w,c
  5979   010D64  0FFD               	addlw	-3
  5980   010D66  6ED9               	movwf	fsr2l,c
  5981   010D68  50E2               	movf	fsr1h,w,c
  5982   010D6A  6EDA               	movwf	fsr2h,c
  5983   010D6C  0EFF               	movlw	255
  5984   010D6E  22DA               	addwfc	fsr2h,f,c
  5985   010D70  0E8C               	movlw	-116
  5986   010D72  50E3               	movf	plusw1,w,c
  5987   010D74  5CDE               	subwf	postinc2,w,c
  5988   010D76  A0D8               	btfss	status,0,c
  5989   010D78  EFC0  F086         	goto	u2181
  5990   010D7C  EFC2  F086         	goto	u2180
  5991   010D80                     u2181:
  5992   010D80  EF8A  F086         	goto	l4489
  5993   010D84                     u2180:
  5994   010D84  EF10  F087         	goto	l4505
  5995   010D88                     l4495:
  5996                           
  5997                           ;can/can.c: 1344:         rxObj->bF.timeStamp = 0;
  5998                           ;stkvar	_rxObj @ sp[(-110)+-3]
  5999   010D88  0E8F               	movlw	-113
  6000   010D8A  CFE3 F00B          	movff	plusw1,btemp+10
  6001   010D8E  0E90               	movlw	-112
  6002   010D90  CFE3 F00C          	movff	plusw1,btemp+11
  6003   010D94  0E09               	movlw	9
  6004   010D96  240B               	addwf	(btemp+10)^0,w,c
  6005   010D98  6ED9               	movwf	fsr2l,c
  6006   010D9A  0E00               	movlw	0
  6007   010D9C  200C               	addwfc	(btemp+11)^0,w,c
  6008   010D9E  6EDA               	movwf	fsr2h,c
  6009   010DA0  6ADE               	clrf	postinc2,c
  6010   010DA2  6ADE               	clrf	postinc2,c
  6011   010DA4  6ADE               	clrf	postinc2,c
  6012   010DA6  6ADD               	clrf	postdec2,c
  6013   010DA8                     
  6014                           ;can/can.c: 1347:         for (i = 0; i < nBytes; i++) {
  6015                           ;stkvar	_i @ sp[(-110)+107]
  6016   010DA8  0EFD               	movlw	-3
  6017   010DAA  6AE3               	clrf	plusw1,c
  6018   010DAC  EFFF  F086         	goto	l4503
  6019   010DB0                     l4499:
  6020                           
  6021                           ;can/can.c: 1348:             rxd[i] = ba[i + 8];
  6022                           ;stkvar	_i @ sp[(-110)+107]
  6023   010DB0  0EFD               	movlw	-3
  6024   010DB2  50E3               	movf	plusw1,w,c
  6025   010DB4  6E0B               	movwf	(btemp+10)^0,c
  6026   010DB6  6A0C               	clrf	(btemp+11)^0,c
  6027   010DB8  0E08               	movlw	8
  6028   010DBA  260B               	addwf	(btemp+10)^0,f,c
  6029   010DBC  0E00               	movlw	0
  6030   010DBE  220C               	addwfc	(btemp+11)^0,f,c
  6031                           
  6032                           ;stkvar	_ba @ sp[(-110)+4]
  6033   010DC0  0E96               	movlw	150
  6034   010DC2  24E1               	addwf	fsr1l,w,c
  6035   010DC4  6E09               	movwf	(btemp+8)^0,c
  6036   010DC6  0EFF               	movlw	255
  6037   010DC8  20E2               	addwfc	fsr1h,w,c
  6038   010DCA  6E0A               	movwf	(btemp+9)^0,c
  6039   010DCC  500B               	movf	(btemp+10)^0,w,c
  6040   010DCE  2409               	addwf	(btemp+8)^0,w,c
  6041   010DD0  6ED9               	movwf	fsr2l,c
  6042   010DD2  500C               	movf	(btemp+11)^0,w,c
  6043   010DD4  200A               	addwfc	(btemp+9)^0,w,c
  6044   010DD6  6EDA               	movwf	fsr2h,c
  6045                           
  6046                           ;stkvar	_i @ sp[(-110)+107]
  6047   010DD8  0EFD               	movlw	-3
  6048   010DDA  CFE3 F00C          	movff	plusw1,btemp+11
  6049                           
  6050                           ;stkvar	_rxd @ sp[(-110)+-5]
  6051   010DDE  0E8D               	movlw	-115
  6052   010DE0  CFE3 F009          	movff	plusw1,btemp+8
  6053   010DE4  0E8E               	movlw	-114
  6054   010DE6  CFE3 F00A          	movff	plusw1,btemp+9
  6055   010DEA  500C               	movf	(btemp+11)^0,w,c
  6056   010DEC  2409               	addwf	(btemp+8)^0,w,c
  6057   010DEE  6EE9               	movwf	fsr0l,c
  6058   010DF0  0E00               	movlw	0
  6059   010DF2  200A               	addwfc	(btemp+9)^0,w,c
  6060   010DF4  6EEA               	movwf	fsr0h,c
  6061   010DF6  CFDF FFEF          	movff	indf2,indf0
  6062   010DFA                     
  6063                           ;can/can.c: 1349:         }
  6064                           ;stkvar	_i @ sp[(-110)+107]
  6065   010DFA  0EFD               	movlw	-3
  6066   010DFC  2AE3               	incf	plusw1,f,c
  6067   010DFE                     l4503:
  6068                           
  6069                           ;stkvar	_nBytes @ sp[(-110)+-6]
  6070                           ;stkvar	_i @ sp[(-110)+107]
  6071   010DFE  50E1               	movf	fsr1l,w,c
  6072   010E00  0FFD               	addlw	-3
  6073   010E02  6ED9               	movwf	fsr2l,c
  6074   010E04  50E2               	movf	fsr1h,w,c
  6075   010E06  6EDA               	movwf	fsr2h,c
  6076   010E08  0EFF               	movlw	255
  6077   010E0A  22DA               	addwfc	fsr2h,f,c
  6078   010E0C  0E8C               	movlw	-116
  6079   010E0E  50E3               	movf	plusw1,w,c
  6080   010E10  5CDE               	subwf	postinc2,w,c
  6081   010E12  A0D8               	btfss	status,0,c
  6082   010E14  EF0E  F087         	goto	u2191
  6083   010E18  EF10  F087         	goto	u2190
  6084   010E1C                     u2191:
  6085   010E1C  EFD8  F086         	goto	l4499
  6086   010E20                     u2190:
  6087   010E20                     l4505:
  6088                           
  6089                           ;stkvar	_channel @ sp[(-110)+-1]
  6090   010E20  0E91               	movlw	-111
  6091   010E22  50E3               	movf	plusw1,w,c
  6092   010E24  6EE6               	movwf	postinc1,c
  6093   010E26  EC7F  F0A1         	call	_DRV_CANFDSPI_ReceiveChannelUpdate	;wreg free
  6094   010E2A                     l357:
  6095                           
  6096                           ; _DRV_CANFDSPI_ReceiveMessageGet: autosize = 110, savesize = 0, parsavesize = 0, tempsi
      +                          ze = 0 parsize = 6, argsize = 6, vargsize = 0
  6097   010E2A  0E8C               	movlw	140
  6098   010E2C  26E1               	addwf	fsr1l,f,c
  6099   010E2E  0EFF               	movlw	255
  6100   010E30  22E2               	addwfc	fsr1h,f,c
  6101   010E32  0012               	return		;funcret
  6102   010E34                     __end_of_DRV_CANFDSPI_ReceiveMessageGet:
  6103                           	callstack 0
  6104                           
  6105 ;; *************** function _DRV_CANFDSPI_ReceiveChannelUpdate *****************
  6106 ;; Defined at:
  6107 ;;		line 1378 in file "can/can.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;  channel         1  [STACK] enum E5290
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
  6112 ;;  a               2  [STACK] unsigned short 
  6113 ;;  spiTransferE    1  [STACK] char 
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  1  [STACK] char 
  6116 ;; Registers used:
  6117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;Total ram usage:        0 bytes
  6128 ;; Hardware stack levels used: 1
  6129 ;; Hardware stack levels required when called: 9
  6130 ;; This function calls:
  6131 ;;		_DRV_CANFDSPI_WriteByte
  6132 ;; This function is called by:
  6133 ;;		_DRV_CANFDSPI_ReceiveMessageGet
  6134 ;; This function uses a reentrant model
  6135 ;;
  6136                           
  6137                           	psect	text13
  6138   0142FE                     __ptext13:
  6139                           	callstack 0
  6140   0142FE                     _DRV_CANFDSPI_ReceiveChannelUpdate:
  6141                           	callstack 0
  6142                           
  6143                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6144   0142FE  0E08               	movlw	8
  6145   014300  26E1               	addwf	fsr1l,f,c
  6146   014302  0E00               	movlw	0
  6147   014304  22E2               	addwfc	fsr1h,f,c
  6148   014306                     
  6149                           ;can/can.c: 1384:     ciFifoCon.word = 0;
  6150                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  6151   014306  0EF8               	movlw	-8
  6152   014308  6AE3               	clrf	plusw1,c
  6153   01430A  0EF9               	movlw	-7
  6154   01430C  6AE3               	clrf	plusw1,c
  6155   01430E  0EFA               	movlw	-6
  6156   014310  6AE3               	clrf	plusw1,c
  6157   014312  0EFB               	movlw	-5
  6158   014314  6AE3               	clrf	plusw1,c
  6159   014316                     
  6160                           ;can/can.c: 1387:     a = 0x050 + (channel * (3*4)) + 1;
  6161                           ;stkvar	_channel @ sp[(-8)+-1]
  6162   014316  0EF7               	movlw	-9
  6163   014318  50E3               	movf	plusw1,w,c
  6164   01431A  0D0C               	mullw	12
  6165   01431C  0E51               	movlw	81
  6166   01431E  26F3               	addwf	243,f,c
  6167   014320  0E00               	movlw	0
  6168   014322  22F4               	addwfc	244,f,c
  6169                           
  6170                           ;stkvar	_a @ sp[(-8)+5]
  6171   014324  0EFD               	movlw	-3
  6172   014326  CFF3 FFE3          	movff	prodl,plusw1
  6173   01432A  0EFE               	movlw	-2
  6174   01432C  CFF4 FFE3          	movff	prodh,plusw1
  6175   014330                     
  6176                           ;can/can.c: 1388:     ciFifoCon.rxBF.UINC = 1;
  6177                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  6178   014330  0EF9               	movlw	249
  6179   014332  24E1               	addwf	fsr1l,w,c
  6180   014334  6ED9               	movwf	fsr2l,c
  6181   014336  0EFF               	movlw	255
  6182   014338  20E2               	addwfc	fsr1h,w,c
  6183   01433A  6EDA               	movwf	fsr2h,c
  6184   01433C  80DF               	bsf	indf2,0,c
  6185   01433E                     
  6186                           ;can/can.c: 1391:     spiTransferError = DRV_CANFDSPI_WriteByte( a, ciFifoCon.byte[1]);
  6187                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  6188   01433E  0EF9               	movlw	249
  6189   014340  24E1               	addwf	fsr1l,w,c
  6190   014342  6ED9               	movwf	fsr2l,c
  6191   014344  0EFF               	movlw	255
  6192   014346  20E2               	addwfc	fsr1h,w,c
  6193   014348  6EDA               	movwf	fsr2h,c
  6194   01434A  50DF               	movf	indf2,w,c
  6195   01434C  6EE6               	movwf	postinc1,c
  6196                           
  6197                           ;stkvar	_a @ sp[(-9)+5]
  6198   01434E  0EFC               	movlw	-4
  6199   014350  CFE3 FFE6          	movff	plusw1,postinc1
  6200   014354  CFE3 FFE6          	movff	plusw1,postinc1
  6201   014358  ECDF  F0A2         	call	_DRV_CANFDSPI_WriteByte	;wreg free
  6202                           
  6203                           ;stkvar	_spiTransferError @ sp[(-8)+7]
  6204   01435C  0EFF               	movlw	-1
  6205   01435E  C001  FFE3         	movff	btemp,plusw1
  6206   014362                     
  6207                           ;can/can.c: 1393:     return spiTransferError;
  6208                           ;stkvar	_spiTransferError @ sp[(-8)+7]
  6209   014362  0EFF               	movlw	-1
  6210   014364  CFE3 F001          	movff	plusw1,btemp
  6211   014368                     
  6212                           ; _DRV_CANFDSPI_ReceiveChannelUpdate: autosize = 8, savesize = 0, parsavesize = 0, temps
      +                          ize = 0 parsize = 1, argsize = 1, vargsize = 0
  6213   014368  0EF7               	movlw	247
  6214   01436A  26E1               	addwf	fsr1l,f,c
  6215   01436C  0EFF               	movlw	255
  6216   01436E  22E2               	addwfc	fsr1h,f,c
  6217   014370  0012               	return		;funcret
  6218   014372                     __end_of_DRV_CANFDSPI_ReceiveChannelUpdate:
  6219                           	callstack 0
  6220                           
  6221 ;; *************** function _DRV_CANFDSPI_ReadByteArray *****************
  6222 ;; Defined at:
  6223 ;;		line 356 in file "can/can.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  address         2  [STACK] unsigned short 
  6226 ;;  rxd             2  [STACK] PTR unsigned char 
  6227 ;;		 -> ba(12), ba(76), 
  6228 ;;  nBytes          2  [STACK] unsigned short 
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;  i               2  [STACK] unsigned short 
  6231 ;;  spiTransferS    2  [STACK] unsigned short 
  6232 ;;  spiTransferE    1  [STACK] char 
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  1  [STACK] char 
  6235 ;; Registers used:
  6236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6246 ;;Total ram usage:        0 bytes
  6247 ;; Hardware stack levels used: 1
  6248 ;; Hardware stack levels required when called: 8
  6249 ;; This function calls:
  6250 ;;		_SpiTransfer
  6251 ;; This function is called by:
  6252 ;;		_DRV_CANFDSPI_ReceiveMessageGet
  6253 ;; This function uses a reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text14
  6257   0123FC                     __ptext14:
  6258                           	callstack 0
  6259   0123FC                     _DRV_CANFDSPI_ReadByteArray:
  6260                           	callstack 0
  6261                           
  6262                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6263   0123FC  0E05               	movlw	5
  6264   0123FE  26E1               	addwf	fsr1l,f,c
  6265   012400  0E00               	movlw	0
  6266   012402  22E2               	addwfc	fsr1h,f,c
  6267   012404                     
  6268                           ;can/can.c: 356: int8_t DRV_CANFDSPI_ReadByteArray(uint16_t address,;can/can.c: 357:    
      +                               uint8_t *rxd, uint16_t nBytes);can/can.c: 358: {;can/can.c: 359:     uint16_t i;;ca
      +                          n/can.c: 360:     uint16_t spiTransferSize = nBytes + 2;
  6269                           ;stkvar	_nBytes @ sp[(-5)+-6]
  6270   012404  0EF5               	movlw	-11
  6271   012406  50E3               	movf	plusw1,w,c
  6272   012408  0F02               	addlw	2
  6273   01240A  6E0B               	movwf	(btemp+10)^0,c
  6274   01240C  0EF6               	movlw	-10
  6275   01240E  CFE3 F00C          	movff	plusw1,btemp+11
  6276   012412  0E00               	movlw	0
  6277   012414  220C               	addwfc	(btemp+11)^0,f,c
  6278                           
  6279                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  6280   012416  0EFD               	movlw	-3
  6281   012418  C00B  FFE3         	movff	btemp+10,plusw1
  6282   01241C  0EFE               	movlw	-2
  6283   01241E  C00C  FFE3         	movff	btemp+11,plusw1
  6284   012422                     
  6285                           ;can/can.c: 364:     spiTransmitBuffer[0] = (uint8_t) ((0x03 << 4) + ((address >> 8) & 0
      +                          xF));
  6286                           ;stkvar	_address @ sp[(-5)+-2]
  6287   012422  0EFA               	movlw	250
  6288   012424  24E1               	addwf	fsr1l,w,c
  6289   012426  6ED9               	movwf	fsr2l,c
  6290   012428  0EFF               	movlw	255
  6291   01242A  20E2               	addwfc	fsr1h,w,c
  6292   01242C  6EDA               	movwf	fsr2h,c
  6293   01242E  50DF               	movf	indf2,w,c
  6294   012430  0B0F               	andlw	15
  6295   012432  0F30               	addlw	48
  6296   012434  0101               	movlb	1	; () banked
  6297   012436  6F00               	movwf	_spiTransmitBuffer& (0+255),b
  6298   012438                     
  6299                           ; BSR set to: 1
  6300                           ;can/can.c: 365:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
  6301                           ;stkvar	_address @ sp[(-5)+-2]
  6302   012438  0EF9               	movlw	-7
  6303   01243A  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
  6304   01243E                     
  6305                           ; BSR set to: 1
  6306                           ;can/can.c: 368:     for (i = 2; i < spiTransferSize; i++) {
  6307   01243E  0E02               	movlw	2
  6308   012440  6E0B               	movwf	(btemp+10)^0,c
  6309   012442  0E00               	movlw	0
  6310   012444  6E0C               	movwf	(btemp+11)^0,c
  6311                           
  6312                           ;stkvar	_i @ sp[(-5)+0]
  6313   012446  0EFB               	movlw	-5
  6314   012448  C00B  FFE3         	movff	btemp+10,plusw1
  6315   01244C  0EFC               	movlw	-4
  6316   01244E  C00C  FFE3         	movff	btemp+11,plusw1
  6317   012452  EF47  F092         	goto	l4325
  6318   012456                     l4321:
  6319                           
  6320                           ;can/can.c: 369:         spiTransmitBuffer[i] = 0;
  6321                           ;stkvar	_i @ sp[(-5)+0]
  6322   012456  0EFB               	movlw	-5
  6323   012458  CFE3 F00B          	movff	plusw1,btemp+10
  6324   01245C  0EFC               	movlw	-4
  6325   01245E  CFE3 F00C          	movff	plusw1,btemp+11
  6326   012462  0E00               	movlw	low _spiTransmitBuffer
  6327   012464  240B               	addwf	(btemp+10)^0,w,c
  6328   012466  6ED9               	movwf	fsr2l,c
  6329   012468  0E01               	movlw	high _spiTransmitBuffer
  6330   01246A  200C               	addwfc	(btemp+11)^0,w,c
  6331   01246C  6EDA               	movwf	fsr2h,c
  6332   01246E  6ADF               	clrf	indf2,c
  6333   012470                     
  6334                           ;can/can.c: 370:     }
  6335                           ;stkvar	_i @ sp[(-5)+0]
  6336   012470  0EFB               	movlw	-5
  6337   012472  50E3               	movf	plusw1,w,c
  6338   012474  0F01               	addlw	1
  6339   012476  6E01               	movwf	btemp^0,c
  6340   012478  0EFB               	movlw	-5
  6341   01247A  C001  FFE3         	movff	btemp,plusw1
  6342   01247E  6A01               	clrf	btemp^0,c
  6343   012480  0EFC               	movlw	-4
  6344   012482  50E3               	movf	plusw1,w,c
  6345   012484  2001               	addwfc	btemp^0,w,c
  6346   012486  6E01               	movwf	btemp^0,c
  6347   012488  0EFC               	movlw	-4
  6348   01248A  C001  FFE3         	movff	btemp,plusw1
  6349   01248E                     l4325:
  6350                           
  6351                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  6352   01248E  0EFD               	movlw	-3
  6353   012490  CFE3 F00B          	movff	plusw1,btemp+10
  6354   012494  0EFE               	movlw	-2
  6355   012496  CFE3 F00C          	movff	plusw1,btemp+11
  6356                           
  6357                           ;stkvar	_i @ sp[(-5)+0]
  6358   01249A  0EFB               	movlw	-5
  6359   01249C  CFE3 F009          	movff	plusw1,btemp+8
  6360   0124A0  0EFC               	movlw	-4
  6361   0124A2  CFE3 F00A          	movff	plusw1,btemp+9
  6362   0124A6  500B               	movf	(btemp+10)^0,w,c
  6363   0124A8  5C09               	subwf	(btemp+8)^0,w,c
  6364   0124AA  500C               	movf	(btemp+11)^0,w,c
  6365   0124AC  580A               	subwfb	(btemp+9)^0,w,c
  6366   0124AE  A0D8               	btfss	status,0,c
  6367   0124B0  EF5C  F092         	goto	u1991
  6368   0124B4  EF5E  F092         	goto	u1990
  6369   0124B8                     u1991:
  6370   0124B8  EF2B  F092         	goto	l4321
  6371   0124BC                     u1990:
  6372   0124BC                     
  6373                           ;can/can.c: 372:     spiTransferError = SpiTransfer(spiTransmitBuffer, spiReceiveBuffer,
      +                           spiTransferSize);
  6374                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  6375   0124BC  0EFD               	movlw	-3
  6376   0124BE  CFE3 FFE6          	movff	plusw1,postinc1
  6377   0124C2  CFE3 FFE6          	movff	plusw1,postinc1
  6378   0124C6  0E00               	movlw	low _spiReceiveBuffer
  6379   0124C8  6EE6               	movwf	postinc1,c
  6380   0124CA  0E02               	movlw	high _spiReceiveBuffer
  6381   0124CC  6EE6               	movwf	postinc1,c
  6382   0124CE  0E00               	movlw	low _spiTransmitBuffer
  6383   0124D0  6EE6               	movwf	postinc1,c
  6384   0124D2  0E01               	movlw	high _spiTransmitBuffer
  6385   0124D4  6EE6               	movwf	postinc1,c
  6386   0124D6  ECF2  F09C         	call	_SpiTransfer	;wreg free
  6387                           
  6388                           ;stkvar	_spiTransferError @ sp[(-5)+4]
  6389   0124DA  0EFF               	movlw	-1
  6390   0124DC  C001  FFE3         	movff	btemp,plusw1
  6391   0124E0                     
  6392                           ;can/can.c: 375:     for (i = 0; i < nBytes; i++) {
  6393                           ;stkvar	_i @ sp[(-5)+0]
  6394   0124E0  0EFB               	movlw	-5
  6395   0124E2  6AE3               	clrf	plusw1,c
  6396   0124E4  0EFC               	movlw	-4
  6397   0124E6  6AE3               	clrf	plusw1,c
  6398   0124E8  EFA5  F092         	goto	l4335
  6399   0124EC                     l4331:
  6400                           
  6401                           ;can/can.c: 376:         rxd[i] = spiReceiveBuffer[i + 2];
  6402                           ;stkvar	_i @ sp[(-5)+0]
  6403   0124EC  0EFB               	movlw	-5
  6404   0124EE  CFE3 F00B          	movff	plusw1,btemp+10
  6405   0124F2  0EFC               	movlw	-4
  6406   0124F4  CFE3 F00C          	movff	plusw1,btemp+11
  6407   0124F8  0E02               	movlw	low (_spiReceiveBuffer+2)
  6408   0124FA  240B               	addwf	(btemp+10)^0,w,c
  6409   0124FC  6ED9               	movwf	fsr2l,c
  6410   0124FE  0E02               	movlw	high (_spiReceiveBuffer+2)
  6411   012500  200C               	addwfc	(btemp+11)^0,w,c
  6412   012502  6EDA               	movwf	fsr2h,c
  6413                           
  6414                           ;stkvar	_i @ sp[(-5)+0]
  6415   012504  0EFB               	movlw	-5
  6416   012506  CFE3 F00B          	movff	plusw1,btemp+10
  6417   01250A  0EFC               	movlw	-4
  6418   01250C  CFE3 F00C          	movff	plusw1,btemp+11
  6419                           
  6420                           ;stkvar	_rxd @ sp[(-5)+-4]
  6421   012510  0EF7               	movlw	-9
  6422   012512  CFE3 F009          	movff	plusw1,btemp+8
  6423   012516  0EF8               	movlw	-8
  6424   012518  CFE3 F00A          	movff	plusw1,btemp+9
  6425   01251C  500B               	movf	(btemp+10)^0,w,c
  6426   01251E  2409               	addwf	(btemp+8)^0,w,c
  6427   012520  6EE9               	movwf	fsr0l,c
  6428   012522  500C               	movf	(btemp+11)^0,w,c
  6429   012524  200A               	addwfc	(btemp+9)^0,w,c
  6430   012526  6EEA               	movwf	fsr0h,c
  6431   012528  CFDF FFEF          	movff	indf2,indf0
  6432   01252C                     
  6433                           ;can/can.c: 377:     }
  6434                           ;stkvar	_i @ sp[(-5)+0]
  6435   01252C  0EFB               	movlw	-5
  6436   01252E  50E3               	movf	plusw1,w,c
  6437   012530  0F01               	addlw	1
  6438   012532  6E01               	movwf	btemp^0,c
  6439   012534  0EFB               	movlw	-5
  6440   012536  C001  FFE3         	movff	btemp,plusw1
  6441   01253A  6A01               	clrf	btemp^0,c
  6442   01253C  0EFC               	movlw	-4
  6443   01253E  50E3               	movf	plusw1,w,c
  6444   012540  2001               	addwfc	btemp^0,w,c
  6445   012542  6E01               	movwf	btemp^0,c
  6446   012544  0EFC               	movlw	-4
  6447   012546  C001  FFE3         	movff	btemp,plusw1
  6448   01254A                     l4335:
  6449                           
  6450                           ;stkvar	_nBytes @ sp[(-5)+-6]
  6451   01254A  0EF5               	movlw	-11
  6452   01254C  CFE3 F00B          	movff	plusw1,btemp+10
  6453   012550  0EF6               	movlw	-10
  6454   012552  CFE3 F00C          	movff	plusw1,btemp+11
  6455                           
  6456                           ;stkvar	_i @ sp[(-5)+0]
  6457   012556  0EFB               	movlw	-5
  6458   012558  CFE3 F009          	movff	plusw1,btemp+8
  6459   01255C  0EFC               	movlw	-4
  6460   01255E  CFE3 F00A          	movff	plusw1,btemp+9
  6461   012562  500B               	movf	(btemp+10)^0,w,c
  6462   012564  5C09               	subwf	(btemp+8)^0,w,c
  6463   012566  500C               	movf	(btemp+11)^0,w,c
  6464   012568  580A               	subwfb	(btemp+9)^0,w,c
  6465   01256A  A0D8               	btfss	status,0,c
  6466   01256C  EFBA  F092         	goto	u2001
  6467   012570  EFBC  F092         	goto	u2000
  6468   012574                     u2001:
  6469   012574  EF76  F092         	goto	l4331
  6470   012578                     u2000:
  6471   012578                     
  6472                           ;can/can.c: 379:     return spiTransferError;
  6473                           ;stkvar	_spiTransferError @ sp[(-5)+4]
  6474   012578  0EFF               	movlw	-1
  6475   01257A  CFE3 F001          	movff	plusw1,btemp
  6476   01257E                     
  6477                           ; _DRV_CANFDSPI_ReadByteArray: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0
      +                           parsize = 6, argsize = 6, vargsize = 0
  6478   01257E  0EF5               	movlw	245
  6479   012580  26E1               	addwf	fsr1l,f,c
  6480   012582  0EFF               	movlw	255
  6481   012584  22E2               	addwfc	fsr1h,f,c
  6482   012586  0012               	return		;funcret
  6483   012588                     __end_of_DRV_CANFDSPI_ReadByteArray:
  6484                           	callstack 0
  6485                           
  6486 ;; *************** function _DRV_CANFDSPI_ReceiveChannelEventGet *****************
  6487 ;; Defined at:
  6488 ;;		line 1928 in file "can/can.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;  channel         1  [STACK] enum E5290
  6491 ;;  flags           2  [STACK] PTR enum E5591
  6492 ;;		 -> rxFlags(1), 
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  ciFifoSta       4  [STACK] struct _REG_CiFIFOSTA
  6495 ;;  a               2  [STACK] unsigned short 
  6496 ;;  spiTransferE    1  [STACK] char 
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  1  [STACK] char 
  6499 ;; Registers used:
  6500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6510 ;;Total ram usage:        0 bytes
  6511 ;; Hardware stack levels used: 1
  6512 ;; Hardware stack levels required when called: 9
  6513 ;; This function calls:
  6514 ;;		_DRV_CANFDSPI_ReadByte
  6515 ;; This function is called by:
  6516 ;;		_CanReceive
  6517 ;; This function uses a reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text15
  6521   013F84                     __ptext15:
  6522                           	callstack 0
  6523   013F84                     _DRV_CANFDSPI_ReceiveChannelEventGet:
  6524                           	callstack 0
  6525                           
  6526                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6527   013F84  0E07               	movlw	7
  6528   013F86  26E1               	addwf	fsr1l,f,c
  6529   013F88  0E00               	movlw	0
  6530   013F8A  22E2               	addwfc	fsr1h,f,c
  6531   013F8C                     
  6532                           ;can/can.c: 1934:     if (channel == CAN_FIFO_CH0) return -100;
  6533                           ;stkvar	_channel @ sp[(-7)+-1]
  6534   013F8C  0EF8               	movlw	-8
  6535   013F8E  50E3               	movf	plusw1,w,c
  6536   013F90  A4D8               	btfss	status,2,c
  6537   013F92  EFCD  F09F         	goto	u2061
  6538   013F96  EFCF  F09F         	goto	u2060
  6539   013F9A                     u2061:
  6540   013F9A  EFD1  F09F         	goto	l4407
  6541   013F9E                     u2060:
  6542   013F9E  EF0F  F0A0         	goto	l482
  6543   013FA2                     l4407:
  6544                           
  6545                           ;can/can.c: 1937:     REG_CiFIFOSTA ciFifoSta;;can/can.c: 1938:     ciFifoSta.word = 0;
  6546                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
  6547   013FA2  0EF9               	movlw	-7
  6548   013FA4  6AE3               	clrf	plusw1,c
  6549   013FA6  0EFA               	movlw	-6
  6550   013FA8  6AE3               	clrf	plusw1,c
  6551   013FAA  0EFB               	movlw	-5
  6552   013FAC  6AE3               	clrf	plusw1,c
  6553   013FAE  0EFC               	movlw	-4
  6554   013FB0  6AE3               	clrf	plusw1,c
  6555   013FB2                     
  6556                           ;can/can.c: 1939:     a = 0x054 + (channel * (3*4));
  6557                           ;stkvar	_channel @ sp[(-7)+-1]
  6558   013FB2  0EF8               	movlw	-8
  6559   013FB4  50E3               	movf	plusw1,w,c
  6560   013FB6  0D0C               	mullw	12
  6561   013FB8  0E54               	movlw	84
  6562   013FBA  26F3               	addwf	243,f,c
  6563   013FBC  0E00               	movlw	0
  6564   013FBE  22F4               	addwfc	244,f,c
  6565                           
  6566                           ;stkvar	_a @ sp[(-7)+4]
  6567   013FC0  0EFD               	movlw	-3
  6568   013FC2  CFF3 FFE3          	movff	prodl,plusw1
  6569   013FC6  0EFE               	movlw	-2
  6570   013FC8  CFF4 FFE3          	movff	prodh,plusw1
  6571   013FCC                     
  6572                           ;can/can.c: 1941:     spiTransferError = DRV_CANFDSPI_ReadByte( a, &ciFifoSta.byte[0]);
  6573                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
  6574   013FCC  0EF9               	movlw	249
  6575   013FCE  24E1               	addwf	fsr1l,w,c
  6576   013FD0  6E01               	movwf	btemp^0,c
  6577   013FD2  0EFF               	movlw	255
  6578   013FD4  20E2               	addwfc	fsr1h,w,c
  6579   013FD6  6E02               	movwf	(btemp+1)^0,c
  6580   013FD8  C001  FFE6         	movff	btemp,postinc1
  6581   013FDC  C002  FFE6         	movff	btemp+1,postinc1
  6582                           
  6583                           ;stkvar	_a @ sp[(-9)+4]
  6584   013FE0  0EFB               	movlw	-5
  6585   013FE2  CFE3 FFE6          	movff	plusw1,postinc1
  6586   013FE6  CFE3 FFE6          	movff	plusw1,postinc1
  6587   013FEA  EC52  F0A2         	call	_DRV_CANFDSPI_ReadByte	;wreg free
  6588                           
  6589                           ;stkvar	_spiTransferError @ sp[(-7)+6]
  6590   013FEE  0EFF               	movlw	-1
  6591   013FF0  C001  FFE3         	movff	btemp,plusw1
  6592   013FF4                     
  6593                           ;can/can.c: 1942:     if (spiTransferError) {
  6594                           ;stkvar	_spiTransferError @ sp[(-7)+6]
  6595   013FF4  0EFF               	movlw	-1
  6596   013FF6  50E3               	movf	plusw1,w,c
  6597   013FF8  B4D8               	btfsc	status,2,c
  6598   013FFA  EF01  F0A0         	goto	u2071
  6599   013FFE  EF03  F0A0         	goto	u2070
  6600   014002                     u2071:
  6601   014002  EF05  F0A0         	goto	l4417
  6602   014006                     u2070:
  6603   014006  EF0F  F0A0         	goto	l482
  6604   01400A                     l4417:
  6605                           
  6606                           ;can/can.c: 1947:     *flags = (CAN_RX_FIFO_EVENT) (ciFifoSta.byte[0] & CAN_RX_FIFO_ALL_
      +                          EVENTS);
  6607                           ;stkvar	_flags @ sp[(-7)+-3]
  6608   01400A  0EF6               	movlw	-10
  6609   01400C  CFE3 FFD9          	movff	plusw1,fsr2l
  6610   014010  0EF7               	movlw	-9
  6611   014012  CFE3 FFDA          	movff	plusw1,fsr2h
  6612                           
  6613                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
  6614   014016  0EF9               	movlw	-7
  6615   014018  50E3               	movf	plusw1,w,c
  6616   01401A  0B0F               	andlw	15
  6617   01401C  6EDF               	movwf	indf2,c
  6618   01401E                     l482:
  6619                           
  6620                           ; _DRV_CANFDSPI_ReceiveChannelEventGet: autosize = 7, savesize = 0, parsavesize = 0, tem
      +                          psize = 0 parsize = 3, argsize = 3, vargsize = 0
  6621   01401E  0EF6               	movlw	246
  6622   014020  26E1               	addwf	fsr1l,f,c
  6623   014022  0EFF               	movlw	255
  6624   014024  22E2               	addwfc	fsr1h,f,c
  6625   014026  0012               	return		;funcret
  6626   014028                     __end_of_DRV_CANFDSPI_ReceiveChannelEventGet:
  6627                           	callstack 0
  6628                           
  6629 ;; *************** function _XF_init *****************
  6630 ;; Defined at:
  6631 ;;		line 80 in file "xf/xf.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;		None
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  i               2  [STACK] int 
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1  [STACK] void 
  6638 ;; Registers used:
  6639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;Total ram usage:        0 bytes
  6650 ;; Hardware stack levels used: 1
  6651 ;; Hardware stack levels required when called: 8
  6652 ;; This function calls:
  6653 ;;		_Event_init
  6654 ;; This function is called by:
  6655 ;;		_main
  6656 ;; This function uses a reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text16
  6660   012B90                     __ptext16:
  6661                           	callstack 0
  6662   012B90                     _XF_init:
  6663                           	callstack 0
  6664                           
  6665                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6666   012B90  52E6               	movf	postinc1,f,c
  6667   012B92  52E6               	movf	postinc1,f,c
  6668   012B94                     
  6669                           ;xf/xf.c: 82:     int i;;xf/xf.c: 83:     for (i=0; i<30; i++)
  6670                           ;stkvar	_i @ sp[(-2)+0]
  6671   012B94  0EFE               	movlw	-2
  6672   012B96  6AE3               	clrf	plusw1,c
  6673   012B98  0EFF               	movlw	-1
  6674   012B9A  6AE3               	clrf	plusw1,c
  6675   012B9C                     l5231:
  6676                           
  6677                           ;xf/xf.c: 84:     {;xf/xf.c: 85:         Event_init(&(theXF.eventQueue[i]));
  6678                           ;stkvar	_i @ sp[(-2)+0]
  6679   012B9C  0EFE               	movlw	-2
  6680   012B9E  CFE3 F00B          	movff	plusw1,btemp+10
  6681   012BA2  0EFF               	movlw	-1
  6682   012BA4  CFE3 F00C          	movff	plusw1,btemp+11
  6683   012BA8  0E06               	movlw	6
  6684   012BAA  020B               	mulwf	(btemp+10)^0,c
  6685   012BAC  CFF3 F009          	movff	prodl,btemp+8
  6686   012BB0  CFF4 F00A          	movff	prodh,btemp+9
  6687   012BB4  020C               	mulwf	(btemp+11)^0,c
  6688   012BB6  50F3               	movf	prodl,w,c
  6689   012BB8  260A               	addwf	(btemp+9)^0,f,c
  6690   012BBA  0E28               	movlw	low (_theXF+96)
  6691   012BBC  2409               	addwf	(btemp+8)^0,w,c
  6692   012BBE  6E0B               	movwf	(btemp+10)^0,c
  6693   012BC0  0E03               	movlw	high (_theXF+96)
  6694   012BC2  200A               	addwfc	(btemp+9)^0,w,c
  6695   012BC4  6E0C               	movwf	(btemp+11)^0,c
  6696   012BC6  C00B  FFE6         	movff	btemp+10,postinc1
  6697   012BCA  C00C  FFE6         	movff	btemp+11,postinc1
  6698   012BCE  EC0A  F0A3         	call	_Event_init	;wreg free
  6699   012BD2                     
  6700                           ;xf/xf.c: 86:     }
  6701                           ;stkvar	_i @ sp[(-2)+0]
  6702   012BD2  0EFE               	movlw	-2
  6703   012BD4  50E3               	movf	plusw1,w,c
  6704   012BD6  0F01               	addlw	1
  6705   012BD8  6E01               	movwf	btemp^0,c
  6706   012BDA  0EFE               	movlw	-2
  6707   012BDC  C001  FFE3         	movff	btemp,plusw1
  6708   012BE0  6A01               	clrf	btemp^0,c
  6709   012BE2  0EFF               	movlw	-1
  6710   012BE4  50E3               	movf	plusw1,w,c
  6711   012BE6  2001               	addwfc	btemp^0,w,c
  6712   012BE8  6E01               	movwf	btemp^0,c
  6713   012BEA  0EFF               	movlw	-1
  6714   012BEC  C001  FFE3         	movff	btemp,plusw1
  6715   012BF0                     
  6716                           ;stkvar	_i @ sp[(-2)+0]
  6717   012BF0  0EFF               	movlw	-1
  6718   012BF2  BEE3               	btfsc	plusw1,7,c
  6719   012BF4  EF09  F096         	goto	u2931
  6720   012BF8  0EFF               	movlw	-1
  6721   012BFA  50E3               	movf	plusw1,w,c
  6722   012BFC  E10C               	bnz	u2930
  6723   012BFE  0EFE               	movlw	-2
  6724   012C00  CFE3 F001          	movff	plusw1,btemp
  6725   012C04  0E1E               	movlw	30
  6726   012C06  5E01               	subwf	btemp^0,f,c
  6727   012C08  A0D8               	btfss	status,0,c
  6728   012C0A  EF09  F096         	goto	u2931
  6729   012C0E  EF0B  F096         	goto	u2930
  6730   012C12                     u2931:
  6731   012C12  EFCE  F095         	goto	l5231
  6732   012C16                     u2930:
  6733   012C16                     
  6734                           ;xf/xf.c: 88:     for (i=0; i<12; i++)
  6735                           ;stkvar	_i @ sp[(-2)+0]
  6736   012C16  0EFE               	movlw	-2
  6737   012C18  6AE3               	clrf	plusw1,c
  6738   012C1A  0EFF               	movlw	-1
  6739   012C1C  6AE3               	clrf	plusw1,c
  6740   012C1E                     l5243:
  6741                           
  6742                           ;xf/xf.c: 89:     {;xf/xf.c: 90:         theXF.timerList[i].tm = 0;
  6743                           ;stkvar	_i @ sp[(-2)+0]
  6744   012C1E  0EFE               	movlw	-2
  6745   012C20  CFE3 F00B          	movff	plusw1,btemp+10
  6746   012C24  0EFF               	movlw	-1
  6747   012C26  CFE3 F00C          	movff	plusw1,btemp+11
  6748   012C2A  90D8               	bcf	status,0,c
  6749   012C2C  360B               	rlcf	(btemp+10)^0,f,c
  6750   012C2E  360C               	rlcf	(btemp+11)^0,f,c
  6751   012C30  90D8               	bcf	status,0,c
  6752   012C32  360B               	rlcf	(btemp+10)^0,f,c
  6753   012C34  360C               	rlcf	(btemp+11)^0,f,c
  6754   012C36  90D8               	bcf	status,0,c
  6755   012C38  360B               	rlcf	(btemp+10)^0,f,c
  6756   012C3A  360C               	rlcf	(btemp+11)^0,f,c
  6757   012C3C  0EC8               	movlw	low _theXF
  6758   012C3E  240B               	addwf	(btemp+10)^0,w,c
  6759   012C40  6ED9               	movwf	fsr2l,c
  6760   012C42  0E02               	movlw	high _theXF
  6761   012C44  200C               	addwfc	(btemp+11)^0,w,c
  6762   012C46  6EDA               	movwf	fsr2h,c
  6763   012C48  6ADE               	clrf	postinc2,c
  6764   012C4A  6ADD               	clrf	postdec2,c
  6765   012C4C                     
  6766                           ;xf/xf.c: 91:         Event_init(&(theXF.timerList[i].ev));
  6767                           ;stkvar	_i @ sp[(-2)+0]
  6768   012C4C  0EFE               	movlw	-2
  6769   012C4E  CFE3 F00B          	movff	plusw1,btemp+10
  6770   012C52  0EFF               	movlw	-1
  6771   012C54  CFE3 F00C          	movff	plusw1,btemp+11
  6772   012C58  90D8               	bcf	status,0,c
  6773   012C5A  360B               	rlcf	(btemp+10)^0,f,c
  6774   012C5C  360C               	rlcf	(btemp+11)^0,f,c
  6775   012C5E  90D8               	bcf	status,0,c
  6776   012C60  360B               	rlcf	(btemp+10)^0,f,c
  6777   012C62  360C               	rlcf	(btemp+11)^0,f,c
  6778   012C64  90D8               	bcf	status,0,c
  6779   012C66  360B               	rlcf	(btemp+10)^0,f,c
  6780   012C68  360C               	rlcf	(btemp+11)^0,f,c
  6781   012C6A  0ECA               	movlw	low (_theXF+2)
  6782   012C6C  240B               	addwf	(btemp+10)^0,w,c
  6783   012C6E  6E09               	movwf	(btemp+8)^0,c
  6784   012C70  0E02               	movlw	high (_theXF+2)
  6785   012C72  200C               	addwfc	(btemp+11)^0,w,c
  6786   012C74  6E0A               	movwf	(btemp+9)^0,c
  6787   012C76  C009  FFE6         	movff	btemp+8,postinc1
  6788   012C7A  C00A  FFE6         	movff	btemp+9,postinc1
  6789   012C7E  EC0A  F0A3         	call	_Event_init	;wreg free
  6790   012C82                     
  6791                           ;xf/xf.c: 92:     }
  6792                           ;stkvar	_i @ sp[(-2)+0]
  6793   012C82  0EFE               	movlw	-2
  6794   012C84  50E3               	movf	plusw1,w,c
  6795   012C86  0F01               	addlw	1
  6796   012C88  6E01               	movwf	btemp^0,c
  6797   012C8A  0EFE               	movlw	-2
  6798   012C8C  C001  FFE3         	movff	btemp,plusw1
  6799   012C90  6A01               	clrf	btemp^0,c
  6800   012C92  0EFF               	movlw	-1
  6801   012C94  50E3               	movf	plusw1,w,c
  6802   012C96  2001               	addwfc	btemp^0,w,c
  6803   012C98  6E01               	movwf	btemp^0,c
  6804   012C9A  0EFF               	movlw	-1
  6805   012C9C  C001  FFE3         	movff	btemp,plusw1
  6806   012CA0                     
  6807                           ;stkvar	_i @ sp[(-2)+0]
  6808   012CA0  0EFF               	movlw	-1
  6809   012CA2  BEE3               	btfsc	plusw1,7,c
  6810   012CA4  EF61  F096         	goto	u2941
  6811   012CA8  0EFF               	movlw	-1
  6812   012CAA  50E3               	movf	plusw1,w,c
  6813   012CAC  E10C               	bnz	u2940
  6814   012CAE  0EFE               	movlw	-2
  6815   012CB0  CFE3 F001          	movff	plusw1,btemp
  6816   012CB4  0E0C               	movlw	12
  6817   012CB6  5E01               	subwf	btemp^0,f,c
  6818   012CB8  A0D8               	btfss	status,0,c
  6819   012CBA  EF61  F096         	goto	u2941
  6820   012CBE  EF63  F096         	goto	u2940
  6821   012CC2                     u2941:
  6822   012CC2  EF0F  F096         	goto	l5243
  6823   012CC6                     u2940:
  6824   012CC6                     
  6825                           ;xf/xf.c: 93:     theXF.in = 0;
  6826   012CC6  0E00               	movlw	0
  6827   012CC8  CFE8 F3DC          	movff	wreg,_theXF+276
  6828                           
  6829                           ;xf/xf.c: 94:     theXF.out = 0;
  6830   012CCC  0E00               	movlw	0
  6831   012CCE  CFE8 F3DD          	movff	wreg,_theXF+277
  6832                           
  6833                           ;xf/xf.c: 95:     theXF.maxEvt = 0;
  6834   012CD2  0E00               	movlw	0
  6835   012CD4  CFE8 F3DE          	movff	wreg,_theXF+278
  6836                           
  6837                           ;xf/xf.c: 96:     theXF.countEvt = 0;
  6838   012CD8  0E00               	movlw	0
  6839   012CDA  CFE8 F3DF          	movff	wreg,_theXF+279
  6840   012CDE                     
  6841                           ; _XF_init: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  6842   012CDE  52E5               	movf	postdec1,f,c
  6843   012CE0  52E5               	movf	postdec1,f,c
  6844   012CE2  0012               	return		;funcret
  6845   012CE4                     __end_of_XF_init:
  6846                           	callstack 0
  6847                           
  6848 ;; *************** function _Event_init *****************
  6849 ;; Defined at:
  6850 ;;		line 4 in file "xf/event.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;  me              2  [STACK] PTR struct Event_
  6853 ;;		 -> ev(6), theXF$timerList(96), theXF$eventQueue(180), theXF(282), 
  6854 ;; Auto vars:     Size  Location     Type
  6855 ;;		None
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  1  [STACK] void 
  6858 ;; Registers used:
  6859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6869 ;;Total ram usage:        0 bytes
  6870 ;; Hardware stack levels used: 1
  6871 ;; Hardware stack levels required when called: 7
  6872 ;; This function calls:
  6873 ;;		Nothing
  6874 ;; This function is called by:
  6875 ;;		_XF_init
  6876 ;;		_XF_unscheduleTimer
  6877 ;;		_XF_post
  6878 ;; This function uses a reentrant model
  6879 ;;
  6880                           
  6881                           	psect	text17
  6882   014614                     __ptext17:
  6883                           	callstack 0
  6884   014614                     _Event_init:
  6885                           	callstack 10
  6886   014614                     
  6887                           ;xf/event.c: 4: void Event_init(struct Event_* me);xf/event.c: 5: {;xf/event.c: 6:     m
      +                          e->id = 0;
  6888                           ;stkvar	_me @ sp[(0)+-2]
  6889   014614  0EFE               	movlw	-2
  6890   014616  CFE3 FFD9          	movff	plusw1,fsr2l
  6891   01461A  0EFF               	movlw	-1
  6892   01461C  CFE3 FFDA          	movff	plusw1,fsr2h
  6893   014620  6ADF               	clrf	indf2,c
  6894   014622                     
  6895                           ;xf/event.c: 7:     me->delay = 0;
  6896                           ;stkvar	_me @ sp[(0)+-2]
  6897   014622  0EFE               	movlw	-2
  6898   014624  CFE3 F00B          	movff	plusw1,btemp+10
  6899   014628  0EFF               	movlw	-1
  6900   01462A  CFE3 F00C          	movff	plusw1,btemp+11
  6901   01462E  0E04               	movlw	4
  6902   014630  240B               	addwf	(btemp+10)^0,w,c
  6903   014632  6ED9               	movwf	fsr2l,c
  6904   014634  0E00               	movlw	0
  6905   014636  200C               	addwfc	(btemp+11)^0,w,c
  6906   014638  6EDA               	movwf	fsr2h,c
  6907   01463A  6ADE               	clrf	postinc2,c
  6908   01463C  6ADD               	clrf	postdec2,c
  6909   01463E                     
  6910                           ;xf/event.c: 8:     me->processEvent = ((void*)(0));
  6911                           ;stkvar	_me @ sp[(0)+-2]
  6912   01463E  0EFE               	movlw	-2
  6913   014640  CFE3 F00B          	movff	plusw1,btemp+10
  6914   014644  0EFF               	movlw	-1
  6915   014646  CFE3 F00C          	movff	plusw1,btemp+11
  6916   01464A  0E01               	movlw	1
  6917   01464C  240B               	addwf	(btemp+10)^0,w,c
  6918   01464E  6ED9               	movwf	fsr2l,c
  6919   014650  0E00               	movlw	0
  6920   014652  200C               	addwfc	(btemp+11)^0,w,c
  6921   014654  6EDA               	movwf	fsr2h,c
  6922   014656  6ADE               	clrf	postinc2,c
  6923   014658  6ADE               	clrf	postinc2,c
  6924   01465A  6ADD               	clrf	postdec2,c
  6925   01465C                     
  6926                           ; _Event_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  6927   01465C  52E5               	movf	postdec1,f,c
  6928   01465E  52E5               	movf	postdec1,f,c
  6929   014660  0012               	return		;funcret
  6930   014662                     __end_of_Event_init:
  6931                           	callstack 0
  6932                           
  6933 ;; *************** function _XF_executeOnce *****************
  6934 ;; Defined at:
  6935 ;;		line 290 in file "xf/xf.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;		None
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;  ev              6  [STACK] struct Event_
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  1  [STACK] void 
  6942 ;; Registers used:
  6943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;Total ram usage:        0 bytes
  6954 ;; Hardware stack levels used: 1
  6955 ;; Hardware stack levels required when called: 14
  6956 ;; This function calls:
  6957 ;;		_XF_popEvent
  6958 ;;		_lightControl_Process
  6959 ;;		_motorControl_Process
  6960 ;; This function is called by:
  6961 ;;		_main
  6962 ;; This function uses a reentrant model
  6963 ;;
  6964                           
  6965                           	psect	text18
  6966   0141E8                     __ptext18:
  6967                           	callstack 0
  6968   0141E8                     _XF_executeOnce:
  6969                           	callstack 0
  6970                           
  6971                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6972   0141E8  0E06               	movlw	6
  6973   0141EA  26E1               	addwf	fsr1l,f,c
  6974   0141EC  0E00               	movlw	0
  6975   0141EE  22E2               	addwfc	fsr1h,f,c
  6976   0141F0                     
  6977                           ;xf/xf.c: 292:     Event ev = XF_popEvent(0);
  6978   0141F0  0E00               	movlw	0
  6979   0141F2  6EE6               	movwf	postinc1,c
  6980   0141F4  EC27  F09C         	call	_XF_popEvent	;wreg free
  6981                           
  6982                           ;stkvar	_ev @ sp[(-12)+0]
  6983   0141F8  0EFA               	movlw	250
  6984   0141FA  24E1               	addwf	fsr1l,w,c
  6985   0141FC  6ED9               	movwf	fsr2l,c
  6986   0141FE  0EFF               	movlw	255
  6987   014200  20E2               	addwfc	fsr1h,w,c
  6988   014202  6EDA               	movwf	fsr2h,c
  6989   014204  0E06               	movlw	6
  6990   014206  6E01               	movwf	btemp^0,c
  6991   014208                     uf295999:
  6992   014208  50DD               	movf	postdec2,w,c
  6993   01420A  52E5               	movf	postdec1,f,c
  6994   01420C  50E7               	movf	indf1,w,c
  6995   01420E  6EDF               	movwf	indf2,c
  6996   014210  2E01               	decfsz	btemp^0,f,c
  6997   014212  D7FA               	bra	uf295999
  6998   014214                     
  6999                           ;xf/xf.c: 294:     if (ev.processEvent != ((void*)0))
  7000                           ;stkvar	_ev @ sp[(-6)+0]
  7001   014214  0EFB               	movlw	251
  7002   014216  24E1               	addwf	fsr1l,w,c
  7003   014218  6ED9               	movwf	fsr2l,c
  7004   01421A  0EFF               	movlw	255
  7005   01421C  20E2               	addwfc	fsr1h,w,c
  7006   01421E  6EDA               	movwf	fsr2h,c
  7007   014220  50DE               	movf	postinc2,w,c
  7008   014222  10DE               	iorwf	postinc2,w,c
  7009   014224  10DE               	iorwf	postinc2,w,c
  7010   014226  B4D8               	btfsc	status,2,c
  7011   014228  EF18  F0A1         	goto	u2961
  7012   01422C  EF1A  F0A1         	goto	u2960
  7013   014230                     u2961:
  7014   014230  EF37  F0A1         	goto	l1261
  7015   014234                     u2960:
  7016   014234                     
  7017                           ;xf/xf.c: 295:     {;xf/xf.c: 298:         ev.processEvent(&ev);
  7018                           ;stkvar	_ev @ sp[(-6)+0]
  7019   014234  0EFA               	movlw	250
  7020   014236  24E1               	addwf	fsr1l,w,c
  7021   014238  6E01               	movwf	btemp^0,c
  7022   01423A  0EFF               	movlw	255
  7023   01423C  20E2               	addwfc	fsr1h,w,c
  7024   01423E  6E02               	movwf	(btemp+1)^0,c
  7025   014240  C001  FFE6         	movff	btemp,postinc1
  7026   014244  C002  FFE6         	movff	btemp+1,postinc1
  7027                           
  7028                           ;stkvar	_ev @ sp[(-8)+0]
  7029   014248  0EF9               	movlw	249
  7030   01424A  24E1               	addwf	fsr1l,w,c
  7031   01424C  6ED9               	movwf	fsr2l,c
  7032   01424E  0EFF               	movlw	255
  7033   014250  20E2               	addwfc	fsr1h,w,c
  7034   014252  6EDA               	movwf	fsr2h,c
  7035   014254  D802               	call	u2978
  7036   014256  EF37  F0A1         	goto	u2979
  7037   01425A                     u2978:
  7038   01425A  0005               	push	
  7039   01425C  6EFA               	movwf	pclath,c
  7040   01425E  50DE               	movf	postinc2,w,c
  7041   014260  6EFD               	movwf	tosl,c
  7042   014262  50DE               	movf	postinc2,w,c
  7043   014264  6EFE               	movwf	tosh,c
  7044   014266  50DE               	movf	postinc2,w,c
  7045   014268  6EFF               	movwf	tosu,c
  7046   01426A  50FA               	movf	pclath,w,c
  7047   01426C  0012               	return		;indir
  7048   01426E                     u2979:
  7049   01426E                     l1261:
  7050                           
  7051                           ; _XF_executeOnce: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7052   01426E  0EFA               	movlw	250
  7053   014270  26E1               	addwf	fsr1l,f,c
  7054   014272  0EFF               	movlw	255
  7055   014274  22E2               	addwfc	fsr1h,f,c
  7056   014276  0012               	return		;funcret
  7057   014278                     __end_of_XF_executeOnce:
  7058                           	callstack 0
  7059                           
  7060 ;; *************** function _lightControl_Process *****************
  7061 ;; Defined at:
  7062 ;;		line 145 in file "carFunctions.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;  ev              2  [STACK] PTR struct Event_
  7065 ;;		 -> ev(6), 
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;		None
  7068 ;; Return value:  Size  Location     Type
  7069 ;;                  1  [STACK] _Bool 
  7070 ;; Registers used:
  7071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7072 ;; Tracked objects:
  7073 ;;		On entry : 0/0
  7074 ;;		On exit  : 0/0
  7075 ;;		Unchanged: 0/0
  7076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7081 ;;Total ram usage:        0 bytes
  7082 ;; Hardware stack levels used: 1
  7083 ;; Hardware stack levels required when called: 13
  7084 ;; This function calls:
  7085 ;;		_lightContol_BackLight
  7086 ;;		_lightContol_FrontLight
  7087 ;; This function is called by:
  7088 ;;		_main
  7089 ;;		_updateCarState
  7090 ;;		_XF_executeOnce
  7091 ;; This function uses a reentrant model
  7092 ;;
  7093                           
  7094                           	psect	text19
  7095   012588                     __ptext19:
  7096                           	callstack 0
  7097   012588                     _lightControl_Process:
  7098                           	callstack 16
  7099   012588                     
  7100                           ;carFunctions.c: 145: _Bool lightControl_Process(Event* ev);carFunctions.c: 146: {;carFu
      +                          nctions.c: 154:     static LightState state = INIT;;carFunctions.c: 155:     static Ligh
      +                          tState oldState = INIT;;carFunctions.c: 156:     switch(state)
  7101   012588  EF21  F093         	goto	l5115
  7102   01258C                     l5093:
  7103                           
  7104                           ;carFunctions.c: 159:             if(ev->id == E_INIT){
  7105                           ;stkvar	_ev @ sp[(0)+-2]
  7106   01258C  0EFE               	movlw	-2
  7107   01258E  CFE3 FFD9          	movff	plusw1,fsr2l
  7108   012592  0EFF               	movlw	-1
  7109   012594  CFE3 FFDA          	movff	plusw1,fsr2h
  7110   012598  50DF               	movf	indf2,w,c
  7111   01259A  06E8               	decf	wreg,f,c
  7112   01259C  A4D8               	btfss	status,2,c
  7113   01259E  EFD3  F092         	goto	u2851
  7114   0125A2  EFD5  F092         	goto	u2850
  7115   0125A6                     u2851:
  7116   0125A6  EF3E  F093         	goto	l5117
  7117   0125AA                     u2850:
  7118   0125AA                     l5095:
  7119                           
  7120                           ;carFunctions.c: 160:                 state = OFF;
  7121   0125AA  0E01               	movlw	1
  7122   0125AC  6E3A               	movwf	lightControl_Process@state^0,c
  7123   0125AE  EF3E  F093         	goto	l5117
  7124   0125B2                     l5097:
  7125                           
  7126                           ;carFunctions.c: 164:             if(ev->id == E_CONTACT_ON)
  7127                           ;stkvar	_ev @ sp[(0)+-2]
  7128   0125B2  0EFE               	movlw	-2
  7129   0125B4  CFE3 FFD9          	movff	plusw1,fsr2l
  7130   0125B8  0EFF               	movlw	-1
  7131   0125BA  CFE3 FFDA          	movff	plusw1,fsr2h
  7132   0125BE  50DF               	movf	indf2,w,c
  7133   0125C0  0A03               	xorlw	3
  7134   0125C2  A4D8               	btfss	status,2,c
  7135   0125C4  EFE6  F092         	goto	u2861
  7136   0125C8  EFE8  F092         	goto	u2860
  7137   0125CC                     u2861:
  7138   0125CC  EF3E  F093         	goto	l5117
  7139   0125D0                     u2860:
  7140   0125D0                     
  7141                           ;carFunctions.c: 165:             {;carFunctions.c: 166:                 state = CRUISE;
  7142   0125D0  0E02               	movlw	2
  7143   0125D2  6E3A               	movwf	lightControl_Process@state^0,c
  7144   0125D4  EF3E  F093         	goto	l5117
  7145   0125D8                     l5101:
  7146                           
  7147                           ;carFunctions.c: 171:             if(ev->id == E_CONTACT_OFF)
  7148                           ;stkvar	_ev @ sp[(0)+-2]
  7149   0125D8  0EFE               	movlw	-2
  7150   0125DA  CFE3 FFD9          	movff	plusw1,fsr2l
  7151   0125DE  0EFF               	movlw	-1
  7152   0125E0  CFE3 FFDA          	movff	plusw1,fsr2h
  7153   0125E4  50DF               	movf	indf2,w,c
  7154   0125E6  0A02               	xorlw	2
  7155   0125E8  A4D8               	btfss	status,2,c
  7156   0125EA  EFF9  F092         	goto	u2871
  7157   0125EE  EFFB  F092         	goto	u2870
  7158   0125F2                     u2871:
  7159   0125F2  EFFD  F092         	goto	l5105
  7160   0125F6                     u2870:
  7161   0125F6  EFD5  F092         	goto	l5095
  7162   0125FA                     l5105:
  7163                           
  7164                           ;stkvar	_ev @ sp[(0)+-2]
  7165   0125FA  0EFE               	movlw	-2
  7166   0125FC  CFE3 FFD9          	movff	plusw1,fsr2l
  7167   012600  0EFF               	movlw	-1
  7168   012602  CFE3 FFDA          	movff	plusw1,fsr2h
  7169   012606  50DF               	movf	indf2,w,c
  7170   012608  0A04               	xorlw	4
  7171   01260A  A4D8               	btfss	status,2,c
  7172   01260C  EF0A  F093         	goto	u2881
  7173   012610  EF0C  F093         	goto	u2880
  7174   012614                     u2881:
  7175   012614  EF3E  F093         	goto	l5117
  7176   012618                     u2880:
  7177   012618                     
  7178                           ;carFunctions.c: 177:             {;carFunctions.c: 178:                 state = BRAKE;
  7179   012618  0E03               	movlw	3
  7180   01261A  6E3A               	movwf	lightControl_Process@state^0,c
  7181   01261C  EF3E  F093         	goto	l5117
  7182   012620                     l5109:
  7183                           
  7184                           ;carFunctions.c: 182:             if(ev->id == E_CONTACT_OFF)
  7185                           ;stkvar	_ev @ sp[(0)+-2]
  7186   012620  0EFE               	movlw	-2
  7187   012622  CFE3 FFD9          	movff	plusw1,fsr2l
  7188   012626  0EFF               	movlw	-1
  7189   012628  CFE3 FFDA          	movff	plusw1,fsr2h
  7190   01262C  50DF               	movf	indf2,w,c
  7191   01262E  0A02               	xorlw	2
  7192   012630  A4D8               	btfss	status,2,c
  7193   012632  EF1D  F093         	goto	u2891
  7194   012636  EF1F  F093         	goto	u2890
  7195   01263A                     u2891:
  7196   01263A  EF3E  F093         	goto	l5117
  7197   01263E                     u2890:
  7198   01263E  EFD5  F092         	goto	l5095
  7199   012642                     l5115:
  7200   012642  503A               	movf	lightControl_Process@state^0,w,c
  7201   012644  6E0B               	movwf	(btemp+10)^0,c
  7202   012646  6A0C               	clrf	(btemp+11)^0,c
  7203                           
  7204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7205                           ; Switch size 1, requested type "simple"
  7206                           ; Number of cases is 1, Range of values is 0 to 0
  7207                           ; switch strategies available:
  7208                           ; Name         Instructions Cycles
  7209                           ; simple_byte            4     3 (average)
  7210                           ;	Chosen strategy is simple_byte
  7211   012648  500C               	movf	(btemp+11)^0,w,c
  7212   01264A  0A00               	xorlw	0	; case 0
  7213   01264C  B4D8               	btfsc	status,2,c
  7214   01264E  EF2B  F093         	goto	l5507
  7215   012652  EF3E  F093         	goto	l5117
  7216   012656                     l5507:
  7217                           
  7218                           ; Switch size 1, requested type "simple"
  7219                           ; Number of cases is 4, Range of values is 0 to 3
  7220                           ; switch strategies available:
  7221                           ; Name         Instructions Cycles
  7222                           ; simple_byte           13     7 (average)
  7223                           ;	Chosen strategy is simple_byte
  7224   012656  500B               	movf	(btemp+10)^0,w,c
  7225   012658  0A00               	xorlw	0	; case 0
  7226   01265A  B4D8               	btfsc	status,2,c
  7227   01265C  EFC6  F092         	goto	l5093
  7228   012660  0A01               	xorlw	1	; case 1
  7229   012662  B4D8               	btfsc	status,2,c
  7230   012664  EFD9  F092         	goto	l5097
  7231   012668  0A03               	xorlw	3	; case 2
  7232   01266A  B4D8               	btfsc	status,2,c
  7233   01266C  EFEC  F092         	goto	l5101
  7234   012670  0A01               	xorlw	1	; case 3
  7235   012672  B4D8               	btfsc	status,2,c
  7236   012674  EF10  F093         	goto	l5109
  7237   012678  EF3E  F093         	goto	l5117
  7238   01267C                     l5117:
  7239                           
  7240                           ;carFunctions.c: 191:    if(oldState == state)
  7241   01267C  503A               	movf	lightControl_Process@state^0,w,c
  7242   01267E  1839               	xorwf	lightControl_Process@oldState^0,w,c
  7243   012680  A4D8               	btfss	status,2,c
  7244   012682  EF45  F093         	goto	u2901
  7245   012686  EF47  F093         	goto	u2900
  7246   01268A                     u2901:
  7247   01268A  EF49  F093         	goto	l1492
  7248   01268E                     u2900:
  7249   01268E  EF84  F093         	goto	l1493
  7250   012692                     l1492:
  7251                           
  7252                           ;carFunctions.c: 195:    oldState = state;
  7253   012692  C03A  F039         	movff	lightControl_Process@state,lightControl_Process@oldState
  7254                           
  7255                           ;carFunctions.c: 196:    switch(state)
  7256   012696  EF67  F093         	goto	l5129
  7257   01269A                     l5121:
  7258                           
  7259                           ;carFunctions.c: 201:             lightContol_FrontLight(0);
  7260   01269A  0E00               	movlw	0
  7261   01269C  6EE6               	movwf	postinc1,c
  7262   01269E  ECBF  F09E         	call	_lightContol_FrontLight	;wreg free
  7263                           
  7264                           ;carFunctions.c: 202:             lightContol_BackLight(0);
  7265   0126A2  0E00               	movlw	0
  7266   0126A4  6EE6               	movwf	postinc1,c
  7267   0126A6  EC65  F09E         	call	_lightContol_BackLight	;wreg free
  7268                           
  7269                           ;carFunctions.c: 203:             break;
  7270   0126AA  EF84  F093         	goto	l1493
  7271   0126AE                     l5123:
  7272                           
  7273                           ;carFunctions.c: 205:             lightContol_FrontLight(50);
  7274   0126AE  0E32               	movlw	50
  7275   0126B0  6EE6               	movwf	postinc1,c
  7276   0126B2  ECBF  F09E         	call	_lightContol_FrontLight	;wreg free
  7277                           
  7278                           ;carFunctions.c: 206:             lightContol_BackLight(50);
  7279   0126B6  0E32               	movlw	50
  7280   0126B8  6EE6               	movwf	postinc1,c
  7281   0126BA  EC65  F09E         	call	_lightContol_BackLight	;wreg free
  7282                           
  7283                           ;carFunctions.c: 207:             break;
  7284   0126BE  EF84  F093         	goto	l1493
  7285   0126C2                     l5125:
  7286                           
  7287                           ;carFunctions.c: 209:             lightContol_BackLight(100);
  7288   0126C2  0E64               	movlw	100
  7289   0126C4  6EE6               	movwf	postinc1,c
  7290   0126C6  EC65  F09E         	call	_lightContol_BackLight	;wreg free
  7291                           
  7292                           ;carFunctions.c: 210:             break;
  7293   0126CA  EF84  F093         	goto	l1493
  7294   0126CE                     l5129:
  7295   0126CE  503A               	movf	lightControl_Process@state^0,w,c
  7296   0126D0  6E0B               	movwf	(btemp+10)^0,c
  7297   0126D2  6A0C               	clrf	(btemp+11)^0,c
  7298                           
  7299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7300                           ; Switch size 1, requested type "simple"
  7301                           ; Number of cases is 1, Range of values is 0 to 0
  7302                           ; switch strategies available:
  7303                           ; Name         Instructions Cycles
  7304                           ; simple_byte            4     3 (average)
  7305                           ;	Chosen strategy is simple_byte
  7306   0126D4  500C               	movf	(btemp+11)^0,w,c
  7307   0126D6  0A00               	xorlw	0	; case 0
  7308   0126D8  B4D8               	btfsc	status,2,c
  7309   0126DA  EF71  F093         	goto	l5509
  7310   0126DE  EF84  F093         	goto	l1493
  7311   0126E2                     l5509:
  7312                           
  7313                           ; Switch size 1, requested type "simple"
  7314                           ; Number of cases is 4, Range of values is 0 to 3
  7315                           ; switch strategies available:
  7316                           ; Name         Instructions Cycles
  7317                           ; simple_byte           13     7 (average)
  7318                           ;	Chosen strategy is simple_byte
  7319   0126E2  500B               	movf	(btemp+10)^0,w,c
  7320   0126E4  0A00               	xorlw	0	; case 0
  7321   0126E6  B4D8               	btfsc	status,2,c
  7322   0126E8  EF84  F093         	goto	l1493
  7323   0126EC  0A01               	xorlw	1	; case 1
  7324   0126EE  B4D8               	btfsc	status,2,c
  7325   0126F0  EF4D  F093         	goto	l5121
  7326   0126F4  0A03               	xorlw	3	; case 2
  7327   0126F6  B4D8               	btfsc	status,2,c
  7328   0126F8  EF57  F093         	goto	l5123
  7329   0126FC  0A01               	xorlw	1	; case 3
  7330   0126FE  B4D8               	btfsc	status,2,c
  7331   012700  EF61  F093         	goto	l5125
  7332   012704  EF84  F093         	goto	l1493
  7333   012708                     l1493:
  7334                           
  7335                           ; _lightControl_Process: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 2, argsize = 2, vargsize = 0
  7336   012708  52E5               	movf	postdec1,f,c
  7337   01270A  52E5               	movf	postdec1,f,c
  7338   01270C  0012               	return		;funcret
  7339   01270E                     __end_of_lightControl_Process:
  7340                           	callstack 0
  7341                           
  7342 ;; *************** function _motorControl_Process *****************
  7343 ;; Defined at:
  7344 ;;		line 37 in file "carFunctions.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;  ev              2  [STACK] PTR struct Event_
  7347 ;;		 -> ev(6), 
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;		None
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  1  [STACK] _Bool 
  7352 ;; Registers used:
  7353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7363 ;;Total ram usage:        0 bytes
  7364 ;; Hardware stack levels used: 1
  7365 ;; Hardware stack levels required when called: 13
  7366 ;; This function calls:
  7367 ;;		_lightContol_BackLight
  7368 ;;		_lightContol_FrontLight
  7369 ;;		_motorControl
  7370 ;; This function is called by:
  7371 ;;		_updateCarState
  7372 ;;		_XF_executeOnce
  7373 ;; This function uses a reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text20
  7377   012250                     __ptext20:
  7378                           	callstack 0
  7379   012250                     _motorControl_Process:
  7380                           	callstack 16
  7381   012250                     
  7382                           ;carFunctions.c: 47:     static MotorState state = INIT;;carFunctions.c: 48:     static 
      +                          MotorState oldState = INIT;;carFunctions.c: 51:     switch(state)
  7383   012250  EF98  F091         	goto	l5067
  7384   012254                     l5041:
  7385                           
  7386                           ;carFunctions.c: 54:             if(ev->id == E_INIT){
  7387                           ;stkvar	_ev @ sp[(0)+-2]
  7388   012254  0EFE               	movlw	-2
  7389   012256  CFE3 FFD9          	movff	plusw1,fsr2l
  7390   01225A  0EFF               	movlw	-1
  7391   01225C  CFE3 FFDA          	movff	plusw1,fsr2h
  7392   012260  50DF               	movf	indf2,w,c
  7393   012262  06E8               	decf	wreg,f,c
  7394   012264  A4D8               	btfss	status,2,c
  7395   012266  EF37  F091         	goto	u2781
  7396   01226A  EF39  F091         	goto	u2780
  7397   01226E                     u2781:
  7398   01226E  EFB5  F091         	goto	l5069
  7399   012272                     u2780:
  7400   012272                     l5043:
  7401                           
  7402                           ;carFunctions.c: 55:                 state = OFF;
  7403   012272  0E01               	movlw	1
  7404   012274  6E3E               	movwf	motorControl_Process@state^0,c
  7405   012276  EFB5  F091         	goto	l5069
  7406   01227A                     l5045:
  7407                           
  7408                           ;carFunctions.c: 59:             if(ev->id == E_CONTACT_ON)
  7409                           ;stkvar	_ev @ sp[(0)+-2]
  7410   01227A  0EFE               	movlw	-2
  7411   01227C  CFE3 FFD9          	movff	plusw1,fsr2l
  7412   012280  0EFF               	movlw	-1
  7413   012282  CFE3 FFDA          	movff	plusw1,fsr2h
  7414   012286  50DF               	movf	indf2,w,c
  7415   012288  0A03               	xorlw	3
  7416   01228A  A4D8               	btfss	status,2,c
  7417   01228C  EF4A  F091         	goto	u2791
  7418   012290  EF4C  F091         	goto	u2790
  7419   012294                     u2791:
  7420   012294  EFB5  F091         	goto	l5069
  7421   012298                     u2790:
  7422   012298                     
  7423                           ;carFunctions.c: 60:             {;carFunctions.c: 61:                 state = STANDBY;
  7424   012298  0E04               	movlw	4
  7425   01229A  6E3E               	movwf	motorControl_Process@state^0,c
  7426   01229C  EFB5  F091         	goto	l5069
  7427   0122A0                     l5049:
  7428                           
  7429                           ;carFunctions.c: 66:             if(ev->id == E_CONTACT_OFF)
  7430                           ;stkvar	_ev @ sp[(0)+-2]
  7431   0122A0  0EFE               	movlw	-2
  7432   0122A2  CFE3 FFD9          	movff	plusw1,fsr2l
  7433   0122A6  0EFF               	movlw	-1
  7434   0122A8  CFE3 FFDA          	movff	plusw1,fsr2h
  7435   0122AC  50DF               	movf	indf2,w,c
  7436   0122AE  0A02               	xorlw	2
  7437   0122B0  A4D8               	btfss	status,2,c
  7438   0122B2  EF5D  F091         	goto	u2801
  7439   0122B6  EF5F  F091         	goto	u2800
  7440   0122BA                     u2801:
  7441   0122BA  EF63  F091         	goto	l5053
  7442   0122BE                     u2800:
  7443   0122BE                     
  7444                           ;carFunctions.c: 67:             {;carFunctions.c: 68:                 state = OFF;
  7445   0122BE  0E01               	movlw	1
  7446   0122C0  6E3E               	movwf	motorControl_Process@state^0,c
  7447                           
  7448                           ;carFunctions.c: 69:             }else if(ev->id == E_ACCELERATION_OFF)
  7449   0122C2  EF74  F091         	goto	l5057
  7450   0122C6                     l5053:
  7451                           
  7452                           ;stkvar	_ev @ sp[(0)+-2]
  7453   0122C6  0EFE               	movlw	-2
  7454   0122C8  CFE3 FFD9          	movff	plusw1,fsr2l
  7455   0122CC  0EFF               	movlw	-1
  7456   0122CE  CFE3 FFDA          	movff	plusw1,fsr2h
  7457   0122D2  50DF               	movf	indf2,w,c
  7458   0122D4  0A09               	xorlw	9
  7459   0122D6  A4D8               	btfss	status,2,c
  7460   0122D8  EF70  F091         	goto	u2811
  7461   0122DC  EF72  F091         	goto	u2810
  7462   0122E0                     u2811:
  7463   0122E0  EF74  F091         	goto	l5057
  7464   0122E4                     u2810:
  7465   0122E4                     
  7466                           ;carFunctions.c: 70:             {;carFunctions.c: 71:                 state = STANDBY;
  7467   0122E4  0E04               	movlw	4
  7468   0122E6  6E3E               	movwf	motorControl_Process@state^0,c
  7469   0122E8                     l5057:
  7470                           
  7471                           ;carFunctions.c: 74:             if(ev->id == E_CONTACT_OFF)
  7472                           ;stkvar	_ev @ sp[(0)+-2]
  7473   0122E8  0EFE               	movlw	-2
  7474   0122EA  CFE3 FFD9          	movff	plusw1,fsr2l
  7475   0122EE  0EFF               	movlw	-1
  7476   0122F0  CFE3 FFDA          	movff	plusw1,fsr2h
  7477   0122F4  50DF               	movf	indf2,w,c
  7478   0122F6  0A02               	xorlw	2
  7479   0122F8  A4D8               	btfss	status,2,c
  7480   0122FA  EF81  F091         	goto	u2821
  7481   0122FE  EF83  F091         	goto	u2820
  7482   012302                     u2821:
  7483   012302  EF85  F091         	goto	l5061
  7484   012306                     u2820:
  7485   012306  EF39  F091         	goto	l5043
  7486   01230A                     l5061:
  7487                           
  7488                           ;stkvar	_ev @ sp[(0)+-2]
  7489   01230A  0EFE               	movlw	-2
  7490   01230C  CFE3 FFD9          	movff	plusw1,fsr2l
  7491   012310  0EFF               	movlw	-1
  7492   012312  CFE3 FFDA          	movff	plusw1,fsr2h
  7493   012316  50DF               	movf	indf2,w,c
  7494   012318  0A08               	xorlw	8
  7495   01231A  A4D8               	btfss	status,2,c
  7496   01231C  EF92  F091         	goto	u2831
  7497   012320  EF94  F091         	goto	u2830
  7498   012324                     u2831:
  7499   012324  EFB5  F091         	goto	l5069
  7500   012328                     u2830:
  7501   012328                     
  7502                           ;carFunctions.c: 78:             {;carFunctions.c: 79:                 state = CRUISE;
  7503   012328  0E02               	movlw	2
  7504   01232A  6E3E               	movwf	motorControl_Process@state^0,c
  7505   01232C  EFB5  F091         	goto	l5069
  7506   012330                     l5067:
  7507   012330  503E               	movf	motorControl_Process@state^0,w,c
  7508   012332  6E0B               	movwf	(btemp+10)^0,c
  7509   012334  6A0C               	clrf	(btemp+11)^0,c
  7510                           
  7511                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7512                           ; Switch size 1, requested type "simple"
  7513                           ; Number of cases is 1, Range of values is 0 to 0
  7514                           ; switch strategies available:
  7515                           ; Name         Instructions Cycles
  7516                           ; simple_byte            4     3 (average)
  7517                           ;	Chosen strategy is simple_byte
  7518   012336  500C               	movf	(btemp+11)^0,w,c
  7519   012338  0A00               	xorlw	0	; case 0
  7520   01233A  B4D8               	btfsc	status,2,c
  7521   01233C  EFA2  F091         	goto	l5511
  7522   012340  EFB5  F091         	goto	l5069
  7523   012344                     l5511:
  7524                           
  7525                           ; Switch size 1, requested type "simple"
  7526                           ; Number of cases is 4, Range of values is 0 to 4
  7527                           ; switch strategies available:
  7528                           ; Name         Instructions Cycles
  7529                           ; simple_byte           13     7 (average)
  7530                           ;	Chosen strategy is simple_byte
  7531   012344  500B               	movf	(btemp+10)^0,w,c
  7532   012346  0A00               	xorlw	0	; case 0
  7533   012348  B4D8               	btfsc	status,2,c
  7534   01234A  EF2A  F091         	goto	l5041
  7535   01234E  0A01               	xorlw	1	; case 1
  7536   012350  B4D8               	btfsc	status,2,c
  7537   012352  EF3D  F091         	goto	l5045
  7538   012356  0A03               	xorlw	3	; case 2
  7539   012358  B4D8               	btfsc	status,2,c
  7540   01235A  EF50  F091         	goto	l5049
  7541   01235E  0A06               	xorlw	6	; case 4
  7542   012360  B4D8               	btfsc	status,2,c
  7543   012362  EF74  F091         	goto	l5057
  7544   012366  EFB5  F091         	goto	l5069
  7545   01236A                     l5069:
  7546                           
  7547                           ;carFunctions.c: 85:     if(oldState == state)
  7548   01236A  503E               	movf	motorControl_Process@state^0,w,c
  7549   01236C  183D               	xorwf	motorControl_Process@oldState^0,w,c
  7550   01236E  A4D8               	btfss	status,2,c
  7551   012370  EFBC  F091         	goto	u2841
  7552   012374  EFBE  F091         	goto	u2840
  7553   012378                     u2841:
  7554   012378  EFC0  F091         	goto	l1447
  7555   01237C                     u2840:
  7556   01237C  EFFB  F091         	goto	l1448
  7557   012380                     l1447:
  7558                           
  7559                           ;carFunctions.c: 89:    oldState = state;
  7560   012380  C03E  F03D         	movff	motorControl_Process@state,motorControl_Process@oldState
  7561                           
  7562                           ;carFunctions.c: 90:    switch(state)
  7563   012384  EFDA  F091         	goto	l5081
  7564   012388                     l5073:
  7565                           
  7566                           ;carFunctions.c: 95:             motorControl(0);
  7567   012388  0E00               	movlw	0
  7568   01238A  6EE6               	movwf	postinc1,c
  7569   01238C  EC0B  F09E         	call	_motorControl	;wreg free
  7570                           
  7571                           ;carFunctions.c: 96:             break;
  7572   012390  EFFB  F091         	goto	l1448
  7573   012394                     l5075:
  7574                           
  7575                           ;carFunctions.c: 98:             lightContol_FrontLight(50);
  7576   012394  0E32               	movlw	50
  7577   012396  6EE6               	movwf	postinc1,c
  7578   012398  ECBF  F09E         	call	_lightContol_FrontLight	;wreg free
  7579                           
  7580                           ;carFunctions.c: 99:             lightContol_BackLight(50);
  7581   01239C  0E32               	movlw	50
  7582   01239E  6EE6               	movwf	postinc1,c
  7583   0123A0  EC65  F09E         	call	_lightContol_BackLight	;wreg free
  7584                           
  7585                           ;carFunctions.c: 100:             break;
  7586   0123A4  EFFB  F091         	goto	l1448
  7587   0123A8                     l5077:
  7588                           
  7589                           ;carFunctions.c: 102:            motorControl(10);
  7590   0123A8  0E0A               	movlw	10
  7591   0123AA  6EE6               	movwf	postinc1,c
  7592   0123AC  EC0B  F09E         	call	_motorControl	;wreg free
  7593                           
  7594                           ;carFunctions.c: 103:            break;
  7595   0123B0  EFFB  F091         	goto	l1448
  7596   0123B4                     l5081:
  7597   0123B4  503E               	movf	motorControl_Process@state^0,w,c
  7598   0123B6  6E0B               	movwf	(btemp+10)^0,c
  7599   0123B8  6A0C               	clrf	(btemp+11)^0,c
  7600                           
  7601                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7602                           ; Switch size 1, requested type "simple"
  7603                           ; Number of cases is 1, Range of values is 0 to 0
  7604                           ; switch strategies available:
  7605                           ; Name         Instructions Cycles
  7606                           ; simple_byte            4     3 (average)
  7607                           ;	Chosen strategy is simple_byte
  7608   0123BA  500C               	movf	(btemp+11)^0,w,c
  7609   0123BC  0A00               	xorlw	0	; case 0
  7610   0123BE  B4D8               	btfsc	status,2,c
  7611   0123C0  EFE4  F091         	goto	l5513
  7612   0123C4  EFFB  F091         	goto	l1448
  7613   0123C8                     l5513:
  7614                           
  7615                           ; Switch size 1, requested type "simple"
  7616                           ; Number of cases is 5, Range of values is 0 to 4
  7617                           ; switch strategies available:
  7618                           ; Name         Instructions Cycles
  7619                           ; simple_byte           16     9 (average)
  7620                           ;	Chosen strategy is simple_byte
  7621   0123C8  500B               	movf	(btemp+10)^0,w,c
  7622   0123CA  0A00               	xorlw	0	; case 0
  7623   0123CC  B4D8               	btfsc	status,2,c
  7624   0123CE  EFFB  F091         	goto	l1448
  7625   0123D2  0A01               	xorlw	1	; case 1
  7626   0123D4  B4D8               	btfsc	status,2,c
  7627   0123D6  EFC4  F091         	goto	l5073
  7628   0123DA  0A03               	xorlw	3	; case 2
  7629   0123DC  B4D8               	btfsc	status,2,c
  7630   0123DE  EFCA  F091         	goto	l5075
  7631   0123E2  0A01               	xorlw	1	; case 3
  7632   0123E4  B4D8               	btfsc	status,2,c
  7633   0123E6  EFFB  F091         	goto	l1448
  7634   0123EA  0A07               	xorlw	7	; case 4
  7635   0123EC  B4D8               	btfsc	status,2,c
  7636   0123EE  EFD4  F091         	goto	l5077
  7637   0123F2  EFFB  F091         	goto	l1448
  7638   0123F6                     l1448:
  7639                           
  7640                           ; _motorControl_Process: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 2, argsize = 2, vargsize = 0
  7641   0123F6  52E5               	movf	postdec1,f,c
  7642   0123F8  52E5               	movf	postdec1,f,c
  7643   0123FA  0012               	return		;funcret
  7644   0123FC                     __end_of_motorControl_Process:
  7645                           	callstack 0
  7646                           
  7647 ;; *************** function _motorControl *****************
  7648 ;; Defined at:
  7649 ;;		line 23 in file "carFunctions.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  percent         1  [STACK] unsigned char 
  7652 ;; Auto vars:     Size  Location     Type
  7653 ;;  txMsg          16  [STACK] struct _CAN_TX_MSGOBJ
  7654 ;;  txdata          8  [STACK] unsigned char [8]
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  1  [STACK] void 
  7657 ;; Registers used:
  7658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7668 ;;Total ram usage:        0 bytes
  7669 ;; Hardware stack levels used: 1
  7670 ;; Hardware stack levels required when called: 12
  7671 ;; This function calls:
  7672 ;;		_CanSend
  7673 ;; This function is called by:
  7674 ;;		_motorControl_Process
  7675 ;; This function uses a reentrant model
  7676 ;;
  7677                           
  7678                           	psect	text21
  7679   013C16                     __ptext21:
  7680                           	callstack 0
  7681   013C16                     _motorControl:
  7682                           	callstack 0
  7683                           
  7684                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7685   013C16  0E18               	movlw	24
  7686   013C18  26E1               	addwf	fsr1l,f,c
  7687   013C1A  0E00               	movlw	0
  7688   013C1C  22E2               	addwfc	fsr1h,f,c
  7689   013C1E                     
  7690                           ;carFunctions.c: 24:     static uint8_t lastPercent=0;;carFunctions.c: 25:     CAN_TX_MS
      +                          GOBJ txMsg={0};
  7691   013C1E  EE20  F021         	lfsr	2,motorControl@F6645
  7692                           
  7693                           ;stkvar	_txMsg @ sp[(-24)+0]
  7694   013C22  0E10               	movlw	16
  7695   013C24  6E01               	movwf	btemp^0,c
  7696   013C26  0EE8               	movlw	-24
  7697   013C28                     us230999:
  7698   013C28  CFDE FFE3          	movff	postinc2,plusw1
  7699   013C2C  28E8               	incf	wreg,w,c
  7700   013C2E  2E01               	decfsz	btemp^0,f,c
  7701   013C30  D7FB               	bra	us230999
  7702   013C32                     
  7703                           ;carFunctions.c: 26:     uint8_t txdata[8];;carFunctions.c: 27:         if(lastPercent!=
      +                           percent) {
  7704                           ;stkvar	_percent @ sp[(-24)+-1]
  7705   013C32  0EE7               	movlw	-25
  7706   013C34  50E3               	movf	plusw1,w,c
  7707   013C36  183F               	xorwf	motorControl@lastPercent^0,w,c
  7708   013C38  B4D8               	btfsc	status,2,c
  7709   013C3A  EF21  F09E         	goto	u2311
  7710   013C3E  EF23  F09E         	goto	u2310
  7711   013C42                     u2311:
  7712   013C42  EF60  F09E         	goto	l1425
  7713   013C46                     u2310:
  7714   013C46                     
  7715                           ;carFunctions.c: 28:             lastPercent = percent;
  7716                           ;stkvar	_percent @ sp[(-24)+-1]
  7717   013C46  0EE7               	movlw	-25
  7718   013C48  CFE3 F03F          	movff	plusw1,motorControl@lastPercent
  7719   013C4C                     
  7720                           ;carFunctions.c: 30:             txMsg.bF.id.ID = (0x112);
  7721   013C4C  0E12               	movlw	18
  7722   013C4E  6E09               	movwf	(btemp+8)^0,c
  7723   013C50  0E01               	movlw	1
  7724   013C52  6E0A               	movwf	(btemp+9)^0,c
  7725   013C54  0E00               	movlw	0
  7726   013C56  6E0B               	movwf	(btemp+10)^0,c
  7727   013C58  0E00               	movlw	0
  7728   013C5A  6E0C               	movwf	(btemp+11)^0,c
  7729                           
  7730                           ;stkvar	_txMsg @ sp[(-24)+0]
  7731   013C5C  0EE8               	movlw	-24
  7732   013C5E  C009  FFE3         	movff	btemp+8,plusw1
  7733   013C62  0EE9               	movlw	-23
  7734   013C64  C00A  FFE3         	movff	btemp+9,plusw1
  7735   013C68  0EEA               	movlw	-22
  7736   013C6A  C00B  FFE3         	movff	btemp+10,plusw1
  7737   013C6E  0EEB               	movlw	-21
  7738   013C70  C00C  FFE3         	movff	btemp+11,plusw1
  7739   013C74                     
  7740                           ;carFunctions.c: 31:             txMsg.bF.ctrl.DLC = CAN_DLC_1;
  7741                           ;stkvar	_txMsg @ sp[(-24)+0]
  7742   013C74  0EEE               	movlw	238
  7743   013C76  24E1               	addwf	fsr1l,w,c
  7744   013C78  6ED9               	movwf	fsr2l,c
  7745   013C7A  0EFF               	movlw	255
  7746   013C7C  20E2               	addwfc	fsr1h,w,c
  7747   013C7E  6EDA               	movwf	fsr2h,c
  7748   013C80  50DF               	movf	223,w,c
  7749   013C82  0BF0               	andlw	-16
  7750   013C84  0901               	iorlw	1
  7751   013C86  6EDF               	movwf	223,c
  7752   013C88                     
  7753                           ;carFunctions.c: 32:             txdata[0] = percent;
  7754                           ;stkvar	_percent @ sp[(-24)+-1]
  7755                           ;stkvar	_txdata @ sp[(-24)+16]
  7756   013C88  0EE7               	movlw	-25
  7757   013C8A  CFE3 F001          	movff	plusw1,btemp
  7758   013C8E  0EF8               	movlw	-8
  7759   013C90  C001  FFE3         	movff	btemp,plusw1
  7760   013C94                     
  7761                           ;carFunctions.c: 33:         CanSend(&txMsg,txdata);
  7762                           ;stkvar	_txdata @ sp[(-24)+16]
  7763   013C94  0EF8               	movlw	248
  7764   013C96  24E1               	addwf	fsr1l,w,c
  7765   013C98  6E01               	movwf	btemp^0,c
  7766   013C9A  0EFF               	movlw	255
  7767   013C9C  20E2               	addwfc	fsr1h,w,c
  7768   013C9E  6E02               	movwf	(btemp+1)^0,c
  7769   013CA0  C001  FFE6         	movff	btemp,postinc1
  7770   013CA4  C002  FFE6         	movff	btemp+1,postinc1
  7771                           
  7772                           ;stkvar	_txMsg @ sp[(-26)+0]
  7773   013CA8  0EE6               	movlw	230
  7774   013CAA  24E1               	addwf	fsr1l,w,c
  7775   013CAC  6E01               	movwf	btemp^0,c
  7776   013CAE  0EFF               	movlw	255
  7777   013CB0  20E2               	addwfc	fsr1h,w,c
  7778   013CB2  6E02               	movwf	(btemp+1)^0,c
  7779   013CB4  C001  FFE6         	movff	btemp,postinc1
  7780   013CB8  C002  FFE6         	movff	btemp+1,postinc1
  7781   013CBC  EC6D  F09F         	call	_CanSend	;wreg free
  7782   013CC0                     l1425:
  7783                           
  7784                           ; _motorControl: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  7785   013CC0  0EE7               	movlw	231
  7786   013CC2  26E1               	addwf	fsr1l,f,c
  7787   013CC4  0EFF               	movlw	255
  7788   013CC6  22E2               	addwfc	fsr1h,f,c
  7789   013CC8  0012               	return		;funcret
  7790   013CCA                     __end_of_motorControl:
  7791                           	callstack 0
  7792                           
  7793 ;; *************** function _lightContol_FrontLight *****************
  7794 ;; Defined at:
  7795 ;;		line 115 in file "carFunctions.c"
  7796 ;; Parameters:    Size  Location     Type
  7797 ;;  light           1  [STACK] unsigned char 
  7798 ;; Auto vars:     Size  Location     Type
  7799 ;;  txMsg          16  [STACK] struct _CAN_TX_MSGOBJ
  7800 ;;  txdata          8  [STACK] unsigned char [8]
  7801 ;; Return value:  Size  Location     Type
  7802 ;;                  1  [STACK] void 
  7803 ;; Registers used:
  7804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7805 ;; Tracked objects:
  7806 ;;		On entry : 0/0
  7807 ;;		On exit  : 0/0
  7808 ;;		Unchanged: 0/0
  7809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7814 ;;Total ram usage:        0 bytes
  7815 ;; Hardware stack levels used: 1
  7816 ;; Hardware stack levels required when called: 12
  7817 ;; This function calls:
  7818 ;;		_CanSend
  7819 ;; This function is called by:
  7820 ;;		_motorControl_Process
  7821 ;;		_lightControl_Process
  7822 ;; This function uses a reentrant model
  7823 ;;
  7824                           
  7825                           	psect	text22
  7826   013D7E                     __ptext22:
  7827                           	callstack 0
  7828   013D7E                     _lightContol_FrontLight:
  7829                           	callstack 0
  7830                           
  7831                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7832   013D7E  0E18               	movlw	24
  7833   013D80  26E1               	addwf	fsr1l,f,c
  7834   013D82  0E00               	movlw	0
  7835   013D84  22E2               	addwfc	fsr1h,f,c
  7836   013D86                     
  7837                           ;carFunctions.c: 115: void lightContol_FrontLight(uint8_t light);carFunctions.c: 116: {;
      +                          carFunctions.c: 118: static uint8_t lastLight=0;;carFunctions.c: 119: CAN_TX_MSGOBJ txMs
      +                          g={0};
  7838   013D86  EE20  F08B         	lfsr	2,lightContol_FrontLight@F6662
  7839                           
  7840                           ;stkvar	_txMsg @ sp[(-24)+0]
  7841   013D8A  0E10               	movlw	16
  7842   013D8C  6E01               	movwf	btemp^0,c
  7843   013D8E  0EE8               	movlw	-24
  7844   013D90                     us232999:
  7845   013D90  CFDE FFE3          	movff	postinc2,plusw1
  7846   013D94  28E8               	incf	wreg,w,c
  7847   013D96  2E01               	decfsz	btemp^0,f,c
  7848   013D98  D7FB               	bra	us232999
  7849   013D9A                     
  7850                           ;carFunctions.c: 120: uint8_t txdata[8];;carFunctions.c: 121:     if(lastLight!= light) 
      +                          {
  7851                           ;stkvar	_light @ sp[(-24)+-1]
  7852   013D9A  0EE7               	movlw	-25
  7853   013D9C  50E3               	movf	plusw1,w,c
  7854   013D9E  183C               	xorwf	lightContol_FrontLight@lastLight^0,w,c
  7855   013DA0  B4D8               	btfsc	status,2,c
  7856   013DA2  EFD5  F09E         	goto	u2331
  7857   013DA6  EFD7  F09E         	goto	u2330
  7858   013DAA                     u2331:
  7859   013DAA  EF11  F09F         	goto	l1464
  7860   013DAE                     u2330:
  7861   013DAE                     
  7862                           ;carFunctions.c: 122:         lastLight = light;
  7863                           ;stkvar	_light @ sp[(-24)+-1]
  7864   013DAE  0EE7               	movlw	-25
  7865   013DB0  CFE3 F03C          	movff	plusw1,lightContol_FrontLight@lastLight
  7866   013DB4                     
  7867                           ;carFunctions.c: 124:         txMsg.bF.id.ID = (0x19);
  7868   013DB4  0E19               	movlw	25
  7869   013DB6  6E09               	movwf	(btemp+8)^0,c
  7870   013DB8  6A0A               	clrf	(btemp+9)^0,c
  7871   013DBA  6A0B               	clrf	(btemp+10)^0,c
  7872   013DBC  6A0C               	clrf	(btemp+11)^0,c
  7873                           
  7874                           ;stkvar	_txMsg @ sp[(-24)+0]
  7875   013DBE  0EE8               	movlw	-24
  7876   013DC0  C009  FFE3         	movff	btemp+8,plusw1
  7877   013DC4  0EE9               	movlw	-23
  7878   013DC6  C00A  FFE3         	movff	btemp+9,plusw1
  7879   013DCA  0EEA               	movlw	-22
  7880   013DCC  C00B  FFE3         	movff	btemp+10,plusw1
  7881   013DD0  0EEB               	movlw	-21
  7882   013DD2  C00C  FFE3         	movff	btemp+11,plusw1
  7883   013DD6                     
  7884                           ;carFunctions.c: 125:         txMsg.bF.ctrl.DLC = CAN_DLC_1;
  7885                           ;stkvar	_txMsg @ sp[(-24)+0]
  7886   013DD6  0EEE               	movlw	238
  7887   013DD8  24E1               	addwf	fsr1l,w,c
  7888   013DDA  6ED9               	movwf	fsr2l,c
  7889   013DDC  0EFF               	movlw	255
  7890   013DDE  20E2               	addwfc	fsr1h,w,c
  7891   013DE0  6EDA               	movwf	fsr2h,c
  7892   013DE2  50DF               	movf	223,w,c
  7893   013DE4  0BF0               	andlw	-16
  7894   013DE6  0901               	iorlw	1
  7895   013DE8  6EDF               	movwf	223,c
  7896   013DEA                     
  7897                           ;carFunctions.c: 126:         txdata[0] = light;
  7898                           ;stkvar	_light @ sp[(-24)+-1]
  7899                           ;stkvar	_txdata @ sp[(-24)+16]
  7900   013DEA  0EE7               	movlw	-25
  7901   013DEC  CFE3 F001          	movff	plusw1,btemp
  7902   013DF0  0EF8               	movlw	-8
  7903   013DF2  C001  FFE3         	movff	btemp,plusw1
  7904   013DF6                     
  7905                           ;carFunctions.c: 127:         CanSend(&txMsg,txdata);
  7906                           ;stkvar	_txdata @ sp[(-24)+16]
  7907   013DF6  0EF8               	movlw	248
  7908   013DF8  24E1               	addwf	fsr1l,w,c
  7909   013DFA  6E01               	movwf	btemp^0,c
  7910   013DFC  0EFF               	movlw	255
  7911   013DFE  20E2               	addwfc	fsr1h,w,c
  7912   013E00  6E02               	movwf	(btemp+1)^0,c
  7913   013E02  C001  FFE6         	movff	btemp,postinc1
  7914   013E06  C002  FFE6         	movff	btemp+1,postinc1
  7915                           
  7916                           ;stkvar	_txMsg @ sp[(-26)+0]
  7917   013E0A  0EE6               	movlw	230
  7918   013E0C  24E1               	addwf	fsr1l,w,c
  7919   013E0E  6E01               	movwf	btemp^0,c
  7920   013E10  0EFF               	movlw	255
  7921   013E12  20E2               	addwfc	fsr1h,w,c
  7922   013E14  6E02               	movwf	(btemp+1)^0,c
  7923   013E16  C001  FFE6         	movff	btemp,postinc1
  7924   013E1A  C002  FFE6         	movff	btemp+1,postinc1
  7925   013E1E  EC6D  F09F         	call	_CanSend	;wreg free
  7926   013E22                     l1464:
  7927                           
  7928                           ; _lightContol_FrontLight: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 1, argsize = 1, vargsize = 0
  7929   013E22  0EE7               	movlw	231
  7930   013E24  26E1               	addwf	fsr1l,f,c
  7931   013E26  0EFF               	movlw	255
  7932   013E28  22E2               	addwfc	fsr1h,f,c
  7933   013E2A  0012               	return		;funcret
  7934   013E2C                     __end_of_lightContol_FrontLight:
  7935                           	callstack 0
  7936                           
  7937 ;; *************** function _lightContol_BackLight *****************
  7938 ;; Defined at:
  7939 ;;		line 130 in file "carFunctions.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;  light           1  [STACK] unsigned char 
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;  txMsg          16  [STACK] struct _CAN_TX_MSGOBJ
  7944 ;;  txdata          8  [STACK] unsigned char [8]
  7945 ;; Return value:  Size  Location     Type
  7946 ;;                  1  [STACK] void 
  7947 ;; Registers used:
  7948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7958 ;;Total ram usage:        0 bytes
  7959 ;; Hardware stack levels used: 1
  7960 ;; Hardware stack levels required when called: 12
  7961 ;; This function calls:
  7962 ;;		_CanSend
  7963 ;; This function is called by:
  7964 ;;		_motorControl_Process
  7965 ;;		_lightControl_Process
  7966 ;; This function uses a reentrant model
  7967 ;;
  7968                           
  7969                           	psect	text23
  7970   013CCA                     __ptext23:
  7971                           	callstack 0
  7972   013CCA                     _lightContol_BackLight:
  7973                           	callstack 0
  7974                           
  7975                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7976   013CCA  0E18               	movlw	24
  7977   013CCC  26E1               	addwf	fsr1l,f,c
  7978   013CCE  0E00               	movlw	0
  7979   013CD0  22E2               	addwfc	fsr1h,f,c
  7980   013CD2                     
  7981                           ;carFunctions.c: 130: void lightContol_BackLight(uint8_t light);carFunctions.c: 131: {;c
      +                          arFunctions.c: 132:     static uint8_t lastLight=0;;carFunctions.c: 133:     CAN_TX_MSGO
      +                          BJ txMsg={0};
  7982   013CD2  EE20  F07B         	lfsr	2,lightContol_BackLight@F6668
  7983                           
  7984                           ;stkvar	_txMsg @ sp[(-24)+0]
  7985   013CD6  0E10               	movlw	16
  7986   013CD8  6E01               	movwf	btemp^0,c
  7987   013CDA  0EE8               	movlw	-24
  7988   013CDC                     us234999:
  7989   013CDC  CFDE FFE3          	movff	postinc2,plusw1
  7990   013CE0  28E8               	incf	wreg,w,c
  7991   013CE2  2E01               	decfsz	btemp^0,f,c
  7992   013CE4  D7FB               	bra	us234999
  7993   013CE6                     
  7994                           ;carFunctions.c: 134:     uint8_t txdata[8];;carFunctions.c: 135:     if(lastLight!= lig
      +                          ht) {
  7995                           ;stkvar	_light @ sp[(-24)+-1]
  7996   013CE6  0EE7               	movlw	-25
  7997   013CE8  50E3               	movf	plusw1,w,c
  7998   013CEA  183B               	xorwf	lightContol_BackLight@lastLight^0,w,c
  7999   013CEC  B4D8               	btfsc	status,2,c
  8000   013CEE  EF7B  F09E         	goto	u2351
  8001   013CF2  EF7D  F09E         	goto	u2350
  8002   013CF6                     u2351:
  8003   013CF6  EFBA  F09E         	goto	l1472
  8004   013CFA                     u2350:
  8005   013CFA                     
  8006                           ;carFunctions.c: 136:         lastLight = light;
  8007                           ;stkvar	_light @ sp[(-24)+-1]
  8008   013CFA  0EE7               	movlw	-25
  8009   013CFC  CFE3 F03B          	movff	plusw1,lightContol_BackLight@lastLight
  8010   013D00                     
  8011                           ;carFunctions.c: 138:         txMsg.bF.id.ID = (0x119);
  8012   013D00  0E19               	movlw	25
  8013   013D02  6E09               	movwf	(btemp+8)^0,c
  8014   013D04  0E01               	movlw	1
  8015   013D06  6E0A               	movwf	(btemp+9)^0,c
  8016   013D08  0E00               	movlw	0
  8017   013D0A  6E0B               	movwf	(btemp+10)^0,c
  8018   013D0C  0E00               	movlw	0
  8019   013D0E  6E0C               	movwf	(btemp+11)^0,c
  8020                           
  8021                           ;stkvar	_txMsg @ sp[(-24)+0]
  8022   013D10  0EE8               	movlw	-24
  8023   013D12  C009  FFE3         	movff	btemp+8,plusw1
  8024   013D16  0EE9               	movlw	-23
  8025   013D18  C00A  FFE3         	movff	btemp+9,plusw1
  8026   013D1C  0EEA               	movlw	-22
  8027   013D1E  C00B  FFE3         	movff	btemp+10,plusw1
  8028   013D22  0EEB               	movlw	-21
  8029   013D24  C00C  FFE3         	movff	btemp+11,plusw1
  8030   013D28                     
  8031                           ;carFunctions.c: 139:         txMsg.bF.ctrl.DLC = CAN_DLC_1;
  8032                           ;stkvar	_txMsg @ sp[(-24)+0]
  8033   013D28  0EEE               	movlw	238
  8034   013D2A  24E1               	addwf	fsr1l,w,c
  8035   013D2C  6ED9               	movwf	fsr2l,c
  8036   013D2E  0EFF               	movlw	255
  8037   013D30  20E2               	addwfc	fsr1h,w,c
  8038   013D32  6EDA               	movwf	fsr2h,c
  8039   013D34  50DF               	movf	223,w,c
  8040   013D36  0BF0               	andlw	-16
  8041   013D38  0901               	iorlw	1
  8042   013D3A  6EDF               	movwf	223,c
  8043   013D3C                     
  8044                           ;carFunctions.c: 140:         txdata[0] = light;
  8045                           ;stkvar	_light @ sp[(-24)+-1]
  8046                           ;stkvar	_txdata @ sp[(-24)+16]
  8047   013D3C  0EE7               	movlw	-25
  8048   013D3E  CFE3 F001          	movff	plusw1,btemp
  8049   013D42  0EF8               	movlw	-8
  8050   013D44  C001  FFE3         	movff	btemp,plusw1
  8051   013D48                     
  8052                           ;carFunctions.c: 141:         CanSend(&txMsg,txdata);
  8053                           ;stkvar	_txdata @ sp[(-24)+16]
  8054   013D48  0EF8               	movlw	248
  8055   013D4A  24E1               	addwf	fsr1l,w,c
  8056   013D4C  6E01               	movwf	btemp^0,c
  8057   013D4E  0EFF               	movlw	255
  8058   013D50  20E2               	addwfc	fsr1h,w,c
  8059   013D52  6E02               	movwf	(btemp+1)^0,c
  8060   013D54  C001  FFE6         	movff	btemp,postinc1
  8061   013D58  C002  FFE6         	movff	btemp+1,postinc1
  8062                           
  8063                           ;stkvar	_txMsg @ sp[(-26)+0]
  8064   013D5C  0EE6               	movlw	230
  8065   013D5E  24E1               	addwf	fsr1l,w,c
  8066   013D60  6E01               	movwf	btemp^0,c
  8067   013D62  0EFF               	movlw	255
  8068   013D64  20E2               	addwfc	fsr1h,w,c
  8069   013D66  6E02               	movwf	(btemp+1)^0,c
  8070   013D68  C001  FFE6         	movff	btemp,postinc1
  8071   013D6C  C002  FFE6         	movff	btemp+1,postinc1
  8072   013D70  EC6D  F09F         	call	_CanSend	;wreg free
  8073   013D74                     l1472:
  8074                           
  8075                           ; _lightContol_BackLight: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  8076   013D74  0EE7               	movlw	231
  8077   013D76  26E1               	addwf	fsr1l,f,c
  8078   013D78  0EFF               	movlw	255
  8079   013D7A  22E2               	addwfc	fsr1h,f,c
  8080   013D7C  0012               	return		;funcret
  8081   013D7E                     __end_of_lightContol_BackLight:
  8082                           	callstack 0
  8083                           
  8084 ;; *************** function _CanSend *****************
  8085 ;; Defined at:
  8086 ;;		line 217 in file "can/can.c"
  8087 ;; Parameters:    Size  Location     Type
  8088 ;;  txObj           2  [STACK] PTR struct _CAN_TX_MSGOB
  8089 ;;		 -> txMsg(16), 
  8090 ;;  txd             2  [STACK] PTR unsigned char 
  8091 ;;		 -> txdata(8), txdata(8), txdata(8), 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;  txFlags         1  [STACK] enum E5583
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  1  [STACK] char 
  8096 ;; Registers used:
  8097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8107 ;;Total ram usage:        0 bytes
  8108 ;; Hardware stack levels used: 1
  8109 ;; Hardware stack levels required when called: 11
  8110 ;; This function calls:
  8111 ;;		_DRV_CANFDSPI_TransmitChannelEventGet
  8112 ;;		_DRV_CANFDSPI_TransmitChannelLoad
  8113 ;; This function is called by:
  8114 ;;		_motorControl
  8115 ;;		_lightContol_FrontLight
  8116 ;;		_lightContol_BackLight
  8117 ;; This function uses a reentrant model
  8118 ;;
  8119                           
  8120                           	psect	text24
  8121   013EDA                     __ptext24:
  8122                           	callstack 0
  8123   013EDA                     _CanSend:
  8124                           	callstack 0
  8125                           
  8126                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8127   013EDA  52E6               	movf	postinc1,f,c
  8128   013EDC                     
  8129                           ;can/can.c: 217: int8_t CanSend(CAN_TX_MSGOBJ * txObj, uint8_t * txd);can/can.c: 218: {;
      +                          can/can.c: 219:     txObj->bF.ctrl.SEQ = 1;
  8130                           ;stkvar	_txObj @ sp[(-1)+-2]
  8131   013EDC  0EFD               	movlw	-3
  8132   013EDE  CFE3 F00B          	movff	plusw1,btemp+10
  8133   013EE2  0EFE               	movlw	-2
  8134   013EE4  CFE3 F00C          	movff	plusw1,btemp+11
  8135   013EE8  0E08               	movlw	8
  8136   013EEA  240B               	addwf	(btemp+10)^0,w,c
  8137   013EEC  6ED9               	movwf	fsr2l,c
  8138   013EEE  0E00               	movlw	0
  8139   013EF0  200C               	addwfc	(btemp+11)^0,w,c
  8140   013EF2  6EDA               	movwf	fsr2h,c
  8141   013EF4  0E01               	movlw	1
  8142   013EF6  6EDE               	movwf	postinc2,c
  8143   013EF8  0E00               	movlw	0
  8144   013EFA  6EDE               	movwf	postinc2,c
  8145   013EFC  0E00               	movlw	0
  8146   013EFE  6EDE               	movwf	postinc2,c
  8147   013F00  0E00               	movlw	0
  8148   013F02  6EDD               	movwf	postdec2,c
  8149   013F04                     
  8150                           ;can/can.c: 221:     CAN_TX_FIFO_EVENT txFlags;;can/can.c: 222:     DRV_CANFDSPI_Transmi
      +                          tChannelEventGet(CAN_FIFO_CH1,&txFlags);
  8151                           ;stkvar	_txFlags @ sp[(-1)+0]
  8152   013F04  0EFF               	movlw	255
  8153   013F06  24E1               	addwf	fsr1l,w,c
  8154   013F08  6E01               	movwf	btemp^0,c
  8155   013F0A  0EFF               	movlw	255
  8156   013F0C  20E2               	addwfc	fsr1h,w,c
  8157   013F0E  6E02               	movwf	(btemp+1)^0,c
  8158   013F10  C001  FFE6         	movff	btemp,postinc1
  8159   013F14  C002  FFE6         	movff	btemp+1,postinc1
  8160   013F18  0E01               	movlw	1
  8161   013F1A  6EE6               	movwf	postinc1,c
  8162   013F1C  EC14  F0A0         	call	_DRV_CANFDSPI_TransmitChannelEventGet	;wreg free
  8163   013F20                     
  8164                           ;can/can.c: 223:     if(txFlags & CAN_TX_FIFO_NOT_FULL_EVENT)
  8165                           ;stkvar	_txFlags @ sp[(-1)+0]
  8166   013F20  0EFF               	movlw	-1
  8167   013F22  A0E3               	btfss	plusw1,0,c
  8168   013F24  EF96  F09F         	goto	u1981
  8169   013F28  EF98  F09F         	goto	u1980
  8170   013F2C                     u1981:
  8171   013F2C  EFBD  F09F         	goto	l158
  8172   013F30                     u1980:
  8173   013F30                     
  8174                           ;can/can.c: 224:     {;can/can.c: 225:       DRV_CANFDSPI_TransmitChannelLoad(CAN_FIFO_C
      +                          H1,txObj,txd,txObj->bF.ctrl.DLC,1);
  8175   013F30  0E01               	movlw	1
  8176   013F32  6EE6               	movwf	postinc1,c
  8177                           
  8178                           ;stkvar	_txObj @ sp[(-2)+-2]
  8179   013F34  0EFC               	movlw	-4
  8180   013F36  CFE3 F00B          	movff	plusw1,btemp+10
  8181   013F3A  0EFD               	movlw	-3
  8182   013F3C  CFE3 F00C          	movff	plusw1,btemp+11
  8183   013F40  0E06               	movlw	6
  8184   013F42  240B               	addwf	(btemp+10)^0,w,c
  8185   013F44  6ED9               	movwf	fsr2l,c
  8186   013F46  0E00               	movlw	0
  8187   013F48  200C               	addwfc	(btemp+11)^0,w,c
  8188   013F4A  6EDA               	movwf	fsr2h,c
  8189   013F4C  50DF               	movf	223,w,c
  8190   013F4E  0B0F               	andlw	15
  8191   013F50  6E0C               	movwf	(btemp+11)^0,c
  8192   013F52  C00C  FFE6         	movff	btemp+11,postinc1
  8193   013F56  0E00               	movlw	0
  8194   013F58  6EE6               	movwf	postinc1,c
  8195   013F5A  6EE6               	movwf	postinc1,c
  8196   013F5C  6EE6               	movwf	postinc1,c
  8197                           
  8198                           ;stkvar	_txd @ sp[(-6)+-4]
  8199   013F5E  0EF6               	movlw	-10
  8200   013F60  CFE3 FFE6          	movff	plusw1,postinc1
  8201   013F64  CFE3 FFE6          	movff	plusw1,postinc1
  8202                           
  8203                           ;stkvar	_txObj @ sp[(-8)+-2]
  8204   013F68  0EF6               	movlw	-10
  8205   013F6A  CFE3 FFE6          	movff	plusw1,postinc1
  8206   013F6E  CFE3 FFE6          	movff	plusw1,postinc1
  8207   013F72  0E01               	movlw	1
  8208   013F74  6EE6               	movwf	postinc1,c
  8209   013F76  EC00  F080         	call	_DRV_CANFDSPI_TransmitChannelLoad	;wreg free
  8210   013F7A                     l158:
  8211                           
  8212                           ; _CanSend: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  8213   013F7A  0EFB               	movlw	251
  8214   013F7C  26E1               	addwf	fsr1l,f,c
  8215   013F7E  0EFF               	movlw	255
  8216   013F80  22E2               	addwfc	fsr1h,f,c
  8217   013F82  0012               	return		;funcret
  8218   013F84                     __end_of_CanSend:
  8219                           	callstack 0
  8220                           
  8221 ;; *************** function _DRV_CANFDSPI_TransmitChannelLoad *****************
  8222 ;; Defined at:
  8223 ;;		line 706 in file "can/can.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;  channel         1  [STACK] enum E5290
  8226 ;;  txObj           2  [STACK] PTR struct _CAN_TX_MSGOB
  8227 ;;		 -> txMsg(16), 
  8228 ;;  txd             2  [STACK] PTR unsigned char 
  8229 ;;		 -> txdata(8), txdata(8), txdata(8), 
  8230 ;;  txdNumBytes     4  [STACK] unsigned long 
  8231 ;;  flush           1  [STACK] _Bool 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;  temp32          4  [STACK] unsigned long 
  8234 ;;  txBuffer       76  [STACK] unsigned char [76]
  8235 ;;  fifoReg        12  [STACK] unsigned long [3]
  8236 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
  8237 ;;  a               4  [STACK] unsigned long 
  8238 ;;  ciFifoUa        4  [STACK] struct _REG_CiFIFOUA
  8239 ;;  dataBytesInO    4  [STACK] unsigned long 
  8240 ;;  ciFifoSta       4  [STACK] struct _REG_CiFIFOSTA
  8241 ;;  n               2  [STACK] unsigned short 
  8242 ;;  spiTransferE    1  [STACK] char 
  8243 ;;  i               1  [STACK] unsigned char 
  8244 ;;  j               1  [STACK] unsigned char 
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  1  [STACK] char 
  8247 ;; Registers used:
  8248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8258 ;;Total ram usage:        0 bytes
  8259 ;; Hardware stack levels used: 1
  8260 ;; Hardware stack levels required when called: 10
  8261 ;; This function calls:
  8262 ;;		_DRV_CANFDSPI_DlcToDataBytes
  8263 ;;		_DRV_CANFDSPI_ReadWordArray
  8264 ;;		_DRV_CANFDSPI_TransmitChannelUpdate
  8265 ;;		_DRV_CANFDSPI_WriteByteArray
  8266 ;; This function is called by:
  8267 ;;		_CanSend
  8268 ;; This function uses a reentrant model
  8269 ;;
  8270                           
  8271                           	psect	text25
  8272   010000                     __ptext25:
  8273                           	callstack 0
  8274   010000                     _DRV_CANFDSPI_TransmitChannelLoad:
  8275                           	callstack 0
  8276                           
  8277                           ; autosize = 114, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10
      +                           vargsize = 0, retsize = 0 argfudge = 0
  8278   010000  0E72               	movlw	114
  8279   010002  26E1               	addwf	fsr1l,f,c
  8280   010004  0E00               	movlw	0
  8281   010006  22E2               	addwfc	fsr1h,f,c
  8282   010008                     
  8283                           ;can/can.c: 719:     a = 0x050 + (channel * (3*4));
  8284                           ;stkvar	_channel @ sp[(-114)+-1]
  8285   010008  0E8D               	movlw	-115
  8286   01000A  50E3               	movf	plusw1,w,c
  8287   01000C  0D0C               	mullw	12
  8288   01000E  0E50               	movlw	80
  8289   010010  26F3               	addwf	243,f,c
  8290   010012  0E00               	movlw	0
  8291   010014  22F4               	addwfc	244,f,c
  8292                           
  8293                           ;stkvar	_a @ sp[(-114)+97]
  8294   010016  0EEF               	movlw	-17
  8295   010018  CFF3 FFE3          	movff	prodl,plusw1
  8296   01001C  0EF0               	movlw	-16
  8297   01001E  CFF4 FFE3          	movff	prodh,plusw1
  8298   010022  0EF1               	movlw	-15
  8299   010024  6AE3               	clrf	plusw1,c
  8300   010026  0EF2               	movlw	-14
  8301   010028  6AE3               	clrf	plusw1,c
  8302   01002A                     
  8303                           ;can/can.c: 721:     spiTransferError = DRV_CANFDSPI_ReadWordArray( (uint16_t)a, fifoReg
      +                          , 3);
  8304   01002A  0E03               	movlw	3
  8305   01002C  6EE6               	movwf	postinc1,c
  8306   01002E  0E00               	movlw	0
  8307   010030  6EE6               	movwf	postinc1,c
  8308                           
  8309                           ;stkvar	_fifoReg @ sp[(-116)+80]
  8310   010032  0EDC               	movlw	220
  8311   010034  24E1               	addwf	fsr1l,w,c
  8312   010036  6E01               	movwf	btemp^0,c
  8313   010038  0EFF               	movlw	255
  8314   01003A  20E2               	addwfc	fsr1h,w,c
  8315   01003C  6E02               	movwf	(btemp+1)^0,c
  8316   01003E  C001  FFE6         	movff	btemp,postinc1
  8317   010042  C002  FFE6         	movff	btemp+1,postinc1
  8318                           
  8319                           ;stkvar	_a @ sp[(-118)+97]
  8320   010046  0EEB               	movlw	-21
  8321   010048  CFE3 FFE6          	movff	plusw1,postinc1
  8322   01004C  CFE3 FFE6          	movff	plusw1,postinc1
  8323   010050  EC59  F08A         	call	_DRV_CANFDSPI_ReadWordArray	;wreg free
  8324                           
  8325                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  8326   010054  0EFD               	movlw	-3
  8327   010056  C001  FFE3         	movff	btemp,plusw1
  8328   01005A                     
  8329                           ;can/can.c: 722:     if (spiTransferError) {
  8330                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  8331   01005A  0EFD               	movlw	-3
  8332   01005C  50E3               	movf	plusw1,w,c
  8333   01005E  B4D8               	btfsc	status,2,c
  8334   010060  EF34  F080         	goto	u1691
  8335   010064  EF36  F080         	goto	u1690
  8336   010068                     u1691:
  8337   010068  EF3A  F080         	goto	l4097
  8338   01006C                     u1690:
  8339   01006C                     
  8340                           ;can/can.c: 723:         return -1;
  8341   01006C  0EFF               	movlw	255
  8342   01006E  6E01               	movwf	btemp^0,c
  8343   010070  EFA1  F083         	goto	l264
  8344   010074                     l4097:
  8345                           
  8346                           ;can/can.c: 727:     ciFifoCon.word = fifoReg[0];
  8347                           ;stkvar	_fifoReg @ sp[(-114)+80]
  8348   010074  0EDE               	movlw	-34
  8349   010076  CFE3 F009          	movff	plusw1,btemp+8
  8350   01007A  0EDF               	movlw	-33
  8351   01007C  CFE3 F00A          	movff	plusw1,btemp+9
  8352   010080  0EE0               	movlw	-32
  8353   010082  CFE3 F00B          	movff	plusw1,btemp+10
  8354   010086  0EE1               	movlw	-31
  8355   010088  CFE3 F00C          	movff	plusw1,btemp+11
  8356                           
  8357                           ;stkvar	_ciFifoCon @ sp[(-114)+92]
  8358   01008C  0EEA               	movlw	-22
  8359   01008E  C009  FFE3         	movff	btemp+8,plusw1
  8360   010092  0EEB               	movlw	-21
  8361   010094  C00A  FFE3         	movff	btemp+9,plusw1
  8362   010098  0EEC               	movlw	-20
  8363   01009A  C00B  FFE3         	movff	btemp+10,plusw1
  8364   01009E  0EED               	movlw	-19
  8365   0100A0  C00C  FFE3         	movff	btemp+11,plusw1
  8366   0100A4                     
  8367                           ;can/can.c: 728:     if (!ciFifoCon.txBF.TxEnable) {
  8368                           ;stkvar	_ciFifoCon @ sp[(-114)+92]
  8369   0100A4  50E1               	movf	fsr1l,w,c
  8370   0100A6  0FEA               	addlw	-22
  8371   0100A8  6ED9               	movwf	fsr2l,c
  8372   0100AA  50E2               	movf	fsr1h,w,c
  8373   0100AC  6EDA               	movwf	fsr2h,c
  8374   0100AE  0EFF               	movlw	255
  8375   0100B0  22DA               	addwfc	fsr2h,f,c
  8376   0100B2  BEDF               	btfsc	indf2,7,c
  8377   0100B4  EF5E  F080         	goto	u1701
  8378   0100B8  EF60  F080         	goto	u1700
  8379   0100BC                     u1701:
  8380   0100BC  EF64  F080         	goto	l4105
  8381   0100C0                     u1700:
  8382   0100C0                     
  8383                           ;can/can.c: 729:         return -2;
  8384   0100C0  0EFE               	movlw	254
  8385   0100C2  6E01               	movwf	btemp^0,c
  8386   0100C4  EFA1  F083         	goto	l264
  8387   0100C8                     l4105:
  8388                           
  8389                           ;can/can.c: 733:     dataBytesInObject = DRV_CANFDSPI_DlcToDataBytes((CAN_DLC) txObj->bF
      +                          .ctrl.DLC);
  8390                           ;stkvar	_txObj @ sp[(-114)+-3]
  8391   0100C8  0E8B               	movlw	-117
  8392   0100CA  CFE3 F00B          	movff	plusw1,btemp+10
  8393   0100CE  0E8C               	movlw	-116
  8394   0100D0  CFE3 F00C          	movff	plusw1,btemp+11
  8395   0100D4  0E06               	movlw	6
  8396   0100D6  240B               	addwf	(btemp+10)^0,w,c
  8397   0100D8  6ED9               	movwf	fsr2l,c
  8398   0100DA  0E00               	movlw	0
  8399   0100DC  200C               	addwfc	(btemp+11)^0,w,c
  8400   0100DE  6EDA               	movwf	fsr2h,c
  8401   0100E0  50DF               	movf	223,w,c
  8402   0100E2  0B0F               	andlw	15
  8403   0100E4  6EE6               	movwf	postinc1,c
  8404   0100E6  EC39  F090         	call	_DRV_CANFDSPI_DlcToDataBytes	;wreg free
  8405                           
  8406                           ;stkvar	_dataBytesInObject @ sp[(-114)+105]
  8407   0100EA  0EF7               	movlw	-9
  8408   0100EC  C001  FFE3         	movff	btemp,plusw1
  8409   0100F0  0EF8               	movlw	-8
  8410   0100F2  C002  FFE3         	movff	btemp+1,plusw1
  8411   0100F6  0EF9               	movlw	-7
  8412   0100F8  C003  FFE3         	movff	btemp+2,plusw1
  8413   0100FC  0EFA               	movlw	-6
  8414   0100FE  C004  FFE3         	movff	btemp+3,plusw1
  8415   010102                     
  8416                           ;can/can.c: 734:     if (dataBytesInObject < txdNumBytes) {
  8417                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  8418                           ;stkvar	_dataBytesInObject @ sp[(-114)+105]
  8419   010102  50E1               	movf	fsr1l,w,c
  8420   010104  0FF7               	addlw	-9
  8421   010106  6ED9               	movwf	fsr2l,c
  8422   010108  50E2               	movf	fsr1h,w,c
  8423   01010A  6EDA               	movwf	fsr2h,c
  8424   01010C  0EFF               	movlw	255
  8425   01010E  22DA               	addwfc	fsr2h,f,c
  8426   010110  0E85               	movlw	-123
  8427   010112  50E3               	movf	plusw1,w,c
  8428   010114  5CDE               	subwf	postinc2,w,c
  8429   010116  0E86               	movlw	-122
  8430   010118  50E3               	movf	plusw1,w,c
  8431   01011A  58DE               	subwfb	postinc2,w,c
  8432   01011C  0E87               	movlw	-121
  8433   01011E  50E3               	movf	plusw1,w,c
  8434   010120  58DE               	subwfb	postinc2,w,c
  8435   010122  0E88               	movlw	-120
  8436   010124  50E3               	movf	plusw1,w,c
  8437   010126  58DE               	subwfb	postinc2,w,c
  8438   010128  B0D8               	btfsc	status,0,c
  8439   01012A  EF99  F080         	goto	u1711
  8440   01012E  EF9B  F080         	goto	u1710
  8441   010132                     u1711:
  8442   010132  EF9F  F080         	goto	l4113
  8443   010136                     u1710:
  8444   010136                     
  8445                           ;can/can.c: 735:         return -3;
  8446   010136  0EFD               	movlw	253
  8447   010138  6E01               	movwf	btemp^0,c
  8448   01013A  EFA1  F083         	goto	l264
  8449   01013E                     l4113:
  8450                           
  8451                           ;can/can.c: 742:     ciFifoUa.word = fifoReg[2];
  8452                           ;stkvar	_fifoReg @ sp[(-114)+80]
  8453   01013E  0EE6               	movlw	230
  8454   010140  24E1               	addwf	fsr1l,w,c
  8455   010142  6ED9               	movwf	fsr2l,c
  8456   010144  0EFF               	movlw	255
  8457   010146  20E2               	addwfc	fsr1h,w,c
  8458   010148  6EDA               	movwf	fsr2h,c
  8459   01014A  CFDE F009          	movff	postinc2,btemp+8
  8460   01014E  CFDE F00A          	movff	postinc2,btemp+9
  8461   010152  CFDE F00B          	movff	postinc2,btemp+10
  8462   010156  CFDE F00C          	movff	postinc2,btemp+11
  8463                           
  8464                           ;stkvar	_ciFifoUa @ sp[(-114)+101]
  8465   01015A  0EF3               	movlw	-13
  8466   01015C  C009  FFE3         	movff	btemp+8,plusw1
  8467   010160  0EF4               	movlw	-12
  8468   010162  C00A  FFE3         	movff	btemp+9,plusw1
  8469   010166  0EF5               	movlw	-11
  8470   010168  C00B  FFE3         	movff	btemp+10,plusw1
  8471   01016C  0EF6               	movlw	-10
  8472   01016E  C00C  FFE3         	movff	btemp+11,plusw1
  8473   010172                     
  8474                           ;can/can.c: 746:     a = ciFifoUa.bF.UserAddress;
  8475                           ;stkvar	_ciFifoUa @ sp[(-114)+101]
  8476   010172  0EF3               	movlw	-13
  8477   010174  CFE3 F009          	movff	plusw1,btemp+8
  8478   010178  0EF4               	movlw	-12
  8479   01017A  CFE3 F00A          	movff	plusw1,btemp+9
  8480   01017E  0EF5               	movlw	-11
  8481   010180  CFE3 F00B          	movff	plusw1,btemp+10
  8482   010184  0EF6               	movlw	-10
  8483   010186  CFE3 F00C          	movff	plusw1,btemp+11
  8484                           
  8485                           ;stkvar	_a @ sp[(-114)+97]
  8486   01018A  0EEF               	movlw	-17
  8487   01018C  C009  FFE3         	movff	btemp+8,plusw1
  8488   010190  0EF0               	movlw	-16
  8489   010192  C00A  FFE3         	movff	btemp+9,plusw1
  8490   010196  0EF1               	movlw	-15
  8491   010198  C00B  FFE3         	movff	btemp+10,plusw1
  8492   01019C  0EF2               	movlw	-14
  8493   01019E  C00C  FFE3         	movff	btemp+11,plusw1
  8494   0101A2                     
  8495                           ;can/can.c: 748:     a += 0x400;
  8496                           ;stkvar	_a @ sp[(-114)+97]
  8497   0101A2  50E1               	movf	fsr1l,w,c
  8498   0101A4  0FEF               	addlw	-17
  8499   0101A6  6ED9               	movwf	fsr2l,c
  8500   0101A8  50E2               	movf	fsr1h,w,c
  8501   0101AA  6EDA               	movwf	fsr2h,c
  8502   0101AC  0EFF               	movlw	255
  8503   0101AE  22DA               	addwfc	fsr2h,f,c
  8504   0101B0  0E00               	movlw	0
  8505   0101B2  26DE               	addwf	postinc2,f,c
  8506   0101B4  0E04               	movlw	4
  8507   0101B6  22DE               	addwfc	postinc2,f,c
  8508   0101B8  0E00               	movlw	0
  8509   0101BA  22DE               	addwfc	postinc2,f,c
  8510   0101BC  0E00               	movlw	0
  8511   0101BE  22DE               	addwfc	postinc2,f,c
  8512   0101C0                     
  8513                           ;can/can.c: 750:     uint8_t txBuffer[76];;can/can.c: 764:     if(txObj->bF.ctrl.IDE == 
      +                          0)
  8514                           ;stkvar	_txObj @ sp[(-114)+-3]
  8515   0101C0  0E8B               	movlw	-117
  8516   0101C2  CFE3 F00B          	movff	plusw1,btemp+10
  8517   0101C6  0E8C               	movlw	-116
  8518   0101C8  CFE3 F00C          	movff	plusw1,btemp+11
  8519   0101CC  0E06               	movlw	6
  8520   0101CE  240B               	addwf	(btemp+10)^0,w,c
  8521   0101D0  6ED9               	movwf	fsr2l,c
  8522   0101D2  0E00               	movlw	0
  8523   0101D4  200C               	addwfc	(btemp+11)^0,w,c
  8524   0101D6  6EDA               	movwf	fsr2h,c
  8525   0101D8  B8DF               	btfsc	indf2,4,c
  8526   0101DA  EFF1  F080         	goto	u1721
  8527   0101DE  EFF3  F080         	goto	u1720
  8528   0101E2                     u1721:
  8529   0101E2  EF75  F081         	goto	l4129
  8530   0101E6                     u1720:
  8531   0101E6                     
  8532                           ;can/can.c: 765:     {;can/can.c: 766:       txBuffer[0] = (uint8_t)txObj->bF.id.ID;
  8533                           ;stkvar	_txObj @ sp[(-114)+-3]
  8534   0101E6  0E8B               	movlw	-117
  8535   0101E8  CFE3 FFD9          	movff	plusw1,fsr2l
  8536   0101EC  0E8C               	movlw	-116
  8537   0101EE  CFE3 FFDA          	movff	plusw1,fsr2h
  8538   0101F2  50DF               	movf	indf2,w,c
  8539   0101F4  6E0C               	movwf	(btemp+11)^0,c
  8540                           
  8541                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8542   0101F6  0E92               	movlw	-110
  8543   0101F8  C00C  FFE3         	movff	btemp+11,plusw1
  8544   0101FC                     
  8545                           ;can/can.c: 767:       txBuffer[1] = (uint8_t)(txObj->bF.id.ID >> 8);
  8546                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8547   0101FC  0E93               	movlw	147
  8548   0101FE  24E1               	addwf	fsr1l,w,c
  8549   010200  6ED9               	movwf	fsr2l,c
  8550   010202  0EFF               	movlw	255
  8551   010204  20E2               	addwfc	fsr1h,w,c
  8552   010206  6EDA               	movwf	fsr2h,c
  8553                           
  8554                           ;stkvar	_txObj @ sp[(-114)+-3]
  8555   010208  0E8B               	movlw	-117
  8556   01020A  CFE3 FFE9          	movff	plusw1,fsr0l
  8557   01020E  0E8C               	movlw	-116
  8558   010210  CFE3 FFEA          	movff	plusw1,fsr0h
  8559   010214  CFEE F009          	movff	postinc0,btemp+8
  8560   010218  CFEE F00A          	movff	postinc0,btemp+9
  8561   01021C  CFEE F00B          	movff	postinc0,btemp+10
  8562   010220  CFEE F00C          	movff	postinc0,btemp+11
  8563   010224  C00A  F009         	movff	btemp+9,btemp+8
  8564   010228  C00B  F00A         	movff	btemp+10,btemp+9
  8565   01022C  C00C  F00B         	movff	btemp+11,btemp+10
  8566   010230  6A0C               	clrf	(btemp+11)^0,c
  8567   010232  5009               	movf	(btemp+8)^0,w,c
  8568   010234  6EDF               	movwf	indf2,c
  8569   010236                     
  8570                           ;can/can.c: 768:       txBuffer[2] = (uint8_t)(txObj->bF.id.ID >> 16);
  8571                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8572   010236  0E94               	movlw	148
  8573   010238  24E1               	addwf	fsr1l,w,c
  8574   01023A  6ED9               	movwf	fsr2l,c
  8575   01023C  0EFF               	movlw	255
  8576   01023E  20E2               	addwfc	fsr1h,w,c
  8577   010240  6EDA               	movwf	fsr2h,c
  8578                           
  8579                           ;stkvar	_txObj @ sp[(-114)+-3]
  8580   010242  0E8B               	movlw	-117
  8581   010244  CFE3 FFE9          	movff	plusw1,fsr0l
  8582   010248  0E8C               	movlw	-116
  8583   01024A  CFE3 FFEA          	movff	plusw1,fsr0h
  8584   01024E  CFEE F009          	movff	postinc0,btemp+8
  8585   010252  CFEE F00A          	movff	postinc0,btemp+9
  8586   010256  CFEE F00B          	movff	postinc0,btemp+10
  8587   01025A  CFEE F00C          	movff	postinc0,btemp+11
  8588   01025E  0E11               	movlw	17
  8589   010260  EF37  F081         	goto	u1730
  8590   010264                     u1735:
  8591   010264  90D8               	bcf	status,0,c
  8592   010266  320C               	rrcf	(btemp+11)^0,f,c
  8593   010268  320B               	rrcf	(btemp+10)^0,f,c
  8594   01026A  320A               	rrcf	(btemp+9)^0,f,c
  8595   01026C  3209               	rrcf	(btemp+8)^0,f,c
  8596   01026E                     u1730:
  8597   01026E  2EE8               	decfsz	wreg,f,c
  8598   010270  EF32  F081         	goto	u1735
  8599   010274  5009               	movf	(btemp+8)^0,w,c
  8600   010276  6EDF               	movwf	indf2,c
  8601   010278                     
  8602                           ;can/can.c: 769:       txBuffer[3] = (uint8_t)(txObj->bF.id.ID >> 24) | (uint8_t)(txObj-
      +                          >bF.id.SID11 << 5);
  8603                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8604   010278  0E95               	movlw	149
  8605   01027A  24E1               	addwf	fsr1l,w,c
  8606   01027C  6ED9               	movwf	fsr2l,c
  8607   01027E  0EFF               	movlw	255
  8608   010280  20E2               	addwfc	fsr1h,w,c
  8609   010282  6EDA               	movwf	fsr2h,c
  8610                           
  8611                           ;stkvar	_txObj @ sp[(-114)+-3]
  8612   010284  0E8B               	movlw	-117
  8613   010286  CFE3 F00B          	movff	plusw1,btemp+10
  8614   01028A  0E8C               	movlw	-116
  8615   01028C  CFE3 F00C          	movff	plusw1,btemp+11
  8616   010290  0E04               	movlw	4
  8617   010292  240B               	addwf	(btemp+10)^0,w,c
  8618   010294  6EE9               	movwf	fsr0l,c
  8619   010296  0E00               	movlw	0
  8620   010298  200C               	addwfc	(btemp+11)^0,w,c
  8621   01029A  6EEA               	movwf	fsr0h,c
  8622   01029C  50EF               	movf	indf0,w,c
  8623   01029E  6E0C               	movwf	(btemp+11)^0,c
  8624   0102A0  0E05               	movlw	5
  8625   0102A2  6E01               	movwf	btemp^0,c
  8626   0102A4                     u1745:
  8627   0102A4  90D8               	bcf	status,0,c
  8628   0102A6  360C               	rlcf	(btemp+11)^0,f,c
  8629   0102A8  2E01               	decfsz	btemp^0,f,c
  8630   0102AA  EF52  F081         	goto	u1745
  8631                           
  8632                           ;stkvar	_txObj @ sp[(-114)+-3]
  8633   0102AE  0E8B               	movlw	-117
  8634   0102B0  CFE3 FFE9          	movff	plusw1,fsr0l
  8635   0102B4  0E8C               	movlw	-116
  8636   0102B6  CFE3 FFEA          	movff	plusw1,fsr0h
  8637   0102BA  CFEE F005          	movff	postinc0,btemp+4
  8638   0102BE  CFEE F006          	movff	postinc0,btemp+5
  8639   0102C2  CFEE F007          	movff	postinc0,btemp+6
  8640   0102C6  CFEE F008          	movff	postinc0,btemp+7
  8641   0102CA  0E19               	movlw	25
  8642   0102CC  EF6D  F081         	goto	u1750
  8643   0102D0                     u1755:
  8644   0102D0  90D8               	bcf	status,0,c
  8645   0102D2  3208               	rrcf	(btemp+7)^0,f,c
  8646   0102D4  3207               	rrcf	(btemp+6)^0,f,c
  8647   0102D6  3206               	rrcf	(btemp+5)^0,f,c
  8648   0102D8  3205               	rrcf	(btemp+4)^0,f,c
  8649   0102DA                     u1750:
  8650   0102DA  2EE8               	decfsz	wreg,f,c
  8651   0102DC  EF68  F081         	goto	u1755
  8652   0102E0  5005               	movf	(btemp+4)^0,w,c
  8653   0102E2  100C               	iorwf	(btemp+11)^0,w,c
  8654   0102E4  6EDF               	movwf	indf2,c
  8655                           
  8656                           ;can/can.c: 770:     }
  8657   0102E6  EF24  F082         	goto	l4141
  8658   0102EA                     l4129:
  8659                           
  8660                           ;can/can.c: 772:     {;can/can.c: 773:       uint32_t temp32 = ((txObj->bF.id.ID & 0x000
      +                          3FFFF) << 11) |
  8661                           ;stkvar	_txObj @ sp[(-114)+-3]
  8662   0102EA  0E8B               	movlw	-117
  8663   0102EC  CFE3 FFD9          	movff	plusw1,fsr2l
  8664   0102F0  0E8C               	movlw	-116
  8665   0102F2  CFE3 FFDA          	movff	plusw1,fsr2h
  8666   0102F6  CFDE F009          	movff	postinc2,btemp+8
  8667   0102FA  CFDE F00A          	movff	postinc2,btemp+9
  8668   0102FE  CFDE F00B          	movff	postinc2,btemp+10
  8669   010302  CFDE F00C          	movff	postinc2,btemp+11
  8670   010306  0E13               	movlw	19
  8671   010308  EF8B  F081         	goto	u1760
  8672   01030C                     u1765:
  8673   01030C  90D8               	bcf	status,0,c
  8674   01030E  320C               	rrcf	(btemp+11)^0,f,c
  8675   010310  320B               	rrcf	(btemp+10)^0,f,c
  8676   010312  320A               	rrcf	(btemp+9)^0,f,c
  8677   010314  3209               	rrcf	(btemp+8)^0,f,c
  8678   010316                     u1760:
  8679   010316  2EE8               	decfsz	wreg,f,c
  8680   010318  EF86  F081         	goto	u1765
  8681   01031C  0EFF               	movlw	255
  8682   01031E  1409               	andwf	(btemp+8)^0,w,c
  8683   010320  6E05               	movwf	(btemp+4)^0,c
  8684   010322  0E07               	movlw	7
  8685   010324  140A               	andwf	(btemp+9)^0,w,c
  8686   010326  6E06               	movwf	(btemp+5)^0,c
  8687   010328  0E00               	movlw	0
  8688   01032A  140B               	andwf	(btemp+10)^0,w,c
  8689   01032C  6E07               	movwf	(btemp+6)^0,c
  8690   01032E  0E00               	movlw	0
  8691   010330  140C               	andwf	(btemp+11)^0,w,c
  8692   010332  6E08               	movwf	(btemp+7)^0,c
  8693                           
  8694                           ;stkvar	_txObj @ sp[(-114)+-3]
  8695   010334  0E8B               	movlw	-117
  8696   010336  CFE3 FFD9          	movff	plusw1,fsr2l
  8697   01033A  0E8C               	movlw	-116
  8698   01033C  CFE3 FFDA          	movff	plusw1,fsr2h
  8699   010340  0EFF               	movlw	255
  8700   010342  14DE               	andwf	postinc2,w,c
  8701   010344  6E09               	movwf	(btemp+8)^0,c
  8702   010346  0EFF               	movlw	255
  8703   010348  14DE               	andwf	postinc2,w,c
  8704   01034A  6E0A               	movwf	(btemp+9)^0,c
  8705   01034C  0E03               	movlw	3
  8706   01034E  14DE               	andwf	postinc2,w,c
  8707   010350  6E0B               	movwf	(btemp+10)^0,c
  8708   010352  0E00               	movlw	0
  8709   010354  14DE               	andwf	postinc2,w,c
  8710   010356  6E0C               	movwf	(btemp+11)^0,c
  8711   010358  0E0B               	movlw	11
  8712   01035A                     u1775:
  8713   01035A  90D8               	bcf	status,0,c
  8714   01035C  3609               	rlcf	(btemp+8)^0,f,c
  8715   01035E  360A               	rlcf	(btemp+9)^0,f,c
  8716   010360  360B               	rlcf	(btemp+10)^0,f,c
  8717   010362  360C               	rlcf	(btemp+11)^0,f,c
  8718   010364  2EE8               	decfsz	wreg,f,c
  8719   010366  EFAD  F081         	goto	u1775
  8720   01036A  5005               	movf	(btemp+4)^0,w,c
  8721   01036C  1009               	iorwf	(btemp+8)^0,w,c
  8722   01036E  6E01               	movwf	btemp^0,c
  8723   010370  5006               	movf	(btemp+5)^0,w,c
  8724   010372  100A               	iorwf	(btemp+9)^0,w,c
  8725   010374  6E02               	movwf	(btemp+1)^0,c
  8726   010376  5007               	movf	(btemp+6)^0,w,c
  8727   010378  100B               	iorwf	(btemp+10)^0,w,c
  8728   01037A  6E03               	movwf	(btemp+2)^0,c
  8729   01037C  5008               	movf	(btemp+7)^0,w,c
  8730   01037E  100C               	iorwf	(btemp+11)^0,w,c
  8731   010380  6E04               	movwf	(btemp+3)^0,c
  8732                           
  8733                           ;stkvar	_temp32 @ sp[(-114)+0]
  8734   010382  0E8E               	movlw	-114
  8735   010384  C001  FFE3         	movff	btemp,plusw1
  8736   010388  0E8F               	movlw	-113
  8737   01038A  C002  FFE3         	movff	btemp+1,plusw1
  8738   01038E  0E90               	movlw	-112
  8739   010390  C003  FFE3         	movff	btemp+2,plusw1
  8740   010394  0E91               	movlw	-111
  8741   010396  C004  FFE3         	movff	btemp+3,plusw1
  8742   01039A                     
  8743                           ;can/can.c: 775:       temp32 = temp32 & 0x1FFFFFFF;
  8744                           ;stkvar	_temp32 @ sp[(-114)+0]
  8745   01039A  50E1               	movf	fsr1l,w,c
  8746   01039C  0F8E               	addlw	-114
  8747   01039E  6ED9               	movwf	fsr2l,c
  8748   0103A0  50E2               	movf	fsr1h,w,c
  8749   0103A2  6EDA               	movwf	fsr2h,c
  8750   0103A4  0EFF               	movlw	255
  8751   0103A6  22DA               	addwfc	fsr2h,f,c
  8752   0103A8  0EFF               	movlw	255
  8753   0103AA  16DE               	andwf	postinc2,f,c
  8754   0103AC  0EFF               	movlw	255
  8755   0103AE  16DE               	andwf	postinc2,f,c
  8756   0103B0  0EFF               	movlw	255
  8757   0103B2  16DE               	andwf	postinc2,f,c
  8758   0103B4  0E1F               	movlw	31
  8759   0103B6  16DE               	andwf	postinc2,f,c
  8760   0103B8                     
  8761                           ;can/can.c: 776:       txBuffer[0] = (uint8_t)temp32;
  8762                           ;stkvar	_temp32 @ sp[(-114)+0]
  8763                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8764   0103B8  0E8E               	movlw	-114
  8765   0103BA  CFE3 F001          	movff	plusw1,btemp
  8766   0103BE  0E92               	movlw	-110
  8767   0103C0  C001  FFE3         	movff	btemp,plusw1
  8768   0103C4                     
  8769                           ;can/can.c: 777:       txBuffer[1] = (uint8_t)(temp32 >> 8);
  8770                           ;stkvar	_temp32 @ sp[(-114)+0]
  8771   0103C4  0E8F               	movlw	143
  8772   0103C6  24E1               	addwf	fsr1l,w,c
  8773   0103C8  6ED9               	movwf	fsr2l,c
  8774   0103CA  0EFF               	movlw	255
  8775   0103CC  20E2               	addwfc	fsr1h,w,c
  8776   0103CE  6EDA               	movwf	fsr2h,c
  8777                           
  8778                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8779   0103D0  0E93               	movlw	147
  8780   0103D2  24E1               	addwf	fsr1l,w,c
  8781   0103D4  6EE9               	movwf	fsr0l,c
  8782   0103D6  0EFF               	movlw	255
  8783   0103D8  20E2               	addwfc	fsr1h,w,c
  8784   0103DA  6EEA               	movwf	fsr0h,c
  8785   0103DC  CFDF FFEF          	movff	indf2,indf0
  8786   0103E0                     
  8787                           ;can/can.c: 778:       txBuffer[2] = (uint8_t)(temp32 >> 16);
  8788                           ;stkvar	_temp32 @ sp[(-114)+0]
  8789   0103E0  0E90               	movlw	144
  8790   0103E2  24E1               	addwf	fsr1l,w,c
  8791   0103E4  6ED9               	movwf	fsr2l,c
  8792   0103E6  0EFF               	movlw	255
  8793   0103E8  20E2               	addwfc	fsr1h,w,c
  8794   0103EA  6EDA               	movwf	fsr2h,c
  8795                           
  8796                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8797   0103EC  0E94               	movlw	148
  8798   0103EE  24E1               	addwf	fsr1l,w,c
  8799   0103F0  6EE9               	movwf	fsr0l,c
  8800   0103F2  0EFF               	movlw	255
  8801   0103F4  20E2               	addwfc	fsr1h,w,c
  8802   0103F6  6EEA               	movwf	fsr0h,c
  8803   0103F8  CFDF FFEF          	movff	indf2,indf0
  8804   0103FC                     
  8805                           ;can/can.c: 779:       txBuffer[3] = (uint8_t)(temp32 >> 24) | (uint8_t)(txObj->bF.id.SI
      +                          D11 << 5);
  8806                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8807   0103FC  0E95               	movlw	149
  8808   0103FE  24E1               	addwf	fsr1l,w,c
  8809   010400  6ED9               	movwf	fsr2l,c
  8810   010402  0EFF               	movlw	255
  8811   010404  20E2               	addwfc	fsr1h,w,c
  8812   010406  6EDA               	movwf	fsr2h,c
  8813                           
  8814                           ;stkvar	_temp32 @ sp[(-114)+0]
  8815   010408  0E91               	movlw	145
  8816   01040A  24E1               	addwf	fsr1l,w,c
  8817   01040C  6EE9               	movwf	fsr0l,c
  8818   01040E  0EFF               	movlw	255
  8819   010410  20E2               	addwfc	fsr1h,w,c
  8820   010412  6EEA               	movwf	fsr0h,c
  8821   010414  50EF               	movf	indf0,w,c
  8822   010416  6E0C               	movwf	(btemp+11)^0,c
  8823                           
  8824                           ;stkvar	_txObj @ sp[(-114)+-3]
  8825   010418  0E8B               	movlw	-117
  8826   01041A  CFE3 F009          	movff	plusw1,btemp+8
  8827   01041E  0E8C               	movlw	-116
  8828   010420  CFE3 F00A          	movff	plusw1,btemp+9
  8829   010424  0E04               	movlw	4
  8830   010426  2409               	addwf	(btemp+8)^0,w,c
  8831   010428  6EE9               	movwf	fsr0l,c
  8832   01042A  0E00               	movlw	0
  8833   01042C  200A               	addwfc	(btemp+9)^0,w,c
  8834   01042E  6EEA               	movwf	fsr0h,c
  8835   010430  50EF               	movf	indf0,w,c
  8836   010432  6E0B               	movwf	(btemp+10)^0,c
  8837   010434  0E05               	movlw	5
  8838   010436  6E01               	movwf	btemp^0,c
  8839   010438                     u1785:
  8840   010438  90D8               	bcf	status,0,c
  8841   01043A  360B               	rlcf	(btemp+10)^0,f,c
  8842   01043C  2E01               	decfsz	btemp^0,f,c
  8843   01043E  EF1C  F082         	goto	u1785
  8844   010442  500B               	movf	(btemp+10)^0,w,c
  8845   010444  100C               	iorwf	(btemp+11)^0,w,c
  8846   010446  6EDF               	movwf	indf2,c
  8847   010448                     l4141:
  8848                           
  8849                           ;can/can.c: 781:     txBuffer[4] = txObj->byte[6];
  8850                           ;stkvar	_txObj @ sp[(-114)+-3]
  8851   010448  0E8B               	movlw	-117
  8852   01044A  CFE3 F00B          	movff	plusw1,btemp+10
  8853   01044E  0E8C               	movlw	-116
  8854   010450  CFE3 F00C          	movff	plusw1,btemp+11
  8855   010454  0E06               	movlw	6
  8856   010456  240B               	addwf	(btemp+10)^0,w,c
  8857   010458  6ED9               	movwf	fsr2l,c
  8858   01045A  0E00               	movlw	0
  8859   01045C  200C               	addwfc	(btemp+11)^0,w,c
  8860   01045E  6EDA               	movwf	fsr2h,c
  8861                           
  8862                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8863   010460  0E96               	movlw	150
  8864   010462  24E1               	addwf	fsr1l,w,c
  8865   010464  6EE9               	movwf	fsr0l,c
  8866   010466  0EFF               	movlw	255
  8867   010468  20E2               	addwfc	fsr1h,w,c
  8868   01046A  6EEA               	movwf	fsr0h,c
  8869   01046C  CFDF FFEF          	movff	indf2,indf0
  8870   010470                     
  8871                           ;can/can.c: 782:     txBuffer[5] = txObj->bF.ctrl.ESI | (uint8_t)(txObj->bF.ctrl.SEQ << 
      +                          1);
  8872                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8873   010470  0E97               	movlw	151
  8874   010472  24E1               	addwf	fsr1l,w,c
  8875   010474  6ED9               	movwf	fsr2l,c
  8876   010476  0EFF               	movlw	255
  8877   010478  20E2               	addwfc	fsr1h,w,c
  8878   01047A  6EDA               	movwf	fsr2h,c
  8879                           
  8880                           ;stkvar	_txObj @ sp[(-114)+-3]
  8881   01047C  0E8B               	movlw	-117
  8882   01047E  CFE3 F00B          	movff	plusw1,btemp+10
  8883   010482  0E8C               	movlw	-116
  8884   010484  CFE3 F00C          	movff	plusw1,btemp+11
  8885   010488  0E07               	movlw	7
  8886   01048A  240B               	addwf	(btemp+10)^0,w,c
  8887   01048C  6EE9               	movwf	fsr0l,c
  8888   01048E  0E00               	movlw	0
  8889   010490  200C               	addwfc	(btemp+11)^0,w,c
  8890   010492  6EEA               	movwf	fsr0h,c
  8891   010494  50EF               	movf	indf0,w,c
  8892   010496  6E0C               	movwf	(btemp+11)^0,c
  8893                           
  8894                           ;stkvar	_txObj @ sp[(-114)+-3]
  8895   010498  0E8B               	movlw	-117
  8896   01049A  CFE3 F009          	movff	plusw1,btemp+8
  8897   01049E  0E8C               	movlw	-116
  8898   0104A0  CFE3 F00A          	movff	plusw1,btemp+9
  8899   0104A4  0E08               	movlw	8
  8900   0104A6  2409               	addwf	(btemp+8)^0,w,c
  8901   0104A8  6EE9               	movwf	fsr0l,c
  8902   0104AA  0E00               	movlw	0
  8903   0104AC  200A               	addwfc	(btemp+9)^0,w,c
  8904   0104AE  6EEA               	movwf	fsr0h,c
  8905   0104B0  50EF               	movf	indf0,w,c
  8906   0104B2  6E0B               	movwf	(btemp+10)^0,c
  8907   0104B4  90D8               	bcf	status,0,c
  8908   0104B6  340B               	rlcf	(btemp+10)^0,w,c
  8909   0104B8  100C               	iorwf	(btemp+11)^0,w,c
  8910   0104BA  6EDF               	movwf	indf2,c
  8911   0104BC                     
  8912                           ;can/can.c: 783:     txBuffer[6] = (uint8_t)(txObj->bF.ctrl.SEQ >> 7);
  8913                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8914   0104BC  0E98               	movlw	152
  8915   0104BE  24E1               	addwf	fsr1l,w,c
  8916   0104C0  6ED9               	movwf	fsr2l,c
  8917   0104C2  0EFF               	movlw	255
  8918   0104C4  20E2               	addwfc	fsr1h,w,c
  8919   0104C6  6EDA               	movwf	fsr2h,c
  8920                           
  8921                           ;stkvar	_txObj @ sp[(-114)+-3]
  8922   0104C8  0E8B               	movlw	-117
  8923   0104CA  CFE3 F00B          	movff	plusw1,btemp+10
  8924   0104CE  0E8C               	movlw	-116
  8925   0104D0  CFE3 F00C          	movff	plusw1,btemp+11
  8926   0104D4  0E08               	movlw	8
  8927   0104D6  240B               	addwf	(btemp+10)^0,w,c
  8928   0104D8  6EE9               	movwf	fsr0l,c
  8929   0104DA  0E00               	movlw	0
  8930   0104DC  200C               	addwfc	(btemp+11)^0,w,c
  8931   0104DE  6EEA               	movwf	fsr0h,c
  8932   0104E0  CFEE F009          	movff	postinc0,btemp+8
  8933   0104E4  CFEE F00A          	movff	postinc0,btemp+9
  8934   0104E8  CFEE F00B          	movff	postinc0,btemp+10
  8935   0104EC  CFEE F00C          	movff	postinc0,btemp+11
  8936   0104F0  0E08               	movlw	8
  8937   0104F2  EF80  F082         	goto	u1790
  8938   0104F6                     u1795:
  8939   0104F6  90D8               	bcf	status,0,c
  8940   0104F8  320C               	rrcf	(btemp+11)^0,f,c
  8941   0104FA  320B               	rrcf	(btemp+10)^0,f,c
  8942   0104FC  320A               	rrcf	(btemp+9)^0,f,c
  8943   0104FE  3209               	rrcf	(btemp+8)^0,f,c
  8944   010500                     u1790:
  8945   010500  2EE8               	decfsz	wreg,f,c
  8946   010502  EF7B  F082         	goto	u1795
  8947   010506  5009               	movf	(btemp+8)^0,w,c
  8948   010508  6EDF               	movwf	indf2,c
  8949   01050A                     
  8950                           ;can/can.c: 784:     txBuffer[7] = (uint8_t)(txObj->bF.ctrl.SEQ >> 15);
  8951                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8952   01050A  0E99               	movlw	153
  8953   01050C  24E1               	addwf	fsr1l,w,c
  8954   01050E  6ED9               	movwf	fsr2l,c
  8955   010510  0EFF               	movlw	255
  8956   010512  20E2               	addwfc	fsr1h,w,c
  8957   010514  6EDA               	movwf	fsr2h,c
  8958                           
  8959                           ;stkvar	_txObj @ sp[(-114)+-3]
  8960   010516  0E8B               	movlw	-117
  8961   010518  CFE3 F00B          	movff	plusw1,btemp+10
  8962   01051C  0E8C               	movlw	-116
  8963   01051E  CFE3 F00C          	movff	plusw1,btemp+11
  8964   010522  0E08               	movlw	8
  8965   010524  240B               	addwf	(btemp+10)^0,w,c
  8966   010526  6EE9               	movwf	fsr0l,c
  8967   010528  0E00               	movlw	0
  8968   01052A  200C               	addwfc	(btemp+11)^0,w,c
  8969   01052C  6EEA               	movwf	fsr0h,c
  8970   01052E  CFEE F009          	movff	postinc0,btemp+8
  8971   010532  CFEE F00A          	movff	postinc0,btemp+9
  8972   010536  CFEE F00B          	movff	postinc0,btemp+10
  8973   01053A  CFEE F00C          	movff	postinc0,btemp+11
  8974   01053E  0E10               	movlw	16
  8975   010540  EFA7  F082         	goto	u1800
  8976   010544                     u1805:
  8977   010544  90D8               	bcf	status,0,c
  8978   010546  320C               	rrcf	(btemp+11)^0,f,c
  8979   010548  320B               	rrcf	(btemp+10)^0,f,c
  8980   01054A  320A               	rrcf	(btemp+9)^0,f,c
  8981   01054C  3209               	rrcf	(btemp+8)^0,f,c
  8982   01054E                     u1800:
  8983   01054E  2EE8               	decfsz	wreg,f,c
  8984   010550  EFA2  F082         	goto	u1805
  8985   010554  5009               	movf	(btemp+8)^0,w,c
  8986   010556  6EDF               	movwf	indf2,c
  8987   010558                     
  8988                           ;can/can.c: 787:     uint8_t i;;can/can.c: 788:     for (i = 0; i < txdNumBytes; i++) {
  8989                           ;stkvar	_i @ sp[(-114)+112]
  8990   010558  0EFE               	movlw	-2
  8991   01055A  6AE3               	clrf	plusw1,c
  8992   01055C  EFD7  F082         	goto	l4155
  8993   010560                     l4151:
  8994                           
  8995                           ;can/can.c: 789:         txBuffer[i + 8] = txd[i];
  8996                           ;stkvar	_i @ sp[(-114)+112]
  8997   010560  0EFE               	movlw	-2
  8998   010562  CFE3 F00C          	movff	plusw1,btemp+11
  8999                           
  9000                           ;stkvar	_txd @ sp[(-114)+-5]
  9001   010566  0E89               	movlw	-119
  9002   010568  CFE3 F009          	movff	plusw1,btemp+8
  9003   01056C  0E8A               	movlw	-118
  9004   01056E  CFE3 F00A          	movff	plusw1,btemp+9
  9005   010572  500C               	movf	(btemp+11)^0,w,c
  9006   010574  2409               	addwf	(btemp+8)^0,w,c
  9007   010576  6ED9               	movwf	fsr2l,c
  9008   010578  0E00               	movlw	0
  9009   01057A  200A               	addwfc	(btemp+9)^0,w,c
  9010   01057C  6EDA               	movwf	fsr2h,c
  9011                           
  9012                           ;stkvar	_i @ sp[(-114)+112]
  9013   01057E  0EFE               	movlw	-2
  9014   010580  50E3               	movf	plusw1,w,c
  9015   010582  6E0B               	movwf	(btemp+10)^0,c
  9016   010584  6A0C               	clrf	(btemp+11)^0,c
  9017   010586  0E08               	movlw	8
  9018   010588  260B               	addwf	(btemp+10)^0,f,c
  9019   01058A  0E00               	movlw	0
  9020   01058C  220C               	addwfc	(btemp+11)^0,f,c
  9021                           
  9022                           ;stkvar	_txBuffer @ sp[(-114)+4]
  9023   01058E  0E92               	movlw	146
  9024   010590  24E1               	addwf	fsr1l,w,c
  9025   010592  6E09               	movwf	(btemp+8)^0,c
  9026   010594  0EFF               	movlw	255
  9027   010596  20E2               	addwfc	fsr1h,w,c
  9028   010598  6E0A               	movwf	(btemp+9)^0,c
  9029   01059A  500B               	movf	(btemp+10)^0,w,c
  9030   01059C  2409               	addwf	(btemp+8)^0,w,c
  9031   01059E  6EE9               	movwf	fsr0l,c
  9032   0105A0  500C               	movf	(btemp+11)^0,w,c
  9033   0105A2  200A               	addwfc	(btemp+9)^0,w,c
  9034   0105A4  6EEA               	movwf	fsr0h,c
  9035   0105A6  CFDF FFEF          	movff	indf2,indf0
  9036   0105AA                     
  9037                           ;can/can.c: 790:     }
  9038                           ;stkvar	_i @ sp[(-114)+112]
  9039   0105AA  0EFE               	movlw	-2
  9040   0105AC  2AE3               	incf	plusw1,f,c
  9041   0105AE                     l4155:
  9042                           
  9043                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  9044                           ;stkvar	_i @ sp[(-114)+112]
  9045   0105AE  0EFE               	movlw	-2
  9046   0105B0  CFE3 F00C          	movff	plusw1,btemp+11
  9047   0105B4  C00C  F005         	movff	btemp+11,btemp+4
  9048   0105B8  6A06               	clrf	(btemp+5)^0,c
  9049   0105BA  6A07               	clrf	(btemp+6)^0,c
  9050   0105BC  6A08               	clrf	(btemp+7)^0,c
  9051   0105BE  0E85               	movlw	-123
  9052   0105C0  50E3               	movf	plusw1,w,c
  9053   0105C2  5C05               	subwf	(btemp+4)^0,w,c
  9054   0105C4  0E86               	movlw	-122
  9055   0105C6  50E3               	movf	plusw1,w,c
  9056   0105C8  5806               	subwfb	(btemp+5)^0,w,c
  9057   0105CA  0E87               	movlw	-121
  9058   0105CC  50E3               	movf	plusw1,w,c
  9059   0105CE  5807               	subwfb	(btemp+6)^0,w,c
  9060   0105D0  0E88               	movlw	-120
  9061   0105D2  50E3               	movf	plusw1,w,c
  9062   0105D4  5808               	subwfb	(btemp+7)^0,w,c
  9063   0105D6  A0D8               	btfss	status,0,c
  9064   0105D8  EFF0  F082         	goto	u1811
  9065   0105DC  EFF2  F082         	goto	u1810
  9066   0105E0                     u1811:
  9067   0105E0  EFB0  F082         	goto	l4151
  9068   0105E4                     u1810:
  9069   0105E4                     
  9070                           ;can/can.c: 793:     uint16_t n = 0;
  9071                           ;stkvar	_n @ sp[(-114)+109]
  9072   0105E4  0EFB               	movlw	-5
  9073   0105E6  6AE3               	clrf	plusw1,c
  9074   0105E8  0EFC               	movlw	-4
  9075   0105EA  6AE3               	clrf	plusw1,c
  9076   0105EC                     
  9077                           ;can/can.c: 796:     if (txdNumBytes % 4) {
  9078                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  9079   0105EC  0E85               	movlw	-123
  9080   0105EE  CFE3 F00C          	movff	plusw1,btemp+11
  9081   0105F2  0E03               	movlw	3
  9082   0105F4  160C               	andwf	(btemp+11)^0,f,c
  9083   0105F6  B4D8               	btfsc	status,2,c
  9084   0105F8  EF00  F083         	goto	u1821
  9085   0105FC  EF02  F083         	goto	u1820
  9086   010600                     u1821:
  9087   010600  EF51  F083         	goto	l4175
  9088   010604                     u1820:
  9089   010604                     
  9090                           ;can/can.c: 798:         n = 4 - (txdNumBytes % 4);
  9091                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  9092   010604  0E85               	movlw	-123
  9093   010606  CFE3 F00B          	movff	plusw1,btemp+10
  9094   01060A  0E86               	movlw	-122
  9095   01060C  CFE3 F00C          	movff	plusw1,btemp+11
  9096   010610  0E03               	movlw	3
  9097   010612  160B               	andwf	(btemp+10)^0,f,c
  9098   010614  0E00               	movlw	0
  9099   010616  160C               	andwf	(btemp+11)^0,f,c
  9100   010618  500B               	movf	(btemp+10)^0,w,c
  9101   01061A  0804               	sublw	4
  9102   01061C  6E09               	movwf	(btemp+8)^0,c
  9103   01061E  500C               	movf	(btemp+11)^0,w,c
  9104   010620  A0D8               	btfss	status,0,c
  9105   010622  2AE8               	incf	wreg,f,c
  9106   010624  0800               	sublw	0
  9107   010626  6E0A               	movwf	(btemp+9)^0,c
  9108                           
  9109                           ;stkvar	_n @ sp[(-114)+109]
  9110   010628  0EFB               	movlw	-5
  9111   01062A  C009  FFE3         	movff	btemp+8,plusw1
  9112   01062E  0EFC               	movlw	-4
  9113   010630  C00A  FFE3         	movff	btemp+9,plusw1
  9114   010634                     
  9115                           ;can/can.c: 799:         i = (uint8_t)txdNumBytes + 8;
  9116   010634  0E08               	movlw	8
  9117   010636  6E0C               	movwf	(btemp+11)^0,c
  9118                           
  9119                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  9120   010638  0E85               	movlw	-123
  9121   01063A  50E3               	movf	plusw1,w,c
  9122   01063C  240C               	addwf	(btemp+11)^0,w,c
  9123   01063E  6E0B               	movwf	(btemp+10)^0,c
  9124                           
  9125                           ;stkvar	_i @ sp[(-114)+112]
  9126   010640  0EFE               	movlw	-2
  9127   010642  C00B  FFE3         	movff	btemp+10,plusw1
  9128   010646                     
  9129                           ;can/can.c: 801:         for (j = 0; j < n; j++) {
  9130                           ;stkvar	_j @ sp[(-114)+113]
  9131   010646  0EFF               	movlw	-1
  9132   010648  6AE3               	clrf	plusw1,c
  9133   01064A  EF40  F083         	goto	l4173
  9134   01064E                     l4169:
  9135                           
  9136                           ;can/can.c: 802:             txBuffer[i + 8 + j] = 0;
  9137                           ;stkvar	_txBuffer @ sp[(-114)+4]
  9138   01064E  0E92               	movlw	146
  9139   010650  24E1               	addwf	fsr1l,w,c
  9140   010652  6E0B               	movwf	(btemp+10)^0,c
  9141   010654  0EFF               	movlw	255
  9142   010656  20E2               	addwfc	fsr1h,w,c
  9143   010658  6E0C               	movwf	(btemp+11)^0,c
  9144                           
  9145                           ;stkvar	_i @ sp[(-114)+112]
  9146   01065A  0EFE               	movlw	-2
  9147   01065C  50E3               	movf	plusw1,w,c
  9148   01065E  260B               	addwf	(btemp+10)^0,f,c
  9149   010660  0E00               	movlw	0
  9150   010662  220C               	addwfc	(btemp+11)^0,f,c
  9151                           
  9152                           ;stkvar	_j @ sp[(-114)+113]
  9153   010664  0EFF               	movlw	-1
  9154   010666  50E3               	movf	plusw1,w,c
  9155   010668  260B               	addwf	(btemp+10)^0,f,c
  9156   01066A  0E00               	movlw	0
  9157   01066C  220C               	addwfc	(btemp+11)^0,f,c
  9158   01066E  0E08               	movlw	8
  9159   010670  240B               	addwf	(btemp+10)^0,w,c
  9160   010672  6ED9               	movwf	fsr2l,c
  9161   010674  0E00               	movlw	0
  9162   010676  200C               	addwfc	(btemp+11)^0,w,c
  9163   010678  6EDA               	movwf	fsr2h,c
  9164   01067A  6ADF               	clrf	indf2,c
  9165   01067C                     
  9166                           ;can/can.c: 803:         }
  9167                           ;stkvar	_j @ sp[(-114)+113]
  9168   01067C  0EFF               	movlw	-1
  9169   01067E  2AE3               	incf	plusw1,f,c
  9170   010680                     l4173:
  9171                           
  9172                           ;stkvar	_n @ sp[(-114)+109]
  9173                           ;stkvar	_j @ sp[(-114)+113]
  9174   010680  0EFF               	movlw	-1
  9175   010682  50E3               	movf	plusw1,w,c
  9176   010684  6E0B               	movwf	(btemp+10)^0,c
  9177   010686  6A0C               	clrf	(btemp+11)^0,c
  9178   010688  0EFB               	movlw	-5
  9179   01068A  50E3               	movf	plusw1,w,c
  9180   01068C  5C0B               	subwf	(btemp+10)^0,w,c
  9181   01068E  0EFC               	movlw	-4
  9182   010690  50E3               	movf	plusw1,w,c
  9183   010692  580C               	subwfb	(btemp+11)^0,w,c
  9184   010694  A0D8               	btfss	status,0,c
  9185   010696  EF4F  F083         	goto	u1831
  9186   01069A  EF51  F083         	goto	u1830
  9187   01069E                     u1831:
  9188   01069E  EF27  F083         	goto	l4169
  9189   0106A2                     u1830:
  9190   0106A2                     l4175:
  9191                           
  9192                           ;can/can.c: 806:     spiTransferError = DRV_CANFDSPI_WriteByteArray( (uint16_t)a, txBuff
      +                          er, (uint16_t)txdNumBytes + 8 + n);
  9193                           ;stkvar	_n @ sp[(-114)+109]
  9194                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  9195   0106A2  0E85               	movlw	-123
  9196   0106A4  CFE3 F00B          	movff	plusw1,btemp+10
  9197   0106A8  0E86               	movlw	-122
  9198   0106AA  CFE3 F00C          	movff	plusw1,btemp+11
  9199   0106AE  0EFB               	movlw	-5
  9200   0106B0  50E3               	movf	plusw1,w,c
  9201   0106B2  260B               	addwf	(btemp+10)^0,f,c
  9202   0106B4  0EFC               	movlw	-4
  9203   0106B6  50E3               	movf	plusw1,w,c
  9204   0106B8  220C               	addwfc	(btemp+11)^0,f,c
  9205   0106BA  0E08               	movlw	8
  9206   0106BC  260B               	addwf	(btemp+10)^0,f,c
  9207   0106BE  0E00               	movlw	0
  9208   0106C0  220C               	addwfc	(btemp+11)^0,f,c
  9209   0106C2  C00B  FFE6         	movff	btemp+10,postinc1
  9210   0106C6  C00C  FFE6         	movff	btemp+11,postinc1
  9211                           
  9212                           ;stkvar	_txBuffer @ sp[(-116)+4]
  9213   0106CA  0E90               	movlw	144
  9214   0106CC  24E1               	addwf	fsr1l,w,c
  9215   0106CE  6E01               	movwf	btemp^0,c
  9216   0106D0  0EFF               	movlw	255
  9217   0106D2  20E2               	addwfc	fsr1h,w,c
  9218   0106D4  6E02               	movwf	(btemp+1)^0,c
  9219   0106D6  C001  FFE6         	movff	btemp,postinc1
  9220   0106DA  C002  FFE6         	movff	btemp+1,postinc1
  9221                           
  9222                           ;stkvar	_a @ sp[(-118)+97]
  9223   0106DE  0EEB               	movlw	-21
  9224   0106E0  CFE3 FFE6          	movff	plusw1,postinc1
  9225   0106E4  CFE3 FFE6          	movff	plusw1,postinc1
  9226   0106E8  ECF5  F098         	call	_DRV_CANFDSPI_WriteByteArray	;wreg free
  9227                           
  9228                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  9229   0106EC  0EFD               	movlw	-3
  9230   0106EE  C001  FFE3         	movff	btemp,plusw1
  9231   0106F2                     
  9232                           ;can/can.c: 807:     if (spiTransferError) {
  9233                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  9234   0106F2  0EFD               	movlw	-3
  9235   0106F4  50E3               	movf	plusw1,w,c
  9236   0106F6  B4D8               	btfsc	status,2,c
  9237   0106F8  EF80  F083         	goto	u1841
  9238   0106FC  EF82  F083         	goto	u1840
  9239   010700                     u1841:
  9240   010700  EF86  F083         	goto	l4183
  9241   010704                     u1840:
  9242   010704                     
  9243                           ;can/can.c: 808:         return -4;
  9244   010704  0EFC               	movlw	252
  9245   010706  6E01               	movwf	btemp^0,c
  9246   010708  EFA1  F083         	goto	l264
  9247   01070C                     l4183:
  9248                           
  9249                           ;can/can.c: 812:     spiTransferError = DRV_CANFDSPI_TransmitChannelUpdate( channel, flu
      +                          sh);
  9250                           ;stkvar	_flush @ sp[(-114)+-10]
  9251   01070C  0E84               	movlw	-124
  9252   01070E  50E3               	movf	plusw1,w,c
  9253   010710  6EE6               	movwf	postinc1,c
  9254                           
  9255                           ;stkvar	_channel @ sp[(-115)+-1]
  9256   010712  0E8C               	movlw	-116
  9257   010714  50E3               	movf	plusw1,w,c
  9258   010716  6EE6               	movwf	postinc1,c
  9259   010718  EC16  F09F         	call	_DRV_CANFDSPI_TransmitChannelUpdate	;wreg free
  9260                           
  9261                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  9262   01071C  0EFD               	movlw	-3
  9263   01071E  C001  FFE3         	movff	btemp,plusw1
  9264   010722                     
  9265                           ;can/can.c: 813:     if (spiTransferError) {
  9266                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  9267   010722  0EFD               	movlw	-3
  9268   010724  50E3               	movf	plusw1,w,c
  9269   010726  B4D8               	btfsc	status,2,c
  9270   010728  EF98  F083         	goto	u1851
  9271   01072C  EF9A  F083         	goto	u1850
  9272   010730                     u1851:
  9273   010730  EF9E  F083         	goto	l4191
  9274   010734                     u1850:
  9275   010734                     
  9276                           ;can/can.c: 814:         return -5;
  9277   010734  0EFB               	movlw	251
  9278   010736  6E01               	movwf	btemp^0,c
  9279   010738  EFA1  F083         	goto	l264
  9280   01073C                     l4191:
  9281                           
  9282                           ;can/can.c: 817:     return spiTransferError;
  9283                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  9284   01073C  0EFD               	movlw	-3
  9285   01073E  CFE3 F001          	movff	plusw1,btemp
  9286   010742                     l264:
  9287                           
  9288                           ; _DRV_CANFDSPI_TransmitChannelLoad: autosize = 114, savesize = 0, parsavesize = 0, temp
      +                          size = 0 parsize = 10, argsize = 10, vargsize = 0
  9289   010742  0E84               	movlw	132
  9290   010744  26E1               	addwf	fsr1l,f,c
  9291   010746  0EFF               	movlw	255
  9292   010748  22E2               	addwfc	fsr1h,f,c
  9293   01074A  0012               	return		;funcret
  9294   01074C                     __end_of_DRV_CANFDSPI_TransmitChannelLoad:
  9295                           	callstack 0
  9296                           
  9297 ;; *************** function _DRV_CANFDSPI_WriteByteArray *****************
  9298 ;; Defined at:
  9299 ;;		line 383 in file "can/can.c"
  9300 ;; Parameters:    Size  Location     Type
  9301 ;;  address         2  [STACK] unsigned short 
  9302 ;;  txd             2  [STACK] PTR unsigned char 
  9303 ;;		 -> txd(200), txBuffer(76), 
  9304 ;;  nBytes          2  [STACK] unsigned short 
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;  i               2  [STACK] unsigned short 
  9307 ;;  spiTransferS    2  [STACK] unsigned short 
  9308 ;;  spiTransferE    1  [STACK] char 
  9309 ;; Return value:  Size  Location     Type
  9310 ;;                  1  [STACK] char 
  9311 ;; Registers used:
  9312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  9313 ;; Tracked objects:
  9314 ;;		On entry : 0/0
  9315 ;;		On exit  : 0/0
  9316 ;;		Unchanged: 0/0
  9317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9322 ;;Total ram usage:        0 bytes
  9323 ;; Hardware stack levels used: 1
  9324 ;; Hardware stack levels required when called: 8
  9325 ;; This function calls:
  9326 ;;		_SpiTransfer
  9327 ;; This function is called by:
  9328 ;;		_DRV_CANFDSPI_TransmitChannelLoad
  9329 ;; This function uses a reentrant model
  9330 ;;
  9331                           
  9332                           	psect	text26
  9333   0131EA                     __ptext26:
  9334                           	callstack 0
  9335   0131EA                     _DRV_CANFDSPI_WriteByteArray:
  9336                           	callstack 0
  9337                           
  9338                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9339   0131EA  0E05               	movlw	5
  9340   0131EC  26E1               	addwf	fsr1l,f,c
  9341   0131EE  0E00               	movlw	0
  9342   0131F0  22E2               	addwfc	fsr1h,f,c
  9343   0131F2                     
  9344                           ;can/can.c: 383: int8_t DRV_CANFDSPI_WriteByteArray( uint16_t address,;can/can.c: 384:  
      +                                 uint8_t *txd, uint16_t nBytes);can/can.c: 385: {;can/can.c: 386:     uint16_t i;;
      +                          can/can.c: 387:     uint16_t spiTransferSize = nBytes + 2;
  9345                           ;stkvar	_nBytes @ sp[(-5)+-6]
  9346   0131F2  0EF5               	movlw	-11
  9347   0131F4  50E3               	movf	plusw1,w,c
  9348   0131F6  0F02               	addlw	2
  9349   0131F8  6E0B               	movwf	(btemp+10)^0,c
  9350   0131FA  0EF6               	movlw	-10
  9351   0131FC  CFE3 F00C          	movff	plusw1,btemp+11
  9352   013200  0E00               	movlw	0
  9353   013202  220C               	addwfc	(btemp+11)^0,f,c
  9354                           
  9355                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  9356   013204  0EFD               	movlw	-3
  9357   013206  C00B  FFE3         	movff	btemp+10,plusw1
  9358   01320A  0EFE               	movlw	-2
  9359   01320C  C00C  FFE3         	movff	btemp+11,plusw1
  9360   013210                     
  9361                           ;can/can.c: 391:     spiTransmitBuffer[0] = (uint8_t) ((0x02 << 4) + ((address >> 8) & 0
      +                          xF));
  9362                           ;stkvar	_address @ sp[(-5)+-2]
  9363   013210  0EFA               	movlw	250
  9364   013212  24E1               	addwf	fsr1l,w,c
  9365   013214  6ED9               	movwf	fsr2l,c
  9366   013216  0EFF               	movlw	255
  9367   013218  20E2               	addwfc	fsr1h,w,c
  9368   01321A  6EDA               	movwf	fsr2h,c
  9369   01321C  50DF               	movf	indf2,w,c
  9370   01321E  0B0F               	andlw	15
  9371   013220  0F20               	addlw	32
  9372   013222  0101               	movlb	1	; () banked
  9373   013224  6F00               	movwf	_spiTransmitBuffer& (0+255),b
  9374   013226                     
  9375                           ; BSR set to: 1
  9376                           ;can/can.c: 392:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
  9377                           ;stkvar	_address @ sp[(-5)+-2]
  9378   013226  0EF9               	movlw	-7
  9379   013228  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
  9380   01322C                     
  9381                           ; BSR set to: 1
  9382                           ;can/can.c: 395:     for (i = 2; i < spiTransferSize; i++) {
  9383   01322C  0E02               	movlw	2
  9384   01322E  6E0B               	movwf	(btemp+10)^0,c
  9385   013230  0E00               	movlw	0
  9386   013232  6E0C               	movwf	(btemp+11)^0,c
  9387                           
  9388                           ;stkvar	_i @ sp[(-5)+0]
  9389   013234  0EFB               	movlw	-5
  9390   013236  C00B  FFE3         	movff	btemp+10,plusw1
  9391   01323A  0EFC               	movlw	-4
  9392   01323C  C00C  FFE3         	movff	btemp+11,plusw1
  9393   013240  EF51  F099         	goto	l3981
  9394   013244                     l3977:
  9395                           
  9396                           ;can/can.c: 396:         spiTransmitBuffer[i] = txd[i - 2];
  9397                           ;stkvar	_i @ sp[(-5)+0]
  9398                           ;stkvar	_txd @ sp[(-5)+-4]
  9399   013244  0EF7               	movlw	-9
  9400   013246  CFE3 F00B          	movff	plusw1,btemp+10
  9401   01324A  0EF8               	movlw	-8
  9402   01324C  CFE3 F00C          	movff	plusw1,btemp+11
  9403   013250  0EFB               	movlw	-5
  9404   013252  50E3               	movf	plusw1,w,c
  9405   013254  260B               	addwf	(btemp+10)^0,f,c
  9406   013256  0EFC               	movlw	-4
  9407   013258  50E3               	movf	plusw1,w,c
  9408   01325A  220C               	addwfc	(btemp+11)^0,f,c
  9409   01325C  0EFE               	movlw	254
  9410   01325E  240B               	addwf	(btemp+10)^0,w,c
  9411   013260  6ED9               	movwf	fsr2l,c
  9412   013262  0EFF               	movlw	255
  9413   013264  200C               	addwfc	(btemp+11)^0,w,c
  9414   013266  6EDA               	movwf	fsr2h,c
  9415                           
  9416                           ;stkvar	_i @ sp[(-5)+0]
  9417   013268  0EFB               	movlw	-5
  9418   01326A  CFE3 F00B          	movff	plusw1,btemp+10
  9419   01326E  0EFC               	movlw	-4
  9420   013270  CFE3 F00C          	movff	plusw1,btemp+11
  9421   013274  0E00               	movlw	low _spiTransmitBuffer
  9422   013276  240B               	addwf	(btemp+10)^0,w,c
  9423   013278  6EE9               	movwf	fsr0l,c
  9424   01327A  0E01               	movlw	high _spiTransmitBuffer
  9425   01327C  200C               	addwfc	(btemp+11)^0,w,c
  9426   01327E  6EEA               	movwf	fsr0h,c
  9427   013280  CFDF FFEF          	movff	indf2,indf0
  9428   013284                     
  9429                           ;can/can.c: 397:     }
  9430                           ;stkvar	_i @ sp[(-5)+0]
  9431   013284  0EFB               	movlw	-5
  9432   013286  50E3               	movf	plusw1,w,c
  9433   013288  0F01               	addlw	1
  9434   01328A  6E01               	movwf	btemp^0,c
  9435   01328C  0EFB               	movlw	-5
  9436   01328E  C001  FFE3         	movff	btemp,plusw1
  9437   013292  6A01               	clrf	btemp^0,c
  9438   013294  0EFC               	movlw	-4
  9439   013296  50E3               	movf	plusw1,w,c
  9440   013298  2001               	addwfc	btemp^0,w,c
  9441   01329A  6E01               	movwf	btemp^0,c
  9442   01329C  0EFC               	movlw	-4
  9443   01329E  C001  FFE3         	movff	btemp,plusw1
  9444   0132A2                     l3981:
  9445                           
  9446                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  9447   0132A2  0EFD               	movlw	-3
  9448   0132A4  CFE3 F00B          	movff	plusw1,btemp+10
  9449   0132A8  0EFE               	movlw	-2
  9450   0132AA  CFE3 F00C          	movff	plusw1,btemp+11
  9451                           
  9452                           ;stkvar	_i @ sp[(-5)+0]
  9453   0132AE  0EFB               	movlw	-5
  9454   0132B0  CFE3 F009          	movff	plusw1,btemp+8
  9455   0132B4  0EFC               	movlw	-4
  9456   0132B6  CFE3 F00A          	movff	plusw1,btemp+9
  9457   0132BA  500B               	movf	(btemp+10)^0,w,c
  9458   0132BC  5C09               	subwf	(btemp+8)^0,w,c
  9459   0132BE  500C               	movf	(btemp+11)^0,w,c
  9460   0132C0  580A               	subwfb	(btemp+9)^0,w,c
  9461   0132C2  A0D8               	btfss	status,0,c
  9462   0132C4  EF66  F099         	goto	u1611
  9463   0132C8  EF68  F099         	goto	u1610
  9464   0132CC                     u1611:
  9465   0132CC  EF22  F099         	goto	l3977
  9466   0132D0                     u1610:
  9467   0132D0                     
  9468                           ;can/can.c: 399:     spiTransferError = SpiTransfer(spiTransmitBuffer, spiReceiveBuffer,
      +                           spiTransferSize);
  9469                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  9470   0132D0  0EFD               	movlw	-3
  9471   0132D2  CFE3 FFE6          	movff	plusw1,postinc1
  9472   0132D6  CFE3 FFE6          	movff	plusw1,postinc1
  9473   0132DA  0E00               	movlw	low _spiReceiveBuffer
  9474   0132DC  6EE6               	movwf	postinc1,c
  9475   0132DE  0E02               	movlw	high _spiReceiveBuffer
  9476   0132E0  6EE6               	movwf	postinc1,c
  9477   0132E2  0E00               	movlw	low _spiTransmitBuffer
  9478   0132E4  6EE6               	movwf	postinc1,c
  9479   0132E6  0E01               	movlw	high _spiTransmitBuffer
  9480   0132E8  6EE6               	movwf	postinc1,c
  9481   0132EA  ECF2  F09C         	call	_SpiTransfer	;wreg free
  9482                           
  9483                           ;stkvar	_spiTransferError @ sp[(-5)+4]
  9484   0132EE  0EFF               	movlw	-1
  9485   0132F0  C001  FFE3         	movff	btemp,plusw1
  9486   0132F4                     
  9487                           ;can/can.c: 401:     return spiTransferError;
  9488                           ;stkvar	_spiTransferError @ sp[(-5)+4]
  9489   0132F4  0EFF               	movlw	-1
  9490   0132F6  CFE3 F001          	movff	plusw1,btemp
  9491   0132FA                     
  9492                           ; _DRV_CANFDSPI_WriteByteArray: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 6, argsize = 6, vargsize = 0
  9493   0132FA  0EF5               	movlw	245
  9494   0132FC  26E1               	addwf	fsr1l,f,c
  9495   0132FE  0EFF               	movlw	255
  9496   013300  22E2               	addwfc	fsr1h,f,c
  9497   013302  0012               	return		;funcret
  9498   013304                     __end_of_DRV_CANFDSPI_WriteByteArray:
  9499                           	callstack 0
  9500                           
  9501 ;; *************** function _DRV_CANFDSPI_TransmitChannelUpdate *****************
  9502 ;; Defined at:
  9503 ;;		line 880 in file "can/can.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;  channel         1  [STACK] enum E5290
  9506 ;;  flush           1  [STACK] _Bool 
  9507 ;; Auto vars:     Size  Location     Type
  9508 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
  9509 ;;  a               2  [STACK] unsigned short 
  9510 ;;  spiTransferE    1  [STACK] char 
  9511 ;; Return value:  Size  Location     Type
  9512 ;;                  1  [STACK] char 
  9513 ;; Registers used:
  9514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  9515 ;; Tracked objects:
  9516 ;;		On entry : 0/0
  9517 ;;		On exit  : 0/0
  9518 ;;		Unchanged: 0/0
  9519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9524 ;;Total ram usage:        0 bytes
  9525 ;; Hardware stack levels used: 1
  9526 ;; Hardware stack levels required when called: 9
  9527 ;; This function calls:
  9528 ;;		_DRV_CANFDSPI_WriteByte
  9529 ;; This function is called by:
  9530 ;;		_DRV_CANFDSPI_TransmitChannelLoad
  9531 ;; This function uses a reentrant model
  9532 ;;
  9533                           
  9534                           	psect	text27
  9535   013E2C                     __ptext27:
  9536                           	callstack 0
  9537   013E2C                     _DRV_CANFDSPI_TransmitChannelUpdate:
  9538                           	callstack 0
  9539                           
  9540                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9541   013E2C  0E08               	movlw	8
  9542   013E2E  26E1               	addwf	fsr1l,f,c
  9543   013E30  0E00               	movlw	0
  9544   013E32  22E2               	addwfc	fsr1h,f,c
  9545   013E34                     
  9546                           ;can/can.c: 888:     a = 0x050 + (channel * (3*4)) + 1;
  9547                           ;stkvar	_channel @ sp[(-8)+-1]
  9548   013E34  0EF7               	movlw	-9
  9549   013E36  50E3               	movf	plusw1,w,c
  9550   013E38  0D0C               	mullw	12
  9551   013E3A  0E51               	movlw	81
  9552   013E3C  26F3               	addwf	243,f,c
  9553   013E3E  0E00               	movlw	0
  9554   013E40  22F4               	addwfc	244,f,c
  9555                           
  9556                           ;stkvar	_a @ sp[(-8)+5]
  9557   013E42  0EFD               	movlw	-3
  9558   013E44  CFF3 FFE3          	movff	prodl,plusw1
  9559   013E48  0EFE               	movlw	-2
  9560   013E4A  CFF4 FFE3          	movff	prodh,plusw1
  9561   013E4E                     
  9562                           ;can/can.c: 889:     ciFifoCon.word = 0;
  9563                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  9564   013E4E  0EF8               	movlw	-8
  9565   013E50  6AE3               	clrf	plusw1,c
  9566   013E52  0EF9               	movlw	-7
  9567   013E54  6AE3               	clrf	plusw1,c
  9568   013E56  0EFA               	movlw	-6
  9569   013E58  6AE3               	clrf	plusw1,c
  9570   013E5A  0EFB               	movlw	-5
  9571   013E5C  6AE3               	clrf	plusw1,c
  9572   013E5E                     
  9573                           ;can/can.c: 890:     ciFifoCon.txBF.UINC = 1;
  9574                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  9575   013E5E  0EF9               	movlw	249
  9576   013E60  24E1               	addwf	fsr1l,w,c
  9577   013E62  6ED9               	movwf	fsr2l,c
  9578   013E64  0EFF               	movlw	255
  9579   013E66  20E2               	addwfc	fsr1h,w,c
  9580   013E68  6EDA               	movwf	fsr2h,c
  9581   013E6A  80DF               	bsf	indf2,0,c
  9582   013E6C                     
  9583                           ;can/can.c: 893:     if (flush) {
  9584                           ;stkvar	_flush @ sp[(-8)+-2]
  9585   013E6C  0EF6               	movlw	-10
  9586   013E6E  50E3               	movf	plusw1,w,c
  9587   013E70  B4D8               	btfsc	status,2,c
  9588   013E72  EF3D  F09F         	goto	u1591
  9589   013E76  EF3F  F09F         	goto	u1590
  9590   013E7A                     u1591:
  9591   013E7A  EF46  F09F         	goto	l3937
  9592   013E7E                     u1590:
  9593   013E7E                     
  9594                           ;can/can.c: 894:         ciFifoCon.txBF.TxRequest = 1;
  9595                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  9596   013E7E  0EF9               	movlw	249
  9597   013E80  24E1               	addwf	fsr1l,w,c
  9598   013E82  6ED9               	movwf	fsr2l,c
  9599   013E84  0EFF               	movlw	255
  9600   013E86  20E2               	addwfc	fsr1h,w,c
  9601   013E88  6EDA               	movwf	fsr2h,c
  9602   013E8A  82DF               	bsf	indf2,1,c
  9603   013E8C                     l3937:
  9604                           
  9605                           ;can/can.c: 897:     spiTransferError = DRV_CANFDSPI_WriteByte( a, ciFifoCon.byte[1]);
  9606                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  9607   013E8C  0EF9               	movlw	249
  9608   013E8E  24E1               	addwf	fsr1l,w,c
  9609   013E90  6ED9               	movwf	fsr2l,c
  9610   013E92  0EFF               	movlw	255
  9611   013E94  20E2               	addwfc	fsr1h,w,c
  9612   013E96  6EDA               	movwf	fsr2h,c
  9613   013E98  50DF               	movf	indf2,w,c
  9614   013E9A  6EE6               	movwf	postinc1,c
  9615                           
  9616                           ;stkvar	_a @ sp[(-9)+5]
  9617   013E9C  0EFC               	movlw	-4
  9618   013E9E  CFE3 FFE6          	movff	plusw1,postinc1
  9619   013EA2  CFE3 FFE6          	movff	plusw1,postinc1
  9620   013EA6  ECDF  F0A2         	call	_DRV_CANFDSPI_WriteByte	;wreg free
  9621                           
  9622                           ;stkvar	_spiTransferError @ sp[(-8)+7]
  9623   013EAA  0EFF               	movlw	-1
  9624   013EAC  C001  FFE3         	movff	btemp,plusw1
  9625   013EB0                     
  9626                           ;can/can.c: 898:     if (spiTransferError) {
  9627                           ;stkvar	_spiTransferError @ sp[(-8)+7]
  9628   013EB0  0EFF               	movlw	-1
  9629   013EB2  50E3               	movf	plusw1,w,c
  9630   013EB4  B4D8               	btfsc	status,2,c
  9631   013EB6  EF5F  F09F         	goto	u1601
  9632   013EBA  EF61  F09F         	goto	u1600
  9633   013EBE                     u1601:
  9634   013EBE  EF65  F09F         	goto	l3945
  9635   013EC2                     u1600:
  9636   013EC2                     
  9637                           ;can/can.c: 899:         return -1;
  9638   013EC2  0EFF               	movlw	255
  9639   013EC4  6E01               	movwf	btemp^0,c
  9640   013EC6  EF68  F09F         	goto	l293
  9641   013ECA                     l3945:
  9642                           
  9643                           ;can/can.c: 902:     return spiTransferError;
  9644                           ;stkvar	_spiTransferError @ sp[(-8)+7]
  9645   013ECA  0EFF               	movlw	-1
  9646   013ECC  CFE3 F001          	movff	plusw1,btemp
  9647   013ED0                     l293:
  9648                           
  9649                           ; _DRV_CANFDSPI_TransmitChannelUpdate: autosize = 8, savesize = 0, parsavesize = 0, temp
      +                          size = 0 parsize = 2, argsize = 2, vargsize = 0
  9650   013ED0  0EF6               	movlw	246
  9651   013ED2  26E1               	addwf	fsr1l,f,c
  9652   013ED4  0EFF               	movlw	255
  9653   013ED6  22E2               	addwfc	fsr1h,f,c
  9654   013ED8  0012               	return		;funcret
  9655   013EDA                     __end_of_DRV_CANFDSPI_TransmitChannelUpdate:
  9656                           	callstack 0
  9657                           
  9658 ;; *************** function _DRV_CANFDSPI_ReadWordArray *****************
  9659 ;; Defined at:
  9660 ;;		line 405 in file "can/can.c"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;  address         2  [STACK] unsigned short 
  9663 ;;  rxd             2  [STACK] PTR unsigned long 
  9664 ;;		 -> w(12), fifoReg(12), fifoReg(12), fifoReg(8), 
  9665 ;;		 -> fifoReg(12), 
  9666 ;;  nWords          2  [STACK] unsigned short 
  9667 ;; Auto vars:     Size  Location     Type
  9668 ;;  w               4  [STACK] struct _REG_t
  9669 ;;  i               2  [STACK] unsigned short 
  9670 ;;  j               2  [STACK] unsigned short 
  9671 ;;  spiTransferS    2  [STACK] unsigned short 
  9672 ;;  n               2  [STACK] unsigned short 
  9673 ;;  spiTransferE    1  [STACK] char 
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1  [STACK] char 
  9676 ;; Registers used:
  9677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;Total ram usage:        0 bytes
  9688 ;; Hardware stack levels used: 1
  9689 ;; Hardware stack levels required when called: 8
  9690 ;; This function calls:
  9691 ;;		_SpiTransfer
  9692 ;; This function is called by:
  9693 ;;		_DRV_CANFDSPI_TransmitChannelLoad
  9694 ;;		_DRV_CANFDSPI_ReceiveMessageGet
  9695 ;; This function uses a reentrant model
  9696 ;;
  9697                           
  9698                           	psect	text28
  9699   0114B2                     __ptext28:
  9700                           	callstack 0
  9701   0114B2                     _DRV_CANFDSPI_ReadWordArray:
  9702                           	callstack 0
  9703                           
  9704                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9705   0114B2  0E0D               	movlw	13
  9706   0114B4  26E1               	addwf	fsr1l,f,c
  9707   0114B6  0E00               	movlw	0
  9708   0114B8  22E2               	addwfc	fsr1h,f,c
  9709   0114BA                     
  9710                           ;can/can.c: 405: int8_t DRV_CANFDSPI_ReadWordArray( uint16_t address,;can/can.c: 406:   
      +                                uint32_t *rxd, uint16_t nWords);can/can.c: 407: {;can/can.c: 408:     uint16_t i, 
      +                          j, n;;can/can.c: 409:     REG_t w;;can/can.c: 410:     uint16_t spiTransferSize = nWords
      +                           * 4 + 2;
  9711                           ;stkvar	_nWords @ sp[(-13)+-6]
  9712   0114BA  0EED               	movlw	-19
  9713   0114BC  CFE3 F00B          	movff	plusw1,btemp+10
  9714   0114C0  0EEE               	movlw	-18
  9715   0114C2  CFE3 F00C          	movff	plusw1,btemp+11
  9716   0114C6  90D8               	bcf	status,0,c
  9717   0114C8  360B               	rlcf	(btemp+10)^0,f,c
  9718   0114CA  360C               	rlcf	(btemp+11)^0,f,c
  9719   0114CC  90D8               	bcf	status,0,c
  9720   0114CE  360B               	rlcf	(btemp+10)^0,f,c
  9721   0114D0  360C               	rlcf	(btemp+11)^0,f,c
  9722   0114D2  0E02               	movlw	2
  9723   0114D4  260B               	addwf	(btemp+10)^0,f,c
  9724   0114D6  0E00               	movlw	0
  9725   0114D8  220C               	addwfc	(btemp+11)^0,f,c
  9726                           
  9727                           ;stkvar	_spiTransferSize @ sp[(-13)+8]
  9728   0114DA  0EFB               	movlw	-5
  9729   0114DC  C00B  FFE3         	movff	btemp+10,plusw1
  9730   0114E0  0EFC               	movlw	-4
  9731   0114E2  C00C  FFE3         	movff	btemp+11,plusw1
  9732   0114E6                     
  9733                           ;can/can.c: 414:     spiTransmitBuffer[0] = (0x03 << 4) + ((address >> 8) & 0xF);
  9734                           ;stkvar	_address @ sp[(-13)+-2]
  9735   0114E6  0EF2               	movlw	242
  9736   0114E8  24E1               	addwf	fsr1l,w,c
  9737   0114EA  6ED9               	movwf	fsr2l,c
  9738   0114EC  0EFF               	movlw	255
  9739   0114EE  20E2               	addwfc	fsr1h,w,c
  9740   0114F0  6EDA               	movwf	fsr2h,c
  9741   0114F2  50DF               	movf	indf2,w,c
  9742   0114F4  0B0F               	andlw	15
  9743   0114F6  0F30               	addlw	48
  9744   0114F8  0101               	movlb	1	; () banked
  9745   0114FA  6F00               	movwf	_spiTransmitBuffer& (0+255),b
  9746   0114FC                     
  9747                           ; BSR set to: 1
  9748                           ;can/can.c: 415:     spiTransmitBuffer[1] = address & 0xFF;
  9749                           ;stkvar	_address @ sp[(-13)+-2]
  9750   0114FC  0EF1               	movlw	-15
  9751   0114FE  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
  9752   011502                     
  9753                           ; BSR set to: 1
  9754                           ;can/can.c: 418:     for (i = 2; i < spiTransferSize; i++) {
  9755   011502  0E02               	movlw	2
  9756   011504  6E0B               	movwf	(btemp+10)^0,c
  9757   011506  0E00               	movlw	0
  9758   011508  6E0C               	movwf	(btemp+11)^0,c
  9759                           
  9760                           ;stkvar	_i @ sp[(-13)+4]
  9761   01150A  0EF7               	movlw	-9
  9762   01150C  C00B  FFE3         	movff	btemp+10,plusw1
  9763   011510  0EF8               	movlw	-8
  9764   011512  C00C  FFE3         	movff	btemp+11,plusw1
  9765   011516  EFA9  F08A         	goto	l4003
  9766   01151A                     l3999:
  9767                           
  9768                           ;can/can.c: 419:         spiTransmitBuffer[i] = 0;
  9769                           ;stkvar	_i @ sp[(-13)+4]
  9770   01151A  0EF7               	movlw	-9
  9771   01151C  CFE3 F00B          	movff	plusw1,btemp+10
  9772   011520  0EF8               	movlw	-8
  9773   011522  CFE3 F00C          	movff	plusw1,btemp+11
  9774   011526  0E00               	movlw	low _spiTransmitBuffer
  9775   011528  240B               	addwf	(btemp+10)^0,w,c
  9776   01152A  6ED9               	movwf	fsr2l,c
  9777   01152C  0E01               	movlw	high _spiTransmitBuffer
  9778   01152E  200C               	addwfc	(btemp+11)^0,w,c
  9779   011530  6EDA               	movwf	fsr2h,c
  9780   011532  6ADF               	clrf	indf2,c
  9781   011534                     
  9782                           ;can/can.c: 420:     }
  9783                           ;stkvar	_i @ sp[(-13)+4]
  9784   011534  0EF7               	movlw	-9
  9785   011536  50E3               	movf	plusw1,w,c
  9786   011538  0F01               	addlw	1
  9787   01153A  6E01               	movwf	btemp^0,c
  9788   01153C  0EF7               	movlw	-9
  9789   01153E  C001  FFE3         	movff	btemp,plusw1
  9790   011542  6A01               	clrf	btemp^0,c
  9791   011544  0EF8               	movlw	-8
  9792   011546  50E3               	movf	plusw1,w,c
  9793   011548  2001               	addwfc	btemp^0,w,c
  9794   01154A  6E01               	movwf	btemp^0,c
  9795   01154C  0EF8               	movlw	-8
  9796   01154E  C001  FFE3         	movff	btemp,plusw1
  9797   011552                     l4003:
  9798                           
  9799                           ;stkvar	_spiTransferSize @ sp[(-13)+8]
  9800   011552  0EFB               	movlw	-5
  9801   011554  CFE3 F00B          	movff	plusw1,btemp+10
  9802   011558  0EFC               	movlw	-4
  9803   01155A  CFE3 F00C          	movff	plusw1,btemp+11
  9804                           
  9805                           ;stkvar	_i @ sp[(-13)+4]
  9806   01155E  0EF7               	movlw	-9
  9807   011560  CFE3 F009          	movff	plusw1,btemp+8
  9808   011564  0EF8               	movlw	-8
  9809   011566  CFE3 F00A          	movff	plusw1,btemp+9
  9810   01156A  500B               	movf	(btemp+10)^0,w,c
  9811   01156C  5C09               	subwf	(btemp+8)^0,w,c
  9812   01156E  500C               	movf	(btemp+11)^0,w,c
  9813   011570  580A               	subwfb	(btemp+9)^0,w,c
  9814   011572  A0D8               	btfss	status,0,c
  9815   011574  EFBE  F08A         	goto	u1621
  9816   011578  EFC0  F08A         	goto	u1620
  9817   01157C                     u1621:
  9818   01157C  EF8D  F08A         	goto	l3999
  9819   011580                     u1620:
  9820   011580                     
  9821                           ;can/can.c: 422:     spiTransferError = SpiTransfer( spiTransmitBuffer, spiReceiveBuffer
      +                          , spiTransferSize);
  9822                           ;stkvar	_spiTransferSize @ sp[(-13)+8]
  9823   011580  0EFB               	movlw	-5
  9824   011582  CFE3 FFE6          	movff	plusw1,postinc1
  9825   011586  CFE3 FFE6          	movff	plusw1,postinc1
  9826   01158A  0E00               	movlw	low _spiReceiveBuffer
  9827   01158C  6EE6               	movwf	postinc1,c
  9828   01158E  0E02               	movlw	high _spiReceiveBuffer
  9829   011590  6EE6               	movwf	postinc1,c
  9830   011592  0E00               	movlw	low _spiTransmitBuffer
  9831   011594  6EE6               	movwf	postinc1,c
  9832   011596  0E01               	movlw	high _spiTransmitBuffer
  9833   011598  6EE6               	movwf	postinc1,c
  9834   01159A  ECF2  F09C         	call	_SpiTransfer	;wreg free
  9835                           
  9836                           ;stkvar	_spiTransferError @ sp[(-13)+12]
  9837   01159E  0EFF               	movlw	-1
  9838   0115A0  C001  FFE3         	movff	btemp,plusw1
  9839   0115A4                     
  9840                           ;can/can.c: 423:     if (spiTransferError) {
  9841                           ;stkvar	_spiTransferError @ sp[(-13)+12]
  9842   0115A4  0EFF               	movlw	-1
  9843   0115A6  50E3               	movf	plusw1,w,c
  9844   0115A8  B4D8               	btfsc	status,2,c
  9845   0115AA  EFD9  F08A         	goto	u1631
  9846   0115AE  EFDB  F08A         	goto	u1630
  9847   0115B2                     u1631:
  9848   0115B2  EFE0  F08A         	goto	l4013
  9849   0115B6                     u1630:
  9850   0115B6                     l4009:
  9851                           
  9852                           ;can/can.c: 424:         return spiTransferError;
  9853                           ;stkvar	_spiTransferError @ sp[(-13)+12]
  9854   0115B6  0EFF               	movlw	-1
  9855   0115B8  CFE3 F001          	movff	plusw1,btemp
  9856   0115BC  EF98  F08B         	goto	l206
  9857   0115C0                     l4013:
  9858                           
  9859                           ;can/can.c: 428:     n = 2;
  9860   0115C0  0E02               	movlw	2
  9861   0115C2  6E0B               	movwf	(btemp+10)^0,c
  9862   0115C4  0E00               	movlw	0
  9863   0115C6  6E0C               	movwf	(btemp+11)^0,c
  9864                           
  9865                           ;stkvar	_n @ sp[(-13)+10]
  9866   0115C8  0EFD               	movlw	-3
  9867   0115CA  C00B  FFE3         	movff	btemp+10,plusw1
  9868   0115CE  0EFE               	movlw	-2
  9869   0115D0  C00C  FFE3         	movff	btemp+11,plusw1
  9870   0115D4                     
  9871                           ;can/can.c: 429:     for (i = 0; i < nWords; i++) {
  9872                           ;stkvar	_i @ sp[(-13)+4]
  9873   0115D4  0EF7               	movlw	-9
  9874   0115D6  6AE3               	clrf	plusw1,c
  9875   0115D8  0EF8               	movlw	-8
  9876   0115DA  6AE3               	clrf	plusw1,c
  9877   0115DC  EF7F  F08B         	goto	l4035
  9878   0115E0                     l4017:
  9879                           
  9880                           ;can/can.c: 430:         w.word = 0;
  9881                           ;stkvar	_w @ sp[(-13)+0]
  9882   0115E0  0EF3               	movlw	-13
  9883   0115E2  6AE3               	clrf	plusw1,c
  9884   0115E4  0EF4               	movlw	-12
  9885   0115E6  6AE3               	clrf	plusw1,c
  9886   0115E8  0EF5               	movlw	-11
  9887   0115EA  6AE3               	clrf	plusw1,c
  9888   0115EC  0EF6               	movlw	-10
  9889   0115EE  6AE3               	clrf	plusw1,c
  9890                           
  9891                           ;can/can.c: 431:         for (j = 0; j < 4; j++, n++) {
  9892                           ;stkvar	_j @ sp[(-13)+6]
  9893   0115F0  0EF9               	movlw	-7
  9894   0115F2  6AE3               	clrf	plusw1,c
  9895   0115F4  0EFA               	movlw	-6
  9896   0115F6  6AE3               	clrf	plusw1,c
  9897   0115F8                     l4023:
  9898                           
  9899                           ;can/can.c: 432:             w.byte[j] = spiReceiveBuffer[n];
  9900                           ;stkvar	_n @ sp[(-13)+10]
  9901   0115F8  0EFD               	movlw	-3
  9902   0115FA  CFE3 F00B          	movff	plusw1,btemp+10
  9903   0115FE  0EFE               	movlw	-2
  9904   011600  CFE3 F00C          	movff	plusw1,btemp+11
  9905   011604  0E00               	movlw	low _spiReceiveBuffer
  9906   011606  240B               	addwf	(btemp+10)^0,w,c
  9907   011608  6ED9               	movwf	fsr2l,c
  9908   01160A  0E02               	movlw	high _spiReceiveBuffer
  9909   01160C  200C               	addwfc	(btemp+11)^0,w,c
  9910   01160E  6EDA               	movwf	fsr2h,c
  9911                           
  9912                           ;stkvar	_j @ sp[(-13)+6]
  9913   011610  0EF9               	movlw	-7
  9914   011612  CFE3 F00B          	movff	plusw1,btemp+10
  9915   011616  0EFA               	movlw	-6
  9916   011618  CFE3 F00C          	movff	plusw1,btemp+11
  9917                           
  9918                           ;stkvar	_w @ sp[(-13)+0]
  9919   01161C  0EF3               	movlw	243
  9920   01161E  24E1               	addwf	fsr1l,w,c
  9921   011620  6E09               	movwf	(btemp+8)^0,c
  9922   011622  0EFF               	movlw	255
  9923   011624  20E2               	addwfc	fsr1h,w,c
  9924   011626  6E0A               	movwf	(btemp+9)^0,c
  9925   011628  500B               	movf	(btemp+10)^0,w,c
  9926   01162A  2409               	addwf	(btemp+8)^0,w,c
  9927   01162C  6EE9               	movwf	fsr0l,c
  9928   01162E  500C               	movf	(btemp+11)^0,w,c
  9929   011630  200A               	addwfc	(btemp+9)^0,w,c
  9930   011632  6EEA               	movwf	fsr0h,c
  9931   011634  CFDF FFEF          	movff	indf2,indf0
  9932   011638                     
  9933                           ;can/can.c: 433:         }
  9934                           ;stkvar	_j @ sp[(-13)+6]
  9935   011638  0EF9               	movlw	-7
  9936   01163A  50E3               	movf	plusw1,w,c
  9937   01163C  0F01               	addlw	1
  9938   01163E  6E01               	movwf	btemp^0,c
  9939   011640  0EF9               	movlw	-7
  9940   011642  C001  FFE3         	movff	btemp,plusw1
  9941   011646  6A01               	clrf	btemp^0,c
  9942   011648  0EFA               	movlw	-6
  9943   01164A  50E3               	movf	plusw1,w,c
  9944   01164C  2001               	addwfc	btemp^0,w,c
  9945   01164E  6E01               	movwf	btemp^0,c
  9946   011650  0EFA               	movlw	-6
  9947   011652  C001  FFE3         	movff	btemp,plusw1
  9948   011656                     
  9949                           ;stkvar	_n @ sp[(-13)+10]
  9950   011656  0EFD               	movlw	-3
  9951   011658  50E3               	movf	plusw1,w,c
  9952   01165A  0F01               	addlw	1
  9953   01165C  6E01               	movwf	btemp^0,c
  9954   01165E  0EFD               	movlw	-3
  9955   011660  C001  FFE3         	movff	btemp,plusw1
  9956   011664  6A01               	clrf	btemp^0,c
  9957   011666  0EFE               	movlw	-2
  9958   011668  50E3               	movf	plusw1,w,c
  9959   01166A  2001               	addwfc	btemp^0,w,c
  9960   01166C  6E01               	movwf	btemp^0,c
  9961   01166E  0EFE               	movlw	-2
  9962   011670  C001  FFE3         	movff	btemp,plusw1
  9963   011674                     
  9964                           ;stkvar	_j @ sp[(-13)+6]
  9965   011674  0EFA               	movlw	-6
  9966   011676  50E3               	movf	plusw1,w,c
  9967   011678  E10C               	bnz	u1640
  9968   01167A  0EF9               	movlw	-7
  9969   01167C  CFE3 F001          	movff	plusw1,btemp
  9970   011680  0E04               	movlw	4
  9971   011682  5E01               	subwf	btemp^0,f,c
  9972   011684  A0D8               	btfss	status,0,c
  9973   011686  EF47  F08B         	goto	u1641
  9974   01168A  EF49  F08B         	goto	u1640
  9975   01168E                     u1641:
  9976   01168E  EFFC  F08A         	goto	l4023
  9977   011692                     u1640:
  9978   011692                     
  9979                           ;can/can.c: 434:         rxd[i] = w.word;
  9980                           ;stkvar	_w @ sp[(-13)+0]
  9981   011692  50E1               	movf	fsr1l,w,c
  9982   011694  0FF3               	addlw	-13
  9983   011696  6ED9               	movwf	fsr2l,c
  9984   011698  50E2               	movf	fsr1h,w,c
  9985   01169A  6EDA               	movwf	fsr2h,c
  9986   01169C  0EFF               	movlw	255
  9987   01169E  22DA               	addwfc	fsr2h,f,c
  9988                           
  9989                           ;stkvar	_i @ sp[(-13)+4]
  9990   0116A0  0EF7               	movlw	-9
  9991   0116A2  CFE3 F00B          	movff	plusw1,btemp+10
  9992   0116A6  0EF8               	movlw	-8
  9993   0116A8  CFE3 F00C          	movff	plusw1,btemp+11
  9994   0116AC  90D8               	bcf	status,0,c
  9995   0116AE  360B               	rlcf	(btemp+10)^0,f,c
  9996   0116B0  360C               	rlcf	(btemp+11)^0,f,c
  9997   0116B2  90D8               	bcf	status,0,c
  9998   0116B4  360B               	rlcf	(btemp+10)^0,f,c
  9999   0116B6  360C               	rlcf	(btemp+11)^0,f,c
 10000                           
 10001                           ;stkvar	_rxd @ sp[(-13)+-4]
 10002   0116B8  0EEF               	movlw	-17
 10003   0116BA  CFE3 F009          	movff	plusw1,btemp+8
 10004   0116BE  0EF0               	movlw	-16
 10005   0116C0  CFE3 F00A          	movff	plusw1,btemp+9
 10006   0116C4  500B               	movf	(btemp+10)^0,w,c
 10007   0116C6  2409               	addwf	(btemp+8)^0,w,c
 10008   0116C8  6EE9               	movwf	fsr0l,c
 10009   0116CA  500C               	movf	(btemp+11)^0,w,c
 10010   0116CC  200A               	addwfc	(btemp+9)^0,w,c
 10011   0116CE  6EEA               	movwf	fsr0h,c
 10012   0116D0  CFDE FFEE          	movff	postinc2,postinc0
 10013   0116D4  CFDE FFEE          	movff	postinc2,postinc0
 10014   0116D8  CFDE FFEE          	movff	postinc2,postinc0
 10015   0116DC  CFDE FFEE          	movff	postinc2,postinc0
 10016   0116E0                     
 10017                           ;can/can.c: 435:     }
 10018                           ;stkvar	_i @ sp[(-13)+4]
 10019   0116E0  0EF7               	movlw	-9
 10020   0116E2  50E3               	movf	plusw1,w,c
 10021   0116E4  0F01               	addlw	1
 10022   0116E6  6E01               	movwf	btemp^0,c
 10023   0116E8  0EF7               	movlw	-9
 10024   0116EA  C001  FFE3         	movff	btemp,plusw1
 10025   0116EE  6A01               	clrf	btemp^0,c
 10026   0116F0  0EF8               	movlw	-8
 10027   0116F2  50E3               	movf	plusw1,w,c
 10028   0116F4  2001               	addwfc	btemp^0,w,c
 10029   0116F6  6E01               	movwf	btemp^0,c
 10030   0116F8  0EF8               	movlw	-8
 10031   0116FA  C001  FFE3         	movff	btemp,plusw1
 10032   0116FE                     l4035:
 10033                           
 10034                           ;stkvar	_nWords @ sp[(-13)+-6]
 10035   0116FE  0EED               	movlw	-19
 10036   011700  CFE3 F00B          	movff	plusw1,btemp+10
 10037   011704  0EEE               	movlw	-18
 10038   011706  CFE3 F00C          	movff	plusw1,btemp+11
 10039                           
 10040                           ;stkvar	_i @ sp[(-13)+4]
 10041   01170A  0EF7               	movlw	-9
 10042   01170C  CFE3 F009          	movff	plusw1,btemp+8
 10043   011710  0EF8               	movlw	-8
 10044   011712  CFE3 F00A          	movff	plusw1,btemp+9
 10045   011716  500B               	movf	(btemp+10)^0,w,c
 10046   011718  5C09               	subwf	(btemp+8)^0,w,c
 10047   01171A  500C               	movf	(btemp+11)^0,w,c
 10048   01171C  580A               	subwfb	(btemp+9)^0,w,c
 10049   01171E  A0D8               	btfss	status,0,c
 10050   011720  EF94  F08B         	goto	u1651
 10051   011724  EF96  F08B         	goto	u1650
 10052   011728                     u1651:
 10053   011728  EFF0  F08A         	goto	l4017
 10054   01172C                     u1650:
 10055   01172C  EFDB  F08A         	goto	l4009
 10056   011730                     l206:
 10057                           
 10058                           ; _DRV_CANFDSPI_ReadWordArray: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 6, argsize = 6, vargsize = 0
 10059   011730  0EED               	movlw	237
 10060   011732  26E1               	addwf	fsr1l,f,c
 10061   011734  0EFF               	movlw	255
 10062   011736  22E2               	addwfc	fsr1h,f,c
 10063   011738  0012               	return		;funcret
 10064   01173A                     __end_of_DRV_CANFDSPI_ReadWordArray:
 10065                           	callstack 0
 10066                           
 10067 ;; *************** function _DRV_CANFDSPI_DlcToDataBytes *****************
 10068 ;; Defined at:
 10069 ;;		line 3766 in file "can/can.c"
 10070 ;; Parameters:    Size  Location     Type
 10071 ;;  dlc             1  [STACK] enum E5464
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;  dataBytesInO    4  [STACK] unsigned long 
 10074 ;; Return value:  Size  Location     Type
 10075 ;;                  4  [STACK] unsigned long 
 10076 ;; Registers used:
 10077 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+
      +8, btemp+9, btemp+10, btemp+11
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10087 ;;Total ram usage:        0 bytes
 10088 ;; Hardware stack levels used: 1
 10089 ;; Hardware stack levels required when called: 7
 10090 ;; This function calls:
 10091 ;;		Nothing
 10092 ;; This function is called by:
 10093 ;;		_DRV_CANFDSPI_TransmitChannelLoad
 10094 ;; This function uses a reentrant model
 10095 ;;
 10096                           
 10097                           	psect	text29
 10098   012072                     __ptext29:
 10099                           	callstack 0
 10100   012072                     _DRV_CANFDSPI_DlcToDataBytes:
 10101                           	callstack 0
 10102                           
 10103                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10104   012072  52E6               	movf	postinc1,f,c
 10105   012074  52E6               	movf	postinc1,f,c
 10106   012076  52E6               	movf	postinc1,f,c
 10107   012078  52E6               	movf	postinc1,f,c
 10108   01207A                     
 10109                           ;can/can.c: 3766: uint32_t DRV_CANFDSPI_DlcToDataBytes(CAN_DLC dlc);can/can.c: 3767: {;c
      +                          an/can.c: 3768:     uint32_t dataBytesInObject = 0;
 10110                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10111   01207A  0EFC               	movlw	-4
 10112   01207C  6AE3               	clrf	plusw1,c
 10113   01207E  0EFD               	movlw	-3
 10114   012080  6AE3               	clrf	plusw1,c
 10115   012082  0EFE               	movlw	-2
 10116   012084  6AE3               	clrf	plusw1,c
 10117   012086  0EFF               	movlw	-1
 10118   012088  6AE3               	clrf	plusw1,c
 10119   01208A                     
 10120                           ;can/can.c: 3770:     __nop();
 10121   01208A  0000               	nop	
 10122   01208C                     
 10123                           ;can/can.c: 3771:     __nop();
 10124   01208C  0000               	nop	
 10125   01208E                     
 10126                           ;can/can.c: 3773:     if (dlc < CAN_DLC_12) {
 10127                           ;stkvar	_dlc @ sp[(-4)+-1]
 10128   01208E  0EFB               	movlw	-5
 10129   012090  CFE3 F001          	movff	plusw1,btemp
 10130   012094  0E09               	movlw	9
 10131   012096  6001               	cpfslt	btemp^0,c
 10132   012098  EF50  F090         	goto	u1661
 10133   01209C  EF52  F090         	goto	u1660
 10134   0120A0                     u1661:
 10135   0120A0  EFED  F090         	goto	l4067
 10136   0120A4                     u1660:
 10137   0120A4                     
 10138                           ;can/can.c: 3774:         dataBytesInObject = dlc;
 10139                           ;stkvar	_dlc @ sp[(-4)+-1]
 10140   0120A4  0EFB               	movlw	-5
 10141   0120A6  CFE3 F00C          	movff	plusw1,btemp+11
 10142   0120AA  C00C  F005         	movff	btemp+11,btemp+4
 10143   0120AE  6A06               	clrf	(btemp+5)^0,c
 10144   0120B0  6A07               	clrf	(btemp+6)^0,c
 10145   0120B2  6A08               	clrf	(btemp+7)^0,c
 10146                           
 10147                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10148   0120B4  0EFC               	movlw	-4
 10149   0120B6  C005  FFE3         	movff	btemp+4,plusw1
 10150   0120BA  0EFD               	movlw	-3
 10151   0120BC  C006  FFE3         	movff	btemp+5,plusw1
 10152   0120C0  0EFE               	movlw	-2
 10153   0120C2  C007  FFE3         	movff	btemp+6,plusw1
 10154   0120C6  0EFF               	movlw	-1
 10155   0120C8  C008  FFE3         	movff	btemp+7,plusw1
 10156                           
 10157                           ;can/can.c: 3775:     } else {
 10158   0120CC  EF17  F091         	goto	l4069
 10159   0120D0                     l4051:
 10160                           
 10161                           ;can/can.c: 3778:                 dataBytesInObject = 12;
 10162   0120D0  0E0C               	movlw	12
 10163   0120D2  6E09               	movwf	(btemp+8)^0,c
 10164   0120D4  6A0A               	clrf	(btemp+9)^0,c
 10165   0120D6  6A0B               	clrf	(btemp+10)^0,c
 10166   0120D8  6A0C               	clrf	(btemp+11)^0,c
 10167                           
 10168                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10169   0120DA  0EFC               	movlw	-4
 10170   0120DC  C009  FFE3         	movff	btemp+8,plusw1
 10171   0120E0  0EFD               	movlw	-3
 10172   0120E2  C00A  FFE3         	movff	btemp+9,plusw1
 10173   0120E6  0EFE               	movlw	-2
 10174   0120E8  C00B  FFE3         	movff	btemp+10,plusw1
 10175   0120EC  0EFF               	movlw	-1
 10176   0120EE  C00C  FFE3         	movff	btemp+11,plusw1
 10177                           
 10178                           ;can/can.c: 3779:                 break;
 10179   0120F2  EF17  F091         	goto	l4069
 10180   0120F6                     l4053:
 10181                           
 10182                           ;can/can.c: 3781:                 dataBytesInObject = 16;
 10183   0120F6  0E10               	movlw	16
 10184   0120F8  6E09               	movwf	(btemp+8)^0,c
 10185   0120FA  6A0A               	clrf	(btemp+9)^0,c
 10186   0120FC  6A0B               	clrf	(btemp+10)^0,c
 10187   0120FE  6A0C               	clrf	(btemp+11)^0,c
 10188                           
 10189                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10190   012100  0EFC               	movlw	-4
 10191   012102  C009  FFE3         	movff	btemp+8,plusw1
 10192   012106  0EFD               	movlw	-3
 10193   012108  C00A  FFE3         	movff	btemp+9,plusw1
 10194   01210C  0EFE               	movlw	-2
 10195   01210E  C00B  FFE3         	movff	btemp+10,plusw1
 10196   012112  0EFF               	movlw	-1
 10197   012114  C00C  FFE3         	movff	btemp+11,plusw1
 10198                           
 10199                           ;can/can.c: 3782:                 break;
 10200   012118  EF17  F091         	goto	l4069
 10201   01211C                     l4055:
 10202                           
 10203                           ;can/can.c: 3784:                 dataBytesInObject = 20;
 10204   01211C  0E14               	movlw	20
 10205   01211E  6E09               	movwf	(btemp+8)^0,c
 10206   012120  6A0A               	clrf	(btemp+9)^0,c
 10207   012122  6A0B               	clrf	(btemp+10)^0,c
 10208   012124  6A0C               	clrf	(btemp+11)^0,c
 10209                           
 10210                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10211   012126  0EFC               	movlw	-4
 10212   012128  C009  FFE3         	movff	btemp+8,plusw1
 10213   01212C  0EFD               	movlw	-3
 10214   01212E  C00A  FFE3         	movff	btemp+9,plusw1
 10215   012132  0EFE               	movlw	-2
 10216   012134  C00B  FFE3         	movff	btemp+10,plusw1
 10217   012138  0EFF               	movlw	-1
 10218   01213A  C00C  FFE3         	movff	btemp+11,plusw1
 10219                           
 10220                           ;can/can.c: 3785:                 break;
 10221   01213E  EF17  F091         	goto	l4069
 10222   012142                     l4057:
 10223                           
 10224                           ;can/can.c: 3787:                 dataBytesInObject = 24;
 10225   012142  0E18               	movlw	24
 10226   012144  6E09               	movwf	(btemp+8)^0,c
 10227   012146  6A0A               	clrf	(btemp+9)^0,c
 10228   012148  6A0B               	clrf	(btemp+10)^0,c
 10229   01214A  6A0C               	clrf	(btemp+11)^0,c
 10230                           
 10231                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10232   01214C  0EFC               	movlw	-4
 10233   01214E  C009  FFE3         	movff	btemp+8,plusw1
 10234   012152  0EFD               	movlw	-3
 10235   012154  C00A  FFE3         	movff	btemp+9,plusw1
 10236   012158  0EFE               	movlw	-2
 10237   01215A  C00B  FFE3         	movff	btemp+10,plusw1
 10238   01215E  0EFF               	movlw	-1
 10239   012160  C00C  FFE3         	movff	btemp+11,plusw1
 10240                           
 10241                           ;can/can.c: 3788:                 break;
 10242   012164  EF17  F091         	goto	l4069
 10243   012168                     l4059:
 10244                           
 10245                           ;can/can.c: 3790:                 dataBytesInObject = 32;
 10246   012168  0E20               	movlw	32
 10247   01216A  6E09               	movwf	(btemp+8)^0,c
 10248   01216C  6A0A               	clrf	(btemp+9)^0,c
 10249   01216E  6A0B               	clrf	(btemp+10)^0,c
 10250   012170  6A0C               	clrf	(btemp+11)^0,c
 10251                           
 10252                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10253   012172  0EFC               	movlw	-4
 10254   012174  C009  FFE3         	movff	btemp+8,plusw1
 10255   012178  0EFD               	movlw	-3
 10256   01217A  C00A  FFE3         	movff	btemp+9,plusw1
 10257   01217E  0EFE               	movlw	-2
 10258   012180  C00B  FFE3         	movff	btemp+10,plusw1
 10259   012184  0EFF               	movlw	-1
 10260   012186  C00C  FFE3         	movff	btemp+11,plusw1
 10261                           
 10262                           ;can/can.c: 3791:                 break;
 10263   01218A  EF17  F091         	goto	l4069
 10264   01218E                     l4061:
 10265                           
 10266                           ;can/can.c: 3793:                 dataBytesInObject = 48;
 10267   01218E  0E30               	movlw	48
 10268   012190  6E09               	movwf	(btemp+8)^0,c
 10269   012192  6A0A               	clrf	(btemp+9)^0,c
 10270   012194  6A0B               	clrf	(btemp+10)^0,c
 10271   012196  6A0C               	clrf	(btemp+11)^0,c
 10272                           
 10273                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10274   012198  0EFC               	movlw	-4
 10275   01219A  C009  FFE3         	movff	btemp+8,plusw1
 10276   01219E  0EFD               	movlw	-3
 10277   0121A0  C00A  FFE3         	movff	btemp+9,plusw1
 10278   0121A4  0EFE               	movlw	-2
 10279   0121A6  C00B  FFE3         	movff	btemp+10,plusw1
 10280   0121AA  0EFF               	movlw	-1
 10281   0121AC  C00C  FFE3         	movff	btemp+11,plusw1
 10282                           
 10283                           ;can/can.c: 3794:                 break;
 10284   0121B0  EF17  F091         	goto	l4069
 10285   0121B4                     l4063:
 10286                           
 10287                           ;can/can.c: 3796:                 dataBytesInObject = 64;
 10288   0121B4  0E40               	movlw	64
 10289   0121B6  6E09               	movwf	(btemp+8)^0,c
 10290   0121B8  6A0A               	clrf	(btemp+9)^0,c
 10291   0121BA  6A0B               	clrf	(btemp+10)^0,c
 10292   0121BC  6A0C               	clrf	(btemp+11)^0,c
 10293                           
 10294                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10295   0121BE  0EFC               	movlw	-4
 10296   0121C0  C009  FFE3         	movff	btemp+8,plusw1
 10297   0121C4  0EFD               	movlw	-3
 10298   0121C6  C00A  FFE3         	movff	btemp+9,plusw1
 10299   0121CA  0EFE               	movlw	-2
 10300   0121CC  C00B  FFE3         	movff	btemp+10,plusw1
 10301   0121D0  0EFF               	movlw	-1
 10302   0121D2  C00C  FFE3         	movff	btemp+11,plusw1
 10303                           
 10304                           ;can/can.c: 3797:                 break;
 10305   0121D6  EF17  F091         	goto	l4069
 10306   0121DA                     l4067:
 10307                           
 10308                           ;stkvar	_dlc @ sp[(-4)+-1]
 10309   0121DA  0EFB               	movlw	-5
 10310   0121DC  50E3               	movf	plusw1,w,c
 10311   0121DE  6E0B               	movwf	(btemp+10)^0,c
 10312   0121E0  6A0C               	clrf	(btemp+11)^0,c
 10313                           
 10314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10315                           ; Switch size 1, requested type "simple"
 10316                           ; Number of cases is 1, Range of values is 0 to 0
 10317                           ; switch strategies available:
 10318                           ; Name         Instructions Cycles
 10319                           ; simple_byte            4     3 (average)
 10320                           ;	Chosen strategy is simple_byte
 10321   0121E2  500C               	movf	(btemp+11)^0,w,c
 10322   0121E4  0A00               	xorlw	0	; case 0
 10323   0121E6  B4D8               	btfsc	status,2,c
 10324   0121E8  EFF8  F090         	goto	l5515
 10325   0121EC  EF17  F091         	goto	l4069
 10326   0121F0                     l5515:
 10327                           
 10328                           ; Switch size 1, requested type "simple"
 10329                           ; Number of cases is 7, Range of values is 9 to 15
 10330                           ; switch strategies available:
 10331                           ; Name         Instructions Cycles
 10332                           ; simple_byte           22    12 (average)
 10333                           ;	Chosen strategy is simple_byte
 10334   0121F0  500B               	movf	(btemp+10)^0,w,c
 10335   0121F2  0A09               	xorlw	9	; case 9
 10336   0121F4  B4D8               	btfsc	status,2,c
 10337   0121F6  EF68  F090         	goto	l4051
 10338   0121FA  0A03               	xorlw	3	; case 10
 10339   0121FC  B4D8               	btfsc	status,2,c
 10340   0121FE  EF7B  F090         	goto	l4053
 10341   012202  0A01               	xorlw	1	; case 11
 10342   012204  B4D8               	btfsc	status,2,c
 10343   012206  EF8E  F090         	goto	l4055
 10344   01220A  0A07               	xorlw	7	; case 12
 10345   01220C  B4D8               	btfsc	status,2,c
 10346   01220E  EFA1  F090         	goto	l4057
 10347   012212  0A01               	xorlw	1	; case 13
 10348   012214  B4D8               	btfsc	status,2,c
 10349   012216  EFB4  F090         	goto	l4059
 10350   01221A  0A03               	xorlw	3	; case 14
 10351   01221C  B4D8               	btfsc	status,2,c
 10352   01221E  EFC7  F090         	goto	l4061
 10353   012222  0A01               	xorlw	1	; case 15
 10354   012224  B4D8               	btfsc	status,2,c
 10355   012226  EFDA  F090         	goto	l4063
 10356   01222A  EF17  F091         	goto	l4069
 10357   01222E                     l4069:
 10358                           
 10359                           ;can/can.c: 3803:     return dataBytesInObject;
 10360                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10361   01222E  0EFC               	movlw	-4
 10362   012230  CFE3 F001          	movff	plusw1,btemp
 10363   012234  0EFD               	movlw	-3
 10364   012236  CFE3 F002          	movff	plusw1,btemp+1
 10365   01223A  0EFE               	movlw	-2
 10366   01223C  CFE3 F003          	movff	plusw1,btemp+2
 10367   012240  0EFF               	movlw	-1
 10368   012242  CFE3 F004          	movff	plusw1,btemp+3
 10369   012246                     
 10370                           ; _DRV_CANFDSPI_DlcToDataBytes: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 1, argsize = 1, vargsize = 0
 10371   012246  0EFB               	movlw	251
 10372   012248  26E1               	addwf	fsr1l,f,c
 10373   01224A  0EFF               	movlw	255
 10374   01224C  22E2               	addwfc	fsr1h,f,c
 10375   01224E  0012               	return		;funcret
 10376   012250                     __end_of_DRV_CANFDSPI_DlcToDataBytes:
 10377                           	callstack 0
 10378                           
 10379 ;; *************** function _DRV_CANFDSPI_TransmitChannelEventGet *****************
 10380 ;; Defined at:
 10381 ;;		line 1776 in file "can/can.c"
 10382 ;; Parameters:    Size  Location     Type
 10383 ;;  channel         1  [STACK] enum E5290
 10384 ;;  flags           2  [STACK] PTR enum E5583
 10385 ;;		 -> txFlags(1), 
 10386 ;; Auto vars:     Size  Location     Type
 10387 ;;  ciFifoSta       4  [STACK] struct _REG_CiFIFOSTA
 10388 ;;  a               2  [STACK] unsigned short 
 10389 ;;  spiTransferE    1  [STACK] char 
 10390 ;; Return value:  Size  Location     Type
 10391 ;;                  1  [STACK] char 
 10392 ;; Registers used:
 10393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
 10394 ;; Tracked objects:
 10395 ;;		On entry : 0/0
 10396 ;;		On exit  : 0/0
 10397 ;;		Unchanged: 0/0
 10398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10403 ;;Total ram usage:        0 bytes
 10404 ;; Hardware stack levels used: 1
 10405 ;; Hardware stack levels required when called: 9
 10406 ;; This function calls:
 10407 ;;		_DRV_CANFDSPI_ReadByte
 10408 ;; This function is called by:
 10409 ;;		_CanSend
 10410 ;; This function uses a reentrant model
 10411 ;;
 10412                           
 10413                           	psect	text30
 10414   014028                     __ptext30:
 10415                           	callstack 0
 10416   014028                     _DRV_CANFDSPI_TransmitChannelEventGet:
 10417                           	callstack 0
 10418                           
 10419                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10420   014028  0E07               	movlw	7
 10421   01402A  26E1               	addwf	fsr1l,f,c
 10422   01402C  0E00               	movlw	0
 10423   01402E  22E2               	addwfc	fsr1h,f,c
 10424   014030                     
 10425                           ;can/can.c: 1783:     REG_CiFIFOSTA ciFifoSta;;can/can.c: 1784:     ciFifoSta.word = 0;
 10426                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
 10427   014030  0EF9               	movlw	-7
 10428   014032  6AE3               	clrf	plusw1,c
 10429   014034  0EFA               	movlw	-6
 10430   014036  6AE3               	clrf	plusw1,c
 10431   014038  0EFB               	movlw	-5
 10432   01403A  6AE3               	clrf	plusw1,c
 10433   01403C  0EFC               	movlw	-4
 10434   01403E  6AE3               	clrf	plusw1,c
 10435   014040                     
 10436                           ;can/can.c: 1785:     a = 0x054 + (channel * (3*4));
 10437                           ;stkvar	_channel @ sp[(-7)+-1]
 10438   014040  0EF8               	movlw	-8
 10439   014042  50E3               	movf	plusw1,w,c
 10440   014044  0D0C               	mullw	12
 10441   014046  0E54               	movlw	84
 10442   014048  26F3               	addwf	243,f,c
 10443   01404A  0E00               	movlw	0
 10444   01404C  22F4               	addwfc	244,f,c
 10445                           
 10446                           ;stkvar	_a @ sp[(-7)+4]
 10447   01404E  0EFD               	movlw	-3
 10448   014050  CFF3 FFE3          	movff	prodl,plusw1
 10449   014054  0EFE               	movlw	-2
 10450   014056  CFF4 FFE3          	movff	prodh,plusw1
 10451   01405A                     
 10452                           ;can/can.c: 1787:     spiTransferError = DRV_CANFDSPI_ReadByte( a, &ciFifoSta.byte[0]);
 10453                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
 10454   01405A  0EF9               	movlw	249
 10455   01405C  24E1               	addwf	fsr1l,w,c
 10456   01405E  6E01               	movwf	btemp^0,c
 10457   014060  0EFF               	movlw	255
 10458   014062  20E2               	addwfc	fsr1h,w,c
 10459   014064  6E02               	movwf	(btemp+1)^0,c
 10460   014066  C001  FFE6         	movff	btemp,postinc1
 10461   01406A  C002  FFE6         	movff	btemp+1,postinc1
 10462                           
 10463                           ;stkvar	_a @ sp[(-9)+4]
 10464   01406E  0EFB               	movlw	-5
 10465   014070  CFE3 FFE6          	movff	plusw1,postinc1
 10466   014074  CFE3 FFE6          	movff	plusw1,postinc1
 10467   014078  EC52  F0A2         	call	_DRV_CANFDSPI_ReadByte	;wreg free
 10468                           
 10469                           ;stkvar	_spiTransferError @ sp[(-7)+6]
 10470   01407C  0EFF               	movlw	-1
 10471   01407E  C001  FFE3         	movff	btemp,plusw1
 10472   014082                     
 10473                           ;can/can.c: 1788:     if (spiTransferError) {
 10474                           ;stkvar	_spiTransferError @ sp[(-7)+6]
 10475   014082  0EFF               	movlw	-1
 10476   014084  50E3               	movf	plusw1,w,c
 10477   014086  B4D8               	btfsc	status,2,c
 10478   014088  EF48  F0A0         	goto	u1861
 10479   01408C  EF4A  F0A0         	goto	u1860
 10480   014090                     u1861:
 10481   014090  EF4E  F0A0         	goto	l4211
 10482   014094                     u1860:
 10483   014094                     
 10484                           ;can/can.c: 1789:         return -1;
 10485   014094  0EFF               	movlw	255
 10486   014096  6E01               	movwf	btemp^0,c
 10487   014098  EF5B  F0A0         	goto	l453
 10488   01409C                     l4211:
 10489                           
 10490                           ;can/can.c: 1793:     *flags = (CAN_TX_FIFO_EVENT) (ciFifoSta.byte[0] & CAN_TX_FIFO_ALL_
      +                          EVENTS);
 10491                           ;stkvar	_flags @ sp[(-7)+-3]
 10492   01409C  0EF6               	movlw	-10
 10493   01409E  CFE3 FFD9          	movff	plusw1,fsr2l
 10494   0140A2  0EF7               	movlw	-9
 10495   0140A4  CFE3 FFDA          	movff	plusw1,fsr2h
 10496                           
 10497                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
 10498   0140A8  0EF9               	movlw	-7
 10499   0140AA  50E3               	movf	plusw1,w,c
 10500   0140AC  0B17               	andlw	23
 10501   0140AE  6EDF               	movwf	indf2,c
 10502   0140B0                     
 10503                           ;can/can.c: 1795:     return spiTransferError;
 10504                           ;stkvar	_spiTransferError @ sp[(-7)+6]
 10505   0140B0  0EFF               	movlw	-1
 10506   0140B2  CFE3 F001          	movff	plusw1,btemp
 10507   0140B6                     l453:
 10508                           
 10509                           ; _DRV_CANFDSPI_TransmitChannelEventGet: autosize = 7, savesize = 0, parsavesize = 0, te
      +                          mpsize = 0 parsize = 3, argsize = 3, vargsize = 0
 10510   0140B6  0EF6               	movlw	246
 10511   0140B8  26E1               	addwf	fsr1l,f,c
 10512   0140BA  0EFF               	movlw	255
 10513   0140BC  22E2               	addwfc	fsr1h,f,c
 10514   0140BE  0012               	return		;funcret
 10515   0140C0                     __end_of_DRV_CANFDSPI_TransmitChannelEventGet:
 10516                           	callstack 0
 10517                           
 10518 ;; *************** function _XF_popEvent *****************
 10519 ;; Defined at:
 10520 ;;		line 142 in file "xf/xf.c"
 10521 ;; Parameters:    Size  Location     Type
 10522 ;;  inISR           1  [STACK] _Bool 
 10523 ;; Auto vars:     Size  Location     Type
 10524 ;;  ev              6  [STACK] struct Event_
 10525 ;; Return value:  Size  Location     Type
 10526 ;;                  6  [STACK] struct Event_
 10527 ;; Registers used:
 10528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 10529 ;; Tracked objects:
 10530 ;;		On entry : 0/0
 10531 ;;		On exit  : 0/0
 10532 ;;		Unchanged: 0/0
 10533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10538 ;;Total ram usage:        0 bytes
 10539 ;; Hardware stack levels used: 1
 10540 ;; Hardware stack levels required when called: 8
 10541 ;; This function calls:
 10542 ;;		_ENTERCRITICAL
 10543 ;;		_LEAVECRITICAL
 10544 ;;		___awmod
 10545 ;; This function is called by:
 10546 ;;		_XF_executeOnce
 10547 ;; This function uses a reentrant model
 10548 ;;
 10549                           
 10550                           	psect	text31
 10551   01384E                     __ptext31:
 10552                           	callstack 0
 10553   01384E                     _XF_popEvent:
 10554                           	callstack 0
 10555                           
 10556                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 6 argfudge = 5
 10557   01384E  0E0B               	movlw	11
 10558   013850  26E1               	addwf	fsr1l,f,c
 10559   013852  0E00               	movlw	0
 10560   013854  22E2               	addwfc	fsr1h,f,c
 10561   013856                     
 10562                           ;xf/xf.c: 142: Event XF_popEvent(_Bool inISR);xf/xf.c: 143: {;xf/xf.c: 144:     Event ev
      +                          ;;xf/xf.c: 145:     ev.id = 0;
 10563                           ;stkvar	_ev @ sp[(-6)+0]
 10564   013856  0EFA               	movlw	-6
 10565   013858  6AE3               	clrf	plusw1,c
 10566   01385A                     
 10567                           ;xf/xf.c: 146:     ev.processEvent = ((void*)0);
 10568                           ;stkvar	_ev @ sp[(-6)+0]
 10569   01385A  0EFB               	movlw	251
 10570   01385C  24E1               	addwf	fsr1l,w,c
 10571   01385E  6ED9               	movwf	fsr2l,c
 10572   013860  0EFF               	movlw	255
 10573   013862  20E2               	addwfc	fsr1h,w,c
 10574   013864  6EDA               	movwf	fsr2h,c
 10575   013866  6ADE               	clrf	postinc2,c
 10576   013868  6ADE               	clrf	postinc2,c
 10577   01386A  6ADD               	clrf	postdec2,c
 10578   01386C                     
 10579                           ;xf/xf.c: 148:     ENTERCRITICAL(inISR);
 10580                           ;stkvar	_inISR @ sp[(-6)+-6]
 10581   01386C  0EF4               	movlw	-12
 10582   01386E  50E3               	movf	plusw1,w,c
 10583   013870  6EE6               	movwf	postinc1,c
 10584   013872  EC6C  F0A4         	call	_ENTERCRITICAL	;wreg free
 10585   013876                     
 10586                           ;xf/xf.c: 149:     if(theXF.countEvt == 0)
 10587   013876  EE23  F0DF         	lfsr	2,_theXF+279
 10588   01387A  50DF               	movf	indf2,w,c
 10589   01387C  A4D8               	btfss	status,2,c
 10590   01387E  EF43  F09C         	goto	u2741
 10591   013882  EF45  F09C         	goto	u2740
 10592   013886                     u2741:
 10593   013886  EF5A  F09C         	goto	l5013
 10594   01388A                     u2740:
 10595   01388A                     l5007:
 10596                           
 10597                           ;xf/xf.c: 150:     {;xf/xf.c: 151:       LEAVECRITICAL(inISR);
 10598                           ;stkvar	_inISR @ sp[(-6)+-6]
 10599   01388A  0EF4               	movlw	-12
 10600   01388C  50E3               	movf	plusw1,w,c
 10601   01388E  6EE6               	movwf	postinc1,c
 10602   013890  EC60  F0A4         	call	_LEAVECRITICAL	;wreg free
 10603   013894                     
 10604                           ;xf/xf.c: 152:       return ev;
 10605                           ;stkvar	_ev @ sp[(-6)+0]
 10606   013894  0EFA               	movlw	250
 10607   013896  24E1               	addwf	fsr1l,w,c
 10608   013898  6ED9               	movwf	fsr2l,c
 10609   01389A  0EFF               	movlw	255
 10610   01389C  20E2               	addwfc	fsr1h,w,c
 10611   01389E  6EDA               	movwf	fsr2h,c
 10612                           
 10613                           ;stkvar	?_XF_popEvent @ sp[(-6)+-6]
 10614   0138A0  0E06               	movlw	6
 10615   0138A2  6E01               	movwf	btemp^0,c
 10616   0138A4  0EF4               	movlw	-12
 10617   0138A6                     us275999:
 10618   0138A6  CFDE FFE3          	movff	postinc2,plusw1
 10619   0138AA  28E8               	incf	wreg,w,c
 10620   0138AC  2E01               	decfsz	btemp^0,f,c
 10621   0138AE  D7FB               	bra	us275999
 10622   0138B0  EF88  F09C         	goto	l1227
 10623   0138B4                     l5013:
 10624                           
 10625                           ;xf/xf.c: 154:     ev = theXF.eventQueue[theXF.out];
 10626   0138B4  EE23  F0DD         	lfsr	2,_theXF+277
 10627   0138B8  50DF               	movf	indf2,w,c
 10628   0138BA  0D06               	mullw	6
 10629   0138BC  0E28               	movlw	low (_theXF+96)
 10630   0138BE  24F3               	addwf	243,w,c
 10631   0138C0  6ED9               	movwf	fsr2l,c
 10632   0138C2  0E03               	movlw	high (_theXF+96)
 10633   0138C4  20F4               	addwfc	prodh,w,c
 10634   0138C6  6EDA               	movwf	fsr2h,c
 10635                           
 10636                           ;stkvar	_ev @ sp[(-6)+0]
 10637   0138C8  0E06               	movlw	6
 10638   0138CA  6E01               	movwf	btemp^0,c
 10639   0138CC  0EFA               	movlw	-6
 10640   0138CE                     us276999:
 10641   0138CE  CFDE FFE3          	movff	postinc2,plusw1
 10642   0138D2  28E8               	incf	wreg,w,c
 10643   0138D4  2E01               	decfsz	btemp^0,f,c
 10644   0138D6  D7FB               	bra	us276999
 10645   0138D8                     
 10646                           ;xf/xf.c: 155:     theXF.out = (theXF.out + 1)%(uint8_t)(30);
 10647   0138D8  0E1E               	movlw	30
 10648   0138DA  6EE6               	movwf	postinc1,c
 10649   0138DC  0E00               	movlw	0
 10650   0138DE  6EE6               	movwf	postinc1,c
 10651   0138E0  EE23  F0DD         	lfsr	2,_theXF+277
 10652   0138E4  50DF               	movf	indf2,w,c
 10653   0138E6  6E0B               	movwf	(btemp+10)^0,c
 10654   0138E8  6A0C               	clrf	(btemp+11)^0,c
 10655   0138EA  0E01               	movlw	1
 10656   0138EC  260B               	addwf	(btemp+10)^0,f,c
 10657   0138EE  0E00               	movlw	0
 10658   0138F0  220C               	addwfc	(btemp+11)^0,f,c
 10659   0138F2  C00B  FFE6         	movff	btemp+10,postinc1
 10660   0138F6  C00C  FFE6         	movff	btemp+11,postinc1
 10661   0138FA  EC72  F096         	call	___awmod	;wreg free
 10662   0138FE  C001  F3DD         	movff	btemp,_theXF+277
 10663   013902                     
 10664                           ;xf/xf.c: 156:     theXF.countEvt--;
 10665   013902  C3DF  FFE8         	movff	_theXF+279,wreg
 10666   013906  0FFF               	addlw	-1
 10667   013908  CFE8 F3DF          	movff	wreg,_theXF+279
 10668   01390C  EF45  F09C         	goto	l5007
 10669   013910                     l1227:
 10670                           
 10671                           ; _XF_popEvent: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 10672   013910  0EFA               	movlw	250
 10673   013912  26E1               	addwf	fsr1l,f,c
 10674   013914  0EFF               	movlw	255
 10675   013916  22E2               	addwfc	fsr1h,f,c
 10676   013918  0012               	return		;funcret
 10677   01391A                     __end_of_XF_popEvent:
 10678                           	callstack 0
 10679                           
 10680 ;; *************** function ___awmod *****************
 10681 ;; Defined at:
 10682 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
 10683 ;; Parameters:    Size  Location     Type
 10684 ;;  dividend        2  [STACK] int 
 10685 ;;  divisor         2  [STACK] int 
 10686 ;; Auto vars:     Size  Location     Type
 10687 ;;  sign            1  [STACK] unsigned char 
 10688 ;;  counter         1  [STACK] unsigned char 
 10689 ;; Return value:  Size  Location     Type
 10690 ;;                  2  [STACK] int 
 10691 ;; Registers used:
 10692 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 10693 ;; Tracked objects:
 10694 ;;		On entry : 0/0
 10695 ;;		On exit  : 0/0
 10696 ;;		Unchanged: 0/0
 10697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10702 ;;Total ram usage:        0 bytes
 10703 ;; Hardware stack levels used: 1
 10704 ;; Hardware stack levels required when called: 7
 10705 ;; This function calls:
 10706 ;;		Nothing
 10707 ;; This function is called by:
 10708 ;;		_XF_pushEvent
 10709 ;;		_XF_popEvent
 10710 ;; This function uses a reentrant model
 10711 ;;
 10712                           
 10713                           	psect	text32
 10714   012CE4                     __ptext32:
 10715                           	callstack 0
 10716   012CE4                     ___awmod:
 10717                           	callstack 0
 10718                           
 10719                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10720   012CE4  52E6               	movf	postinc1,f,c
 10721   012CE6  52E6               	movf	postinc1,f,c
 10722   012CE8                     
 10723                           ;stkvar	_sign @ sp[(-2)+0]
 10724   012CE8  0EFE               	movlw	-2
 10725   012CEA  6AE3               	clrf	plusw1,c
 10726   012CEC                     
 10727                           ;stkvar	_dividend @ sp[(-2)+-2]
 10728   012CEC  0EFD               	movlw	-3
 10729   012CEE  BEE3               	btfsc	plusw1,7,c
 10730   012CF0  EF7E  F096         	goto	u1910
 10731   012CF4  EF7C  F096         	goto	u1911
 10732   012CF8                     u1911:
 10733   012CF8  EF87  F096         	goto	l4271
 10734   012CFC                     u1910:
 10735   012CFC                     
 10736                           ;stkvar	_dividend @ sp[(-2)+-2]
 10737                           ;stkvar	_dividend @ sp[(-2)+-2]
 10738   012CFC  0EFC               	movlw	-4
 10739   012CFE  6CE3               	negf	plusw1,c
 10740   012D00  0EFD               	movlw	-3
 10741   012D02  1EE3               	comf	plusw1,f,c
 10742   012D04  B0D8               	btfsc	status,0,c
 10743   012D06  2AE3               	incf	plusw1,f,c
 10744   012D08                     
 10745                           ;stkvar	_sign @ sp[(-2)+0]
 10746   012D08  0EFE               	movlw	-2
 10747   012D0A  6AE3               	clrf	plusw1,c
 10748   012D0C  2AE3               	incf	plusw1,f,c
 10749   012D0E                     l4271:
 10750                           
 10751                           ;stkvar	_divisor @ sp[(-2)+-4]
 10752   012D0E  0EFB               	movlw	-5
 10753   012D10  BEE3               	btfsc	plusw1,7,c
 10754   012D12  EF8F  F096         	goto	u1920
 10755   012D16  EF8D  F096         	goto	u1921
 10756   012D1A                     u1921:
 10757   012D1A  EF95  F096         	goto	l4275
 10758   012D1E                     u1920:
 10759   012D1E                     
 10760                           ;stkvar	_divisor @ sp[(-2)+-4]
 10761                           ;stkvar	_divisor @ sp[(-2)+-4]
 10762   012D1E  0EFA               	movlw	-6
 10763   012D20  6CE3               	negf	plusw1,c
 10764   012D22  0EFB               	movlw	-5
 10765   012D24  1EE3               	comf	plusw1,f,c
 10766   012D26  B0D8               	btfsc	status,0,c
 10767   012D28  2AE3               	incf	plusw1,f,c
 10768   012D2A                     l4275:
 10769                           
 10770                           ;stkvar	_divisor @ sp[(-2)+-4]
 10771   012D2A  0EFA               	movlw	-6
 10772   012D2C  CFE3 F001          	movff	plusw1,btemp
 10773   012D30  0EFB               	movlw	-5
 10774   012D32  50E3               	movf	plusw1,w,c
 10775   012D34  1001               	iorwf	btemp^0,w,c
 10776   012D36  B4D8               	btfsc	status,2,c
 10777   012D38  EFA0  F096         	goto	u1931
 10778   012D3C  EFA2  F096         	goto	u1930
 10779   012D40                     u1931:
 10780   012D40  EFFD  F096         	goto	l4293
 10781   012D44                     u1930:
 10782   012D44                     
 10783                           ;stkvar	_counter @ sp[(-2)+1]
 10784   012D44  0EFF               	movlw	-1
 10785   012D46  6AE3               	clrf	plusw1,c
 10786   012D48  2AE3               	incf	plusw1,f,c
 10787   012D4A  EFB8  F096         	goto	l4283
 10788   012D4E                     l4279:
 10789                           
 10790                           ;stkvar	_divisor @ sp[(-2)+-4]
 10791   012D4E  0EFA               	movlw	-6
 10792   012D50  50E3               	movf	plusw1,w,c
 10793   012D52  90D8               	bcf	status,0,c
 10794   012D54  34E8               	rlcf	wreg,w,c
 10795   012D56  6E01               	movwf	btemp^0,c
 10796   012D58  0EFA               	movlw	-6
 10797   012D5A  C001  FFE3         	movff	btemp,plusw1
 10798   012D5E  0EFB               	movlw	-5
 10799   012D60  50E3               	movf	plusw1,w,c
 10800   012D62  34E8               	rlcf	wreg,w,c
 10801   012D64  6E01               	movwf	btemp^0,c
 10802   012D66  0EFB               	movlw	-5
 10803   012D68  C001  FFE3         	movff	btemp,plusw1
 10804   012D6C                     
 10805                           ;stkvar	_counter @ sp[(-2)+1]
 10806   012D6C  0EFF               	movlw	-1
 10807   012D6E  2AE3               	incf	plusw1,f,c
 10808   012D70                     l4283:
 10809                           
 10810                           ;stkvar	_divisor @ sp[(-2)+-4]
 10811   012D70  0EFB               	movlw	-5
 10812   012D72  AEE3               	btfss	plusw1,7,c
 10813   012D74  EFBE  F096         	goto	u1941
 10814   012D78  EFC0  F096         	goto	u1940
 10815   012D7C                     u1941:
 10816   012D7C  EFA7  F096         	goto	l4279
 10817   012D80                     u1940:
 10818   012D80                     l4285:
 10819                           
 10820                           ;stkvar	_divisor @ sp[(-2)+-4]
 10821   012D80  0EFA               	movlw	-6
 10822   012D82  CFE3 F00B          	movff	plusw1,btemp+10
 10823   012D86  0EFB               	movlw	-5
 10824   012D88  CFE3 F00C          	movff	plusw1,btemp+11
 10825                           
 10826                           ;stkvar	_dividend @ sp[(-2)+-2]
 10827   012D8C  0EFC               	movlw	-4
 10828   012D8E  CFE3 F009          	movff	plusw1,btemp+8
 10829   012D92  0EFD               	movlw	-3
 10830   012D94  CFE3 F00A          	movff	plusw1,btemp+9
 10831   012D98  500B               	movf	(btemp+10)^0,w,c
 10832   012D9A  5C09               	subwf	(btemp+8)^0,w,c
 10833   012D9C  500C               	movf	(btemp+11)^0,w,c
 10834   012D9E  580A               	subwfb	(btemp+9)^0,w,c
 10835   012DA0  A0D8               	btfss	status,0,c
 10836   012DA2  EFD5  F096         	goto	u1951
 10837   012DA6  EFD7  F096         	goto	u1950
 10838   012DAA                     u1951:
 10839   012DAA  EFE9  F096         	goto	l4289
 10840   012DAE                     u1950:
 10841   012DAE                     
 10842                           ;stkvar	_divisor @ sp[(-2)+-4]
 10843                           ;stkvar	_dividend @ sp[(-2)+-2]
 10844   012DAE  0EFC               	movlw	-4
 10845   012DB0  50E3               	movf	plusw1,w,c
 10846   012DB2  6E01               	movwf	btemp^0,c
 10847   012DB4  0EFA               	movlw	-6
 10848   012DB6  50E3               	movf	plusw1,w,c
 10849   012DB8  5E01               	subwf	btemp^0,f,c
 10850   012DBA  0EFC               	movlw	-4
 10851   012DBC  C001  FFE3         	movff	btemp,plusw1
 10852   012DC0  0EFD               	movlw	-3
 10853   012DC2  50E3               	movf	plusw1,w,c
 10854   012DC4  6E01               	movwf	btemp^0,c
 10855   012DC6  0EFB               	movlw	-5
 10856   012DC8  50E3               	movf	plusw1,w,c
 10857   012DCA  5A01               	subwfb	btemp^0,f,c
 10858   012DCC  0EFD               	movlw	-3
 10859   012DCE  C001  FFE3         	movff	btemp,plusw1
 10860   012DD2                     l4289:
 10861                           
 10862                           ;stkvar	_divisor @ sp[(-2)+-4]
 10863   012DD2  90D8               	bcf	status,0,c
 10864   012DD4  0EFB               	movlw	-5
 10865   012DD6  32E3               	rrcf	plusw1,f,c
 10866   012DD8  0EFA               	movlw	-6
 10867   012DDA  32E3               	rrcf	plusw1,f,c
 10868   012DDC                     
 10869                           ;stkvar	_counter @ sp[(-2)+1]
 10870   012DDC  0EFF               	movlw	-1
 10871   012DDE  50E3               	movf	plusw1,w,c
 10872   012DE0  6E01               	movwf	btemp^0,c
 10873   012DE2  0E01               	movlw	1
 10874   012DE4  5E01               	subwf	btemp^0,f,c
 10875   012DE6  0EFF               	movlw	-1
 10876   012DE8  C001  FFE3         	movff	btemp,plusw1
 10877   012DEC  A4D8               	btfss	status,2,c
 10878   012DEE  EFFB  F096         	goto	u1961
 10879   012DF2  EFFD  F096         	goto	u1960
 10880   012DF6                     u1961:
 10881   012DF6  EFC0  F096         	goto	l4285
 10882   012DFA                     u1960:
 10883   012DFA                     l4293:
 10884                           
 10885                           ;stkvar	_sign @ sp[(-2)+0]
 10886   012DFA  0EFE               	movlw	-2
 10887   012DFC  50E3               	movf	plusw1,w,c
 10888   012DFE  B4D8               	btfsc	status,2,c
 10889   012E00  EF04  F097         	goto	u1971
 10890   012E04  EF06  F097         	goto	u1970
 10891   012E08                     u1971:
 10892   012E08  EF0C  F097         	goto	l4297
 10893   012E0C                     u1970:
 10894   012E0C                     
 10895                           ;stkvar	_dividend @ sp[(-2)+-2]
 10896                           ;stkvar	_dividend @ sp[(-2)+-2]
 10897   012E0C  0EFC               	movlw	-4
 10898   012E0E  6CE3               	negf	plusw1,c
 10899   012E10  0EFD               	movlw	-3
 10900   012E12  1EE3               	comf	plusw1,f,c
 10901   012E14  B0D8               	btfsc	status,0,c
 10902   012E16  2AE3               	incf	plusw1,f,c
 10903   012E18                     l4297:
 10904                           
 10905                           ;stkvar	_dividend @ sp[(-2)+-2]
 10906   012E18  0EFC               	movlw	-4
 10907   012E1A  CFE3 F001          	movff	plusw1,btemp
 10908   012E1E  0EFD               	movlw	-3
 10909   012E20  CFE3 F002          	movff	plusw1,btemp+1
 10910   012E24                     
 10911                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 10912   012E24  0EFA               	movlw	250
 10913   012E26  26E1               	addwf	fsr1l,f,c
 10914   012E28  0EFF               	movlw	255
 10915   012E2A  22E2               	addwfc	fsr1h,f,c
 10916   012E2C  0012               	return		;funcret
 10917   012E2E                     __end_of___awmod:
 10918                           	callstack 0
 10919                           
 10920 ;; *************** function _LEAVECRITICAL *****************
 10921 ;; Defined at:
 10922 ;;		line 265 in file "xf/xf.c"
 10923 ;; Parameters:    Size  Location     Type
 10924 ;;  inISR           1  [STACK] _Bool 
 10925 ;; Auto vars:     Size  Location     Type
 10926 ;;		None
 10927 ;; Return value:  Size  Location     Type
 10928 ;;                  1  [STACK] void 
 10929 ;; Registers used:
 10930 ;;		wreg, fsr1l, fsr1h, status,2
 10931 ;; Tracked objects:
 10932 ;;		On entry : 0/0
 10933 ;;		On exit  : 0/0
 10934 ;;		Unchanged: 0/0
 10935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10940 ;;Total ram usage:        0 bytes
 10941 ;; Hardware stack levels used: 1
 10942 ;; Hardware stack levels required when called: 7
 10943 ;; This function calls:
 10944 ;;		Nothing
 10945 ;; This function is called by:
 10946 ;;		_XF_pushEvent
 10947 ;;		_XF_popEvent
 10948 ;;		_XF_scheduleTimer
 10949 ;;		_XF_unscheduleTimer
 10950 ;; This function uses a reentrant model
 10951 ;;
 10952                           
 10953                           	psect	text33
 10954   0148C0                     __ptext33:
 10955                           	callstack 0
 10956   0148C0                     _LEAVECRITICAL:
 10957                           	callstack 10
 10958   0148C0                     
 10959                           ;xf/xf.c: 265: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 266: {;xf/xf.c: 267:     
      +                          if (inISR == 0)
 10960                           ;stkvar	_inISR @ sp[(0)+-1]
 10961   0148C0  0EFF               	movlw	-1
 10962   0148C2  50E3               	movf	plusw1,w,c
 10963   0148C4  A4D8               	btfss	status,2,c
 10964   0148C6  EF67  F0A4         	goto	u1681
 10965   0148CA  EF69  F0A4         	goto	u1680
 10966   0148CE                     u1681:
 10967   0148CE  EF6A  F0A4         	goto	l1254
 10968   0148D2                     u1680:
 10969   0148D2                     
 10970                           ;xf/xf.c: 268:     {;xf/xf.c: 270:      (INTCONbits.GIE = 1);
 10971   0148D2  8EF2               	bsf	242,7,c	;volatile
 10972   0148D4                     l1254:
 10973                           
 10974                           ; _LEAVECRITICAL: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
 10975   0148D4  52E5               	movf	postdec1,f,c
 10976   0148D6  0012               	return		;funcret
 10977   0148D8                     __end_of_LEAVECRITICAL:
 10978                           	callstack 0
 10979                           
 10980 ;; *************** function _ENTERCRITICAL *****************
 10981 ;; Defined at:
 10982 ;;		line 250 in file "xf/xf.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;  inISR           1  [STACK] _Bool 
 10985 ;; Auto vars:     Size  Location     Type
 10986 ;;		None
 10987 ;; Return value:  Size  Location     Type
 10988 ;;                  1  [STACK] void 
 10989 ;; Registers used:
 10990 ;;		wreg, fsr1l, fsr1h, status,2
 10991 ;; Tracked objects:
 10992 ;;		On entry : 0/0
 10993 ;;		On exit  : 0/0
 10994 ;;		Unchanged: 0/0
 10995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11000 ;;Total ram usage:        0 bytes
 11001 ;; Hardware stack levels used: 1
 11002 ;; Hardware stack levels required when called: 7
 11003 ;; This function calls:
 11004 ;;		Nothing
 11005 ;; This function is called by:
 11006 ;;		_XF_pushEvent
 11007 ;;		_XF_popEvent
 11008 ;;		_XF_scheduleTimer
 11009 ;;		_XF_unscheduleTimer
 11010 ;; This function uses a reentrant model
 11011 ;;
 11012                           
 11013                           	psect	text34
 11014   0148D8                     __ptext34:
 11015                           	callstack 0
 11016   0148D8                     _ENTERCRITICAL:
 11017                           	callstack 10
 11018   0148D8                     
 11019                           ;xf/xf.c: 250: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 251: {;xf/xf.c: 252:     
      +                          if (inISR == 0)
 11020                           ;stkvar	_inISR @ sp[(0)+-1]
 11021   0148D8  0EFF               	movlw	-1
 11022   0148DA  50E3               	movf	plusw1,w,c
 11023   0148DC  A4D8               	btfss	status,2,c
 11024   0148DE  EF73  F0A4         	goto	u1671
 11025   0148E2  EF75  F0A4         	goto	u1670
 11026   0148E6                     u1671:
 11027   0148E6  EF76  F0A4         	goto	l1250
 11028   0148EA                     u1670:
 11029   0148EA                     
 11030                           ;xf/xf.c: 253:     {;xf/xf.c: 255:       (INTCONbits.GIE = 0);
 11031   0148EA  9EF2               	bcf	242,7,c	;volatile
 11032   0148EC                     l1250:
 11033                           
 11034                           ; _ENTERCRITICAL: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
 11035   0148EC  52E5               	movf	postdec1,f,c
 11036   0148EE  0012               	return		;funcret
 11037   0148F0                     __end_of_ENTERCRITICAL:
 11038                           	callstack 0
 11039                           
 11040 ;; *************** function _SYSTEM_Initialize *****************
 11041 ;; Defined at:
 11042 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11043 ;; Parameters:    Size  Location     Type
 11044 ;;		None
 11045 ;; Auto vars:     Size  Location     Type
 11046 ;;		None
 11047 ;; Return value:  Size  Location     Type
 11048 ;;                  1  [STACK] void 
 11049 ;; Registers used:
 11050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 11051 ;; Tracked objects:
 11052 ;;		On entry : 0/0
 11053 ;;		On exit  : 0/0
 11054 ;;		Unchanged: 0/0
 11055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11060 ;;Total ram usage:        0 bytes
 11061 ;; Hardware stack levels used: 1
 11062 ;; Hardware stack levels required when called: 9
 11063 ;; This function calls:
 11064 ;;		_INTERRUPT_Initialize
 11065 ;;		_OSCILLATOR_Initialize
 11066 ;;		_PIN_MANAGER_Initialize
 11067 ;;		_SPI2_Initialize
 11068 ;;		_TMR0_Initialize
 11069 ;; This function is called by:
 11070 ;;		_main
 11071 ;; This function uses a reentrant model
 11072 ;;
 11073                           
 11074                           	psect	text35
 11075   0148F0                     __ptext35:
 11076                           	callstack 0
 11077   0148F0                     _SYSTEM_Initialize:
 11078                           	callstack 21
 11079   0148F0                     
 11080                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 11081   0148F0  EC95  F0A4         	call	_INTERRUPT_Initialize	;wreg free
 11082   0148F4                     
 11083                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
 11084   0148F4  EC83  F0A4         	call	_SPI2_Initialize	;wreg free
 11085                           
 11086                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 11087   0148F8  ECE0  F0A3         	call	_PIN_MANAGER_Initialize	;wreg free
 11088                           
 11089                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 11090   0148FC  EC8B  F0A4         	call	_OSCILLATOR_Initialize	;wreg free
 11091   014900                     
 11092                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
 11093   014900  EC74  F0A3         	call	_TMR0_Initialize	;wreg free
 11094   014904                     
 11095                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 11096   014904  0012               	return		;funcret
 11097   014906                     __end_of_SYSTEM_Initialize:
 11098                           	callstack 0
 11099                           
 11100 ;; *************** function _TMR0_Initialize *****************
 11101 ;; Defined at:
 11102 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;		None
 11105 ;; Auto vars:     Size  Location     Type
 11106 ;;		None
 11107 ;; Return value:  Size  Location     Type
 11108 ;;                  1  [STACK] void 
 11109 ;; Registers used:
 11110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 11111 ;; Tracked objects:
 11112 ;;		On entry : 0/0
 11113 ;;		On exit  : 0/0
 11114 ;;		Unchanged: 0/0
 11115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11120 ;;Total ram usage:        0 bytes
 11121 ;; Hardware stack levels used: 1
 11122 ;; Hardware stack levels required when called: 8
 11123 ;; This function calls:
 11124 ;;		_TMR0_SetInterruptHandler
 11125 ;; This function is called by:
 11126 ;;		_SYSTEM_Initialize
 11127 ;; This function uses a reentrant model
 11128 ;;
 11129                           
 11130                           	psect	text36
 11131   0146E8                     __ptext36:
 11132                           	callstack 0
 11133   0146E8                     _TMR0_Initialize:
 11134                           	callstack 21
 11135   0146E8                     
 11136                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
 11137   0146E8  9CD5               	bcf	213,6,c	;volatile
 11138   0146EA                     
 11139                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFD;
 11140   0146EA  0EFD               	movlw	253
 11141   0146EC  6ED7               	movwf	215,c	;volatile
 11142                           
 11143                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x9D;
 11144   0146EE  0E9D               	movlw	157
 11145   0146F0  6ED6               	movwf	214,c	;volatile
 11146   0146F2                     
 11147                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
 11148   0146F2  50D6               	movf	214,w,c	;volatile
 11149   0146F4  CFD7 F001          	movff	4055,btemp	;volatile
 11150   0146F8  6A02               	clrf	(btemp+1)^0,c
 11151   0146FA  C001  F002         	movff	btemp,btemp+1
 11152   0146FE  6A01               	clrf	btemp^0,c
 11153   014700  1001               	iorwf	btemp^0,w,c
 11154   014702  6E37               	movwf	_timer0ReloadVal^0,c	;volatile
 11155   014704  5002               	movf	(btemp+1)^0,w,c
 11156   014706  6E38               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
 11157   014708                     
 11158                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
 11159   014708  94F2               	bcf	242,2,c	;volatile
 11160   01470A                     
 11161                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
 11162   01470A  8AF2               	bsf	242,5,c	;volatile
 11163   01470C                     
 11164                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 11165   01470C  0E2E               	movlw	low _TMR0_DefaultInterruptHandler
 11166   01470E  6EE6               	movwf	postinc1,c
 11167   014710  0E49               	movlw	high _TMR0_DefaultInterruptHandler
 11168   014712  6EE6               	movwf	postinc1,c
 11169   014714  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
 11170   014716  6EE6               	movwf	postinc1,c
 11171   014718  EC34  F0A4         	call	_TMR0_SetInterruptHandler	;wreg free
 11172   01471C                     
 11173                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x97;
 11174   01471C  0E97               	movlw	151
 11175   01471E  6ED5               	movwf	213,c	;volatile
 11176   014720                     
 11177                           ; _TMR0_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11178   014720  0012               	return		;funcret
 11179   014722                     __end_of_TMR0_Initialize:
 11180                           	callstack 0
 11181                           
 11182 ;; *************** function _TMR0_SetInterruptHandler *****************
 11183 ;; Defined at:
 11184 ;;		line 172 in file "mcc_generated_files/tmr0.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11187 ;;		 -> XF_decrementAndQueueTimers(1), TMR0_DefaultInterruptHandler(1), 
 11188 ;; Auto vars:     Size  Location     Type
 11189 ;;		None
 11190 ;; Return value:  Size  Location     Type
 11191 ;;                  1  [STACK] void 
 11192 ;; Registers used:
 11193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11194 ;; Tracked objects:
 11195 ;;		On entry : 0/0
 11196 ;;		On exit  : 0/0
 11197 ;;		Unchanged: 0/0
 11198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11203 ;;Total ram usage:        0 bytes
 11204 ;; Hardware stack levels used: 1
 11205 ;; Hardware stack levels required when called: 7
 11206 ;; This function calls:
 11207 ;;		Nothing
 11208 ;; This function is called by:
 11209 ;;		_TMR0_Initialize
 11210 ;;		_main
 11211 ;; This function uses a reentrant model
 11212 ;;
 11213                           
 11214                           	psect	text37
 11215   014868                     __ptext37:
 11216                           	callstack 0
 11217   014868                     _TMR0_SetInterruptHandler:
 11218                           	callstack 23
 11219   014868                     
 11220                           ;mcc_generated_files/tmr0.c: 173:     TMR0_InterruptHandler = InterruptHandler;
 11221                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11222   014868  50E1               	movf	fsr1l,w,c
 11223   01486A  0FFD               	addlw	-3
 11224   01486C  6ED9               	movwf	fsr2l,c
 11225   01486E  50E2               	movf	fsr1h,w,c
 11226   014870  6EDA               	movwf	fsr2h,c
 11227   014872  0EFF               	movlw	255
 11228   014874  22DA               	addwfc	fsr2h,f,c
 11229   014876  CFDE F050          	movff	postinc2,_TMR0_InterruptHandler
 11230   01487A  CFDE F051          	movff	postinc2,_TMR0_InterruptHandler+1
 11231   01487E  CFDD F052          	movff	postdec2,_TMR0_InterruptHandler+2
 11232   014882                     
 11233                           ; _TMR0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11234   014882  52E5               	movf	postdec1,f,c
 11235   014884  52E5               	movf	postdec1,f,c
 11236   014886  52E5               	movf	postdec1,f,c
 11237   014888  0012               	return		;funcret
 11238   01488A                     __end_of_TMR0_SetInterruptHandler:
 11239                           	callstack 0
 11240                           
 11241 ;; *************** function _SPI2_Initialize *****************
 11242 ;; Defined at:
 11243 ;;		line 62 in file "mcc_generated_files/spi2.c"
 11244 ;; Parameters:    Size  Location     Type
 11245 ;;		None
 11246 ;; Auto vars:     Size  Location     Type
 11247 ;;		None
 11248 ;; Return value:  Size  Location     Type
 11249 ;;                  1  [STACK] void 
 11250 ;; Registers used:
 11251 ;;		wreg, status,2
 11252 ;; Tracked objects:
 11253 ;;		On entry : 0/0
 11254 ;;		On exit  : 0/0
 11255 ;;		Unchanged: 0/0
 11256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11261 ;;Total ram usage:        0 bytes
 11262 ;; Hardware stack levels used: 1
 11263 ;; Hardware stack levels required when called: 7
 11264 ;; This function calls:
 11265 ;;		Nothing
 11266 ;; This function is called by:
 11267 ;;		_SYSTEM_Initialize
 11268 ;; This function uses a reentrant model
 11269 ;;
 11270                           
 11271                           	psect	text38
 11272   014906                     __ptext38:
 11273                           	callstack 0
 11274   014906                     _SPI2_Initialize:
 11275                           	callstack 22
 11276   014906                     
 11277                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
 11278   014906  0E40               	movlw	64
 11279   014908  6E64               	movwf	100,c	;volatile
 11280                           
 11281                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
 11282   01490A  0E01               	movlw	1
 11283   01490C  6E63               	movwf	99,c	;volatile
 11284   01490E                     
 11285                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x00;
 11286   01490E  6A65               	clrf	101,c	;volatile
 11287   014910                     
 11288                           ;mcc_generated_files/spi2.c: 68:     TRISDbits.TRISD6 = 0;
 11289   014910  9C95               	bcf	149,6,c	;volatile
 11290   014912                     
 11291                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
 11292   014912  9A63               	bcf	99,5,c	;volatile
 11293   014914                     
 11294                           ; _SPI2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11295   014914  0012               	return		;funcret
 11296   014916                     __end_of_SPI2_Initialize:
 11297                           	callstack 0
 11298                           
 11299 ;; *************** function _PIN_MANAGER_Initialize *****************
 11300 ;; Defined at:
 11301 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
 11302 ;; Parameters:    Size  Location     Type
 11303 ;;		None
 11304 ;; Auto vars:     Size  Location     Type
 11305 ;;		None
 11306 ;; Return value:  Size  Location     Type
 11307 ;;                  1  [STACK] void 
 11308 ;; Registers used:
 11309 ;;		wreg, status,2
 11310 ;; Tracked objects:
 11311 ;;		On entry : 0/0
 11312 ;;		On exit  : 0/0
 11313 ;;		Unchanged: 0/0
 11314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11319 ;;Total ram usage:        0 bytes
 11320 ;; Hardware stack levels used: 1
 11321 ;; Hardware stack levels required when called: 7
 11322 ;; This function calls:
 11323 ;;		Nothing
 11324 ;; This function is called by:
 11325 ;;		_SYSTEM_Initialize
 11326 ;; This function uses a reentrant model
 11327 ;;
 11328                           
 11329                           	psect	text39
 11330   0147C0                     __ptext39:
 11331                           	callstack 0
 11332   0147C0                     _PIN_MANAGER_Initialize:
 11333                           	callstack 22
 11334   0147C0                     
 11335                           ;mcc_generated_files/pin_manager.c: 55:     LATE = 0x00;
 11336   0147C0  6A8D               	clrf	141,c	;volatile
 11337                           
 11338                           ;mcc_generated_files/pin_manager.c: 56:     LATJ = 0x00;
 11339   0147C2  6A91               	clrf	145,c	;volatile
 11340                           
 11341                           ;mcc_generated_files/pin_manager.c: 57:     LATD = 0x00;
 11342   0147C4  6A8C               	clrf	140,c	;volatile
 11343                           
 11344                           ;mcc_generated_files/pin_manager.c: 58:     LATA = 0x00;
 11345   0147C6  6A89               	clrf	137,c	;volatile
 11346                           
 11347                           ;mcc_generated_files/pin_manager.c: 59:     LATF = 0x00;
 11348   0147C8  6A8E               	clrf	142,c	;volatile
 11349                           
 11350                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
 11351   0147CA  6A8A               	clrf	138,c	;volatile
 11352                           
 11353                           ;mcc_generated_files/pin_manager.c: 61:     LATG = 0x00;
 11354   0147CC  6A8F               	clrf	143,c	;volatile
 11355                           
 11356                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 11357   0147CE  6A8B               	clrf	139,c	;volatile
 11358                           
 11359                           ;mcc_generated_files/pin_manager.c: 63:     LATH = 0x00;
 11360   0147D0  6A90               	clrf	144,c	;volatile
 11361                           
 11362                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0xFF;
 11363   0147D2  6896               	setf	150,c	;volatile
 11364                           
 11365                           ;mcc_generated_files/pin_manager.c: 69:     TRISF = 0xFF;
 11366   0147D4  6897               	setf	151,c	;volatile
 11367   0147D6                     
 11368                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x3F;
 11369   0147D6  0E3F               	movlw	63
 11370   0147D8  6E92               	movwf	146,c	;volatile
 11371   0147DA                     
 11372                           ;mcc_generated_files/pin_manager.c: 71:     TRISG = 0xFF;
 11373   0147DA  6898               	setf	152,c	;volatile
 11374   0147DC                     
 11375                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
 11376   0147DC  6893               	setf	147,c	;volatile
 11377   0147DE                     
 11378                           ;mcc_generated_files/pin_manager.c: 73:     TRISH = 0xFF;
 11379   0147DE  6899               	setf	153,c	;volatile
 11380   0147E0                     
 11381                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xFF;
 11382   0147E0  6894               	setf	148,c	;volatile
 11383                           
 11384                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xAF;
 11385   0147E2  0EAF               	movlw	175
 11386   0147E4  6E95               	movwf	149,c	;volatile
 11387   0147E6                     
 11388                           ;mcc_generated_files/pin_manager.c: 76:     TRISJ = 0xFF;
 11389   0147E6  689A               	setf	154,c	;volatile
 11390                           
 11391                           ;mcc_generated_files/pin_manager.c: 81:     ADCON1bits.PCFG = 0x00;
 11392   0147E8  0EF0               	movlw	-16
 11393   0147EA  16C1               	andwf	193,f,c	;volatile
 11394   0147EC                     
 11395                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 11396   0147EC  0012               	return		;funcret
 11397   0147EE                     __end_of_PIN_MANAGER_Initialize:
 11398                           	callstack 0
 11399                           
 11400 ;; *************** function _OSCILLATOR_Initialize *****************
 11401 ;; Defined at:
 11402 ;;		line 60 in file "mcc_generated_files/mcc.c"
 11403 ;; Parameters:    Size  Location     Type
 11404 ;;		None
 11405 ;; Auto vars:     Size  Location     Type
 11406 ;;		None
 11407 ;; Return value:  Size  Location     Type
 11408 ;;                  1  [STACK] void 
 11409 ;; Registers used:
 11410 ;;		wreg, status,2
 11411 ;; Tracked objects:
 11412 ;;		On entry : 0/0
 11413 ;;		On exit  : 0/0
 11414 ;;		Unchanged: 0/0
 11415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11420 ;;Total ram usage:        0 bytes
 11421 ;; Hardware stack levels used: 1
 11422 ;; Hardware stack levels required when called: 7
 11423 ;; This function calls:
 11424 ;;		Nothing
 11425 ;; This function is called by:
 11426 ;;		_SYSTEM_Initialize
 11427 ;; This function uses a reentrant model
 11428 ;;
 11429                           
 11430                           	psect	text40
 11431   014916                     __ptext40:
 11432                           	callstack 0
 11433   014916                     _OSCILLATOR_Initialize:
 11434                           	callstack 22
 11435   014916                     
 11436                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x00;
 11437   014916  6AD3               	clrf	211,c	;volatile
 11438   014918                     
 11439                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x50;
 11440   014918  0E50               	movlw	80
 11441   01491A  6E9B               	movwf	155,c	;volatile
 11442   01491C                     
 11443                           ; _OSCILLATOR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 0, argsize = 0, vargsize = 0
 11444   01491C  0012               	return		;funcret
 11445   01491E                     __end_of_OSCILLATOR_Initialize:
 11446                           	callstack 0
 11447                           
 11448 ;; *************** function _INTERRUPT_Initialize *****************
 11449 ;; Defined at:
 11450 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11451 ;; Parameters:    Size  Location     Type
 11452 ;;		None
 11453 ;; Auto vars:     Size  Location     Type
 11454 ;;		None
 11455 ;; Return value:  Size  Location     Type
 11456 ;;                  1  [STACK] void 
 11457 ;; Registers used:
 11458 ;;		None
 11459 ;; Tracked objects:
 11460 ;;		On entry : 0/0
 11461 ;;		On exit  : 0/0
 11462 ;;		Unchanged: 0/0
 11463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11468 ;;Total ram usage:        0 bytes
 11469 ;; Hardware stack levels used: 1
 11470 ;; Hardware stack levels required when called: 7
 11471 ;; This function calls:
 11472 ;;		Nothing
 11473 ;; This function is called by:
 11474 ;;		_SYSTEM_Initialize
 11475 ;; This function uses a reentrant model
 11476 ;;
 11477                           
 11478                           	psect	text41
 11479   01492A                     __ptext41:
 11480                           	callstack 0
 11481   01492A                     _INTERRUPT_Initialize:
 11482                           	callstack 22
 11483   01492A                     
 11484                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 11485   01492A  9ED0               	bcf	208,7,c	;volatile
 11486   01492C                     
 11487                           ; _INTERRUPT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 11488   01492C  0012               	return		;funcret
 11489   01492E                     __end_of_INTERRUPT_Initialize:
 11490                           	callstack 0
 11491                           
 11492 ;; *************** function _CanSetFilter *****************
 11493 ;; Defined at:
 11494 ;;		line 231 in file "can/can.c"
 11495 ;; Parameters:    Size  Location     Type
 11496 ;;  filter          1  [STACK] enum E5325
 11497 ;;  fObj            2  [STACK] PTR struct _CAN_FILTEROB
 11498 ;;		 -> fObj(6), 
 11499 ;;  mObj            2  [STACK] PTR struct _CAN_MASKOBJ_
 11500 ;;		 -> mObj(6), 
 11501 ;; Auto vars:     Size  Location     Type
 11502 ;;		None
 11503 ;; Return value:  Size  Location     Type
 11504 ;;                  1  [STACK] void 
 11505 ;; Registers used:
 11506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11507 ;; Tracked objects:
 11508 ;;		On entry : 0/0
 11509 ;;		On exit  : 0/0
 11510 ;;		Unchanged: 0/0
 11511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11516 ;;Total ram usage:        0 bytes
 11517 ;; Hardware stack levels used: 1
 11518 ;; Hardware stack levels required when called: 10
 11519 ;; This function calls:
 11520 ;;		_DRV_CANFDSPI_FilterDisable
 11521 ;;		_DRV_CANFDSPI_FilterMaskConfigure
 11522 ;;		_DRV_CANFDSPI_FilterObjectConfigure
 11523 ;;		_DRV_CANFDSPI_FilterToFifoLink
 11524 ;; This function is called by:
 11525 ;;		_main
 11526 ;; This function uses a reentrant model
 11527 ;;
 11528                           
 11529                           	psect	text42
 11530   014372                     __ptext42:
 11531                           	callstack 0
 11532   014372                     _CanSetFilter:
 11533                           	callstack 20
 11534   014372                     
 11535                           ;can/can.c: 231: void CanSetFilter(CAN_FILTER filter, CAN_FILTEROBJ_ID * fObj, CAN_MASKO
      +                          BJ_ID * mObj);can/can.c: 232: {;can/can.c: 234:     DRV_CANFDSPI_FilterDisable(filter);
 11536                           ;stkvar	_filter @ sp[(0)+-1]
 11537   014372  0EFF               	movlw	-1
 11538   014374  50E3               	movf	plusw1,w,c
 11539   014376  6EE6               	movwf	postinc1,c
 11540   014378  ECAB  F0A0         	call	_DRV_CANFDSPI_FilterDisable	;wreg free
 11541   01437C                     
 11542                           ;can/can.c: 235:     DRV_CANFDSPI_FilterObjectConfigure(filter,fObj);
 11543                           ;stkvar	_fObj @ sp[(0)+-3]
 11544   01437C  0EFD               	movlw	-3
 11545   01437E  CFE3 FFE6          	movff	plusw1,postinc1
 11546   014382  CFE3 FFE6          	movff	plusw1,postinc1
 11547                           
 11548                           ;stkvar	_filter @ sp[(-2)+-1]
 11549   014386  0EFD               	movlw	-3
 11550   014388  50E3               	movf	plusw1,w,c
 11551   01438A  6EE6               	movwf	postinc1,c
 11552   01438C  EC1A  F087         	call	_DRV_CANFDSPI_FilterObjectConfigure	;wreg free
 11553   014390                     
 11554                           ;can/can.c: 237:     DRV_CANFDSPI_FilterMaskConfigure(filter,mObj,fObj->EXIDE);
 11555                           ;stkvar	_fObj @ sp[(0)+-3]
 11556   014390  0EFD               	movlw	-3
 11557   014392  CFE3 F00B          	movff	plusw1,btemp+10
 11558   014396  0EFE               	movlw	-2
 11559   014398  CFE3 F00C          	movff	plusw1,btemp+11
 11560   01439C  0E05               	movlw	5
 11561   01439E  240B               	addwf	(btemp+10)^0,w,c
 11562   0143A0  6ED9               	movwf	fsr2l,c
 11563   0143A2  0E00               	movlw	0
 11564   0143A4  200C               	addwfc	(btemp+11)^0,w,c
 11565   0143A6  6EDA               	movwf	fsr2h,c
 11566   0143A8  50DF               	movf	indf2,w,c
 11567   0143AA  6EE6               	movwf	postinc1,c
 11568                           
 11569                           ;stkvar	_mObj @ sp[(-1)+-5]
 11570   0143AC  0EFA               	movlw	-6
 11571   0143AE  CFE3 FFE6          	movff	plusw1,postinc1
 11572   0143B2  CFE3 FFE6          	movff	plusw1,postinc1
 11573                           
 11574                           ;stkvar	_filter @ sp[(-3)+-1]
 11575   0143B6  0EFC               	movlw	-4
 11576   0143B8  50E3               	movf	plusw1,w,c
 11577   0143BA  6EE6               	movwf	postinc1,c
 11578   0143BC  ECBF  F088         	call	_DRV_CANFDSPI_FilterMaskConfigure	;wreg free
 11579   0143C0                     
 11580                           ;can/can.c: 239:     DRV_CANFDSPI_FilterToFifoLink(filter,CAN_FIFO_CH2,1);
 11581   0143C0  0E01               	movlw	1
 11582   0143C2  6EE6               	movwf	postinc1,c
 11583   0143C4  0E02               	movlw	2
 11584   0143C6  6EE6               	movwf	postinc1,c
 11585                           
 11586                           ;stkvar	_filter @ sp[(-2)+-1]
 11587   0143C8  0EFD               	movlw	-3
 11588   0143CA  50E3               	movf	plusw1,w,c
 11589   0143CC  6EE6               	movwf	postinc1,c
 11590   0143CE  EC60  F0A0         	call	_DRV_CANFDSPI_FilterToFifoLink	;wreg free
 11591   0143D2                     
 11592                           ; _CanSetFilter: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, 
      +                          argsize = 5, vargsize = 0
 11593   0143D2  0EFB               	movlw	251
 11594   0143D4  26E1               	addwf	fsr1l,f,c
 11595   0143D6  0EFF               	movlw	255
 11596   0143D8  22E2               	addwfc	fsr1h,f,c
 11597   0143DA  0012               	return		;funcret
 11598   0143DC                     __end_of_CanSetFilter:
 11599                           	callstack 0
 11600                           
 11601 ;; *************** function _DRV_CANFDSPI_FilterToFifoLink *****************
 11602 ;; Defined at:
 11603 ;;		line 1072 in file "can/can.c"
 11604 ;; Parameters:    Size  Location     Type
 11605 ;;  filter          1  [STACK] enum E5325
 11606 ;;  channel         1  [STACK] enum E5290
 11607 ;;  enable          1  [STACK] _Bool 
 11608 ;; Auto vars:     Size  Location     Type
 11609 ;;  a               2  [STACK] unsigned short 
 11610 ;;  fCtrl           1  [STACK] struct _REG_CiFLTCON_BYT
 11611 ;;  spiTransferE    1    0        char 
 11612 ;; Return value:  Size  Location     Type
 11613 ;;                  1  [STACK] char 
 11614 ;; Registers used:
 11615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 11616 ;; Tracked objects:
 11617 ;;		On entry : 0/0
 11618 ;;		On exit  : 0/0
 11619 ;;		Unchanged: 0/0
 11620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11625 ;;Total ram usage:        0 bytes
 11626 ;; Hardware stack levels used: 1
 11627 ;; Hardware stack levels required when called: 9
 11628 ;; This function calls:
 11629 ;;		_DRV_CANFDSPI_WriteByte
 11630 ;; This function is called by:
 11631 ;;		_CanSetFilter
 11632 ;; This function uses a reentrant model
 11633 ;;
 11634                           
 11635                           	psect	text43
 11636   0140C0                     __ptext43:
 11637                           	callstack 0
 11638   0140C0                     _DRV_CANFDSPI_FilterToFifoLink:
 11639                           	callstack 0
 11640                           
 11641                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11642   0140C0  52E6               	movf	postinc1,f,c
 11643   0140C2  52E6               	movf	postinc1,f,c
 11644   0140C4  52E6               	movf	postinc1,f,c
 11645   0140C6                     
 11646                           ;can/can.c: 1080:     if (enable) {
 11647                           ;stkvar	_enable @ sp[(-3)+-3]
 11648   0140C6  0EFA               	movlw	-6
 11649   0140C8  50E3               	movf	plusw1,w,c
 11650   0140CA  B4D8               	btfsc	status,2,c
 11651   0140CC  EF6A  F0A0         	goto	u2701
 11652   0140D0  EF6C  F0A0         	goto	u2700
 11653   0140D4                     u2701:
 11654   0140D4  EF76  F0A0         	goto	l4955
 11655   0140D8                     u2700:
 11656   0140D8                     
 11657                           ;can/can.c: 1081:         fCtrl.bF.Enable = 1;
 11658                           ;stkvar	_fCtrl @ sp[(-3)+2]
 11659   0140D8  50E1               	movf	fsr1l,w,c
 11660   0140DA  0FFF               	addlw	-1
 11661   0140DC  6ED9               	movwf	fsr2l,c
 11662   0140DE  50E2               	movf	fsr1h,w,c
 11663   0140E0  6EDA               	movwf	fsr2h,c
 11664   0140E2  0EFF               	movlw	255
 11665   0140E4  22DA               	addwfc	fsr2h,f,c
 11666   0140E6  8EDF               	bsf	indf2,7,c
 11667                           
 11668                           ;can/can.c: 1082:     } else {
 11669   0140E8  EF7E  F0A0         	goto	l4957
 11670   0140EC                     l4955:
 11671                           
 11672                           ;can/can.c: 1083:         fCtrl.bF.Enable = 0;
 11673                           ;stkvar	_fCtrl @ sp[(-3)+2]
 11674   0140EC  50E1               	movf	fsr1l,w,c
 11675   0140EE  0FFF               	addlw	-1
 11676   0140F0  6ED9               	movwf	fsr2l,c
 11677   0140F2  50E2               	movf	fsr1h,w,c
 11678   0140F4  6EDA               	movwf	fsr2h,c
 11679   0140F6  0EFF               	movlw	255
 11680   0140F8  22DA               	addwfc	fsr2h,f,c
 11681   0140FA  9EDF               	bcf	indf2,7,c
 11682   0140FC                     l4957:
 11683                           
 11684                           ;can/can.c: 1087:     fCtrl.bF.BufferPointer = channel;
 11685                           ;stkvar	_channel @ sp[(-3)+-2]
 11686   0140FC  0EFB               	movlw	-5
 11687   0140FE  CFE3 F00C          	movff	plusw1,btemp+11
 11688                           
 11689                           ;stkvar	_fCtrl @ sp[(-3)+2]
 11690   014102  50E1               	movf	fsr1l,w,c
 11691   014104  0FFF               	addlw	-1
 11692   014106  6ED9               	movwf	fsr2l,c
 11693   014108  50E2               	movf	fsr1h,w,c
 11694   01410A  6EDA               	movwf	fsr2h,c
 11695   01410C  0EFF               	movlw	255
 11696   01410E  22DA               	addwfc	fsr2h,f,c
 11697   014110  50DF               	movf	223,w,c
 11698   014112  180C               	xorwf	(btemp+11)^0,w,c
 11699   014114  0BE0               	andlw	-32
 11700   014116  180C               	xorwf	(btemp+11)^0,w,c
 11701   014118  6EDF               	movwf	223,c
 11702   01411A                     
 11703                           ;can/can.c: 1088:     a = (0x050 +((3*4)*CAN_FIFO_TOTAL_CHANNELS)) + filter;
 11704                           ;stkvar	_filter @ sp[(-3)+-1]
 11705   01411A  0EFC               	movlw	-4
 11706   01411C  CFE3 F00C          	movff	plusw1,btemp+11
 11707   014120  0ED0               	movlw	208
 11708   014122  240C               	addwf	(btemp+11)^0,w,c
 11709   014124  6E09               	movwf	(btemp+8)^0,c
 11710   014126  6A0A               	clrf	(btemp+9)^0,c
 11711   014128  0E01               	movlw	1
 11712   01412A  220A               	addwfc	(btemp+9)^0,f,c
 11713                           
 11714                           ;stkvar	_a @ sp[(-3)+0]
 11715   01412C  0EFD               	movlw	-3
 11716   01412E  C009  FFE3         	movff	btemp+8,plusw1
 11717   014132  0EFE               	movlw	-2
 11718   014134  C00A  FFE3         	movff	btemp+9,plusw1
 11719   014138                     
 11720                           ;stkvar	_fCtrl @ sp[(-3)+2]
 11721   014138  0EFF               	movlw	-1
 11722   01413A  50E3               	movf	plusw1,w,c
 11723   01413C  6EE6               	movwf	postinc1,c
 11724                           
 11725                           ;stkvar	_a @ sp[(-4)+0]
 11726   01413E  0EFC               	movlw	-4
 11727   014140  CFE3 FFE6          	movff	plusw1,postinc1
 11728   014144  CFE3 FFE6          	movff	plusw1,postinc1
 11729   014148  ECDF  F0A2         	call	_DRV_CANFDSPI_WriteByte	;wreg free
 11730   01414C                     
 11731                           ; _DRV_CANFDSPI_FilterToFifoLink: autosize = 3, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 3, argsize = 3, vargsize = 0
 11732   01414C  0EFA               	movlw	250
 11733   01414E  26E1               	addwf	fsr1l,f,c
 11734   014150  0EFF               	movlw	255
 11735   014152  22E2               	addwfc	fsr1h,f,c
 11736   014154  0012               	return		;funcret
 11737   014156                     __end_of_DRV_CANFDSPI_FilterToFifoLink:
 11738                           	callstack 0
 11739                           
 11740 ;; *************** function _DRV_CANFDSPI_FilterObjectConfigure *****************
 11741 ;; Defined at:
 11742 ;;		line 1001 in file "can/can.c"
 11743 ;; Parameters:    Size  Location     Type
 11744 ;;  filter          1  [STACK] enum E5325
 11745 ;;  id              2  [STACK] PTR struct _CAN_FILTEROB
 11746 ;;		 -> fObj(6), 
 11747 ;; Auto vars:     Size  Location     Type
 11748 ;;  temp32          4  [STACK] unsigned long 
 11749 ;;  fObj            6  [STACK] struct _REG_CiFLTOBJ
 11750 ;;  a               2  [STACK] unsigned short 
 11751 ;;  spiTransferE    1    0        char 
 11752 ;; Return value:  Size  Location     Type
 11753 ;;                  1  [STACK] char 
 11754 ;; Registers used:
 11755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11756 ;; Tracked objects:
 11757 ;;		On entry : 0/0
 11758 ;;		On exit  : 0/0
 11759 ;;		Unchanged: 0/0
 11760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11765 ;;Total ram usage:        0 bytes
 11766 ;; Hardware stack levels used: 1
 11767 ;; Hardware stack levels required when called: 9
 11768 ;; This function calls:
 11769 ;;		_DRV_CANFDSPI_WriteWord
 11770 ;; This function is called by:
 11771 ;;		_CanSetFilter
 11772 ;; This function uses a reentrant model
 11773 ;;
 11774                           
 11775                           	psect	text44
 11776   010E34                     __ptext44:
 11777                           	callstack 0
 11778   010E34                     _DRV_CANFDSPI_FilterObjectConfigure:
 11779                           	callstack 0
 11780                           
 11781                           ; autosize = 12, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11782   010E34  0E0C               	movlw	12
 11783   010E36  26E1               	addwf	fsr1l,f,c
 11784   010E38  0E00               	movlw	0
 11785   010E3A  22E2               	addwfc	fsr1h,f,c
 11786   010E3C                     
 11787                           ;can/can.c: 1009:     fObj.word = 0;
 11788                           ;stkvar	_fObj @ sp[(-12)+4]
 11789   010E3C  0EF8               	movlw	-8
 11790   010E3E  6AE3               	clrf	plusw1,c
 11791   010E40  0EF9               	movlw	-7
 11792   010E42  6AE3               	clrf	plusw1,c
 11793   010E44  0EFA               	movlw	-6
 11794   010E46  6AE3               	clrf	plusw1,c
 11795   010E48  0EFB               	movlw	-5
 11796   010E4A  6AE3               	clrf	plusw1,c
 11797   010E4C                     
 11798                           ;can/can.c: 1011:     if(id->EXIDE == 0)
 11799                           ;stkvar	_id @ sp[(-12)+-3]
 11800   010E4C  0EF1               	movlw	-15
 11801   010E4E  CFE3 F00B          	movff	plusw1,btemp+10
 11802   010E52  0EF2               	movlw	-14
 11803   010E54  CFE3 F00C          	movff	plusw1,btemp+11
 11804   010E58  0E05               	movlw	5
 11805   010E5A  240B               	addwf	(btemp+10)^0,w,c
 11806   010E5C  6ED9               	movwf	fsr2l,c
 11807   010E5E  0E00               	movlw	0
 11808   010E60  200C               	addwfc	(btemp+11)^0,w,c
 11809   010E62  6EDA               	movwf	fsr2h,c
 11810   010E64  50DF               	movf	indf2,w,c
 11811   010E66  A4D8               	btfss	status,2,c
 11812   010E68  EF38  F087         	goto	u2521
 11813   010E6C  EF3A  F087         	goto	u2520
 11814   010E70                     u2521:
 11815   010E70  EFD2  F087         	goto	l4901
 11816   010E74                     u2520:
 11817   010E74                     
 11818                           ;can/can.c: 1012:     {;can/can.c: 1013:       fObj.byte[0] = (uint8_t)id->ID;
 11819                           ;stkvar	_id @ sp[(-12)+-3]
 11820   010E74  0EF1               	movlw	-15
 11821   010E76  CFE3 FFD9          	movff	plusw1,fsr2l
 11822   010E7A  0EF2               	movlw	-14
 11823   010E7C  CFE3 FFDA          	movff	plusw1,fsr2h
 11824   010E80  50DF               	movf	indf2,w,c
 11825   010E82  6E0C               	movwf	(btemp+11)^0,c
 11826                           
 11827                           ;stkvar	_fObj @ sp[(-12)+4]
 11828   010E84  0EF8               	movlw	-8
 11829   010E86  C00C  FFE3         	movff	btemp+11,plusw1
 11830   010E8A                     
 11831                           ;can/can.c: 1014:       fObj.byte[1] = (uint8_t)(id->ID >> 8);
 11832                           ;stkvar	_fObj @ sp[(-12)+4]
 11833   010E8A  0EF9               	movlw	249
 11834   010E8C  24E1               	addwf	fsr1l,w,c
 11835   010E8E  6ED9               	movwf	fsr2l,c
 11836   010E90  0EFF               	movlw	255
 11837   010E92  20E2               	addwfc	fsr1h,w,c
 11838   010E94  6EDA               	movwf	fsr2h,c
 11839                           
 11840                           ;stkvar	_id @ sp[(-12)+-3]
 11841   010E96  0EF1               	movlw	-15
 11842   010E98  CFE3 FFE9          	movff	plusw1,fsr0l
 11843   010E9C  0EF2               	movlw	-14
 11844   010E9E  CFE3 FFEA          	movff	plusw1,fsr0h
 11845   010EA2  CFEE F009          	movff	postinc0,btemp+8
 11846   010EA6  CFEE F00A          	movff	postinc0,btemp+9
 11847   010EAA  CFEE F00B          	movff	postinc0,btemp+10
 11848   010EAE  CFEE F00C          	movff	postinc0,btemp+11
 11849   010EB2  C00A  F009         	movff	btemp+9,btemp+8
 11850   010EB6  C00B  F00A         	movff	btemp+10,btemp+9
 11851   010EBA  C00C  F00B         	movff	btemp+11,btemp+10
 11852   010EBE  6A0C               	clrf	(btemp+11)^0,c
 11853   010EC0  5009               	movf	(btemp+8)^0,w,c
 11854   010EC2  6EDF               	movwf	indf2,c
 11855   010EC4                     
 11856                           ;can/can.c: 1015:       fObj.byte[2] = (uint8_t)(id->ID >> 16);
 11857                           ;stkvar	_fObj @ sp[(-12)+4]
 11858   010EC4  0EFA               	movlw	250
 11859   010EC6  24E1               	addwf	fsr1l,w,c
 11860   010EC8  6ED9               	movwf	fsr2l,c
 11861   010ECA  0EFF               	movlw	255
 11862   010ECC  20E2               	addwfc	fsr1h,w,c
 11863   010ECE  6EDA               	movwf	fsr2h,c
 11864                           
 11865                           ;stkvar	_id @ sp[(-12)+-3]
 11866   010ED0  0EF1               	movlw	-15
 11867   010ED2  CFE3 FFE9          	movff	plusw1,fsr0l
 11868   010ED6  0EF2               	movlw	-14
 11869   010ED8  CFE3 FFEA          	movff	plusw1,fsr0h
 11870   010EDC  CFEE F009          	movff	postinc0,btemp+8
 11871   010EE0  CFEE F00A          	movff	postinc0,btemp+9
 11872   010EE4  CFEE F00B          	movff	postinc0,btemp+10
 11873   010EE8  CFEE F00C          	movff	postinc0,btemp+11
 11874   010EEC  0E11               	movlw	17
 11875   010EEE  EF7E  F087         	goto	u2530
 11876   010EF2                     u2535:
 11877   010EF2  90D8               	bcf	status,0,c
 11878   010EF4  320C               	rrcf	(btemp+11)^0,f,c
 11879   010EF6  320B               	rrcf	(btemp+10)^0,f,c
 11880   010EF8  320A               	rrcf	(btemp+9)^0,f,c
 11881   010EFA  3209               	rrcf	(btemp+8)^0,f,c
 11882   010EFC                     u2530:
 11883   010EFC  2EE8               	decfsz	wreg,f,c
 11884   010EFE  EF79  F087         	goto	u2535
 11885   010F02  5009               	movf	(btemp+8)^0,w,c
 11886   010F04  6EDF               	movwf	indf2,c
 11887   010F06                     
 11888                           ;can/can.c: 1016:       fObj.byte[3] = (uint8_t)(id->ID >> 24) | (uint8_t)(id->SID11 << 
      +                          5) | (uint8_t)(id->EXIDE << 6);
 11889                           ;stkvar	_fObj @ sp[(-12)+4]
 11890   010F06  0EFB               	movlw	251
 11891   010F08  24E1               	addwf	fsr1l,w,c
 11892   010F0A  6ED9               	movwf	fsr2l,c
 11893   010F0C  0EFF               	movlw	255
 11894   010F0E  20E2               	addwfc	fsr1h,w,c
 11895   010F10  6EDA               	movwf	fsr2h,c
 11896                           
 11897                           ;stkvar	_id @ sp[(-12)+-3]
 11898   010F12  0EF1               	movlw	-15
 11899   010F14  CFE3 F00B          	movff	plusw1,btemp+10
 11900   010F18  0EF2               	movlw	-14
 11901   010F1A  CFE3 F00C          	movff	plusw1,btemp+11
 11902   010F1E  0E05               	movlw	5
 11903   010F20  240B               	addwf	(btemp+10)^0,w,c
 11904   010F22  6EE9               	movwf	fsr0l,c
 11905   010F24  0E00               	movlw	0
 11906   010F26  200C               	addwfc	(btemp+11)^0,w,c
 11907   010F28  6EEA               	movwf	fsr0h,c
 11908   010F2A  50EF               	movf	indf0,w,c
 11909   010F2C  6E0C               	movwf	(btemp+11)^0,c
 11910   010F2E  0E06               	movlw	6
 11911   010F30  6E01               	movwf	btemp^0,c
 11912   010F32                     u2545:
 11913   010F32  90D8               	bcf	status,0,c
 11914   010F34  360C               	rlcf	(btemp+11)^0,f,c
 11915   010F36  2E01               	decfsz	btemp^0,f,c
 11916   010F38  EF99  F087         	goto	u2545
 11917                           
 11918                           ;stkvar	_id @ sp[(-12)+-3]
 11919   010F3C  0EF1               	movlw	-15
 11920   010F3E  CFE3 F009          	movff	plusw1,btemp+8
 11921   010F42  0EF2               	movlw	-14
 11922   010F44  CFE3 F00A          	movff	plusw1,btemp+9
 11923   010F48  0E04               	movlw	4
 11924   010F4A  2409               	addwf	(btemp+8)^0,w,c
 11925   010F4C  6EE9               	movwf	fsr0l,c
 11926   010F4E  0E00               	movlw	0
 11927   010F50  200A               	addwfc	(btemp+9)^0,w,c
 11928   010F52  6EEA               	movwf	fsr0h,c
 11929   010F54  50EF               	movf	indf0,w,c
 11930   010F56  6E0B               	movwf	(btemp+10)^0,c
 11931   010F58  0E05               	movlw	5
 11932   010F5A  6E01               	movwf	btemp^0,c
 11933   010F5C                     u2555:
 11934   010F5C  90D8               	bcf	status,0,c
 11935   010F5E  360B               	rlcf	(btemp+10)^0,f,c
 11936   010F60  2E01               	decfsz	btemp^0,f,c
 11937   010F62  EFAE  F087         	goto	u2555
 11938                           
 11939                           ;stkvar	_id @ sp[(-12)+-3]
 11940   010F66  0EF1               	movlw	-15
 11941   010F68  CFE3 FFE9          	movff	plusw1,fsr0l
 11942   010F6C  0EF2               	movlw	-14
 11943   010F6E  CFE3 FFEA          	movff	plusw1,fsr0h
 11944   010F72  CFEE F005          	movff	postinc0,btemp+4
 11945   010F76  CFEE F006          	movff	postinc0,btemp+5
 11946   010F7A  CFEE F007          	movff	postinc0,btemp+6
 11947   010F7E  CFEE F008          	movff	postinc0,btemp+7
 11948   010F82  0E19               	movlw	25
 11949   010F84  EFC9  F087         	goto	u2560
 11950   010F88                     u2565:
 11951   010F88  90D8               	bcf	status,0,c
 11952   010F8A  3208               	rrcf	(btemp+7)^0,f,c
 11953   010F8C  3207               	rrcf	(btemp+6)^0,f,c
 11954   010F8E  3206               	rrcf	(btemp+5)^0,f,c
 11955   010F90  3205               	rrcf	(btemp+4)^0,f,c
 11956   010F92                     u2560:
 11957   010F92  2EE8               	decfsz	wreg,f,c
 11958   010F94  EFC4  F087         	goto	u2565
 11959   010F98  5005               	movf	(btemp+4)^0,w,c
 11960   010F9A  100B               	iorwf	(btemp+10)^0,w,c
 11961   010F9C  100C               	iorwf	(btemp+11)^0,w,c
 11962   010F9E  6EDF               	movwf	indf2,c
 11963                           
 11964                           ;can/can.c: 1017:     }
 11965   010FA0  EF97  F088         	goto	l4913
 11966   010FA4                     l4901:
 11967                           
 11968                           ;can/can.c: 1019:     {;can/can.c: 1020:       uint32_t temp32 = ((id->ID & 0x0003FFFF) 
      +                          << 11) |
 11969                           ;stkvar	_id @ sp[(-12)+-3]
 11970   010FA4  0EF1               	movlw	-15
 11971   010FA6  CFE3 FFD9          	movff	plusw1,fsr2l
 11972   010FAA  0EF2               	movlw	-14
 11973   010FAC  CFE3 FFDA          	movff	plusw1,fsr2h
 11974   010FB0  CFDE F009          	movff	postinc2,btemp+8
 11975   010FB4  CFDE F00A          	movff	postinc2,btemp+9
 11976   010FB8  CFDE F00B          	movff	postinc2,btemp+10
 11977   010FBC  CFDE F00C          	movff	postinc2,btemp+11
 11978   010FC0  0E13               	movlw	19
 11979   010FC2  EFE8  F087         	goto	u2570
 11980   010FC6                     u2575:
 11981   010FC6  90D8               	bcf	status,0,c
 11982   010FC8  320C               	rrcf	(btemp+11)^0,f,c
 11983   010FCA  320B               	rrcf	(btemp+10)^0,f,c
 11984   010FCC  320A               	rrcf	(btemp+9)^0,f,c
 11985   010FCE  3209               	rrcf	(btemp+8)^0,f,c
 11986   010FD0                     u2570:
 11987   010FD0  2EE8               	decfsz	wreg,f,c
 11988   010FD2  EFE3  F087         	goto	u2575
 11989   010FD6  0EFF               	movlw	255
 11990   010FD8  1409               	andwf	(btemp+8)^0,w,c
 11991   010FDA  6E05               	movwf	(btemp+4)^0,c
 11992   010FDC  0E07               	movlw	7
 11993   010FDE  140A               	andwf	(btemp+9)^0,w,c
 11994   010FE0  6E06               	movwf	(btemp+5)^0,c
 11995   010FE2  0E00               	movlw	0
 11996   010FE4  140B               	andwf	(btemp+10)^0,w,c
 11997   010FE6  6E07               	movwf	(btemp+6)^0,c
 11998   010FE8  0E00               	movlw	0
 11999   010FEA  140C               	andwf	(btemp+11)^0,w,c
 12000   010FEC  6E08               	movwf	(btemp+7)^0,c
 12001                           
 12002                           ;stkvar	_id @ sp[(-12)+-3]
 12003   010FEE  0EF1               	movlw	-15
 12004   010FF0  CFE3 FFD9          	movff	plusw1,fsr2l
 12005   010FF4  0EF2               	movlw	-14
 12006   010FF6  CFE3 FFDA          	movff	plusw1,fsr2h
 12007   010FFA  0EFF               	movlw	255
 12008   010FFC  14DE               	andwf	postinc2,w,c
 12009   010FFE  6E09               	movwf	(btemp+8)^0,c
 12010   011000  0EFF               	movlw	255
 12011   011002  14DE               	andwf	postinc2,w,c
 12012   011004  6E0A               	movwf	(btemp+9)^0,c
 12013   011006  0E03               	movlw	3
 12014   011008  14DE               	andwf	postinc2,w,c
 12015   01100A  6E0B               	movwf	(btemp+10)^0,c
 12016   01100C  0E00               	movlw	0
 12017   01100E  14DE               	andwf	postinc2,w,c
 12018   011010  6E0C               	movwf	(btemp+11)^0,c
 12019   011012  0E0B               	movlw	11
 12020   011014                     u2585:
 12021   011014  90D8               	bcf	status,0,c
 12022   011016  3609               	rlcf	(btemp+8)^0,f,c
 12023   011018  360A               	rlcf	(btemp+9)^0,f,c
 12024   01101A  360B               	rlcf	(btemp+10)^0,f,c
 12025   01101C  360C               	rlcf	(btemp+11)^0,f,c
 12026   01101E  2EE8               	decfsz	wreg,f,c
 12027   011020  EF0A  F088         	goto	u2585
 12028   011024  5005               	movf	(btemp+4)^0,w,c
 12029   011026  1009               	iorwf	(btemp+8)^0,w,c
 12030   011028  6E01               	movwf	btemp^0,c
 12031   01102A  5006               	movf	(btemp+5)^0,w,c
 12032   01102C  100A               	iorwf	(btemp+9)^0,w,c
 12033   01102E  6E02               	movwf	(btemp+1)^0,c
 12034   011030  5007               	movf	(btemp+6)^0,w,c
 12035   011032  100B               	iorwf	(btemp+10)^0,w,c
 12036   011034  6E03               	movwf	(btemp+2)^0,c
 12037   011036  5008               	movf	(btemp+7)^0,w,c
 12038   011038  100C               	iorwf	(btemp+11)^0,w,c
 12039   01103A  6E04               	movwf	(btemp+3)^0,c
 12040                           
 12041                           ;stkvar	_temp32 @ sp[(-12)+0]
 12042   01103C  0EF4               	movlw	-12
 12043   01103E  C001  FFE3         	movff	btemp,plusw1
 12044   011042  0EF5               	movlw	-11
 12045   011044  C002  FFE3         	movff	btemp+1,plusw1
 12046   011048  0EF6               	movlw	-10
 12047   01104A  C003  FFE3         	movff	btemp+2,plusw1
 12048   01104E  0EF7               	movlw	-9
 12049   011050  C004  FFE3         	movff	btemp+3,plusw1
 12050   011054                     
 12051                           ;can/can.c: 1022:       temp32 = temp32 & 0x1FFFFFFF;
 12052                           ;stkvar	_temp32 @ sp[(-12)+0]
 12053   011054  50E1               	movf	fsr1l,w,c
 12054   011056  0FF4               	addlw	-12
 12055   011058  6ED9               	movwf	fsr2l,c
 12056   01105A  50E2               	movf	fsr1h,w,c
 12057   01105C  6EDA               	movwf	fsr2h,c
 12058   01105E  0EFF               	movlw	255
 12059   011060  22DA               	addwfc	fsr2h,f,c
 12060   011062  0EFF               	movlw	255
 12061   011064  16DE               	andwf	postinc2,f,c
 12062   011066  0EFF               	movlw	255
 12063   011068  16DE               	andwf	postinc2,f,c
 12064   01106A  0EFF               	movlw	255
 12065   01106C  16DE               	andwf	postinc2,f,c
 12066   01106E  0E1F               	movlw	31
 12067   011070  16DE               	andwf	postinc2,f,c
 12068   011072                     
 12069                           ;can/can.c: 1023:       fObj.byte[0] = (uint8_t)temp32;
 12070                           ;stkvar	_temp32 @ sp[(-12)+0]
 12071                           ;stkvar	_fObj @ sp[(-12)+4]
 12072   011072  0EF4               	movlw	-12
 12073   011074  CFE3 F001          	movff	plusw1,btemp
 12074   011078  0EF8               	movlw	-8
 12075   01107A  C001  FFE3         	movff	btemp,plusw1
 12076   01107E                     
 12077                           ;can/can.c: 1024:       fObj.byte[1] = (uint8_t)(temp32 >> 8);
 12078                           ;stkvar	_temp32 @ sp[(-12)+0]
 12079   01107E  0EF5               	movlw	245
 12080   011080  24E1               	addwf	fsr1l,w,c
 12081   011082  6ED9               	movwf	fsr2l,c
 12082   011084  0EFF               	movlw	255
 12083   011086  20E2               	addwfc	fsr1h,w,c
 12084   011088  6EDA               	movwf	fsr2h,c
 12085                           
 12086                           ;stkvar	_fObj @ sp[(-12)+4]
 12087   01108A  0EF9               	movlw	249
 12088   01108C  24E1               	addwf	fsr1l,w,c
 12089   01108E  6EE9               	movwf	fsr0l,c
 12090   011090  0EFF               	movlw	255
 12091   011092  20E2               	addwfc	fsr1h,w,c
 12092   011094  6EEA               	movwf	fsr0h,c
 12093   011096  CFDF FFEF          	movff	indf2,indf0
 12094   01109A                     
 12095                           ;can/can.c: 1025:       fObj.byte[2] = (uint8_t)(temp32 >> 16);
 12096                           ;stkvar	_temp32 @ sp[(-12)+0]
 12097   01109A  0EF6               	movlw	246
 12098   01109C  24E1               	addwf	fsr1l,w,c
 12099   01109E  6ED9               	movwf	fsr2l,c
 12100   0110A0  0EFF               	movlw	255
 12101   0110A2  20E2               	addwfc	fsr1h,w,c
 12102   0110A4  6EDA               	movwf	fsr2h,c
 12103                           
 12104                           ;stkvar	_fObj @ sp[(-12)+4]
 12105   0110A6  0EFA               	movlw	250
 12106   0110A8  24E1               	addwf	fsr1l,w,c
 12107   0110AA  6EE9               	movwf	fsr0l,c
 12108   0110AC  0EFF               	movlw	255
 12109   0110AE  20E2               	addwfc	fsr1h,w,c
 12110   0110B0  6EEA               	movwf	fsr0h,c
 12111   0110B2  CFDF FFEF          	movff	indf2,indf0
 12112   0110B6                     
 12113                           ;can/can.c: 1026:       fObj.byte[3] = (uint8_t)(temp32 >> 24) | (uint8_t)(id->SID11 << 
      +                          5) | (uint8_t)(id->EXIDE << 6);
 12114                           ;stkvar	_fObj @ sp[(-12)+4]
 12115   0110B6  0EFB               	movlw	251
 12116   0110B8  24E1               	addwf	fsr1l,w,c
 12117   0110BA  6ED9               	movwf	fsr2l,c
 12118   0110BC  0EFF               	movlw	255
 12119   0110BE  20E2               	addwfc	fsr1h,w,c
 12120   0110C0  6EDA               	movwf	fsr2h,c
 12121                           
 12122                           ;stkvar	_temp32 @ sp[(-12)+0]
 12123   0110C2  0EF7               	movlw	247
 12124   0110C4  24E1               	addwf	fsr1l,w,c
 12125   0110C6  6EE9               	movwf	fsr0l,c
 12126   0110C8  0EFF               	movlw	255
 12127   0110CA  20E2               	addwfc	fsr1h,w,c
 12128   0110CC  6EEA               	movwf	fsr0h,c
 12129   0110CE  50EF               	movf	indf0,w,c
 12130   0110D0  6E0C               	movwf	(btemp+11)^0,c
 12131                           
 12132                           ;stkvar	_id @ sp[(-12)+-3]
 12133   0110D2  0EF1               	movlw	-15
 12134   0110D4  CFE3 F009          	movff	plusw1,btemp+8
 12135   0110D8  0EF2               	movlw	-14
 12136   0110DA  CFE3 F00A          	movff	plusw1,btemp+9
 12137   0110DE  0E05               	movlw	5
 12138   0110E0  2409               	addwf	(btemp+8)^0,w,c
 12139   0110E2  6EE9               	movwf	fsr0l,c
 12140   0110E4  0E00               	movlw	0
 12141   0110E6  200A               	addwfc	(btemp+9)^0,w,c
 12142   0110E8  6EEA               	movwf	fsr0h,c
 12143   0110EA  50EF               	movf	indf0,w,c
 12144   0110EC  6E0B               	movwf	(btemp+10)^0,c
 12145   0110EE  0E06               	movlw	6
 12146   0110F0  6E01               	movwf	btemp^0,c
 12147   0110F2                     u2595:
 12148   0110F2  90D8               	bcf	status,0,c
 12149   0110F4  360B               	rlcf	(btemp+10)^0,f,c
 12150   0110F6  2E01               	decfsz	btemp^0,f,c
 12151   0110F8  EF79  F088         	goto	u2595
 12152                           
 12153                           ;stkvar	_id @ sp[(-12)+-3]
 12154   0110FC  0EF1               	movlw	-15
 12155   0110FE  CFE3 F009          	movff	plusw1,btemp+8
 12156   011102  0EF2               	movlw	-14
 12157   011104  CFE3 F00A          	movff	plusw1,btemp+9
 12158   011108  0E04               	movlw	4
 12159   01110A  2409               	addwf	(btemp+8)^0,w,c
 12160   01110C  6EE9               	movwf	fsr0l,c
 12161   01110E  0E00               	movlw	0
 12162   011110  200A               	addwfc	(btemp+9)^0,w,c
 12163   011112  6EEA               	movwf	fsr0h,c
 12164   011114  50EF               	movf	indf0,w,c
 12165   011116  6E0A               	movwf	(btemp+9)^0,c
 12166   011118  0E05               	movlw	5
 12167   01111A  6E01               	movwf	btemp^0,c
 12168   01111C                     u2605:
 12169   01111C  90D8               	bcf	status,0,c
 12170   01111E  360A               	rlcf	(btemp+9)^0,f,c
 12171   011120  2E01               	decfsz	btemp^0,f,c
 12172   011122  EF8E  F088         	goto	u2605
 12173   011126  500A               	movf	(btemp+9)^0,w,c
 12174   011128  100B               	iorwf	(btemp+10)^0,w,c
 12175   01112A  100C               	iorwf	(btemp+11)^0,w,c
 12176   01112C  6EDF               	movwf	indf2,c
 12177   01112E                     l4913:
 12178                           
 12179                           ;can/can.c: 1028:     a = ((0x050 +((3*4)*CAN_FIFO_TOTAL_CHANNELS))+CAN_FIFO_TOTAL_CHANN
      +                          ELS) + (filter * (2*4));
 12180                           ;stkvar	_filter @ sp[(-12)+-1]
 12181   01112E  0EF3               	movlw	-13
 12182   011130  50E3               	movf	plusw1,w,c
 12183   011132  0D08               	mullw	8
 12184   011134  CFF3 F00B          	movff	prodl,btemp+10
 12185   011138  CFF4 F00C          	movff	prodh,btemp+11
 12186   01113C  0EF0               	movlw	240
 12187   01113E  240B               	addwf	(btemp+10)^0,w,c
 12188   011140  6E09               	movwf	(btemp+8)^0,c
 12189   011142  0E01               	movlw	1
 12190   011144  200C               	addwfc	(btemp+11)^0,w,c
 12191   011146  6E0A               	movwf	(btemp+9)^0,c
 12192                           
 12193                           ;stkvar	_a @ sp[(-12)+10]
 12194   011148  0EFE               	movlw	-2
 12195   01114A  C009  FFE3         	movff	btemp+8,plusw1
 12196   01114E  0EFF               	movlw	-1
 12197   011150  C00A  FFE3         	movff	btemp+9,plusw1
 12198   011154                     
 12199                           ;stkvar	_fObj @ sp[(-12)+4]
 12200   011154  0EF8               	movlw	-8
 12201   011156  CFE3 FFE6          	movff	plusw1,postinc1
 12202   01115A  CFE3 FFE6          	movff	plusw1,postinc1
 12203   01115E  CFE3 FFE6          	movff	plusw1,postinc1
 12204   011162  CFE3 FFE6          	movff	plusw1,postinc1
 12205                           
 12206                           ;stkvar	_a @ sp[(-16)+10]
 12207   011166  0EFA               	movlw	-6
 12208   011168  CFE3 FFE6          	movff	plusw1,postinc1
 12209   01116C  CFE3 FFE6          	movff	plusw1,postinc1
 12210   011170  ECED  F09A         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 12211   011174                     
 12212                           ; _DRV_CANFDSPI_FilterObjectConfigure: autosize = 12, savesize = 0, parsavesize = 0, tem
      +                          psize = 0 parsize = 3, argsize = 3, vargsize = 0
 12213   011174  0EF1               	movlw	241
 12214   011176  26E1               	addwf	fsr1l,f,c
 12215   011178  0EFF               	movlw	255
 12216   01117A  22E2               	addwfc	fsr1h,f,c
 12217   01117C  0012               	return		;funcret
 12218   01117E                     __end_of_DRV_CANFDSPI_FilterObjectConfigure:
 12219                           	callstack 0
 12220                           
 12221 ;; *************** function _DRV_CANFDSPI_FilterMaskConfigure *****************
 12222 ;; Defined at:
 12223 ;;		line 1035 in file "can/can.c"
 12224 ;; Parameters:    Size  Location     Type
 12225 ;;  filter          1  [STACK] enum E5325
 12226 ;;  mask            2  [STACK] PTR struct _CAN_MASKOBJ_
 12227 ;;		 -> mObj(6), 
 12228 ;;  EXIDE           1  [STACK] unsigned char 
 12229 ;; Auto vars:     Size  Location     Type
 12230 ;;  temp32          4  [STACK] unsigned long 
 12231 ;;  mObj            6  [STACK] struct _REG_CiMASK
 12232 ;;  a               2  [STACK] unsigned short 
 12233 ;;  spiTransferE    1    0        char 
 12234 ;; Return value:  Size  Location     Type
 12235 ;;                  1  [STACK] char 
 12236 ;; Registers used:
 12237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12247 ;;Total ram usage:        0 bytes
 12248 ;; Hardware stack levels used: 1
 12249 ;; Hardware stack levels required when called: 9
 12250 ;; This function calls:
 12251 ;;		_DRV_CANFDSPI_WriteWord
 12252 ;; This function is called by:
 12253 ;;		_CanSetFilter
 12254 ;; This function uses a reentrant model
 12255 ;;
 12256                           
 12257                           	psect	text45
 12258   01117E                     __ptext45:
 12259                           	callstack 0
 12260   01117E                     _DRV_CANFDSPI_FilterMaskConfigure:
 12261                           	callstack 0
 12262                           
 12263                           ; autosize = 12, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12264   01117E  0E0C               	movlw	12
 12265   011180  26E1               	addwf	fsr1l,f,c
 12266   011182  0E00               	movlw	0
 12267   011184  22E2               	addwfc	fsr1h,f,c
 12268   011186                     
 12269                           ;can/can.c: 1043:     mObj.word = 0;
 12270                           ;stkvar	_mObj @ sp[(-12)+4]
 12271   011186  0EF8               	movlw	-8
 12272   011188  6AE3               	clrf	plusw1,c
 12273   01118A  0EF9               	movlw	-7
 12274   01118C  6AE3               	clrf	plusw1,c
 12275   01118E  0EFA               	movlw	-6
 12276   011190  6AE3               	clrf	plusw1,c
 12277   011192  0EFB               	movlw	-5
 12278   011194  6AE3               	clrf	plusw1,c
 12279   011196                     
 12280                           ;can/can.c: 1047:     if(EXIDE == 0)
 12281                           ;stkvar	_EXIDE @ sp[(-12)+-4]
 12282   011196  0EF0               	movlw	-16
 12283   011198  50E3               	movf	plusw1,w,c
 12284   01119A  A4D8               	btfss	status,2,c
 12285   01119C  EFD2  F088         	goto	u2611
 12286   0111A0  EFD4  F088         	goto	u2610
 12287   0111A4                     u2611:
 12288   0111A4  EF6C  F089         	goto	l4933
 12289   0111A8                     u2610:
 12290   0111A8                     
 12291                           ;can/can.c: 1048:     {;can/can.c: 1049:       mObj.byte[0] = (uint8_t)mask->MID;
 12292                           ;stkvar	_mask @ sp[(-12)+-3]
 12293   0111A8  0EF1               	movlw	-15
 12294   0111AA  CFE3 FFD9          	movff	plusw1,fsr2l
 12295   0111AE  0EF2               	movlw	-14
 12296   0111B0  CFE3 FFDA          	movff	plusw1,fsr2h
 12297   0111B4  50DF               	movf	indf2,w,c
 12298   0111B6  6E0C               	movwf	(btemp+11)^0,c
 12299                           
 12300                           ;stkvar	_mObj @ sp[(-12)+4]
 12301   0111B8  0EF8               	movlw	-8
 12302   0111BA  C00C  FFE3         	movff	btemp+11,plusw1
 12303   0111BE                     
 12304                           ;can/can.c: 1050:       mObj.byte[1] = (uint8_t)(mask->MID >> 8);
 12305                           ;stkvar	_mObj @ sp[(-12)+4]
 12306   0111BE  0EF9               	movlw	249
 12307   0111C0  24E1               	addwf	fsr1l,w,c
 12308   0111C2  6ED9               	movwf	fsr2l,c
 12309   0111C4  0EFF               	movlw	255
 12310   0111C6  20E2               	addwfc	fsr1h,w,c
 12311   0111C8  6EDA               	movwf	fsr2h,c
 12312                           
 12313                           ;stkvar	_mask @ sp[(-12)+-3]
 12314   0111CA  0EF1               	movlw	-15
 12315   0111CC  CFE3 FFE9          	movff	plusw1,fsr0l
 12316   0111D0  0EF2               	movlw	-14
 12317   0111D2  CFE3 FFEA          	movff	plusw1,fsr0h
 12318   0111D6  CFEE F009          	movff	postinc0,btemp+8
 12319   0111DA  CFEE F00A          	movff	postinc0,btemp+9
 12320   0111DE  CFEE F00B          	movff	postinc0,btemp+10
 12321   0111E2  CFEE F00C          	movff	postinc0,btemp+11
 12322   0111E6  C00A  F009         	movff	btemp+9,btemp+8
 12323   0111EA  C00B  F00A         	movff	btemp+10,btemp+9
 12324   0111EE  C00C  F00B         	movff	btemp+11,btemp+10
 12325   0111F2  6A0C               	clrf	(btemp+11)^0,c
 12326   0111F4  5009               	movf	(btemp+8)^0,w,c
 12327   0111F6  6EDF               	movwf	indf2,c
 12328   0111F8                     
 12329                           ;can/can.c: 1051:       mObj.byte[2] = (uint8_t)(mask->MID >> 16);
 12330                           ;stkvar	_mObj @ sp[(-12)+4]
 12331   0111F8  0EFA               	movlw	250
 12332   0111FA  24E1               	addwf	fsr1l,w,c
 12333   0111FC  6ED9               	movwf	fsr2l,c
 12334   0111FE  0EFF               	movlw	255
 12335   011200  20E2               	addwfc	fsr1h,w,c
 12336   011202  6EDA               	movwf	fsr2h,c
 12337                           
 12338                           ;stkvar	_mask @ sp[(-12)+-3]
 12339   011204  0EF1               	movlw	-15
 12340   011206  CFE3 FFE9          	movff	plusw1,fsr0l
 12341   01120A  0EF2               	movlw	-14
 12342   01120C  CFE3 FFEA          	movff	plusw1,fsr0h
 12343   011210  CFEE F009          	movff	postinc0,btemp+8
 12344   011214  CFEE F00A          	movff	postinc0,btemp+9
 12345   011218  CFEE F00B          	movff	postinc0,btemp+10
 12346   01121C  CFEE F00C          	movff	postinc0,btemp+11
 12347   011220  0E11               	movlw	17
 12348   011222  EF18  F089         	goto	u2620
 12349   011226                     u2625:
 12350   011226  90D8               	bcf	status,0,c
 12351   011228  320C               	rrcf	(btemp+11)^0,f,c
 12352   01122A  320B               	rrcf	(btemp+10)^0,f,c
 12353   01122C  320A               	rrcf	(btemp+9)^0,f,c
 12354   01122E  3209               	rrcf	(btemp+8)^0,f,c
 12355   011230                     u2620:
 12356   011230  2EE8               	decfsz	wreg,f,c
 12357   011232  EF13  F089         	goto	u2625
 12358   011236  5009               	movf	(btemp+8)^0,w,c
 12359   011238  6EDF               	movwf	indf2,c
 12360   01123A                     
 12361                           ;can/can.c: 1052:       mObj.byte[3] = (uint8_t)(mask->MID >> 24) | (uint8_t)(mask->MSID
      +                          11 << 5) | (uint8_t)(mask->MIDE << 6);
 12362                           ;stkvar	_mObj @ sp[(-12)+4]
 12363   01123A  0EFB               	movlw	251
 12364   01123C  24E1               	addwf	fsr1l,w,c
 12365   01123E  6ED9               	movwf	fsr2l,c
 12366   011240  0EFF               	movlw	255
 12367   011242  20E2               	addwfc	fsr1h,w,c
 12368   011244  6EDA               	movwf	fsr2h,c
 12369                           
 12370                           ;stkvar	_mask @ sp[(-12)+-3]
 12371   011246  0EF1               	movlw	-15
 12372   011248  CFE3 F00B          	movff	plusw1,btemp+10
 12373   01124C  0EF2               	movlw	-14
 12374   01124E  CFE3 F00C          	movff	plusw1,btemp+11
 12375   011252  0E05               	movlw	5
 12376   011254  240B               	addwf	(btemp+10)^0,w,c
 12377   011256  6EE9               	movwf	fsr0l,c
 12378   011258  0E00               	movlw	0
 12379   01125A  200C               	addwfc	(btemp+11)^0,w,c
 12380   01125C  6EEA               	movwf	fsr0h,c
 12381   01125E  50EF               	movf	indf0,w,c
 12382   011260  6E0C               	movwf	(btemp+11)^0,c
 12383   011262  0E06               	movlw	6
 12384   011264  6E01               	movwf	btemp^0,c
 12385   011266                     u2635:
 12386   011266  90D8               	bcf	status,0,c
 12387   011268  360C               	rlcf	(btemp+11)^0,f,c
 12388   01126A  2E01               	decfsz	btemp^0,f,c
 12389   01126C  EF33  F089         	goto	u2635
 12390                           
 12391                           ;stkvar	_mask @ sp[(-12)+-3]
 12392   011270  0EF1               	movlw	-15
 12393   011272  CFE3 F009          	movff	plusw1,btemp+8
 12394   011276  0EF2               	movlw	-14
 12395   011278  CFE3 F00A          	movff	plusw1,btemp+9
 12396   01127C  0E04               	movlw	4
 12397   01127E  2409               	addwf	(btemp+8)^0,w,c
 12398   011280  6EE9               	movwf	fsr0l,c
 12399   011282  0E00               	movlw	0
 12400   011284  200A               	addwfc	(btemp+9)^0,w,c
 12401   011286  6EEA               	movwf	fsr0h,c
 12402   011288  50EF               	movf	indf0,w,c
 12403   01128A  6E0B               	movwf	(btemp+10)^0,c
 12404   01128C  0E05               	movlw	5
 12405   01128E  6E01               	movwf	btemp^0,c
 12406   011290                     u2645:
 12407   011290  90D8               	bcf	status,0,c
 12408   011292  360B               	rlcf	(btemp+10)^0,f,c
 12409   011294  2E01               	decfsz	btemp^0,f,c
 12410   011296  EF48  F089         	goto	u2645
 12411                           
 12412                           ;stkvar	_mask @ sp[(-12)+-3]
 12413   01129A  0EF1               	movlw	-15
 12414   01129C  CFE3 FFE9          	movff	plusw1,fsr0l
 12415   0112A0  0EF2               	movlw	-14
 12416   0112A2  CFE3 FFEA          	movff	plusw1,fsr0h
 12417   0112A6  CFEE F005          	movff	postinc0,btemp+4
 12418   0112AA  CFEE F006          	movff	postinc0,btemp+5
 12419   0112AE  CFEE F007          	movff	postinc0,btemp+6
 12420   0112B2  CFEE F008          	movff	postinc0,btemp+7
 12421   0112B6  0E19               	movlw	25
 12422   0112B8  EF63  F089         	goto	u2650
 12423   0112BC                     u2655:
 12424   0112BC  90D8               	bcf	status,0,c
 12425   0112BE  3208               	rrcf	(btemp+7)^0,f,c
 12426   0112C0  3207               	rrcf	(btemp+6)^0,f,c
 12427   0112C2  3206               	rrcf	(btemp+5)^0,f,c
 12428   0112C4  3205               	rrcf	(btemp+4)^0,f,c
 12429   0112C6                     u2650:
 12430   0112C6  2EE8               	decfsz	wreg,f,c
 12431   0112C8  EF5E  F089         	goto	u2655
 12432   0112CC  5005               	movf	(btemp+4)^0,w,c
 12433   0112CE  100B               	iorwf	(btemp+10)^0,w,c
 12434   0112D0  100C               	iorwf	(btemp+11)^0,w,c
 12435   0112D2  6EDF               	movwf	indf2,c
 12436                           
 12437                           ;can/can.c: 1053:     }
 12438   0112D4  EF31  F08A         	goto	l4945
 12439   0112D8                     l4933:
 12440                           
 12441                           ;can/can.c: 1055:     {;can/can.c: 1056:       uint32_t temp32 = ((mask->MID & 0x0003FFF
      +                          F) << 11) |
 12442                           ;stkvar	_mask @ sp[(-12)+-3]
 12443   0112D8  0EF1               	movlw	-15
 12444   0112DA  CFE3 FFD9          	movff	plusw1,fsr2l
 12445   0112DE  0EF2               	movlw	-14
 12446   0112E0  CFE3 FFDA          	movff	plusw1,fsr2h
 12447   0112E4  CFDE F009          	movff	postinc2,btemp+8
 12448   0112E8  CFDE F00A          	movff	postinc2,btemp+9
 12449   0112EC  CFDE F00B          	movff	postinc2,btemp+10
 12450   0112F0  CFDE F00C          	movff	postinc2,btemp+11
 12451   0112F4  0E13               	movlw	19
 12452   0112F6  EF82  F089         	goto	u2660
 12453   0112FA                     u2665:
 12454   0112FA  90D8               	bcf	status,0,c
 12455   0112FC  320C               	rrcf	(btemp+11)^0,f,c
 12456   0112FE  320B               	rrcf	(btemp+10)^0,f,c
 12457   011300  320A               	rrcf	(btemp+9)^0,f,c
 12458   011302  3209               	rrcf	(btemp+8)^0,f,c
 12459   011304                     u2660:
 12460   011304  2EE8               	decfsz	wreg,f,c
 12461   011306  EF7D  F089         	goto	u2665
 12462   01130A  0EFF               	movlw	255
 12463   01130C  1409               	andwf	(btemp+8)^0,w,c
 12464   01130E  6E05               	movwf	(btemp+4)^0,c
 12465   011310  0E07               	movlw	7
 12466   011312  140A               	andwf	(btemp+9)^0,w,c
 12467   011314  6E06               	movwf	(btemp+5)^0,c
 12468   011316  0E00               	movlw	0
 12469   011318  140B               	andwf	(btemp+10)^0,w,c
 12470   01131A  6E07               	movwf	(btemp+6)^0,c
 12471   01131C  0E00               	movlw	0
 12472   01131E  140C               	andwf	(btemp+11)^0,w,c
 12473   011320  6E08               	movwf	(btemp+7)^0,c
 12474                           
 12475                           ;stkvar	_mask @ sp[(-12)+-3]
 12476   011322  0EF1               	movlw	-15
 12477   011324  CFE3 FFD9          	movff	plusw1,fsr2l
 12478   011328  0EF2               	movlw	-14
 12479   01132A  CFE3 FFDA          	movff	plusw1,fsr2h
 12480   01132E  0EFF               	movlw	255
 12481   011330  14DE               	andwf	postinc2,w,c
 12482   011332  6E09               	movwf	(btemp+8)^0,c
 12483   011334  0EFF               	movlw	255
 12484   011336  14DE               	andwf	postinc2,w,c
 12485   011338  6E0A               	movwf	(btemp+9)^0,c
 12486   01133A  0E03               	movlw	3
 12487   01133C  14DE               	andwf	postinc2,w,c
 12488   01133E  6E0B               	movwf	(btemp+10)^0,c
 12489   011340  0E00               	movlw	0
 12490   011342  14DE               	andwf	postinc2,w,c
 12491   011344  6E0C               	movwf	(btemp+11)^0,c
 12492   011346  0E0B               	movlw	11
 12493   011348                     u2675:
 12494   011348  90D8               	bcf	status,0,c
 12495   01134A  3609               	rlcf	(btemp+8)^0,f,c
 12496   01134C  360A               	rlcf	(btemp+9)^0,f,c
 12497   01134E  360B               	rlcf	(btemp+10)^0,f,c
 12498   011350  360C               	rlcf	(btemp+11)^0,f,c
 12499   011352  2EE8               	decfsz	wreg,f,c
 12500   011354  EFA4  F089         	goto	u2675
 12501   011358  5005               	movf	(btemp+4)^0,w,c
 12502   01135A  1009               	iorwf	(btemp+8)^0,w,c
 12503   01135C  6E01               	movwf	btemp^0,c
 12504   01135E  5006               	movf	(btemp+5)^0,w,c
 12505   011360  100A               	iorwf	(btemp+9)^0,w,c
 12506   011362  6E02               	movwf	(btemp+1)^0,c
 12507   011364  5007               	movf	(btemp+6)^0,w,c
 12508   011366  100B               	iorwf	(btemp+10)^0,w,c
 12509   011368  6E03               	movwf	(btemp+2)^0,c
 12510   01136A  5008               	movf	(btemp+7)^0,w,c
 12511   01136C  100C               	iorwf	(btemp+11)^0,w,c
 12512   01136E  6E04               	movwf	(btemp+3)^0,c
 12513                           
 12514                           ;stkvar	_temp32 @ sp[(-12)+0]
 12515   011370  0EF4               	movlw	-12
 12516   011372  C001  FFE3         	movff	btemp,plusw1
 12517   011376  0EF5               	movlw	-11
 12518   011378  C002  FFE3         	movff	btemp+1,plusw1
 12519   01137C  0EF6               	movlw	-10
 12520   01137E  C003  FFE3         	movff	btemp+2,plusw1
 12521   011382  0EF7               	movlw	-9
 12522   011384  C004  FFE3         	movff	btemp+3,plusw1
 12523   011388                     
 12524                           ;can/can.c: 1058:       temp32 = temp32 & 0x1FFFFFFF;
 12525                           ;stkvar	_temp32 @ sp[(-12)+0]
 12526   011388  50E1               	movf	fsr1l,w,c
 12527   01138A  0FF4               	addlw	-12
 12528   01138C  6ED9               	movwf	fsr2l,c
 12529   01138E  50E2               	movf	fsr1h,w,c
 12530   011390  6EDA               	movwf	fsr2h,c
 12531   011392  0EFF               	movlw	255
 12532   011394  22DA               	addwfc	fsr2h,f,c
 12533   011396  0EFF               	movlw	255
 12534   011398  16DE               	andwf	postinc2,f,c
 12535   01139A  0EFF               	movlw	255
 12536   01139C  16DE               	andwf	postinc2,f,c
 12537   01139E  0EFF               	movlw	255
 12538   0113A0  16DE               	andwf	postinc2,f,c
 12539   0113A2  0E1F               	movlw	31
 12540   0113A4  16DE               	andwf	postinc2,f,c
 12541   0113A6                     
 12542                           ;can/can.c: 1059:       mObj.byte[0] = (uint8_t)temp32;
 12543                           ;stkvar	_temp32 @ sp[(-12)+0]
 12544                           ;stkvar	_mObj @ sp[(-12)+4]
 12545   0113A6  0EF4               	movlw	-12
 12546   0113A8  CFE3 F001          	movff	plusw1,btemp
 12547   0113AC  0EF8               	movlw	-8
 12548   0113AE  C001  FFE3         	movff	btemp,plusw1
 12549   0113B2                     
 12550                           ;can/can.c: 1060:       mObj.byte[1] = (uint8_t)(temp32 >> 8);
 12551                           ;stkvar	_temp32 @ sp[(-12)+0]
 12552   0113B2  0EF5               	movlw	245
 12553   0113B4  24E1               	addwf	fsr1l,w,c
 12554   0113B6  6ED9               	movwf	fsr2l,c
 12555   0113B8  0EFF               	movlw	255
 12556   0113BA  20E2               	addwfc	fsr1h,w,c
 12557   0113BC  6EDA               	movwf	fsr2h,c
 12558                           
 12559                           ;stkvar	_mObj @ sp[(-12)+4]
 12560   0113BE  0EF9               	movlw	249
 12561   0113C0  24E1               	addwf	fsr1l,w,c
 12562   0113C2  6EE9               	movwf	fsr0l,c
 12563   0113C4  0EFF               	movlw	255
 12564   0113C6  20E2               	addwfc	fsr1h,w,c
 12565   0113C8  6EEA               	movwf	fsr0h,c
 12566   0113CA  CFDF FFEF          	movff	indf2,indf0
 12567   0113CE                     
 12568                           ;can/can.c: 1061:       mObj.byte[2] = (uint8_t)(temp32 >> 16);
 12569                           ;stkvar	_temp32 @ sp[(-12)+0]
 12570   0113CE  0EF6               	movlw	246
 12571   0113D0  24E1               	addwf	fsr1l,w,c
 12572   0113D2  6ED9               	movwf	fsr2l,c
 12573   0113D4  0EFF               	movlw	255
 12574   0113D6  20E2               	addwfc	fsr1h,w,c
 12575   0113D8  6EDA               	movwf	fsr2h,c
 12576                           
 12577                           ;stkvar	_mObj @ sp[(-12)+4]
 12578   0113DA  0EFA               	movlw	250
 12579   0113DC  24E1               	addwf	fsr1l,w,c
 12580   0113DE  6EE9               	movwf	fsr0l,c
 12581   0113E0  0EFF               	movlw	255
 12582   0113E2  20E2               	addwfc	fsr1h,w,c
 12583   0113E4  6EEA               	movwf	fsr0h,c
 12584   0113E6  CFDF FFEF          	movff	indf2,indf0
 12585   0113EA                     
 12586                           ;can/can.c: 1062:       mObj.byte[3] = (uint8_t)(temp32 >> 24) | (uint8_t)(mask->MSID11 
      +                          << 5) | (uint8_t)(mask->MIDE << 6);
 12587                           ;stkvar	_mObj @ sp[(-12)+4]
 12588   0113EA  0EFB               	movlw	251
 12589   0113EC  24E1               	addwf	fsr1l,w,c
 12590   0113EE  6ED9               	movwf	fsr2l,c
 12591   0113F0  0EFF               	movlw	255
 12592   0113F2  20E2               	addwfc	fsr1h,w,c
 12593   0113F4  6EDA               	movwf	fsr2h,c
 12594                           
 12595                           ;stkvar	_temp32 @ sp[(-12)+0]
 12596   0113F6  0EF7               	movlw	247
 12597   0113F8  24E1               	addwf	fsr1l,w,c
 12598   0113FA  6EE9               	movwf	fsr0l,c
 12599   0113FC  0EFF               	movlw	255
 12600   0113FE  20E2               	addwfc	fsr1h,w,c
 12601   011400  6EEA               	movwf	fsr0h,c
 12602   011402  50EF               	movf	indf0,w,c
 12603   011404  6E0C               	movwf	(btemp+11)^0,c
 12604                           
 12605                           ;stkvar	_mask @ sp[(-12)+-3]
 12606   011406  0EF1               	movlw	-15
 12607   011408  CFE3 F009          	movff	plusw1,btemp+8
 12608   01140C  0EF2               	movlw	-14
 12609   01140E  CFE3 F00A          	movff	plusw1,btemp+9
 12610   011412  0E05               	movlw	5
 12611   011414  2409               	addwf	(btemp+8)^0,w,c
 12612   011416  6EE9               	movwf	fsr0l,c
 12613   011418  0E00               	movlw	0
 12614   01141A  200A               	addwfc	(btemp+9)^0,w,c
 12615   01141C  6EEA               	movwf	fsr0h,c
 12616   01141E  50EF               	movf	indf0,w,c
 12617   011420  6E0B               	movwf	(btemp+10)^0,c
 12618   011422  0E06               	movlw	6
 12619   011424  6E01               	movwf	btemp^0,c
 12620   011426                     u2685:
 12621   011426  90D8               	bcf	status,0,c
 12622   011428  360B               	rlcf	(btemp+10)^0,f,c
 12623   01142A  2E01               	decfsz	btemp^0,f,c
 12624   01142C  EF13  F08A         	goto	u2685
 12625                           
 12626                           ;stkvar	_mask @ sp[(-12)+-3]
 12627   011430  0EF1               	movlw	-15
 12628   011432  CFE3 F009          	movff	plusw1,btemp+8
 12629   011436  0EF2               	movlw	-14
 12630   011438  CFE3 F00A          	movff	plusw1,btemp+9
 12631   01143C  0E04               	movlw	4
 12632   01143E  2409               	addwf	(btemp+8)^0,w,c
 12633   011440  6EE9               	movwf	fsr0l,c
 12634   011442  0E00               	movlw	0
 12635   011444  200A               	addwfc	(btemp+9)^0,w,c
 12636   011446  6EEA               	movwf	fsr0h,c
 12637   011448  50EF               	movf	indf0,w,c
 12638   01144A  6E0A               	movwf	(btemp+9)^0,c
 12639   01144C  0E05               	movlw	5
 12640   01144E  6E01               	movwf	btemp^0,c
 12641   011450                     u2695:
 12642   011450  90D8               	bcf	status,0,c
 12643   011452  360A               	rlcf	(btemp+9)^0,f,c
 12644   011454  2E01               	decfsz	btemp^0,f,c
 12645   011456  EF28  F08A         	goto	u2695
 12646   01145A  500A               	movf	(btemp+9)^0,w,c
 12647   01145C  100B               	iorwf	(btemp+10)^0,w,c
 12648   01145E  100C               	iorwf	(btemp+11)^0,w,c
 12649   011460  6EDF               	movwf	indf2,c
 12650   011462                     l4945:
 12651                           
 12652                           ;can/can.c: 1065:     a = (((0x050 +((3*4)*CAN_FIFO_TOTAL_CHANNELS))+CAN_FIFO_TOTAL_CHAN
      +                          NELS)+4) + (filter * (2*4));
 12653                           ;stkvar	_filter @ sp[(-12)+-1]
 12654   011462  0EF3               	movlw	-13
 12655   011464  50E3               	movf	plusw1,w,c
 12656   011466  0D08               	mullw	8
 12657   011468  CFF3 F00B          	movff	prodl,btemp+10
 12658   01146C  CFF4 F00C          	movff	prodh,btemp+11
 12659   011470  0EF4               	movlw	244
 12660   011472  240B               	addwf	(btemp+10)^0,w,c
 12661   011474  6E09               	movwf	(btemp+8)^0,c
 12662   011476  0E01               	movlw	1
 12663   011478  200C               	addwfc	(btemp+11)^0,w,c
 12664   01147A  6E0A               	movwf	(btemp+9)^0,c
 12665                           
 12666                           ;stkvar	_a @ sp[(-12)+10]
 12667   01147C  0EFE               	movlw	-2
 12668   01147E  C009  FFE3         	movff	btemp+8,plusw1
 12669   011482  0EFF               	movlw	-1
 12670   011484  C00A  FFE3         	movff	btemp+9,plusw1
 12671   011488                     
 12672                           ;stkvar	_mObj @ sp[(-12)+4]
 12673   011488  0EF8               	movlw	-8
 12674   01148A  CFE3 FFE6          	movff	plusw1,postinc1
 12675   01148E  CFE3 FFE6          	movff	plusw1,postinc1
 12676   011492  CFE3 FFE6          	movff	plusw1,postinc1
 12677   011496  CFE3 FFE6          	movff	plusw1,postinc1
 12678                           
 12679                           ;stkvar	_a @ sp[(-16)+10]
 12680   01149A  0EFA               	movlw	-6
 12681   01149C  CFE3 FFE6          	movff	plusw1,postinc1
 12682   0114A0  CFE3 FFE6          	movff	plusw1,postinc1
 12683   0114A4  ECED  F09A         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 12684   0114A8                     
 12685                           ; _DRV_CANFDSPI_FilterMaskConfigure: autosize = 12, savesize = 0, parsavesize = 0, temps
      +                          ize = 0 parsize = 4, argsize = 4, vargsize = 0
 12686   0114A8  0EF0               	movlw	240
 12687   0114AA  26E1               	addwf	fsr1l,f,c
 12688   0114AC  0EFF               	movlw	255
 12689   0114AE  22E2               	addwfc	fsr1h,f,c
 12690   0114B0  0012               	return		;funcret
 12691   0114B2                     __end_of_DRV_CANFDSPI_FilterMaskConfigure:
 12692                           	callstack 0
 12693                           
 12694 ;; *************** function _DRV_CANFDSPI_FilterDisable *****************
 12695 ;; Defined at:
 12696 ;;		line 1121 in file "can/can.c"
 12697 ;; Parameters:    Size  Location     Type
 12698 ;;  filter          1  [STACK] enum E5325
 12699 ;; Auto vars:     Size  Location     Type
 12700 ;;  a               2  [STACK] unsigned short 
 12701 ;;  spiTransferE    1  [STACK] char 
 12702 ;;  fCtrl           1  [STACK] struct _REG_CiFLTCON_BYT
 12703 ;; Return value:  Size  Location     Type
 12704 ;;                  1  [STACK] char 
 12705 ;; Registers used:
 12706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 12707 ;; Tracked objects:
 12708 ;;		On entry : 0/0
 12709 ;;		On exit  : 0/0
 12710 ;;		Unchanged: 0/0
 12711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12716 ;;Total ram usage:        0 bytes
 12717 ;; Hardware stack levels used: 1
 12718 ;; Hardware stack levels required when called: 9
 12719 ;; This function calls:
 12720 ;;		_DRV_CANFDSPI_ReadByte
 12721 ;;		_DRV_CANFDSPI_WriteByte
 12722 ;; This function is called by:
 12723 ;;		_CanSetFilter
 12724 ;; This function uses a reentrant model
 12725 ;;
 12726                           
 12727                           	psect	text46
 12728   014156                     __ptext46:
 12729                           	callstack 0
 12730   014156                     _DRV_CANFDSPI_FilterDisable:
 12731                           	callstack 0
 12732                           
 12733                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12734   014156  52E6               	movf	postinc1,f,c
 12735   014158  52E6               	movf	postinc1,f,c
 12736   01415A  52E6               	movf	postinc1,f,c
 12737   01415C  52E6               	movf	postinc1,f,c
 12738   01415E                     
 12739                           ;can/can.c: 1128:     a = (0x050 +((3*4)*CAN_FIFO_TOTAL_CHANNELS)) + filter;
 12740                           ;stkvar	_filter @ sp[(-4)+-1]
 12741   01415E  0EFB               	movlw	-5
 12742   014160  CFE3 F00C          	movff	plusw1,btemp+11
 12743   014164  0ED0               	movlw	208
 12744   014166  240C               	addwf	(btemp+11)^0,w,c
 12745   014168  6E09               	movwf	(btemp+8)^0,c
 12746   01416A  6A0A               	clrf	(btemp+9)^0,c
 12747   01416C  0E01               	movlw	1
 12748   01416E  220A               	addwfc	(btemp+9)^0,f,c
 12749                           
 12750                           ;stkvar	_a @ sp[(-4)+0]
 12751   014170  0EFC               	movlw	-4
 12752   014172  C009  FFE3         	movff	btemp+8,plusw1
 12753   014176  0EFD               	movlw	-3
 12754   014178  C00A  FFE3         	movff	btemp+9,plusw1
 12755   01417C                     
 12756                           ;can/can.c: 1130:     spiTransferError = DRV_CANFDSPI_ReadByte( a, &fCtrl.byte);
 12757                           ;stkvar	_fCtrl @ sp[(-4)+3]
 12758   01417C  0EFF               	movlw	255
 12759   01417E  24E1               	addwf	fsr1l,w,c
 12760   014180  6E01               	movwf	btemp^0,c
 12761   014182  0EFF               	movlw	255
 12762   014184  20E2               	addwfc	fsr1h,w,c
 12763   014186  6E02               	movwf	(btemp+1)^0,c
 12764   014188  C001  FFE6         	movff	btemp,postinc1
 12765   01418C  C002  FFE6         	movff	btemp+1,postinc1
 12766                           
 12767                           ;stkvar	_a @ sp[(-6)+0]
 12768   014190  0EFA               	movlw	-6
 12769   014192  CFE3 FFE6          	movff	plusw1,postinc1
 12770   014196  CFE3 FFE6          	movff	plusw1,postinc1
 12771   01419A  EC52  F0A2         	call	_DRV_CANFDSPI_ReadByte	;wreg free
 12772                           
 12773                           ;stkvar	_spiTransferError @ sp[(-4)+2]
 12774   01419E  0EFE               	movlw	-2
 12775   0141A0  C001  FFE3         	movff	btemp,plusw1
 12776   0141A4                     
 12777                           ;can/can.c: 1131:     if (spiTransferError) {
 12778                           ;stkvar	_spiTransferError @ sp[(-4)+2]
 12779   0141A4  0EFE               	movlw	-2
 12780   0141A6  50E3               	movf	plusw1,w,c
 12781   0141A8  B4D8               	btfsc	status,2,c
 12782   0141AA  EFD9  F0A0         	goto	u2511
 12783   0141AE  EFDB  F0A0         	goto	u2510
 12784   0141B2                     u2511:
 12785   0141B2  EFDD  F0A0         	goto	l4879
 12786   0141B6                     u2510:
 12787   0141B6  EFEF  F0A0         	goto	l336
 12788   0141BA                     l4879:
 12789                           
 12790                           ;can/can.c: 1136:     fCtrl.bF.Enable = 0;
 12791                           ;stkvar	_fCtrl @ sp[(-4)+3]
 12792   0141BA  50E1               	movf	fsr1l,w,c
 12793   0141BC  0FFF               	addlw	-1
 12794   0141BE  6ED9               	movwf	fsr2l,c
 12795   0141C0  50E2               	movf	fsr1h,w,c
 12796   0141C2  6EDA               	movwf	fsr2h,c
 12797   0141C4  0EFF               	movlw	255
 12798   0141C6  22DA               	addwfc	fsr2h,f,c
 12799   0141C8  9EDF               	bcf	indf2,7,c
 12800   0141CA                     
 12801                           ;stkvar	_fCtrl @ sp[(-4)+3]
 12802   0141CA  0EFF               	movlw	-1
 12803   0141CC  50E3               	movf	plusw1,w,c
 12804   0141CE  6EE6               	movwf	postinc1,c
 12805                           
 12806                           ;stkvar	_a @ sp[(-5)+0]
 12807   0141D0  0EFB               	movlw	-5
 12808   0141D2  CFE3 FFE6          	movff	plusw1,postinc1
 12809   0141D6  CFE3 FFE6          	movff	plusw1,postinc1
 12810   0141DA  ECDF  F0A2         	call	_DRV_CANFDSPI_WriteByte	;wreg free
 12811   0141DE                     l336:
 12812                           
 12813                           ; _DRV_CANFDSPI_FilterDisable: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0
      +                           parsize = 1, argsize = 1, vargsize = 0
 12814   0141DE  0EFB               	movlw	251
 12815   0141E0  26E1               	addwf	fsr1l,f,c
 12816   0141E2  0EFF               	movlw	255
 12817   0141E4  22E2               	addwfc	fsr1h,f,c
 12818   0141E6  0012               	return		;funcret
 12819   0141E8                     __end_of_DRV_CANFDSPI_FilterDisable:
 12820                           	callstack 0
 12821                           
 12822 ;; *************** function _CanInit *****************
 12823 ;; Defined at:
 12824 ;;		line 156 in file "can/can.c"
 12825 ;; Parameters:    Size  Location     Type
 12826 ;;  bitTime         1  [STACK] enum E5607
 12827 ;;  withISR         1  [STACK] _Bool 
 12828 ;; Auto vars:     Size  Location     Type
 12829 ;;  txqConfig       4  [STACK] struct _CAN_TX_QUEUE_CON
 12830 ;;  config          3  [STACK] struct _CAN_CONFIG
 12831 ;;  rxfConfig       3  [STACK] struct _CAN_RX_FIFO_CONF
 12832 ;;  txfConfig       2  [STACK] struct _CAN_TX_FIFO_CONF
 12833 ;;  tefConfig       1  [STACK] struct _CAN_TEF_CONFIG
 12834 ;; Return value:  Size  Location     Type
 12835 ;;                  1  [STACK] void 
 12836 ;; Registers used:
 12837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 12838 ;; Tracked objects:
 12839 ;;		On entry : 0/0
 12840 ;;		On exit  : 0/0
 12841 ;;		Unchanged: 0/0
 12842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12847 ;;Total ram usage:        0 bytes
 12848 ;; Hardware stack levels used: 1
 12849 ;; Hardware stack levels required when called: 10
 12850 ;; This function calls:
 12851 ;;		_DRV_CANFDSPI_BitTimeConfigureNominal40MHz
 12852 ;;		_DRV_CANFDSPI_Configure
 12853 ;;		_DRV_CANFDSPI_ConfigureObjectReset
 12854 ;;		_DRV_CANFDSPI_ModuleEventEnable
 12855 ;;		_DRV_CANFDSPI_OperationModeSelect
 12856 ;;		_DRV_CANFDSPI_ReceiveChannelConfigure
 12857 ;;		_DRV_CANFDSPI_Reset
 12858 ;;		_DRV_CANFDSPI_TefConfigure
 12859 ;;		_DRV_CANFDSPI_TimeStampEnable
 12860 ;;		_DRV_CANFDSPI_TimeStampPrescalerSet
 12861 ;;		_DRV_CANFDSPI_TimeStampSet
 12862 ;;		_DRV_CANFDSPI_TransmitChannelConfigure
 12863 ;;		_DRV_CANFDSPI_TransmitChannelConfigureObjectReset
 12864 ;;		_DRV_CANFDSPI_TransmitQueueConfigure
 12865 ;;		_DRV_CANFDSPI_TransmitQueueConfigureObjectReset
 12866 ;; This function is called by:
 12867 ;;		_main
 12868 ;; This function uses a reentrant model
 12869 ;;
 12870                           
 12871                           	psect	text47
 12872   011E64                     __ptext47:
 12873                           	callstack 0
 12874   011E64                     _CanInit:
 12875                           	callstack 0
 12876                           
 12877                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12878   011E64  0E0D               	movlw	13
 12879   011E66  26E1               	addwf	fsr1l,f,c
 12880   011E68  0E00               	movlw	0
 12881   011E6A  22E2               	addwfc	fsr1h,f,c
 12882   011E6C                     
 12883                           ;can/can.c: 156: void CanInit(CAN_BITTIME_SETUP bitTime, _Bool withISR);can/can.c: 157: 
      +                          {;can/can.c: 158:   TRISGbits.TRISG4 = 0;
 12884   011E6C  9898               	bcf	152,4,c	;volatile
 12885                           
 12886                           ;can/can.c: 159:   LATGbits.LATG4 = 1;
 12887   011E6E  888F               	bsf	143,4,c	;volatile
 12888   011E70                     
 12889                           ;can/can.c: 160:   DRV_CANFDSPI_Reset();
 12890   011E70  ECF7  F0A3         	call	_DRV_CANFDSPI_Reset	;wreg free
 12891   011E74                     
 12892                           ;can/can.c: 161:   DRV_CANFDSPI_BitTimeConfigureNominal40MHz(bitTime);
 12893                           ;stkvar	_bitTime @ sp[(-13)+-1]
 12894   011E74  0EF2               	movlw	-14
 12895   011E76  50E3               	movf	plusw1,w,c
 12896   011E78  6EE6               	movwf	postinc1,c
 12897   011E7A  EC0C  F08E         	call	_DRV_CANFDSPI_BitTimeConfigureNominal40MHz	;wreg free
 12898   011E7E                     
 12899                           ;can/can.c: 163:     CAN_CONFIG config;;can/can.c: 164:     DRV_CANFDSPI_ConfigureObject
      +                          Reset(&config);
 12900                           ;stkvar	_config @ sp[(-13)+4]
 12901   011E7E  0EF7               	movlw	247
 12902   011E80  24E1               	addwf	fsr1l,w,c
 12903   011E82  6E01               	movwf	btemp^0,c
 12904   011E84  0EFF               	movlw	255
 12905   011E86  20E2               	addwfc	fsr1h,w,c
 12906   011E88  6E02               	movwf	(btemp+1)^0,c
 12907   011E8A  C001  FFE6         	movff	btemp,postinc1
 12908   011E8E  C002  FFE6         	movff	btemp+1,postinc1
 12909   011E92  ECDD  F08C         	call	_DRV_CANFDSPI_ConfigureObjectReset	;wreg free
 12910   011E96                     
 12911                           ;can/can.c: 165:     config.IsoCrcEnable = 1;
 12912                           ;stkvar	_config @ sp[(-13)+4]
 12913   011E96  50E1               	movf	fsr1l,w,c
 12914   011E98  0FF7               	addlw	-9
 12915   011E9A  6ED9               	movwf	fsr2l,c
 12916   011E9C  50E2               	movf	fsr1h,w,c
 12917   011E9E  6EDA               	movwf	fsr2h,c
 12918   011EA0  0EFF               	movlw	255
 12919   011EA2  22DA               	addwfc	fsr2h,f,c
 12920   011EA4  8ADF               	bsf	indf2,5,c
 12921   011EA6                     
 12922                           ;can/can.c: 166:     config.StoreInTEF = 1;
 12923                           ;stkvar	_config @ sp[(-13)+4]
 12924   011EA6  0EF8               	movlw	248
 12925   011EA8  24E1               	addwf	fsr1l,w,c
 12926   011EAA  6ED9               	movwf	fsr2l,c
 12927   011EAC  0EFF               	movlw	255
 12928   011EAE  20E2               	addwfc	fsr1h,w,c
 12929   011EB0  6EDA               	movwf	fsr2h,c
 12930   011EB2  8CDF               	bsf	indf2,6,c
 12931   011EB4                     
 12932                           ;can/can.c: 167:     config.TXQEnable = 1;
 12933                           ;stkvar	_config @ sp[(-13)+4]
 12934   011EB4  0EF8               	movlw	248
 12935   011EB6  24E1               	addwf	fsr1l,w,c
 12936   011EB8  6ED9               	movwf	fsr2l,c
 12937   011EBA  0EFF               	movlw	255
 12938   011EBC  20E2               	addwfc	fsr1h,w,c
 12939   011EBE  6EDA               	movwf	fsr2h,c
 12940   011EC0  8EDF               	bsf	indf2,7,c
 12941   011EC2                     
 12942                           ;can/can.c: 168:     DRV_CANFDSPI_Configure(&config);
 12943                           ;stkvar	_config @ sp[(-13)+4]
 12944   011EC2  0EF7               	movlw	247
 12945   011EC4  24E1               	addwf	fsr1l,w,c
 12946   011EC6  6E01               	movwf	btemp^0,c
 12947   011EC8  0EFF               	movlw	255
 12948   011ECA  20E2               	addwfc	fsr1h,w,c
 12949   011ECC  6E02               	movwf	(btemp+1)^0,c
 12950   011ECE  C001  FFE6         	movff	btemp,postinc1
 12951   011ED2  C002  FFE6         	movff	btemp+1,postinc1
 12952   011ED6  EC9D  F08B         	call	_DRV_CANFDSPI_Configure	;wreg free
 12953   011EDA                     
 12954                           ;can/can.c: 172:     CAN_TEF_CONFIG tefConfig;;can/can.c: 173:     tefConfig.FifoSize = 
      +                          11;
 12955                           ;stkvar	_tefConfig @ sp[(-13)+12]
 12956   011EDA  50E1               	movf	fsr1l,w,c
 12957   011EDC  0FFF               	addlw	-1
 12958   011EDE  6ED9               	movwf	fsr2l,c
 12959   011EE0  50E2               	movf	fsr1h,w,c
 12960   011EE2  6EDA               	movwf	fsr2h,c
 12961   011EE4  0EFF               	movlw	255
 12962   011EE6  22DA               	addwfc	fsr2h,f,c
 12963   011EE8  50DF               	movf	223,w,c
 12964   011EEA  0BC1               	andlw	-63
 12965   011EEC  0916               	iorlw	22
 12966   011EEE  6EDF               	movwf	223,c
 12967   011EF0                     
 12968                           ;can/can.c: 174:     tefConfig.TimeStampEnable = 1;
 12969                           ;stkvar	_tefConfig @ sp[(-13)+12]
 12970   011EF0  50E1               	movf	fsr1l,w,c
 12971   011EF2  0FFF               	addlw	-1
 12972   011EF4  6ED9               	movwf	fsr2l,c
 12973   011EF6  50E2               	movf	fsr1h,w,c
 12974   011EF8  6EDA               	movwf	fsr2h,c
 12975   011EFA  0EFF               	movlw	255
 12976   011EFC  22DA               	addwfc	fsr2h,f,c
 12977   011EFE  80DF               	bsf	indf2,0,c
 12978   011F00                     
 12979                           ;can/can.c: 175:     DRV_CANFDSPI_TefConfigure(&tefConfig);
 12980                           ;stkvar	_tefConfig @ sp[(-13)+12]
 12981   011F00  0EFF               	movlw	255
 12982   011F02  24E1               	addwf	fsr1l,w,c
 12983   011F04  6E01               	movwf	btemp^0,c
 12984   011F06  0EFF               	movlw	255
 12985   011F08  20E2               	addwfc	fsr1h,w,c
 12986   011F0A  6E02               	movwf	(btemp+1)^0,c
 12987   011F0C  C001  FFE6         	movff	btemp,postinc1
 12988   011F10  C002  FFE6         	movff	btemp+1,postinc1
 12989   011F14  EC54  F09D         	call	_DRV_CANFDSPI_TefConfigure	;wreg free
 12990   011F18                     
 12991                           ;can/can.c: 178:     CAN_TX_QUEUE_CONFIG txqConfig;;can/can.c: 179:     DRV_CANFDSPI_Tra
      +                          nsmitQueueConfigureObjectReset(&txqConfig);
 12992                           ;stkvar	_txqConfig @ sp[(-13)+0]
 12993   011F18  0EF3               	movlw	243
 12994   011F1A  24E1               	addwf	fsr1l,w,c
 12995   011F1C  6E01               	movwf	btemp^0,c
 12996   011F1E  0EFF               	movlw	255
 12997   011F20  20E2               	addwfc	fsr1h,w,c
 12998   011F22  6E02               	movwf	(btemp+1)^0,c
 12999   011F24  C001  FFE6         	movff	btemp,postinc1
 13000   011F28  C002  FFE6         	movff	btemp+1,postinc1
 13001   011F2C  EC01  F09A         	call	_DRV_CANFDSPI_TransmitQueueConfigureObjectReset	;wreg free
 13002   011F30                     
 13003                           ;can/can.c: 180:     txqConfig.TxPriority =1;
 13004                           ;stkvar	_txqConfig @ sp[(-13)+0]
 13005   011F30  0EF3               	movlw	-13
 13006   011F32  6AE3               	clrf	plusw1,c
 13007   011F34  2AE3               	incf	plusw1,f,c
 13008   011F36                     
 13009                           ;can/can.c: 181:     txqConfig.FifoSize = 7;
 13010                           ;stkvar	_txqConfig @ sp[(-13)+0]
 13011   011F36  0EF5               	movlw	245
 13012   011F38  24E1               	addwf	fsr1l,w,c
 13013   011F3A  6ED9               	movwf	fsr2l,c
 13014   011F3C  0EFF               	movlw	255
 13015   011F3E  20E2               	addwfc	fsr1h,w,c
 13016   011F40  6EDA               	movwf	fsr2h,c
 13017   011F42  0E07               	movlw	7
 13018   011F44  6EDF               	movwf	indf2,c
 13019   011F46                     
 13020                           ;can/can.c: 182:     txqConfig.PayLoadSize = CAN_PLSIZE_32;
 13021                           ;stkvar	_txqConfig @ sp[(-13)+0]
 13022   011F46  0EF6               	movlw	246
 13023   011F48  24E1               	addwf	fsr1l,w,c
 13024   011F4A  6ED9               	movwf	fsr2l,c
 13025   011F4C  0EFF               	movlw	255
 13026   011F4E  20E2               	addwfc	fsr1h,w,c
 13027   011F50  6EDA               	movwf	fsr2h,c
 13028   011F52  0E05               	movlw	5
 13029   011F54  6EDF               	movwf	indf2,c
 13030   011F56                     
 13031                           ;can/can.c: 183:     DRV_CANFDSPI_TransmitQueueConfigure(&txqConfig);
 13032                           ;stkvar	_txqConfig @ sp[(-13)+0]
 13033   011F56  0EF3               	movlw	243
 13034   011F58  24E1               	addwf	fsr1l,w,c
 13035   011F5A  6E01               	movwf	btemp^0,c
 13036   011F5C  0EFF               	movlw	255
 13037   011F5E  20E2               	addwfc	fsr1h,w,c
 13038   011F60  6E02               	movwf	(btemp+1)^0,c
 13039   011F62  C001  FFE6         	movff	btemp,postinc1
 13040   011F66  C002  FFE6         	movff	btemp+1,postinc1
 13041   011F6A  ECB8  F097         	call	_DRV_CANFDSPI_TransmitQueueConfigure	;wreg free
 13042   011F6E                     
 13043                           ;can/can.c: 186:     CAN_TX_FIFO_CONFIG txfConfig;;can/can.c: 187:     DRV_CANFDSPI_Tran
      +                          smitChannelConfigureObjectReset(&txfConfig);
 13044                           ;stkvar	_txfConfig @ sp[(-13)+10]
 13045   011F6E  0EFD               	movlw	253
 13046   011F70  24E1               	addwf	fsr1l,w,c
 13047   011F72  6E01               	movwf	btemp^0,c
 13048   011F74  0EFF               	movlw	255
 13049   011F76  20E2               	addwfc	fsr1h,w,c
 13050   011F78  6E02               	movwf	(btemp+1)^0,c
 13051   011F7A  C001  FFE6         	movff	btemp,postinc1
 13052   011F7E  C002  FFE6         	movff	btemp+1,postinc1
 13053   011F82  EC58  F098         	call	_DRV_CANFDSPI_TransmitChannelConfigureObjectReset	;wreg free
 13054   011F86                     
 13055                           ;can/can.c: 188:     txfConfig.FifoSize = 4;
 13056                           ;stkvar	_txfConfig @ sp[(-13)+10]
 13057   011F86  0EFE               	movlw	254
 13058   011F88  24E1               	addwf	fsr1l,w,c
 13059   011F8A  6ED9               	movwf	fsr2l,c
 13060   011F8C  0EFF               	movlw	255
 13061   011F8E  20E2               	addwfc	fsr1h,w,c
 13062   011F90  6EDA               	movwf	fsr2h,c
 13063   011F92  50DF               	movf	223,w,c
 13064   011F94  0BE0               	andlw	-32
 13065   011F96  0904               	iorlw	4
 13066   011F98  6EDF               	movwf	223,c
 13067   011F9A                     
 13068                           ;can/can.c: 189:     txfConfig.PayLoadSize = CAN_PLSIZE_64;
 13069                           ;stkvar	_txfConfig @ sp[(-13)+10]
 13070   011F9A  0EFE               	movlw	254
 13071   011F9C  24E1               	addwf	fsr1l,w,c
 13072   011F9E  6ED9               	movwf	fsr2l,c
 13073   011FA0  0EFF               	movlw	255
 13074   011FA2  20E2               	addwfc	fsr1h,w,c
 13075   011FA4  6EDA               	movwf	fsr2h,c
 13076   011FA6  0EE0               	movlw	224
 13077   011FA8  12DF               	iorwf	223,f,c
 13078   011FAA                     
 13079                           ;can/can.c: 190:     txfConfig.TxPriority = 0;
 13080                           ;stkvar	_txfConfig @ sp[(-13)+10]
 13081   011FAA  50E1               	movf	fsr1l,w,c
 13082   011FAC  0FFD               	addlw	-3
 13083   011FAE  6ED9               	movwf	fsr2l,c
 13084   011FB0  50E2               	movf	fsr1h,w,c
 13085   011FB2  6EDA               	movwf	fsr2h,c
 13086   011FB4  0EFF               	movlw	255
 13087   011FB6  22DA               	addwfc	fsr2h,f,c
 13088   011FB8  0EC1               	movlw	-63
 13089   011FBA  16DF               	andwf	223,f,c
 13090   011FBC                     
 13091                           ;can/can.c: 191:     DRV_CANFDSPI_TransmitChannelConfigure(CAN_FIFO_CH1,&txfConfig);
 13092                           ;stkvar	_txfConfig @ sp[(-13)+10]
 13093   011FBC  0EFD               	movlw	253
 13094   011FBE  24E1               	addwf	fsr1l,w,c
 13095   011FC0  6E01               	movwf	btemp^0,c
 13096   011FC2  0EFF               	movlw	255
 13097   011FC4  20E2               	addwfc	fsr1h,w,c
 13098   011FC6  6E02               	movwf	(btemp+1)^0,c
 13099   011FC8  C001  FFE6         	movff	btemp,postinc1
 13100   011FCC  C002  FFE6         	movff	btemp+1,postinc1
 13101   011FD0  0E01               	movlw	1
 13102   011FD2  6EE6               	movwf	postinc1,c
 13103   011FD4  EC87  F093         	call	_DRV_CANFDSPI_TransmitChannelConfigure	;wreg free
 13104   011FD8                     
 13105                           ;can/can.c: 194:     CAN_RX_FIFO_CONFIG rxfConfig;;can/can.c: 195:     rxfConfig.FifoSiz
      +                          e = 15;
 13106                           ;stkvar	_rxfConfig @ sp[(-13)+7]
 13107   011FD8  0EFB               	movlw	251
 13108   011FDA  24E1               	addwf	fsr1l,w,c
 13109   011FDC  6ED9               	movwf	fsr2l,c
 13110   011FDE  0EFF               	movlw	255
 13111   011FE0  20E2               	addwfc	fsr1h,w,c
 13112   011FE2  6EDA               	movwf	fsr2h,c
 13113   011FE4  0E0F               	movlw	15
 13114   011FE6  6EDF               	movwf	indf2,c
 13115   011FE8                     
 13116                           ;can/can.c: 196:     rxfConfig.PayLoadSize = CAN_PLSIZE_64;
 13117                           ;stkvar	_rxfConfig @ sp[(-13)+7]
 13118   011FE8  0EFC               	movlw	252
 13119   011FEA  24E1               	addwf	fsr1l,w,c
 13120   011FEC  6ED9               	movwf	fsr2l,c
 13121   011FEE  0EFF               	movlw	255
 13122   011FF0  20E2               	addwfc	fsr1h,w,c
 13123   011FF2  6EDA               	movwf	fsr2h,c
 13124   011FF4  0E07               	movlw	7
 13125   011FF6  6EDF               	movwf	indf2,c
 13126   011FF8                     
 13127                           ;can/can.c: 197:     rxfConfig.RxTimeStampEnable = 1;
 13128                           ;stkvar	_rxfConfig @ sp[(-13)+7]
 13129   011FF8  0EFA               	movlw	-6
 13130   011FFA  6AE3               	clrf	plusw1,c
 13131   011FFC  2AE3               	incf	plusw1,f,c
 13132   011FFE                     
 13133                           ;can/can.c: 198:     DRV_CANFDSPI_ReceiveChannelConfigure(CAN_FIFO_CH2,&rxfConfig);
 13134                           ;stkvar	_rxfConfig @ sp[(-13)+7]
 13135   011FFE  0EFA               	movlw	250
 13136   012000  24E1               	addwf	fsr1l,w,c
 13137   012002  6E01               	movwf	btemp^0,c
 13138   012004  0EFF               	movlw	255
 13139   012006  20E2               	addwfc	fsr1h,w,c
 13140   012008  6E02               	movwf	(btemp+1)^0,c
 13141   01200A  C001  FFE6         	movff	btemp,postinc1
 13142   01200E  C002  FFE6         	movff	btemp+1,postinc1
 13143   012012  0E02               	movlw	2
 13144   012014  6EE6               	movwf	postinc1,c
 13145   012016  EC17  F097         	call	_DRV_CANFDSPI_ReceiveChannelConfigure	;wreg free
 13146   01201A                     
 13147                           ;can/can.c: 200:     DRV_CANFDSPI_TimeStampPrescalerSet(39);
 13148   01201A  0E27               	movlw	39
 13149   01201C  6EE6               	movwf	postinc1,c
 13150   01201E  0E00               	movlw	0
 13151   012020  6EE6               	movwf	postinc1,c
 13152   012022  EC45  F0A4         	call	_DRV_CANFDSPI_TimeStampPrescalerSet	;wreg free
 13153   012026                     
 13154                           ;can/can.c: 201:     DRV_CANFDSPI_TimeStampSet(0);
 13155   012026  0E00               	movlw	0
 13156   012028  6EE6               	movwf	postinc1,c
 13157   01202A  0E00               	movlw	0
 13158   01202C  6EE6               	movwf	postinc1,c
 13159   01202E  0E00               	movlw	0
 13160   012030  6EE6               	movwf	postinc1,c
 13161   012032  0E00               	movlw	0
 13162   012034  6EE6               	movwf	postinc1,c
 13163   012036  EC0D  F0A4         	call	_DRV_CANFDSPI_TimeStampSet	;wreg free
 13164   01203A                     
 13165                           ;can/can.c: 202:     DRV_CANFDSPI_TimeStampEnable();
 13166   01203A  EC83  F0A2         	call	_DRV_CANFDSPI_TimeStampEnable	;wreg free
 13167   01203E                     
 13168                           ;can/can.c: 209:     if(withISR == 1)
 13169                           ;stkvar	_withISR @ sp[(-13)+-2]
 13170   01203E  0EF1               	movlw	-15
 13171   012040  04E3               	decf	plusw1,w,c
 13172   012042  A4D8               	btfss	status,2,c
 13173   012044  EF26  F090         	goto	u2911
 13174   012048  EF28  F090         	goto	u2910
 13175   01204C                     u2911:
 13176   01204C  EF30  F090         	goto	l5199
 13177   012050                     u2910:
 13178   012050                     
 13179                           ;can/can.c: 210:     {;can/can.c: 211:         DRV_CANFDSPI_ModuleEventEnable(0,CAN_RX_E
      +                          VENT);
 13180   012050  0E02               	movlw	2
 13181   012052  6EE6               	movwf	postinc1,c
 13182   012054  0E00               	movlw	0
 13183   012056  6EE6               	movwf	postinc1,c
 13184   012058  0E00               	movlw	0
 13185   01205A  6EE6               	movwf	postinc1,c
 13186   01205C  EC20  F0A2         	call	_DRV_CANFDSPI_ModuleEventEnable	;wreg free
 13187   012060                     l5199:
 13188                           
 13189                           ;can/can.c: 214:     DRV_CANFDSPI_OperationModeSelect(CAN_CLASSIC_MODE);
 13190   012060  0E06               	movlw	6
 13191   012062  6EE6               	movwf	postinc1,c
 13192   012064  EC3C  F0A1         	call	_DRV_CANFDSPI_OperationModeSelect	;wreg free
 13193   012068                     
 13194                           ; _CanInit: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 13195   012068  0EF1               	movlw	241
 13196   01206A  26E1               	addwf	fsr1l,f,c
 13197   01206C  0EFF               	movlw	255
 13198   01206E  22E2               	addwfc	fsr1h,f,c
 13199   012070  0012               	return		;funcret
 13200   012072                     __end_of_CanInit:
 13201                           	callstack 0
 13202                           
 13203 ;; *************** function _DRV_CANFDSPI_TransmitQueueConfigureObjectReset *****************
 13204 ;; Defined at:
 13205 ;;		line 693 in file "can/can.c"
 13206 ;; Parameters:    Size  Location     Type
 13207 ;;  config          2  [STACK] PTR struct _CAN_TX_QUEUE
 13208 ;;		 -> txqConfig(4), 
 13209 ;; Auto vars:     Size  Location     Type
 13210 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
 13211 ;; Return value:  Size  Location     Type
 13212 ;;                  1  [STACK] char 
 13213 ;; Registers used:
 13214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru
 13215 ;; Tracked objects:
 13216 ;;		On entry : 0/0
 13217 ;;		On exit  : 0/0
 13218 ;;		Unchanged: 0/0
 13219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13224 ;;Total ram usage:        0 bytes
 13225 ;; Hardware stack levels used: 1
 13226 ;; Hardware stack levels required when called: 7
 13227 ;; This function calls:
 13228 ;;		Nothing
 13229 ;; This function is called by:
 13230 ;;		_CanInit
 13231 ;; This function uses a reentrant model
 13232 ;;
 13233                           
 13234                           	psect	text48
 13235   013402                     __ptext48:
 13236                           	callstack 0
 13237   013402                     _DRV_CANFDSPI_TransmitQueueConfigureObjectReset:
 13238                           	callstack 0
 13239                           
 13240                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13241   013402  0E05               	movlw	5
 13242   013404  26E1               	addwf	fsr1l,f,c
 13243   013406  0E00               	movlw	0
 13244   013408  22E2               	addwfc	fsr1h,f,c
 13245   01340A                     
 13246                           ;can/can.c: 693: int8_t DRV_CANFDSPI_TransmitQueueConfigureObjectReset(CAN_TX_QUEUE_CONF
      +                          IG* config);can/can.c: 694: {;can/can.c: 695:     REG_CiFIFOCON ciFifoCon;;can/can.c: 69
      +                          6:     ciFifoCon.word = canFifoResetValues[0];
 13247   01340A  0EDD               	movlw	low _canFifoResetValues
 13248   01340C  6EF6               	movwf	tblptrl,c
 13249   01340E                     	if	1	;There is more than 1 active tblptr byte
 13250   01340E  0EFF               	movlw	high _canFifoResetValues
 13251   013410  6EF7               	movwf	tblptrh,c
 13252   013412                     	endif
 13253   013412                     	if	1	;There are 3 active tblptr bytes
 13254   013412  0E00               	movlw	low (_canFifoResetValues shr (0+16))
 13255   013414  6EF8               	movwf	tblptru,c
 13256   013416                     	endif
 13257   013416  0009               	tblrd		*+
 13258   013418  CFF5 F009          	movff	tablat,btemp+8
 13259   01341C  0009               	tblrd		*+
 13260   01341E  CFF5 F00A          	movff	tablat,btemp+9
 13261   013422  0009               	tblrd		*+
 13262   013424  CFF5 F00B          	movff	tablat,btemp+10
 13263   013428  0009               	tblrd		*+
 13264   01342A  CFF5 F00C          	movff	tablat,btemp+11
 13265                           
 13266                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13267   01342E  0EFB               	movlw	-5
 13268   013430  C009  FFE3         	movff	btemp+8,plusw1
 13269   013434  0EFC               	movlw	-4
 13270   013436  C00A  FFE3         	movff	btemp+9,plusw1
 13271   01343A  0EFD               	movlw	-3
 13272   01343C  C00B  FFE3         	movff	btemp+10,plusw1
 13273   013440  0EFE               	movlw	-2
 13274   013442  C00C  FFE3         	movff	btemp+11,plusw1
 13275   013446                     
 13276                           ;can/can.c: 698:     config->TxPriority = ciFifoCon.txBF.TxPriority;
 13277                           ;stkvar	_config @ sp[(-5)+-2]
 13278   013446  0EF9               	movlw	-7
 13279   013448  CFE3 FFD9          	movff	plusw1,fsr2l
 13280   01344C  0EFA               	movlw	-6
 13281   01344E  CFE3 FFDA          	movff	plusw1,fsr2h
 13282                           
 13283                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13284   013452  0EFD               	movlw	253
 13285   013454  24E1               	addwf	fsr1l,w,c
 13286   013456  6EE9               	movwf	fsr0l,c
 13287   013458  0EFF               	movlw	255
 13288   01345A  20E2               	addwfc	fsr1h,w,c
 13289   01345C  6EEA               	movwf	fsr0h,c
 13290   01345E  50EF               	movf	239,w,c
 13291   013460  0B1F               	andlw	31
 13292   013462  6EDF               	movwf	indf2,c
 13293   013464                     
 13294                           ;can/can.c: 699:     config->TxAttempts = ciFifoCon.txBF.TxAttempts;
 13295                           ;stkvar	_config @ sp[(-5)+-2]
 13296   013464  0EF9               	movlw	-7
 13297   013466  CFE3 F00B          	movff	plusw1,btemp+10
 13298   01346A  0EFA               	movlw	-6
 13299   01346C  CFE3 F00C          	movff	plusw1,btemp+11
 13300   013470  0E01               	movlw	1
 13301   013472  240B               	addwf	(btemp+10)^0,w,c
 13302   013474  6ED9               	movwf	fsr2l,c
 13303   013476  0E00               	movlw	0
 13304   013478  200C               	addwfc	(btemp+11)^0,w,c
 13305   01347A  6EDA               	movwf	fsr2h,c
 13306                           
 13307                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13308   01347C  0EFD               	movlw	253
 13309   01347E  24E1               	addwf	fsr1l,w,c
 13310   013480  6EE9               	movwf	fsr0l,c
 13311   013482  0EFF               	movlw	255
 13312   013484  20E2               	addwfc	fsr1h,w,c
 13313   013486  6EEA               	movwf	fsr0h,c
 13314   013488  38EF               	swapf	239,w,c
 13315   01348A  32E8               	rrcf	wreg,f,c
 13316   01348C  0B03               	andlw	3
 13317   01348E  6EDF               	movwf	indf2,c
 13318   013490                     
 13319                           ;can/can.c: 700:     config->FifoSize = ciFifoCon.txBF.FifoSize;
 13320                           ;stkvar	_config @ sp[(-5)+-2]
 13321   013490  0EF9               	movlw	-7
 13322   013492  CFE3 F00B          	movff	plusw1,btemp+10
 13323   013496  0EFA               	movlw	-6
 13324   013498  CFE3 F00C          	movff	plusw1,btemp+11
 13325   01349C  0E02               	movlw	2
 13326   01349E  240B               	addwf	(btemp+10)^0,w,c
 13327   0134A0  6ED9               	movwf	fsr2l,c
 13328   0134A2  0E00               	movlw	0
 13329   0134A4  200C               	addwfc	(btemp+11)^0,w,c
 13330   0134A6  6EDA               	movwf	fsr2h,c
 13331                           
 13332                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13333   0134A8  0EFE               	movlw	254
 13334   0134AA  24E1               	addwf	fsr1l,w,c
 13335   0134AC  6EE9               	movwf	fsr0l,c
 13336   0134AE  0EFF               	movlw	255
 13337   0134B0  20E2               	addwfc	fsr1h,w,c
 13338   0134B2  6EEA               	movwf	fsr0h,c
 13339   0134B4  50EF               	movf	239,w,c
 13340   0134B6  0B1F               	andlw	31
 13341   0134B8  6EDF               	movwf	indf2,c
 13342   0134BA                     
 13343                           ;can/can.c: 701:     config->PayLoadSize = ciFifoCon.txBF.PayLoadSize;
 13344                           ;stkvar	_config @ sp[(-5)+-2]
 13345   0134BA  0EF9               	movlw	-7
 13346   0134BC  CFE3 F00B          	movff	plusw1,btemp+10
 13347   0134C0  0EFA               	movlw	-6
 13348   0134C2  CFE3 F00C          	movff	plusw1,btemp+11
 13349   0134C6  0E03               	movlw	3
 13350   0134C8  240B               	addwf	(btemp+10)^0,w,c
 13351   0134CA  6ED9               	movwf	fsr2l,c
 13352   0134CC  0E00               	movlw	0
 13353   0134CE  200C               	addwfc	(btemp+11)^0,w,c
 13354   0134D0  6EDA               	movwf	fsr2h,c
 13355                           
 13356                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13357   0134D2  0EFE               	movlw	254
 13358   0134D4  24E1               	addwf	fsr1l,w,c
 13359   0134D6  6EE9               	movwf	fsr0l,c
 13360   0134D8  0EFF               	movlw	255
 13361   0134DA  20E2               	addwfc	fsr1h,w,c
 13362   0134DC  6EEA               	movwf	fsr0h,c
 13363   0134DE  38EF               	swapf	239,w,c
 13364   0134E0  32E8               	rrcf	wreg,f,c
 13365   0134E2  0B07               	andlw	7
 13366   0134E4  6EDF               	movwf	indf2,c
 13367   0134E6                     
 13368                           ; _DRV_CANFDSPI_TransmitQueueConfigureObjectReset: autosize = 5, savesize = 0, parsavesi
      +                          ze = 0, tempsize = 0 parsize = 2, argsize = 2, vargsize = 0
 13369   0134E6  0EF9               	movlw	249
 13370   0134E8  26E1               	addwf	fsr1l,f,c
 13371   0134EA  0EFF               	movlw	255
 13372   0134EC  22E2               	addwfc	fsr1h,f,c
 13373   0134EE  0012               	return		;funcret
 13374   0134F0                     __end_of_DRV_CANFDSPI_TransmitQueueConfigureObjectReset:
 13375                           	callstack 0
 13376                           
 13377 ;; *************** function _DRV_CANFDSPI_TransmitQueueConfigure *****************
 13378 ;; Defined at:
 13379 ;;		line 671 in file "can/can.c"
 13380 ;; Parameters:    Size  Location     Type
 13381 ;;  config          2  [STACK] PTR struct _CAN_TX_QUEUE
 13382 ;;		 -> txqConfig(4), 
 13383 ;; Auto vars:     Size  Location     Type
 13384 ;;  ciFifoCon       4  [STACK] struct _REG_CiTXQCON
 13385 ;;  a               2    0        unsigned short 
 13386 ;;  spiTransferE    1    0        char 
 13387 ;; Return value:  Size  Location     Type
 13388 ;;                  1  [STACK] char 
 13389 ;; Registers used:
 13390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh,
      + tblptru, prodl, prodh
 13391 ;; Tracked objects:
 13392 ;;		On entry : 0/0
 13393 ;;		On exit  : 0/0
 13394 ;;		Unchanged: 0/0
 13395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13400 ;;Total ram usage:        0 bytes
 13401 ;; Hardware stack levels used: 1
 13402 ;; Hardware stack levels required when called: 9
 13403 ;; This function calls:
 13404 ;;		_DRV_CANFDSPI_WriteWord
 13405 ;; This function is called by:
 13406 ;;		_CanInit
 13407 ;; This function uses a reentrant model
 13408 ;;
 13409                           
 13410                           	psect	text49
 13411   012F70                     __ptext49:
 13412                           	callstack 0
 13413   012F70                     _DRV_CANFDSPI_TransmitQueueConfigure:
 13414                           	callstack 0
 13415                           
 13416                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13417   012F70  52E6               	movf	postinc1,f,c
 13418   012F72  52E6               	movf	postinc1,f,c
 13419   012F74  52E6               	movf	postinc1,f,c
 13420   012F76  52E6               	movf	postinc1,f,c
 13421   012F78                     
 13422                           ;can/can.c: 678:     REG_CiTXQCON ciFifoCon;;can/can.c: 679:     ciFifoCon.word = canFif
      +                          oResetValues[0];
 13423   012F78  0EDD               	movlw	low _canFifoResetValues
 13424   012F7A  6EF6               	movwf	tblptrl,c
 13425   012F7C                     	if	1	;There is more than 1 active tblptr byte
 13426   012F7C  0EFF               	movlw	high _canFifoResetValues
 13427   012F7E  6EF7               	movwf	tblptrh,c
 13428   012F80                     	endif
 13429   012F80                     	if	1	;There are 3 active tblptr bytes
 13430   012F80  0E00               	movlw	low (_canFifoResetValues shr (0+16))
 13431   012F82  6EF8               	movwf	tblptru,c
 13432   012F84                     	endif
 13433   012F84  0009               	tblrd		*+
 13434   012F86  CFF5 F009          	movff	tablat,btemp+8
 13435   012F8A  0009               	tblrd		*+
 13436   012F8C  CFF5 F00A          	movff	tablat,btemp+9
 13437   012F90  0009               	tblrd		*+
 13438   012F92  CFF5 F00B          	movff	tablat,btemp+10
 13439   012F96  0009               	tblrd		*+
 13440   012F98  CFF5 F00C          	movff	tablat,btemp+11
 13441                           
 13442                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
 13443   012F9C  0EFC               	movlw	-4
 13444   012F9E  C009  FFE3         	movff	btemp+8,plusw1
 13445   012FA2  0EFD               	movlw	-3
 13446   012FA4  C00A  FFE3         	movff	btemp+9,plusw1
 13447   012FA8  0EFE               	movlw	-2
 13448   012FAA  C00B  FFE3         	movff	btemp+10,plusw1
 13449   012FAE  0EFF               	movlw	-1
 13450   012FB0  C00C  FFE3         	movff	btemp+11,plusw1
 13451   012FB4                     
 13452                           ;can/can.c: 681:     ciFifoCon.txBF.TxEnable = 1;
 13453                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
 13454   012FB4  50E1               	movf	fsr1l,w,c
 13455   012FB6  0FFC               	addlw	-4
 13456   012FB8  6ED9               	movwf	fsr2l,c
 13457   012FBA  50E2               	movf	fsr1h,w,c
 13458   012FBC  6EDA               	movwf	fsr2h,c
 13459   012FBE  0EFF               	movlw	255
 13460   012FC0  22DA               	addwfc	fsr2h,f,c
 13461   012FC2  8EDF               	bsf	indf2,7,c
 13462   012FC4                     
 13463                           ;can/can.c: 682:     ciFifoCon.txBF.FifoSize = config->FifoSize;
 13464                           ;stkvar	_config @ sp[(-4)+-2]
 13465   012FC4  0EFA               	movlw	-6
 13466   012FC6  CFE3 F00B          	movff	plusw1,btemp+10
 13467   012FCA  0EFB               	movlw	-5
 13468   012FCC  CFE3 F00C          	movff	plusw1,btemp+11
 13469   012FD0  0E02               	movlw	2
 13470   012FD2  240B               	addwf	(btemp+10)^0,w,c
 13471   012FD4  6ED9               	movwf	fsr2l,c
 13472   012FD6  0E00               	movlw	0
 13473   012FD8  200C               	addwfc	(btemp+11)^0,w,c
 13474   012FDA  6EDA               	movwf	fsr2h,c
 13475   012FDC  50DF               	movf	indf2,w,c
 13476   012FDE  6E0C               	movwf	(btemp+11)^0,c
 13477                           
 13478                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
 13479   012FE0  0EFF               	movlw	255
 13480   012FE2  24E1               	addwf	fsr1l,w,c
 13481   012FE4  6ED9               	movwf	fsr2l,c
 13482   012FE6  0EFF               	movlw	255
 13483   012FE8  20E2               	addwfc	fsr1h,w,c
 13484   012FEA  6EDA               	movwf	fsr2h,c
 13485   012FEC  50DF               	movf	223,w,c
 13486   012FEE  180C               	xorwf	(btemp+11)^0,w,c
 13487   012FF0  0BE0               	andlw	-32
 13488   012FF2  180C               	xorwf	(btemp+11)^0,w,c
 13489   012FF4  6EDF               	movwf	223,c
 13490   012FF6                     
 13491                           ;can/can.c: 683:     ciFifoCon.txBF.PayLoadSize = config->PayLoadSize;
 13492                           ;stkvar	_config @ sp[(-4)+-2]
 13493   012FF6  0EFA               	movlw	-6
 13494   012FF8  CFE3 F00B          	movff	plusw1,btemp+10
 13495   012FFC  0EFB               	movlw	-5
 13496   012FFE  CFE3 F00C          	movff	plusw1,btemp+11
 13497   013002  0E03               	movlw	3
 13498   013004  240B               	addwf	(btemp+10)^0,w,c
 13499   013006  6ED9               	movwf	fsr2l,c
 13500   013008  0E00               	movlw	0
 13501   01300A  200C               	addwfc	(btemp+11)^0,w,c
 13502   01300C  6EDA               	movwf	fsr2h,c
 13503   01300E  50DF               	movf	indf2,w,c
 13504   013010  6E0C               	movwf	(btemp+11)^0,c
 13505                           
 13506                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
 13507   013012  0EFF               	movlw	255
 13508   013014  24E1               	addwf	fsr1l,w,c
 13509   013016  6ED9               	movwf	fsr2l,c
 13510   013018  0EFF               	movlw	255
 13511   01301A  20E2               	addwfc	fsr1h,w,c
 13512   01301C  6EDA               	movwf	fsr2h,c
 13513   01301E  3A0C               	swapf	(btemp+11)^0,f,c
 13514   013020  460C               	rlncf	(btemp+11)^0,f,c
 13515   013022  50DF               	movf	223,w,c
 13516   013024  180C               	xorwf	(btemp+11)^0,w,c
 13517   013026  0B1F               	andlw	-225
 13518   013028  180C               	xorwf	(btemp+11)^0,w,c
 13519   01302A  6EDF               	movwf	223,c
 13520   01302C                     
 13521                           ;can/can.c: 684:     ciFifoCon.txBF.TxAttempts = config->TxAttempts;
 13522                           ;stkvar	_config @ sp[(-4)+-2]
 13523   01302C  0EFA               	movlw	-6
 13524   01302E  CFE3 F00B          	movff	plusw1,btemp+10
 13525   013032  0EFB               	movlw	-5
 13526   013034  CFE3 F00C          	movff	plusw1,btemp+11
 13527   013038  0E01               	movlw	1
 13528   01303A  240B               	addwf	(btemp+10)^0,w,c
 13529   01303C  6ED9               	movwf	fsr2l,c
 13530   01303E  0E00               	movlw	0
 13531   013040  200C               	addwfc	(btemp+11)^0,w,c
 13532   013042  6EDA               	movwf	fsr2h,c
 13533   013044  50DF               	movf	indf2,w,c
 13534   013046  6E0C               	movwf	(btemp+11)^0,c
 13535                           
 13536                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
 13537   013048  0EFE               	movlw	254
 13538   01304A  24E1               	addwf	fsr1l,w,c
 13539   01304C  6ED9               	movwf	fsr2l,c
 13540   01304E  0EFF               	movlw	255
 13541   013050  20E2               	addwfc	fsr1h,w,c
 13542   013052  6EDA               	movwf	fsr2h,c
 13543   013054  3A0C               	swapf	(btemp+11)^0,f,c
 13544   013056  460C               	rlncf	(btemp+11)^0,f,c
 13545   013058  50DF               	movf	223,w,c
 13546   01305A  180C               	xorwf	(btemp+11)^0,w,c
 13547   01305C  0B9F               	andlw	-97
 13548   01305E  180C               	xorwf	(btemp+11)^0,w,c
 13549   013060  6EDF               	movwf	223,c
 13550   013062                     
 13551                           ;can/can.c: 685:     ciFifoCon.txBF.TxPriority = config->TxPriority;
 13552                           ;stkvar	_config @ sp[(-4)+-2]
 13553   013062  0EFA               	movlw	-6
 13554   013064  CFE3 FFD9          	movff	plusw1,fsr2l
 13555   013068  0EFB               	movlw	-5
 13556   01306A  CFE3 FFDA          	movff	plusw1,fsr2h
 13557   01306E  50DF               	movf	indf2,w,c
 13558   013070  6E0C               	movwf	(btemp+11)^0,c
 13559                           
 13560                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
 13561   013072  0EFE               	movlw	254
 13562   013074  24E1               	addwf	fsr1l,w,c
 13563   013076  6ED9               	movwf	fsr2l,c
 13564   013078  0EFF               	movlw	255
 13565   01307A  20E2               	addwfc	fsr1h,w,c
 13566   01307C  6EDA               	movwf	fsr2h,c
 13567   01307E  50DF               	movf	223,w,c
 13568   013080  180C               	xorwf	(btemp+11)^0,w,c
 13569   013082  0BE0               	andlw	-32
 13570   013084  180C               	xorwf	(btemp+11)^0,w,c
 13571   013086  6EDF               	movwf	223,c
 13572   013088                     
 13573                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
 13574   013088  0EFC               	movlw	-4
 13575   01308A  CFE3 FFE6          	movff	plusw1,postinc1
 13576   01308E  CFE3 FFE6          	movff	plusw1,postinc1
 13577   013092  CFE3 FFE6          	movff	plusw1,postinc1
 13578   013096  CFE3 FFE6          	movff	plusw1,postinc1
 13579   01309A  0E50               	movlw	80
 13580   01309C  6EE6               	movwf	postinc1,c
 13581   01309E  0E00               	movlw	0
 13582   0130A0  6EE6               	movwf	postinc1,c
 13583   0130A2  ECED  F09A         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 13584   0130A6                     
 13585                           ; _DRV_CANFDSPI_TransmitQueueConfigure: autosize = 4, savesize = 0, parsavesize = 0, tem
      +                          psize = 0 parsize = 2, argsize = 2, vargsize = 0
 13586   0130A6  0EFA               	movlw	250
 13587   0130A8  26E1               	addwf	fsr1l,f,c
 13588   0130AA  0EFF               	movlw	255
 13589   0130AC  22E2               	addwfc	fsr1h,f,c
 13590   0130AE  0012               	return		;funcret
 13591   0130B0                     __end_of_DRV_CANFDSPI_TransmitQueueConfigure:
 13592                           	callstack 0
 13593                           
 13594 ;; *************** function _DRV_CANFDSPI_TransmitChannelConfigureObjectReset *****************
 13595 ;; Defined at:
 13596 ;;		line 657 in file "can/can.c"
 13597 ;; Parameters:    Size  Location     Type
 13598 ;;  config          2  [STACK] PTR struct _CAN_TX_FIFO_
 13599 ;;		 -> txfConfig(2), 
 13600 ;; Auto vars:     Size  Location     Type
 13601 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
 13602 ;; Return value:  Size  Location     Type
 13603 ;;                  1  [STACK] char 
 13604 ;; Registers used:
 13605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru
 13606 ;; Tracked objects:
 13607 ;;		On entry : 0/0
 13608 ;;		On exit  : 0/0
 13609 ;;		Unchanged: 0/0
 13610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13615 ;;Total ram usage:        0 bytes
 13616 ;; Hardware stack levels used: 1
 13617 ;; Hardware stack levels required when called: 7
 13618 ;; This function calls:
 13619 ;;		Nothing
 13620 ;; This function is called by:
 13621 ;;		_CanInit
 13622 ;; This function uses a reentrant model
 13623 ;;
 13624                           
 13625                           	psect	text50
 13626   0130B0                     __ptext50:
 13627                           	callstack 0
 13628   0130B0                     _DRV_CANFDSPI_TransmitChannelConfigureObjectReset:
 13629                           	callstack 0
 13630                           
 13631                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13632   0130B0  0E05               	movlw	5
 13633   0130B2  26E1               	addwf	fsr1l,f,c
 13634   0130B4  0E00               	movlw	0
 13635   0130B6  22E2               	addwfc	fsr1h,f,c
 13636   0130B8                     
 13637                           ;can/can.c: 657: int8_t DRV_CANFDSPI_TransmitChannelConfigureObjectReset(CAN_TX_FIFO_CON
      +                          FIG* config);can/can.c: 658: {;can/can.c: 659:     REG_CiFIFOCON ciFifoCon;;can/can.c: 6
      +                          60:     ciFifoCon.word = canFifoResetValues[0];
 13638   0130B8  0EDD               	movlw	low _canFifoResetValues
 13639   0130BA  6EF6               	movwf	tblptrl,c
 13640   0130BC                     	if	1	;There is more than 1 active tblptr byte
 13641   0130BC  0EFF               	movlw	high _canFifoResetValues
 13642   0130BE  6EF7               	movwf	tblptrh,c
 13643   0130C0                     	endif
 13644   0130C0                     	if	1	;There are 3 active tblptr bytes
 13645   0130C0  0E00               	movlw	low (_canFifoResetValues shr (0+16))
 13646   0130C2  6EF8               	movwf	tblptru,c
 13647   0130C4                     	endif
 13648   0130C4  0009               	tblrd		*+
 13649   0130C6  CFF5 F009          	movff	tablat,btemp+8
 13650   0130CA  0009               	tblrd		*+
 13651   0130CC  CFF5 F00A          	movff	tablat,btemp+9
 13652   0130D0  0009               	tblrd		*+
 13653   0130D2  CFF5 F00B          	movff	tablat,btemp+10
 13654   0130D6  0009               	tblrd		*+
 13655   0130D8  CFF5 F00C          	movff	tablat,btemp+11
 13656                           
 13657                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13658   0130DC  0EFB               	movlw	-5
 13659   0130DE  C009  FFE3         	movff	btemp+8,plusw1
 13660   0130E2  0EFC               	movlw	-4
 13661   0130E4  C00A  FFE3         	movff	btemp+9,plusw1
 13662   0130E8  0EFD               	movlw	-3
 13663   0130EA  C00B  FFE3         	movff	btemp+10,plusw1
 13664   0130EE  0EFE               	movlw	-2
 13665   0130F0  C00C  FFE3         	movff	btemp+11,plusw1
 13666   0130F4                     
 13667                           ;can/can.c: 662:     config->RTREnable = ciFifoCon.txBF.RTREnable;
 13668                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13669   0130F4  50E1               	movf	fsr1l,w,c
 13670   0130F6  0FFB               	addlw	-5
 13671   0130F8  6ED9               	movwf	fsr2l,c
 13672   0130FA  50E2               	movf	fsr1h,w,c
 13673   0130FC  6EDA               	movwf	fsr2h,c
 13674   0130FE  0EFF               	movlw	255
 13675   013100  22DA               	addwfc	fsr2h,f,c
 13676                           
 13677                           ;stkvar	_config @ sp[(-5)+-2]
 13678   013102  0EF9               	movlw	-7
 13679   013104  CFE3 FFE9          	movff	plusw1,fsr0l
 13680   013108  0EFA               	movlw	-6
 13681   01310A  CFE3 FFEA          	movff	plusw1,fsr0h
 13682   01310E  90EF               	bcf	indf0,0,c
 13683   013110  ACDF               	btfss	indf2,6,c
 13684   013112  EF8C  F098         	goto	u995
 13685   013116  80EF               	bsf	indf0,0,c
 13686   013118                     u995:
 13687   013118                     
 13688                           ;can/can.c: 663:     config->TxPriority = ciFifoCon.txBF.TxPriority;
 13689                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13690   013118  0EFD               	movlw	253
 13691   01311A  24E1               	addwf	fsr1l,w,c
 13692   01311C  6ED9               	movwf	fsr2l,c
 13693   01311E  0EFF               	movlw	255
 13694   013120  20E2               	addwfc	fsr1h,w,c
 13695   013122  6EDA               	movwf	fsr2h,c
 13696   013124  50DF               	movf	223,w,c
 13697   013126  0B1F               	andlw	31
 13698   013128  6E0C               	movwf	(btemp+11)^0,c
 13699                           
 13700                           ;stkvar	_config @ sp[(-5)+-2]
 13701   01312A  0EF9               	movlw	-7
 13702   01312C  CFE3 FFD9          	movff	plusw1,fsr2l
 13703   013130  0EFA               	movlw	-6
 13704   013132  CFE3 FFDA          	movff	plusw1,fsr2h
 13705   013136  460C               	rlncf	(btemp+11)^0,f,c
 13706   013138  50DF               	movf	223,w,c
 13707   01313A  180C               	xorwf	(btemp+11)^0,w,c
 13708   01313C  0BC1               	andlw	-63
 13709   01313E  180C               	xorwf	(btemp+11)^0,w,c
 13710   013140  6EDF               	movwf	223,c
 13711   013142                     
 13712                           ;can/can.c: 664:     config->TxAttempts = ciFifoCon.txBF.TxAttempts;
 13713                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13714   013142  0EFD               	movlw	253
 13715   013144  24E1               	addwf	fsr1l,w,c
 13716   013146  6ED9               	movwf	fsr2l,c
 13717   013148  0EFF               	movlw	255
 13718   01314A  20E2               	addwfc	fsr1h,w,c
 13719   01314C  6EDA               	movwf	fsr2h,c
 13720   01314E  38DF               	swapf	223,w,c
 13721   013150  32E8               	rrcf	wreg,f,c
 13722   013152  0B03               	andlw	3
 13723   013154  6E0C               	movwf	(btemp+11)^0,c
 13724                           
 13725                           ;stkvar	_config @ sp[(-5)+-2]
 13726   013156  0EF9               	movlw	-7
 13727   013158  CFE3 FFD9          	movff	plusw1,fsr2l
 13728   01315C  0EFA               	movlw	-6
 13729   01315E  CFE3 FFDA          	movff	plusw1,fsr2h
 13730   013162  3A0C               	swapf	(btemp+11)^0,f,c
 13731   013164  460C               	rlncf	(btemp+11)^0,f,c
 13732   013166  460C               	rlncf	(btemp+11)^0,f,c
 13733   013168  50DF               	movf	223,w,c
 13734   01316A  180C               	xorwf	(btemp+11)^0,w,c
 13735   01316C  0B3F               	andlw	-193
 13736   01316E  180C               	xorwf	(btemp+11)^0,w,c
 13737   013170  6EDF               	movwf	223,c
 13738   013172                     
 13739                           ;can/can.c: 665:     config->FifoSize = ciFifoCon.txBF.FifoSize;
 13740                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13741   013172  0EFE               	movlw	254
 13742   013174  24E1               	addwf	fsr1l,w,c
 13743   013176  6ED9               	movwf	fsr2l,c
 13744   013178  0EFF               	movlw	255
 13745   01317A  20E2               	addwfc	fsr1h,w,c
 13746   01317C  6EDA               	movwf	fsr2h,c
 13747   01317E  50DF               	movf	223,w,c
 13748   013180  0B1F               	andlw	31
 13749   013182  6E0C               	movwf	(btemp+11)^0,c
 13750                           
 13751                           ;stkvar	_config @ sp[(-5)+-2]
 13752   013184  0EF9               	movlw	-7
 13753   013186  CFE3 F009          	movff	plusw1,btemp+8
 13754   01318A  0EFA               	movlw	-6
 13755   01318C  CFE3 F00A          	movff	plusw1,btemp+9
 13756   013190  0E01               	movlw	1
 13757   013192  2409               	addwf	(btemp+8)^0,w,c
 13758   013194  6ED9               	movwf	fsr2l,c
 13759   013196  0E00               	movlw	0
 13760   013198  200A               	addwfc	(btemp+9)^0,w,c
 13761   01319A  6EDA               	movwf	fsr2h,c
 13762   01319C  50DF               	movf	223,w,c
 13763   01319E  180C               	xorwf	(btemp+11)^0,w,c
 13764   0131A0  0BE0               	andlw	-32
 13765   0131A2  180C               	xorwf	(btemp+11)^0,w,c
 13766   0131A4  6EDF               	movwf	223,c
 13767   0131A6                     
 13768                           ;can/can.c: 666:     config->PayLoadSize = ciFifoCon.txBF.PayLoadSize;
 13769                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13770   0131A6  0EFE               	movlw	254
 13771   0131A8  24E1               	addwf	fsr1l,w,c
 13772   0131AA  6ED9               	movwf	fsr2l,c
 13773   0131AC  0EFF               	movlw	255
 13774   0131AE  20E2               	addwfc	fsr1h,w,c
 13775   0131B0  6EDA               	movwf	fsr2h,c
 13776   0131B2  38DF               	swapf	223,w,c
 13777   0131B4  32E8               	rrcf	wreg,f,c
 13778   0131B6  0B07               	andlw	7
 13779   0131B8  6E0C               	movwf	(btemp+11)^0,c
 13780                           
 13781                           ;stkvar	_config @ sp[(-5)+-2]
 13782   0131BA  0EF9               	movlw	-7
 13783   0131BC  CFE3 F009          	movff	plusw1,btemp+8
 13784   0131C0  0EFA               	movlw	-6
 13785   0131C2  CFE3 F00A          	movff	plusw1,btemp+9
 13786   0131C6  0E01               	movlw	1
 13787   0131C8  2409               	addwf	(btemp+8)^0,w,c
 13788   0131CA  6ED9               	movwf	fsr2l,c
 13789   0131CC  0E00               	movlw	0
 13790   0131CE  200A               	addwfc	(btemp+9)^0,w,c
 13791   0131D0  6EDA               	movwf	fsr2h,c
 13792   0131D2  3A0C               	swapf	(btemp+11)^0,f,c
 13793   0131D4  460C               	rlncf	(btemp+11)^0,f,c
 13794   0131D6  50DF               	movf	223,w,c
 13795   0131D8  180C               	xorwf	(btemp+11)^0,w,c
 13796   0131DA  0B1F               	andlw	-225
 13797   0131DC  180C               	xorwf	(btemp+11)^0,w,c
 13798   0131DE  6EDF               	movwf	223,c
 13799   0131E0                     
 13800                           ; _DRV_CANFDSPI_TransmitChannelConfigureObjectReset: autosize = 5, savesize = 0, parsave
      +                          size = 0, tempsize = 0 parsize = 2, argsize = 2, vargsize = 0
 13801   0131E0  0EF9               	movlw	249
 13802   0131E2  26E1               	addwf	fsr1l,f,c
 13803   0131E4  0EFF               	movlw	255
 13804   0131E6  22E2               	addwfc	fsr1h,f,c
 13805   0131E8  0012               	return		;funcret
 13806   0131EA                     __end_of_DRV_CANFDSPI_TransmitChannelConfigureObjectReset:
 13807                           	callstack 0
 13808                           
 13809 ;; *************** function _DRV_CANFDSPI_TransmitChannelConfigure *****************
 13810 ;; Defined at:
 13811 ;;		line 633 in file "can/can.c"
 13812 ;; Parameters:    Size  Location     Type
 13813 ;;  channel         1  [STACK] enum E5290
 13814 ;;  config          2  [STACK] PTR struct _CAN_TX_FIFO_
 13815 ;;		 -> txfConfig(2), 
 13816 ;; Auto vars:     Size  Location     Type
 13817 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
 13818 ;;  a               2  [STACK] unsigned short 
 13819 ;;  spiTransferE    1    0        char 
 13820 ;; Return value:  Size  Location     Type
 13821 ;;                  1  [STACK] char 
 13822 ;; Registers used:
 13823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 13824 ;; Tracked objects:
 13825 ;;		On entry : 0/0
 13826 ;;		On exit  : 0/0
 13827 ;;		Unchanged: 0/0
 13828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13833 ;;Total ram usage:        0 bytes
 13834 ;; Hardware stack levels used: 1
 13835 ;; Hardware stack levels required when called: 9
 13836 ;; This function calls:
 13837 ;;		_DRV_CANFDSPI_WriteWord
 13838 ;; This function is called by:
 13839 ;;		_CanInit
 13840 ;; This function uses a reentrant model
 13841 ;;
 13842                           
 13843                           	psect	text51
 13844   01270E                     __ptext51:
 13845                           	callstack 0
 13846   01270E                     _DRV_CANFDSPI_TransmitChannelConfigure:
 13847                           	callstack 0
 13848                           
 13849                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13850   01270E  0E07               	movlw	7
 13851   012710  26E1               	addwf	fsr1l,f,c
 13852   012712  0E00               	movlw	0
 13853   012714  22E2               	addwfc	fsr1h,f,c
 13854   012716                     
 13855                           ;can/can.c: 640:     REG_CiFIFOCON ciFifoCon;;can/can.c: 641:     ciFifoCon.word = canFi
      +                          foResetValues[0];
 13856   012716  0EDD               	movlw	low _canFifoResetValues
 13857   012718  6EF6               	movwf	tblptrl,c
 13858   01271A                     	if	1	;There is more than 1 active tblptr byte
 13859   01271A  0EFF               	movlw	high _canFifoResetValues
 13860   01271C  6EF7               	movwf	tblptrh,c
 13861   01271E                     	endif
 13862   01271E                     	if	1	;There are 3 active tblptr bytes
 13863   01271E  0E00               	movlw	low (_canFifoResetValues shr (0+16))
 13864   012720  6EF8               	movwf	tblptru,c
 13865   012722                     	endif
 13866   012722  0009               	tblrd		*+
 13867   012724  CFF5 F009          	movff	tablat,btemp+8
 13868   012728  0009               	tblrd		*+
 13869   01272A  CFF5 F00A          	movff	tablat,btemp+9
 13870   01272E  0009               	tblrd		*+
 13871   012730  CFF5 F00B          	movff	tablat,btemp+10
 13872   012734  0009               	tblrd		*+
 13873   012736  CFF5 F00C          	movff	tablat,btemp+11
 13874                           
 13875                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 13876   01273A  0EF9               	movlw	-7
 13877   01273C  C009  FFE3         	movff	btemp+8,plusw1
 13878   012740  0EFA               	movlw	-6
 13879   012742  C00A  FFE3         	movff	btemp+9,plusw1
 13880   012746  0EFB               	movlw	-5
 13881   012748  C00B  FFE3         	movff	btemp+10,plusw1
 13882   01274C  0EFC               	movlw	-4
 13883   01274E  C00C  FFE3         	movff	btemp+11,plusw1
 13884   012752                     
 13885                           ;can/can.c: 643:     ciFifoCon.txBF.TxEnable = 1;
 13886                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 13887   012752  50E1               	movf	fsr1l,w,c
 13888   012754  0FF9               	addlw	-7
 13889   012756  6ED9               	movwf	fsr2l,c
 13890   012758  50E2               	movf	fsr1h,w,c
 13891   01275A  6EDA               	movwf	fsr2h,c
 13892   01275C  0EFF               	movlw	255
 13893   01275E  22DA               	addwfc	fsr2h,f,c
 13894   012760  8EDF               	bsf	indf2,7,c
 13895   012762                     
 13896                           ;can/can.c: 644:     ciFifoCon.txBF.FifoSize = config->FifoSize;
 13897                           ;stkvar	_config @ sp[(-7)+-3]
 13898   012762  0EF6               	movlw	-10
 13899   012764  CFE3 F00B          	movff	plusw1,btemp+10
 13900   012768  0EF7               	movlw	-9
 13901   01276A  CFE3 F00C          	movff	plusw1,btemp+11
 13902   01276E  0E01               	movlw	1
 13903   012770  240B               	addwf	(btemp+10)^0,w,c
 13904   012772  6ED9               	movwf	fsr2l,c
 13905   012774  0E00               	movlw	0
 13906   012776  200C               	addwfc	(btemp+11)^0,w,c
 13907   012778  6EDA               	movwf	fsr2h,c
 13908   01277A  50DF               	movf	223,w,c
 13909   01277C  0B1F               	andlw	31
 13910   01277E  6E0C               	movwf	(btemp+11)^0,c
 13911                           
 13912                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 13913   012780  0EFC               	movlw	252
 13914   012782  24E1               	addwf	fsr1l,w,c
 13915   012784  6ED9               	movwf	fsr2l,c
 13916   012786  0EFF               	movlw	255
 13917   012788  20E2               	addwfc	fsr1h,w,c
 13918   01278A  6EDA               	movwf	fsr2h,c
 13919   01278C  50DF               	movf	223,w,c
 13920   01278E  180C               	xorwf	(btemp+11)^0,w,c
 13921   012790  0BE0               	andlw	-32
 13922   012792  180C               	xorwf	(btemp+11)^0,w,c
 13923   012794  6EDF               	movwf	223,c
 13924   012796                     
 13925                           ;can/can.c: 645:     ciFifoCon.txBF.PayLoadSize = config->PayLoadSize;
 13926                           ;stkvar	_config @ sp[(-7)+-3]
 13927   012796  0EF6               	movlw	-10
 13928   012798  CFE3 F00B          	movff	plusw1,btemp+10
 13929   01279C  0EF7               	movlw	-9
 13930   01279E  CFE3 F00C          	movff	plusw1,btemp+11
 13931   0127A2  0E01               	movlw	1
 13932   0127A4  240B               	addwf	(btemp+10)^0,w,c
 13933   0127A6  6ED9               	movwf	fsr2l,c
 13934   0127A8  0E00               	movlw	0
 13935   0127AA  200C               	addwfc	(btemp+11)^0,w,c
 13936   0127AC  6EDA               	movwf	fsr2h,c
 13937   0127AE  38DF               	swapf	223,w,c
 13938   0127B0  32E8               	rrcf	wreg,f,c
 13939   0127B2  0B07               	andlw	7
 13940   0127B4  6E0C               	movwf	(btemp+11)^0,c
 13941                           
 13942                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 13943   0127B6  0EFC               	movlw	252
 13944   0127B8  24E1               	addwf	fsr1l,w,c
 13945   0127BA  6ED9               	movwf	fsr2l,c
 13946   0127BC  0EFF               	movlw	255
 13947   0127BE  20E2               	addwfc	fsr1h,w,c
 13948   0127C0  6EDA               	movwf	fsr2h,c
 13949   0127C2  3A0C               	swapf	(btemp+11)^0,f,c
 13950   0127C4  460C               	rlncf	(btemp+11)^0,f,c
 13951   0127C6  50DF               	movf	223,w,c
 13952   0127C8  180C               	xorwf	(btemp+11)^0,w,c
 13953   0127CA  0B1F               	andlw	-225
 13954   0127CC  180C               	xorwf	(btemp+11)^0,w,c
 13955   0127CE  6EDF               	movwf	223,c
 13956   0127D0                     
 13957                           ;can/can.c: 646:     ciFifoCon.txBF.TxAttempts = config->TxAttempts;
 13958                           ;stkvar	_config @ sp[(-7)+-3]
 13959   0127D0  0EF6               	movlw	-10
 13960   0127D2  CFE3 FFD9          	movff	plusw1,fsr2l
 13961   0127D6  0EF7               	movlw	-9
 13962   0127D8  CFE3 FFDA          	movff	plusw1,fsr2h
 13963   0127DC  38DF               	swapf	223,w,c
 13964   0127DE  32E8               	rrcf	wreg,f,c
 13965   0127E0  32E8               	rrcf	wreg,f,c
 13966   0127E2  0B03               	andlw	3
 13967   0127E4  6E0C               	movwf	(btemp+11)^0,c
 13968                           
 13969                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 13970   0127E6  0EFB               	movlw	251
 13971   0127E8  24E1               	addwf	fsr1l,w,c
 13972   0127EA  6ED9               	movwf	fsr2l,c
 13973   0127EC  0EFF               	movlw	255
 13974   0127EE  20E2               	addwfc	fsr1h,w,c
 13975   0127F0  6EDA               	movwf	fsr2h,c
 13976   0127F2  3A0C               	swapf	(btemp+11)^0,f,c
 13977   0127F4  460C               	rlncf	(btemp+11)^0,f,c
 13978   0127F6  50DF               	movf	223,w,c
 13979   0127F8  180C               	xorwf	(btemp+11)^0,w,c
 13980   0127FA  0B9F               	andlw	-97
 13981   0127FC  180C               	xorwf	(btemp+11)^0,w,c
 13982   0127FE  6EDF               	movwf	223,c
 13983   012800                     
 13984                           ;can/can.c: 647:     ciFifoCon.txBF.TxPriority = config->TxPriority;
 13985                           ;stkvar	_config @ sp[(-7)+-3]
 13986   012800  0EF6               	movlw	-10
 13987   012802  CFE3 FFD9          	movff	plusw1,fsr2l
 13988   012806  0EF7               	movlw	-9
 13989   012808  CFE3 FFDA          	movff	plusw1,fsr2h
 13990   01280C  30DF               	rrcf	223,w,c
 13991   01280E  0B1F               	andlw	31
 13992   012810  6E0C               	movwf	(btemp+11)^0,c
 13993                           
 13994                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 13995   012812  0EFB               	movlw	251
 13996   012814  24E1               	addwf	fsr1l,w,c
 13997   012816  6ED9               	movwf	fsr2l,c
 13998   012818  0EFF               	movlw	255
 13999   01281A  20E2               	addwfc	fsr1h,w,c
 14000   01281C  6EDA               	movwf	fsr2h,c
 14001   01281E  50DF               	movf	223,w,c
 14002   012820  180C               	xorwf	(btemp+11)^0,w,c
 14003   012822  0BE0               	andlw	-32
 14004   012824  180C               	xorwf	(btemp+11)^0,w,c
 14005   012826  6EDF               	movwf	223,c
 14006   012828                     
 14007                           ;can/can.c: 648:     ciFifoCon.txBF.RTREnable = config->RTREnable;
 14008                           ;stkvar	_config @ sp[(-7)+-3]
 14009   012828  0EF6               	movlw	-10
 14010   01282A  CFE3 FFD9          	movff	plusw1,fsr2l
 14011   01282E  0EF7               	movlw	-9
 14012   012830  CFE3 FFDA          	movff	plusw1,fsr2h
 14013                           
 14014                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14015   012834  50E1               	movf	fsr1l,w,c
 14016   012836  0FF9               	addlw	-7
 14017   012838  6EE9               	movwf	fsr0l,c
 14018   01283A  50E2               	movf	fsr1h,w,c
 14019   01283C  6EEA               	movwf	fsr0h,c
 14020   01283E  0EFF               	movlw	255
 14021   012840  22EA               	addwfc	fsr0h,f,c
 14022   012842  9CEF               	bcf	indf0,6,c
 14023   012844  A0DF               	btfss	indf2,0,c
 14024   012846  EF26  F094         	goto	u2465
 14025   01284A  8CEF               	bsf	indf0,6,c
 14026   01284C                     u2465:
 14027   01284C                     
 14028                           ;can/can.c: 650:     a = 0x050 + (channel * (3*4));
 14029                           ;stkvar	_channel @ sp[(-7)+-1]
 14030   01284C  0EF8               	movlw	-8
 14031   01284E  50E3               	movf	plusw1,w,c
 14032   012850  0D0C               	mullw	12
 14033   012852  0E50               	movlw	80
 14034   012854  26F3               	addwf	243,f,c
 14035   012856  0E00               	movlw	0
 14036   012858  22F4               	addwfc	244,f,c
 14037                           
 14038                           ;stkvar	_a @ sp[(-7)+5]
 14039   01285A  0EFE               	movlw	-2
 14040   01285C  CFF3 FFE3          	movff	prodl,plusw1
 14041   012860  0EFF               	movlw	-1
 14042   012862  CFF4 FFE3          	movff	prodh,plusw1
 14043   012866                     
 14044                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14045   012866  0EF9               	movlw	-7
 14046   012868  CFE3 FFE6          	movff	plusw1,postinc1
 14047   01286C  CFE3 FFE6          	movff	plusw1,postinc1
 14048   012870  CFE3 FFE6          	movff	plusw1,postinc1
 14049   012874  CFE3 FFE6          	movff	plusw1,postinc1
 14050                           
 14051                           ;stkvar	_a @ sp[(-11)+5]
 14052   012878  0EFA               	movlw	-6
 14053   01287A  CFE3 FFE6          	movff	plusw1,postinc1
 14054   01287E  CFE3 FFE6          	movff	plusw1,postinc1
 14055   012882  ECED  F09A         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 14056   012886                     
 14057                           ; _DRV_CANFDSPI_TransmitChannelConfigure: autosize = 7, savesize = 0, parsavesize = 0, t
      +                          empsize = 0 parsize = 3, argsize = 3, vargsize = 0
 14058   012886  0EF6               	movlw	246
 14059   012888  26E1               	addwf	fsr1l,f,c
 14060   01288A  0EFF               	movlw	255
 14061   01288C  22E2               	addwfc	fsr1h,f,c
 14062   01288E  0012               	return		;funcret
 14063   012890                     __end_of_DRV_CANFDSPI_TransmitChannelConfigure:
 14064                           	callstack 0
 14065                           
 14066 ;; *************** function _DRV_CANFDSPI_TimeStampSet *****************
 14067 ;; Defined at:
 14068 ;;		line 2690 in file "can/can.c"
 14069 ;; Parameters:    Size  Location     Type
 14070 ;;  ts              4  [STACK] unsigned long 
 14071 ;; Auto vars:     Size  Location     Type
 14072 ;;  spiTransferE    1    0        char 
 14073 ;; Return value:  Size  Location     Type
 14074 ;;                  1  [STACK] char 
 14075 ;; Registers used:
 14076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14077 ;; Tracked objects:
 14078 ;;		On entry : 0/0
 14079 ;;		On exit  : 0/0
 14080 ;;		Unchanged: 0/0
 14081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14086 ;;Total ram usage:        0 bytes
 14087 ;; Hardware stack levels used: 1
 14088 ;; Hardware stack levels required when called: 9
 14089 ;; This function calls:
 14090 ;;		_DRV_CANFDSPI_WriteWord
 14091 ;; This function is called by:
 14092 ;;		_CanInit
 14093 ;; This function uses a reentrant model
 14094 ;;
 14095                           
 14096                           	psect	text52
 14097   01481A                     __ptext52:
 14098                           	callstack 0
 14099   01481A                     _DRV_CANFDSPI_TimeStampSet:
 14100                           	callstack 20
 14101   01481A                     
 14102                           ;stkvar	_ts @ sp[(0)+-4]
 14103   01481A  0EFC               	movlw	-4
 14104   01481C  CFE3 FFE6          	movff	plusw1,postinc1
 14105   014820  CFE3 FFE6          	movff	plusw1,postinc1
 14106   014824  CFE3 FFE6          	movff	plusw1,postinc1
 14107   014828  CFE3 FFE6          	movff	plusw1,postinc1
 14108   01482C  0E10               	movlw	16
 14109   01482E  6EE6               	movwf	postinc1,c
 14110   014830  0E00               	movlw	0
 14111   014832  6EE6               	movwf	postinc1,c
 14112   014834  ECED  F09A         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 14113   014838                     
 14114                           ; _DRV_CANFDSPI_TimeStampSet: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 4, argsize = 4, vargsize = 0
 14115   014838  52E5               	movf	postdec1,f,c
 14116   01483A  52E5               	movf	postdec1,f,c
 14117   01483C  52E5               	movf	postdec1,f,c
 14118   01483E  52E5               	movf	postdec1,f,c
 14119   014840  0012               	return		;funcret
 14120   014842                     __end_of_DRV_CANFDSPI_TimeStampSet:
 14121                           	callstack 0
 14122                           
 14123 ;; *************** function _DRV_CANFDSPI_TimeStampPrescalerSet *****************
 14124 ;; Defined at:
 14125 ;;		line 2725 in file "can/can.c"
 14126 ;; Parameters:    Size  Location     Type
 14127 ;;  ps              2  [STACK] unsigned short 
 14128 ;; Auto vars:     Size  Location     Type
 14129 ;;  spiTransferE    1    0        char 
 14130 ;; Return value:  Size  Location     Type
 14131 ;;                  1  [STACK] char 
 14132 ;; Registers used:
 14133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14134 ;; Tracked objects:
 14135 ;;		On entry : 0/0
 14136 ;;		On exit  : 0/0
 14137 ;;		Unchanged: 0/0
 14138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14143 ;;Total ram usage:        0 bytes
 14144 ;; Hardware stack levels used: 1
 14145 ;; Hardware stack levels required when called: 9
 14146 ;; This function calls:
 14147 ;;		_DRV_CANFDSPI_WriteHalfWord
 14148 ;; This function is called by:
 14149 ;;		_CanInit
 14150 ;; This function uses a reentrant model
 14151 ;;
 14152                           
 14153                           	psect	text53
 14154   01488A                     __ptext53:
 14155                           	callstack 0
 14156   01488A                     _DRV_CANFDSPI_TimeStampPrescalerSet:
 14157                           	callstack 20
 14158   01488A                     
 14159                           ;stkvar	_ps @ sp[(0)+-2]
 14160   01488A  0EFE               	movlw	-2
 14161   01488C  CFE3 FFE6          	movff	plusw1,postinc1
 14162   014890  CFE3 FFE6          	movff	plusw1,postinc1
 14163   014894  0E14               	movlw	20
 14164   014896  6EE6               	movwf	postinc1,c
 14165   014898  0E00               	movlw	0
 14166   01489A  6EE6               	movwf	postinc1,c
 14167   01489C  EC8D  F09C         	call	_DRV_CANFDSPI_WriteHalfWord	;wreg free
 14168   0148A0                     
 14169                           ; _DRV_CANFDSPI_TimeStampPrescalerSet: autosize = 0, savesize = 0, parsavesize = 0, temp
      +                          size = 0 parsize = 2, argsize = 2, vargsize = 0
 14170   0148A0  52E5               	movf	postdec1,f,c
 14171   0148A2  52E5               	movf	postdec1,f,c
 14172   0148A4  0012               	return		;funcret
 14173   0148A6                     __end_of_DRV_CANFDSPI_TimeStampPrescalerSet:
 14174                           	callstack 0
 14175                           
 14176 ;; *************** function _DRV_CANFDSPI_TimeStampEnable *****************
 14177 ;; Defined at:
 14178 ;;		line 2634 in file "can/can.c"
 14179 ;; Parameters:    Size  Location     Type
 14180 ;;		None
 14181 ;; Auto vars:     Size  Location     Type
 14182 ;;  d               1  [STACK] unsigned char 
 14183 ;;  spiTransferE    1  [STACK] char 
 14184 ;; Return value:  Size  Location     Type
 14185 ;;                  1  [STACK] char 
 14186 ;; Registers used:
 14187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 14188 ;; Tracked objects:
 14189 ;;		On entry : 0/0
 14190 ;;		On exit  : 0/0
 14191 ;;		Unchanged: 0/0
 14192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14197 ;;Total ram usage:        0 bytes
 14198 ;; Hardware stack levels used: 1
 14199 ;; Hardware stack levels required when called: 9
 14200 ;; This function calls:
 14201 ;;		_DRV_CANFDSPI_ReadByte
 14202 ;;		_DRV_CANFDSPI_WriteByte
 14203 ;; This function is called by:
 14204 ;;		_CanInit
 14205 ;; This function uses a reentrant model
 14206 ;;
 14207                           
 14208                           	psect	text54
 14209   014506                     __ptext54:
 14210                           	callstack 0
 14211   014506                     _DRV_CANFDSPI_TimeStampEnable:
 14212                           	callstack 0
 14213                           
 14214                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14215   014506  52E6               	movf	postinc1,f,c
 14216   014508  52E6               	movf	postinc1,f,c
 14217   01450A                     
 14218                           ;can/can.c: 2637:     uint8_t d = 0;
 14219                           ;stkvar	_d @ sp[(-2)+0]
 14220   01450A  0EFE               	movlw	-2
 14221   01450C  6AE3               	clrf	plusw1,c
 14222   01450E                     
 14223                           ;can/can.c: 2640:     spiTransferError = DRV_CANFDSPI_ReadByte( 0x014 + 2, &d);
 14224                           ;stkvar	_d @ sp[(-2)+0]
 14225   01450E  0EFE               	movlw	254
 14226   014510  24E1               	addwf	fsr1l,w,c
 14227   014512  6E01               	movwf	btemp^0,c
 14228   014514  0EFF               	movlw	255
 14229   014516  20E2               	addwfc	fsr1h,w,c
 14230   014518  6E02               	movwf	(btemp+1)^0,c
 14231   01451A  C001  FFE6         	movff	btemp,postinc1
 14232   01451E  C002  FFE6         	movff	btemp+1,postinc1
 14233   014522  0E16               	movlw	22
 14234   014524  6EE6               	movwf	postinc1,c
 14235   014526  0E00               	movlw	0
 14236   014528  6EE6               	movwf	postinc1,c
 14237   01452A  EC52  F0A2         	call	_DRV_CANFDSPI_ReadByte	;wreg free
 14238                           
 14239                           ;stkvar	_spiTransferError @ sp[(-2)+1]
 14240   01452E  0EFF               	movlw	-1
 14241   014530  C001  FFE3         	movff	btemp,plusw1
 14242   014534                     
 14243                           ;can/can.c: 2641:     if (spiTransferError) {
 14244                           ;stkvar	_spiTransferError @ sp[(-2)+1]
 14245   014534  0EFF               	movlw	-1
 14246   014536  50E3               	movf	plusw1,w,c
 14247   014538  B4D8               	btfsc	status,2,c
 14248   01453A  EFA1  F0A2         	goto	u2491
 14249   01453E  EFA3  F0A2         	goto	u2490
 14250   014542                     u2491:
 14251   014542  EFA5  F0A2         	goto	l4827
 14252   014546                     u2490:
 14253   014546  EFB0  F0A2         	goto	l623
 14254   01454A                     l4827:
 14255                           
 14256                           ;can/can.c: 2646:     d |= 0x01;
 14257                           ;stkvar	_d @ sp[(-2)+0]
 14258   01454A  0EFE               	movlw	-2
 14259   01454C  80E3               	bsf	plusw1,0,c
 14260   01454E                     
 14261                           ;stkvar	_d @ sp[(-2)+0]
 14262   01454E  0EFE               	movlw	-2
 14263   014550  50E3               	movf	plusw1,w,c
 14264   014552  6EE6               	movwf	postinc1,c
 14265   014554  0E16               	movlw	22
 14266   014556  6EE6               	movwf	postinc1,c
 14267   014558  0E00               	movlw	0
 14268   01455A  6EE6               	movwf	postinc1,c
 14269   01455C  ECDF  F0A2         	call	_DRV_CANFDSPI_WriteByte	;wreg free
 14270   014560                     l623:
 14271                           
 14272                           ; _DRV_CANFDSPI_TimeStampEnable: autosize = 2, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14273   014560  52E5               	movf	postdec1,f,c
 14274   014562  52E5               	movf	postdec1,f,c
 14275   014564  0012               	return		;funcret
 14276   014566                     __end_of_DRV_CANFDSPI_TimeStampEnable:
 14277                           	callstack 0
 14278                           
 14279 ;; *************** function _DRV_CANFDSPI_TefConfigure *****************
 14280 ;; Defined at:
 14281 ;;		line 1539 in file "can/can.c"
 14282 ;; Parameters:    Size  Location     Type
 14283 ;;  config          2  [STACK] PTR struct _CAN_TEF_CONF
 14284 ;;		 -> tefConfig(1), 
 14285 ;; Auto vars:     Size  Location     Type
 14286 ;;  ciTefCon        4  [STACK] struct _REG_CiTEFCON
 14287 ;;  spiTransferE    1    0        char 
 14288 ;; Return value:  Size  Location     Type
 14289 ;;                  1  [STACK] char 
 14290 ;; Registers used:
 14291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 14292 ;; Tracked objects:
 14293 ;;		On entry : 0/0
 14294 ;;		On exit  : 0/0
 14295 ;;		Unchanged: 0/0
 14296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14301 ;;Total ram usage:        0 bytes
 14302 ;; Hardware stack levels used: 1
 14303 ;; Hardware stack levels required when called: 9
 14304 ;; This function calls:
 14305 ;;		_DRV_CANFDSPI_WriteWord
 14306 ;; This function is called by:
 14307 ;;		_CanInit
 14308 ;; This function uses a reentrant model
 14309 ;;
 14310                           
 14311                           	psect	text55
 14312   013AA8                     __ptext55:
 14313                           	callstack 0
 14314   013AA8                     _DRV_CANFDSPI_TefConfigure:
 14315                           	callstack 0
 14316                           
 14317                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14318   013AA8  52E6               	movf	postinc1,f,c
 14319   013AAA  52E6               	movf	postinc1,f,c
 14320   013AAC  52E6               	movf	postinc1,f,c
 14321   013AAE  52E6               	movf	postinc1,f,c
 14322   013AB0                     
 14323                           ;can/can.c: 1544:     REG_CiTEFCON ciTefCon;;can/can.c: 1545:     ciTefCon.word = canFif
      +                          oResetValues[0];
 14324   013AB0  0EDD               	movlw	low _canFifoResetValues
 14325   013AB2  6EF6               	movwf	tblptrl,c
 14326   013AB4                     	if	1	;There is more than 1 active tblptr byte
 14327   013AB4  0EFF               	movlw	high _canFifoResetValues
 14328   013AB6  6EF7               	movwf	tblptrh,c
 14329   013AB8                     	endif
 14330   013AB8                     	if	1	;There are 3 active tblptr bytes
 14331   013AB8  0E00               	movlw	low (_canFifoResetValues shr (0+16))
 14332   013ABA  6EF8               	movwf	tblptru,c
 14333   013ABC                     	endif
 14334   013ABC  0009               	tblrd		*+
 14335   013ABE  CFF5 F009          	movff	tablat,btemp+8
 14336   013AC2  0009               	tblrd		*+
 14337   013AC4  CFF5 F00A          	movff	tablat,btemp+9
 14338   013AC8  0009               	tblrd		*+
 14339   013ACA  CFF5 F00B          	movff	tablat,btemp+10
 14340   013ACE  0009               	tblrd		*+
 14341   013AD0  CFF5 F00C          	movff	tablat,btemp+11
 14342                           
 14343                           ;stkvar	_ciTefCon @ sp[(-4)+0]
 14344   013AD4  0EFC               	movlw	-4
 14345   013AD6  C009  FFE3         	movff	btemp+8,plusw1
 14346   013ADA  0EFD               	movlw	-3
 14347   013ADC  C00A  FFE3         	movff	btemp+9,plusw1
 14348   013AE0  0EFE               	movlw	-2
 14349   013AE2  C00B  FFE3         	movff	btemp+10,plusw1
 14350   013AE6  0EFF               	movlw	-1
 14351   013AE8  C00C  FFE3         	movff	btemp+11,plusw1
 14352   013AEC                     
 14353                           ;can/can.c: 1547:     ciTefCon.bF.FifoSize = config->FifoSize;
 14354                           ;stkvar	_config @ sp[(-4)+-2]
 14355   013AEC  0EFA               	movlw	-6
 14356   013AEE  CFE3 FFD9          	movff	plusw1,fsr2l
 14357   013AF2  0EFB               	movlw	-5
 14358   013AF4  CFE3 FFDA          	movff	plusw1,fsr2h
 14359   013AF8  30DF               	rrcf	223,w,c
 14360   013AFA  0B1F               	andlw	31
 14361   013AFC  6E0C               	movwf	(btemp+11)^0,c
 14362                           
 14363                           ;stkvar	_ciTefCon @ sp[(-4)+0]
 14364   013AFE  0EFF               	movlw	255
 14365   013B00  24E1               	addwf	fsr1l,w,c
 14366   013B02  6ED9               	movwf	fsr2l,c
 14367   013B04  0EFF               	movlw	255
 14368   013B06  20E2               	addwfc	fsr1h,w,c
 14369   013B08  6EDA               	movwf	fsr2h,c
 14370   013B0A  50DF               	movf	223,w,c
 14371   013B0C  180C               	xorwf	(btemp+11)^0,w,c
 14372   013B0E  0BE0               	andlw	-32
 14373   013B10  180C               	xorwf	(btemp+11)^0,w,c
 14374   013B12  6EDF               	movwf	223,c
 14375   013B14                     
 14376                           ;can/can.c: 1548:     ciTefCon.bF.TimeStampEnable = config->TimeStampEnable;
 14377                           ;stkvar	_config @ sp[(-4)+-2]
 14378   013B14  0EFA               	movlw	-6
 14379   013B16  CFE3 FFD9          	movff	plusw1,fsr2l
 14380   013B1A  0EFB               	movlw	-5
 14381   013B1C  CFE3 FFDA          	movff	plusw1,fsr2h
 14382                           
 14383                           ;stkvar	_ciTefCon @ sp[(-4)+0]
 14384   013B20  50E1               	movf	fsr1l,w,c
 14385   013B22  0FFC               	addlw	-4
 14386   013B24  6EE9               	movwf	fsr0l,c
 14387   013B26  50E2               	movf	fsr1h,w,c
 14388   013B28  6EEA               	movwf	fsr0h,c
 14389   013B2A  0EFF               	movlw	255
 14390   013B2C  22EA               	addwfc	fsr0h,f,c
 14391   013B2E  9AEF               	bcf	indf0,5,c
 14392   013B30  A0DF               	btfss	indf2,0,c
 14393   013B32  EF9C  F09D         	goto	u2455
 14394   013B36  8AEF               	bsf	indf0,5,c
 14395   013B38                     u2455:
 14396   013B38                     
 14397                           ;stkvar	_ciTefCon @ sp[(-4)+0]
 14398   013B38  0EFC               	movlw	-4
 14399   013B3A  CFE3 FFE6          	movff	plusw1,postinc1
 14400   013B3E  CFE3 FFE6          	movff	plusw1,postinc1
 14401   013B42  CFE3 FFE6          	movff	plusw1,postinc1
 14402   013B46  CFE3 FFE6          	movff	plusw1,postinc1
 14403   013B4A  0E40               	movlw	64
 14404   013B4C  6EE6               	movwf	postinc1,c
 14405   013B4E  0E00               	movlw	0
 14406   013B50  6EE6               	movwf	postinc1,c
 14407   013B52  ECED  F09A         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 14408   013B56                     
 14409                           ; _DRV_CANFDSPI_TefConfigure: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 2, argsize = 2, vargsize = 0
 14410   013B56  0EFA               	movlw	250
 14411   013B58  26E1               	addwf	fsr1l,f,c
 14412   013B5A  0EFF               	movlw	255
 14413   013B5C  22E2               	addwfc	fsr1h,f,c
 14414   013B5E  0012               	return		;funcret
 14415   013B60                     __end_of_DRV_CANFDSPI_TefConfigure:
 14416                           	callstack 0
 14417                           
 14418 ;; *************** function _DRV_CANFDSPI_Reset *****************
 14419 ;; Defined at:
 14420 ;;		line 257 in file "can/can.c"
 14421 ;; Parameters:    Size  Location     Type
 14422 ;;		None
 14423 ;; Auto vars:     Size  Location     Type
 14424 ;;  spiTransferS    2    0        unsigned short 
 14425 ;;  spiTransferE    1    0        char 
 14426 ;; Return value:  Size  Location     Type
 14427 ;;                  1  [STACK] char 
 14428 ;; Registers used:
 14429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, p
      +rodh
 14430 ;; Tracked objects:
 14431 ;;		On entry : 0/0
 14432 ;;		On exit  : 0/0
 14433 ;;		Unchanged: 0/0
 14434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14439 ;;Total ram usage:        0 bytes
 14440 ;; Hardware stack levels used: 1
 14441 ;; Hardware stack levels required when called: 8
 14442 ;; This function calls:
 14443 ;;		_SPI2_Open
 14444 ;;		_SpiTransfer
 14445 ;; This function is called by:
 14446 ;;		_CanInit
 14447 ;; This function uses a reentrant model
 14448 ;;
 14449                           
 14450                           	psect	text56
 14451   0147EE                     __ptext56:
 14452                           	callstack 0
 14453   0147EE                     _DRV_CANFDSPI_Reset:
 14454                           	callstack 21
 14455   0147EE                     
 14456                           ;can/can.c: 263:     spiTransmitBuffer[0] = (uint8_t) (0x00 << 4);
 14457   0147EE  0101               	movlb	1	; () banked
 14458   0147F0  6B00               	clrf	_spiTransmitBuffer& (0+255),b
 14459   0147F2                     
 14460                           ; BSR set to: 1
 14461                           ;can/can.c: 264:     spiTransmitBuffer[1] = 0;
 14462   0147F2  6B01               	clrf	(_spiTransmitBuffer+1)& (0+255),b
 14463   0147F4                     
 14464                           ; BSR set to: 1
 14465                           ;can/can.c: 265:     SPI2_Open(SPI2_DEFAULT);
 14466   0147F4  0E00               	movlw	0
 14467   0147F6  6EE6               	movwf	postinc1,c
 14468   0147F8  ECB0  F09D         	call	_SPI2_Open	;wreg free
 14469   0147FC  0E02               	movlw	2
 14470   0147FE  6EE6               	movwf	postinc1,c
 14471   014800  0E00               	movlw	0
 14472   014802  6EE6               	movwf	postinc1,c
 14473   014804  0E00               	movlw	low _spiReceiveBuffer
 14474   014806  6EE6               	movwf	postinc1,c
 14475   014808  0E02               	movlw	high _spiReceiveBuffer
 14476   01480A  6EE6               	movwf	postinc1,c
 14477   01480C  0E00               	movlw	low _spiTransmitBuffer
 14478   01480E  6EE6               	movwf	postinc1,c
 14479   014810  0E01               	movlw	high _spiTransmitBuffer
 14480   014812  6EE6               	movwf	postinc1,c
 14481   014814  ECF2  F09C         	call	_SpiTransfer	;wreg free
 14482   014818                     
 14483                           ; _DRV_CANFDSPI_Reset: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14484   014818  0012               	return		;funcret
 14485   01481A                     __end_of_DRV_CANFDSPI_Reset:
 14486                           	callstack 0
 14487                           
 14488 ;; *************** function _SPI2_Open *****************
 14489 ;; Defined at:
 14490 ;;		line 72 in file "mcc_generated_files/spi2.c"
 14491 ;; Parameters:    Size  Location     Type
 14492 ;;  spi2UniqueCo    1  [STACK] enum E358
 14493 ;; Auto vars:     Size  Location     Type
 14494 ;;		None
 14495 ;; Return value:  Size  Location     Type
 14496 ;;                  1  [STACK] _Bool 
 14497 ;; Registers used:
 14498 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 14499 ;; Tracked objects:
 14500 ;;		On entry : 3F/1
 14501 ;;		On exit  : 0/0
 14502 ;;		Unchanged: 0/0
 14503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14508 ;;Total ram usage:        0 bytes
 14509 ;; Hardware stack levels used: 1
 14510 ;; Hardware stack levels required when called: 7
 14511 ;; This function calls:
 14512 ;;		Nothing
 14513 ;; This function is called by:
 14514 ;;		_DRV_CANFDSPI_Reset
 14515 ;; This function uses a reentrant model
 14516 ;;
 14517                           
 14518                           	psect	text57
 14519   013B60                     __ptext57:
 14520                           	callstack 0
 14521   013B60                     _SPI2_Open:
 14522                           	callstack 21
 14523   013B60                     
 14524                           ;mcc_generated_files/spi2.c: 72: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 73: {;mcc_generated_files/spi2.c: 74:     if(!SSP2CON1bits.SS
      +                          PEN)
 14525   013B60  BA63               	btfsc	99,5,c	;volatile
 14526   013B62  EFB5  F09D         	goto	u2201
 14527   013B66  EFB7  F09D         	goto	u2200
 14528   013B6A                     u2201:
 14529   013B6A  EF09  F09E         	goto	l1120
 14530   013B6E                     u2200:
 14531   013B6E                     
 14532                           ;mcc_generated_files/spi2.c: 75:     {;mcc_generated_files/spi2.c: 76:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
 14533                           ;stkvar	_spi2UniqueConfiguration @ sp[(0)+-1]
 14534   013B6E  0EFF               	movlw	-1
 14535   013B70  50E3               	movf	plusw1,w,c
 14536   013B72  0D04               	mullw	4
 14537   013B74  0E01               	movlw	1
 14538   013B76  26F3               	addwf	243,f,c
 14539   013B78  0E00               	movlw	0
 14540   013B7A  22F4               	addwfc	244,f,c
 14541   013B7C  0EE9               	movlw	low _spi2_configuration
 14542   013B7E  24F3               	addwf	243,w,c
 14543   013B80  6EF6               	movwf	tblptrl,c
 14544   013B82  0EFF               	movlw	high _spi2_configuration
 14545   013B84  20F4               	addwfc	244,w,c
 14546   013B86  6EF7               	movwf	tblptrh,c
 14547   013B88                     	if	1	;There are 3 active tblptr bytes
 14548   013B88  6AF8               	clrf	tblptru,c
 14549   013B8A  0E00               	movlw	low (__mediumconst shr (0+16))
 14550   013B8C  22F8               	addwfc	tblptru,f,c
 14551   013B8E                     	endif
 14552   013B8E  0008               	tblrd		*
 14553   013B90  CFF5 FF64          	movff	tablat,3940	;volatile
 14554                           
 14555                           ;mcc_generated_files/spi2.c: 77:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
 14556                           ;stkvar	_spi2UniqueConfiguration @ sp[(0)+-1]
 14557   013B94  0EFF               	movlw	-1
 14558   013B96  50E3               	movf	plusw1,w,c
 14559   013B98  0D04               	mullw	4
 14560   013B9A  0EE9               	movlw	low _spi2_configuration
 14561   013B9C  24F3               	addwf	243,w,c
 14562   013B9E  6EF6               	movwf	tblptrl,c
 14563   013BA0  0EFF               	movlw	high _spi2_configuration
 14564   013BA2  20F4               	addwfc	244,w,c
 14565   013BA4  6EF7               	movwf	tblptrh,c
 14566   013BA6                     	if	1	;There are 3 active tblptr bytes
 14567   013BA6  6AF8               	clrf	tblptru,c
 14568   013BA8  0E00               	movlw	low (__mediumconst shr (0+16))
 14569   013BAA  22F8               	addwfc	tblptru,f,c
 14570   013BAC                     	endif
 14571   013BAC  0008               	tblrd		*
 14572   013BAE  CFF5 FF63          	movff	tablat,3939	;volatile
 14573   013BB2                     
 14574                           ;mcc_generated_files/spi2.c: 78:         SSP2CON2 = 0x00;
 14575   013BB2  6A62               	clrf	98,c	;volatile
 14576                           
 14577                           ;mcc_generated_files/spi2.c: 79:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
 14578                           ;stkvar	_spi2UniqueConfiguration @ sp[(0)+-1]
 14579   013BB4  0EFF               	movlw	-1
 14580   013BB6  50E3               	movf	plusw1,w,c
 14581   013BB8  0D04               	mullw	4
 14582   013BBA  0E02               	movlw	2
 14583   013BBC  26F3               	addwf	243,f,c
 14584   013BBE  0E00               	movlw	0
 14585   013BC0  22F4               	addwfc	244,f,c
 14586   013BC2  0EE9               	movlw	low _spi2_configuration
 14587   013BC4  24F3               	addwf	243,w,c
 14588   013BC6  6EF6               	movwf	tblptrl,c
 14589   013BC8  0EFF               	movlw	high _spi2_configuration
 14590   013BCA  20F4               	addwfc	244,w,c
 14591   013BCC  6EF7               	movwf	tblptrh,c
 14592   013BCE                     	if	1	;There are 3 active tblptr bytes
 14593   013BCE  6AF8               	clrf	tblptru,c
 14594   013BD0  0E00               	movlw	low (__mediumconst shr (0+16))
 14595   013BD2  22F8               	addwfc	tblptru,f,c
 14596   013BD4                     	endif
 14597   013BD4  0008               	tblrd		*
 14598   013BD6  CFF5 FF65          	movff	tablat,3941	;volatile
 14599   013BDA                     
 14600                           ;mcc_generated_files/spi2.c: 80:         TRISDbits.TRISD6 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
 14601                           ;stkvar	_spi2UniqueConfiguration @ sp[(0)+-1]
 14602   013BDA  0EFF               	movlw	-1
 14603   013BDC  50E3               	movf	plusw1,w,c
 14604   013BDE  0D04               	mullw	4
 14605   013BE0  0E03               	movlw	3
 14606   013BE2  26F3               	addwf	243,f,c
 14607   013BE4  0E00               	movlw	0
 14608   013BE6  22F4               	addwfc	244,f,c
 14609   013BE8  0EE9               	movlw	low _spi2_configuration
 14610   013BEA  24F3               	addwf	243,w,c
 14611   013BEC  6EF6               	movwf	tblptrl,c
 14612   013BEE  0EFF               	movlw	high _spi2_configuration
 14613   013BF0  20F4               	addwfc	244,w,c
 14614   013BF2  6EF7               	movwf	tblptrh,c
 14615   013BF4                     	if	1	;There are 3 active tblptr bytes
 14616   013BF4  6AF8               	clrf	tblptru,c
 14617   013BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 14618   013BF8  22F8               	addwfc	tblptru,f,c
 14619   013BFA                     	endif
 14620   013BFA  0008               	tblrd		*
 14621   013BFC  CFF5 F00C          	movff	tablat,btemp+11
 14622   013C00  3A0C               	swapf	(btemp+11)^0,f,c
 14623   013C02  460C               	rlncf	(btemp+11)^0,f,c
 14624   013C04  460C               	rlncf	(btemp+11)^0,f,c
 14625   013C06  5095               	movf	149,w,c	;volatile
 14626   013C08  180C               	xorwf	(btemp+11)^0,w,c
 14627   013C0A  0BBF               	andlw	-65
 14628   013C0C  180C               	xorwf	(btemp+11)^0,w,c
 14629   013C0E  6E95               	movwf	149,c	;volatile
 14630   013C10                     
 14631                           ;mcc_generated_files/spi2.c: 81:         SSP2CON1bits.SSPEN = 1;
 14632   013C10  8A63               	bsf	99,5,c	;volatile
 14633   013C12                     l1120:
 14634                           
 14635                           ; _SPI2_Open: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 14636   013C12  52E5               	movf	postdec1,f,c
 14637   013C14  0012               	return		;funcret
 14638   013C16                     __end_of_SPI2_Open:
 14639                           	callstack 0
 14640                           
 14641 ;; *************** function _DRV_CANFDSPI_ReceiveChannelConfigure *****************
 14642 ;; Defined at:
 14643 ;;		line 1172 in file "can/can.c"
 14644 ;; Parameters:    Size  Location     Type
 14645 ;;  channel         1  [STACK] enum E5290
 14646 ;;  config          2  [STACK] PTR struct _CAN_RX_FIFO_
 14647 ;;		 -> rxfConfig(3), 
 14648 ;; Auto vars:     Size  Location     Type
 14649 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
 14650 ;;  a               2  [STACK] unsigned short 
 14651 ;;  spiTransferE    1    0        char 
 14652 ;; Return value:  Size  Location     Type
 14653 ;;                  1  [STACK] char 
 14654 ;; Registers used:
 14655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 14656 ;; Tracked objects:
 14657 ;;		On entry : 0/0
 14658 ;;		On exit  : 0/0
 14659 ;;		Unchanged: 0/0
 14660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14665 ;;Total ram usage:        0 bytes
 14666 ;; Hardware stack levels used: 1
 14667 ;; Hardware stack levels required when called: 9
 14668 ;; This function calls:
 14669 ;;		_DRV_CANFDSPI_WriteWord
 14670 ;; This function is called by:
 14671 ;;		_CanInit
 14672 ;; This function uses a reentrant model
 14673 ;;
 14674                           
 14675                           	psect	text58
 14676   012E2E                     __ptext58:
 14677                           	callstack 0
 14678   012E2E                     _DRV_CANFDSPI_ReceiveChannelConfigure:
 14679                           	callstack 0
 14680                           
 14681                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14682   012E2E  0E07               	movlw	7
 14683   012E30  26E1               	addwf	fsr1l,f,c
 14684   012E32  0E00               	movlw	0
 14685   012E34  22E2               	addwfc	fsr1h,f,c
 14686   012E36                     
 14687                           ;can/can.c: 1178:     if (channel == CAN_FIFO_CH0) {
 14688                           ;stkvar	_channel @ sp[(-7)+-1]
 14689   012E36  0EF8               	movlw	-8
 14690   012E38  50E3               	movf	plusw1,w,c
 14691   012E3A  A4D8               	btfss	status,2,c
 14692   012E3C  EF22  F097         	goto	u2471
 14693   012E40  EF24  F097         	goto	u2470
 14694   012E44                     u2471:
 14695   012E44  EF26  F097         	goto	l4791
 14696   012E48                     u2470:
 14697   012E48  EFB3  F097         	goto	l346
 14698   012E4C                     l4791:
 14699                           
 14700                           ;can/can.c: 1183:     REG_CiFIFOCON ciFifoCon;;can/can.c: 1184:     ciFifoCon.word = can
      +                          FifoResetValues[0];
 14701   012E4C  0EDD               	movlw	low _canFifoResetValues
 14702   012E4E  6EF6               	movwf	tblptrl,c
 14703   012E50                     	if	1	;There is more than 1 active tblptr byte
 14704   012E50  0EFF               	movlw	high _canFifoResetValues
 14705   012E52  6EF7               	movwf	tblptrh,c
 14706   012E54                     	endif
 14707   012E54                     	if	1	;There are 3 active tblptr bytes
 14708   012E54  0E00               	movlw	low (_canFifoResetValues shr (0+16))
 14709   012E56  6EF8               	movwf	tblptru,c
 14710   012E58                     	endif
 14711   012E58  0009               	tblrd		*+
 14712   012E5A  CFF5 F009          	movff	tablat,btemp+8
 14713   012E5E  0009               	tblrd		*+
 14714   012E60  CFF5 F00A          	movff	tablat,btemp+9
 14715   012E64  0009               	tblrd		*+
 14716   012E66  CFF5 F00B          	movff	tablat,btemp+10
 14717   012E6A  0009               	tblrd		*+
 14718   012E6C  CFF5 F00C          	movff	tablat,btemp+11
 14719                           
 14720                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14721   012E70  0EF9               	movlw	-7
 14722   012E72  C009  FFE3         	movff	btemp+8,plusw1
 14723   012E76  0EFA               	movlw	-6
 14724   012E78  C00A  FFE3         	movff	btemp+9,plusw1
 14725   012E7C  0EFB               	movlw	-5
 14726   012E7E  C00B  FFE3         	movff	btemp+10,plusw1
 14727   012E82  0EFC               	movlw	-4
 14728   012E84  C00C  FFE3         	movff	btemp+11,plusw1
 14729   012E88                     
 14730                           ;can/can.c: 1186:     ciFifoCon.rxBF.TxEnable = 0;
 14731                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14732   012E88  50E1               	movf	fsr1l,w,c
 14733   012E8A  0FF9               	addlw	-7
 14734   012E8C  6ED9               	movwf	fsr2l,c
 14735   012E8E  50E2               	movf	fsr1h,w,c
 14736   012E90  6EDA               	movwf	fsr2h,c
 14737   012E92  0EFF               	movlw	255
 14738   012E94  22DA               	addwfc	fsr2h,f,c
 14739   012E96  9EDF               	bcf	indf2,7,c
 14740   012E98                     
 14741                           ;can/can.c: 1189:     ciFifoCon.byte[3] = config->FifoSize | (uint8_t)(config->PayLoadSi
      +                          ze << 5);
 14742                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14743   012E98  0EFC               	movlw	252
 14744   012E9A  24E1               	addwf	fsr1l,w,c
 14745   012E9C  6ED9               	movwf	fsr2l,c
 14746   012E9E  0EFF               	movlw	255
 14747   012EA0  20E2               	addwfc	fsr1h,w,c
 14748   012EA2  6EDA               	movwf	fsr2h,c
 14749                           
 14750                           ;stkvar	_config @ sp[(-7)+-3]
 14751   012EA4  0EF6               	movlw	-10
 14752   012EA6  CFE3 F00B          	movff	plusw1,btemp+10
 14753   012EAA  0EF7               	movlw	-9
 14754   012EAC  CFE3 F00C          	movff	plusw1,btemp+11
 14755   012EB0  0E01               	movlw	1
 14756   012EB2  240B               	addwf	(btemp+10)^0,w,c
 14757   012EB4  6EE9               	movwf	fsr0l,c
 14758   012EB6  0E00               	movlw	0
 14759   012EB8  200C               	addwfc	(btemp+11)^0,w,c
 14760   012EBA  6EEA               	movwf	fsr0h,c
 14761   012EBC  50EF               	movf	indf0,w,c
 14762   012EBE  6E0C               	movwf	(btemp+11)^0,c
 14763                           
 14764                           ;stkvar	_config @ sp[(-7)+-3]
 14765   012EC0  0EF6               	movlw	-10
 14766   012EC2  CFE3 F009          	movff	plusw1,btemp+8
 14767   012EC6  0EF7               	movlw	-9
 14768   012EC8  CFE3 F00A          	movff	plusw1,btemp+9
 14769   012ECC  0E02               	movlw	2
 14770   012ECE  2409               	addwf	(btemp+8)^0,w,c
 14771   012ED0  6EE9               	movwf	fsr0l,c
 14772   012ED2  0E00               	movlw	0
 14773   012ED4  200A               	addwfc	(btemp+9)^0,w,c
 14774   012ED6  6EEA               	movwf	fsr0h,c
 14775   012ED8  50EF               	movf	indf0,w,c
 14776   012EDA  6E0B               	movwf	(btemp+10)^0,c
 14777   012EDC  0E05               	movlw	5
 14778   012EDE  6E01               	movwf	btemp^0,c
 14779   012EE0                     u2485:
 14780   012EE0  90D8               	bcf	status,0,c
 14781   012EE2  360B               	rlcf	(btemp+10)^0,f,c
 14782   012EE4  2E01               	decfsz	btemp^0,f,c
 14783   012EE6  EF70  F097         	goto	u2485
 14784   012EEA  500B               	movf	(btemp+10)^0,w,c
 14785   012EEC  100C               	iorwf	(btemp+11)^0,w,c
 14786   012EEE  6EDF               	movwf	indf2,c
 14787   012EF0                     
 14788                           ;can/can.c: 1190:     ciFifoCon.rxBF.RxTimeStampEnable = config->RxTimeStampEnable;
 14789                           ;stkvar	_config @ sp[(-7)+-3]
 14790   012EF0  0EF6               	movlw	-10
 14791   012EF2  CFE3 FFD9          	movff	plusw1,fsr2l
 14792   012EF6  0EF7               	movlw	-9
 14793   012EF8  CFE3 FFDA          	movff	plusw1,fsr2h
 14794   012EFC  50DF               	movf	indf2,w,c
 14795   012EFE  6E0C               	movwf	(btemp+11)^0,c
 14796                           
 14797                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14798   012F00  50E1               	movf	fsr1l,w,c
 14799   012F02  0FF9               	addlw	-7
 14800   012F04  6ED9               	movwf	fsr2l,c
 14801   012F06  50E2               	movf	fsr1h,w,c
 14802   012F08  6EDA               	movwf	fsr2h,c
 14803   012F0A  0EFF               	movlw	255
 14804   012F0C  22DA               	addwfc	fsr2h,f,c
 14805   012F0E  3A0C               	swapf	(btemp+11)^0,f,c
 14806   012F10  460C               	rlncf	(btemp+11)^0,f,c
 14807   012F12  50DF               	movf	223,w,c
 14808   012F14  180C               	xorwf	(btemp+11)^0,w,c
 14809   012F16  0BDF               	andlw	-33
 14810   012F18  180C               	xorwf	(btemp+11)^0,w,c
 14811   012F1A  6EDF               	movwf	223,c
 14812   012F1C                     
 14813                           ;can/can.c: 1193:     ciFifoCon.rxBF.RxNotEmptyIE = 1;
 14814                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14815   012F1C  50E1               	movf	fsr1l,w,c
 14816   012F1E  0FF9               	addlw	-7
 14817   012F20  6ED9               	movwf	fsr2l,c
 14818   012F22  50E2               	movf	fsr1h,w,c
 14819   012F24  6EDA               	movwf	fsr2h,c
 14820   012F26  0EFF               	movlw	255
 14821   012F28  22DA               	addwfc	fsr2h,f,c
 14822   012F2A  80DF               	bsf	indf2,0,c
 14823   012F2C                     
 14824                           ;can/can.c: 1195:     a = 0x050 + (channel * (3*4));
 14825                           ;stkvar	_channel @ sp[(-7)+-1]
 14826   012F2C  0EF8               	movlw	-8
 14827   012F2E  50E3               	movf	plusw1,w,c
 14828   012F30  0D0C               	mullw	12
 14829   012F32  0E50               	movlw	80
 14830   012F34  26F3               	addwf	243,f,c
 14831   012F36  0E00               	movlw	0
 14832   012F38  22F4               	addwfc	244,f,c
 14833                           
 14834                           ;stkvar	_a @ sp[(-7)+5]
 14835   012F3A  0EFE               	movlw	-2
 14836   012F3C  CFF3 FFE3          	movff	prodl,plusw1
 14837   012F40  0EFF               	movlw	-1
 14838   012F42  CFF4 FFE3          	movff	prodh,plusw1
 14839   012F46                     
 14840                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14841   012F46  0EF9               	movlw	-7
 14842   012F48  CFE3 FFE6          	movff	plusw1,postinc1
 14843   012F4C  CFE3 FFE6          	movff	plusw1,postinc1
 14844   012F50  CFE3 FFE6          	movff	plusw1,postinc1
 14845   012F54  CFE3 FFE6          	movff	plusw1,postinc1
 14846                           
 14847                           ;stkvar	_a @ sp[(-11)+5]
 14848   012F58  0EFA               	movlw	-6
 14849   012F5A  CFE3 FFE6          	movff	plusw1,postinc1
 14850   012F5E  CFE3 FFE6          	movff	plusw1,postinc1
 14851   012F62  ECED  F09A         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 14852   012F66                     l346:
 14853                           
 14854                           ; _DRV_CANFDSPI_ReceiveChannelConfigure: autosize = 7, savesize = 0, parsavesize = 0, te
      +                          mpsize = 0 parsize = 3, argsize = 3, vargsize = 0
 14855   012F66  0EF6               	movlw	246
 14856   012F68  26E1               	addwf	fsr1l,f,c
 14857   012F6A  0EFF               	movlw	255
 14858   012F6C  22E2               	addwfc	fsr1h,f,c
 14859   012F6E  0012               	return		;funcret
 14860   012F70                     __end_of_DRV_CANFDSPI_ReceiveChannelConfigure:
 14861                           	callstack 0
 14862                           
 14863 ;; *************** function _DRV_CANFDSPI_OperationModeSelect *****************
 14864 ;; Defined at:
 14865 ;;		line 499 in file "can/can.c"
 14866 ;; Parameters:    Size  Location     Type
 14867 ;;  opMode          1  [STACK] enum E5360
 14868 ;; Auto vars:     Size  Location     Type
 14869 ;;  d               1  [STACK] unsigned char 
 14870 ;;  spiTransferE    1  [STACK] char 
 14871 ;; Return value:  Size  Location     Type
 14872 ;;                  1  [STACK] char 
 14873 ;; Registers used:
 14874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 14875 ;; Tracked objects:
 14876 ;;		On entry : 0/0
 14877 ;;		On exit  : 0/0
 14878 ;;		Unchanged: 0/0
 14879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14884 ;;Total ram usage:        0 bytes
 14885 ;; Hardware stack levels used: 1
 14886 ;; Hardware stack levels required when called: 9
 14887 ;; This function calls:
 14888 ;;		_DRV_CANFDSPI_ReadByte
 14889 ;;		_DRV_CANFDSPI_WriteByte
 14890 ;; This function is called by:
 14891 ;;		_CanInit
 14892 ;; This function uses a reentrant model
 14893 ;;
 14894                           
 14895                           	psect	text59
 14896   014278                     __ptext59:
 14897                           	callstack 0
 14898   014278                     _DRV_CANFDSPI_OperationModeSelect:
 14899                           	callstack 0
 14900                           
 14901                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14902   014278  52E6               	movf	postinc1,f,c
 14903   01427A  52E6               	movf	postinc1,f,c
 14904   01427C                     
 14905                           ;can/can.c: 499: int8_t DRV_CANFDSPI_OperationModeSelect(CAN_OPERATION_MODE opMode);can/
      +                          can.c: 500: {;can/can.c: 501:     uint8_t d = 0;
 14906                           ;stkvar	_d @ sp[(-2)+0]
 14907   01427C  0EFE               	movlw	-2
 14908   01427E  6AE3               	clrf	plusw1,c
 14909   014280                     
 14910                           ;can/can.c: 505:     spiTransferError = DRV_CANFDSPI_ReadByte(0x000 + 3, &d);
 14911                           ;stkvar	_d @ sp[(-2)+0]
 14912   014280  0EFE               	movlw	254
 14913   014282  24E1               	addwf	fsr1l,w,c
 14914   014284  6E01               	movwf	btemp^0,c
 14915   014286  0EFF               	movlw	255
 14916   014288  20E2               	addwfc	fsr1h,w,c
 14917   01428A  6E02               	movwf	(btemp+1)^0,c
 14918   01428C  C001  FFE6         	movff	btemp,postinc1
 14919   014290  C002  FFE6         	movff	btemp+1,postinc1
 14920   014294  0E03               	movlw	3
 14921   014296  6EE6               	movwf	postinc1,c
 14922   014298  0E00               	movlw	0
 14923   01429A  6EE6               	movwf	postinc1,c
 14924   01429C  EC52  F0A2         	call	_DRV_CANFDSPI_ReadByte	;wreg free
 14925                           
 14926                           ;stkvar	_spiTransferError @ sp[(-2)+1]
 14927   0142A0  0EFF               	movlw	-1
 14928   0142A2  C001  FFE3         	movff	btemp,plusw1
 14929   0142A6                     
 14930                           ;can/can.c: 506:     if (spiTransferError) {
 14931                           ;stkvar	_spiTransferError @ sp[(-2)+1]
 14932   0142A6  0EFF               	movlw	-1
 14933   0142A8  50E3               	movf	plusw1,w,c
 14934   0142AA  B4D8               	btfsc	status,2,c
 14935   0142AC  EF5A  F0A1         	goto	u2501
 14936   0142B0  EF5C  F0A1         	goto	u2500
 14937   0142B4                     u2501:
 14938   0142B4  EF5E  F0A1         	goto	l4859
 14939   0142B8                     u2500:
 14940   0142B8  EF7B  F0A1         	goto	l222
 14941   0142BC                     l4859:
 14942                           
 14943                           ;can/can.c: 511:     d &= ~0x07;
 14944                           ;stkvar	_d @ sp[(-2)+0]
 14945   0142BC  0EFE               	movlw	-2
 14946   0142BE  CFE3 F001          	movff	plusw1,btemp
 14947   0142C2  0EF8               	movlw	248
 14948   0142C4  1601               	andwf	btemp^0,f,c
 14949   0142C6  0EFE               	movlw	-2
 14950   0142C8  C001  FFE3         	movff	btemp,plusw1
 14951   0142CC                     
 14952                           ;can/can.c: 512:     d |= opMode;
 14953                           ;stkvar	_opMode @ sp[(-2)+-1]
 14954   0142CC  0EFD               	movlw	-3
 14955   0142CE  CFE3 F00C          	movff	plusw1,btemp+11
 14956                           
 14957                           ;stkvar	_d @ sp[(-2)+0]
 14958   0142D2  50E1               	movf	fsr1l,w,c
 14959   0142D4  0FFE               	addlw	-2
 14960   0142D6  6ED9               	movwf	fsr2l,c
 14961   0142D8  50E2               	movf	fsr1h,w,c
 14962   0142DA  6EDA               	movwf	fsr2h,c
 14963   0142DC  0EFF               	movlw	255
 14964   0142DE  22DA               	addwfc	fsr2h,f,c
 14965   0142E0  500C               	movf	(btemp+11)^0,w,c
 14966   0142E2  12DF               	iorwf	indf2,f,c
 14967   0142E4                     
 14968                           ;stkvar	_d @ sp[(-2)+0]
 14969   0142E4  0EFE               	movlw	-2
 14970   0142E6  50E3               	movf	plusw1,w,c
 14971   0142E8  6EE6               	movwf	postinc1,c
 14972   0142EA  0E03               	movlw	3
 14973   0142EC  6EE6               	movwf	postinc1,c
 14974   0142EE  0E00               	movlw	0
 14975   0142F0  6EE6               	movwf	postinc1,c
 14976   0142F2  ECDF  F0A2         	call	_DRV_CANFDSPI_WriteByte	;wreg free
 14977   0142F6                     l222:
 14978                           
 14979                           ; _DRV_CANFDSPI_OperationModeSelect: autosize = 2, savesize = 0, parsavesize = 0, tempsi
      +                          ze = 0 parsize = 1, argsize = 1, vargsize = 0
 14980   0142F6  52E5               	movf	postdec1,f,c
 14981   0142F8  52E5               	movf	postdec1,f,c
 14982   0142FA  52E5               	movf	postdec1,f,c
 14983   0142FC  0012               	return		;funcret
 14984   0142FE                     __end_of_DRV_CANFDSPI_OperationModeSelect:
 14985                           	callstack 0
 14986                           
 14987 ;; *************** function _DRV_CANFDSPI_WriteByte *****************
 14988 ;; Defined at:
 14989 ;;		line 294 in file "can/can.c"
 14990 ;; Parameters:    Size  Location     Type
 14991 ;;  address         2  [STACK] unsigned short 
 14992 ;;  txd             1  [STACK] unsigned char 
 14993 ;; Auto vars:     Size  Location     Type
 14994 ;;  spiTransferS    2    0        unsigned short 
 14995 ;;  spiTransferE    1  [STACK] char 
 14996 ;; Return value:  Size  Location     Type
 14997 ;;                  1  [STACK] char 
 14998 ;; Registers used:
 14999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 15000 ;; Tracked objects:
 15001 ;;		On entry : 0/0
 15002 ;;		On exit  : 0/0
 15003 ;;		Unchanged: 0/0
 15004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15009 ;;Total ram usage:        0 bytes
 15010 ;; Hardware stack levels used: 1
 15011 ;; Hardware stack levels required when called: 8
 15012 ;; This function calls:
 15013 ;;		_SpiTransfer
 15014 ;; This function is called by:
 15015 ;;		_DRV_CANFDSPI_OperationModeSelect
 15016 ;;		_DRV_CANFDSPI_TransmitChannelUpdate
 15017 ;;		_DRV_CANFDSPI_FilterToFifoLink
 15018 ;;		_DRV_CANFDSPI_FilterDisable
 15019 ;;		_DRV_CANFDSPI_ReceiveChannelUpdate
 15020 ;;		_DRV_CANFDSPI_TimeStampEnable
 15021 ;; This function uses a reentrant model
 15022 ;;
 15023                           
 15024                           	psect	text60
 15025   0145BE                     __ptext60:
 15026                           	callstack 0
 15027   0145BE                     _DRV_CANFDSPI_WriteByte:
 15028                           	callstack 0
 15029                           
 15030                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15031   0145BE  52E6               	movf	postinc1,f,c
 15032   0145C0                     
 15033                           ;can/can.c: 300:     spiTransmitBuffer[0] = (uint8_t) ((0x02 << 4) + ((address >> 8) & 0
      +                          xF));
 15034                           ;stkvar	_address @ sp[(-1)+-2]
 15035   0145C0  0EFE               	movlw	254
 15036   0145C2  24E1               	addwf	fsr1l,w,c
 15037   0145C4  6ED9               	movwf	fsr2l,c
 15038   0145C6  0EFF               	movlw	255
 15039   0145C8  20E2               	addwfc	fsr1h,w,c
 15040   0145CA  6EDA               	movwf	fsr2h,c
 15041   0145CC  50DF               	movf	indf2,w,c
 15042   0145CE  0B0F               	andlw	15
 15043   0145D0  0F20               	addlw	32
 15044   0145D2  0101               	movlb	1	; () banked
 15045   0145D4  6F00               	movwf	_spiTransmitBuffer& (0+255),b
 15046   0145D6                     
 15047                           ; BSR set to: 1
 15048                           ;can/can.c: 301:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
 15049                           ;stkvar	_address @ sp[(-1)+-2]
 15050   0145D6  0EFD               	movlw	-3
 15051   0145D8  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
 15052   0145DC                     
 15053                           ; BSR set to: 1
 15054                           ;can/can.c: 302:     spiTransmitBuffer[2] = txd;
 15055                           ;stkvar	_txd @ sp[(-1)+-3]
 15056   0145DC  0EFC               	movlw	-4
 15057   0145DE  CFE3 F102          	movff	plusw1,_spiTransmitBuffer+2
 15058   0145E2                     
 15059                           ; BSR set to: 1
 15060                           ;can/can.c: 304:     spiTransferError = SpiTransfer(spiTransmitBuffer, spiReceiveBuffer,
      +                           spiTransferSize);
 15061   0145E2  0E03               	movlw	3
 15062   0145E4  6EE6               	movwf	postinc1,c
 15063   0145E6  0E00               	movlw	0
 15064   0145E8  6EE6               	movwf	postinc1,c
 15065   0145EA  0E00               	movlw	low _spiReceiveBuffer
 15066   0145EC  6EE6               	movwf	postinc1,c
 15067   0145EE  0E02               	movlw	high _spiReceiveBuffer
 15068   0145F0  6EE6               	movwf	postinc1,c
 15069   0145F2  0E00               	movlw	low _spiTransmitBuffer
 15070   0145F4  6EE6               	movwf	postinc1,c
 15071   0145F6  0E01               	movlw	high _spiTransmitBuffer
 15072   0145F8  6EE6               	movwf	postinc1,c
 15073   0145FA  ECF2  F09C         	call	_SpiTransfer	;wreg free
 15074                           
 15075                           ;stkvar	_spiTransferError @ sp[(-1)+0]
 15076   0145FE  0EFF               	movlw	-1
 15077   014600  C001  FFE3         	movff	btemp,plusw1
 15078   014604                     
 15079                           ;can/can.c: 306:     return spiTransferError;
 15080                           ;stkvar	_spiTransferError @ sp[(-1)+0]
 15081   014604  0EFF               	movlw	-1
 15082   014606  CFE3 F001          	movff	plusw1,btemp
 15083   01460A                     
 15084                           ; _DRV_CANFDSPI_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 3, argsize = 3, vargsize = 0
 15085   01460A  52E5               	movf	postdec1,f,c
 15086   01460C  52E5               	movf	postdec1,f,c
 15087   01460E  52E5               	movf	postdec1,f,c
 15088   014610  52E5               	movf	postdec1,f,c
 15089   014612  0012               	return		;funcret
 15090   014614                     __end_of_DRV_CANFDSPI_WriteByte:
 15091                           	callstack 0
 15092                           
 15093 ;; *************** function _DRV_CANFDSPI_ReadByte *****************
 15094 ;; Defined at:
 15095 ;;		line 276 in file "can/can.c"
 15096 ;; Parameters:    Size  Location     Type
 15097 ;;  address         2  [STACK] unsigned short 
 15098 ;;  rxd             2  [STACK] PTR unsigned char 
 15099 ;;		 -> b(1), iocon(4), osc(4), d(1), 
 15100 ;;		 -> d(1), d(1), d(1), crc(1), 
 15101 ;;		 -> crc(1), crc(1), crc(1), eccStat(1), 
 15102 ;;		 -> eccInterrupts(1), eccInterrupts(1), eccStatus(1), d(1), 
 15103 ;;		 -> d(1), f(1), icodeByte(1), filterHitByte(1), 
 15104 ;;		 -> txCodeByte(1), rxCodeByte(1), ciTefCon(4), ciTefSta(4), 
 15105 ;;		 -> d(1), fCtrl(1), d(1), d(1), 
 15106 ;;		 -> ciFifoSta(4), ciFifoCon(5), d(1), d(1), 
 15107 ;;		 -> d(1), d(1), 
 15108 ;; Auto vars:     Size  Location     Type
 15109 ;;  spiTransferS    2    0        unsigned short 
 15110 ;;  spiTransferE    1  [STACK] char 
 15111 ;; Return value:  Size  Location     Type
 15112 ;;                  1  [STACK] char 
 15113 ;; Registers used:
 15114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 15115 ;; Tracked objects:
 15116 ;;		On entry : 0/0
 15117 ;;		On exit  : 0/0
 15118 ;;		Unchanged: 0/0
 15119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15124 ;;Total ram usage:        0 bytes
 15125 ;; Hardware stack levels used: 1
 15126 ;; Hardware stack levels required when called: 8
 15127 ;; This function calls:
 15128 ;;		_SpiTransfer
 15129 ;; This function is called by:
 15130 ;;		_DRV_CANFDSPI_OperationModeSelect
 15131 ;;		_DRV_CANFDSPI_FilterDisable
 15132 ;;		_DRV_CANFDSPI_TransmitChannelEventGet
 15133 ;;		_DRV_CANFDSPI_ReceiveChannelEventGet
 15134 ;;		_DRV_CANFDSPI_TimeStampEnable
 15135 ;; This function uses a reentrant model
 15136 ;;
 15137                           
 15138                           	psect	text61
 15139   0144A4                     __ptext61:
 15140                           	callstack 0
 15141   0144A4                     _DRV_CANFDSPI_ReadByte:
 15142                           	callstack 0
 15143                           
 15144                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15145   0144A4  52E6               	movf	postinc1,f,c
 15146   0144A6                     
 15147                           ;can/can.c: 282:     spiTransmitBuffer[0] = (uint8_t) ((0x03 << 4) + ((address >> 8) & 0
      +                          xF));
 15148                           ;stkvar	_address @ sp[(-1)+-2]
 15149   0144A6  0EFE               	movlw	254
 15150   0144A8  24E1               	addwf	fsr1l,w,c
 15151   0144AA  6ED9               	movwf	fsr2l,c
 15152   0144AC  0EFF               	movlw	255
 15153   0144AE  20E2               	addwfc	fsr1h,w,c
 15154   0144B0  6EDA               	movwf	fsr2h,c
 15155   0144B2  50DF               	movf	indf2,w,c
 15156   0144B4  0B0F               	andlw	15
 15157   0144B6  0F30               	addlw	48
 15158   0144B8  0101               	movlb	1	; () banked
 15159   0144BA  6F00               	movwf	_spiTransmitBuffer& (0+255),b
 15160   0144BC                     
 15161                           ; BSR set to: 1
 15162                           ;can/can.c: 283:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
 15163                           ;stkvar	_address @ sp[(-1)+-2]
 15164   0144BC  0EFD               	movlw	-3
 15165   0144BE  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
 15166   0144C2                     
 15167                           ; BSR set to: 1
 15168                           ;can/can.c: 284:     spiTransmitBuffer[2] = 0;
 15169   0144C2  6B02               	clrf	(_spiTransmitBuffer+2)& (0+255),b
 15170   0144C4                     
 15171                           ; BSR set to: 1
 15172                           ;can/can.c: 286:     spiTransferError = SpiTransfer(spiTransmitBuffer, spiReceiveBuffer,
      +                           spiTransferSize);
 15173   0144C4  0E03               	movlw	3
 15174   0144C6  6EE6               	movwf	postinc1,c
 15175   0144C8  0E00               	movlw	0
 15176   0144CA  6EE6               	movwf	postinc1,c
 15177   0144CC  0E00               	movlw	low _spiReceiveBuffer
 15178   0144CE  6EE6               	movwf	postinc1,c
 15179   0144D0  0E02               	movlw	high _spiReceiveBuffer
 15180   0144D2  6EE6               	movwf	postinc1,c
 15181   0144D4  0E00               	movlw	low _spiTransmitBuffer
 15182   0144D6  6EE6               	movwf	postinc1,c
 15183   0144D8  0E01               	movlw	high _spiTransmitBuffer
 15184   0144DA  6EE6               	movwf	postinc1,c
 15185   0144DC  ECF2  F09C         	call	_SpiTransfer	;wreg free
 15186                           
 15187                           ;stkvar	_spiTransferError @ sp[(-1)+0]
 15188   0144E0  0EFF               	movlw	-1
 15189   0144E2  C001  FFE3         	movff	btemp,plusw1
 15190   0144E6                     
 15191                           ;can/can.c: 289:     *rxd = spiReceiveBuffer[2];
 15192                           ;stkvar	_rxd @ sp[(-1)+-4]
 15193   0144E6  0EFB               	movlw	-5
 15194   0144E8  CFE3 FFD9          	movff	plusw1,fsr2l
 15195   0144EC  0EFC               	movlw	-4
 15196   0144EE  CFE3 FFDA          	movff	plusw1,fsr2h
 15197   0144F2  C202  FFDF         	movff	_spiReceiveBuffer+2,indf2
 15198   0144F6                     
 15199                           ;can/can.c: 291:     return spiTransferError;
 15200                           ;stkvar	_spiTransferError @ sp[(-1)+0]
 15201   0144F6  0EFF               	movlw	-1
 15202   0144F8  CFE3 F001          	movff	plusw1,btemp
 15203   0144FC                     
 15204                           ; _DRV_CANFDSPI_ReadByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 4, argsize = 4, vargsize = 0
 15205   0144FC  0EFB               	movlw	251
 15206   0144FE  26E1               	addwf	fsr1l,f,c
 15207   014500  0EFF               	movlw	255
 15208   014502  22E2               	addwfc	fsr1h,f,c
 15209   014504  0012               	return		;funcret
 15210   014506                     __end_of_DRV_CANFDSPI_ReadByte:
 15211                           	callstack 0
 15212                           
 15213 ;; *************** function _DRV_CANFDSPI_ModuleEventEnable *****************
 15214 ;; Defined at:
 15215 ;;		line 1591 in file "can/can.c"
 15216 ;; Parameters:    Size  Location     Type
 15217 ;;  index           1  [STACK] unsigned char 
 15218 ;;  flags           2  [STACK] enum E5566
 15219 ;; Auto vars:     Size  Location     Type
 15220 ;;  intEnables      2  [STACK] struct _REG_CiINTENABLE
 15221 ;;  a               2    0        unsigned short 
 15222 ;;  spiTransferE    1    0        char 
 15223 ;; Return value:  Size  Location     Type
 15224 ;;                  1  [STACK] char 
 15225 ;; Registers used:
 15226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 15227 ;; Tracked objects:
 15228 ;;		On entry : 0/0
 15229 ;;		On exit  : 0/0
 15230 ;;		Unchanged: 0/0
 15231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15236 ;;Total ram usage:        0 bytes
 15237 ;; Hardware stack levels used: 1
 15238 ;; Hardware stack levels required when called: 9
 15239 ;; This function calls:
 15240 ;;		_DRV_CANFDSPI_WriteHalfWord
 15241 ;; This function is called by:
 15242 ;;		_CanInit
 15243 ;; This function uses a reentrant model
 15244 ;;
 15245                           
 15246                           	psect	text62
 15247   014440                     __ptext62:
 15248                           	callstack 0
 15249   014440                     _DRV_CANFDSPI_ModuleEventEnable:
 15250                           	callstack 0
 15251                           
 15252                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15253   014440  52E6               	movf	postinc1,f,c
 15254   014442  52E6               	movf	postinc1,f,c
 15255   014444                     
 15256                           ;can/can.c: 1599:     REG_CiINTENABLE intEnables;;can/can.c: 1600:     intEnables.word =
      +                           0;
 15257                           ;stkvar	_intEnables @ sp[(-2)+0]
 15258   014444  0EFE               	movlw	-2
 15259   014446  6AE3               	clrf	plusw1,c
 15260   014448  0EFF               	movlw	-1
 15261   01444A  6AE3               	clrf	plusw1,c
 15262   01444C                     
 15263                           ;can/can.c: 1608:     intEnables.word |= (flags & CAN_ALL_EVENTS);
 15264                           ;stkvar	_flags @ sp[(-2)+-3]
 15265   01444C  0EFB               	movlw	-5
 15266   01444E  CFE3 F00B          	movff	plusw1,btemp+10
 15267   014452  0EFC               	movlw	-4
 15268   014454  CFE3 F00C          	movff	plusw1,btemp+11
 15269   014458  0E1F               	movlw	31
 15270   01445A  140B               	andwf	(btemp+10)^0,w,c
 15271   01445C  6E09               	movwf	(btemp+8)^0,c
 15272   01445E  0EFF               	movlw	255
 15273   014460  140C               	andwf	(btemp+11)^0,w,c
 15274   014462  6E0A               	movwf	(btemp+9)^0,c
 15275                           
 15276                           ;stkvar	_intEnables @ sp[(-2)+0]
 15277   014464  0EFE               	movlw	-2
 15278   014466  CFE3 F001          	movff	plusw1,btemp
 15279   01446A  5009               	movf	(btemp+8)^0,w,c
 15280   01446C  1201               	iorwf	btemp^0,f,c
 15281   01446E  0EFE               	movlw	-2
 15282   014470  C001  FFE3         	movff	btemp,plusw1
 15283   014474  0EFF               	movlw	-1
 15284   014476  CFE3 F001          	movff	plusw1,btemp
 15285   01447A  500A               	movf	(btemp+9)^0,w,c
 15286   01447C  1201               	iorwf	btemp^0,f,c
 15287   01447E  0EFF               	movlw	-1
 15288   014480  C001  FFE3         	movff	btemp,plusw1
 15289   014484                     
 15290                           ;stkvar	_intEnables @ sp[(-2)+0]
 15291   014484  0EFE               	movlw	-2
 15292   014486  CFE3 FFE6          	movff	plusw1,postinc1
 15293   01448A  CFE3 FFE6          	movff	plusw1,postinc1
 15294   01448E  0E1E               	movlw	30
 15295   014490  6EE6               	movwf	postinc1,c
 15296   014492  0E00               	movlw	0
 15297   014494  6EE6               	movwf	postinc1,c
 15298   014496  EC8D  F09C         	call	_DRV_CANFDSPI_WriteHalfWord	;wreg free
 15299   01449A                     
 15300                           ; _DRV_CANFDSPI_ModuleEventEnable: autosize = 2, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 3, argsize = 3, vargsize = 0
 15301   01449A  0EFB               	movlw	251
 15302   01449C  26E1               	addwf	fsr1l,f,c
 15303   01449E  0EFF               	movlw	255
 15304   0144A0  22E2               	addwfc	fsr1h,f,c
 15305   0144A2  0012               	return		;funcret
 15306   0144A4                     __end_of_DRV_CANFDSPI_ModuleEventEnable:
 15307                           	callstack 0
 15308                           
 15309 ;; *************** function _DRV_CANFDSPI_WriteHalfWord *****************
 15310 ;; Defined at:
 15311 ;;		line 332 in file "can/can.c"
 15312 ;; Parameters:    Size  Location     Type
 15313 ;;  address         2  [STACK] unsigned short 
 15314 ;;  txd             2  [STACK] unsigned short 
 15315 ;; Auto vars:     Size  Location     Type
 15316 ;;  spiTransferS    2  [STACK] unsigned short 
 15317 ;;  i               1  [STACK] unsigned char 
 15318 ;;  spiTransferE    1  [STACK] char 
 15319 ;; Return value:  Size  Location     Type
 15320 ;;                  1  [STACK] char 
 15321 ;; Registers used:
 15322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 15323 ;; Tracked objects:
 15324 ;;		On entry : 0/0
 15325 ;;		On exit  : 0/0
 15326 ;;		Unchanged: 0/0
 15327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15332 ;;Total ram usage:        0 bytes
 15333 ;; Hardware stack levels used: 1
 15334 ;; Hardware stack levels required when called: 8
 15335 ;; This function calls:
 15336 ;;		_SpiTransfer
 15337 ;; This function is called by:
 15338 ;;		_DRV_CANFDSPI_ModuleEventEnable
 15339 ;;		_DRV_CANFDSPI_TimeStampPrescalerSet
 15340 ;; This function uses a reentrant model
 15341 ;;
 15342                           
 15343                           	psect	text63
 15344   01391A                     __ptext63:
 15345                           	callstack 0
 15346   01391A                     _DRV_CANFDSPI_WriteHalfWord:
 15347                           	callstack 0
 15348                           
 15349                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15350   01391A  52E6               	movf	postinc1,f,c
 15351   01391C  52E6               	movf	postinc1,f,c
 15352   01391E  52E6               	movf	postinc1,f,c
 15353   013920  52E6               	movf	postinc1,f,c
 15354   013922                     
 15355                           ;can/can.c: 332: int8_t DRV_CANFDSPI_WriteHalfWord( uint16_t address,;can/can.c: 333:   
      +                                uint16_t txd);can/can.c: 334: {;can/can.c: 335:     uint8_t i;;can/can.c: 336:    
      +                           uint16_t spiTransferSize = 4;
 15356   013922  0E04               	movlw	4
 15357   013924  6E0B               	movwf	(btemp+10)^0,c
 15358   013926  0E00               	movlw	0
 15359   013928  6E0C               	movwf	(btemp+11)^0,c
 15360                           
 15361                           ;stkvar	_spiTransferSize @ sp[(-4)+0]
 15362   01392A  0EFC               	movlw	-4
 15363   01392C  C00B  FFE3         	movff	btemp+10,plusw1
 15364   013930  0EFD               	movlw	-3
 15365   013932  C00C  FFE3         	movff	btemp+11,plusw1
 15366   013936                     
 15367                           ;can/can.c: 340:     spiTransmitBuffer[0] = (uint8_t) ((0x02 << 4) + ((address >> 8) & 0
      +                          xF));
 15368                           ;stkvar	_address @ sp[(-4)+-2]
 15369   013936  0EFB               	movlw	251
 15370   013938  24E1               	addwf	fsr1l,w,c
 15371   01393A  6ED9               	movwf	fsr2l,c
 15372   01393C  0EFF               	movlw	255
 15373   01393E  20E2               	addwfc	fsr1h,w,c
 15374   013940  6EDA               	movwf	fsr2h,c
 15375   013942  50DF               	movf	indf2,w,c
 15376   013944  0B0F               	andlw	15
 15377   013946  0F20               	addlw	32
 15378   013948  0101               	movlb	1	; () banked
 15379   01394A  6F00               	movwf	_spiTransmitBuffer& (0+255),b
 15380   01394C                     
 15381                           ; BSR set to: 1
 15382                           ;can/can.c: 341:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
 15383                           ;stkvar	_address @ sp[(-4)+-2]
 15384   01394C  0EFA               	movlw	-6
 15385   01394E  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
 15386   013952                     
 15387                           ; BSR set to: 1
 15388                           ;can/can.c: 344:     for (i = 0; i < 2; i++) {
 15389                           ;stkvar	_i @ sp[(-4)+2]
 15390   013952  0EFE               	movlw	-2
 15391   013954  6AE3               	clrf	plusw1,c
 15392   013956                     l4563:
 15393                           
 15394                           ;can/can.c: 345:         spiTransmitBuffer[i + 2] = (uint8_t) ((txd >> (i * 8)) & 0xFF);
 15395                           ;stkvar	_i @ sp[(-4)+2]
 15396   013956  0EFE               	movlw	-2
 15397   013958  50E3               	movf	plusw1,w,c
 15398   01395A  6E0B               	movwf	(btemp+10)^0,c
 15399   01395C  6A0C               	clrf	(btemp+11)^0,c
 15400   01395E  0E02               	movlw	low (_spiTransmitBuffer+2)
 15401   013960  240B               	addwf	(btemp+10)^0,w,c
 15402   013962  6ED9               	movwf	fsr2l,c
 15403   013964  0E01               	movlw	high (_spiTransmitBuffer+2)
 15404   013966  200C               	addwfc	(btemp+11)^0,w,c
 15405   013968  6EDA               	movwf	fsr2h,c
 15406                           
 15407                           ;stkvar	_i @ sp[(-4)+2]
 15408   01396A  0EFE               	movlw	-2
 15409   01396C  50E3               	movf	plusw1,w,c
 15410   01396E  0D08               	mullw	8
 15411   013970  CFF3 F00C          	movff	prodl,btemp+11
 15412                           
 15413                           ;stkvar	_txd @ sp[(-4)+-4]
 15414   013974  0EF8               	movlw	-8
 15415   013976  CFE3 F009          	movff	plusw1,btemp+8
 15416   01397A  0EF9               	movlw	-7
 15417   01397C  CFE3 F00A          	movff	plusw1,btemp+9
 15418   013980  2A0C               	incf	(btemp+11)^0,f,c
 15419   013982  EFC6  F09C         	goto	u2234
 15420   013986                     u2235:
 15421   013986  90D8               	bcf	status,0,c
 15422   013988  320A               	rrcf	(btemp+9)^0,f,c
 15423   01398A  3209               	rrcf	(btemp+8)^0,f,c
 15424   01398C                     u2234:
 15425   01398C  2E0C               	decfsz	(btemp+11)^0,f,c
 15426   01398E  EFC3  F09C         	goto	u2235
 15427   013992  5009               	movf	(btemp+8)^0,w,c
 15428   013994  6EDF               	movwf	indf2,c
 15429   013996                     
 15430                           ;can/can.c: 346:     }
 15431                           ;stkvar	_i @ sp[(-4)+2]
 15432   013996  0EFE               	movlw	-2
 15433   013998  2AE3               	incf	plusw1,f,c
 15434   01399A                     
 15435                           ;stkvar	_i @ sp[(-4)+2]
 15436   01399A  0EFE               	movlw	-2
 15437   01399C  CFE3 F001          	movff	plusw1,btemp
 15438   0139A0  0E01               	movlw	1
 15439   0139A2  6401               	cpfsgt	btemp^0,c
 15440   0139A4  EFD6  F09C         	goto	u2241
 15441   0139A8  EFD8  F09C         	goto	u2240
 15442   0139AC                     u2241:
 15443   0139AC  EFAB  F09C         	goto	l4563
 15444   0139B0                     u2240:
 15445   0139B0                     
 15446                           ;can/can.c: 348:     spiTransferError = SpiTransfer( spiTransmitBuffer, spiReceiveBuffer
      +                          , spiTransferSize);
 15447                           ;stkvar	_spiTransferSize @ sp[(-4)+0]
 15448   0139B0  0EFC               	movlw	-4
 15449   0139B2  CFE3 FFE6          	movff	plusw1,postinc1
 15450   0139B6  CFE3 FFE6          	movff	plusw1,postinc1
 15451   0139BA  0E00               	movlw	low _spiReceiveBuffer
 15452   0139BC  6EE6               	movwf	postinc1,c
 15453   0139BE  0E02               	movlw	high _spiReceiveBuffer
 15454   0139C0  6EE6               	movwf	postinc1,c
 15455   0139C2  0E00               	movlw	low _spiTransmitBuffer
 15456   0139C4  6EE6               	movwf	postinc1,c
 15457   0139C6  0E01               	movlw	high _spiTransmitBuffer
 15458   0139C8  6EE6               	movwf	postinc1,c
 15459   0139CA  ECF2  F09C         	call	_SpiTransfer	;wreg free
 15460                           
 15461                           ;stkvar	_spiTransferError @ sp[(-4)+3]
 15462   0139CE  0EFF               	movlw	-1
 15463   0139D0  C001  FFE3         	movff	btemp,plusw1
 15464   0139D4                     
 15465                           ;can/can.c: 350:     return spiTransferError;
 15466                           ;stkvar	_spiTransferError @ sp[(-4)+3]
 15467   0139D4  0EFF               	movlw	-1
 15468   0139D6  CFE3 F001          	movff	plusw1,btemp
 15469   0139DA                     
 15470                           ; _DRV_CANFDSPI_WriteHalfWord: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0
      +                           parsize = 4, argsize = 4, vargsize = 0
 15471   0139DA  0EF8               	movlw	248
 15472   0139DC  26E1               	addwf	fsr1l,f,c
 15473   0139DE  0EFF               	movlw	255
 15474   0139E0  22E2               	addwfc	fsr1h,f,c
 15475   0139E2  0012               	return		;funcret
 15476   0139E4                     __end_of_DRV_CANFDSPI_WriteHalfWord:
 15477                           	callstack 0
 15478                           
 15479 ;; *************** function _DRV_CANFDSPI_ConfigureObjectReset *****************
 15480 ;; Defined at:
 15481 ;;		line 474 in file "can/can.c"
 15482 ;; Parameters:    Size  Location     Type
 15483 ;;  config          2  [STACK] PTR struct _CAN_CONFIG
 15484 ;;		 -> config(3), 
 15485 ;; Auto vars:     Size  Location     Type
 15486 ;;  ciCon           4  [STACK] struct _REG_CiCON
 15487 ;; Return value:  Size  Location     Type
 15488 ;;                  1  [STACK] char 
 15489 ;; Registers used:
 15490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru
 15491 ;; Tracked objects:
 15492 ;;		On entry : 0/0
 15493 ;;		On exit  : 0/0
 15494 ;;		Unchanged: 0/0
 15495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15500 ;;Total ram usage:        0 bytes
 15501 ;; Hardware stack levels used: 1
 15502 ;; Hardware stack levels required when called: 7
 15503 ;; This function calls:
 15504 ;;		Nothing
 15505 ;; This function is called by:
 15506 ;;		_CanInit
 15507 ;; This function uses a reentrant model
 15508 ;;
 15509                           
 15510                           	psect	text64
 15511   0119BA                     __ptext64:
 15512                           	callstack 0
 15513   0119BA                     _DRV_CANFDSPI_ConfigureObjectReset:
 15514                           	callstack 0
 15515                           
 15516                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15517   0119BA  52E6               	movf	postinc1,f,c
 15518   0119BC  52E6               	movf	postinc1,f,c
 15519   0119BE  52E6               	movf	postinc1,f,c
 15520   0119C0  52E6               	movf	postinc1,f,c
 15521   0119C2                     
 15522                           ;can/can.c: 474: int8_t DRV_CANFDSPI_ConfigureObjectReset(CAN_CONFIG* config);can/can.c:
      +                           475: {;can/can.c: 476:     REG_CiCON ciCon;;can/can.c: 477:     ciCon.word = canControl
      +                          ResetValues[0x000 / 4];
 15523   0119C2  0E8D               	movlw	low _canControlResetValues
 15524   0119C4  6EF6               	movwf	tblptrl,c
 15525   0119C6                     	if	1	;There is more than 1 active tblptr byte
 15526   0119C6  0EFF               	movlw	high _canControlResetValues
 15527   0119C8  6EF7               	movwf	tblptrh,c
 15528   0119CA                     	endif
 15529   0119CA                     	if	1	;There are 3 active tblptr bytes
 15530   0119CA  0E00               	movlw	low (_canControlResetValues shr (0+16))
 15531   0119CC  6EF8               	movwf	tblptru,c
 15532   0119CE                     	endif
 15533   0119CE  0009               	tblrd		*+
 15534   0119D0  CFF5 F009          	movff	tablat,btemp+8
 15535   0119D4  0009               	tblrd		*+
 15536   0119D6  CFF5 F00A          	movff	tablat,btemp+9
 15537   0119DA  0009               	tblrd		*+
 15538   0119DC  CFF5 F00B          	movff	tablat,btemp+10
 15539   0119E0  0009               	tblrd		*+
 15540   0119E2  CFF5 F00C          	movff	tablat,btemp+11
 15541                           
 15542                           ;stkvar	_ciCon @ sp[(-4)+0]
 15543   0119E6  0EFC               	movlw	-4
 15544   0119E8  C009  FFE3         	movff	btemp+8,plusw1
 15545   0119EC  0EFD               	movlw	-3
 15546   0119EE  C00A  FFE3         	movff	btemp+9,plusw1
 15547   0119F2  0EFE               	movlw	-2
 15548   0119F4  C00B  FFE3         	movff	btemp+10,plusw1
 15549   0119F8  0EFF               	movlw	-1
 15550   0119FA  C00C  FFE3         	movff	btemp+11,plusw1
 15551   0119FE                     
 15552                           ;can/can.c: 479:     config->DNetFilterCount = ciCon.bF.DNetFilterCount;
 15553                           ;stkvar	_ciCon @ sp[(-4)+0]
 15554   0119FE  50E1               	movf	fsr1l,w,c
 15555   011A00  0FFC               	addlw	-4
 15556   011A02  6ED9               	movwf	fsr2l,c
 15557   011A04  50E2               	movf	fsr1h,w,c
 15558   011A06  6EDA               	movwf	fsr2h,c
 15559   011A08  0EFF               	movlw	255
 15560   011A0A  22DA               	addwfc	fsr2h,f,c
 15561   011A0C  50DF               	movf	223,w,c
 15562   011A0E  0B1F               	andlw	31
 15563   011A10  6E0C               	movwf	(btemp+11)^0,c
 15564                           
 15565                           ;stkvar	_config @ sp[(-4)+-2]
 15566   011A12  0EFA               	movlw	-6
 15567   011A14  CFE3 FFD9          	movff	plusw1,fsr2l
 15568   011A18  0EFB               	movlw	-5
 15569   011A1A  CFE3 FFDA          	movff	plusw1,fsr2h
 15570   011A1E  50DF               	movf	223,w,c
 15571   011A20  180C               	xorwf	(btemp+11)^0,w,c
 15572   011A22  0BE0               	andlw	-32
 15573   011A24  180C               	xorwf	(btemp+11)^0,w,c
 15574   011A26  6EDF               	movwf	223,c
 15575   011A28                     
 15576                           ;can/can.c: 480:     config->IsoCrcEnable = ciCon.bF.IsoCrcEnable;
 15577                           ;stkvar	_ciCon @ sp[(-4)+0]
 15578   011A28  50E1               	movf	fsr1l,w,c
 15579   011A2A  0FFC               	addlw	-4
 15580   011A2C  6ED9               	movwf	fsr2l,c
 15581   011A2E  50E2               	movf	fsr1h,w,c
 15582   011A30  6EDA               	movwf	fsr2h,c
 15583   011A32  0EFF               	movlw	255
 15584   011A34  22DA               	addwfc	fsr2h,f,c
 15585                           
 15586                           ;stkvar	_config @ sp[(-4)+-2]
 15587   011A36  0EFA               	movlw	-6
 15588   011A38  CFE3 FFE9          	movff	plusw1,fsr0l
 15589   011A3C  0EFB               	movlw	-5
 15590   011A3E  CFE3 FFEA          	movff	plusw1,fsr0h
 15591   011A42  9AEF               	bcf	indf0,5,c
 15592   011A44  AADF               	btfss	indf2,5,c
 15593   011A46  EF26  F08D         	goto	u805
 15594   011A4A  8AEF               	bsf	indf0,5,c
 15595   011A4C                     u805:
 15596   011A4C                     
 15597                           ;can/can.c: 481:     config->ProtocolExpectionEventDisable = ciCon.bF.ProtocolExceptionE
      +                          ventDisable;
 15598                           ;stkvar	_ciCon @ sp[(-4)+0]
 15599   011A4C  50E1               	movf	fsr1l,w,c
 15600   011A4E  0FFC               	addlw	-4
 15601   011A50  6ED9               	movwf	fsr2l,c
 15602   011A52  50E2               	movf	fsr1h,w,c
 15603   011A54  6EDA               	movwf	fsr2h,c
 15604   011A56  0EFF               	movlw	255
 15605   011A58  22DA               	addwfc	fsr2h,f,c
 15606                           
 15607                           ;stkvar	_config @ sp[(-4)+-2]
 15608   011A5A  0EFA               	movlw	-6
 15609   011A5C  CFE3 FFE9          	movff	plusw1,fsr0l
 15610   011A60  0EFB               	movlw	-5
 15611   011A62  CFE3 FFEA          	movff	plusw1,fsr0h
 15612   011A66  9CEF               	bcf	indf0,6,c
 15613   011A68  ACDF               	btfss	indf2,6,c
 15614   011A6A  EF38  F08D         	goto	u815
 15615   011A6E  8CEF               	bsf	indf0,6,c
 15616   011A70                     u815:
 15617   011A70                     
 15618                           ;can/can.c: 482:     config->WakeUpFilterEnable = ciCon.bF.WakeUpFilterEnable;
 15619                           ;stkvar	_ciCon @ sp[(-4)+0]
 15620   011A70  0EFD               	movlw	253
 15621   011A72  24E1               	addwf	fsr1l,w,c
 15622   011A74  6ED9               	movwf	fsr2l,c
 15623   011A76  0EFF               	movlw	255
 15624   011A78  20E2               	addwfc	fsr1h,w,c
 15625   011A7A  6EDA               	movwf	fsr2h,c
 15626                           
 15627                           ;stkvar	_config @ sp[(-4)+-2]
 15628   011A7C  0EFA               	movlw	-6
 15629   011A7E  CFE3 FFE9          	movff	plusw1,fsr0l
 15630   011A82  0EFB               	movlw	-5
 15631   011A84  CFE3 FFEA          	movff	plusw1,fsr0h
 15632   011A88  9EEF               	bcf	indf0,7,c
 15633   011A8A  A0DF               	btfss	indf2,0,c
 15634   011A8C  EF49  F08D         	goto	u825
 15635   011A90  8EEF               	bsf	indf0,7,c
 15636   011A92                     u825:
 15637   011A92                     
 15638                           ;can/can.c: 483:     config->WakeUpFilterTime = ciCon.bF.WakeUpFilterTime;
 15639                           ;stkvar	_ciCon @ sp[(-4)+0]
 15640   011A92  0EFD               	movlw	253
 15641   011A94  24E1               	addwf	fsr1l,w,c
 15642   011A96  6ED9               	movwf	fsr2l,c
 15643   011A98  0EFF               	movlw	255
 15644   011A9A  20E2               	addwfc	fsr1h,w,c
 15645   011A9C  6EDA               	movwf	fsr2h,c
 15646   011A9E  30DF               	rrcf	223,w,c
 15647   011AA0  0B03               	andlw	3
 15648   011AA2  6E0C               	movwf	(btemp+11)^0,c
 15649                           
 15650                           ;stkvar	_config @ sp[(-4)+-2]
 15651   011AA4  0EFA               	movlw	-6
 15652   011AA6  CFE3 F009          	movff	plusw1,btemp+8
 15653   011AAA  0EFB               	movlw	-5
 15654   011AAC  CFE3 F00A          	movff	plusw1,btemp+9
 15655   011AB0  0E01               	movlw	1
 15656   011AB2  2409               	addwf	(btemp+8)^0,w,c
 15657   011AB4  6ED9               	movwf	fsr2l,c
 15658   011AB6  0E00               	movlw	0
 15659   011AB8  200A               	addwfc	(btemp+9)^0,w,c
 15660   011ABA  6EDA               	movwf	fsr2h,c
 15661   011ABC  50DF               	movf	223,w,c
 15662   011ABE  180C               	xorwf	(btemp+11)^0,w,c
 15663   011AC0  0BFC               	andlw	-4
 15664   011AC2  180C               	xorwf	(btemp+11)^0,w,c
 15665   011AC4  6EDF               	movwf	223,c
 15666   011AC6                     
 15667                           ;can/can.c: 484:     config->BitRateSwitchDisable = ciCon.bF.BitRateSwitchDisable;
 15668                           ;stkvar	_ciCon @ sp[(-4)+0]
 15669   011AC6  0EFD               	movlw	253
 15670   011AC8  24E1               	addwf	fsr1l,w,c
 15671   011ACA  6ED9               	movwf	fsr2l,c
 15672   011ACC  0EFF               	movlw	255
 15673   011ACE  20E2               	addwfc	fsr1h,w,c
 15674   011AD0  6EDA               	movwf	fsr2h,c
 15675                           
 15676                           ;stkvar	_config @ sp[(-4)+-2]
 15677   011AD2  0EFA               	movlw	-6
 15678   011AD4  CFE3 F00B          	movff	plusw1,btemp+10
 15679   011AD8  0EFB               	movlw	-5
 15680   011ADA  CFE3 F00C          	movff	plusw1,btemp+11
 15681   011ADE  0E01               	movlw	1
 15682   011AE0  240B               	addwf	(btemp+10)^0,w,c
 15683   011AE2  6EE9               	movwf	fsr0l,c
 15684   011AE4  0E00               	movlw	0
 15685   011AE6  200C               	addwfc	(btemp+11)^0,w,c
 15686   011AE8  6EEA               	movwf	fsr0h,c
 15687   011AEA  94EF               	bcf	indf0,2,c
 15688   011AEC  A8DF               	btfss	indf2,4,c
 15689   011AEE  EF7A  F08D         	goto	u835
 15690   011AF2  84EF               	bsf	indf0,2,c
 15691   011AF4                     u835:
 15692   011AF4                     
 15693                           ;can/can.c: 485:     config->RestrictReTxAttempts = ciCon.bF.RestrictReTxAttempts;
 15694                           ;stkvar	_ciCon @ sp[(-4)+0]
 15695   011AF4  0EFE               	movlw	254
 15696   011AF6  24E1               	addwf	fsr1l,w,c
 15697   011AF8  6ED9               	movwf	fsr2l,c
 15698   011AFA  0EFF               	movlw	255
 15699   011AFC  20E2               	addwfc	fsr1h,w,c
 15700   011AFE  6EDA               	movwf	fsr2h,c
 15701                           
 15702                           ;stkvar	_config @ sp[(-4)+-2]
 15703   011B00  0EFA               	movlw	-6
 15704   011B02  CFE3 F00B          	movff	plusw1,btemp+10
 15705   011B06  0EFB               	movlw	-5
 15706   011B08  CFE3 F00C          	movff	plusw1,btemp+11
 15707   011B0C  0E01               	movlw	1
 15708   011B0E  240B               	addwf	(btemp+10)^0,w,c
 15709   011B10  6EE9               	movwf	fsr0l,c
 15710   011B12  0E00               	movlw	0
 15711   011B14  200C               	addwfc	(btemp+11)^0,w,c
 15712   011B16  6EEA               	movwf	fsr0h,c
 15713   011B18  96EF               	bcf	indf0,3,c
 15714   011B1A  A0DF               	btfss	indf2,0,c
 15715   011B1C  EF91  F08D         	goto	u845
 15716   011B20  86EF               	bsf	indf0,3,c
 15717   011B22                     u845:
 15718   011B22                     
 15719                           ;can/can.c: 486:     config->EsiInGatewayMode = ciCon.bF.EsiInGatewayMode;
 15720                           ;stkvar	_ciCon @ sp[(-4)+0]
 15721   011B22  0EFE               	movlw	254
 15722   011B24  24E1               	addwf	fsr1l,w,c
 15723   011B26  6ED9               	movwf	fsr2l,c
 15724   011B28  0EFF               	movlw	255
 15725   011B2A  20E2               	addwfc	fsr1h,w,c
 15726   011B2C  6EDA               	movwf	fsr2h,c
 15727                           
 15728                           ;stkvar	_config @ sp[(-4)+-2]
 15729   011B2E  0EFA               	movlw	-6
 15730   011B30  CFE3 F00B          	movff	plusw1,btemp+10
 15731   011B34  0EFB               	movlw	-5
 15732   011B36  CFE3 F00C          	movff	plusw1,btemp+11
 15733   011B3A  0E01               	movlw	1
 15734   011B3C  240B               	addwf	(btemp+10)^0,w,c
 15735   011B3E  6EE9               	movwf	fsr0l,c
 15736   011B40  0E00               	movlw	0
 15737   011B42  200C               	addwfc	(btemp+11)^0,w,c
 15738   011B44  6EEA               	movwf	fsr0h,c
 15739   011B46  98EF               	bcf	indf0,4,c
 15740   011B48  A2DF               	btfss	indf2,1,c
 15741   011B4A  EFA8  F08D         	goto	u855
 15742   011B4E  88EF               	bsf	indf0,4,c
 15743   011B50                     u855:
 15744   011B50                     
 15745                           ;can/can.c: 487:     config->SystemErrorToListenOnly = ciCon.bF.SystemErrorToListenOnly;
 15746                           ;stkvar	_ciCon @ sp[(-4)+0]
 15747   011B50  0EFE               	movlw	254
 15748   011B52  24E1               	addwf	fsr1l,w,c
 15749   011B54  6ED9               	movwf	fsr2l,c
 15750   011B56  0EFF               	movlw	255
 15751   011B58  20E2               	addwfc	fsr1h,w,c
 15752   011B5A  6EDA               	movwf	fsr2h,c
 15753                           
 15754                           ;stkvar	_config @ sp[(-4)+-2]
 15755   011B5C  0EFA               	movlw	-6
 15756   011B5E  CFE3 F00B          	movff	plusw1,btemp+10
 15757   011B62  0EFB               	movlw	-5
 15758   011B64  CFE3 F00C          	movff	plusw1,btemp+11
 15759   011B68  0E01               	movlw	1
 15760   011B6A  240B               	addwf	(btemp+10)^0,w,c
 15761   011B6C  6EE9               	movwf	fsr0l,c
 15762   011B6E  0E00               	movlw	0
 15763   011B70  200C               	addwfc	(btemp+11)^0,w,c
 15764   011B72  6EEA               	movwf	fsr0h,c
 15765   011B74  9AEF               	bcf	indf0,5,c
 15766   011B76  A4DF               	btfss	indf2,2,c
 15767   011B78  EFBF  F08D         	goto	u865
 15768   011B7C  8AEF               	bsf	indf0,5,c
 15769   011B7E                     u865:
 15770   011B7E                     
 15771                           ;can/can.c: 488:     config->StoreInTEF = ciCon.bF.StoreInTEF;
 15772                           ;stkvar	_ciCon @ sp[(-4)+0]
 15773   011B7E  0EFE               	movlw	254
 15774   011B80  24E1               	addwf	fsr1l,w,c
 15775   011B82  6ED9               	movwf	fsr2l,c
 15776   011B84  0EFF               	movlw	255
 15777   011B86  20E2               	addwfc	fsr1h,w,c
 15778   011B88  6EDA               	movwf	fsr2h,c
 15779                           
 15780                           ;stkvar	_config @ sp[(-4)+-2]
 15781   011B8A  0EFA               	movlw	-6
 15782   011B8C  CFE3 F00B          	movff	plusw1,btemp+10
 15783   011B90  0EFB               	movlw	-5
 15784   011B92  CFE3 F00C          	movff	plusw1,btemp+11
 15785   011B96  0E01               	movlw	1
 15786   011B98  240B               	addwf	(btemp+10)^0,w,c
 15787   011B9A  6EE9               	movwf	fsr0l,c
 15788   011B9C  0E00               	movlw	0
 15789   011B9E  200C               	addwfc	(btemp+11)^0,w,c
 15790   011BA0  6EEA               	movwf	fsr0h,c
 15791   011BA2  9CEF               	bcf	indf0,6,c
 15792   011BA4  A6DF               	btfss	indf2,3,c
 15793   011BA6  EFD6  F08D         	goto	u875
 15794   011BAA  8CEF               	bsf	indf0,6,c
 15795   011BAC                     u875:
 15796   011BAC                     
 15797                           ;can/can.c: 489:     config->TXQEnable = ciCon.bF.TXQEnable;
 15798                           ;stkvar	_ciCon @ sp[(-4)+0]
 15799   011BAC  0EFE               	movlw	254
 15800   011BAE  24E1               	addwf	fsr1l,w,c
 15801   011BB0  6ED9               	movwf	fsr2l,c
 15802   011BB2  0EFF               	movlw	255
 15803   011BB4  20E2               	addwfc	fsr1h,w,c
 15804   011BB6  6EDA               	movwf	fsr2h,c
 15805                           
 15806                           ;stkvar	_config @ sp[(-4)+-2]
 15807   011BB8  0EFA               	movlw	-6
 15808   011BBA  CFE3 F00B          	movff	plusw1,btemp+10
 15809   011BBE  0EFB               	movlw	-5
 15810   011BC0  CFE3 F00C          	movff	plusw1,btemp+11
 15811   011BC4  0E01               	movlw	1
 15812   011BC6  240B               	addwf	(btemp+10)^0,w,c
 15813   011BC8  6EE9               	movwf	fsr0l,c
 15814   011BCA  0E00               	movlw	0
 15815   011BCC  200C               	addwfc	(btemp+11)^0,w,c
 15816   011BCE  6EEA               	movwf	fsr0h,c
 15817   011BD0  9EEF               	bcf	indf0,7,c
 15818   011BD2  A8DF               	btfss	indf2,4,c
 15819   011BD4  EFED  F08D         	goto	u885
 15820   011BD8  8EEF               	bsf	indf0,7,c
 15821   011BDA                     u885:
 15822   011BDA                     
 15823                           ;can/can.c: 490:     config->TxBandWidthSharing = ciCon.bF.TxBandWidthSharing;
 15824                           ;stkvar	_ciCon @ sp[(-4)+0]
 15825   011BDA  0EFF               	movlw	255
 15826   011BDC  24E1               	addwf	fsr1l,w,c
 15827   011BDE  6ED9               	movwf	fsr2l,c
 15828   011BE0  0EFF               	movlw	255
 15829   011BE2  20E2               	addwfc	fsr1h,w,c
 15830   011BE4  6EDA               	movwf	fsr2h,c
 15831   011BE6  38DF               	swapf	223,w,c
 15832   011BE8  0B0F               	andlw	15
 15833   011BEA  6E0C               	movwf	(btemp+11)^0,c
 15834                           
 15835                           ;stkvar	_config @ sp[(-4)+-2]
 15836   011BEC  0EFA               	movlw	-6
 15837   011BEE  CFE3 F009          	movff	plusw1,btemp+8
 15838   011BF2  0EFB               	movlw	-5
 15839   011BF4  CFE3 F00A          	movff	plusw1,btemp+9
 15840   011BF8  0E02               	movlw	2
 15841   011BFA  2409               	addwf	(btemp+8)^0,w,c
 15842   011BFC  6ED9               	movwf	fsr2l,c
 15843   011BFE  0E00               	movlw	0
 15844   011C00  200A               	addwfc	(btemp+9)^0,w,c
 15845   011C02  6EDA               	movwf	fsr2h,c
 15846   011C04  50DF               	movf	223,w,c
 15847   011C06  180C               	xorwf	(btemp+11)^0,w,c
 15848   011C08  0BF0               	andlw	-16
 15849   011C0A  180C               	xorwf	(btemp+11)^0,w,c
 15850   011C0C  6EDF               	movwf	223,c
 15851   011C0E                     
 15852                           ; _DRV_CANFDSPI_ConfigureObjectReset: autosize = 4, savesize = 0, parsavesize = 0, temps
      +                          ize = 0 parsize = 2, argsize = 2, vargsize = 0
 15853   011C0E  0EFA               	movlw	250
 15854   011C10  26E1               	addwf	fsr1l,f,c
 15855   011C12  0EFF               	movlw	255
 15856   011C14  22E2               	addwfc	fsr1h,f,c
 15857   011C16  0012               	return		;funcret
 15858   011C18                     __end_of_DRV_CANFDSPI_ConfigureObjectReset:
 15859                           	callstack 0
 15860                           
 15861 ;; *************** function _DRV_CANFDSPI_Configure *****************
 15862 ;; Defined at:
 15863 ;;		line 446 in file "can/can.c"
 15864 ;; Parameters:    Size  Location     Type
 15865 ;;  config          2  [STACK] PTR struct _CAN_CONFIG
 15866 ;;		 -> config(3), 
 15867 ;; Auto vars:     Size  Location     Type
 15868 ;;  ciCon           4  [STACK] struct _REG_CiCON
 15869 ;;  spiTransferE    1    0        char 
 15870 ;; Return value:  Size  Location     Type
 15871 ;;                  1  [STACK] char 
 15872 ;; Registers used:
 15873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 15874 ;; Tracked objects:
 15875 ;;		On entry : 0/0
 15876 ;;		On exit  : 0/0
 15877 ;;		Unchanged: 0/0
 15878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15883 ;;Total ram usage:        0 bytes
 15884 ;; Hardware stack levels used: 1
 15885 ;; Hardware stack levels required when called: 9
 15886 ;; This function calls:
 15887 ;;		_DRV_CANFDSPI_WriteWord
 15888 ;; This function is called by:
 15889 ;;		_CanInit
 15890 ;; This function uses a reentrant model
 15891 ;;
 15892                           
 15893                           	psect	text65
 15894   01173A                     __ptext65:
 15895                           	callstack 0
 15896   01173A                     _DRV_CANFDSPI_Configure:
 15897                           	callstack 0
 15898                           
 15899                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15900   01173A  52E6               	movf	postinc1,f,c
 15901   01173C  52E6               	movf	postinc1,f,c
 15902   01173E  52E6               	movf	postinc1,f,c
 15903   011740  52E6               	movf	postinc1,f,c
 15904   011742                     
 15905                           ;can/can.c: 451:     ciCon.word = canControlResetValues[0x000 / 4];
 15906   011742  0E8D               	movlw	low _canControlResetValues
 15907   011744  6EF6               	movwf	tblptrl,c
 15908   011746                     	if	1	;There is more than 1 active tblptr byte
 15909   011746  0EFF               	movlw	high _canControlResetValues
 15910   011748  6EF7               	movwf	tblptrh,c
 15911   01174A                     	endif
 15912   01174A                     	if	1	;There are 3 active tblptr bytes
 15913   01174A  0E00               	movlw	low (_canControlResetValues shr (0+16))
 15914   01174C  6EF8               	movwf	tblptru,c
 15915   01174E                     	endif
 15916   01174E  0009               	tblrd		*+
 15917   011750  CFF5 F009          	movff	tablat,btemp+8
 15918   011754  0009               	tblrd		*+
 15919   011756  CFF5 F00A          	movff	tablat,btemp+9
 15920   01175A  0009               	tblrd		*+
 15921   01175C  CFF5 F00B          	movff	tablat,btemp+10
 15922   011760  0009               	tblrd		*+
 15923   011762  CFF5 F00C          	movff	tablat,btemp+11
 15924                           
 15925                           ;stkvar	_ciCon @ sp[(-4)+0]
 15926   011766  0EFC               	movlw	-4
 15927   011768  C009  FFE3         	movff	btemp+8,plusw1
 15928   01176C  0EFD               	movlw	-3
 15929   01176E  C00A  FFE3         	movff	btemp+9,plusw1
 15930   011772  0EFE               	movlw	-2
 15931   011774  C00B  FFE3         	movff	btemp+10,plusw1
 15932   011778  0EFF               	movlw	-1
 15933   01177A  C00C  FFE3         	movff	btemp+11,plusw1
 15934   01177E                     
 15935                           ;can/can.c: 453:     ciCon.bF.DNetFilterCount = config->DNetFilterCount;
 15936                           ;stkvar	_config @ sp[(-4)+-2]
 15937   01177E  0EFA               	movlw	-6
 15938   011780  CFE3 FFD9          	movff	plusw1,fsr2l
 15939   011784  0EFB               	movlw	-5
 15940   011786  CFE3 FFDA          	movff	plusw1,fsr2h
 15941   01178A  50DF               	movf	223,w,c
 15942   01178C  0B1F               	andlw	31
 15943   01178E  6E0C               	movwf	(btemp+11)^0,c
 15944                           
 15945                           ;stkvar	_ciCon @ sp[(-4)+0]
 15946   011790  50E1               	movf	fsr1l,w,c
 15947   011792  0FFC               	addlw	-4
 15948   011794  6ED9               	movwf	fsr2l,c
 15949   011796  50E2               	movf	fsr1h,w,c
 15950   011798  6EDA               	movwf	fsr2h,c
 15951   01179A  0EFF               	movlw	255
 15952   01179C  22DA               	addwfc	fsr2h,f,c
 15953   01179E  50DF               	movf	223,w,c
 15954   0117A0  180C               	xorwf	(btemp+11)^0,w,c
 15955   0117A2  0BE0               	andlw	-32
 15956   0117A4  180C               	xorwf	(btemp+11)^0,w,c
 15957   0117A6  6EDF               	movwf	223,c
 15958   0117A8                     
 15959                           ;can/can.c: 454:     ciCon.bF.IsoCrcEnable = config->IsoCrcEnable;
 15960                           ;stkvar	_config @ sp[(-4)+-2]
 15961   0117A8  0EFA               	movlw	-6
 15962   0117AA  CFE3 FFD9          	movff	plusw1,fsr2l
 15963   0117AE  0EFB               	movlw	-5
 15964   0117B0  CFE3 FFDA          	movff	plusw1,fsr2h
 15965                           
 15966                           ;stkvar	_ciCon @ sp[(-4)+0]
 15967   0117B4  50E1               	movf	fsr1l,w,c
 15968   0117B6  0FFC               	addlw	-4
 15969   0117B8  6EE9               	movwf	fsr0l,c
 15970   0117BA  50E2               	movf	fsr1h,w,c
 15971   0117BC  6EEA               	movwf	fsr0h,c
 15972   0117BE  0EFF               	movlw	255
 15973   0117C0  22EA               	addwfc	fsr0h,f,c
 15974   0117C2  9AEF               	bcf	indf0,5,c
 15975   0117C4  AADF               	btfss	indf2,5,c
 15976   0117C6  EFE6  F08B         	goto	u2365
 15977   0117CA  8AEF               	bsf	indf0,5,c
 15978   0117CC                     u2365:
 15979   0117CC                     
 15980                           ;can/can.c: 455:     ciCon.bF.ProtocolExceptionEventDisable = config->ProtocolExpectionE
      +                          ventDisable;
 15981                           ;stkvar	_config @ sp[(-4)+-2]
 15982   0117CC  0EFA               	movlw	-6
 15983   0117CE  CFE3 FFD9          	movff	plusw1,fsr2l
 15984   0117D2  0EFB               	movlw	-5
 15985   0117D4  CFE3 FFDA          	movff	plusw1,fsr2h
 15986                           
 15987                           ;stkvar	_ciCon @ sp[(-4)+0]
 15988   0117D8  50E1               	movf	fsr1l,w,c
 15989   0117DA  0FFC               	addlw	-4
 15990   0117DC  6EE9               	movwf	fsr0l,c
 15991   0117DE  50E2               	movf	fsr1h,w,c
 15992   0117E0  6EEA               	movwf	fsr0h,c
 15993   0117E2  0EFF               	movlw	255
 15994   0117E4  22EA               	addwfc	fsr0h,f,c
 15995   0117E6  9CEF               	bcf	indf0,6,c
 15996   0117E8  ACDF               	btfss	indf2,6,c
 15997   0117EA  EFF8  F08B         	goto	u2375
 15998   0117EE  8CEF               	bsf	indf0,6,c
 15999   0117F0                     u2375:
 16000   0117F0                     
 16001                           ;can/can.c: 456:     ciCon.bF.WakeUpFilterEnable = config->WakeUpFilterEnable;
 16002                           ;stkvar	_config @ sp[(-4)+-2]
 16003   0117F0  0EFA               	movlw	-6
 16004   0117F2  CFE3 FFD9          	movff	plusw1,fsr2l
 16005   0117F6  0EFB               	movlw	-5
 16006   0117F8  CFE3 FFDA          	movff	plusw1,fsr2h
 16007                           
 16008                           ;stkvar	_ciCon @ sp[(-4)+0]
 16009   0117FC  0EFD               	movlw	253
 16010   0117FE  24E1               	addwf	fsr1l,w,c
 16011   011800  6EE9               	movwf	fsr0l,c
 16012   011802  0EFF               	movlw	255
 16013   011804  20E2               	addwfc	fsr1h,w,c
 16014   011806  6EEA               	movwf	fsr0h,c
 16015   011808  90EF               	bcf	indf0,0,c
 16016   01180A  AEDF               	btfss	indf2,7,c
 16017   01180C  EF09  F08C         	goto	u2385
 16018   011810  80EF               	bsf	indf0,0,c
 16019   011812                     u2385:
 16020   011812                     
 16021                           ;can/can.c: 457:     ciCon.bF.WakeUpFilterTime = config->WakeUpFilterTime;
 16022                           ;stkvar	_config @ sp[(-4)+-2]
 16023   011812  0EFA               	movlw	-6
 16024   011814  CFE3 F00B          	movff	plusw1,btemp+10
 16025   011818  0EFB               	movlw	-5
 16026   01181A  CFE3 F00C          	movff	plusw1,btemp+11
 16027   01181E  0E01               	movlw	1
 16028   011820  240B               	addwf	(btemp+10)^0,w,c
 16029   011822  6ED9               	movwf	fsr2l,c
 16030   011824  0E00               	movlw	0
 16031   011826  200C               	addwfc	(btemp+11)^0,w,c
 16032   011828  6EDA               	movwf	fsr2h,c
 16033   01182A  50DF               	movf	223,w,c
 16034   01182C  0B03               	andlw	3
 16035   01182E  6E0C               	movwf	(btemp+11)^0,c
 16036                           
 16037                           ;stkvar	_ciCon @ sp[(-4)+0]
 16038   011830  0EFD               	movlw	253
 16039   011832  24E1               	addwf	fsr1l,w,c
 16040   011834  6ED9               	movwf	fsr2l,c
 16041   011836  0EFF               	movlw	255
 16042   011838  20E2               	addwfc	fsr1h,w,c
 16043   01183A  6EDA               	movwf	fsr2h,c
 16044   01183C  460C               	rlncf	(btemp+11)^0,f,c
 16045   01183E  50DF               	movf	223,w,c
 16046   011840  180C               	xorwf	(btemp+11)^0,w,c
 16047   011842  0BF9               	andlw	-7
 16048   011844  180C               	xorwf	(btemp+11)^0,w,c
 16049   011846  6EDF               	movwf	223,c
 16050   011848                     
 16051                           ;can/can.c: 458:     ciCon.bF.BitRateSwitchDisable = config->BitRateSwitchDisable;
 16052                           ;stkvar	_config @ sp[(-4)+-2]
 16053   011848  0EFA               	movlw	-6
 16054   01184A  CFE3 F00B          	movff	plusw1,btemp+10
 16055   01184E  0EFB               	movlw	-5
 16056   011850  CFE3 F00C          	movff	plusw1,btemp+11
 16057   011854  0E01               	movlw	1
 16058   011856  240B               	addwf	(btemp+10)^0,w,c
 16059   011858  6ED9               	movwf	fsr2l,c
 16060   01185A  0E00               	movlw	0
 16061   01185C  200C               	addwfc	(btemp+11)^0,w,c
 16062   01185E  6EDA               	movwf	fsr2h,c
 16063                           
 16064                           ;stkvar	_ciCon @ sp[(-4)+0]
 16065   011860  0EFD               	movlw	253
 16066   011862  24E1               	addwf	fsr1l,w,c
 16067   011864  6EE9               	movwf	fsr0l,c
 16068   011866  0EFF               	movlw	255
 16069   011868  20E2               	addwfc	fsr1h,w,c
 16070   01186A  6EEA               	movwf	fsr0h,c
 16071   01186C  98EF               	bcf	indf0,4,c
 16072   01186E  A4DF               	btfss	indf2,2,c
 16073   011870  EF3B  F08C         	goto	u2395
 16074   011874  88EF               	bsf	indf0,4,c
 16075   011876                     u2395:
 16076   011876                     
 16077                           ;can/can.c: 459:     ciCon.bF.RestrictReTxAttempts = config->RestrictReTxAttempts;
 16078                           ;stkvar	_config @ sp[(-4)+-2]
 16079   011876  0EFA               	movlw	-6
 16080   011878  CFE3 F00B          	movff	plusw1,btemp+10
 16081   01187C  0EFB               	movlw	-5
 16082   01187E  CFE3 F00C          	movff	plusw1,btemp+11
 16083   011882  0E01               	movlw	1
 16084   011884  240B               	addwf	(btemp+10)^0,w,c
 16085   011886  6ED9               	movwf	fsr2l,c
 16086   011888  0E00               	movlw	0
 16087   01188A  200C               	addwfc	(btemp+11)^0,w,c
 16088   01188C  6EDA               	movwf	fsr2h,c
 16089                           
 16090                           ;stkvar	_ciCon @ sp[(-4)+0]
 16091   01188E  0EFE               	movlw	254
 16092   011890  24E1               	addwf	fsr1l,w,c
 16093   011892  6EE9               	movwf	fsr0l,c
 16094   011894  0EFF               	movlw	255
 16095   011896  20E2               	addwfc	fsr1h,w,c
 16096   011898  6EEA               	movwf	fsr0h,c
 16097   01189A  90EF               	bcf	indf0,0,c
 16098   01189C  A6DF               	btfss	indf2,3,c
 16099   01189E  EF52  F08C         	goto	u2405
 16100   0118A2  80EF               	bsf	indf0,0,c
 16101   0118A4                     u2405:
 16102   0118A4                     
 16103                           ;can/can.c: 460:     ciCon.bF.EsiInGatewayMode = config->EsiInGatewayMode;
 16104                           ;stkvar	_config @ sp[(-4)+-2]
 16105   0118A4  0EFA               	movlw	-6
 16106   0118A6  CFE3 F00B          	movff	plusw1,btemp+10
 16107   0118AA  0EFB               	movlw	-5
 16108   0118AC  CFE3 F00C          	movff	plusw1,btemp+11
 16109   0118B0  0E01               	movlw	1
 16110   0118B2  240B               	addwf	(btemp+10)^0,w,c
 16111   0118B4  6ED9               	movwf	fsr2l,c
 16112   0118B6  0E00               	movlw	0
 16113   0118B8  200C               	addwfc	(btemp+11)^0,w,c
 16114   0118BA  6EDA               	movwf	fsr2h,c
 16115                           
 16116                           ;stkvar	_ciCon @ sp[(-4)+0]
 16117   0118BC  0EFE               	movlw	254
 16118   0118BE  24E1               	addwf	fsr1l,w,c
 16119   0118C0  6EE9               	movwf	fsr0l,c
 16120   0118C2  0EFF               	movlw	255
 16121   0118C4  20E2               	addwfc	fsr1h,w,c
 16122   0118C6  6EEA               	movwf	fsr0h,c
 16123   0118C8  92EF               	bcf	indf0,1,c
 16124   0118CA  A8DF               	btfss	indf2,4,c
 16125   0118CC  EF69  F08C         	goto	u2415
 16126   0118D0  82EF               	bsf	indf0,1,c
 16127   0118D2                     u2415:
 16128   0118D2                     
 16129                           ;can/can.c: 461:     ciCon.bF.SystemErrorToListenOnly = config->SystemErrorToListenOnly;
 16130                           ;stkvar	_config @ sp[(-4)+-2]
 16131   0118D2  0EFA               	movlw	-6
 16132   0118D4  CFE3 F00B          	movff	plusw1,btemp+10
 16133   0118D8  0EFB               	movlw	-5
 16134   0118DA  CFE3 F00C          	movff	plusw1,btemp+11
 16135   0118DE  0E01               	movlw	1
 16136   0118E0  240B               	addwf	(btemp+10)^0,w,c
 16137   0118E2  6ED9               	movwf	fsr2l,c
 16138   0118E4  0E00               	movlw	0
 16139   0118E6  200C               	addwfc	(btemp+11)^0,w,c
 16140   0118E8  6EDA               	movwf	fsr2h,c
 16141                           
 16142                           ;stkvar	_ciCon @ sp[(-4)+0]
 16143   0118EA  0EFE               	movlw	254
 16144   0118EC  24E1               	addwf	fsr1l,w,c
 16145   0118EE  6EE9               	movwf	fsr0l,c
 16146   0118F0  0EFF               	movlw	255
 16147   0118F2  20E2               	addwfc	fsr1h,w,c
 16148   0118F4  6EEA               	movwf	fsr0h,c
 16149   0118F6  94EF               	bcf	indf0,2,c
 16150   0118F8  AADF               	btfss	indf2,5,c
 16151   0118FA  EF80  F08C         	goto	u2425
 16152   0118FE  84EF               	bsf	indf0,2,c
 16153   011900                     u2425:
 16154   011900                     
 16155                           ;can/can.c: 462:     ciCon.bF.StoreInTEF = config->StoreInTEF;
 16156                           ;stkvar	_config @ sp[(-4)+-2]
 16157   011900  0EFA               	movlw	-6
 16158   011902  CFE3 F00B          	movff	plusw1,btemp+10
 16159   011906  0EFB               	movlw	-5
 16160   011908  CFE3 F00C          	movff	plusw1,btemp+11
 16161   01190C  0E01               	movlw	1
 16162   01190E  240B               	addwf	(btemp+10)^0,w,c
 16163   011910  6ED9               	movwf	fsr2l,c
 16164   011912  0E00               	movlw	0
 16165   011914  200C               	addwfc	(btemp+11)^0,w,c
 16166   011916  6EDA               	movwf	fsr2h,c
 16167                           
 16168                           ;stkvar	_ciCon @ sp[(-4)+0]
 16169   011918  0EFE               	movlw	254
 16170   01191A  24E1               	addwf	fsr1l,w,c
 16171   01191C  6EE9               	movwf	fsr0l,c
 16172   01191E  0EFF               	movlw	255
 16173   011920  20E2               	addwfc	fsr1h,w,c
 16174   011922  6EEA               	movwf	fsr0h,c
 16175   011924  96EF               	bcf	indf0,3,c
 16176   011926  ACDF               	btfss	indf2,6,c
 16177   011928  EF97  F08C         	goto	u2435
 16178   01192C  86EF               	bsf	indf0,3,c
 16179   01192E                     u2435:
 16180   01192E                     
 16181                           ;can/can.c: 463:     ciCon.bF.TXQEnable = config->TXQEnable;
 16182                           ;stkvar	_config @ sp[(-4)+-2]
 16183   01192E  0EFA               	movlw	-6
 16184   011930  CFE3 F00B          	movff	plusw1,btemp+10
 16185   011934  0EFB               	movlw	-5
 16186   011936  CFE3 F00C          	movff	plusw1,btemp+11
 16187   01193A  0E01               	movlw	1
 16188   01193C  240B               	addwf	(btemp+10)^0,w,c
 16189   01193E  6ED9               	movwf	fsr2l,c
 16190   011940  0E00               	movlw	0
 16191   011942  200C               	addwfc	(btemp+11)^0,w,c
 16192   011944  6EDA               	movwf	fsr2h,c
 16193                           
 16194                           ;stkvar	_ciCon @ sp[(-4)+0]
 16195   011946  0EFE               	movlw	254
 16196   011948  24E1               	addwf	fsr1l,w,c
 16197   01194A  6EE9               	movwf	fsr0l,c
 16198   01194C  0EFF               	movlw	255
 16199   01194E  20E2               	addwfc	fsr1h,w,c
 16200   011950  6EEA               	movwf	fsr0h,c
 16201   011952  98EF               	bcf	indf0,4,c
 16202   011954  AEDF               	btfss	indf2,7,c
 16203   011956  EFAE  F08C         	goto	u2445
 16204   01195A  88EF               	bsf	indf0,4,c
 16205   01195C                     u2445:
 16206   01195C                     
 16207                           ;can/can.c: 464:     ciCon.bF.TxBandWidthSharing = config->TxBandWidthSharing;
 16208                           ;stkvar	_config @ sp[(-4)+-2]
 16209   01195C  0EFA               	movlw	-6
 16210   01195E  CFE3 F00B          	movff	plusw1,btemp+10
 16211   011962  0EFB               	movlw	-5
 16212   011964  CFE3 F00C          	movff	plusw1,btemp+11
 16213   011968  0E02               	movlw	2
 16214   01196A  240B               	addwf	(btemp+10)^0,w,c
 16215   01196C  6ED9               	movwf	fsr2l,c
 16216   01196E  0E00               	movlw	0
 16217   011970  200C               	addwfc	(btemp+11)^0,w,c
 16218   011972  6EDA               	movwf	fsr2h,c
 16219   011974  50DF               	movf	223,w,c
 16220   011976  0B0F               	andlw	15
 16221   011978  6E0C               	movwf	(btemp+11)^0,c
 16222                           
 16223                           ;stkvar	_ciCon @ sp[(-4)+0]
 16224   01197A  0EFF               	movlw	255
 16225   01197C  24E1               	addwf	fsr1l,w,c
 16226   01197E  6ED9               	movwf	fsr2l,c
 16227   011980  0EFF               	movlw	255
 16228   011982  20E2               	addwfc	fsr1h,w,c
 16229   011984  6EDA               	movwf	fsr2h,c
 16230   011986  3A0C               	swapf	(btemp+11)^0,f,c
 16231   011988  50DF               	movf	223,w,c
 16232   01198A  180C               	xorwf	(btemp+11)^0,w,c
 16233   01198C  0B0F               	andlw	-241
 16234   01198E  180C               	xorwf	(btemp+11)^0,w,c
 16235   011990  6EDF               	movwf	223,c
 16236   011992                     
 16237                           ;stkvar	_ciCon @ sp[(-4)+0]
 16238   011992  0EFC               	movlw	-4
 16239   011994  CFE3 FFE6          	movff	plusw1,postinc1
 16240   011998  CFE3 FFE6          	movff	plusw1,postinc1
 16241   01199C  CFE3 FFE6          	movff	plusw1,postinc1
 16242   0119A0  CFE3 FFE6          	movff	plusw1,postinc1
 16243   0119A4  0E00               	movlw	0
 16244   0119A6  6EE6               	movwf	postinc1,c
 16245   0119A8  0E00               	movlw	0
 16246   0119AA  6EE6               	movwf	postinc1,c
 16247   0119AC  ECED  F09A         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 16248   0119B0                     
 16249                           ; _DRV_CANFDSPI_Configure: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 2, argsize = 2, vargsize = 0
 16250   0119B0  0EFA               	movlw	250
 16251   0119B2  26E1               	addwf	fsr1l,f,c
 16252   0119B4  0EFF               	movlw	255
 16253   0119B6  22E2               	addwfc	fsr1h,f,c
 16254   0119B8  0012               	return		;funcret
 16255   0119BA                     __end_of_DRV_CANFDSPI_Configure:
 16256                           	callstack 0
 16257                           
 16258 ;; *************** function _DRV_CANFDSPI_BitTimeConfigureNominal40MHz *****************
 16259 ;; Defined at:
 16260 ;;		line 2825 in file "can/can.c"
 16261 ;; Parameters:    Size  Location     Type
 16262 ;;  bitTime         1  [STACK] enum E5607
 16263 ;; Auto vars:     Size  Location     Type
 16264 ;;  ciNbtcfg        4  [STACK] struct _REG_CiNBTCFG
 16265 ;;  spiTransferE    1    0        char 
 16266 ;; Return value:  Size  Location     Type
 16267 ;;                  1  [STACK] char 
 16268 ;; Registers used:
 16269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh,
      + tblptru, prodl, prodh
 16270 ;; Tracked objects:
 16271 ;;		On entry : 0/0
 16272 ;;		On exit  : 0/0
 16273 ;;		Unchanged: 0/0
 16274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16279 ;;Total ram usage:        0 bytes
 16280 ;; Hardware stack levels used: 1
 16281 ;; Hardware stack levels required when called: 9
 16282 ;; This function calls:
 16283 ;;		_DRV_CANFDSPI_WriteWord
 16284 ;; This function is called by:
 16285 ;;		_CanInit
 16286 ;; This function uses a reentrant model
 16287 ;;
 16288                           
 16289                           	psect	text66
 16290   011C18                     __ptext66:
 16291                           	callstack 0
 16292   011C18                     _DRV_CANFDSPI_BitTimeConfigureNominal40MHz:
 16293                           	callstack 0
 16294                           
 16295                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16296   011C18  52E6               	movf	postinc1,f,c
 16297   011C1A  52E6               	movf	postinc1,f,c
 16298   011C1C  52E6               	movf	postinc1,f,c
 16299   011C1E  52E6               	movf	postinc1,f,c
 16300   011C20                     
 16301                           ;can/can.c: 2829:     REG_CiNBTCFG ciNbtcfg;;can/can.c: 2831:     ciNbtcfg.word = canCon
      +                          trolResetValues[0x004 / 4];
 16302   011C20  0E91               	movlw	low (_canControlResetValues+4)
 16303   011C22  6EF6               	movwf	tblptrl,c
 16304   011C24  0EFF               	movlw	high (_canControlResetValues+4)
 16305   011C26  6EF7               	movwf	tblptrh,c
 16306   011C28                     	if	0	;tblptru may be non-zero
 16307   011C28                     	endif
 16308   011C28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16309   011C28  0E00               	movlw	low (__mediumconst shr (0+16))
 16310   011C2A  6EF8               	movwf	tblptru,c
 16311   011C2C                     	endif
 16312   011C2C  0009               	tblrd		*+
 16313   011C2E  CFF5 F009          	movff	tablat,btemp+8
 16314   011C32  0009               	tblrd		*+
 16315   011C34  CFF5 F00A          	movff	tablat,btemp+9
 16316   011C38  0009               	tblrd		*+
 16317   011C3A  CFF5 F00B          	movff	tablat,btemp+10
 16318   011C3E  0009               	tblrd		*+
 16319   011C40  CFF5 F00C          	movff	tablat,btemp+11
 16320                           
 16321                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16322   011C44  0EFC               	movlw	-4
 16323   011C46  C009  FFE3         	movff	btemp+8,plusw1
 16324   011C4A  0EFD               	movlw	-3
 16325   011C4C  C00A  FFE3         	movff	btemp+9,plusw1
 16326   011C50  0EFE               	movlw	-2
 16327   011C52  C00B  FFE3         	movff	btemp+10,plusw1
 16328   011C56  0EFF               	movlw	-1
 16329   011C58  C00C  FFE3         	movff	btemp+11,plusw1
 16330                           
 16331                           ;can/can.c: 2834:     switch (bitTime) {
 16332   011C5C  EFC8  F08E         	goto	l4681
 16333   011C60                     l665:
 16334   011C60                     l4661:
 16335                           
 16336                           ;can/can.c: 2844:             ciNbtcfg.bF.BRP = 0;
 16337                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16338   011C60  0EFF               	movlw	255
 16339   011C62  24E1               	addwf	fsr1l,w,c
 16340   011C64  6ED9               	movwf	fsr2l,c
 16341   011C66  0EFF               	movlw	255
 16342   011C68  20E2               	addwfc	fsr1h,w,c
 16343   011C6A  6EDA               	movwf	fsr2h,c
 16344   011C6C  6ADF               	clrf	indf2,c
 16345                           
 16346                           ;can/can.c: 2845:             ciNbtcfg.bF.TSEG1 = 62;
 16347                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16348   011C6E  0EFE               	movlw	254
 16349   011C70  24E1               	addwf	fsr1l,w,c
 16350   011C72  6ED9               	movwf	fsr2l,c
 16351   011C74  0EFF               	movlw	255
 16352   011C76  20E2               	addwfc	fsr1h,w,c
 16353   011C78  6EDA               	movwf	fsr2h,c
 16354   011C7A  0E3E               	movlw	62
 16355   011C7C  6EDF               	movwf	indf2,c
 16356                           
 16357                           ;can/can.c: 2846:             ciNbtcfg.bF.TSEG2 = 15;
 16358                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16359   011C7E  0EFD               	movlw	253
 16360   011C80  24E1               	addwf	fsr1l,w,c
 16361   011C82  6ED9               	movwf	fsr2l,c
 16362   011C84  0EFF               	movlw	255
 16363   011C86  20E2               	addwfc	fsr1h,w,c
 16364   011C88  6EDA               	movwf	fsr2h,c
 16365   011C8A  50DF               	movf	223,w,c
 16366   011C8C  0B80               	andlw	-128
 16367   011C8E  090F               	iorlw	15
 16368   011C90  6EDF               	movwf	223,c
 16369   011C92                     
 16370                           ;can/can.c: 2847:             ciNbtcfg.bF.SJW = 15;
 16371                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16372   011C92  50E1               	movf	fsr1l,w,c
 16373   011C94  0FFC               	addlw	-4
 16374   011C96  6ED9               	movwf	fsr2l,c
 16375   011C98  50E2               	movf	fsr1h,w,c
 16376   011C9A  6EDA               	movwf	fsr2h,c
 16377   011C9C  0EFF               	movlw	255
 16378   011C9E  22DA               	addwfc	fsr2h,f,c
 16379   011CA0  50DF               	movf	223,w,c
 16380   011CA2  0B80               	andlw	-128
 16381   011CA4  090F               	iorlw	15
 16382   011CA6  6EDF               	movwf	223,c
 16383                           
 16384                           ;can/can.c: 2848:             break;
 16385   011CA8  EF1E  F08F         	goto	l4683
 16386   011CAC                     l674:
 16387   011CAC                     l4665:
 16388                           
 16389                           ;can/can.c: 2858:             ciNbtcfg.bF.BRP = 0;
 16390                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16391   011CAC  0EFF               	movlw	255
 16392   011CAE  24E1               	addwf	fsr1l,w,c
 16393   011CB0  6ED9               	movwf	fsr2l,c
 16394   011CB2  0EFF               	movlw	255
 16395   011CB4  20E2               	addwfc	fsr1h,w,c
 16396   011CB6  6EDA               	movwf	fsr2h,c
 16397   011CB8  6ADF               	clrf	indf2,c
 16398                           
 16399                           ;can/can.c: 2859:             ciNbtcfg.bF.TSEG1 = 126;
 16400                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16401   011CBA  0EFE               	movlw	254
 16402   011CBC  24E1               	addwf	fsr1l,w,c
 16403   011CBE  6ED9               	movwf	fsr2l,c
 16404   011CC0  0EFF               	movlw	255
 16405   011CC2  20E2               	addwfc	fsr1h,w,c
 16406   011CC4  6EDA               	movwf	fsr2h,c
 16407   011CC6  0E7E               	movlw	126
 16408   011CC8  6EDF               	movwf	indf2,c
 16409                           
 16410                           ;can/can.c: 2860:             ciNbtcfg.bF.TSEG2 = 31;
 16411                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16412   011CCA  0EFD               	movlw	253
 16413   011CCC  24E1               	addwf	fsr1l,w,c
 16414   011CCE  6ED9               	movwf	fsr2l,c
 16415   011CD0  0EFF               	movlw	255
 16416   011CD2  20E2               	addwfc	fsr1h,w,c
 16417   011CD4  6EDA               	movwf	fsr2h,c
 16418   011CD6  50DF               	movf	223,w,c
 16419   011CD8  0B80               	andlw	-128
 16420   011CDA  091F               	iorlw	31
 16421   011CDC  6EDF               	movwf	223,c
 16422   011CDE                     
 16423                           ;can/can.c: 2861:             ciNbtcfg.bF.SJW = 31;
 16424                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16425   011CDE  50E1               	movf	fsr1l,w,c
 16426   011CE0  0FFC               	addlw	-4
 16427   011CE2  6ED9               	movwf	fsr2l,c
 16428   011CE4  50E2               	movf	fsr1h,w,c
 16429   011CE6  6EDA               	movwf	fsr2h,c
 16430   011CE8  0EFF               	movlw	255
 16431   011CEA  22DA               	addwfc	fsr2h,f,c
 16432   011CEC  50DF               	movf	223,w,c
 16433   011CEE  0B80               	andlw	-128
 16434   011CF0  091F               	iorlw	31
 16435   011CF2  6EDF               	movwf	223,c
 16436                           
 16437                           ;can/can.c: 2862:             break;
 16438   011CF4  EF1E  F08F         	goto	l4683
 16439   011CF8                     l4669:
 16440                           
 16441                           ;can/can.c: 2866:             ciNbtcfg.bF.BRP = 0;
 16442                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16443   011CF8  0EFF               	movlw	255
 16444   011CFA  24E1               	addwf	fsr1l,w,c
 16445   011CFC  6ED9               	movwf	fsr2l,c
 16446   011CFE  0EFF               	movlw	255
 16447   011D00  20E2               	addwfc	fsr1h,w,c
 16448   011D02  6EDA               	movwf	fsr2h,c
 16449   011D04  6ADF               	clrf	indf2,c
 16450                           
 16451                           ;can/can.c: 2867:             ciNbtcfg.bF.TSEG1 = 30;
 16452                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16453   011D06  0EFE               	movlw	254
 16454   011D08  24E1               	addwf	fsr1l,w,c
 16455   011D0A  6ED9               	movwf	fsr2l,c
 16456   011D0C  0EFF               	movlw	255
 16457   011D0E  20E2               	addwfc	fsr1h,w,c
 16458   011D10  6EDA               	movwf	fsr2h,c
 16459   011D12  0E1E               	movlw	30
 16460   011D14  6EDF               	movwf	indf2,c
 16461                           
 16462                           ;can/can.c: 2868:             ciNbtcfg.bF.TSEG2 = 7;
 16463                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16464   011D16  0EFD               	movlw	253
 16465   011D18  24E1               	addwf	fsr1l,w,c
 16466   011D1A  6ED9               	movwf	fsr2l,c
 16467   011D1C  0EFF               	movlw	255
 16468   011D1E  20E2               	addwfc	fsr1h,w,c
 16469   011D20  6EDA               	movwf	fsr2h,c
 16470   011D22  50DF               	movf	223,w,c
 16471   011D24  0B80               	andlw	-128
 16472   011D26  0907               	iorlw	7
 16473   011D28  6EDF               	movwf	223,c
 16474   011D2A                     
 16475                           ;can/can.c: 2869:             ciNbtcfg.bF.SJW = 7;
 16476                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16477   011D2A  50E1               	movf	fsr1l,w,c
 16478   011D2C  0FFC               	addlw	-4
 16479   011D2E  6ED9               	movwf	fsr2l,c
 16480   011D30  50E2               	movf	fsr1h,w,c
 16481   011D32  6EDA               	movwf	fsr2h,c
 16482   011D34  0EFF               	movlw	255
 16483   011D36  22DA               	addwfc	fsr2h,f,c
 16484   011D38  50DF               	movf	223,w,c
 16485   011D3A  0B80               	andlw	-128
 16486   011D3C  0907               	iorlw	7
 16487   011D3E  6EDF               	movwf	223,c
 16488                           
 16489                           ;can/can.c: 2870:             break;
 16490   011D40  EF1E  F08F         	goto	l4683
 16491   011D44                     l4673:
 16492                           
 16493                           ;can/can.c: 2873:             ciNbtcfg.bF.BRP = 0;
 16494                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16495   011D44  0EFF               	movlw	255
 16496   011D46  24E1               	addwf	fsr1l,w,c
 16497   011D48  6ED9               	movwf	fsr2l,c
 16498   011D4A  0EFF               	movlw	255
 16499   011D4C  20E2               	addwfc	fsr1h,w,c
 16500   011D4E  6EDA               	movwf	fsr2h,c
 16501   011D50  6ADF               	clrf	indf2,c
 16502                           
 16503                           ;can/can.c: 2874:             ciNbtcfg.bF.TSEG1 = 254;
 16504                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16505   011D52  0EFE               	movlw	254
 16506   011D54  24E1               	addwf	fsr1l,w,c
 16507   011D56  6ED9               	movwf	fsr2l,c
 16508   011D58  0EFF               	movlw	255
 16509   011D5A  20E2               	addwfc	fsr1h,w,c
 16510   011D5C  6EDA               	movwf	fsr2h,c
 16511   011D5E  0EFE               	movlw	254
 16512   011D60  6EDF               	movwf	indf2,c
 16513                           
 16514                           ;can/can.c: 2875:             ciNbtcfg.bF.TSEG2 = 63;
 16515                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16516   011D62  0EFD               	movlw	253
 16517   011D64  24E1               	addwf	fsr1l,w,c
 16518   011D66  6ED9               	movwf	fsr2l,c
 16519   011D68  0EFF               	movlw	255
 16520   011D6A  20E2               	addwfc	fsr1h,w,c
 16521   011D6C  6EDA               	movwf	fsr2h,c
 16522   011D6E  50DF               	movf	223,w,c
 16523   011D70  0B80               	andlw	-128
 16524   011D72  093F               	iorlw	63
 16525   011D74  6EDF               	movwf	223,c
 16526   011D76                     
 16527                           ;can/can.c: 2876:             ciNbtcfg.bF.SJW = 63;
 16528                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16529   011D76  50E1               	movf	fsr1l,w,c
 16530   011D78  0FFC               	addlw	-4
 16531   011D7A  6ED9               	movwf	fsr2l,c
 16532   011D7C  50E2               	movf	fsr1h,w,c
 16533   011D7E  6EDA               	movwf	fsr2h,c
 16534   011D80  0EFF               	movlw	255
 16535   011D82  22DA               	addwfc	fsr2h,f,c
 16536   011D84  50DF               	movf	223,w,c
 16537   011D86  0B80               	andlw	-128
 16538   011D88  093F               	iorlw	63
 16539   011D8A  6EDF               	movwf	223,c
 16540                           
 16541                           ;can/can.c: 2877:             break;
 16542   011D8C  EF1E  F08F         	goto	l4683
 16543   011D90                     l4681:
 16544                           
 16545                           ;stkvar	_bitTime @ sp[(-4)+-1]
 16546   011D90  0EFB               	movlw	-5
 16547   011D92  50E3               	movf	plusw1,w,c
 16548   011D94  6E0B               	movwf	(btemp+10)^0,c
 16549   011D96  6A0C               	clrf	(btemp+11)^0,c
 16550                           
 16551                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16552                           ; Switch size 1, requested type "simple"
 16553                           ; Number of cases is 1, Range of values is 0 to 0
 16554                           ; switch strategies available:
 16555                           ; Name         Instructions Cycles
 16556                           ; simple_byte            4     3 (average)
 16557                           ;	Chosen strategy is simple_byte
 16558   011D98  500C               	movf	(btemp+11)^0,w,c
 16559   011D9A  0A00               	xorlw	0	; case 0
 16560   011D9C  B4D8               	btfsc	status,2,c
 16561   011D9E  EFD3  F08E         	goto	l5517
 16562   011DA2  EF2D  F08F         	goto	l682
 16563   011DA6                     l5517:
 16564                           
 16565                           ; Switch size 1, requested type "simple"
 16566                           ; Number of cases is 18, Range of values is 0 to 17
 16567                           ; switch strategies available:
 16568                           ; Name         Instructions Cycles
 16569                           ; simple_byte           55    28 (average)
 16570                           ;	Chosen strategy is simple_byte
 16571   011DA6  500B               	movf	(btemp+10)^0,w,c
 16572   011DA8  0A00               	xorlw	0	; case 0
 16573   011DAA  B4D8               	btfsc	status,2,c
 16574   011DAC  EF30  F08E         	goto	l665
 16575   011DB0  0A01               	xorlw	1	; case 1
 16576   011DB2  B4D8               	btfsc	status,2,c
 16577   011DB4  EF30  F08E         	goto	l4661
 16578   011DB8  0A03               	xorlw	3	; case 2
 16579   011DBA  B4D8               	btfsc	status,2,c
 16580   011DBC  EF30  F08E         	goto	l4661
 16581   011DC0  0A01               	xorlw	1	; case 3
 16582   011DC2  B4D8               	btfsc	status,2,c
 16583   011DC4  EF30  F08E         	goto	l4661
 16584   011DC8  0A07               	xorlw	7	; case 4
 16585   011DCA  B4D8               	btfsc	status,2,c
 16586   011DCC  EF30  F08E         	goto	l4661
 16587   011DD0  0A01               	xorlw	1	; case 5
 16588   011DD2  B4D8               	btfsc	status,2,c
 16589   011DD4  EF30  F08E         	goto	l4661
 16590   011DD8  0A03               	xorlw	3	; case 6
 16591   011DDA  B4D8               	btfsc	status,2,c
 16592   011DDC  EF30  F08E         	goto	l4661
 16593   011DE0  0A01               	xorlw	1	; case 7
 16594   011DE2  B4D8               	btfsc	status,2,c
 16595   011DE4  EF30  F08E         	goto	l4661
 16596   011DE8  0A0F               	xorlw	15	; case 8
 16597   011DEA  B4D8               	btfsc	status,2,c
 16598   011DEC  EF56  F08E         	goto	l674
 16599   011DF0  0A01               	xorlw	1	; case 9
 16600   011DF2  B4D8               	btfsc	status,2,c
 16601   011DF4  EF56  F08E         	goto	l4665
 16602   011DF8  0A03               	xorlw	3	; case 10
 16603   011DFA  B4D8               	btfsc	status,2,c
 16604   011DFC  EF56  F08E         	goto	l4665
 16605   011E00  0A01               	xorlw	1	; case 11
 16606   011E02  B4D8               	btfsc	status,2,c
 16607   011E04  EF56  F08E         	goto	l4665
 16608   011E08  0A07               	xorlw	7	; case 12
 16609   011E0A  B4D8               	btfsc	status,2,c
 16610   011E0C  EF56  F08E         	goto	l4665
 16611   011E10  0A01               	xorlw	1	; case 13
 16612   011E12  B4D8               	btfsc	status,2,c
 16613   011E14  EF56  F08E         	goto	l4665
 16614   011E18  0A03               	xorlw	3	; case 14
 16615   011E1A  B4D8               	btfsc	status,2,c
 16616   011E1C  EF56  F08E         	goto	l4665
 16617   011E20  0A01               	xorlw	1	; case 15
 16618   011E22  B4D8               	btfsc	status,2,c
 16619   011E24  EF7C  F08E         	goto	l4669
 16620   011E28  0A1F               	xorlw	31	; case 16
 16621   011E2A  B4D8               	btfsc	status,2,c
 16622   011E2C  EF7C  F08E         	goto	l4669
 16623   011E30  0A01               	xorlw	1	; case 17
 16624   011E32  B4D8               	btfsc	status,2,c
 16625   011E34  EFA2  F08E         	goto	l4673
 16626   011E38  EF2D  F08F         	goto	l682
 16627   011E3C                     l4683:
 16628                           
 16629                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16630   011E3C  0EFC               	movlw	-4
 16631   011E3E  CFE3 FFE6          	movff	plusw1,postinc1
 16632   011E42  CFE3 FFE6          	movff	plusw1,postinc1
 16633   011E46  CFE3 FFE6          	movff	plusw1,postinc1
 16634   011E4A  CFE3 FFE6          	movff	plusw1,postinc1
 16635   011E4E  0E04               	movlw	4
 16636   011E50  6EE6               	movwf	postinc1,c
 16637   011E52  0E00               	movlw	0
 16638   011E54  6EE6               	movwf	postinc1,c
 16639   011E56  ECED  F09A         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 16640   011E5A                     l682:
 16641                           
 16642                           ; _DRV_CANFDSPI_BitTimeConfigureNominal40MHz: autosize = 4, savesize = 0, parsavesize = 
      +                          0, tempsize = 0 parsize = 1, argsize = 1, vargsize = 0
 16643   011E5A  0EFB               	movlw	251
 16644   011E5C  26E1               	addwf	fsr1l,f,c
 16645   011E5E  0EFF               	movlw	255
 16646   011E60  22E2               	addwfc	fsr1h,f,c
 16647   011E62  0012               	return		;funcret
 16648   011E64                     __end_of_DRV_CANFDSPI_BitTimeConfigureNominal40MHz:
 16649                           	callstack 0
 16650                           
 16651 ;; *************** function _DRV_CANFDSPI_WriteWord *****************
 16652 ;; Defined at:
 16653 ;;		line 310 in file "can/can.c"
 16654 ;; Parameters:    Size  Location     Type
 16655 ;;  address         2  [STACK] unsigned short 
 16656 ;;  txd             4  [STACK] unsigned long 
 16657 ;; Auto vars:     Size  Location     Type
 16658 ;;  spiTransferS    2  [STACK] unsigned short 
 16659 ;;  i               1  [STACK] unsigned char 
 16660 ;;  spiTransferE    1  [STACK] char 
 16661 ;; Return value:  Size  Location     Type
 16662 ;;                  1  [STACK] char 
 16663 ;; Registers used:
 16664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 16665 ;; Tracked objects:
 16666 ;;		On entry : 0/0
 16667 ;;		On exit  : 0/0
 16668 ;;		Unchanged: 0/0
 16669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16674 ;;Total ram usage:        0 bytes
 16675 ;; Hardware stack levels used: 1
 16676 ;; Hardware stack levels required when called: 8
 16677 ;; This function calls:
 16678 ;;		_SpiTransfer
 16679 ;; This function is called by:
 16680 ;;		_DRV_CANFDSPI_Configure
 16681 ;;		_DRV_CANFDSPI_TransmitChannelConfigure
 16682 ;;		_DRV_CANFDSPI_TransmitQueueConfigure
 16683 ;;		_DRV_CANFDSPI_FilterObjectConfigure
 16684 ;;		_DRV_CANFDSPI_FilterMaskConfigure
 16685 ;;		_DRV_CANFDSPI_ReceiveChannelConfigure
 16686 ;;		_DRV_CANFDSPI_TefConfigure
 16687 ;;		_DRV_CANFDSPI_TimeStampSet
 16688 ;;		_DRV_CANFDSPI_BitTimeConfigureNominal40MHz
 16689 ;; This function uses a reentrant model
 16690 ;;
 16691                           
 16692                           	psect	text67
 16693   0135DA                     __ptext67:
 16694                           	callstack 0
 16695   0135DA                     _DRV_CANFDSPI_WriteWord:
 16696                           	callstack 0
 16697                           
 16698                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16699   0135DA  52E6               	movf	postinc1,f,c
 16700   0135DC  52E6               	movf	postinc1,f,c
 16701   0135DE  52E6               	movf	postinc1,f,c
 16702   0135E0  52E6               	movf	postinc1,f,c
 16703   0135E2                     
 16704                           ;can/can.c: 310: int8_t DRV_CANFDSPI_WriteWord( uint16_t address,;can/can.c: 311:       
      +                            uint32_t txd);can/can.c: 312: {;can/can.c: 313:     uint8_t i;;can/can.c: 314:     uin
      +                          t16_t spiTransferSize = 6;
 16705   0135E2  0E06               	movlw	6
 16706   0135E4  6E0B               	movwf	(btemp+10)^0,c
 16707   0135E6  0E00               	movlw	0
 16708   0135E8  6E0C               	movwf	(btemp+11)^0,c
 16709                           
 16710                           ;stkvar	_spiTransferSize @ sp[(-4)+0]
 16711   0135EA  0EFC               	movlw	-4
 16712   0135EC  C00B  FFE3         	movff	btemp+10,plusw1
 16713   0135F0  0EFD               	movlw	-3
 16714   0135F2  C00C  FFE3         	movff	btemp+11,plusw1
 16715   0135F6                     
 16716                           ;can/can.c: 318:     spiTransmitBuffer[0] = (uint8_t) ((0x02 << 4) + ((address >> 8) & 0
      +                          xF));
 16717                           ;stkvar	_address @ sp[(-4)+-2]
 16718   0135F6  0EFB               	movlw	251
 16719   0135F8  24E1               	addwf	fsr1l,w,c
 16720   0135FA  6ED9               	movwf	fsr2l,c
 16721   0135FC  0EFF               	movlw	255
 16722   0135FE  20E2               	addwfc	fsr1h,w,c
 16723   013600  6EDA               	movwf	fsr2h,c
 16724   013602  50DF               	movf	indf2,w,c
 16725   013604  0B0F               	andlw	15
 16726   013606  0F20               	addlw	32
 16727   013608  0101               	movlb	1	; () banked
 16728   01360A  6F00               	movwf	_spiTransmitBuffer& (0+255),b
 16729   01360C                     
 16730                           ; BSR set to: 1
 16731                           ;can/can.c: 319:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
 16732                           ;stkvar	_address @ sp[(-4)+-2]
 16733   01360C  0EFA               	movlw	-6
 16734   01360E  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
 16735   013612                     
 16736                           ; BSR set to: 1
 16737                           ;can/can.c: 322:     for (i = 0; i < 4; i++) {
 16738                           ;stkvar	_i @ sp[(-4)+2]
 16739   013612  0EFE               	movlw	-2
 16740   013614  6AE3               	clrf	plusw1,c
 16741   013616                     l4537:
 16742                           
 16743                           ;can/can.c: 323:         spiTransmitBuffer[i + 2] = (uint8_t) ((txd >> (i * 8)) & 0xFF);
 16744                           ;stkvar	_i @ sp[(-4)+2]
 16745   013616  0EFE               	movlw	-2
 16746   013618  50E3               	movf	plusw1,w,c
 16747   01361A  6E0B               	movwf	(btemp+10)^0,c
 16748   01361C  6A0C               	clrf	(btemp+11)^0,c
 16749   01361E  0E02               	movlw	low (_spiTransmitBuffer+2)
 16750   013620  240B               	addwf	(btemp+10)^0,w,c
 16751   013622  6ED9               	movwf	fsr2l,c
 16752   013624  0E01               	movlw	high (_spiTransmitBuffer+2)
 16753   013626  200C               	addwfc	(btemp+11)^0,w,c
 16754   013628  6EDA               	movwf	fsr2h,c
 16755                           
 16756                           ;stkvar	_txd @ sp[(-4)+-6]
 16757   01362A  0EF6               	movlw	-10
 16758   01362C  CFE3 F009          	movff	plusw1,btemp+8
 16759   013630  0EF7               	movlw	-9
 16760   013632  CFE3 F00A          	movff	plusw1,btemp+9
 16761   013636  0EF8               	movlw	-8
 16762   013638  CFE3 F00B          	movff	plusw1,btemp+10
 16763   01363C  0EF9               	movlw	-7
 16764   01363E  CFE3 F00C          	movff	plusw1,btemp+11
 16765                           
 16766                           ;stkvar	_i @ sp[(-4)+2]
 16767   013642  0EFE               	movlw	-2
 16768   013644  50E3               	movf	plusw1,w,c
 16769   013646  0D08               	mullw	8
 16770   013648  50F3               	movf	243,w,c
 16771   01364A  2AE8               	incf	wreg,f,c
 16772   01364C  EF2D  F09B         	goto	u2210
 16773   013650                     u2215:
 16774   013650  90D8               	bcf	status,0,c
 16775   013652  320C               	rrcf	(btemp+11)^0,f,c
 16776   013654  320B               	rrcf	(btemp+10)^0,f,c
 16777   013656  320A               	rrcf	(btemp+9)^0,f,c
 16778   013658  3209               	rrcf	(btemp+8)^0,f,c
 16779   01365A                     u2210:
 16780   01365A  2EE8               	decfsz	wreg,f,c
 16781   01365C  EF28  F09B         	goto	u2215
 16782   013660  5009               	movf	(btemp+8)^0,w,c
 16783   013662  6EDF               	movwf	indf2,c
 16784   013664                     
 16785                           ;can/can.c: 324:     }
 16786                           ;stkvar	_i @ sp[(-4)+2]
 16787   013664  0EFE               	movlw	-2
 16788   013666  2AE3               	incf	plusw1,f,c
 16789   013668                     
 16790                           ;stkvar	_i @ sp[(-4)+2]
 16791   013668  0EFE               	movlw	-2
 16792   01366A  CFE3 F001          	movff	plusw1,btemp
 16793   01366E  0E03               	movlw	3
 16794   013670  6401               	cpfsgt	btemp^0,c
 16795   013672  EF3D  F09B         	goto	u2221
 16796   013676  EF3F  F09B         	goto	u2220
 16797   01367A                     u2221:
 16798   01367A  EF0B  F09B         	goto	l4537
 16799   01367E                     u2220:
 16800   01367E                     
 16801                           ;can/can.c: 326:     spiTransferError = SpiTransfer( spiTransmitBuffer, spiReceiveBuffer
      +                          , spiTransferSize);
 16802                           ;stkvar	_spiTransferSize @ sp[(-4)+0]
 16803   01367E  0EFC               	movlw	-4
 16804   013680  CFE3 FFE6          	movff	plusw1,postinc1
 16805   013684  CFE3 FFE6          	movff	plusw1,postinc1
 16806   013688  0E00               	movlw	low _spiReceiveBuffer
 16807   01368A  6EE6               	movwf	postinc1,c
 16808   01368C  0E02               	movlw	high _spiReceiveBuffer
 16809   01368E  6EE6               	movwf	postinc1,c
 16810   013690  0E00               	movlw	low _spiTransmitBuffer
 16811   013692  6EE6               	movwf	postinc1,c
 16812   013694  0E01               	movlw	high _spiTransmitBuffer
 16813   013696  6EE6               	movwf	postinc1,c
 16814   013698  ECF2  F09C         	call	_SpiTransfer	;wreg free
 16815                           
 16816                           ;stkvar	_spiTransferError @ sp[(-4)+3]
 16817   01369C  0EFF               	movlw	-1
 16818   01369E  C001  FFE3         	movff	btemp,plusw1
 16819   0136A2                     
 16820                           ;can/can.c: 328:     return spiTransferError;
 16821                           ;stkvar	_spiTransferError @ sp[(-4)+3]
 16822   0136A2  0EFF               	movlw	-1
 16823   0136A4  CFE3 F001          	movff	plusw1,btemp
 16824   0136A8                     
 16825                           ; _DRV_CANFDSPI_WriteWord: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 6, argsize = 6, vargsize = 0
 16826   0136A8  0EF6               	movlw	246
 16827   0136AA  26E1               	addwf	fsr1l,f,c
 16828   0136AC  0EFF               	movlw	255
 16829   0136AE  22E2               	addwfc	fsr1h,f,c
 16830   0136B0  0012               	return		;funcret
 16831   0136B2                     __end_of_DRV_CANFDSPI_WriteWord:
 16832                           	callstack 0
 16833                           
 16834 ;; *************** function _SpiTransfer *****************
 16835 ;; Defined at:
 16836 ;;		line 132 in file "can/can.c"
 16837 ;; Parameters:    Size  Location     Type
 16838 ;;  txPtr           2  [STACK] PTR unsigned char 
 16839 ;;		 -> spiTransmitBuffer(200), 
 16840 ;;  rxPtr           2  [STACK] PTR unsigned char 
 16841 ;;		 -> spiReceiveBuffer(200), 
 16842 ;;  size            2  [STACK] unsigned short 
 16843 ;; Auto vars:     Size  Location     Type
 16844 ;;  dummy           1  [STACK] volatile unsigned char 
 16845 ;; Return value:  Size  Location     Type
 16846 ;;                  1  [STACK] char 
 16847 ;; Registers used:
 16848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 16849 ;; Tracked objects:
 16850 ;;		On entry : 0/1
 16851 ;;		On exit  : 0/0
 16852 ;;		Unchanged: 0/0
 16853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16858 ;;Total ram usage:        0 bytes
 16859 ;; Hardware stack levels used: 1
 16860 ;; Hardware stack levels required when called: 7
 16861 ;; This function calls:
 16862 ;;		Nothing
 16863 ;; This function is called by:
 16864 ;;		_DRV_CANFDSPI_Reset
 16865 ;;		_DRV_CANFDSPI_ReadByte
 16866 ;;		_DRV_CANFDSPI_WriteByte
 16867 ;;		_DRV_CANFDSPI_WriteWord
 16868 ;;		_DRV_CANFDSPI_WriteHalfWord
 16869 ;;		_DRV_CANFDSPI_ReadByteArray
 16870 ;;		_DRV_CANFDSPI_WriteByteArray
 16871 ;;		_DRV_CANFDSPI_ReadWordArray
 16872 ;; This function uses a reentrant model
 16873 ;;
 16874                           
 16875                           	psect	text68
 16876   0139E4                     __ptext68:
 16877                           	callstack 0
 16878   0139E4                     _SpiTransfer:
 16879                           	callstack 0
 16880                           
 16881                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16882   0139E4  52E6               	movf	postinc1,f,c
 16883   0139E6                     
 16884                           ;can/can.c: 132: static int8_t SpiTransfer(uint8_t * txPtr, uint8_t * rxPtr, uint16_t si
      +                          ze);can/can.c: 133: {;can/can.c: 134:   volatile uint8_t dummy;;can/can.c: 135:   LATGbi
      +                          ts.LATG4 = 0;
 16885   0139E6  988F               	bcf	143,4,c	;volatile
 16886                           
 16887                           ;can/can.c: 136:   while(size > 0)
 16888   0139E8  EF3F  F09D         	goto	l3903
 16889   0139EC                     l145:
 16890                           
 16891                           ;can/can.c: 137:   {;can/can.c: 138:     SSP2STATbits.BF = 0;
 16892   0139EC  9064               	bcf	100,0,c	;volatile
 16893   0139EE                     
 16894                           ;can/can.c: 139:     dummy = SSP2BUF;
 16895                           ;stkvar	_dummy @ sp[(-1)+0]
 16896   0139EE  0EFF               	movlw	-1
 16897   0139F0  CF66 FFE3          	movff	3942,plusw1	;volatile
 16898   0139F4                     
 16899                           ;can/can.c: 140:     SSP2BUF = *txPtr;
 16900                           ;stkvar	_txPtr @ sp[(-1)+-2]
 16901   0139F4  0EFD               	movlw	-3
 16902   0139F6  CFE3 FFD9          	movff	plusw1,fsr2l
 16903   0139FA  0EFE               	movlw	-2
 16904   0139FC  CFE3 FFDA          	movff	plusw1,fsr2h
 16905   013A00  50DF               	movf	indf2,w,c
 16906   013A02  6E66               	movwf	102,c	;volatile
 16907   013A04                     l146:
 16908   013A04  A064               	btfss	100,0,c	;volatile
 16909   013A06  EF07  F09D         	goto	u1571
 16910   013A0A  EF09  F09D         	goto	u1570
 16911   013A0E                     u1571:
 16912   013A0E  EF02  F09D         	goto	l146
 16913   013A12                     u1570:
 16914   013A12                     
 16915                           ;can/can.c: 142:     *rxPtr = SSP2BUF;
 16916                           ;stkvar	_rxPtr @ sp[(-1)+-4]
 16917   013A12  0EFB               	movlw	-5
 16918   013A14  CFE3 FFD9          	movff	plusw1,fsr2l
 16919   013A18  0EFC               	movlw	-4
 16920   013A1A  CFE3 FFDA          	movff	plusw1,fsr2h
 16921   013A1E  CF66 FFDF          	movff	3942,indf2	;volatile
 16922   013A22                     
 16923                           ;can/can.c: 143:     txPtr++;
 16924                           ;stkvar	_txPtr @ sp[(-1)+-2]
 16925   013A22  0EFD               	movlw	-3
 16926   013A24  50E3               	movf	plusw1,w,c
 16927   013A26  0F01               	addlw	1
 16928   013A28  6E01               	movwf	btemp^0,c
 16929   013A2A  0EFD               	movlw	-3
 16930   013A2C  C001  FFE3         	movff	btemp,plusw1
 16931   013A30  6A01               	clrf	btemp^0,c
 16932   013A32  0EFE               	movlw	-2
 16933   013A34  50E3               	movf	plusw1,w,c
 16934   013A36  2001               	addwfc	btemp^0,w,c
 16935   013A38  6E01               	movwf	btemp^0,c
 16936   013A3A  0EFE               	movlw	-2
 16937   013A3C  C001  FFE3         	movff	btemp,plusw1
 16938   013A40                     
 16939                           ;can/can.c: 144:     rxPtr++;
 16940                           ;stkvar	_rxPtr @ sp[(-1)+-4]
 16941   013A40  0EFB               	movlw	-5
 16942   013A42  50E3               	movf	plusw1,w,c
 16943   013A44  0F01               	addlw	1
 16944   013A46  6E01               	movwf	btemp^0,c
 16945   013A48  0EFB               	movlw	-5
 16946   013A4A  C001  FFE3         	movff	btemp,plusw1
 16947   013A4E  6A01               	clrf	btemp^0,c
 16948   013A50  0EFC               	movlw	-4
 16949   013A52  50E3               	movf	plusw1,w,c
 16950   013A54  2001               	addwfc	btemp^0,w,c
 16951   013A56  6E01               	movwf	btemp^0,c
 16952   013A58  0EFC               	movlw	-4
 16953   013A5A  C001  FFE3         	movff	btemp,plusw1
 16954   013A5E                     
 16955                           ;can/can.c: 145:     size--;
 16956                           ;stkvar	_size @ sp[(-1)+-6]
 16957   013A5E  0EF9               	movlw	-7
 16958   013A60  CFE3 F001          	movff	plusw1,btemp
 16959   013A64  0E01               	movlw	1
 16960   013A66  5E01               	subwf	btemp^0,f,c
 16961   013A68  0EF9               	movlw	-7
 16962   013A6A  C001  FFE3         	movff	btemp,plusw1
 16963   013A6E  0EFA               	movlw	-6
 16964   013A70  CFE3 F001          	movff	plusw1,btemp
 16965   013A74  0E00               	movlw	0
 16966   013A76  5A01               	subwfb	btemp^0,f,c
 16967   013A78  0EFA               	movlw	-6
 16968   013A7A  C001  FFE3         	movff	btemp,plusw1
 16969   013A7E                     l3903:
 16970                           
 16971                           ;can/can.c: 136:   while(size > 0)
 16972                           ;stkvar	_size @ sp[(-1)+-6]
 16973   013A7E  0EF9               	movlw	-7
 16974   013A80  CFE3 F001          	movff	plusw1,btemp
 16975   013A84  0EFA               	movlw	-6
 16976   013A86  50E3               	movf	plusw1,w,c
 16977   013A88  1001               	iorwf	btemp^0,w,c
 16978   013A8A  A4D8               	btfss	status,2,c
 16979   013A8C  EF4A  F09D         	goto	u1581
 16980   013A90  EF4C  F09D         	goto	u1580
 16981   013A94                     u1581:
 16982   013A94  EFF6  F09C         	goto	l145
 16983   013A98                     u1580:
 16984   013A98                     
 16985                           ;can/can.c: 147:   LATGbits.LATG4 = 1;
 16986   013A98  888F               	bsf	143,4,c	;volatile
 16987   013A9A                     
 16988                           ;can/can.c: 148:   return 0;
 16989   013A9A  0E00               	movlw	0
 16990   013A9C  6E01               	movwf	btemp^0,c
 16991   013A9E                     
 16992                           ; _SpiTransfer: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 16993   013A9E  0EF9               	movlw	249
 16994   013AA0  26E1               	addwf	fsr1l,f,c
 16995   013AA2  0EFF               	movlw	255
 16996   013AA4  22E2               	addwfc	fsr1h,f,c
 16997   013AA6  0012               	return		;funcret
 16998   013AA8                     __end_of_SpiTransfer:
 16999                           	callstack 0
 17000                           
 17001 ;; *************** function _INTERRUPT_InterruptManager *****************
 17002 ;; Defined at:
 17003 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 17004 ;; Parameters:    Size  Location     Type
 17005 ;;		None
 17006 ;; Auto vars:     Size  Location     Type
 17007 ;;		None
 17008 ;; Return value:  Size  Location     Type
 17009 ;;                  1    wreg      void 
 17010 ;; Registers used:
 17011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, prodl, prodh
 17012 ;; Tracked objects:
 17013 ;;		On entry : 0/0
 17014 ;;		On exit  : 0/0
 17015 ;;		Unchanged: 0/0
 17016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17019 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17020 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17021 ;;Total ram usage:       16 bytes
 17022 ;; Hardware stack levels used: 1
 17023 ;; Hardware stack levels required when called: 6
 17024 ;; This function calls:
 17025 ;;		_TMR0_ISR
 17026 ;; This function is called by:
 17027 ;;		Interrupt level 2
 17028 ;; This function uses a non-reentrant model
 17029 ;;
 17030                           
 17031                           	psect	intcode
 17032   000008                     __pintcode:
 17033                           	callstack 0
 17034   000008                     _INTERRUPT_InterruptManager:
 17035                           	callstack 16
 17036                           
 17037                           ;incstack = 0
 17038   000008  CFFA F040          	movff	pclath,??_INTERRUPT_InterruptManager
 17039   00000C  CFFB F041          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 17040   000010  CFE9 F042          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 17041   000014  CFEA F043          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 17042   000018  CFE1 F044          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 17043   00001C  CFE2 F045          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 17044   000020  CFD9 F046          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 17045   000024  CFDA F047          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 17046   000028  CFF3 F048          	movff	prodl,??_INTERRUPT_InterruptManager+8
 17047   00002C  CFF4 F049          	movff	prodh,??_INTERRUPT_InterruptManager+9
 17048   000030  C001  F04A         	movff	btemp,??_INTERRUPT_InterruptManager+10
 17049   000034  C002  F04B         	movff	btemp+1,??_INTERRUPT_InterruptManager+11
 17050   000038  C009  F04C         	movff	btemp+8,??_INTERRUPT_InterruptManager+12
 17051   00003C  C00A  F04D         	movff	btemp+9,??_INTERRUPT_InterruptManager+13
 17052   000040  C00B  F04E         	movff	btemp+10,??_INTERRUPT_InterruptManager+14
 17053   000044  C00C  F04F         	movff	btemp+11,??_INTERRUPT_InterruptManager+15
 17054   000048  EE19  F031         	lfsr	1,___inthi_sp
 17055   00004C                     
 17056                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 17057   00004C  AAF2               	btfss	242,5,c	;volatile
 17058   00004E  EF2B  F000         	goto	i2u301_41
 17059   000052  EF2D  F000         	goto	i2u301_40
 17060   000056                     i2u301_41:
 17061   000056  EF36  F000         	goto	i2l1039
 17062   00005A                     i2u301_40:
 17063   00005A  A4F2               	btfss	242,2,c	;volatile
 17064   00005C  EF32  F000         	goto	i2u302_41
 17065   000060  EF34  F000         	goto	i2u302_40
 17066   000064                     i2u302_41:
 17067   000064  EF36  F000         	goto	i2l1039
 17068   000068                     i2u302_40:
 17069   000068                     
 17070                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 17071   000068  ECC8  F0A3         	call	_TMR0_ISR	;wreg free
 17072   00006C                     i2l1039:
 17073   00006C  C04F  F00C         	movff	??_INTERRUPT_InterruptManager+15,btemp+11
 17074   000070  C04E  F00B         	movff	??_INTERRUPT_InterruptManager+14,btemp+10
 17075   000074  C04D  F00A         	movff	??_INTERRUPT_InterruptManager+13,btemp+9
 17076   000078  C04C  F009         	movff	??_INTERRUPT_InterruptManager+12,btemp+8
 17077   00007C  C04B  F002         	movff	??_INTERRUPT_InterruptManager+11,btemp+1
 17078   000080  C04A  F001         	movff	??_INTERRUPT_InterruptManager+10,btemp
 17079   000084  C049  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 17080   000088  C048  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 17081   00008C  C047  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 17082   000090  C046  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 17083   000094  C045  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 17084   000098  C044  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 17085   00009C  C043  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 17086   0000A0  C042  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 17087   0000A4  C041  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 17088   0000A8  C040  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 17089   0000AC  0011               	retfie		f
 17090   0000AE                     __end_of_INTERRUPT_InterruptManager:
 17091                           	callstack 0
 17092                           
 17093 ;; *************** function _TMR0_ISR *****************
 17094 ;; Defined at:
 17095 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 17096 ;; Parameters:    Size  Location     Type
 17097 ;;		None
 17098 ;; Auto vars:     Size  Location     Type
 17099 ;;		None
 17100 ;; Return value:  Size  Location     Type
 17101 ;;                  1  [STACK] void 
 17102 ;; Registers used:
 17103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, prodl, prodh
 17104 ;; Tracked objects:
 17105 ;;		On entry : 0/0
 17106 ;;		On exit  : 0/0
 17107 ;;		Unchanged: 0/0
 17108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17113 ;;Total ram usage:        0 bytes
 17114 ;; Hardware stack levels used: 1
 17115 ;; Hardware stack levels required when called: 5
 17116 ;; This function calls:
 17117 ;;		_TMR0_CallBack
 17118 ;; This function is called by:
 17119 ;;		_INTERRUPT_InterruptManager
 17120 ;; This function uses a reentrant model
 17121 ;;
 17122                           
 17123                           	psect	text70
 17124   014790                     __ptext70:
 17125                           	callstack 0
 17126   014790                     _TMR0_ISR:
 17127                           	callstack 16
 17128   014790                     
 17129                           ;mcc_generated_files/tmr0.c: 138:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 141:     INTCONbits.TMR0IF = 0;
 17130   014790  94F2               	bcf	242,2,c	;volatile
 17131                           
 17132                           ;mcc_generated_files/tmr0.c: 145:     TMR0H = timer0ReloadVal >> 8;
 17133   014792  C038  FFD7         	movff	_timer0ReloadVal+1,4055	;volatile
 17134                           
 17135                           ;mcc_generated_files/tmr0.c: 146:     TMR0L = (uint8_t) timer0ReloadVal;
 17136   014796  C037  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 17137   01479A                     
 17138                           ;mcc_generated_files/tmr0.c: 147:     carState.ms20Elapsed = 1;
 17139   01479A  0E01               	movlw	1
 17140   01479C  0100               	movlb	0	; () banked
 17141   01479E  6F76               	movwf	(_carState+22)& (0+255),b
 17142   0147A0                     
 17143                           ; BSR set to: 0
 17144                           ;mcc_generated_files/tmr0.c: 150:     if (++CountCallBack >= 1)
 17145   0147A0  4A35               	infsnz	TMR0_ISR@CountCallBack^0,f,c	;volatile
 17146   0147A2  2A36               	incf	(TMR0_ISR@CountCallBack+1)^0,f,c	;volatile
 17147   0147A4  5035               	movf	TMR0_ISR@CountCallBack^0,w,c	;volatile
 17148   0147A6  1036               	iorwf	(TMR0_ISR@CountCallBack+1)^0,w,c	;volatile
 17149   0147A8  B4D8               	btfsc	status,2,c
 17150   0147AA  EFD9  F0A3         	goto	u292_41
 17151   0147AE  EFDB  F0A3         	goto	u292_40
 17152   0147B2                     u292_41:
 17153   0147B2  EFDF  F0A3         	goto	l1085
 17154   0147B6                     u292_40:
 17155   0147B6                     
 17156                           ; BSR set to: 0
 17157                           ;mcc_generated_files/tmr0.c: 151:     {;mcc_generated_files/tmr0.c: 153:         TMR0_Ca
      +                          llBack();
 17158   0147B6  ECAD  F0A3         	call	_TMR0_CallBack	;wreg free
 17159   0147BA                     
 17160                           ;mcc_generated_files/tmr0.c: 156:         CountCallBack = 0;
 17161   0147BA  6A35               	clrf	TMR0_ISR@CountCallBack^0,c	;volatile
 17162   0147BC  6A36               	clrf	(TMR0_ISR@CountCallBack+1)^0,c	;volatile
 17163   0147BE                     l1085:
 17164                           
 17165                           ; _TMR0_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 17166   0147BE  0012               	return		;funcret
 17167   0147C0                     __end_of_TMR0_ISR:
 17168                           	callstack 0
 17169                           
 17170 ;; *************** function _TMR0_CallBack *****************
 17171 ;; Defined at:
 17172 ;;		line 162 in file "mcc_generated_files/tmr0.c"
 17173 ;; Parameters:    Size  Location     Type
 17174 ;;		None
 17175 ;; Auto vars:     Size  Location     Type
 17176 ;;		None
 17177 ;; Return value:  Size  Location     Type
 17178 ;;                  1  [STACK] void 
 17179 ;; Registers used:
 17180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, prodl, prodh
 17181 ;; Tracked objects:
 17182 ;;		On entry : 3F/0
 17183 ;;		On exit  : 0/0
 17184 ;;		Unchanged: 0/0
 17185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17190 ;;Total ram usage:        0 bytes
 17191 ;; Hardware stack levels used: 1
 17192 ;; Hardware stack levels required when called: 4
 17193 ;; This function calls:
 17194 ;;		NULL
 17195 ;;		_TMR0_DefaultInterruptHandler
 17196 ;;		_XF_decrementAndQueueTimers
 17197 ;; This function is called by:
 17198 ;;		_TMR0_ISR
 17199 ;; This function uses a reentrant model
 17200 ;;
 17201                           
 17202                           	psect	text71
 17203   01475A                     __ptext71:
 17204                           	callstack 0
 17205   01475A                     _TMR0_CallBack:
 17206                           	callstack 16
 17207   01475A                     
 17208                           ;mcc_generated_files/tmr0.c: 165:     carState.secondElapsed=1;
 17209   01475A  0E01               	movlw	1
 17210   01475C  0100               	movlb	0	; () banked
 17211   01475E  6F75               	movwf	(_carState+21)& (0+255),b
 17212   014760                     
 17213                           ; BSR set to: 0
 17214                           ;mcc_generated_files/tmr0.c: 166:     if(TMR0_InterruptHandler)
 17215   014760  5050               	movf	_TMR0_InterruptHandler^0,w,c
 17216   014762  1051               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
 17217   014764  1052               	iorwf	(_TMR0_InterruptHandler+2)^0,w,c
 17218   014766  B4D8               	btfsc	status,2,c
 17219   014768  EFB8  F0A3         	goto	u272_41
 17220   01476C  EFBA  F0A3         	goto	u272_40
 17221   014770                     u272_41:
 17222   014770  EFC7  F0A3         	goto	l1089
 17223   014774                     u272_40:
 17224   014774                     
 17225                           ; BSR set to: 0
 17226                           ;mcc_generated_files/tmr0.c: 167:     {;mcc_generated_files/tmr0.c: 168:         TMR0_In
      +                          terruptHandler();
 17227   014774  D802               	call	u273_48
 17228   014776  EFC7  F0A3         	goto	u273_49
 17229   01477A                     u273_48:
 17230   01477A  0005               	push	
 17231   01477C  6EFA               	movwf	pclath,c
 17232   01477E  5050               	movf	_TMR0_InterruptHandler^0,w,c
 17233   014780  6EFD               	movwf	tosl,c
 17234   014782  5051               	movf	(_TMR0_InterruptHandler+1)^0,w,c
 17235   014784  6EFE               	movwf	tosh,c
 17236   014786  5052               	movf	(_TMR0_InterruptHandler+2)^0,w,c
 17237   014788  6EFF               	movwf	tosu,c
 17238   01478A  50FA               	movf	pclath,w,c
 17239   01478C  0012               	return		;indir
 17240   01478E                     u273_49:
 17241   01478E                     l1089:
 17242                           
 17243                           ; _TMR0_CallBack: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 17244   01478E  0012               	return		;funcret
 17245   014790                     __end_of_TMR0_CallBack:
 17246                           	callstack 0
 17247                           
 17248 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17249 ;; Defined at:
 17250 ;;		line 176 in file "mcc_generated_files/tmr0.c"
 17251 ;; Parameters:    Size  Location     Type
 17252 ;;		None
 17253 ;; Auto vars:     Size  Location     Type
 17254 ;;		None
 17255 ;; Return value:  Size  Location     Type
 17256 ;;                  1  [STACK] void 
 17257 ;; Registers used:
 17258 ;;		None
 17259 ;; Tracked objects:
 17260 ;;		On entry : 3F/0
 17261 ;;		On exit  : 0/0
 17262 ;;		Unchanged: 0/0
 17263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17268 ;;Total ram usage:        0 bytes
 17269 ;; Hardware stack levels used: 1
 17270 ;; This function calls:
 17271 ;;		Nothing
 17272 ;; This function is called by:
 17273 ;;		_TMR0_Initialize
 17274 ;;		_TMR0_CallBack
 17275 ;; This function uses a reentrant model
 17276 ;;
 17277                           
 17278                           	psect	text72
 17279   01492E                     __ptext72:
 17280                           	callstack 0
 17281   01492E                     _TMR0_DefaultInterruptHandler:
 17282                           	callstack 19
 17283   01492E                     
 17284                           ; _TMR0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17285   01492E  0012               	return		;funcret
 17286   014930                     __end_of_TMR0_DefaultInterruptHandler:
 17287                           	callstack 0
 17288                           
 17289 ;; *************** function _XF_decrementAndQueueTimers *****************
 17290 ;; Defined at:
 17291 ;;		line 217 in file "xf/xf.c"
 17292 ;; Parameters:    Size  Location     Type
 17293 ;;		None
 17294 ;; Auto vars:     Size  Location     Type
 17295 ;;  dummy           1  [STACK] unsigned char 
 17296 ;;  i               1  [STACK] unsigned char 
 17297 ;; Return value:  Size  Location     Type
 17298 ;;                  1  [STACK] void 
 17299 ;; Registers used:
 17300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
 17301 ;; Tracked objects:
 17302 ;;		On entry : 3F/0
 17303 ;;		On exit  : 0/0
 17304 ;;		Unchanged: 0/0
 17305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17310 ;;Total ram usage:        0 bytes
 17311 ;; Hardware stack levels used: 1
 17312 ;; Hardware stack levels required when called: 3
 17313 ;; This function calls:
 17314 ;;		_XF_pushEvent
 17315 ;;		_XF_unscheduleTimer
 17316 ;; This function is called by:
 17317 ;;		_main
 17318 ;;		_TMR0_CallBack
 17319 ;; This function uses a reentrant model
 17320 ;;
 17321                           
 17322                           	psect	text73
 17323   013304                     __ptext73:
 17324                           	callstack 0
 17325   013304                     _XF_decrementAndQueueTimers:
 17326                           	callstack 0
 17327                           
 17328                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17329   013304  52E6               	movf	postinc1,f,c
 17330   013306  52E6               	movf	postinc1,f,c
 17331   013308                     
 17332                           ;xf/xf.c: 219:     uint8_t i;;xf/xf.c: 220:     for (i=0; i<12; i++)
 17333                           ;stkvar	_i @ sp[(-2)+1]
 17334   013308  0EFF               	movlw	-1
 17335   01330A  6AE3               	clrf	plusw1,c
 17336   01330C                     l4585:
 17337                           
 17338                           ;xf/xf.c: 221:     {;xf/xf.c: 222:         if (theXF.timerList[i].ev.id != 0)
 17339                           ;stkvar	_i @ sp[(-2)+1]
 17340   01330C  0EFF               	movlw	-1
 17341   01330E  50E3               	movf	plusw1,w,c
 17342   013310  0D08               	mullw	8
 17343   013312  0ECA               	movlw	low (_theXF+2)
 17344   013314  24F3               	addwf	243,w,c
 17345   013316  6ED9               	movwf	fsr2l,c
 17346   013318  0E02               	movlw	high (_theXF+2)
 17347   01331A  20F4               	addwfc	prodh,w,c
 17348   01331C  6EDA               	movwf	fsr2h,c
 17349   01331E  50DF               	movf	indf2,w,c
 17350   013320  B4D8               	btfsc	status,2,c
 17351   013322  EF95  F099         	goto	u225_41
 17352   013326  EF97  F099         	goto	u225_40
 17353   01332A                     u225_41:
 17354   01332A  EFF1  F099         	goto	l4597
 17355   01332E                     u225_40:
 17356   01332E                     
 17357                           ;xf/xf.c: 223:         {;xf/xf.c: 224:             theXF.timerList[i].tm-=10;
 17358                           ;stkvar	_i @ sp[(-2)+1]
 17359   01332E  0EFF               	movlw	-1
 17360   013330  50E3               	movf	plusw1,w,c
 17361   013332  0D08               	mullw	8
 17362   013334  0EC8               	movlw	low _theXF
 17363   013336  24F3               	addwf	243,w,c
 17364   013338  6ED9               	movwf	fsr2l,c
 17365   01333A  0E02               	movlw	high _theXF
 17366   01333C  20F4               	addwfc	prodh,w,c
 17367   01333E  6EDA               	movwf	fsr2h,c
 17368   013340  0E0A               	movlw	10
 17369   013342  5EDE               	subwf	postinc2,f,c
 17370   013344  0E00               	movlw	0
 17371   013346  5ADD               	subwfb	postdec2,f,c
 17372   013348                     
 17373                           ;xf/xf.c: 225:             if (theXF.timerList[i].tm ==0)
 17374                           ;stkvar	_i @ sp[(-2)+1]
 17375   013348  0EFF               	movlw	-1
 17376   01334A  50E3               	movf	plusw1,w,c
 17377   01334C  0D08               	mullw	8
 17378   01334E  0EC8               	movlw	low _theXF
 17379   013350  24F3               	addwf	243,w,c
 17380   013352  6ED9               	movwf	fsr2l,c
 17381   013354  0E02               	movlw	high _theXF
 17382   013356  20F4               	addwfc	prodh,w,c
 17383   013358  6EDA               	movwf	fsr2h,c
 17384   01335A  50DE               	movf	postinc2,w,c
 17385   01335C  10DE               	iorwf	postinc2,w,c
 17386   01335E  A4D8               	btfss	status,2,c
 17387   013360  EFB4  F099         	goto	u226_41
 17388   013364  EFB6  F099         	goto	u226_40
 17389   013368                     u226_41:
 17390   013368  EFF1  F099         	goto	l4597
 17391   01336C                     u226_40:
 17392   01336C                     
 17393                           ;xf/xf.c: 226:             {;xf/xf.c: 227:                 uint8_t dummy;;xf/xf.c: 228: 
      +                                          if (XF_pushEvent(theXF.timerList[i].ev, 1, &dummy) == 1)
 17394                           ;stkvar	_dummy @ sp[(-2)+0]
 17395   01336C  0EFE               	movlw	254
 17396   01336E  24E1               	addwf	fsr1l,w,c
 17397   013370  6E01               	movwf	btemp^0,c
 17398   013372  0EFF               	movlw	255
 17399   013374  20E2               	addwfc	fsr1h,w,c
 17400   013376  6E02               	movwf	(btemp+1)^0,c
 17401   013378  C001  FFE6         	movff	btemp,postinc1
 17402   01337C  C002  FFE6         	movff	btemp+1,postinc1
 17403   013380  0E01               	movlw	1
 17404   013382  6EE6               	movwf	postinc1,c
 17405                           
 17406                           ;stkvar	_i @ sp[(-5)+1]
 17407   013384  0EFC               	movlw	-4
 17408   013386  50E3               	movf	plusw1,w,c
 17409   013388  0D08               	mullw	8
 17410   01338A  0ECA               	movlw	low (_theXF+2)
 17411   01338C  24F3               	addwf	243,w,c
 17412   01338E  6ED9               	movwf	fsr2l,c
 17413   013390  0E02               	movlw	high (_theXF+2)
 17414   013392  20F4               	addwfc	prodh,w,c
 17415   013394  6EDA               	movwf	fsr2h,c
 17416   013396  0E06               	movlw	6
 17417   013398                     u227_41:
 17418   013398  CFDE FFE6          	movff	postinc2,postinc1
 17419   01339C  2CE8               	decfsz	wreg,w,c
 17420   01339E  EFCC  F099         	goto	u227_41
 17421   0133A2  EC08  F095         	call	_XF_pushEvent	;wreg free
 17422   0133A6  0401               	decf	btemp^0,w,c
 17423   0133A8  A4D8               	btfss	status,2,c
 17424   0133AA  EFD9  F099         	goto	u228_41
 17425   0133AE  EFDB  F099         	goto	u228_40
 17426   0133B2                     u228_41:
 17427   0133B2  EFE4  F099         	goto	l4595
 17428   0133B6                     u228_40:
 17429   0133B6                     
 17430                           ;xf/xf.c: 229:                 {;xf/xf.c: 230:                   XF_unscheduleTimer(i, 1
      +                          );
 17431   0133B6  0E01               	movlw	1
 17432   0133B8  6EE6               	movwf	postinc1,c
 17433                           
 17434                           ;stkvar	_i @ sp[(-3)+1]
 17435   0133BA  0EFE               	movlw	-2
 17436   0133BC  50E3               	movf	plusw1,w,c
 17437   0133BE  6EE6               	movwf	postinc1,c
 17438   0133C0  ECB3  F0A2         	call	_XF_unscheduleTimer	;wreg free
 17439                           
 17440                           ;xf/xf.c: 231:                 }
 17441   0133C4  EFF1  F099         	goto	l4597
 17442   0133C8                     l4595:
 17443                           
 17444                           ;xf/xf.c: 233:                 {;xf/xf.c: 234:                   theXF.timerList[i].tm=1
      +                          ;
 17445                           ;stkvar	_i @ sp[(-2)+1]
 17446   0133C8  0EFF               	movlw	-1
 17447   0133CA  50E3               	movf	plusw1,w,c
 17448   0133CC  0D08               	mullw	8
 17449   0133CE  0EC8               	movlw	low _theXF
 17450   0133D0  24F3               	addwf	243,w,c
 17451   0133D2  6ED9               	movwf	fsr2l,c
 17452   0133D4  0E02               	movlw	high _theXF
 17453   0133D6  20F4               	addwfc	prodh,w,c
 17454   0133D8  6EDA               	movwf	fsr2h,c
 17455   0133DA  0E01               	movlw	1
 17456   0133DC  6EDE               	movwf	postinc2,c
 17457   0133DE  0E00               	movlw	0
 17458   0133E0  6EDD               	movwf	postdec2,c
 17459   0133E2                     l4597:
 17460                           
 17461                           ;xf/xf.c: 238:     }
 17462                           ;stkvar	_i @ sp[(-2)+1]
 17463   0133E2  0EFF               	movlw	-1
 17464   0133E4  2AE3               	incf	plusw1,f,c
 17465   0133E6                     
 17466                           ;stkvar	_i @ sp[(-2)+1]
 17467   0133E6  0EFF               	movlw	-1
 17468   0133E8  CFE3 F001          	movff	plusw1,btemp
 17469   0133EC  0E0B               	movlw	11
 17470   0133EE  6401               	cpfsgt	btemp^0,c
 17471   0133F0  EFFC  F099         	goto	u229_41
 17472   0133F4  EFFE  F099         	goto	u229_40
 17473   0133F8                     u229_41:
 17474   0133F8  EF86  F099         	goto	l4585
 17475   0133FC                     u229_40:
 17476   0133FC                     
 17477                           ; _XF_decrementAndQueueTimers: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0
      +                           parsize = 0, argsize = 0, vargsize = 0
 17478   0133FC  52E5               	movf	postdec1,f,c
 17479   0133FE  52E5               	movf	postdec1,f,c
 17480   013400  0012               	return		;funcret
 17481   013402                     __end_of_XF_decrementAndQueueTimers:
 17482                           	callstack 0
 17483                           
 17484 ;; *************** function _XF_unscheduleTimer *****************
 17485 ;; Defined at:
 17486 ;;		line 202 in file "xf/xf.c"
 17487 ;; Parameters:    Size  Location     Type
 17488 ;;  id              1  [STACK] unsigned char 
 17489 ;;  inISR           1  [STACK] _Bool 
 17490 ;; Auto vars:     Size  Location     Type
 17491 ;;		None
 17492 ;; Return value:  Size  Location     Type
 17493 ;;                  1  [STACK] void 
 17494 ;; Registers used:
 17495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11, prodl, prodh
 17496 ;; Tracked objects:
 17497 ;;		On entry : 0/0
 17498 ;;		On exit  : 0/0
 17499 ;;		Unchanged: 0/0
 17500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17505 ;;Total ram usage:        0 bytes
 17506 ;; Hardware stack levels used: 1
 17507 ;; Hardware stack levels required when called: 1
 17508 ;; This function calls:
 17509 ;;		_ENTERCRITICAL
 17510 ;;		_Event_init
 17511 ;;		_LEAVECRITICAL
 17512 ;; This function is called by:
 17513 ;;		_XF_decrementAndQueueTimers
 17514 ;; This function uses a reentrant model
 17515 ;;
 17516                           
 17517                           	psect	text74
 17518   014566                     __ptext74:
 17519                           	callstack 0
 17520   014566                     _XF_unscheduleTimer:
 17521                           	callstack 17
 17522   014566                     
 17523                           ;xf/xf.c: 202: void XF_unscheduleTimer(uint8_t id, _Bool inISR);xf/xf.c: 203: {;xf/xf.c:
      +                           204:     ENTERCRITICAL(inISR);
 17524                           ;stkvar	_inISR @ sp[(0)+-2]
 17525   014566  0EFE               	movlw	-2
 17526   014568  50E3               	movf	plusw1,w,c
 17527   01456A  6EE6               	movwf	postinc1,c
 17528   01456C  EC6C  F0A4         	call	_ENTERCRITICAL	;wreg free
 17529   014570                     
 17530                           ;xf/xf.c: 205:     theXF.timerList[id].tm = 0;
 17531                           ;stkvar	_id @ sp[(0)+-1]
 17532   014570  0EFF               	movlw	-1
 17533   014572  50E3               	movf	plusw1,w,c
 17534   014574  0D08               	mullw	8
 17535   014576  0EC8               	movlw	low _theXF
 17536   014578  24F3               	addwf	243,w,c
 17537   01457A  6ED9               	movwf	fsr2l,c
 17538   01457C  0E02               	movlw	high _theXF
 17539   01457E  20F4               	addwfc	prodh,w,c
 17540   014580  6EDA               	movwf	fsr2h,c
 17541   014582  6ADE               	clrf	postinc2,c
 17542   014584  6ADD               	clrf	postdec2,c
 17543   014586                     
 17544                           ;xf/xf.c: 206:     Event_init(&(theXF.timerList[id].ev));
 17545                           ;stkvar	_id @ sp[(0)+-1]
 17546   014586  0EFF               	movlw	-1
 17547   014588  50E3               	movf	plusw1,w,c
 17548   01458A  0D08               	mullw	8
 17549   01458C  0ECA               	movlw	low (_theXF+2)
 17550   01458E  24F3               	addwf	243,w,c
 17551   014590  6E0B               	movwf	(btemp+10)^0,c
 17552   014592  0E02               	movlw	high (_theXF+2)
 17553   014594  20F4               	addwfc	prodh,w,c
 17554   014596  6E0C               	movwf	(btemp+11)^0,c
 17555   014598  C00B  FFE6         	movff	btemp+10,postinc1
 17556   01459C  C00C  FFE6         	movff	btemp+11,postinc1
 17557   0145A0  EC0A  F0A3         	call	_Event_init	;wreg free
 17558   0145A4                     
 17559                           ;xf/xf.c: 207:     theXF.countTmr--;
 17560   0145A4  C3E1  FFE8         	movff	_theXF+281,wreg
 17561   0145A8  0FFF               	addlw	-1
 17562   0145AA  CFE8 F3E1          	movff	wreg,_theXF+281
 17563   0145AE                     
 17564                           ;xf/xf.c: 208:     LEAVECRITICAL(inISR);
 17565                           ;stkvar	_inISR @ sp[(0)+-2]
 17566   0145AE  0EFE               	movlw	-2
 17567   0145B0  50E3               	movf	plusw1,w,c
 17568   0145B2  6EE6               	movwf	postinc1,c
 17569   0145B4  EC60  F0A4         	call	_LEAVECRITICAL	;wreg free
 17570   0145B8                     
 17571                           ; _XF_unscheduleTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 17572   0145B8  52E5               	movf	postdec1,f,c
 17573   0145BA  52E5               	movf	postdec1,f,c
 17574   0145BC  0012               	return		;funcret
 17575   0145BE                     __end_of_XF_unscheduleTimer:
 17576                           	callstack 0
 17577                           
 17578                           	psect	rparam
 17579   000001                     ___rparam_used  equ	1
 17580   000000                     ___param_bank   equ	0
 17581   000000                     __Lparam        equ	__Lrparam
 17582   000000                     __Hparam        equ	__Hrparam
 17583                           
 17584                           	psect	temp
 17585   000001                     btemp:
 17586                           	callstack 0
 17587   000001                     	ds	32
 17588   000001                     wtemp0          set	btemp
 17589   000003                     wtemp1          set	btemp+2
 17590   000005                     wtemp2          set	btemp+4
 17591   000007                     wtemp3          set	btemp+6
 17592   000009                     wtemp4          set	btemp+8
 17593   00000B                     wtemp5          set	btemp+10
 17594   000002                     wtemp8          set	btemp+1
 17595   000001                     ttemp0          set	btemp
 17596   000004                     ttemp1          set	btemp+3
 17597   000007                     ttemp2          set	btemp+6
 17598   00000A                     ttemp3          set	btemp+9
 17599   000002                     ttemp5          set	btemp+1
 17600   000005                     ttemp6          set	btemp+4
 17601   000009                     ttemp7          set	btemp+8
 17602   000001                     ltemp0          set	btemp
 17603   000005                     ltemp1          set	btemp+4
 17604   000009                     ltemp2          set	btemp+8
 17605   000001                     lltemp0         set	btemp
 17606   000009                     lltemp1         set	btemp+8
 17607   000011                     lltemp2         set	btemp+16
 17608   000019                     lltemp3         set	btemp+24
 17609                           
 17610                           	psect	config
 17611                           
 17612                           ;Config register CONFIG1L @ 0x1FFF8
 17613                           ;	Watchdog Timer Enable bit
 17614                           ;	WDT = OFF, WDT disabled (control is placed on SWDTEN bit)
 17615                           ;	Stack Overflow/Underflow Reset Enable bit
 17616                           ;	STVR = ON, Reset on stack overflow/underflow enabled
 17617                           ;	Extended Instruction Set Enable bit
 17618                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 17619                           ;	Background Debugger Enable bit
 17620                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
 17621   01FFF8                     	org	131064
 17622   01FFF8  A0                 	db	160
 17623                           
 17624                           ;Config register CONFIG1H @ 0x1FFF9
 17625                           ;	Code Protection bit
 17626                           ;	CP0 = OFF, Program memory is not code-protected
 17627   01FFF9                     	org	131065
 17628   01FFF9  F4                 	db	244
 17629                           
 17630                           ;Config register CONFIG2L @ 0x1FFFA
 17631                           ;	Oscillator Selection bits
 17632                           ;	FOSC = HSPLL, HS oscillator, PLL enabled and under software control
 17633                           ;	Default/Reset System Clock Select bit
 17634                           ;	FOSC2 = ON, Clock selected by FOSC1:FOSC0 as system clock is enabled when OSCCON<1:0> 
      +                          = 00
 17635                           ;	Fail-Safe Clock Monitor Enable
 17636                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 17637                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
 17638                           ;	IESO = ON, Two-Speed Start-up enabled
 17639   01FFFA                     	org	131066
 17640   01FFFA  C5                 	db	197
 17641                           
 17642                           ;Config register CONFIG2H @ 0x1FFFB
 17643                           ;	Watchdog Timer Postscaler Select bits
 17644                           ;	WDTPS = 32768, 1:32768
 17645   01FFFB                     	org	131067
 17646   01FFFB  FF                 	db	255
 17647                           
 17648                           ;Config register CONFIG3L @ 0x1FFFC
 17649                           ;	External Address Bus Shift Enable bit
 17650                           ;	EASHFT = ON, Address shifting enabled; address on external bus is offset to start at 0
      +                          00000h
 17651                           ;	External Memory Bus
 17652                           ;	MODE = MM, Microcontroller mode, external bus disabled
 17653                           ;	Data Bus Width Select bit
 17654                           ;	BW = 16, 16-Bit Data Width mode
 17655                           ;	External Bus Wait Enable bit
 17656                           ;	WAIT = OFF, Wait states for operations on external memory bus disabled
 17657   01FFFC                     	org	131068
 17658   01FFFC  F8                 	db	248
 17659                           
 17660                           ;Config register CONFIG3H @ 0x1FFFD
 17661                           ;	ECCP2 MUX bit
 17662                           ;	CCP2MX = ON, ECCP2/P2A is multiplexed with RC1
 17663                           ;	ECCP MUX bit
 17664                           ;	ECCPMX = ON, ECCP1 outputs (P1B/P1C) are multiplexed with RE6 and RE5; ECCP3 outputs (
      +                          P3B/P3C) are multiplexed with RE4 and RE3
 17665                           ;	Ethernet LED Enable bit
 17666                           ;	ETHLED = ON, RA0/RA1 are multiplexed with LEDA/LEDB when Ethernet module is enabled an
      +                          d function as I/O when Ethernet is disabled
 17667   01FFFD                     	org	131069
 17668   01FFFD  F7                 	db	247
 17669                           tosu	equ	0xFFF
 17670                           tosh	equ	0xFFE
 17671                           tosl	equ	0xFFD
 17672                           stkptr	equ	0xFFC
 17673                           pclatu	equ	0xFFB
 17674                           pclath	equ	0xFFA
 17675                           pcl	equ	0xFF9
 17676                           tblptru	equ	0xFF8
 17677                           tblptrh	equ	0xFF7
 17678                           tblptrl	equ	0xFF6
 17679                           tablat	equ	0xFF5
 17680                           prodh	equ	0xFF4
 17681                           prodl	equ	0xFF3
 17682                           indf0	equ	0xFEF
 17683                           postinc0	equ	0xFEE
 17684                           postdec0	equ	0xFED
 17685                           preinc0	equ	0xFEC
 17686                           plusw0	equ	0xFEB
 17687                           fsr0h	equ	0xFEA
 17688                           fsr0l	equ	0xFE9
 17689                           wreg	equ	0xFE8
 17690                           indf1	equ	0xFE7
 17691                           postinc1	equ	0xFE6
 17692                           postdec1	equ	0xFE5
 17693                           preinc1	equ	0xFE4
 17694                           plusw1	equ	0xFE3
 17695                           fsr1h	equ	0xFE2
 17696                           fsr1l	equ	0xFE1
 17697                           bsr	equ	0xFE0
 17698                           indf2	equ	0xFDF
 17699                           postinc2	equ	0xFDE
 17700                           postdec2	equ	0xFDD
 17701                           preinc2	equ	0xFDC
 17702                           plusw2	equ	0xFDB
 17703                           fsr2h	equ	0xFDA
 17704                           fsr2l	equ	0xFD9
 17705                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    96
    Data        0
    BSS         772
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     16      50
    BANK0           160      0      59
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    config	PTR struct _CAN_TEF_CONFIG size(2) Largest target is 1
		 -> tefConfig(STACK[1]), 

    config	PTR struct _CAN_RX_FIFO_CONFIG size(2) Largest target is 3
		 -> rxfConfig(STACK[3]), 

    config	PTR struct _CAN_TX_QUEUE_CONFIG size(2) Largest target is 4
		 -> txqConfig(STACK[4]), 

    config	PTR struct _CAN_TX_QUEUE_CONFIG size(2) Largest target is 4
		 -> txqConfig(STACK[4]), 

    config	PTR struct _CAN_TX_FIFO_CONFIG size(2) Largest target is 2
		 -> txfConfig(STACK[2]), 

    config	PTR struct _CAN_TX_FIFO_CONFIG size(2) Largest target is 2
		 -> txfConfig(STACK[2]), 

    config	PTR struct _CAN_CONFIG size(2) Largest target is 3
		 -> config(STACK[3]), 

    config	PTR struct _CAN_CONFIG size(2) Largest target is 3
		 -> config(STACK[3]), 

    DRV_CANFDSPI_ReadHalfWord$2	PTR unsigned short  size(2) Largest target is 2
		 -> intEnables(STACK[2]), intFlags(STACK[2]), 

    DRV_CANFDSPI_ReadWord$2	PTR unsigned long  size(2) Largest target is 4
		 -> ciFifoSta(STACK[4]), ciTrec(STACK[4]), reg(STACK[4]), 

    DRV_CANFDSPI_WriteWordArray$2	PTR unsigned long  size(2) Largest target is 8
		 -> w(STACK[8]), 

    ev	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    ev	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    ev$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 

    flags	PTR enum E5591 size(2) Largest target is 1
		 -> rxFlags(STACK[1]), 

    flags	PTR enum E5583 size(2) Largest target is 1
		 -> txFlags(STACK[1]), 

    fObj	PTR struct _CAN_FILTEROBJ_ID size(2) Largest target is 6
		 -> fObj(STACK[6]), 

    id	PTR struct _CAN_FILTEROBJ_ID size(2) Largest target is 6
		 -> fObj(STACK[6]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), XF_decrementAndQueueTimers(), 

    mask	PTR struct _CAN_MASKOBJ_ID size(2) Largest target is 6
		 -> mObj(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 282
		 -> ev(STACK[6]), theXF(BIGRAM[282]), theXF$eventQueue(BIGRAM[180]), theXF$timerList(BIGRAM[96]), 

    me$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 

    mObj	PTR struct _CAN_MASKOBJ_ID size(2) Largest target is 6
		 -> mObj(STACK[6]), 

    processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), 

    processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), 

    processEvent$0	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    processEvent$0	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    rxd	PTR unsigned char  size(2) Largest target is 8
		 -> rxdata(STACK[8]), 

    rxd	PTR unsigned long  size(2) Largest target is 12
		 -> fifoReg(STACK[12]), fifoReg(STACK[12]), fifoReg(STACK[8]), fifoReg(STACK[12]), 
		 -> w(STACK[12]), 

    rxd	PTR unsigned char  size(2) Largest target is 76
		 -> ba(STACK[12]), ba(STACK[76]), 

    rxd	PTR unsigned char  size(2) Largest target is 5
		 -> b(STACK[1]), ciFifoCon(STACK[5]), ciFifoSta(STACK[4]), ciTefCon(STACK[4]), 
		 -> ciTefSta(STACK[4]), crc(STACK[1]), crc(STACK[1]), crc(STACK[1]), 
		 -> crc(STACK[1]), d(STACK[1]), d(STACK[1]), d(STACK[1]), 
		 -> d(STACK[1]), d(STACK[1]), d(STACK[1]), d(STACK[1]), 
		 -> d(STACK[1]), d(STACK[1]), d(STACK[1]), d(STACK[1]), 
		 -> d(STACK[1]), d(STACK[1]), eccInterrupts(STACK[1]), eccInterrupts(STACK[1]), 
		 -> eccStat(STACK[1]), eccStatus(STACK[1]), f(STACK[1]), fCtrl(STACK[1]), 
		 -> filterHitByte(STACK[1]), icodeByte(STACK[1]), iocon(STACK[4]), osc(STACK[4]), 
		 -> rxCodeByte(STACK[1]), txCodeByte(STACK[1]), 

    rxd	PTR unsigned char  size(2) Largest target is 8
		 -> rxdata(STACK[8]), 

    rxObj	PTR struct _CAN_RX_MSGOBJ size(2) Largest target is 16
		 -> rxObj(STACK[16]), txMsg(STACK[16]), 

    rxObj	PTR struct _CAN_RX_MSGOBJ size(2) Largest target is 16
		 -> rxObj(STACK[16]), 

    rxPtr	PTR unsigned char  size(2) Largest target is 200
		 -> spiReceiveBuffer(BANK2[200]), 

    S4943$1$0	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    S4943Event_$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 

    sp__Event_getPE	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 

    sp__Event_getPE$0	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    theXF$eventQueue$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 

    theXF$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 

    theXF$timerList$ev$id$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 

    theXF$timerList$ev$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 

    tmid	PTR unsigned char  size(2) Largest target is 1
		 -> dummy(STACK[1]), tmid(STACK[1]), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), XF_decrementAndQueueTimers(), NULL(), 

    txd	PTR unsigned char  size(2) Largest target is 8
		 -> txdata(STACK[8]), txdata(STACK[8]), txdata(STACK[8]), 

    txd	PTR unsigned char  size(2) Largest target is 200
		 -> txBuffer(STACK[76]), txd(STACK[200]), 

    txd	PTR unsigned char  size(2) Largest target is 8
		 -> txdata(STACK[8]), txdata(STACK[8]), txdata(STACK[8]), 

    txObj	PTR struct _CAN_TX_MSGOBJ size(2) Largest target is 16
		 -> txMsg(STACK[16]), 

    txObj	PTR struct _CAN_TX_MSGOBJ size(2) Largest target is 16
		 -> txMsg(STACK[16]), 

    txPtr	PTR unsigned char  size(2) Largest target is 200
		 -> spiTransmitBuffer(BANK1[200]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[17]), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), 

    ?_XF_popEvent$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   33077
                            _CanInit
                       _CanSetFilter
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                     _XF_executeOnce
                            _XF_init
                            _XF_post
                     _updateCarState
 ---------------------------------------------------------------------------------
 (1) _updateCarState                                      24    24      0    4622
                         _CanReceive
                            _XF_post
 ---------------------------------------------------------------------------------
 (2) _XF_post                                             13     7      6    1394
                         _Event_init
                     _Event_setDelay
                        _Event_setId
                        _Event_setPE
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (13) _XF_pushEvent                                       12     3      9     989
                      _ENTERCRITICAL
                     _Event_getDelay
                     _Event_setDelay
                      _LEAVECRITICAL
                     _XF_noMoreEvent
                   _XF_scheduleTimer
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) _XF_scheduleTimer                                   10     1      9     310
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                     _XF_noMoreTimer
 ---------------------------------------------------------------------------------
 (15) _XF_noMoreTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _XF_noMoreEvent                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _Event_setDelay                                      4     0      4      44
 ---------------------------------------------------------------------------------
 (14) _Event_getDelay                                      2     0      2      22
 ---------------------------------------------------------------------------------
 (3) _Event_setPE                                          5     0      5      44
 ---------------------------------------------------------------------------------
 (3) _Event_setId                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _CanReceive                                           5     1      4    3055
_DRV_CANFDSPI_ReceiveChannelEventGet
     _DRV_CANFDSPI_ReceiveMessageGet
 ---------------------------------------------------------------------------------
 (3) _DRV_CANFDSPI_ReceiveMessageGet                     120   114      6    2616
         _DRV_CANFDSPI_ReadByteArray
         _DRV_CANFDSPI_ReadWordArray
  _DRV_CANFDSPI_ReceiveChannelUpdate
 ---------------------------------------------------------------------------------
 (4) _DRV_CANFDSPI_ReceiveChannelUpdate                    9     8      1     299
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DRV_CANFDSPI_ReadByteArray                          11     5      6     364
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (3) _DRV_CANFDSPI_ReceiveChannelEventGet                 10     7      3     349
              _DRV_CANFDSPI_ReadByte
 ---------------------------------------------------------------------------------
 (1) _XF_init                                              2     2      0     224
                         _Event_init
 ---------------------------------------------------------------------------------
 (14) _Event_init                                          2     0      2      66
 ---------------------------------------------------------------------------------
 (1) _XF_executeOnce                                       6     6      0   17509
                        _XF_popEvent
               _lightControl_Process *
               _motorControl_Process *
 ---------------------------------------------------------------------------------
 (2) _motorControl_Process                                 2     0      2   10182
              _lightContol_BackLight
             _lightContol_FrontLight
                       _motorControl
 ---------------------------------------------------------------------------------
 (3) _motorControl                                        25    24      1    3374
                            _CanSend
 ---------------------------------------------------------------------------------
 (2) _lightControl_Process                                 2     0      2    6786
              _lightContol_BackLight
             _lightContol_FrontLight
 ---------------------------------------------------------------------------------
 (3) _lightContol_FrontLight                              25    24      1    3338
                            _CanSend
 ---------------------------------------------------------------------------------
 (3) _lightContol_BackLight                               25    24      1    3338
                            _CanSend
 ---------------------------------------------------------------------------------
 (4) _CanSend                                              5     1      4    3202
_DRV_CANFDSPI_TransmitChannelEventGe
   _DRV_CANFDSPI_TransmitChannelLoad
 ---------------------------------------------------------------------------------
 (5) _DRV_CANFDSPI_TransmitChannelLoad                   128   118     10    2725
        _DRV_CANFDSPI_DlcToDataBytes
         _DRV_CANFDSPI_ReadWordArray
 _DRV_CANFDSPI_TransmitChannelUpdate
        _DRV_CANFDSPI_WriteByteArray
 ---------------------------------------------------------------------------------
 (6) _DRV_CANFDSPI_WriteByteArray                         11     5      6     296
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (6) _DRV_CANFDSPI_TransmitChannelUpdate                  10     8      2     364
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DRV_CANFDSPI_ReadWordArray                          19    13      6     525
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (6) _DRV_CANFDSPI_DlcToDataBytes                          5     4      1      97
 ---------------------------------------------------------------------------------
 (5) _DRV_CANFDSPI_TransmitChannelEventGet                10     7      3     343
              _DRV_CANFDSPI_ReadByte
 ---------------------------------------------------------------------------------
 (2) _XF_popEvent                                         12     6      6     474
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (14) _LEAVECRITICAL                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (14) _ENTERCRITICAL                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      15
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CanSetFilter                                         5     0      5    2657
         _DRV_CANFDSPI_FilterDisable
   _DRV_CANFDSPI_FilterMaskConfigure
 _DRV_CANFDSPI_FilterObjectConfigure
      _DRV_CANFDSPI_FilterToFifoLink
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_FilterToFifoLink                        7     4      3     308
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_FilterObjectConfigure                  16    13      3     831
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_FilterMaskConfigure                    17    13      4     831
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_FilterDisable                           5     4      1     533
              _DRV_CANFDSPI_ReadByte
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (1) _CanInit                                             15    13      2    6572
_DRV_CANFDSPI_BitTimeConfigureNomina
             _DRV_CANFDSPI_Configure
  _DRV_CANFDSPI_ConfigureObjectReset
     _DRV_CANFDSPI_ModuleEventEnable
   _DRV_CANFDSPI_OperationModeSelect
_DRV_CANFDSPI_ReceiveChannelConfigur
                 _DRV_CANFDSPI_Reset
          _DRV_CANFDSPI_TefConfigure
       _DRV_CANFDSPI_TimeStampEnable
 _DRV_CANFDSPI_TimeStampPrescalerSet
          _DRV_CANFDSPI_TimeStampSet
_DRV_CANFDSPI_TransmitChannelConfigu
_DRV_CANFDSPI_TransmitChannelConfigu
_DRV_CANFDSPI_TransmitQueueConfigure
_DRV_CANFDSPI_TransmitQueueConfigure
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TransmitQueueConfigureObjectReset       7     5      2     120
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TransmitQueueConfigure                  9     7      2     506
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TransmitChannelConfigureObjectReset     7     5      2     150
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TransmitChannelConfigure               11     8      3     578
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TimeStampSet                            5     1      4     304
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TimeStampPrescalerSet                   3     1      2     304
         _DRV_CANFDSPI_WriteHalfWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TimeStampEnable                         2     2      0     469
              _DRV_CANFDSPI_ReadByte
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TefConfigure                            7     5      2     372
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_Reset                                   3     3      0     189
                          _SPI2_Open
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (3) _SPI2_Open                                            1     0      1      88
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_ReceiveChannelConfigure                11     8      3     464
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_OperationModeSelect                     3     2      1     492
              _DRV_CANFDSPI_ReadByte
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (5) _DRV_CANFDSPI_WriteByte                               6     3      3     184
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (4) _DRV_CANFDSPI_ReadByte                                7     3      4     184
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_ModuleEventEnable                       8     5      3     374
         _DRV_CANFDSPI_WriteHalfWord
 ---------------------------------------------------------------------------------
 (3) _DRV_CANFDSPI_WriteHalfWord                           8     4      4     274
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_ConfigureObjectReset                    6     4      2     360
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_Configure                               7     5      2     810
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_BitTimeConfigureNominal40MHz            6     5      1     615
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (3) _DRV_CANFDSPI_WriteWord                              10     4      6     274
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (6) _SpiTransfer                                          7     1      6      70
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                          16    16      0    1389
                                              0 COMRAM    16    16      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0    1389
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (11) _TMR0_CallBack                                       0     0      0    1389
                                NULL *
       _TMR0_DefaultInterruptHandler *
         _XF_decrementAndQueueTimers *
 ---------------------------------------------------------------------------------
 (12) _XF_decrementAndQueueTimers                          2     2      0    1389
                       _XF_pushEvent
                 _XF_unscheduleTimer
 ---------------------------------------------------------------------------------
 (13) _XF_unscheduleTimer                                  2     0      2     198
                      _ENTERCRITICAL
                         _Event_init
                      _LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (14) _Event_init                                          2     0      2      66
 ---------------------------------------------------------------------------------
 (13) _XF_pushEvent                                       12     3      9     989
                      _ENTERCRITICAL
                     _Event_getDelay
                     _Event_setDelay
                      _LEAVECRITICAL
                     _XF_noMoreEvent
                   _XF_scheduleTimer
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (14) _XF_scheduleTimer                                   10     1      9     310
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                     _XF_noMoreTimer
 ---------------------------------------------------------------------------------
 (15) _XF_noMoreTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _LEAVECRITICAL                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (14) _ENTERCRITICAL                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (14) _XF_noMoreEvent                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _Event_setDelay                                      4     0      4      44
 ---------------------------------------------------------------------------------
 (14) _Event_getDelay                                      2     0      2      22
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CanInit
     _DRV_CANFDSPI_BitTimeConfigureNominal40MHz
       _DRV_CANFDSPI_WriteWord
         _SpiTransfer
     _DRV_CANFDSPI_Configure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_ConfigureObjectReset
     _DRV_CANFDSPI_ModuleEventEnable
       _DRV_CANFDSPI_WriteHalfWord
         _SpiTransfer
     _DRV_CANFDSPI_OperationModeSelect
       _DRV_CANFDSPI_ReadByte
         _SpiTransfer
       _DRV_CANFDSPI_WriteByte
         _SpiTransfer
     _DRV_CANFDSPI_ReceiveChannelConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_Reset
       _SPI2_Open
       _SpiTransfer
     _DRV_CANFDSPI_TefConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_TimeStampEnable
       _DRV_CANFDSPI_ReadByte
       _DRV_CANFDSPI_WriteByte
     _DRV_CANFDSPI_TimeStampPrescalerSet
       _DRV_CANFDSPI_WriteHalfWord
     _DRV_CANFDSPI_TimeStampSet
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_TransmitChannelConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_TransmitChannelConfigureObjectReset
     _DRV_CANFDSPI_TransmitQueueConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_TransmitQueueConfigureObjectReset
   _CanSetFilter
     _DRV_CANFDSPI_FilterDisable
       _DRV_CANFDSPI_ReadByte
       _DRV_CANFDSPI_WriteByte
     _DRV_CANFDSPI_FilterMaskConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_FilterObjectConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_FilterToFifoLink
       _DRV_CANFDSPI_WriteByte
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _XF_executeOnce
     _XF_popEvent
       _ENTERCRITICAL
       _LEAVECRITICAL
       ___awmod
     _lightControl_Process *
       _lightContol_BackLight
         _CanSend
           _DRV_CANFDSPI_TransmitChannelEventGet
             _DRV_CANFDSPI_ReadByte
           _DRV_CANFDSPI_TransmitChannelLoad
             _DRV_CANFDSPI_DlcToDataBytes
             _DRV_CANFDSPI_ReadWordArray
               _SpiTransfer
             _DRV_CANFDSPI_TransmitChannelUpdate
               _DRV_CANFDSPI_WriteByte
             _DRV_CANFDSPI_WriteByteArray
               _SpiTransfer
       _lightContol_FrontLight
         _CanSend
     _motorControl_Process *
       _lightContol_BackLight
       _lightContol_FrontLight
       _motorControl
         _CanSend
   _XF_init
     _Event_init
   _XF_post
     _Event_init
     _Event_setDelay
     _Event_setId
     _Event_setPE
     _XF_pushEvent
       _ENTERCRITICAL
       _Event_getDelay
       _Event_setDelay
       _LEAVECRITICAL
       _XF_noMoreEvent
       _XF_scheduleTimer
         _ENTERCRITICAL
         _LEAVECRITICAL
         _XF_noMoreTimer
       ___awmod
   _updateCarState
     _CanReceive
       _DRV_CANFDSPI_ReceiveChannelEventGet
         _DRV_CANFDSPI_ReadByte
       _DRV_CANFDSPI_ReceiveMessageGet
         _DRV_CANFDSPI_ReadByteArray
           _SpiTransfer
         _DRV_CANFDSPI_ReadWordArray
         _DRV_CANFDSPI_ReceiveChannelUpdate
           _DRV_CANFDSPI_WriteByte
     _XF_post

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
       _XF_decrementAndQueueTimers *
         _XF_pushEvent
           _ENTERCRITICAL
           _Event_getDelay
           _Event_setDelay
           _LEAVECRITICAL
           _XF_noMoreEvent
           _XF_scheduleTimer
             _ENTERCRITICAL
             _LEAVECRITICAL
             _XF_noMoreTimer
           ___awmod
         _XF_unscheduleTimer
           _ENTERCRITICAL
           _Event_init
           _LEAVECRITICAL

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3711      0     282      7.6%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0     200     78.1%
BITBANK1           256      0       0      0.0%
BANK1              256      0     200     78.1%
BITBANK0           160      0       0      0.0%
BANK0              160      0      59     36.9%
BITBIGSFR_1h       155      0       0      0.0%
BITBIGSFR          128      0       0      0.0%
BITBANK14          128      0       0      0.0%
BANK14             128      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BIGRAM_1            96      0       0      0.0%
BITCOMRAM           63      0       0      0.0%
COMRAM              63     16      50     79.4%
BITBIGSFR_1l         2      0       0      0.0%
STACK                0      0     250      0.0%
DATA                 0      0    1041      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Feb 27 13:21:05 2025

                                  __end_of_updateCarState 2A10  
                                              _CanReceive 43DC  
                                         _timer0ReloadVal 0037  
                                                     l150 3A9E  
                                                     l222 42F6  
                                                     l206 1730  
                                                     l215 19B0  
                                                     l145 39EC  
                                                     l401 3B56  
                                                     l161 43D2  
                                                     l146 3A04  
                                                     l218 1C0E  
                                                     l154 2068  
                                                     l322 14A8  
                                                     l171 44FC  
                                                     l251 2886  
                                                     l412 449A  
                                                     l260 34E6  
                                                     l149 3A98  
                                                     l317 1174  
                                                     l165 4436  
                                                     l174 460A  
                                                     l254 31E0  
                                                     l158 3F7A  
                                                     l327 414C  
                                                     l184 39DA  
                                                     l168 4818  
                                                     l336 41DE  
                                                     l264 0742  
                                                     l257 30A6  
                                                     l193 257E  
                                                     l346 2F66  
                                                     l179 36A8  
                                                     l453 40B6  
                                                     l293 3ED0  
                                                     l357 0E2A  
                                                     l623 4560  
                                                     l199 32FA  
                                                     l482 401E  
                                                     l643 48A0  
                                                     l635 4838  
                                                     l379 4368  
                                                     l665 1C60  
                                                     l682 1E5A  
                                                     l674 1CAC  
                                                     l875 2246  
                                                     l976 4904  
                                                     l979 491C  
                                                     u805 1A4C  
                                                     u815 1A70  
                                                     u825 1A92  
                                                     u835 1AF4  
                                                     u845 1B22  
                                                     u855 1B50  
                                                     u865 1B7E  
                                                     u875 1BAC  
                                                     u885 1BDA  
                                                     u995 3118  
       __end_of_DRV_CANFDSPI_BitTimeConfigureNominal40MHz 1E64  
               _DRV_CANFDSPI_BitTimeConfigureNominal40MHz 1C18  
                  __end_of_DRV_CANFDSPI_ModuleEventEnable 44A4  
                          _DRV_CANFDSPI_ModuleEventEnable 4440  
                                                     prod 0FF3  
                                                     tosl 0FFD  
                                                     wreg 0FE8  
            __end_of_DRV_CANFDSPI_TransmitChannelEventGet 40C0  
                    _DRV_CANFDSPI_TransmitChannelEventGet 4028  
                                                    l1020 47EC  
                                                    l1120 3C12  
                                                    l1032 492C  
                                                    l1200 4924  
                                                    l1201 4924  
                                                    l1116 4914  
                                                    l1206 491E  
                                                    l1215 2CC6  
                                                    l1207 491E  
                                                    l1231 35C8  
                                                    l1223 2B86  
                                                    l1064 4720  
                                                    l1216 2CDE  
                                                    l3001 19FE  
                                                    l1250 48EC  
                                                    l1162 46DE  
                                                    l1234 35D0  
                                                    l3011 1AC6  
                                                    l3003 1A28  
                                                    l1227 3910  
                                                    l1092 4882  
                                                    l1237 45B8  
                                                    l1085 47BE  
                                                    l3021 1BAC  
                                                    l3013 1AF4  
                                                    l3005 1A4C  
                                                    l1261 426E  
                                                    l1246 33FC  
                                                    l1254 48D4  
                                                    l1174 4750  
                                                    l1095 492E  
                                                    l3023 1BDA  
                                                    l3015 1B22  
                                                    l3007 1A70  
                                                    l3111 3118  
                                                    l1159 465C  
                                                    l1168 48B8  
                                                    l1512 2A06  
                                                    l1089 478E  
                                                    l3017 1B50  
                                                    l3009 1A92  
                                                    l3113 3142  
                                                    l4001 1534  
                                                    l1425 3CC0  
                                                    l1177 4862  
                                                    l1257 3844  
                                                    l3019 1B7E  
                                                    l3115 3172  
                                                    l3107 30B8  
                                                    l4003 1552  
                                                    l3117 31A6  
                                                    l3109 30F4  
                                                    l4013 15C0  
                                                    l4005 1580  
                                                    l4101 00C0  
                                                    l4031 1692  
                                                    l4023 15F8  
                                                    l4015 15D4  
                                                    l4007 15A4  
                                                    l1447 2380  
                                                    l1472 3D74  
                                                    l1464 3E22  
                                                    l1448 23F6  
                                                    l3081 34BA  
                                                    l3073 340A  
                                                    l5001 385A  
                                                    l4201 4040  
                                                    l4041 207A  
                                                    l4033 16E0  
                                                    l4025 1638  
                                                    l4017 15E0  
                                                    l4009 15B6  
                                                    l4121 01E6  
                                                    l4113 013E  
                                                    l4105 00C8  
                                                    l3075 3446  
                                                    l5003 386C  
                                                    l4211 409C  
                                                    l4203 405A  
                                                    l4051 20D0  
                                                    l4043 208A  
                                                    l4027 1656  
                                                    l4035 16FE  
                                                    l4131 039A  
                                                    l4123 01FC  
                                                    l4115 0172  
                                                    l4107 0102  
                                                    l1492 2692  
                                                    l3077 3464  
                                                    l3341 492A  
                                                    l5013 38B4  
                                                    l5005 3876  
                                                    l4213 40B0  
                                                    l4205 4082  
                                                    l4061 218E  
                                                    l4053 20F6  
                                                    l4045 208C  
                                                    l4029 1674  
                                                    l4133 03B8  
                                                    l4141 0448  
                                                    l4125 0236  
                                                    l4117 01A2  
                                                    l4109 0136  
                                                    l4301 3EDC  
                                                    l1493 2708  
                                                    l5101 25D8  
                                                    l4221 463E  
                                                    l3079 3490  
                                                    l3351 47C0  
                                                    l3343 4906  
                                                    l5015 38D8  
                                                    l5007 388A  
                                                    l4207 4094  
                                                    l4063 21B4  
                                                    l4055 211C  
                                                    l4047 208E  
                                                    l4151 0560  
                                                    l4143 0470  
                                                    l4135 03C4  
                                                    l4127 0278  
                                                    l4119 01C0  
                                                    l4303 3F04  
                                                    l4311 2404  
                                                    l4223 4722  
                                                    l5031 37D0  
                                                    l5201 4372  
                                                    l3361 47E0  
                                                    l3353 47D6  
                                                    l3345 490E  
                                                    l4081 48C0  
                                                    l5017 3902  
                                                    l5009 3894  
                                                    l4057 2142  
                                                    l4049 20A4  
                                                    l4161 05EC  
                                                    l4153 05AA  
                                                    l4145 04BC  
                                                    l4137 03E0  
                                                    l4129 02EA  
                                                    l4305 3F20  
                                                    l5041 2254  
                                                    l5121 269A  
                                                    l5105 25FA  
                                                    l4217 4614  
                                                    l4401 3F8C  
                                                    l4321 2456  
                                                    l4313 2422  
                                                    l4225 4842  
                                                    l4241 357C  
                                                    l5033 37EE  
                                                    l5025 378A  
                                                    l5203 437C  
                                                    l3363 47E6  
                                                    l3355 47DA  
                                                    l3347 4910  
                                                    l5211 48F4  
                                                    l4083 48D2  
                                                    l4059 2168  
                                                    l4067 21DA  
                                                    l4171 067C  
                                                    l4163 0604  
                                                    l4155 05AE  
                                                    l4147 050A  
                                                    l4139 03FC  
                                                    l4091 005A  
                                                    l4307 3F30  
                                                    l5051 22BE  
                                                    l5043 2272  
                                                    l5123 26AE  
                                                    l5107 2618  
                                                    l5115 2642  
                                                    l4219 4622  
                                                    l4411 3FCC  
                                                    l4403 3F8C  
                                                    l4331 24EC  
                                                    l4323 2470  
                                                    l4315 2422  
                                                    l4243 3596  
                                                    l4235 3500  
                                                    l5035 3810  
                                                    l5027 3792  
                                                    l5221 47B6  
                                                    l5141 1E70  
                                                    l5205 4390  
                                                    l3365 4916  
                                                    l3357 47DC  
                                                    l3349 4912  
                                                    l5213 4900  
                                                    l4077 48D8  
                                                    l4069 222E  
                                                    l4173 0680  
                                                    l4165 0634  
                                                    l4157 05E4  
                                                    l4149 0558  
                                                    l4093 006C  
                                                    l4085 0008  
                                                    l5061 230A  
                                                    l5053 22C6  
                                                    l5045 227A  
                                                    l5125 26C2  
                                                    l5109 2620  
                                                    l5117 267C  
                                                    l4413 3FF4  
                                                    l4333 252C  
                                                    l4325 248E  
                                                    l4317 2438  
                                                    l4341 4306  
                                                    l4501 0DFA  
                                                    l4421 0754  
                                                    l4245 359A  
                                                    l4237 3522  
                                                    l4253 35AE  
                                                    l4229 34F2  
                                                    l5029 37AA  
                                                    l5301 36C2  
                                                    l5223 47BA  
                                                    l5215 4790  
                                                    l4511 3B60  
                                                    l5151 1EB4  
                                                    l5143 1E74  
                                                    l5207 43C0  
                                                    l3367 4918  
                                                    l3359 47DE  
                                                    l4079 48EA  
                                                    l1759 2E24  
                                                    l4271 2D0E  
                                                    l4263 2CE8  
                                                    l4191 073C  
                                                    l4183 070C  
                                                    l4167 0646  
                                                    l4175 06A2  
                                                    l4159 05EC  
                                                    l4087 0008  
                                                    l5063 2328  
                                                    l5055 22E4  
                                                    l5047 2298  
                                                    l5039 2250  
                                                    l5231 2B9C  
                                                    l4407 3FA2  
                                                    l4335 254A  
                                                    l4327 24BC  
                                                    l4319 243E  
                                                    l4351 433E  
                                                    l4343 4306  
                                                    l4503 0DFE  
                                                    l4431 07BC  
                                                    l4423 075C  
                                                    l4255 35B2  
                                                    l4247 35A4  
                                                    l4239 3572  
                                                    l5311 3752  
                                                    l5303 36D2  
                                                    l5217 479A  
                                                    l4513 3B6E  
                                                    l5161 1F18  
                                                    l5153 1EC2  
                                                    l5145 1E7E  
                                                    l5209 48F0  
                                                    l4281 2D6C  
                                                    l4273 2D1E  
                                                    l4265 2CEC  
                                                    l4185 0722  
                                                    l4177 06F2  
                                                    l4169 064E  
                                                    l4097 0074  
                                                    l4089 002A  
                                                    l4601 3C1E  
                                                    l5073 2388  
                                                    l5081 23B4  
                                                    l5057 22E8  
                                                    l5049 22A0  
                                                    l5129 26CE  
                                                    l5233 2BD2  
                                                    l5225 2B94  
                                                    l4417 400A  
                                                    l4409 3FB2  
                                                    l4337 2578  
                                                    l4329 24E0  
                                                    l4353 4362  
                                                    l4345 4306  
                                                    l4505 0E20  
                                                    l4441 0858  
                                                    l4433 07EC  
                                                    l4425 0776  
                                                    l4361 2A54  
                                                    l5313 3754  
                                                    l5305 36DE  
                                                    l5219 47A0  
                                                    l4531 3612  
                                                    l4523 35E2  
                                                    l4515 3BB2  
                                                    l5171 1F6E  
                                                    l5163 1F30  
                                                    l5155 1EDA  
                                                    l5147 1E96  
                                                    l5139 1E6C  
                                                    l4291 2DDC  
                                                    l4283 2D70  
                                                    l4275 2D2A  
                                                    l4267 2CFC  
                                                    l4195 4030  
                                                    l4187 0734  
                                                    l4179 0704  
                                                    l4099 00A4  
                                                    l4611 3C88  
                                                    l4603 3C32  
                                                    l5075 2394  
                                                    l5067 2330  
                                                    l5091 2588  
                                                    l5251 41F0  
                                                    l5243 2C1E  
                                                    l5235 2BF0  
                                                    l4347 4316  
                                                    l4451 08C4  
                                                    l4443 086E  
                                                    l4427 07A6  
                                                    l4371 2AF0  
                                                    l4363 2A74  
                                                    l5315 3756  
                                                    l5307 3700  
                                                    l3901 3A5E  
                                                    l4541 3668  
                                                    l4525 35F6  
                                                    l4701 17F0  
                                                    l4517 3BDA  
                                                    l5181 1FD8  
                                                    l5173 1F86  
                                                    l5165 1F36  
                                                    l5157 1EF0  
                                                    l5149 1EA6  
                                                    l4285 2D80  
                                                    l4277 2D44  
                                                    l4293 2DFA  
                                                    l4269 2D08  
                                                    l4197 4030  
                                                    l4621 3DB4  
                                                    l4613 3C94  
                                                    l4605 3C46  
                                                    l5077 23A8  
                                                    l5069 236A  
                                                    l5093 258C  
                                                    l5253 4214  
                                                    l5245 2C4C  
                                                    l5237 2C16  
                                                    l4349 4330  
                                                    l4453 08E4  
                                                    l4445 0880  
                                                    l4437 080C  
                                                    l4381 2B6E  
                                                    l4373 2AFA  
                                                    l4365 2AB4  
                                                    l4357 2A16  
                                                    l5501 29D4  
                                                    l5261 28D8  
                                                    l5317 3772  
                                                    l5309 3722  
                                                    l4391 4570  
                                                    l3903 3A7E  
                                                    l4543 367E  
                                                    l4527 35F6  
                                                    l4711 18D2  
                                                    l4703 1812  
                                                    l4551 3936  
                                                    l3911 45C0  
                                                    l4519 3C10  
                                                    l5191 2026  
                                                    l5183 1FE8  
                                                    l5175 1F9A  
                                                    l5167 1F46  
                                                    l5159 1F00  
                                                    l4295 2E0C  
                                                    l4287 2DAE  
                                                    l4279 2D4E  
                                                    l4199 4030  
                                                    l4631 3CE6  
                                                    l4623 3DD6  
                                                    l4615 3D86  
                                                    l4607 3C4C  
                                                    l5511 2344  
                                                    l5095 25AA  
                                                    l5255 4234  
                                                    l5247 2C82  
                                                    l4471 0BF0  
                                                    l4463 094C  
                                                    l4455 08FA  
                                                    l4447 089C  
                                                    l4439 0840  
                                                    l4383 2B78  
                                                    l4375 2B14  
                                                    l4367 2ABE  
                                                    l4359 2A3A  
                                                    l5503 29F8  
                                                    l5271 296E  
                                                    l5263 28DE  
                                                    l5319 3776  
                                                    l4393 4586  
                                                    l3905 3A9A  
                                                    l4545 36A2  
                                                    l4537 3616  
                                                    l4529 360C  
                                                    l4713 1900  
                                                    l4705 1848  
                                                    l4553 3936  
                                                    l3921 4604  
                                                    l3913 45C0  
                                                    l4801 2F2C  
                                                    l5193 203A  
                                                    l5185 1FF8  
                                                    l5177 1FAA  
                                                    l5169 1F56  
                                                    l2881 4868  
                                                    l4297 2E18  
                                                    l4289 2DD2  
                                                    l4641 3D48  
                                                    l4633 3CFA  
                                                    l4625 3DEA  
                                                    l4617 3D9A  
                                                    l4609 3C74  
                                                    l5513 23C8  
                                                    l5097 25B2  
                                                    l5249 2CA0  
                                                    l4481 0C9E  
                                                    l4473 0C1A  
                                                    l4465 0974  
                                                    l4457 0904  
                                                    l4449 08AC  
                                                    l4377 2B18  
                                                    l4369 2AEC  
                                                    l4385 2B82  
                                                    l5505 29E2  
                                                    l5273 2980  
                                                    l5265 28F0  
                                                    l5257 2898  
                                                    l4395 45A4  
                                                    l4539 3664  
                                                    l4715 192E  
                                                    l4707 1876  
                                                    l4571 39D4  
                                                    l4563 3956  
                                                    l4555 394C  
                                                    l3915 45D6  
                                                    l4803 2F46  
                                                    l4651 47F4  
                                                    l4643 47EE  
                                                    l4731 3B14  
                                                    l5195 203E  
                                                    l5187 1FFE  
                                                    l5179 1FBC  
                                                    l5515 21F0  
                                                    l3931 3E5E  
                                                    l4635 3D00  
                                                    l4627 3DF6  
                                                    l4619 3DAE  
                                                    l5507 2656  
                                                    l5099 25D0  
                                                    l4491 0D5E  
                                                    l4483 0CBA  
                                                    l4475 0C50  
                                                    l4467 099A  
                                                    l4459 0936  
                                                    l4379 2B44  
                                                    l5267 292C  
                                                    l4397 45AE  
                                                    l4389 4566  
                                                    l5517 1DA6  
                                                    l4661 1C60  
                                                    l4717 195C  
                                                    l4709 18A4  
                                                    l4565 3996  
                                                    l4557 3952  
                                                    l4549 3922  
                                                    l3917 45DC  
                                                    l3909 45C0  
                                                    l4653 47FC  
                                                    l4645 47EE  
                                                    l4733 3B38  
                                                    l4725 3AB0  
                                                    l4821 450E  
                                                    l4813 481A  
                                                    l4741 2F78  
                                                    l5197 2050  
                                                    l5189 201A  
                                                    l4901 0FA4  
                                                    l3941 3EC2  
                                                    l3933 3E6C  
                                                    l3925 3E34  
                                                    l4637 3D28  
                                                    l4629 3CD2  
                                                    l5509 26E2  
                                                    l4493 0D62  
                                                    l4485 0CD6  
                                                    l4477 0C6C  
                                                    l4469 0A70  
                                                    l5269 2968  
                                                    l5277 29A0  
                                                    l4591 336C  
                                                    l4671 1D2A  
                                                    l4663 1C92  
                                                    l4719 1992  
                                                    l4567 399A  
                                                    l3951 44A6  
                                                    l3919 45E2  
                                                    l4647 47EE  
                                                    l4727 3AB0  
                                                    l4823 4534  
                                                    l4807 488A  
                                                    l4815 481A  
                                                    l4751 3062  
                                                    l4743 2FB4  
                                                    l5199 2060  
                                                    l4911 10B6  
                                                    l4903 1054  
                                                    l3935 3E7E  
                                                    l3927 3E34  
                                                    l4639 3D3C  
                                                    l4399 3F8C  
                                                    l4487 0D0C  
                                                    l4479 0C82  
                                                    l4495 0D88  
                                                    l4575 46AC  
                                                    l4593 33B6  
                                                    l4585 330C  
                                                    l4673 1D44  
                                                    l4665 1CAC  
                                                    l4681 1D90  
                                                    l4657 1C20  
                                                    l4569 39B0  
                                                    l4841 4444  
                                                    l3961 44E6  
                                                    l3953 44A6  
                                                    l4649 47F2  
                                                    l4729 3AEC  
                                                    l4809 488A  
                                                    l4761 2716  
                                                    l4753 3088  
                                                    l4745 2FC4  
                                                    l4737 2F78  
                                                    l4921 1186  
                                                    l4905 1072  
                                                    l4913 112E  
                                                    l3945 3ECA  
                                                    l3937 3E8C  
                                                    l3929 3E4E  
                                                    l4497 0DA8  
                                                    l4489 0D14  
                                                    l4577 48A6  
                                                    l5297 36BA  
                                                    l4595 33C8  
                                                    l4587 332E  
                                                    l4579 3308  
                                                    l3891 39EE  
                                                    l4675 1D76  
                                                    l4667 1CDE  
                                                    l4683 1E3C  
                                                    l4659 1C20  
                                                    l4691 1742  
                                                    l4843 444C  
                                                    l4835 4444  
                                                    l3963 44F6  
                                                    l3955 44BC  
                                                    l4851 427C  
                                                    l4827 454A  
                                                    l4819 450A  
                                                    l4771 27D0  
                                                    l4763 2716  
                                                    l4755 3088  
                                                    l4747 2FF6  
                                                    l4739 2F78  
                                                    l4931 123A  
                                                    l4923 1196  
                                                    l4915 1154  
                                                    l4907 107E  
                                                    l3939 3EB0  
                                                    l3971 3210  
                                                    l4499 0DB0  
                                                    l5299 36BE  
                                                    l4589 3348  
                                                    l4597 33E2  
                                                    l3893 39F4  
                                                    l4669 1CF8  
                                                    l4693 1742  
                                                    l4845 4484  
                                                    l4837 4444  
                                                    l3957 44C2  
                                                    l3949 44A6  
                                                    l4861 42CC  
                                                    l4853 4280  
                                                    l4829 454E  
                                                    l4773 2800  
                                                    l4765 2752  
                                                    l4749 302C  
                                                    l4941 13CE  
                                                    l4925 11A8  
                                                    l4933 12D8  
                                                    l4909 109A  
                                                    l3981 32A2  
                                                    l3973 3226  
                                                    l4599 33E6  
                                                    l3895 3A12  
                                                    l4695 177E  
                                                    l2999 19C2  
                                                    l4839 4444  
                                                    l3959 44C4  
                                                    l4863 42E4  
                                                    l4855 42A6  
                                                    l4791 2E4C  
                                                    l4783 2E36  
                                                    l4775 2828  
                                                    l4767 2762  
                                                    l4759 2716  
                                                    l4871 415E  
                                                    l4943 13EA  
                                                    l4935 1388  
                                                    l4927 11BE  
                                                    l4919 1186  
                                                    l4951 40C6  
                                                    l3991 14E6  
                                                    l3983 32D0  
                                                    l3975 322C  
                                                    l3967 31F2  
                                                    l3897 3A22  
                                                    l3889 39E6  
                                                    l4697 17A8  
                                                    l4793 2E88  
                                                    l4785 2E36  
                                                    l4777 284C  
                                                    l4769 2796  
                                                    l4881 41CA  
                                                    l4873 417C  
                                                    l4937 13A6  
                                                    l4945 1462  
                                                    l4929 11F8  
                                                    l4961 4138  
                                                    l4953 40D8  
                                                    l3993 14E6  
                                                    l3985 32F4  
                                                    l3977 3244  
                                                    l3969 3210  
                                                    l3899 3A40  
                                                    l4699 17CC  
                                                    l4859 42BC  
                                                    l4795 2E98  
                                                    l4787 2E36  
                                                    l4779 2866  
                                                    l4875 41A4  
                                                    l4947 1488  
                                                    l4939 13B2  
                                                    l4891 0E4C  
                                                    l4955 40EC  
                                                    l3995 14FC  
                                                    l3979 3284  
                                                    l4971 442A  
                                                    l4797 2EF0  
                                                    l4869 415E  
                                                    l4893 0E74  
                                                    l4957 40FC  
                                                    l4981 46EA  
                                                    l3997 1502  
                                                    l3989 14BA  
                                                    l4965 43DE  
                                                    l4799 2F1C  
                                                    l4879 41BA  
                                                    l4895 0E8A  
                                                    l4887 0E3C  
                                                    l4959 411A  
                                                    l4991 471C  
                                                    l4983 46F2  
                                                    l3999 151A  
                                                    l4975 4432  
                                                    l4967 43FA  
                                                    l4993 475A  
                                                    l4897 0EC4  
                                                    l4889 0E3C  
                                                    l4985 4708  
                                                    l4969 440A  
                                                    l4995 4760  
                                                    l4899 0F06  
                                                    l4987 470A  
                                                    l4979 46E8  
                                                    l4997 4774  
                                                    l4989 470C  
                                                    l4999 3856  
                                     __end_of_XF_popEvent 391A  
                                                    STR_1 FFED  
                                                    u2000 2578  
                                                    u2001 2574  
                                                    u2010 2A54  
                                                    u2011 2A50  
                                                    u2100 089C  
                                                    u2101 0898  
                                                    u2021 2A88  
                                                    u2110 08C4  
                                                    u2030 2AEC  
                                                    u2111 08C0  
                                                    u2031 2AE8  
                                                    u2200 3B6E  
                                                    u2120 08FA  
                                                    u2040 2B14  
                                                    u3000 2980  
                                                    u2201 3B6A  
                                                    u2121 08F6  
                                                    u2041 2B10  
                                                    u3001 297C  
                                                    u2210 365A  
                                                    u2130 0948  
                                                    u2131 0944  
                                                    u2051 2B66  
                                                    u2220 367E  
                                                    u2060 3F9E  
                                                    u2140 099A  
                                                    u2221 367A  
                                                    u2061 3F9A  
                                                    u2141 0996  
                                                    _LATA 0F89  
                                                    u2310 3C46  
                                                    u2070 4006  
                                                    u2150 0B66  
                                                    _LATB 0F8A  
                                                    u2215 3650  
                                                    u2311 3C42  
                                                    u2071 4002  
                                                    _LATC 0F8B  
                                                    u2240 39B0  
                                                    u1600 3EC2  
                                                    u2080 07B8  
                                                    _LATD 0F8C  
                                                    u2241 39AC  
                                                    u1601 3EBE  
                                                    u2081 07B4  
                                                    _LATE 0F8D  
                                                    u2234 398C  
                                                    u1610 32D0  
                                                    u2330 3DAE  
                                                    u2170 0C6C  
                                                    u2090 0808  
                                                    _LATF 0F8E  
                                                    u2235 3986  
                                                    u1611 32CC  
                                                    u2331 3DAA  
                                                    u2171 0C68  
                                                    u2155 0B5C  
                                                    u2091 0804  
                                                    _LATG 0F8F  
                                                    u2500 42B8  
                                                    u1620 1580  
                                                    u1700 00C0  
                                                    u2180 0D84  
                                                    _LATH 0F90  
                                                    u2405 18A4  
                                                    u2501 42B4  
                                                    u1621 157C  
                                                    u1701 00BC  
                                                    u2181 0D80  
                                                    u2165 0BAC  
                                                    u2510 41B6  
                                                    u1630 15B6  
                                                    u1710 0136  
                                                    u2350 3CFA  
                                                    u2190 0E20  
                                                    _LATJ 0F91  
                                                    u2415 18D2  
                                                    u2511 41B2  
                                                    u1631 15B2  
                                                    u1711 0132  
                                                    u2351 3CF6  
                                                    u2191 0E1C  
                                                    u2520 0E74  
                                                    u1640 1692  
                                                    u1800 054E  
                                                    u1720 01E6  
                                                    u2425 1900  
                                                    u2521 0E70  
                                                    u1641 168E  
                                                    u1721 01E2  
                                                    u1570 3A12  
                                                    u2610 11A8  
                                                    u2530 0EFC  
                                                    u1650 172C  
                                                    u1810 05E4  
                                                    u1730 026E  
                                                    u1571 3A0E  
                                                    u2435 192E  
                                                    u2611 11A4  
                                                    u1651 1728  
                                                    u1811 05E0  
                                                    u1580 3A98  
                                                    u2620 1230  
                                                    u2700 40D8  
                                                    u1660 20A4  
                                                    u1820 0604  
                                                    u1900 35C8  
                                                    u1581 3A94  
                                                    u2445 195C  
                                                    u2365 17CC  
                                                    u2605 111C  
                                                    u2701 40D4  
                                                    u1661 20A0  
                                                    u1821 0600  
                                                    u1805 0544  
                                                    u1901 35C4  
                                                    u2470 2E48  
                                                    u1670 48EA  
                                                    u1910 2CFC  
                                                    u1590 3E7E  
                                                    u1830 06A2  
                                                    u1750 02DA  
                                                    u2710 440A  
                                                    u2375 17F0  
                                                    u2471 2E44  
                                                    u2455 3B38  
                                                    u2535 0EF2  
                                                    u1671 48E6  
                                                    u1911 2CF8  
                                                    u1591 3E7A  
                                                    u1831 069E  
                                                    u1735 0264  
                                                    u2711 4406  
                                                    u2560 0F92  
                                                    u1680 48D2  
                                                    u1920 2D1E  
                                                    u1840 0704  
                                                    u1760 0316  
                                                    u2800 22BE  
                                                    u2385 1812  
                                                    u2465 284C  
                                                    u2625 1226  
                                                    u2545 0F32  
                                                    u1681 48CE  
                                                    u1921 2D1A  
                                                    u1841 0700  
                                                    u1745 02A4  
                                                    u2801 22BA  
                                                    u2490 4546  
                                                    u2650 12C6  
                                                    u2570 0FD0  
                                                    u1930 2D44  
                                                    u1850 0734  
                                                    u1690 006C  
                                                    u2810 22E4  
                                                    u2395 1876  
                                                    u2491 4542  
                                                    u2635 1266  
                                                    u2555 0F5C  
                                                    u1931 2D40  
                                                    u1851 0730  
                                                    u1755 02D0  
                                                    u1691 0068  
                                                    u2811 22E0  
                                                    u2660 1304  
                                                    u1940 2D80  
                                                    u2740 388A  
                                                    u1860 4094  
                                                    u2820 2306  
                                                    u2900 268E  
                                                    u2485 2EE0  
                                                    u2645 1290  
                                                    u2565 0F88  
                                                    u1941 2D7C  
                                                    u2741 3886  
                                                    u1861 4090  
                                                    u1765 030C  
                                                    u2821 2302  
                                                    u2901 268A  
                                                    u2910 2050  
                                                    u1950 2DAE  
                                                    u1790 0500  
                                                    u2830 2328  
                                                    u1870 3522  
                                                    u2911 204C  
                                                    u2655 12BC  
                                                    u2575 0FC6  
                                                    u1951 2DAA  
                                                    u1775 035A  
                                                    u2831 2324  
                                                    u1871 351E  
                                                    u1960 2DFA  
                                                    u2840 237C  
                                                    u2665 12FA  
                                                    u2585 1014  
                                                    u1961 2DF6  
                                                    u1785 0438  
                                                    u2841 2378  
                                                    u1881 356A  
                                                    u1970 2E0C  
                                                    u2850 25AA  
                                                    u2930 2C16  
                                                    u1890 3596  
                                                    u2675 1348  
                                                    u2595 10F2  
                                                    u1971 2E08  
                                                    u1795 04F6  
                                                    u2851 25A6  
                                                    u2931 2C12  
                                                    u1891 3592  
                                                    u2771 3836  
                                                    u1980 3F30  
                                                    u2780 2272  
                                                    u2860 25D0  
                                                    u2940 2CC6  
                                                    u2685 1426  
                                                    u1981 3F2C  
                                                    u2781 226E  
                                                    u2861 25CC  
                                                    u2941 2CC2  
                                                    u2790 2298  
                                                    u2870 25F6  
                                                    u1990 24BC  
                                                    u2695 1450  
                                                    u2791 2294  
                                                    u2871 25F2  
                                                    u1991 24B8  
                                                    u2880 2618  
                                                    u2960 4234  
                                                    u2881 2614  
                                                    u2961 4230  
                                                    u2890 263E  
                                                    u2891 263A  
                                                    u2980 28D4  
                                                    u2981 28D0  
                                                    u2990 28F0  
                                                    u2991 28EC  
                                                    u2978 425A  
                                                    u2979 426E  
                       __end_of_DRV_CANFDSPI_TimeStampSet 4842  
                                    _motorControl_Process 2250  
                                                    _main 36B2  
                                        _XF_scheduleTimer 34F0  
                                                    fsr0h 0FEA  
                                                    fsr1h 0FE2  
                                                    indf0 0FEF  
                                                    fsr2h 0FDA  
                                                    fsr0l 0FE9  
                                                    indf1 0FE7  
                                                    indf2 0FDF  
                                                    fsr1l 0FE1  
                                                    fsr2l 0FD9  
                                   _canControlResetValues FF8D  
                                                    btemp 0001  
                                            _CanSetFilter 4372  
                                         __end_of_CanInit 2072  
                                         __end_of_CanSend 3F84  
                                   _lightContol_BackLight 3CCA  
                                                    prodh 0FF4  
                                                    prodl 0FF3  
                                                    start 00AE  
                                         __end_of_XF_init 2CE4  
                                         __end_of_XF_post 384E  
                                            ___param_bank 0000  
             __end_of_DRV_CANFDSPI_TransmitQueueConfigure 30B0  
                     _DRV_CANFDSPI_TransmitQueueConfigure 2F70  
                                 __end_of_TMR0_Initialize 4722  
                     __end_of_DRV_CANFDSPI_WriteByteArray 3304  
                             _DRV_CANFDSPI_WriteByteArray 31EA  
                           __end_of_OSCILLATOR_Initialize 491E  
                                         __end_of___awmod 2E2E  
__end_of_DRV_CANFDSPI_TransmitChannelConfigureObjectReset 31EA  
        _DRV_CANFDSPI_TransmitChannelConfigureObjectReset 30B0  
                                                   _T0CON 0FD5  
                                                   _TMR0H 0FD7  
                                                   _TMR0L 0FD6  
                                                   _TRISA 0F92  
                                                   _TRISB 0F93  
                                                   _TRISC 0F94  
                                                   _TRISD 0F95  
                                                   _TRISE 0F96  
                                                   _TRISF 0F97  
                                                   _TRISG 0F98  
                                                   _TRISH 0F99  
                                                   _TRISJ 0F9A  
                                        __end_of_TMR0_ISR 47C0  
                                                   _dummy 0031  
                                                   _theXF 02C8  
                          __end_of_DRV_CANFDSPI_Configure 19BA  
                                    __end_of_XF_pushEvent 2B90  
                               motorControl_Process@state 003E  
                                                   pclath 0FFA  
                                                   pclatu 0FFB  
                                                   tablat 0FF5  
                                                   ltemp0 0001  
                                                   ltemp1 0005  
                                                   ltemp2 0009  
                            lightControl_Process@oldState 0039  
                                                   plusw0 0FEB  
                                                   plusw1 0FE3  
                                                   plusw2 0FDB  
                                                   ttemp0 0001  
                                                   ttemp1 0004  
                                                   ttemp2 0007  
                                                   ttemp3 000A  
                                                   ttemp5 0002  
                                                   ttemp6 0005  
                                                   ttemp7 0009  
                                                   status 0FD8  
                                                   wtemp0 0001  
                                                   wtemp1 0003  
                                                   wtemp2 0005  
                                                   wtemp3 0007  
                                                   wtemp4 0009  
                                                   wtemp5 000B  
                                                   wtemp8 0002  
                   __end_of_DRV_CANFDSPI_FilterToFifoLink 4156  
                           _DRV_CANFDSPI_FilterToFifoLink 40C0  
                               _DRV_CANFDSPI_TefConfigure 3AA8  
                                         __initialization 4662  
                                              _Event_init 4614  
                                            __end_of_main 3782  
                             ?_INTERRUPT_InterruptManager 0040  
                      __end_of_DRV_CANFDSPI_ReadByteArray 2588  
                              _DRV_CANFDSPI_ReadByteArray 23FC  
                                     __end_of_Event_setPE 46E8  
                                     __end_of_Event_setId 48C0  
                                           __activetblptr 0003  
                                          _Event_getDelay 4842  
                                             _XF_popEvent 384E  
                                        _spiReceiveBuffer 0200  
                  __end_of_DRV_CANFDSPI_ReceiveMessageGet 0E34  
                          _DRV_CANFDSPI_ReceiveMessageGet 074C  
                                                  i2l1039 006C  
                                                  i2l5291 004C  
                                                  i2l5293 005A  
                                                  i2l5295 0068  
                                                  u225_40 332E  
                                                  u225_41 332A  
                                                  u226_40 336C  
                                                  u226_41 3368  
                                                  u227_41 3398  
                                                  u228_40 33B6  
                                                  u228_41 33B2  
                                                  u229_40 33FC  
                                                  u229_41 33F8  
                                                  u272_40 4774  
                                                  u272_41 4770  
                                                  u273_48 477A  
                                                  u273_49 478E  
                                                  u292_40 47B6  
                                                  u292_41 47B2  
                                                  _OSCCON 0FD3  
                                          _Event_setDelay 4722  
                                          _XF_noMoreEvent 4924  
                                          _XF_noMoreTimer 491E  
                          __end_of_DRV_CANFDSPI_WriteByte 4614  
                          __end_of_DRV_CANFDSPI_WriteWord 36B2  
                                       __end_of_SPI2_Open 3C16  
                                          _XF_executeOnce 41E8  
                      __end_of_DRV_CANFDSPI_ReadWordArray 173A  
                              _DRV_CANFDSPI_ReadWordArray 14B2  
                                                  clear_0 466A  
                                                  clear_1 467C  
                                                  clear_2 4688  
                                                  clear_3 4694  
                                                  clear_4 46A0  
                                                  isa$std 0001  
                                  __end_of_Event_getDelay 4868  
                                                  lltemp0 0001  
                                                  lltemp1 0009  
                                                  lltemp2 0011  
                                                  lltemp3 0019  
                                            __mediumconst FF8C  
                      __end_of_DRV_CANFDSPI_WriteHalfWord 39E4  
                              _DRV_CANFDSPI_WriteHalfWord 391A  
                                                  tblptrh 0FF7  
                                                  tblptrl 0FF6  
                                                  tblptru 0FF8  
                                   __end_of_TMR0_CallBack 4790  
                                  __end_of_Event_setDelay 475A  
                                  __end_of_XF_noMoreEvent 492A  
                                  __end_of_XF_noMoreTimer 4924  
                                       _SYSTEM_Initialize 48F0  
                         lightContol_FrontLight@lastLight 003C  
                                              __accesstop 0060  
                                 __end_of__initialization 46A6  
                                           ___rparam_used 0001  
                                  __end_of_XF_executeOnce 4278  
                                  _lightContol_FrontLight 3D7E  
                              __end_of_spi2_configuration FFED  
                                          __pcstackCOMRAM 0040  
                                              ___inthi_sp 0931  
                                             _Event_setPE 46AC  
                                             _Event_setId 48A6  
                                __end_of_XF_scheduleTimer 35DA  
                                   TMR0_ISR@CountCallBack 0035  
                                     __end_of_SpiTransfer 3AA8  
                                   __end_of_LEAVECRITICAL 48D8  
                               __end_of_SYSTEM_Initialize 4906  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pnvCOMRAM 0050  
                        __end_of_TMR0_SetInterruptHandler 488A  
                               _DRV_CANFDSPI_TimeStampSet 481A  
                                            _XF_pushEvent 2A10  
              __end_of_DRV_CANFDSPI_FilterObjectConfigure 117E  
                      _DRV_CANFDSPI_FilterObjectConfigure 0E34  
                                                 _OSCTUNE 0F9B  
                                   __end_of_ENTERCRITICAL 48F0  
                                                 _SSP2ADD 0F65  
                                                 _SSP2BUF 0F66  
                                                 _CanInit 1E64  
                                                 _CanSend 3EDA  
                                                 _XF_init 2B90  
                                                 _XF_post 3782  
                                                 __Hparam 0000  
                                                 __Lparam 0000  
                     __end_of_DRV_CANFDSPI_DlcToDataBytes 2250  
                             _DRV_CANFDSPI_DlcToDataBytes 2072  
            __end_of_DRV_CANFDSPI_ReceiveChannelConfigure 2F70  
                    _DRV_CANFDSPI_ReceiveChannelConfigure 2E2E  
                                                 ___awmod 2CE4  
                                                 uf295999 4208  
             __end_of_DRV_CANFDSPI_ReceiveChannelEventGet 4028  
                     _DRV_CANFDSPI_ReceiveChannelEventGet 3F84  
                                                 __pcinit 4662  
                                                 __ramtop 1000  
                                                 __ptext0 36B2  
                                                 __ptext1 2890  
                                                 __ptext2 3782  
                                                 __ptext3 2A10  
                                                 __ptext4 34F0  
                                                 __ptext5 491E  
                                                 __ptext6 4924  
                                                 __ptext7 4722  
                                                 __ptext8 4842  
                                                 __ptext9 46AC  
                                             _SpiTransfer 39E4  
                                               _T0CONbits 0FD5  
                                                 us230999 3C28  
                                                 us232999 3D90  
                                                 us234999 3CDC  
                                                 us275999 38A6  
                                   _OSCILLATOR_Initialize 4916  
                                                 us276999 38CE  
                             lightContol_FrontLight@F6662 008B  
                                    end_of_initialization 46A6  
                              __end_of_DRV_CANFDSPI_Reset 481A  
                                      __end_of_CanReceive 4440  
                                                 postdec0 0FED  
                                                 postdec1 0FE5  
                                                 postdec2 0FDD  
                                                 postinc0 0FEE  
                                                 postinc1 0FE6  
                                                 postinc2 0FDE  
  __end_of_DRV_CANFDSPI_TransmitQueueConfigureObjectReset 34F0  
          _DRV_CANFDSPI_TransmitQueueConfigureObjectReset 3402  
                                               _SPI2_Open 3B60  
                                _TMR0_SetInterruptHandler 4868  
                                               _TRISDbits 0F95  
                                               _TRISGbits 0F98  
                            __end_of_INTERRUPT_Initialize 492E  
                            __end_of_lightControl_Process 270E  
                                         _SPI2_Initialize 4906  
                                      _spi2_configuration FFE9  
                                     start_initialization 4662  
                           __end_of_DRV_CANFDSPI_ReadByte 4506  
                              __end_of_canFifoResetValues FFE9  
                                      __end_of_Event_init 4662  
                          __end_of_lightContol_FrontLight 3E2C  
                              __end_of_XF_unscheduleTimer 45BE  
                                             __pbssBIGRAM 02C8  
                                             __pbssCOMRAM 0021  
           __end_of_DRV_CANFDSPI_TransmitChannelConfigure 2890  
                   _DRV_CANFDSPI_TransmitChannelConfigure 270E  
                                       _spiTransmitBuffer 0100  
                                    __end_of_motorControl 3CCA  
                               lightControl_Process@state 003A  
                                   _TMR0_InterruptHandler 0050  
                                  _PIN_MANAGER_Initialize 47C0  
                                               __pintcode 0008  
                                           __pmediumconst FF8C  
                                 __end_of_SPI2_Initialize 4916  
                            ??_INTERRUPT_InterruptManager 0040  
                                 motorControl@lastPercent 003F  
                                           _TMR0_CallBack 475A  
                                    _INTERRUPT_Initialize 492A  
                           __end_of_canControlResetValues FFDD  
                                    _lightControl_Process 2588  
                           __end_of_lightContol_BackLight 3D7E  
                                                _LATGbits 0F8F  
                __end_of_DRV_CANFDSPI_OperationModeSelect 42FE  
                        _DRV_CANFDSPI_OperationModeSelect 4278  
                                                i2u301_40 005A  
                                                i2u301_41 0056  
                                                i2u302_40 0068  
                                                i2u302_41 0064  
                                                _RCONbits 0FD0  
                                      _DRV_CANFDSPI_Reset 47EE  
                                                _SSP2CON1 0F63  
                                                _SSP2CON2 0F62  
                                                _TMR0_ISR 4790  
                                                _SSP2STAT 0F64  
                                              _ADCON1bits 0FC1  
                          lightContol_BackLight@lastLight 003B  
                                           _LEAVECRITICAL 48C0  
              __end_of_DRV_CANFDSPI_TimeStampPrescalerSet 48A6  
                      _DRV_CANFDSPI_TimeStampPrescalerSet 488A  
                                  _DRV_CANFDSPI_Configure 173A  
                                                __Hrparam 0000  
                                                __Lrparam 0000  
                                       motorControl@F6645 0021  
                __end_of_DRV_CANFDSPI_TransmitChannelLoad 074C  
                        _DRV_CANFDSPI_TransmitChannelLoad 0000  
                                    __end_of_CanSetFilter 43DC  
              __end_of_DRV_CANFDSPI_TransmitChannelUpdate 3EDA  
                      _DRV_CANFDSPI_TransmitChannelUpdate 3E2C  
                            motorControl_Process@oldState 003D  
                                                _carState 0060  
                       __end_of_DRV_CANFDSPI_TefConfigure 3B60  
                                                __ptext10 48A6  
                                                __ptext11 43DC  
                                                __ptext20 2250  
                                                __ptext12 074C  
                                                __ptext21 3C16  
                                                __ptext13 42FE  
                                                __ptext30 4028  
                                                __ptext22 3D7E  
                                                __ptext14 23FC  
                                                __ptext31 384E  
                                                __ptext23 3CCA  
                                                __ptext15 3F84  
                                                __ptext40 4916  
                                                __ptext32 2CE4  
                                                __ptext24 3EDA  
                                                __ptext16 2B90  
                                                __ptext41 492A  
                                                __ptext33 48C0  
                                                __ptext25 0000  
                                                __ptext17 4614  
                                                __ptext50 30B0  
                                                __ptext42 4372  
                                                __ptext34 48D8  
                                                __ptext26 31EA  
                                                __ptext18 41E8  
                                                __ptext51 270E  
                                                __ptext43 40C0  
                                                __ptext35 48F0  
                                                __ptext27 3E2C  
                                                __ptext19 2588  
                                                __ptext60 45BE  
                                                __ptext52 481A  
                                                __ptext44 0E34  
                                                __ptext36 46E8  
                                                __ptext28 14B2  
                                                __ptext61 44A4  
                                                __ptext53 488A  
                                                __ptext45 117E  
                                                __ptext37 4868  
                                                __ptext29 2072  
                                                __ptext70 4790  
                                                __ptext62 4440  
                                                __ptext54 4506  
                                                __ptext46 4156  
                                                __ptext38 4906  
                                                __ptext71 475A  
                                                __ptext63 391A  
                                                __ptext55 3AA8  
                                                __ptext47 1E64  
                                                __ptext39 47C0  
                                                __ptext72 492E  
                                                __ptext64 19BA  
                                                __ptext56 47EE  
                                                __ptext48 3402  
                                                __ptext73 3304  
                                                __ptext65 173A  
                                                __ptext57 3B60  
                                                __ptext49 2F70  
                                                __ptext74 4566  
                                                __ptext66 1C18  
                                                __ptext58 2E2E  
                                                __ptext67 35DA  
                                                __ptext59 4278  
                                                __ptext68 39E4  
                                           _ENTERCRITICAL 48D8  
                                            _SSP2CON1bits 0F63  
                      __end_of_XF_decrementAndQueueTimers 3402  
                              _XF_decrementAndQueueTimers 3304  
                    __end_of_TMR0_DefaultInterruptHandler 4930  
                            _TMR0_DefaultInterruptHandler 492E  
                                      _canFifoResetValues FFDD  
                __end_of_DRV_CANFDSPI_FilterMaskConfigure 14B2  
                        _DRV_CANFDSPI_FilterMaskConfigure 117E  
                                                isa$xinst 0000  
                                      _XF_unscheduleTimer 4566  
                      __end_of_INTERRUPT_InterruptManager 00AE  
                              _INTERRUPT_InterruptManager 0008  
                                  _DRV_CANFDSPI_WriteByte 45BE  
                            __end_of_motorControl_Process 23FC  
                                  _DRV_CANFDSPI_WriteWord 35DA  
                                            _motorControl 3C16  
                                            _SSP2STATbits 0F64  
                      __end_of_DRV_CANFDSPI_FilterDisable 41E8  
                              _DRV_CANFDSPI_FilterDisable 4156  
                                              _INTCONbits 0FF2  
                                   _DRV_CANFDSPI_ReadByte 44A4  
                    __end_of_DRV_CANFDSPI_TimeStampEnable 4566  
                            _DRV_CANFDSPI_TimeStampEnable 4506  
                                                intlevel2 0000  
               __end_of_DRV_CANFDSPI_ReceiveChannelUpdate 4372  
                       _DRV_CANFDSPI_ReceiveChannelUpdate 42FE  
               __end_of_DRV_CANFDSPI_ConfigureObjectReset 1C18  
                       _DRV_CANFDSPI_ConfigureObjectReset 19BA  
                                          _updateCarState 2890  
                                         _TMR0_Initialize 46E8  
                              lightContol_BackLight@F6668 007B  
                          __end_of_PIN_MANAGER_Initialize 47EE  
