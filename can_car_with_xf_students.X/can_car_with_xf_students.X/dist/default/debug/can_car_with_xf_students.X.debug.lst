

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Mar 04 16:01:57 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=1
    47                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    93   000000                     
    94                           ; Generated 23/03/2023 GMT
    95                           ; 
    96                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution. Publication is not required when
   110                           ;        this file is used in an embedded application.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F97J60 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128   000FE0                     bsr             equ	4064
   129   000FE9                     fsr0            equ	4073
   130   000FEA                     fsr0h           equ	4074
   131   000FE9                     fsr0l           equ	4073
   132   000FE1                     fsr1            equ	4065
   133   000FE2                     fsr1h           equ	4066
   134   000FE1                     fsr1l           equ	4065
   135   000FD9                     fsr2            equ	4057
   136   000FDA                     fsr2h           equ	4058
   137   000FD9                     fsr2l           equ	4057
   138   000FEF                     indf0           equ	4079
   139   000FE7                     indf1           equ	4071
   140   000FDF                     indf2           equ	4063
   141   000FF2                     intcon          equ	4082
   142   000000                     nvmcon          equ	0
   143   000FF9                     pcl             equ	4089
   144   000FFA                     pclath          equ	4090
   145   000FFB                     pclatu          equ	4091
   146   000FEB                     plusw0          equ	4075
   147   000FE3                     plusw1          equ	4067
   148   000FDB                     plusw2          equ	4059
   149   000FED                     postdec0        equ	4077
   150   000FE5                     postdec1        equ	4069
   151   000FDD                     postdec2        equ	4061
   152   000FEE                     postinc0        equ	4078
   153   000FE6                     postinc1        equ	4070
   154   000FDE                     postinc2        equ	4062
   155   000FEC                     preinc0         equ	4076
   156   000FE4                     preinc1         equ	4068
   157   000FDC                     preinc2         equ	4060
   158   000FF3                     prod            equ	4083
   159   000FF4                     prodh           equ	4084
   160   000FF3                     prodl           equ	4083
   161   000FD8                     status          equ	4056
   162   000FF5                     tablat          equ	4085
   163   000FF6                     tblptr          equ	4086
   164   000FF7                     tblptrh         equ	4087
   165   000FF6                     tblptrl         equ	4086
   166   000FF8                     tblptru         equ	4088
   167   000FFD                     tosl            equ	4093
   168   000FE8                     wreg            equ	4072
   169   000E80                     MAADR5          equ	3712	;# 
   170   000E81                     MAADR6          equ	3713	;# 
   171   000E82                     MAADR3          equ	3714	;# 
   172   000E83                     MAADR4          equ	3715	;# 
   173   000E84                     MAADR1          equ	3716	;# 
   174   000E85                     MAADR2          equ	3717	;# 
   175   000E8A                     MISTAT          equ	3722	;# 
   176   000E97                     EFLOCON         equ	3735	;# 
   177   000E98                     EPAUS           equ	3736	;# 
   178   000E98                     EPAUSL          equ	3736	;# 
   179   000E99                     EPAUSH          equ	3737	;# 
   180   000EA0                     MACON1          equ	3744	;# 
   181   000EA2                     MACON3          equ	3746	;# 
   182   000EA3                     MACON4          equ	3747	;# 
   183   000EA4                     MABBIPG         equ	3748	;# 
   184   000EA6                     MAIPG           equ	3750	;# 
   185   000EA6                     MAIPGL          equ	3750	;# 
   186   000EA7                     MAIPGH          equ	3751	;# 
   187   000EAA                     MAMXFL          equ	3754	;# 
   188   000EAA                     MAMXFLL         equ	3754	;# 
   189   000EAB                     MAMXFLH         equ	3755	;# 
   190   000EB2                     MICMD           equ	3762	;# 
   191   000EB4                     MIREGADR        equ	3764	;# 
   192   000EB6                     MIWR            equ	3766	;# 
   193   000EB6                     MIWRL           equ	3766	;# 
   194   000EB7                     MIWRH           equ	3767	;# 
   195   000EB8                     MIRD            equ	3768	;# 
   196   000EB8                     MIRDL           equ	3768	;# 
   197   000EB9                     MIRDH           equ	3769	;# 
   198   000EC0                     EHT0            equ	3776	;# 
   199   000EC1                     EHT1            equ	3777	;# 
   200   000EC2                     EHT2            equ	3778	;# 
   201   000EC3                     EHT3            equ	3779	;# 
   202   000EC4                     EHT4            equ	3780	;# 
   203   000EC5                     EHT5            equ	3781	;# 
   204   000EC6                     EHT6            equ	3782	;# 
   205   000EC7                     EHT7            equ	3783	;# 
   206   000EC8                     EPMM0           equ	3784	;# 
   207   000EC9                     EPMM1           equ	3785	;# 
   208   000ECA                     EPMM2           equ	3786	;# 
   209   000ECB                     EPMM3           equ	3787	;# 
   210   000ECC                     EPMM4           equ	3788	;# 
   211   000ECD                     EPMM5           equ	3789	;# 
   212   000ECE                     EPMM6           equ	3790	;# 
   213   000ECF                     EPMM7           equ	3791	;# 
   214   000ED0                     EPMCS           equ	3792	;# 
   215   000ED0                     EPMCSL          equ	3792	;# 
   216   000ED1                     EPMCSH          equ	3793	;# 
   217   000ED4                     EPMO            equ	3796	;# 
   218   000ED4                     EPMOL           equ	3796	;# 
   219   000ED5                     EPMOH           equ	3797	;# 
   220   000ED8                     ERXFCON         equ	3800	;# 
   221   000ED9                     EPKTCNT         equ	3801	;# 
   222   000EE2                     EWRPT           equ	3810	;# 
   223   000EE2                     EWRPTL          equ	3810	;# 
   224   000EE3                     EWRPTH          equ	3811	;# 
   225   000EE4                     ETXST           equ	3812	;# 
   226   000EE4                     ETXSTL          equ	3812	;# 
   227   000EE5                     ETXSTH          equ	3813	;# 
   228   000EE6                     ETXND           equ	3814	;# 
   229   000EE6                     ETXNDL          equ	3814	;# 
   230   000EE7                     ETXNDH          equ	3815	;# 
   231   000EE8                     ERXST           equ	3816	;# 
   232   000EE8                     ERXSTL          equ	3816	;# 
   233   000EE9                     ERXSTH          equ	3817	;# 
   234   000EEA                     ERXND           equ	3818	;# 
   235   000EEA                     ERXNDL          equ	3818	;# 
   236   000EEB                     ERXNDH          equ	3819	;# 
   237   000EEC                     ERXRDPT         equ	3820	;# 
   238   000EEC                     ERXRDPTL        equ	3820	;# 
   239   000EED                     ERXRDPTH        equ	3821	;# 
   240   000EEE                     ERXWRPT         equ	3822	;# 
   241   000EEE                     ERXWRPTL        equ	3822	;# 
   242   000EEF                     ERXWRPTH        equ	3823	;# 
   243   000EF0                     EDMAST          equ	3824	;# 
   244   000EF0                     EDMASTL         equ	3824	;# 
   245   000EF1                     EDMASTH         equ	3825	;# 
   246   000EF2                     EDMAND          equ	3826	;# 
   247   000EF2                     EDMANDL         equ	3826	;# 
   248   000EF3                     EDMANDH         equ	3827	;# 
   249   000EF4                     EDMADST         equ	3828	;# 
   250   000EF4                     EDMADSTL        equ	3828	;# 
   251   000EF5                     EDMADSTH        equ	3829	;# 
   252   000EF6                     EDMACS          equ	3830	;# 
   253   000EF6                     EDMACSL         equ	3830	;# 
   254   000EF7                     EDMACSH         equ	3831	;# 
   255   000EFB                     EIE             equ	3835	;# 
   256   000EFD                     ESTAT           equ	3837	;# 
   257   000EFE                     ECON2           equ	3838	;# 
   258   000F60                     EIR             equ	3936	;# 
   259   000F61                     EDATA           equ	3937	;# 
   260   000F62                     SSP2CON2        equ	3938	;# 
   261   000F63                     SSP2CON1        equ	3939	;# 
   262   000F64                     SSP2STAT        equ	3940	;# 
   263   000F65                     SSP2ADD         equ	3941	;# 
   264   000F66                     SSP2BUF         equ	3942	;# 
   265   000F67                     ECCP2DEL        equ	3943	;# 
   266   000F68                     ECCP2AS         equ	3944	;# 
   267   000F69                     ECCP3DEL        equ	3945	;# 
   268   000F6A                     ECCP3AS         equ	3946	;# 
   269   000F6B                     RCSTA2          equ	3947	;# 
   270   000F6C                     TXSTA2          equ	3948	;# 
   271   000F6D                     TXREG2          equ	3949	;# 
   272   000F6E                     RCREG2          equ	3950	;# 
   273   000F6F                     SPBRG2          equ	3951	;# 
   274   000F70                     CCP5CON         equ	3952	;# 
   275   000F71                     CCPR5           equ	3953	;# 
   276   000F71                     CCPR5L          equ	3953	;# 
   277   000F72                     CCPR5H          equ	3954	;# 
   278   000F73                     CCP4CON         equ	3955	;# 
   279   000F74                     CCPR4           equ	3956	;# 
   280   000F74                     CCPR4L          equ	3956	;# 
   281   000F75                     CCPR4H          equ	3957	;# 
   282   000F76                     T4CON           equ	3958	;# 
   283   000F77                     PR4             equ	3959	;# 
   284   000F78                     TMR4            equ	3960	;# 
   285   000F79                     ECCP1DEL        equ	3961	;# 
   286   000F7A                     ERDPT           equ	3962	;# 
   287   000F7A                     ERDPTL          equ	3962	;# 
   288   000F7B                     ERDPTH          equ	3963	;# 
   289   000F7C                     BAUDCON2        equ	3964	;# 
   290   000F7C                     BAUDCTL2        equ	3964	;# 
   291   000F7D                     SPBRGH2         equ	3965	;# 
   292   000F7E                     BAUDCON1        equ	3966	;# 
   293   000F7E                     BAUDCON         equ	3966	;# 
   294   000F7E                     BAUDCTL         equ	3966	;# 
   295   000F7E                     BAUDCTL1        equ	3966	;# 
   296   000F7F                     SPBRGH1         equ	3967	;# 
   297   000F7F                     SPBRGH          equ	3967	;# 
   298   000F80                     PORTA           equ	3968	;# 
   299   000F81                     PORTB           equ	3969	;# 
   300   000F82                     PORTC           equ	3970	;# 
   301   000F83                     PORTD           equ	3971	;# 
   302   000F84                     PORTE           equ	3972	;# 
   303   000F85                     PORTF           equ	3973	;# 
   304   000F86                     PORTG           equ	3974	;# 
   305   000F87                     PORTH           equ	3975	;# 
   306   000F88                     PORTJ           equ	3976	;# 
   307   000F89                     LATA            equ	3977	;# 
   308   000F8A                     LATB            equ	3978	;# 
   309   000F8B                     LATC            equ	3979	;# 
   310   000F8C                     LATD            equ	3980	;# 
   311   000F8D                     LATE            equ	3981	;# 
   312   000F8E                     LATF            equ	3982	;# 
   313   000F8F                     LATG            equ	3983	;# 
   314   000F90                     LATH            equ	3984	;# 
   315   000F91                     LATJ            equ	3985	;# 
   316   000F92                     TRISA           equ	3986	;# 
   317   000F92                     DDRA            equ	3986	;# 
   318   000F93                     TRISB           equ	3987	;# 
   319   000F93                     DDRB            equ	3987	;# 
   320   000F94                     TRISC           equ	3988	;# 
   321   000F94                     DDRC            equ	3988	;# 
   322   000F95                     TRISD           equ	3989	;# 
   323   000F95                     DDRD            equ	3989	;# 
   324   000F96                     TRISE           equ	3990	;# 
   325   000F96                     DDRE            equ	3990	;# 
   326   000F97                     TRISF           equ	3991	;# 
   327   000F97                     DDRF            equ	3991	;# 
   328   000F98                     TRISG           equ	3992	;# 
   329   000F98                     DDRG            equ	3992	;# 
   330   000F99                     TRISH           equ	3993	;# 
   331   000F99                     DDRH            equ	3993	;# 
   332   000F9A                     TRISJ           equ	3994	;# 
   333   000F9A                     DDRJ            equ	3994	;# 
   334   000F9B                     OSCTUNE         equ	3995	;# 
   335   000F9C                     MEMCON          equ	3996	;# 
   336   000F9D                     PIE1            equ	3997	;# 
   337   000F9E                     PIR1            equ	3998	;# 
   338   000F9F                     IPR1            equ	3999	;# 
   339   000FA0                     PIE2            equ	4000	;# 
   340   000FA1                     PIR2            equ	4001	;# 
   341   000FA2                     IPR2            equ	4002	;# 
   342   000FA3                     PIE3            equ	4003	;# 
   343   000FA4                     PIR3            equ	4004	;# 
   344   000FA5                     IPR3            equ	4005	;# 
   345   000FA6                     EECON1          equ	4006	;# 
   346   000FA7                     EECON2          equ	4007	;# 
   347   000FAB                     RCSTA1          equ	4011	;# 
   348   000FAB                     RCSTA           equ	4011	;# 
   349   000FAC                     TXSTA1          equ	4012	;# 
   350   000FAC                     TXSTA           equ	4012	;# 
   351   000FAD                     TXREG1          equ	4013	;# 
   352   000FAD                     TXREG           equ	4013	;# 
   353   000FAE                     RCREG1          equ	4014	;# 
   354   000FAE                     RCREG           equ	4014	;# 
   355   000FAF                     SPBRG1          equ	4015	;# 
   356   000FAF                     SPBRG           equ	4015	;# 
   357   000FB0                     PSPCON          equ	4016	;# 
   358   000FB1                     T3CON           equ	4017	;# 
   359   000FB2                     TMR3            equ	4018	;# 
   360   000FB2                     TMR3L           equ	4018	;# 
   361   000FB3                     TMR3H           equ	4019	;# 
   362   000FB4                     CMCON           equ	4020	;# 
   363   000FB5                     CVRCON          equ	4021	;# 
   364   000FB6                     ECCP1AS         equ	4022	;# 
   365   000FB7                     CCP3CON         equ	4023	;# 
   366   000FB7                     ECCP3CON        equ	4023	;# 
   367   000FB8                     CCPR3           equ	4024	;# 
   368   000FB8                     CCPR3L          equ	4024	;# 
   369   000FB9                     CCPR3H          equ	4025	;# 
   370   000FBA                     CCP2CON         equ	4026	;# 
   371   000FBA                     ECCP2CON        equ	4026	;# 
   372   000FBB                     CCPR2           equ	4027	;# 
   373   000FBB                     CCPR2L          equ	4027	;# 
   374   000FBC                     CCPR2H          equ	4028	;# 
   375   000FBD                     CCP1CON         equ	4029	;# 
   376   000FBD                     ECCP1CON        equ	4029	;# 
   377   000FBE                     CCPR1           equ	4030	;# 
   378   000FBE                     CCPR1L          equ	4030	;# 
   379   000FBF                     CCPR1H          equ	4031	;# 
   380   000FC0                     ADCON2          equ	4032	;# 
   381   000FC1                     ADCON1          equ	4033	;# 
   382   000FC2                     ADCON0          equ	4034	;# 
   383   000FC3                     ADRES           equ	4035	;# 
   384   000FC3                     ADRESL          equ	4035	;# 
   385   000FC4                     ADRESH          equ	4036	;# 
   386   000FC5                     SSP1CON2        equ	4037	;# 
   387   000FC5                     SSPCON2         equ	4037	;# 
   388   000FC6                     SSP1CON1        equ	4038	;# 
   389   000FC6                     SSPCON1         equ	4038	;# 
   390   000FC7                     SSP1STAT        equ	4039	;# 
   391   000FC7                     SSPSTAT         equ	4039	;# 
   392   000FC8                     SSP1ADD         equ	4040	;# 
   393   000FC8                     SSPADD          equ	4040	;# 
   394   000FC9                     SSP1BUF         equ	4041	;# 
   395   000FC9                     SSPBUF          equ	4041	;# 
   396   000FCA                     T2CON           equ	4042	;# 
   397   000FCB                     PR2             equ	4043	;# 
   398   000FCC                     TMR2            equ	4044	;# 
   399   000FCD                     T1CON           equ	4045	;# 
   400   000FCE                     TMR1            equ	4046	;# 
   401   000FCE                     TMR1L           equ	4046	;# 
   402   000FCF                     TMR1H           equ	4047	;# 
   403   000FD0                     RCON            equ	4048	;# 
   404   000FD1                     WDTCON          equ	4049	;# 
   405   000FD2                     ECON1           equ	4050	;# 
   406   000FD3                     OSCCON          equ	4051	;# 
   407   000FD5                     T0CON           equ	4053	;# 
   408   000FD6                     TMR0            equ	4054	;# 
   409   000FD6                     TMR0L           equ	4054	;# 
   410   000FD7                     TMR0H           equ	4055	;# 
   411   000FD8                     STATUS          equ	4056	;# 
   412   000FD9                     FSR2            equ	4057	;# 
   413   000FD9                     FSR2L           equ	4057	;# 
   414   000FDA                     FSR2H           equ	4058	;# 
   415   000FDB                     PLUSW2          equ	4059	;# 
   416   000FDC                     PREINC2         equ	4060	;# 
   417   000FDD                     POSTDEC2        equ	4061	;# 
   418   000FDE                     POSTINC2        equ	4062	;# 
   419   000FDF                     INDF2           equ	4063	;# 
   420   000FE0                     BSR             equ	4064	;# 
   421   000FE1                     FSR1            equ	4065	;# 
   422   000FE1                     FSR1L           equ	4065	;# 
   423   000FE2                     FSR1H           equ	4066	;# 
   424   000FE3                     PLUSW1          equ	4067	;# 
   425   000FE4                     PREINC1         equ	4068	;# 
   426   000FE5                     POSTDEC1        equ	4069	;# 
   427   000FE6                     POSTINC1        equ	4070	;# 
   428   000FE7                     INDF1           equ	4071	;# 
   429   000FE8                     WREG            equ	4072	;# 
   430   000FE9                     FSR0            equ	4073	;# 
   431   000FE9                     FSR0L           equ	4073	;# 
   432   000FEA                     FSR0H           equ	4074	;# 
   433   000FEB                     PLUSW0          equ	4075	;# 
   434   000FEC                     PREINC0         equ	4076	;# 
   435   000FED                     POSTDEC0        equ	4077	;# 
   436   000FEE                     POSTINC0        equ	4078	;# 
   437   000FEF                     INDF0           equ	4079	;# 
   438   000FF0                     INTCON3         equ	4080	;# 
   439   000FF1                     INTCON2         equ	4081	;# 
   440   000FF2                     INTCON          equ	4082	;# 
   441   000FF3                     PROD            equ	4083	;# 
   442   000FF3                     PRODL           equ	4083	;# 
   443   000FF4                     PRODH           equ	4084	;# 
   444   000FF5                     TABLAT          equ	4085	;# 
   445   000FF6                     TBLPTR          equ	4086	;# 
   446   000FF6                     TBLPTRL         equ	4086	;# 
   447   000FF7                     TBLPTRH         equ	4087	;# 
   448   000FF8                     TBLPTRU         equ	4088	;# 
   449   000FF9                     PCLAT           equ	4089	;# 
   450   000FF9                     PC              equ	4089	;# 
   451   000FF9                     PCL             equ	4089	;# 
   452   000FFA                     PCLATH          equ	4090	;# 
   453   000FFB                     PCLATU          equ	4091	;# 
   454   000FFC                     STKPTR          equ	4092	;# 
   455   000FFD                     TOS             equ	4093	;# 
   456   000FFD                     TOSL            equ	4093	;# 
   457   000FFE                     TOSH            equ	4094	;# 
   458   000FFF                     TOSU            equ	4095	;# 
   459   000E80                     MAADR5          equ	3712	;# 
   460   000E81                     MAADR6          equ	3713	;# 
   461   000E82                     MAADR3          equ	3714	;# 
   462   000E83                     MAADR4          equ	3715	;# 
   463   000E84                     MAADR1          equ	3716	;# 
   464   000E85                     MAADR2          equ	3717	;# 
   465   000E8A                     MISTAT          equ	3722	;# 
   466   000E97                     EFLOCON         equ	3735	;# 
   467   000E98                     EPAUS           equ	3736	;# 
   468   000E98                     EPAUSL          equ	3736	;# 
   469   000E99                     EPAUSH          equ	3737	;# 
   470   000EA0                     MACON1          equ	3744	;# 
   471   000EA2                     MACON3          equ	3746	;# 
   472   000EA3                     MACON4          equ	3747	;# 
   473   000EA4                     MABBIPG         equ	3748	;# 
   474   000EA6                     MAIPG           equ	3750	;# 
   475   000EA6                     MAIPGL          equ	3750	;# 
   476   000EA7                     MAIPGH          equ	3751	;# 
   477   000EAA                     MAMXFL          equ	3754	;# 
   478   000EAA                     MAMXFLL         equ	3754	;# 
   479   000EAB                     MAMXFLH         equ	3755	;# 
   480   000EB2                     MICMD           equ	3762	;# 
   481   000EB4                     MIREGADR        equ	3764	;# 
   482   000EB6                     MIWR            equ	3766	;# 
   483   000EB6                     MIWRL           equ	3766	;# 
   484   000EB7                     MIWRH           equ	3767	;# 
   485   000EB8                     MIRD            equ	3768	;# 
   486   000EB8                     MIRDL           equ	3768	;# 
   487   000EB9                     MIRDH           equ	3769	;# 
   488   000EC0                     EHT0            equ	3776	;# 
   489   000EC1                     EHT1            equ	3777	;# 
   490   000EC2                     EHT2            equ	3778	;# 
   491   000EC3                     EHT3            equ	3779	;# 
   492   000EC4                     EHT4            equ	3780	;# 
   493   000EC5                     EHT5            equ	3781	;# 
   494   000EC6                     EHT6            equ	3782	;# 
   495   000EC7                     EHT7            equ	3783	;# 
   496   000EC8                     EPMM0           equ	3784	;# 
   497   000EC9                     EPMM1           equ	3785	;# 
   498   000ECA                     EPMM2           equ	3786	;# 
   499   000ECB                     EPMM3           equ	3787	;# 
   500   000ECC                     EPMM4           equ	3788	;# 
   501   000ECD                     EPMM5           equ	3789	;# 
   502   000ECE                     EPMM6           equ	3790	;# 
   503   000ECF                     EPMM7           equ	3791	;# 
   504   000ED0                     EPMCS           equ	3792	;# 
   505   000ED0                     EPMCSL          equ	3792	;# 
   506   000ED1                     EPMCSH          equ	3793	;# 
   507   000ED4                     EPMO            equ	3796	;# 
   508   000ED4                     EPMOL           equ	3796	;# 
   509   000ED5                     EPMOH           equ	3797	;# 
   510   000ED8                     ERXFCON         equ	3800	;# 
   511   000ED9                     EPKTCNT         equ	3801	;# 
   512   000EE2                     EWRPT           equ	3810	;# 
   513   000EE2                     EWRPTL          equ	3810	;# 
   514   000EE3                     EWRPTH          equ	3811	;# 
   515   000EE4                     ETXST           equ	3812	;# 
   516   000EE4                     ETXSTL          equ	3812	;# 
   517   000EE5                     ETXSTH          equ	3813	;# 
   518   000EE6                     ETXND           equ	3814	;# 
   519   000EE6                     ETXNDL          equ	3814	;# 
   520   000EE7                     ETXNDH          equ	3815	;# 
   521   000EE8                     ERXST           equ	3816	;# 
   522   000EE8                     ERXSTL          equ	3816	;# 
   523   000EE9                     ERXSTH          equ	3817	;# 
   524   000EEA                     ERXND           equ	3818	;# 
   525   000EEA                     ERXNDL          equ	3818	;# 
   526   000EEB                     ERXNDH          equ	3819	;# 
   527   000EEC                     ERXRDPT         equ	3820	;# 
   528   000EEC                     ERXRDPTL        equ	3820	;# 
   529   000EED                     ERXRDPTH        equ	3821	;# 
   530   000EEE                     ERXWRPT         equ	3822	;# 
   531   000EEE                     ERXWRPTL        equ	3822	;# 
   532   000EEF                     ERXWRPTH        equ	3823	;# 
   533   000EF0                     EDMAST          equ	3824	;# 
   534   000EF0                     EDMASTL         equ	3824	;# 
   535   000EF1                     EDMASTH         equ	3825	;# 
   536   000EF2                     EDMAND          equ	3826	;# 
   537   000EF2                     EDMANDL         equ	3826	;# 
   538   000EF3                     EDMANDH         equ	3827	;# 
   539   000EF4                     EDMADST         equ	3828	;# 
   540   000EF4                     EDMADSTL        equ	3828	;# 
   541   000EF5                     EDMADSTH        equ	3829	;# 
   542   000EF6                     EDMACS          equ	3830	;# 
   543   000EF6                     EDMACSL         equ	3830	;# 
   544   000EF7                     EDMACSH         equ	3831	;# 
   545   000EFB                     EIE             equ	3835	;# 
   546   000EFD                     ESTAT           equ	3837	;# 
   547   000EFE                     ECON2           equ	3838	;# 
   548   000F60                     EIR             equ	3936	;# 
   549   000F61                     EDATA           equ	3937	;# 
   550   000F62                     SSP2CON2        equ	3938	;# 
   551   000F63                     SSP2CON1        equ	3939	;# 
   552   000F64                     SSP2STAT        equ	3940	;# 
   553   000F65                     SSP2ADD         equ	3941	;# 
   554   000F66                     SSP2BUF         equ	3942	;# 
   555   000F67                     ECCP2DEL        equ	3943	;# 
   556   000F68                     ECCP2AS         equ	3944	;# 
   557   000F69                     ECCP3DEL        equ	3945	;# 
   558   000F6A                     ECCP3AS         equ	3946	;# 
   559   000F6B                     RCSTA2          equ	3947	;# 
   560   000F6C                     TXSTA2          equ	3948	;# 
   561   000F6D                     TXREG2          equ	3949	;# 
   562   000F6E                     RCREG2          equ	3950	;# 
   563   000F6F                     SPBRG2          equ	3951	;# 
   564   000F70                     CCP5CON         equ	3952	;# 
   565   000F71                     CCPR5           equ	3953	;# 
   566   000F71                     CCPR5L          equ	3953	;# 
   567   000F72                     CCPR5H          equ	3954	;# 
   568   000F73                     CCP4CON         equ	3955	;# 
   569   000F74                     CCPR4           equ	3956	;# 
   570   000F74                     CCPR4L          equ	3956	;# 
   571   000F75                     CCPR4H          equ	3957	;# 
   572   000F76                     T4CON           equ	3958	;# 
   573   000F77                     PR4             equ	3959	;# 
   574   000F78                     TMR4            equ	3960	;# 
   575   000F79                     ECCP1DEL        equ	3961	;# 
   576   000F7A                     ERDPT           equ	3962	;# 
   577   000F7A                     ERDPTL          equ	3962	;# 
   578   000F7B                     ERDPTH          equ	3963	;# 
   579   000F7C                     BAUDCON2        equ	3964	;# 
   580   000F7C                     BAUDCTL2        equ	3964	;# 
   581   000F7D                     SPBRGH2         equ	3965	;# 
   582   000F7E                     BAUDCON1        equ	3966	;# 
   583   000F7E                     BAUDCON         equ	3966	;# 
   584   000F7E                     BAUDCTL         equ	3966	;# 
   585   000F7E                     BAUDCTL1        equ	3966	;# 
   586   000F7F                     SPBRGH1         equ	3967	;# 
   587   000F7F                     SPBRGH          equ	3967	;# 
   588   000F80                     PORTA           equ	3968	;# 
   589   000F81                     PORTB           equ	3969	;# 
   590   000F82                     PORTC           equ	3970	;# 
   591   000F83                     PORTD           equ	3971	;# 
   592   000F84                     PORTE           equ	3972	;# 
   593   000F85                     PORTF           equ	3973	;# 
   594   000F86                     PORTG           equ	3974	;# 
   595   000F87                     PORTH           equ	3975	;# 
   596   000F88                     PORTJ           equ	3976	;# 
   597   000F89                     LATA            equ	3977	;# 
   598   000F8A                     LATB            equ	3978	;# 
   599   000F8B                     LATC            equ	3979	;# 
   600   000F8C                     LATD            equ	3980	;# 
   601   000F8D                     LATE            equ	3981	;# 
   602   000F8E                     LATF            equ	3982	;# 
   603   000F8F                     LATG            equ	3983	;# 
   604   000F90                     LATH            equ	3984	;# 
   605   000F91                     LATJ            equ	3985	;# 
   606   000F92                     TRISA           equ	3986	;# 
   607   000F92                     DDRA            equ	3986	;# 
   608   000F93                     TRISB           equ	3987	;# 
   609   000F93                     DDRB            equ	3987	;# 
   610   000F94                     TRISC           equ	3988	;# 
   611   000F94                     DDRC            equ	3988	;# 
   612   000F95                     TRISD           equ	3989	;# 
   613   000F95                     DDRD            equ	3989	;# 
   614   000F96                     TRISE           equ	3990	;# 
   615   000F96                     DDRE            equ	3990	;# 
   616   000F97                     TRISF           equ	3991	;# 
   617   000F97                     DDRF            equ	3991	;# 
   618   000F98                     TRISG           equ	3992	;# 
   619   000F98                     DDRG            equ	3992	;# 
   620   000F99                     TRISH           equ	3993	;# 
   621   000F99                     DDRH            equ	3993	;# 
   622   000F9A                     TRISJ           equ	3994	;# 
   623   000F9A                     DDRJ            equ	3994	;# 
   624   000F9B                     OSCTUNE         equ	3995	;# 
   625   000F9C                     MEMCON          equ	3996	;# 
   626   000F9D                     PIE1            equ	3997	;# 
   627   000F9E                     PIR1            equ	3998	;# 
   628   000F9F                     IPR1            equ	3999	;# 
   629   000FA0                     PIE2            equ	4000	;# 
   630   000FA1                     PIR2            equ	4001	;# 
   631   000FA2                     IPR2            equ	4002	;# 
   632   000FA3                     PIE3            equ	4003	;# 
   633   000FA4                     PIR3            equ	4004	;# 
   634   000FA5                     IPR3            equ	4005	;# 
   635   000FA6                     EECON1          equ	4006	;# 
   636   000FA7                     EECON2          equ	4007	;# 
   637   000FAB                     RCSTA1          equ	4011	;# 
   638   000FAB                     RCSTA           equ	4011	;# 
   639   000FAC                     TXSTA1          equ	4012	;# 
   640   000FAC                     TXSTA           equ	4012	;# 
   641   000FAD                     TXREG1          equ	4013	;# 
   642   000FAD                     TXREG           equ	4013	;# 
   643   000FAE                     RCREG1          equ	4014	;# 
   644   000FAE                     RCREG           equ	4014	;# 
   645   000FAF                     SPBRG1          equ	4015	;# 
   646   000FAF                     SPBRG           equ	4015	;# 
   647   000FB0                     PSPCON          equ	4016	;# 
   648   000FB1                     T3CON           equ	4017	;# 
   649   000FB2                     TMR3            equ	4018	;# 
   650   000FB2                     TMR3L           equ	4018	;# 
   651   000FB3                     TMR3H           equ	4019	;# 
   652   000FB4                     CMCON           equ	4020	;# 
   653   000FB5                     CVRCON          equ	4021	;# 
   654   000FB6                     ECCP1AS         equ	4022	;# 
   655   000FB7                     CCP3CON         equ	4023	;# 
   656   000FB7                     ECCP3CON        equ	4023	;# 
   657   000FB8                     CCPR3           equ	4024	;# 
   658   000FB8                     CCPR3L          equ	4024	;# 
   659   000FB9                     CCPR3H          equ	4025	;# 
   660   000FBA                     CCP2CON         equ	4026	;# 
   661   000FBA                     ECCP2CON        equ	4026	;# 
   662   000FBB                     CCPR2           equ	4027	;# 
   663   000FBB                     CCPR2L          equ	4027	;# 
   664   000FBC                     CCPR2H          equ	4028	;# 
   665   000FBD                     CCP1CON         equ	4029	;# 
   666   000FBD                     ECCP1CON        equ	4029	;# 
   667   000FBE                     CCPR1           equ	4030	;# 
   668   000FBE                     CCPR1L          equ	4030	;# 
   669   000FBF                     CCPR1H          equ	4031	;# 
   670   000FC0                     ADCON2          equ	4032	;# 
   671   000FC1                     ADCON1          equ	4033	;# 
   672   000FC2                     ADCON0          equ	4034	;# 
   673   000FC3                     ADRES           equ	4035	;# 
   674   000FC3                     ADRESL          equ	4035	;# 
   675   000FC4                     ADRESH          equ	4036	;# 
   676   000FC5                     SSP1CON2        equ	4037	;# 
   677   000FC5                     SSPCON2         equ	4037	;# 
   678   000FC6                     SSP1CON1        equ	4038	;# 
   679   000FC6                     SSPCON1         equ	4038	;# 
   680   000FC7                     SSP1STAT        equ	4039	;# 
   681   000FC7                     SSPSTAT         equ	4039	;# 
   682   000FC8                     SSP1ADD         equ	4040	;# 
   683   000FC8                     SSPADD          equ	4040	;# 
   684   000FC9                     SSP1BUF         equ	4041	;# 
   685   000FC9                     SSPBUF          equ	4041	;# 
   686   000FCA                     T2CON           equ	4042	;# 
   687   000FCB                     PR2             equ	4043	;# 
   688   000FCC                     TMR2            equ	4044	;# 
   689   000FCD                     T1CON           equ	4045	;# 
   690   000FCE                     TMR1            equ	4046	;# 
   691   000FCE                     TMR1L           equ	4046	;# 
   692   000FCF                     TMR1H           equ	4047	;# 
   693   000FD0                     RCON            equ	4048	;# 
   694   000FD1                     WDTCON          equ	4049	;# 
   695   000FD2                     ECON1           equ	4050	;# 
   696   000FD3                     OSCCON          equ	4051	;# 
   697   000FD5                     T0CON           equ	4053	;# 
   698   000FD6                     TMR0            equ	4054	;# 
   699   000FD6                     TMR0L           equ	4054	;# 
   700   000FD7                     TMR0H           equ	4055	;# 
   701   000FD8                     STATUS          equ	4056	;# 
   702   000FD9                     FSR2            equ	4057	;# 
   703   000FD9                     FSR2L           equ	4057	;# 
   704   000FDA                     FSR2H           equ	4058	;# 
   705   000FDB                     PLUSW2          equ	4059	;# 
   706   000FDC                     PREINC2         equ	4060	;# 
   707   000FDD                     POSTDEC2        equ	4061	;# 
   708   000FDE                     POSTINC2        equ	4062	;# 
   709   000FDF                     INDF2           equ	4063	;# 
   710   000FE0                     BSR             equ	4064	;# 
   711   000FE1                     FSR1            equ	4065	;# 
   712   000FE1                     FSR1L           equ	4065	;# 
   713   000FE2                     FSR1H           equ	4066	;# 
   714   000FE3                     PLUSW1          equ	4067	;# 
   715   000FE4                     PREINC1         equ	4068	;# 
   716   000FE5                     POSTDEC1        equ	4069	;# 
   717   000FE6                     POSTINC1        equ	4070	;# 
   718   000FE7                     INDF1           equ	4071	;# 
   719   000FE8                     WREG            equ	4072	;# 
   720   000FE9                     FSR0            equ	4073	;# 
   721   000FE9                     FSR0L           equ	4073	;# 
   722   000FEA                     FSR0H           equ	4074	;# 
   723   000FEB                     PLUSW0          equ	4075	;# 
   724   000FEC                     PREINC0         equ	4076	;# 
   725   000FED                     POSTDEC0        equ	4077	;# 
   726   000FEE                     POSTINC0        equ	4078	;# 
   727   000FEF                     INDF0           equ	4079	;# 
   728   000FF0                     INTCON3         equ	4080	;# 
   729   000FF1                     INTCON2         equ	4081	;# 
   730   000FF2                     INTCON          equ	4082	;# 
   731   000FF3                     PROD            equ	4083	;# 
   732   000FF3                     PRODL           equ	4083	;# 
   733   000FF4                     PRODH           equ	4084	;# 
   734   000FF5                     TABLAT          equ	4085	;# 
   735   000FF6                     TBLPTR          equ	4086	;# 
   736   000FF6                     TBLPTRL         equ	4086	;# 
   737   000FF7                     TBLPTRH         equ	4087	;# 
   738   000FF8                     TBLPTRU         equ	4088	;# 
   739   000FF9                     PCLAT           equ	4089	;# 
   740   000FF9                     PC              equ	4089	;# 
   741   000FF9                     PCL             equ	4089	;# 
   742   000FFA                     PCLATH          equ	4090	;# 
   743   000FFB                     PCLATU          equ	4091	;# 
   744   000FFC                     STKPTR          equ	4092	;# 
   745   000FFD                     TOS             equ	4093	;# 
   746   000FFD                     TOSL            equ	4093	;# 
   747   000FFE                     TOSH            equ	4094	;# 
   748   000FFF                     TOSU            equ	4095	;# 
   749   000E80                     MAADR5          equ	3712	;# 
   750   000E81                     MAADR6          equ	3713	;# 
   751   000E82                     MAADR3          equ	3714	;# 
   752   000E83                     MAADR4          equ	3715	;# 
   753   000E84                     MAADR1          equ	3716	;# 
   754   000E85                     MAADR2          equ	3717	;# 
   755   000E8A                     MISTAT          equ	3722	;# 
   756   000E97                     EFLOCON         equ	3735	;# 
   757   000E98                     EPAUS           equ	3736	;# 
   758   000E98                     EPAUSL          equ	3736	;# 
   759   000E99                     EPAUSH          equ	3737	;# 
   760   000EA0                     MACON1          equ	3744	;# 
   761   000EA2                     MACON3          equ	3746	;# 
   762   000EA3                     MACON4          equ	3747	;# 
   763   000EA4                     MABBIPG         equ	3748	;# 
   764   000EA6                     MAIPG           equ	3750	;# 
   765   000EA6                     MAIPGL          equ	3750	;# 
   766   000EA7                     MAIPGH          equ	3751	;# 
   767   000EAA                     MAMXFL          equ	3754	;# 
   768   000EAA                     MAMXFLL         equ	3754	;# 
   769   000EAB                     MAMXFLH         equ	3755	;# 
   770   000EB2                     MICMD           equ	3762	;# 
   771   000EB4                     MIREGADR        equ	3764	;# 
   772   000EB6                     MIWR            equ	3766	;# 
   773   000EB6                     MIWRL           equ	3766	;# 
   774   000EB7                     MIWRH           equ	3767	;# 
   775   000EB8                     MIRD            equ	3768	;# 
   776   000EB8                     MIRDL           equ	3768	;# 
   777   000EB9                     MIRDH           equ	3769	;# 
   778   000EC0                     EHT0            equ	3776	;# 
   779   000EC1                     EHT1            equ	3777	;# 
   780   000EC2                     EHT2            equ	3778	;# 
   781   000EC3                     EHT3            equ	3779	;# 
   782   000EC4                     EHT4            equ	3780	;# 
   783   000EC5                     EHT5            equ	3781	;# 
   784   000EC6                     EHT6            equ	3782	;# 
   785   000EC7                     EHT7            equ	3783	;# 
   786   000EC8                     EPMM0           equ	3784	;# 
   787   000EC9                     EPMM1           equ	3785	;# 
   788   000ECA                     EPMM2           equ	3786	;# 
   789   000ECB                     EPMM3           equ	3787	;# 
   790   000ECC                     EPMM4           equ	3788	;# 
   791   000ECD                     EPMM5           equ	3789	;# 
   792   000ECE                     EPMM6           equ	3790	;# 
   793   000ECF                     EPMM7           equ	3791	;# 
   794   000ED0                     EPMCS           equ	3792	;# 
   795   000ED0                     EPMCSL          equ	3792	;# 
   796   000ED1                     EPMCSH          equ	3793	;# 
   797   000ED4                     EPMO            equ	3796	;# 
   798   000ED4                     EPMOL           equ	3796	;# 
   799   000ED5                     EPMOH           equ	3797	;# 
   800   000ED8                     ERXFCON         equ	3800	;# 
   801   000ED9                     EPKTCNT         equ	3801	;# 
   802   000EE2                     EWRPT           equ	3810	;# 
   803   000EE2                     EWRPTL          equ	3810	;# 
   804   000EE3                     EWRPTH          equ	3811	;# 
   805   000EE4                     ETXST           equ	3812	;# 
   806   000EE4                     ETXSTL          equ	3812	;# 
   807   000EE5                     ETXSTH          equ	3813	;# 
   808   000EE6                     ETXND           equ	3814	;# 
   809   000EE6                     ETXNDL          equ	3814	;# 
   810   000EE7                     ETXNDH          equ	3815	;# 
   811   000EE8                     ERXST           equ	3816	;# 
   812   000EE8                     ERXSTL          equ	3816	;# 
   813   000EE9                     ERXSTH          equ	3817	;# 
   814   000EEA                     ERXND           equ	3818	;# 
   815   000EEA                     ERXNDL          equ	3818	;# 
   816   000EEB                     ERXNDH          equ	3819	;# 
   817   000EEC                     ERXRDPT         equ	3820	;# 
   818   000EEC                     ERXRDPTL        equ	3820	;# 
   819   000EED                     ERXRDPTH        equ	3821	;# 
   820   000EEE                     ERXWRPT         equ	3822	;# 
   821   000EEE                     ERXWRPTL        equ	3822	;# 
   822   000EEF                     ERXWRPTH        equ	3823	;# 
   823   000EF0                     EDMAST          equ	3824	;# 
   824   000EF0                     EDMASTL         equ	3824	;# 
   825   000EF1                     EDMASTH         equ	3825	;# 
   826   000EF2                     EDMAND          equ	3826	;# 
   827   000EF2                     EDMANDL         equ	3826	;# 
   828   000EF3                     EDMANDH         equ	3827	;# 
   829   000EF4                     EDMADST         equ	3828	;# 
   830   000EF4                     EDMADSTL        equ	3828	;# 
   831   000EF5                     EDMADSTH        equ	3829	;# 
   832   000EF6                     EDMACS          equ	3830	;# 
   833   000EF6                     EDMACSL         equ	3830	;# 
   834   000EF7                     EDMACSH         equ	3831	;# 
   835   000EFB                     EIE             equ	3835	;# 
   836   000EFD                     ESTAT           equ	3837	;# 
   837   000EFE                     ECON2           equ	3838	;# 
   838   000F60                     EIR             equ	3936	;# 
   839   000F61                     EDATA           equ	3937	;# 
   840   000F62                     SSP2CON2        equ	3938	;# 
   841   000F63                     SSP2CON1        equ	3939	;# 
   842   000F64                     SSP2STAT        equ	3940	;# 
   843   000F65                     SSP2ADD         equ	3941	;# 
   844   000F66                     SSP2BUF         equ	3942	;# 
   845   000F67                     ECCP2DEL        equ	3943	;# 
   846   000F68                     ECCP2AS         equ	3944	;# 
   847   000F69                     ECCP3DEL        equ	3945	;# 
   848   000F6A                     ECCP3AS         equ	3946	;# 
   849   000F6B                     RCSTA2          equ	3947	;# 
   850   000F6C                     TXSTA2          equ	3948	;# 
   851   000F6D                     TXREG2          equ	3949	;# 
   852   000F6E                     RCREG2          equ	3950	;# 
   853   000F6F                     SPBRG2          equ	3951	;# 
   854   000F70                     CCP5CON         equ	3952	;# 
   855   000F71                     CCPR5           equ	3953	;# 
   856   000F71                     CCPR5L          equ	3953	;# 
   857   000F72                     CCPR5H          equ	3954	;# 
   858   000F73                     CCP4CON         equ	3955	;# 
   859   000F74                     CCPR4           equ	3956	;# 
   860   000F74                     CCPR4L          equ	3956	;# 
   861   000F75                     CCPR4H          equ	3957	;# 
   862   000F76                     T4CON           equ	3958	;# 
   863   000F77                     PR4             equ	3959	;# 
   864   000F78                     TMR4            equ	3960	;# 
   865   000F79                     ECCP1DEL        equ	3961	;# 
   866   000F7A                     ERDPT           equ	3962	;# 
   867   000F7A                     ERDPTL          equ	3962	;# 
   868   000F7B                     ERDPTH          equ	3963	;# 
   869   000F7C                     BAUDCON2        equ	3964	;# 
   870   000F7C                     BAUDCTL2        equ	3964	;# 
   871   000F7D                     SPBRGH2         equ	3965	;# 
   872   000F7E                     BAUDCON1        equ	3966	;# 
   873   000F7E                     BAUDCON         equ	3966	;# 
   874   000F7E                     BAUDCTL         equ	3966	;# 
   875   000F7E                     BAUDCTL1        equ	3966	;# 
   876   000F7F                     SPBRGH1         equ	3967	;# 
   877   000F7F                     SPBRGH          equ	3967	;# 
   878   000F80                     PORTA           equ	3968	;# 
   879   000F81                     PORTB           equ	3969	;# 
   880   000F82                     PORTC           equ	3970	;# 
   881   000F83                     PORTD           equ	3971	;# 
   882   000F84                     PORTE           equ	3972	;# 
   883   000F85                     PORTF           equ	3973	;# 
   884   000F86                     PORTG           equ	3974	;# 
   885   000F87                     PORTH           equ	3975	;# 
   886   000F88                     PORTJ           equ	3976	;# 
   887   000F89                     LATA            equ	3977	;# 
   888   000F8A                     LATB            equ	3978	;# 
   889   000F8B                     LATC            equ	3979	;# 
   890   000F8C                     LATD            equ	3980	;# 
   891   000F8D                     LATE            equ	3981	;# 
   892   000F8E                     LATF            equ	3982	;# 
   893   000F8F                     LATG            equ	3983	;# 
   894   000F90                     LATH            equ	3984	;# 
   895   000F91                     LATJ            equ	3985	;# 
   896   000F92                     TRISA           equ	3986	;# 
   897   000F92                     DDRA            equ	3986	;# 
   898   000F93                     TRISB           equ	3987	;# 
   899   000F93                     DDRB            equ	3987	;# 
   900   000F94                     TRISC           equ	3988	;# 
   901   000F94                     DDRC            equ	3988	;# 
   902   000F95                     TRISD           equ	3989	;# 
   903   000F95                     DDRD            equ	3989	;# 
   904   000F96                     TRISE           equ	3990	;# 
   905   000F96                     DDRE            equ	3990	;# 
   906   000F97                     TRISF           equ	3991	;# 
   907   000F97                     DDRF            equ	3991	;# 
   908   000F98                     TRISG           equ	3992	;# 
   909   000F98                     DDRG            equ	3992	;# 
   910   000F99                     TRISH           equ	3993	;# 
   911   000F99                     DDRH            equ	3993	;# 
   912   000F9A                     TRISJ           equ	3994	;# 
   913   000F9A                     DDRJ            equ	3994	;# 
   914   000F9B                     OSCTUNE         equ	3995	;# 
   915   000F9C                     MEMCON          equ	3996	;# 
   916   000F9D                     PIE1            equ	3997	;# 
   917   000F9E                     PIR1            equ	3998	;# 
   918   000F9F                     IPR1            equ	3999	;# 
   919   000FA0                     PIE2            equ	4000	;# 
   920   000FA1                     PIR2            equ	4001	;# 
   921   000FA2                     IPR2            equ	4002	;# 
   922   000FA3                     PIE3            equ	4003	;# 
   923   000FA4                     PIR3            equ	4004	;# 
   924   000FA5                     IPR3            equ	4005	;# 
   925   000FA6                     EECON1          equ	4006	;# 
   926   000FA7                     EECON2          equ	4007	;# 
   927   000FAB                     RCSTA1          equ	4011	;# 
   928   000FAB                     RCSTA           equ	4011	;# 
   929   000FAC                     TXSTA1          equ	4012	;# 
   930   000FAC                     TXSTA           equ	4012	;# 
   931   000FAD                     TXREG1          equ	4013	;# 
   932   000FAD                     TXREG           equ	4013	;# 
   933   000FAE                     RCREG1          equ	4014	;# 
   934   000FAE                     RCREG           equ	4014	;# 
   935   000FAF                     SPBRG1          equ	4015	;# 
   936   000FAF                     SPBRG           equ	4015	;# 
   937   000FB0                     PSPCON          equ	4016	;# 
   938   000FB1                     T3CON           equ	4017	;# 
   939   000FB2                     TMR3            equ	4018	;# 
   940   000FB2                     TMR3L           equ	4018	;# 
   941   000FB3                     TMR3H           equ	4019	;# 
   942   000FB4                     CMCON           equ	4020	;# 
   943   000FB5                     CVRCON          equ	4021	;# 
   944   000FB6                     ECCP1AS         equ	4022	;# 
   945   000FB7                     CCP3CON         equ	4023	;# 
   946   000FB7                     ECCP3CON        equ	4023	;# 
   947   000FB8                     CCPR3           equ	4024	;# 
   948   000FB8                     CCPR3L          equ	4024	;# 
   949   000FB9                     CCPR3H          equ	4025	;# 
   950   000FBA                     CCP2CON         equ	4026	;# 
   951   000FBA                     ECCP2CON        equ	4026	;# 
   952   000FBB                     CCPR2           equ	4027	;# 
   953   000FBB                     CCPR2L          equ	4027	;# 
   954   000FBC                     CCPR2H          equ	4028	;# 
   955   000FBD                     CCP1CON         equ	4029	;# 
   956   000FBD                     ECCP1CON        equ	4029	;# 
   957   000FBE                     CCPR1           equ	4030	;# 
   958   000FBE                     CCPR1L          equ	4030	;# 
   959   000FBF                     CCPR1H          equ	4031	;# 
   960   000FC0                     ADCON2          equ	4032	;# 
   961   000FC1                     ADCON1          equ	4033	;# 
   962   000FC2                     ADCON0          equ	4034	;# 
   963   000FC3                     ADRES           equ	4035	;# 
   964   000FC3                     ADRESL          equ	4035	;# 
   965   000FC4                     ADRESH          equ	4036	;# 
   966   000FC5                     SSP1CON2        equ	4037	;# 
   967   000FC5                     SSPCON2         equ	4037	;# 
   968   000FC6                     SSP1CON1        equ	4038	;# 
   969   000FC6                     SSPCON1         equ	4038	;# 
   970   000FC7                     SSP1STAT        equ	4039	;# 
   971   000FC7                     SSPSTAT         equ	4039	;# 
   972   000FC8                     SSP1ADD         equ	4040	;# 
   973   000FC8                     SSPADD          equ	4040	;# 
   974   000FC9                     SSP1BUF         equ	4041	;# 
   975   000FC9                     SSPBUF          equ	4041	;# 
   976   000FCA                     T2CON           equ	4042	;# 
   977   000FCB                     PR2             equ	4043	;# 
   978   000FCC                     TMR2            equ	4044	;# 
   979   000FCD                     T1CON           equ	4045	;# 
   980   000FCE                     TMR1            equ	4046	;# 
   981   000FCE                     TMR1L           equ	4046	;# 
   982   000FCF                     TMR1H           equ	4047	;# 
   983   000FD0                     RCON            equ	4048	;# 
   984   000FD1                     WDTCON          equ	4049	;# 
   985   000FD2                     ECON1           equ	4050	;# 
   986   000FD3                     OSCCON          equ	4051	;# 
   987   000FD5                     T0CON           equ	4053	;# 
   988   000FD6                     TMR0            equ	4054	;# 
   989   000FD6                     TMR0L           equ	4054	;# 
   990   000FD7                     TMR0H           equ	4055	;# 
   991   000FD8                     STATUS          equ	4056	;# 
   992   000FD9                     FSR2            equ	4057	;# 
   993   000FD9                     FSR2L           equ	4057	;# 
   994   000FDA                     FSR2H           equ	4058	;# 
   995   000FDB                     PLUSW2          equ	4059	;# 
   996   000FDC                     PREINC2         equ	4060	;# 
   997   000FDD                     POSTDEC2        equ	4061	;# 
   998   000FDE                     POSTINC2        equ	4062	;# 
   999   000FDF                     INDF2           equ	4063	;# 
  1000   000FE0                     BSR             equ	4064	;# 
  1001   000FE1                     FSR1            equ	4065	;# 
  1002   000FE1                     FSR1L           equ	4065	;# 
  1003   000FE2                     FSR1H           equ	4066	;# 
  1004   000FE3                     PLUSW1          equ	4067	;# 
  1005   000FE4                     PREINC1         equ	4068	;# 
  1006   000FE5                     POSTDEC1        equ	4069	;# 
  1007   000FE6                     POSTINC1        equ	4070	;# 
  1008   000FE7                     INDF1           equ	4071	;# 
  1009   000FE8                     WREG            equ	4072	;# 
  1010   000FE9                     FSR0            equ	4073	;# 
  1011   000FE9                     FSR0L           equ	4073	;# 
  1012   000FEA                     FSR0H           equ	4074	;# 
  1013   000FEB                     PLUSW0          equ	4075	;# 
  1014   000FEC                     PREINC0         equ	4076	;# 
  1015   000FED                     POSTDEC0        equ	4077	;# 
  1016   000FEE                     POSTINC0        equ	4078	;# 
  1017   000FEF                     INDF0           equ	4079	;# 
  1018   000FF0                     INTCON3         equ	4080	;# 
  1019   000FF1                     INTCON2         equ	4081	;# 
  1020   000FF2                     INTCON          equ	4082	;# 
  1021   000FF3                     PROD            equ	4083	;# 
  1022   000FF3                     PRODL           equ	4083	;# 
  1023   000FF4                     PRODH           equ	4084	;# 
  1024   000FF5                     TABLAT          equ	4085	;# 
  1025   000FF6                     TBLPTR          equ	4086	;# 
  1026   000FF6                     TBLPTRL         equ	4086	;# 
  1027   000FF7                     TBLPTRH         equ	4087	;# 
  1028   000FF8                     TBLPTRU         equ	4088	;# 
  1029   000FF9                     PCLAT           equ	4089	;# 
  1030   000FF9                     PC              equ	4089	;# 
  1031   000FF9                     PCL             equ	4089	;# 
  1032   000FFA                     PCLATH          equ	4090	;# 
  1033   000FFB                     PCLATU          equ	4091	;# 
  1034   000FFC                     STKPTR          equ	4092	;# 
  1035   000FFD                     TOS             equ	4093	;# 
  1036   000FFD                     TOSL            equ	4093	;# 
  1037   000FFE                     TOSH            equ	4094	;# 
  1038   000FFF                     TOSU            equ	4095	;# 
  1039   000E80                     MAADR5          equ	3712	;# 
  1040   000E81                     MAADR6          equ	3713	;# 
  1041   000E82                     MAADR3          equ	3714	;# 
  1042   000E83                     MAADR4          equ	3715	;# 
  1043   000E84                     MAADR1          equ	3716	;# 
  1044   000E85                     MAADR2          equ	3717	;# 
  1045   000E8A                     MISTAT          equ	3722	;# 
  1046   000E97                     EFLOCON         equ	3735	;# 
  1047   000E98                     EPAUS           equ	3736	;# 
  1048   000E98                     EPAUSL          equ	3736	;# 
  1049   000E99                     EPAUSH          equ	3737	;# 
  1050   000EA0                     MACON1          equ	3744	;# 
  1051   000EA2                     MACON3          equ	3746	;# 
  1052   000EA3                     MACON4          equ	3747	;# 
  1053   000EA4                     MABBIPG         equ	3748	;# 
  1054   000EA6                     MAIPG           equ	3750	;# 
  1055   000EA6                     MAIPGL          equ	3750	;# 
  1056   000EA7                     MAIPGH          equ	3751	;# 
  1057   000EAA                     MAMXFL          equ	3754	;# 
  1058   000EAA                     MAMXFLL         equ	3754	;# 
  1059   000EAB                     MAMXFLH         equ	3755	;# 
  1060   000EB2                     MICMD           equ	3762	;# 
  1061   000EB4                     MIREGADR        equ	3764	;# 
  1062   000EB6                     MIWR            equ	3766	;# 
  1063   000EB6                     MIWRL           equ	3766	;# 
  1064   000EB7                     MIWRH           equ	3767	;# 
  1065   000EB8                     MIRD            equ	3768	;# 
  1066   000EB8                     MIRDL           equ	3768	;# 
  1067   000EB9                     MIRDH           equ	3769	;# 
  1068   000EC0                     EHT0            equ	3776	;# 
  1069   000EC1                     EHT1            equ	3777	;# 
  1070   000EC2                     EHT2            equ	3778	;# 
  1071   000EC3                     EHT3            equ	3779	;# 
  1072   000EC4                     EHT4            equ	3780	;# 
  1073   000EC5                     EHT5            equ	3781	;# 
  1074   000EC6                     EHT6            equ	3782	;# 
  1075   000EC7                     EHT7            equ	3783	;# 
  1076   000EC8                     EPMM0           equ	3784	;# 
  1077   000EC9                     EPMM1           equ	3785	;# 
  1078   000ECA                     EPMM2           equ	3786	;# 
  1079   000ECB                     EPMM3           equ	3787	;# 
  1080   000ECC                     EPMM4           equ	3788	;# 
  1081   000ECD                     EPMM5           equ	3789	;# 
  1082   000ECE                     EPMM6           equ	3790	;# 
  1083   000ECF                     EPMM7           equ	3791	;# 
  1084   000ED0                     EPMCS           equ	3792	;# 
  1085   000ED0                     EPMCSL          equ	3792	;# 
  1086   000ED1                     EPMCSH          equ	3793	;# 
  1087   000ED4                     EPMO            equ	3796	;# 
  1088   000ED4                     EPMOL           equ	3796	;# 
  1089   000ED5                     EPMOH           equ	3797	;# 
  1090   000ED8                     ERXFCON         equ	3800	;# 
  1091   000ED9                     EPKTCNT         equ	3801	;# 
  1092   000EE2                     EWRPT           equ	3810	;# 
  1093   000EE2                     EWRPTL          equ	3810	;# 
  1094   000EE3                     EWRPTH          equ	3811	;# 
  1095   000EE4                     ETXST           equ	3812	;# 
  1096   000EE4                     ETXSTL          equ	3812	;# 
  1097   000EE5                     ETXSTH          equ	3813	;# 
  1098   000EE6                     ETXND           equ	3814	;# 
  1099   000EE6                     ETXNDL          equ	3814	;# 
  1100   000EE7                     ETXNDH          equ	3815	;# 
  1101   000EE8                     ERXST           equ	3816	;# 
  1102   000EE8                     ERXSTL          equ	3816	;# 
  1103   000EE9                     ERXSTH          equ	3817	;# 
  1104   000EEA                     ERXND           equ	3818	;# 
  1105   000EEA                     ERXNDL          equ	3818	;# 
  1106   000EEB                     ERXNDH          equ	3819	;# 
  1107   000EEC                     ERXRDPT         equ	3820	;# 
  1108   000EEC                     ERXRDPTL        equ	3820	;# 
  1109   000EED                     ERXRDPTH        equ	3821	;# 
  1110   000EEE                     ERXWRPT         equ	3822	;# 
  1111   000EEE                     ERXWRPTL        equ	3822	;# 
  1112   000EEF                     ERXWRPTH        equ	3823	;# 
  1113   000EF0                     EDMAST          equ	3824	;# 
  1114   000EF0                     EDMASTL         equ	3824	;# 
  1115   000EF1                     EDMASTH         equ	3825	;# 
  1116   000EF2                     EDMAND          equ	3826	;# 
  1117   000EF2                     EDMANDL         equ	3826	;# 
  1118   000EF3                     EDMANDH         equ	3827	;# 
  1119   000EF4                     EDMADST         equ	3828	;# 
  1120   000EF4                     EDMADSTL        equ	3828	;# 
  1121   000EF5                     EDMADSTH        equ	3829	;# 
  1122   000EF6                     EDMACS          equ	3830	;# 
  1123   000EF6                     EDMACSL         equ	3830	;# 
  1124   000EF7                     EDMACSH         equ	3831	;# 
  1125   000EFB                     EIE             equ	3835	;# 
  1126   000EFD                     ESTAT           equ	3837	;# 
  1127   000EFE                     ECON2           equ	3838	;# 
  1128   000F60                     EIR             equ	3936	;# 
  1129   000F61                     EDATA           equ	3937	;# 
  1130   000F62                     SSP2CON2        equ	3938	;# 
  1131   000F63                     SSP2CON1        equ	3939	;# 
  1132   000F64                     SSP2STAT        equ	3940	;# 
  1133   000F65                     SSP2ADD         equ	3941	;# 
  1134   000F66                     SSP2BUF         equ	3942	;# 
  1135   000F67                     ECCP2DEL        equ	3943	;# 
  1136   000F68                     ECCP2AS         equ	3944	;# 
  1137   000F69                     ECCP3DEL        equ	3945	;# 
  1138   000F6A                     ECCP3AS         equ	3946	;# 
  1139   000F6B                     RCSTA2          equ	3947	;# 
  1140   000F6C                     TXSTA2          equ	3948	;# 
  1141   000F6D                     TXREG2          equ	3949	;# 
  1142   000F6E                     RCREG2          equ	3950	;# 
  1143   000F6F                     SPBRG2          equ	3951	;# 
  1144   000F70                     CCP5CON         equ	3952	;# 
  1145   000F71                     CCPR5           equ	3953	;# 
  1146   000F71                     CCPR5L          equ	3953	;# 
  1147   000F72                     CCPR5H          equ	3954	;# 
  1148   000F73                     CCP4CON         equ	3955	;# 
  1149   000F74                     CCPR4           equ	3956	;# 
  1150   000F74                     CCPR4L          equ	3956	;# 
  1151   000F75                     CCPR4H          equ	3957	;# 
  1152   000F76                     T4CON           equ	3958	;# 
  1153   000F77                     PR4             equ	3959	;# 
  1154   000F78                     TMR4            equ	3960	;# 
  1155   000F79                     ECCP1DEL        equ	3961	;# 
  1156   000F7A                     ERDPT           equ	3962	;# 
  1157   000F7A                     ERDPTL          equ	3962	;# 
  1158   000F7B                     ERDPTH          equ	3963	;# 
  1159   000F7C                     BAUDCON2        equ	3964	;# 
  1160   000F7C                     BAUDCTL2        equ	3964	;# 
  1161   000F7D                     SPBRGH2         equ	3965	;# 
  1162   000F7E                     BAUDCON1        equ	3966	;# 
  1163   000F7E                     BAUDCON         equ	3966	;# 
  1164   000F7E                     BAUDCTL         equ	3966	;# 
  1165   000F7E                     BAUDCTL1        equ	3966	;# 
  1166   000F7F                     SPBRGH1         equ	3967	;# 
  1167   000F7F                     SPBRGH          equ	3967	;# 
  1168   000F80                     PORTA           equ	3968	;# 
  1169   000F81                     PORTB           equ	3969	;# 
  1170   000F82                     PORTC           equ	3970	;# 
  1171   000F83                     PORTD           equ	3971	;# 
  1172   000F84                     PORTE           equ	3972	;# 
  1173   000F85                     PORTF           equ	3973	;# 
  1174   000F86                     PORTG           equ	3974	;# 
  1175   000F87                     PORTH           equ	3975	;# 
  1176   000F88                     PORTJ           equ	3976	;# 
  1177   000F89                     LATA            equ	3977	;# 
  1178   000F8A                     LATB            equ	3978	;# 
  1179   000F8B                     LATC            equ	3979	;# 
  1180   000F8C                     LATD            equ	3980	;# 
  1181   000F8D                     LATE            equ	3981	;# 
  1182   000F8E                     LATF            equ	3982	;# 
  1183   000F8F                     LATG            equ	3983	;# 
  1184   000F90                     LATH            equ	3984	;# 
  1185   000F91                     LATJ            equ	3985	;# 
  1186   000F92                     TRISA           equ	3986	;# 
  1187   000F92                     DDRA            equ	3986	;# 
  1188   000F93                     TRISB           equ	3987	;# 
  1189   000F93                     DDRB            equ	3987	;# 
  1190   000F94                     TRISC           equ	3988	;# 
  1191   000F94                     DDRC            equ	3988	;# 
  1192   000F95                     TRISD           equ	3989	;# 
  1193   000F95                     DDRD            equ	3989	;# 
  1194   000F96                     TRISE           equ	3990	;# 
  1195   000F96                     DDRE            equ	3990	;# 
  1196   000F97                     TRISF           equ	3991	;# 
  1197   000F97                     DDRF            equ	3991	;# 
  1198   000F98                     TRISG           equ	3992	;# 
  1199   000F98                     DDRG            equ	3992	;# 
  1200   000F99                     TRISH           equ	3993	;# 
  1201   000F99                     DDRH            equ	3993	;# 
  1202   000F9A                     TRISJ           equ	3994	;# 
  1203   000F9A                     DDRJ            equ	3994	;# 
  1204   000F9B                     OSCTUNE         equ	3995	;# 
  1205   000F9C                     MEMCON          equ	3996	;# 
  1206   000F9D                     PIE1            equ	3997	;# 
  1207   000F9E                     PIR1            equ	3998	;# 
  1208   000F9F                     IPR1            equ	3999	;# 
  1209   000FA0                     PIE2            equ	4000	;# 
  1210   000FA1                     PIR2            equ	4001	;# 
  1211   000FA2                     IPR2            equ	4002	;# 
  1212   000FA3                     PIE3            equ	4003	;# 
  1213   000FA4                     PIR3            equ	4004	;# 
  1214   000FA5                     IPR3            equ	4005	;# 
  1215   000FA6                     EECON1          equ	4006	;# 
  1216   000FA7                     EECON2          equ	4007	;# 
  1217   000FAB                     RCSTA1          equ	4011	;# 
  1218   000FAB                     RCSTA           equ	4011	;# 
  1219   000FAC                     TXSTA1          equ	4012	;# 
  1220   000FAC                     TXSTA           equ	4012	;# 
  1221   000FAD                     TXREG1          equ	4013	;# 
  1222   000FAD                     TXREG           equ	4013	;# 
  1223   000FAE                     RCREG1          equ	4014	;# 
  1224   000FAE                     RCREG           equ	4014	;# 
  1225   000FAF                     SPBRG1          equ	4015	;# 
  1226   000FAF                     SPBRG           equ	4015	;# 
  1227   000FB0                     PSPCON          equ	4016	;# 
  1228   000FB1                     T3CON           equ	4017	;# 
  1229   000FB2                     TMR3            equ	4018	;# 
  1230   000FB2                     TMR3L           equ	4018	;# 
  1231   000FB3                     TMR3H           equ	4019	;# 
  1232   000FB4                     CMCON           equ	4020	;# 
  1233   000FB5                     CVRCON          equ	4021	;# 
  1234   000FB6                     ECCP1AS         equ	4022	;# 
  1235   000FB7                     CCP3CON         equ	4023	;# 
  1236   000FB7                     ECCP3CON        equ	4023	;# 
  1237   000FB8                     CCPR3           equ	4024	;# 
  1238   000FB8                     CCPR3L          equ	4024	;# 
  1239   000FB9                     CCPR3H          equ	4025	;# 
  1240   000FBA                     CCP2CON         equ	4026	;# 
  1241   000FBA                     ECCP2CON        equ	4026	;# 
  1242   000FBB                     CCPR2           equ	4027	;# 
  1243   000FBB                     CCPR2L          equ	4027	;# 
  1244   000FBC                     CCPR2H          equ	4028	;# 
  1245   000FBD                     CCP1CON         equ	4029	;# 
  1246   000FBD                     ECCP1CON        equ	4029	;# 
  1247   000FBE                     CCPR1           equ	4030	;# 
  1248   000FBE                     CCPR1L          equ	4030	;# 
  1249   000FBF                     CCPR1H          equ	4031	;# 
  1250   000FC0                     ADCON2          equ	4032	;# 
  1251   000FC1                     ADCON1          equ	4033	;# 
  1252   000FC2                     ADCON0          equ	4034	;# 
  1253   000FC3                     ADRES           equ	4035	;# 
  1254   000FC3                     ADRESL          equ	4035	;# 
  1255   000FC4                     ADRESH          equ	4036	;# 
  1256   000FC5                     SSP1CON2        equ	4037	;# 
  1257   000FC5                     SSPCON2         equ	4037	;# 
  1258   000FC6                     SSP1CON1        equ	4038	;# 
  1259   000FC6                     SSPCON1         equ	4038	;# 
  1260   000FC7                     SSP1STAT        equ	4039	;# 
  1261   000FC7                     SSPSTAT         equ	4039	;# 
  1262   000FC8                     SSP1ADD         equ	4040	;# 
  1263   000FC8                     SSPADD          equ	4040	;# 
  1264   000FC9                     SSP1BUF         equ	4041	;# 
  1265   000FC9                     SSPBUF          equ	4041	;# 
  1266   000FCA                     T2CON           equ	4042	;# 
  1267   000FCB                     PR2             equ	4043	;# 
  1268   000FCC                     TMR2            equ	4044	;# 
  1269   000FCD                     T1CON           equ	4045	;# 
  1270   000FCE                     TMR1            equ	4046	;# 
  1271   000FCE                     TMR1L           equ	4046	;# 
  1272   000FCF                     TMR1H           equ	4047	;# 
  1273   000FD0                     RCON            equ	4048	;# 
  1274   000FD1                     WDTCON          equ	4049	;# 
  1275   000FD2                     ECON1           equ	4050	;# 
  1276   000FD3                     OSCCON          equ	4051	;# 
  1277   000FD5                     T0CON           equ	4053	;# 
  1278   000FD6                     TMR0            equ	4054	;# 
  1279   000FD6                     TMR0L           equ	4054	;# 
  1280   000FD7                     TMR0H           equ	4055	;# 
  1281   000FD8                     STATUS          equ	4056	;# 
  1282   000FD9                     FSR2            equ	4057	;# 
  1283   000FD9                     FSR2L           equ	4057	;# 
  1284   000FDA                     FSR2H           equ	4058	;# 
  1285   000FDB                     PLUSW2          equ	4059	;# 
  1286   000FDC                     PREINC2         equ	4060	;# 
  1287   000FDD                     POSTDEC2        equ	4061	;# 
  1288   000FDE                     POSTINC2        equ	4062	;# 
  1289   000FDF                     INDF2           equ	4063	;# 
  1290   000FE0                     BSR             equ	4064	;# 
  1291   000FE1                     FSR1            equ	4065	;# 
  1292   000FE1                     FSR1L           equ	4065	;# 
  1293   000FE2                     FSR1H           equ	4066	;# 
  1294   000FE3                     PLUSW1          equ	4067	;# 
  1295   000FE4                     PREINC1         equ	4068	;# 
  1296   000FE5                     POSTDEC1        equ	4069	;# 
  1297   000FE6                     POSTINC1        equ	4070	;# 
  1298   000FE7                     INDF1           equ	4071	;# 
  1299   000FE8                     WREG            equ	4072	;# 
  1300   000FE9                     FSR0            equ	4073	;# 
  1301   000FE9                     FSR0L           equ	4073	;# 
  1302   000FEA                     FSR0H           equ	4074	;# 
  1303   000FEB                     PLUSW0          equ	4075	;# 
  1304   000FEC                     PREINC0         equ	4076	;# 
  1305   000FED                     POSTDEC0        equ	4077	;# 
  1306   000FEE                     POSTINC0        equ	4078	;# 
  1307   000FEF                     INDF0           equ	4079	;# 
  1308   000FF0                     INTCON3         equ	4080	;# 
  1309   000FF1                     INTCON2         equ	4081	;# 
  1310   000FF2                     INTCON          equ	4082	;# 
  1311   000FF3                     PROD            equ	4083	;# 
  1312   000FF3                     PRODL           equ	4083	;# 
  1313   000FF4                     PRODH           equ	4084	;# 
  1314   000FF5                     TABLAT          equ	4085	;# 
  1315   000FF6                     TBLPTR          equ	4086	;# 
  1316   000FF6                     TBLPTRL         equ	4086	;# 
  1317   000FF7                     TBLPTRH         equ	4087	;# 
  1318   000FF8                     TBLPTRU         equ	4088	;# 
  1319   000FF9                     PCLAT           equ	4089	;# 
  1320   000FF9                     PC              equ	4089	;# 
  1321   000FF9                     PCL             equ	4089	;# 
  1322   000FFA                     PCLATH          equ	4090	;# 
  1323   000FFB                     PCLATU          equ	4091	;# 
  1324   000FFC                     STKPTR          equ	4092	;# 
  1325   000FFD                     TOS             equ	4093	;# 
  1326   000FFD                     TOSL            equ	4093	;# 
  1327   000FFE                     TOSH            equ	4094	;# 
  1328   000FFF                     TOSU            equ	4095	;# 
  1329   000E80                     MAADR5          equ	3712	;# 
  1330   000E81                     MAADR6          equ	3713	;# 
  1331   000E82                     MAADR3          equ	3714	;# 
  1332   000E83                     MAADR4          equ	3715	;# 
  1333   000E84                     MAADR1          equ	3716	;# 
  1334   000E85                     MAADR2          equ	3717	;# 
  1335   000E8A                     MISTAT          equ	3722	;# 
  1336   000E97                     EFLOCON         equ	3735	;# 
  1337   000E98                     EPAUS           equ	3736	;# 
  1338   000E98                     EPAUSL          equ	3736	;# 
  1339   000E99                     EPAUSH          equ	3737	;# 
  1340   000EA0                     MACON1          equ	3744	;# 
  1341   000EA2                     MACON3          equ	3746	;# 
  1342   000EA3                     MACON4          equ	3747	;# 
  1343   000EA4                     MABBIPG         equ	3748	;# 
  1344   000EA6                     MAIPG           equ	3750	;# 
  1345   000EA6                     MAIPGL          equ	3750	;# 
  1346   000EA7                     MAIPGH          equ	3751	;# 
  1347   000EAA                     MAMXFL          equ	3754	;# 
  1348   000EAA                     MAMXFLL         equ	3754	;# 
  1349   000EAB                     MAMXFLH         equ	3755	;# 
  1350   000EB2                     MICMD           equ	3762	;# 
  1351   000EB4                     MIREGADR        equ	3764	;# 
  1352   000EB6                     MIWR            equ	3766	;# 
  1353   000EB6                     MIWRL           equ	3766	;# 
  1354   000EB7                     MIWRH           equ	3767	;# 
  1355   000EB8                     MIRD            equ	3768	;# 
  1356   000EB8                     MIRDL           equ	3768	;# 
  1357   000EB9                     MIRDH           equ	3769	;# 
  1358   000EC0                     EHT0            equ	3776	;# 
  1359   000EC1                     EHT1            equ	3777	;# 
  1360   000EC2                     EHT2            equ	3778	;# 
  1361   000EC3                     EHT3            equ	3779	;# 
  1362   000EC4                     EHT4            equ	3780	;# 
  1363   000EC5                     EHT5            equ	3781	;# 
  1364   000EC6                     EHT6            equ	3782	;# 
  1365   000EC7                     EHT7            equ	3783	;# 
  1366   000EC8                     EPMM0           equ	3784	;# 
  1367   000EC9                     EPMM1           equ	3785	;# 
  1368   000ECA                     EPMM2           equ	3786	;# 
  1369   000ECB                     EPMM3           equ	3787	;# 
  1370   000ECC                     EPMM4           equ	3788	;# 
  1371   000ECD                     EPMM5           equ	3789	;# 
  1372   000ECE                     EPMM6           equ	3790	;# 
  1373   000ECF                     EPMM7           equ	3791	;# 
  1374   000ED0                     EPMCS           equ	3792	;# 
  1375   000ED0                     EPMCSL          equ	3792	;# 
  1376   000ED1                     EPMCSH          equ	3793	;# 
  1377   000ED4                     EPMO            equ	3796	;# 
  1378   000ED4                     EPMOL           equ	3796	;# 
  1379   000ED5                     EPMOH           equ	3797	;# 
  1380   000ED8                     ERXFCON         equ	3800	;# 
  1381   000ED9                     EPKTCNT         equ	3801	;# 
  1382   000EE2                     EWRPT           equ	3810	;# 
  1383   000EE2                     EWRPTL          equ	3810	;# 
  1384   000EE3                     EWRPTH          equ	3811	;# 
  1385   000EE4                     ETXST           equ	3812	;# 
  1386   000EE4                     ETXSTL          equ	3812	;# 
  1387   000EE5                     ETXSTH          equ	3813	;# 
  1388   000EE6                     ETXND           equ	3814	;# 
  1389   000EE6                     ETXNDL          equ	3814	;# 
  1390   000EE7                     ETXNDH          equ	3815	;# 
  1391   000EE8                     ERXST           equ	3816	;# 
  1392   000EE8                     ERXSTL          equ	3816	;# 
  1393   000EE9                     ERXSTH          equ	3817	;# 
  1394   000EEA                     ERXND           equ	3818	;# 
  1395   000EEA                     ERXNDL          equ	3818	;# 
  1396   000EEB                     ERXNDH          equ	3819	;# 
  1397   000EEC                     ERXRDPT         equ	3820	;# 
  1398   000EEC                     ERXRDPTL        equ	3820	;# 
  1399   000EED                     ERXRDPTH        equ	3821	;# 
  1400   000EEE                     ERXWRPT         equ	3822	;# 
  1401   000EEE                     ERXWRPTL        equ	3822	;# 
  1402   000EEF                     ERXWRPTH        equ	3823	;# 
  1403   000EF0                     EDMAST          equ	3824	;# 
  1404   000EF0                     EDMASTL         equ	3824	;# 
  1405   000EF1                     EDMASTH         equ	3825	;# 
  1406   000EF2                     EDMAND          equ	3826	;# 
  1407   000EF2                     EDMANDL         equ	3826	;# 
  1408   000EF3                     EDMANDH         equ	3827	;# 
  1409   000EF4                     EDMADST         equ	3828	;# 
  1410   000EF4                     EDMADSTL        equ	3828	;# 
  1411   000EF5                     EDMADSTH        equ	3829	;# 
  1412   000EF6                     EDMACS          equ	3830	;# 
  1413   000EF6                     EDMACSL         equ	3830	;# 
  1414   000EF7                     EDMACSH         equ	3831	;# 
  1415   000EFB                     EIE             equ	3835	;# 
  1416   000EFD                     ESTAT           equ	3837	;# 
  1417   000EFE                     ECON2           equ	3838	;# 
  1418   000F60                     EIR             equ	3936	;# 
  1419   000F61                     EDATA           equ	3937	;# 
  1420   000F62                     SSP2CON2        equ	3938	;# 
  1421   000F63                     SSP2CON1        equ	3939	;# 
  1422   000F64                     SSP2STAT        equ	3940	;# 
  1423   000F65                     SSP2ADD         equ	3941	;# 
  1424   000F66                     SSP2BUF         equ	3942	;# 
  1425   000F67                     ECCP2DEL        equ	3943	;# 
  1426   000F68                     ECCP2AS         equ	3944	;# 
  1427   000F69                     ECCP3DEL        equ	3945	;# 
  1428   000F6A                     ECCP3AS         equ	3946	;# 
  1429   000F6B                     RCSTA2          equ	3947	;# 
  1430   000F6C                     TXSTA2          equ	3948	;# 
  1431   000F6D                     TXREG2          equ	3949	;# 
  1432   000F6E                     RCREG2          equ	3950	;# 
  1433   000F6F                     SPBRG2          equ	3951	;# 
  1434   000F70                     CCP5CON         equ	3952	;# 
  1435   000F71                     CCPR5           equ	3953	;# 
  1436   000F71                     CCPR5L          equ	3953	;# 
  1437   000F72                     CCPR5H          equ	3954	;# 
  1438   000F73                     CCP4CON         equ	3955	;# 
  1439   000F74                     CCPR4           equ	3956	;# 
  1440   000F74                     CCPR4L          equ	3956	;# 
  1441   000F75                     CCPR4H          equ	3957	;# 
  1442   000F76                     T4CON           equ	3958	;# 
  1443   000F77                     PR4             equ	3959	;# 
  1444   000F78                     TMR4            equ	3960	;# 
  1445   000F79                     ECCP1DEL        equ	3961	;# 
  1446   000F7A                     ERDPT           equ	3962	;# 
  1447   000F7A                     ERDPTL          equ	3962	;# 
  1448   000F7B                     ERDPTH          equ	3963	;# 
  1449   000F7C                     BAUDCON2        equ	3964	;# 
  1450   000F7C                     BAUDCTL2        equ	3964	;# 
  1451   000F7D                     SPBRGH2         equ	3965	;# 
  1452   000F7E                     BAUDCON1        equ	3966	;# 
  1453   000F7E                     BAUDCON         equ	3966	;# 
  1454   000F7E                     BAUDCTL         equ	3966	;# 
  1455   000F7E                     BAUDCTL1        equ	3966	;# 
  1456   000F7F                     SPBRGH1         equ	3967	;# 
  1457   000F7F                     SPBRGH          equ	3967	;# 
  1458   000F80                     PORTA           equ	3968	;# 
  1459   000F81                     PORTB           equ	3969	;# 
  1460   000F82                     PORTC           equ	3970	;# 
  1461   000F83                     PORTD           equ	3971	;# 
  1462   000F84                     PORTE           equ	3972	;# 
  1463   000F85                     PORTF           equ	3973	;# 
  1464   000F86                     PORTG           equ	3974	;# 
  1465   000F87                     PORTH           equ	3975	;# 
  1466   000F88                     PORTJ           equ	3976	;# 
  1467   000F89                     LATA            equ	3977	;# 
  1468   000F8A                     LATB            equ	3978	;# 
  1469   000F8B                     LATC            equ	3979	;# 
  1470   000F8C                     LATD            equ	3980	;# 
  1471   000F8D                     LATE            equ	3981	;# 
  1472   000F8E                     LATF            equ	3982	;# 
  1473   000F8F                     LATG            equ	3983	;# 
  1474   000F90                     LATH            equ	3984	;# 
  1475   000F91                     LATJ            equ	3985	;# 
  1476   000F92                     TRISA           equ	3986	;# 
  1477   000F92                     DDRA            equ	3986	;# 
  1478   000F93                     TRISB           equ	3987	;# 
  1479   000F93                     DDRB            equ	3987	;# 
  1480   000F94                     TRISC           equ	3988	;# 
  1481   000F94                     DDRC            equ	3988	;# 
  1482   000F95                     TRISD           equ	3989	;# 
  1483   000F95                     DDRD            equ	3989	;# 
  1484   000F96                     TRISE           equ	3990	;# 
  1485   000F96                     DDRE            equ	3990	;# 
  1486   000F97                     TRISF           equ	3991	;# 
  1487   000F97                     DDRF            equ	3991	;# 
  1488   000F98                     TRISG           equ	3992	;# 
  1489   000F98                     DDRG            equ	3992	;# 
  1490   000F99                     TRISH           equ	3993	;# 
  1491   000F99                     DDRH            equ	3993	;# 
  1492   000F9A                     TRISJ           equ	3994	;# 
  1493   000F9A                     DDRJ            equ	3994	;# 
  1494   000F9B                     OSCTUNE         equ	3995	;# 
  1495   000F9C                     MEMCON          equ	3996	;# 
  1496   000F9D                     PIE1            equ	3997	;# 
  1497   000F9E                     PIR1            equ	3998	;# 
  1498   000F9F                     IPR1            equ	3999	;# 
  1499   000FA0                     PIE2            equ	4000	;# 
  1500   000FA1                     PIR2            equ	4001	;# 
  1501   000FA2                     IPR2            equ	4002	;# 
  1502   000FA3                     PIE3            equ	4003	;# 
  1503   000FA4                     PIR3            equ	4004	;# 
  1504   000FA5                     IPR3            equ	4005	;# 
  1505   000FA6                     EECON1          equ	4006	;# 
  1506   000FA7                     EECON2          equ	4007	;# 
  1507   000FAB                     RCSTA1          equ	4011	;# 
  1508   000FAB                     RCSTA           equ	4011	;# 
  1509   000FAC                     TXSTA1          equ	4012	;# 
  1510   000FAC                     TXSTA           equ	4012	;# 
  1511   000FAD                     TXREG1          equ	4013	;# 
  1512   000FAD                     TXREG           equ	4013	;# 
  1513   000FAE                     RCREG1          equ	4014	;# 
  1514   000FAE                     RCREG           equ	4014	;# 
  1515   000FAF                     SPBRG1          equ	4015	;# 
  1516   000FAF                     SPBRG           equ	4015	;# 
  1517   000FB0                     PSPCON          equ	4016	;# 
  1518   000FB1                     T3CON           equ	4017	;# 
  1519   000FB2                     TMR3            equ	4018	;# 
  1520   000FB2                     TMR3L           equ	4018	;# 
  1521   000FB3                     TMR3H           equ	4019	;# 
  1522   000FB4                     CMCON           equ	4020	;# 
  1523   000FB5                     CVRCON          equ	4021	;# 
  1524   000FB6                     ECCP1AS         equ	4022	;# 
  1525   000FB7                     CCP3CON         equ	4023	;# 
  1526   000FB7                     ECCP3CON        equ	4023	;# 
  1527   000FB8                     CCPR3           equ	4024	;# 
  1528   000FB8                     CCPR3L          equ	4024	;# 
  1529   000FB9                     CCPR3H          equ	4025	;# 
  1530   000FBA                     CCP2CON         equ	4026	;# 
  1531   000FBA                     ECCP2CON        equ	4026	;# 
  1532   000FBB                     CCPR2           equ	4027	;# 
  1533   000FBB                     CCPR2L          equ	4027	;# 
  1534   000FBC                     CCPR2H          equ	4028	;# 
  1535   000FBD                     CCP1CON         equ	4029	;# 
  1536   000FBD                     ECCP1CON        equ	4029	;# 
  1537   000FBE                     CCPR1           equ	4030	;# 
  1538   000FBE                     CCPR1L          equ	4030	;# 
  1539   000FBF                     CCPR1H          equ	4031	;# 
  1540   000FC0                     ADCON2          equ	4032	;# 
  1541   000FC1                     ADCON1          equ	4033	;# 
  1542   000FC2                     ADCON0          equ	4034	;# 
  1543   000FC3                     ADRES           equ	4035	;# 
  1544   000FC3                     ADRESL          equ	4035	;# 
  1545   000FC4                     ADRESH          equ	4036	;# 
  1546   000FC5                     SSP1CON2        equ	4037	;# 
  1547   000FC5                     SSPCON2         equ	4037	;# 
  1548   000FC6                     SSP1CON1        equ	4038	;# 
  1549   000FC6                     SSPCON1         equ	4038	;# 
  1550   000FC7                     SSP1STAT        equ	4039	;# 
  1551   000FC7                     SSPSTAT         equ	4039	;# 
  1552   000FC8                     SSP1ADD         equ	4040	;# 
  1553   000FC8                     SSPADD          equ	4040	;# 
  1554   000FC9                     SSP1BUF         equ	4041	;# 
  1555   000FC9                     SSPBUF          equ	4041	;# 
  1556   000FCA                     T2CON           equ	4042	;# 
  1557   000FCB                     PR2             equ	4043	;# 
  1558   000FCC                     TMR2            equ	4044	;# 
  1559   000FCD                     T1CON           equ	4045	;# 
  1560   000FCE                     TMR1            equ	4046	;# 
  1561   000FCE                     TMR1L           equ	4046	;# 
  1562   000FCF                     TMR1H           equ	4047	;# 
  1563   000FD0                     RCON            equ	4048	;# 
  1564   000FD1                     WDTCON          equ	4049	;# 
  1565   000FD2                     ECON1           equ	4050	;# 
  1566   000FD3                     OSCCON          equ	4051	;# 
  1567   000FD5                     T0CON           equ	4053	;# 
  1568   000FD6                     TMR0            equ	4054	;# 
  1569   000FD6                     TMR0L           equ	4054	;# 
  1570   000FD7                     TMR0H           equ	4055	;# 
  1571   000FD8                     STATUS          equ	4056	;# 
  1572   000FD9                     FSR2            equ	4057	;# 
  1573   000FD9                     FSR2L           equ	4057	;# 
  1574   000FDA                     FSR2H           equ	4058	;# 
  1575   000FDB                     PLUSW2          equ	4059	;# 
  1576   000FDC                     PREINC2         equ	4060	;# 
  1577   000FDD                     POSTDEC2        equ	4061	;# 
  1578   000FDE                     POSTINC2        equ	4062	;# 
  1579   000FDF                     INDF2           equ	4063	;# 
  1580   000FE0                     BSR             equ	4064	;# 
  1581   000FE1                     FSR1            equ	4065	;# 
  1582   000FE1                     FSR1L           equ	4065	;# 
  1583   000FE2                     FSR1H           equ	4066	;# 
  1584   000FE3                     PLUSW1          equ	4067	;# 
  1585   000FE4                     PREINC1         equ	4068	;# 
  1586   000FE5                     POSTDEC1        equ	4069	;# 
  1587   000FE6                     POSTINC1        equ	4070	;# 
  1588   000FE7                     INDF1           equ	4071	;# 
  1589   000FE8                     WREG            equ	4072	;# 
  1590   000FE9                     FSR0            equ	4073	;# 
  1591   000FE9                     FSR0L           equ	4073	;# 
  1592   000FEA                     FSR0H           equ	4074	;# 
  1593   000FEB                     PLUSW0          equ	4075	;# 
  1594   000FEC                     PREINC0         equ	4076	;# 
  1595   000FED                     POSTDEC0        equ	4077	;# 
  1596   000FEE                     POSTINC0        equ	4078	;# 
  1597   000FEF                     INDF0           equ	4079	;# 
  1598   000FF0                     INTCON3         equ	4080	;# 
  1599   000FF1                     INTCON2         equ	4081	;# 
  1600   000FF2                     INTCON          equ	4082	;# 
  1601   000FF3                     PROD            equ	4083	;# 
  1602   000FF3                     PRODL           equ	4083	;# 
  1603   000FF4                     PRODH           equ	4084	;# 
  1604   000FF5                     TABLAT          equ	4085	;# 
  1605   000FF6                     TBLPTR          equ	4086	;# 
  1606   000FF6                     TBLPTRL         equ	4086	;# 
  1607   000FF7                     TBLPTRH         equ	4087	;# 
  1608   000FF8                     TBLPTRU         equ	4088	;# 
  1609   000FF9                     PCLAT           equ	4089	;# 
  1610   000FF9                     PC              equ	4089	;# 
  1611   000FF9                     PCL             equ	4089	;# 
  1612   000FFA                     PCLATH          equ	4090	;# 
  1613   000FFB                     PCLATU          equ	4091	;# 
  1614   000FFC                     STKPTR          equ	4092	;# 
  1615   000FFD                     TOS             equ	4093	;# 
  1616   000FFD                     TOSL            equ	4093	;# 
  1617   000FFE                     TOSH            equ	4094	;# 
  1618   000FFF                     TOSU            equ	4095	;# 
  1619   000E80                     MAADR5          equ	3712	;# 
  1620   000E81                     MAADR6          equ	3713	;# 
  1621   000E82                     MAADR3          equ	3714	;# 
  1622   000E83                     MAADR4          equ	3715	;# 
  1623   000E84                     MAADR1          equ	3716	;# 
  1624   000E85                     MAADR2          equ	3717	;# 
  1625   000E8A                     MISTAT          equ	3722	;# 
  1626   000E97                     EFLOCON         equ	3735	;# 
  1627   000E98                     EPAUS           equ	3736	;# 
  1628   000E98                     EPAUSL          equ	3736	;# 
  1629   000E99                     EPAUSH          equ	3737	;# 
  1630   000EA0                     MACON1          equ	3744	;# 
  1631   000EA2                     MACON3          equ	3746	;# 
  1632   000EA3                     MACON4          equ	3747	;# 
  1633   000EA4                     MABBIPG         equ	3748	;# 
  1634   000EA6                     MAIPG           equ	3750	;# 
  1635   000EA6                     MAIPGL          equ	3750	;# 
  1636   000EA7                     MAIPGH          equ	3751	;# 
  1637   000EAA                     MAMXFL          equ	3754	;# 
  1638   000EAA                     MAMXFLL         equ	3754	;# 
  1639   000EAB                     MAMXFLH         equ	3755	;# 
  1640   000EB2                     MICMD           equ	3762	;# 
  1641   000EB4                     MIREGADR        equ	3764	;# 
  1642   000EB6                     MIWR            equ	3766	;# 
  1643   000EB6                     MIWRL           equ	3766	;# 
  1644   000EB7                     MIWRH           equ	3767	;# 
  1645   000EB8                     MIRD            equ	3768	;# 
  1646   000EB8                     MIRDL           equ	3768	;# 
  1647   000EB9                     MIRDH           equ	3769	;# 
  1648   000EC0                     EHT0            equ	3776	;# 
  1649   000EC1                     EHT1            equ	3777	;# 
  1650   000EC2                     EHT2            equ	3778	;# 
  1651   000EC3                     EHT3            equ	3779	;# 
  1652   000EC4                     EHT4            equ	3780	;# 
  1653   000EC5                     EHT5            equ	3781	;# 
  1654   000EC6                     EHT6            equ	3782	;# 
  1655   000EC7                     EHT7            equ	3783	;# 
  1656   000EC8                     EPMM0           equ	3784	;# 
  1657   000EC9                     EPMM1           equ	3785	;# 
  1658   000ECA                     EPMM2           equ	3786	;# 
  1659   000ECB                     EPMM3           equ	3787	;# 
  1660   000ECC                     EPMM4           equ	3788	;# 
  1661   000ECD                     EPMM5           equ	3789	;# 
  1662   000ECE                     EPMM6           equ	3790	;# 
  1663   000ECF                     EPMM7           equ	3791	;# 
  1664   000ED0                     EPMCS           equ	3792	;# 
  1665   000ED0                     EPMCSL          equ	3792	;# 
  1666   000ED1                     EPMCSH          equ	3793	;# 
  1667   000ED4                     EPMO            equ	3796	;# 
  1668   000ED4                     EPMOL           equ	3796	;# 
  1669   000ED5                     EPMOH           equ	3797	;# 
  1670   000ED8                     ERXFCON         equ	3800	;# 
  1671   000ED9                     EPKTCNT         equ	3801	;# 
  1672   000EE2                     EWRPT           equ	3810	;# 
  1673   000EE2                     EWRPTL          equ	3810	;# 
  1674   000EE3                     EWRPTH          equ	3811	;# 
  1675   000EE4                     ETXST           equ	3812	;# 
  1676   000EE4                     ETXSTL          equ	3812	;# 
  1677   000EE5                     ETXSTH          equ	3813	;# 
  1678   000EE6                     ETXND           equ	3814	;# 
  1679   000EE6                     ETXNDL          equ	3814	;# 
  1680   000EE7                     ETXNDH          equ	3815	;# 
  1681   000EE8                     ERXST           equ	3816	;# 
  1682   000EE8                     ERXSTL          equ	3816	;# 
  1683   000EE9                     ERXSTH          equ	3817	;# 
  1684   000EEA                     ERXND           equ	3818	;# 
  1685   000EEA                     ERXNDL          equ	3818	;# 
  1686   000EEB                     ERXNDH          equ	3819	;# 
  1687   000EEC                     ERXRDPT         equ	3820	;# 
  1688   000EEC                     ERXRDPTL        equ	3820	;# 
  1689   000EED                     ERXRDPTH        equ	3821	;# 
  1690   000EEE                     ERXWRPT         equ	3822	;# 
  1691   000EEE                     ERXWRPTL        equ	3822	;# 
  1692   000EEF                     ERXWRPTH        equ	3823	;# 
  1693   000EF0                     EDMAST          equ	3824	;# 
  1694   000EF0                     EDMASTL         equ	3824	;# 
  1695   000EF1                     EDMASTH         equ	3825	;# 
  1696   000EF2                     EDMAND          equ	3826	;# 
  1697   000EF2                     EDMANDL         equ	3826	;# 
  1698   000EF3                     EDMANDH         equ	3827	;# 
  1699   000EF4                     EDMADST         equ	3828	;# 
  1700   000EF4                     EDMADSTL        equ	3828	;# 
  1701   000EF5                     EDMADSTH        equ	3829	;# 
  1702   000EF6                     EDMACS          equ	3830	;# 
  1703   000EF6                     EDMACSL         equ	3830	;# 
  1704   000EF7                     EDMACSH         equ	3831	;# 
  1705   000EFB                     EIE             equ	3835	;# 
  1706   000EFD                     ESTAT           equ	3837	;# 
  1707   000EFE                     ECON2           equ	3838	;# 
  1708   000F60                     EIR             equ	3936	;# 
  1709   000F61                     EDATA           equ	3937	;# 
  1710   000F62                     SSP2CON2        equ	3938	;# 
  1711   000F63                     SSP2CON1        equ	3939	;# 
  1712   000F64                     SSP2STAT        equ	3940	;# 
  1713   000F65                     SSP2ADD         equ	3941	;# 
  1714   000F66                     SSP2BUF         equ	3942	;# 
  1715   000F67                     ECCP2DEL        equ	3943	;# 
  1716   000F68                     ECCP2AS         equ	3944	;# 
  1717   000F69                     ECCP3DEL        equ	3945	;# 
  1718   000F6A                     ECCP3AS         equ	3946	;# 
  1719   000F6B                     RCSTA2          equ	3947	;# 
  1720   000F6C                     TXSTA2          equ	3948	;# 
  1721   000F6D                     TXREG2          equ	3949	;# 
  1722   000F6E                     RCREG2          equ	3950	;# 
  1723   000F6F                     SPBRG2          equ	3951	;# 
  1724   000F70                     CCP5CON         equ	3952	;# 
  1725   000F71                     CCPR5           equ	3953	;# 
  1726   000F71                     CCPR5L          equ	3953	;# 
  1727   000F72                     CCPR5H          equ	3954	;# 
  1728   000F73                     CCP4CON         equ	3955	;# 
  1729   000F74                     CCPR4           equ	3956	;# 
  1730   000F74                     CCPR4L          equ	3956	;# 
  1731   000F75                     CCPR4H          equ	3957	;# 
  1732   000F76                     T4CON           equ	3958	;# 
  1733   000F77                     PR4             equ	3959	;# 
  1734   000F78                     TMR4            equ	3960	;# 
  1735   000F79                     ECCP1DEL        equ	3961	;# 
  1736   000F7A                     ERDPT           equ	3962	;# 
  1737   000F7A                     ERDPTL          equ	3962	;# 
  1738   000F7B                     ERDPTH          equ	3963	;# 
  1739   000F7C                     BAUDCON2        equ	3964	;# 
  1740   000F7C                     BAUDCTL2        equ	3964	;# 
  1741   000F7D                     SPBRGH2         equ	3965	;# 
  1742   000F7E                     BAUDCON1        equ	3966	;# 
  1743   000F7E                     BAUDCON         equ	3966	;# 
  1744   000F7E                     BAUDCTL         equ	3966	;# 
  1745   000F7E                     BAUDCTL1        equ	3966	;# 
  1746   000F7F                     SPBRGH1         equ	3967	;# 
  1747   000F7F                     SPBRGH          equ	3967	;# 
  1748   000F80                     PORTA           equ	3968	;# 
  1749   000F81                     PORTB           equ	3969	;# 
  1750   000F82                     PORTC           equ	3970	;# 
  1751   000F83                     PORTD           equ	3971	;# 
  1752   000F84                     PORTE           equ	3972	;# 
  1753   000F85                     PORTF           equ	3973	;# 
  1754   000F86                     PORTG           equ	3974	;# 
  1755   000F87                     PORTH           equ	3975	;# 
  1756   000F88                     PORTJ           equ	3976	;# 
  1757   000F89                     LATA            equ	3977	;# 
  1758   000F8A                     LATB            equ	3978	;# 
  1759   000F8B                     LATC            equ	3979	;# 
  1760   000F8C                     LATD            equ	3980	;# 
  1761   000F8D                     LATE            equ	3981	;# 
  1762   000F8E                     LATF            equ	3982	;# 
  1763   000F8F                     LATG            equ	3983	;# 
  1764   000F90                     LATH            equ	3984	;# 
  1765   000F91                     LATJ            equ	3985	;# 
  1766   000F92                     TRISA           equ	3986	;# 
  1767   000F92                     DDRA            equ	3986	;# 
  1768   000F93                     TRISB           equ	3987	;# 
  1769   000F93                     DDRB            equ	3987	;# 
  1770   000F94                     TRISC           equ	3988	;# 
  1771   000F94                     DDRC            equ	3988	;# 
  1772   000F95                     TRISD           equ	3989	;# 
  1773   000F95                     DDRD            equ	3989	;# 
  1774   000F96                     TRISE           equ	3990	;# 
  1775   000F96                     DDRE            equ	3990	;# 
  1776   000F97                     TRISF           equ	3991	;# 
  1777   000F97                     DDRF            equ	3991	;# 
  1778   000F98                     TRISG           equ	3992	;# 
  1779   000F98                     DDRG            equ	3992	;# 
  1780   000F99                     TRISH           equ	3993	;# 
  1781   000F99                     DDRH            equ	3993	;# 
  1782   000F9A                     TRISJ           equ	3994	;# 
  1783   000F9A                     DDRJ            equ	3994	;# 
  1784   000F9B                     OSCTUNE         equ	3995	;# 
  1785   000F9C                     MEMCON          equ	3996	;# 
  1786   000F9D                     PIE1            equ	3997	;# 
  1787   000F9E                     PIR1            equ	3998	;# 
  1788   000F9F                     IPR1            equ	3999	;# 
  1789   000FA0                     PIE2            equ	4000	;# 
  1790   000FA1                     PIR2            equ	4001	;# 
  1791   000FA2                     IPR2            equ	4002	;# 
  1792   000FA3                     PIE3            equ	4003	;# 
  1793   000FA4                     PIR3            equ	4004	;# 
  1794   000FA5                     IPR3            equ	4005	;# 
  1795   000FA6                     EECON1          equ	4006	;# 
  1796   000FA7                     EECON2          equ	4007	;# 
  1797   000FAB                     RCSTA1          equ	4011	;# 
  1798   000FAB                     RCSTA           equ	4011	;# 
  1799   000FAC                     TXSTA1          equ	4012	;# 
  1800   000FAC                     TXSTA           equ	4012	;# 
  1801   000FAD                     TXREG1          equ	4013	;# 
  1802   000FAD                     TXREG           equ	4013	;# 
  1803   000FAE                     RCREG1          equ	4014	;# 
  1804   000FAE                     RCREG           equ	4014	;# 
  1805   000FAF                     SPBRG1          equ	4015	;# 
  1806   000FAF                     SPBRG           equ	4015	;# 
  1807   000FB0                     PSPCON          equ	4016	;# 
  1808   000FB1                     T3CON           equ	4017	;# 
  1809   000FB2                     TMR3            equ	4018	;# 
  1810   000FB2                     TMR3L           equ	4018	;# 
  1811   000FB3                     TMR3H           equ	4019	;# 
  1812   000FB4                     CMCON           equ	4020	;# 
  1813   000FB5                     CVRCON          equ	4021	;# 
  1814   000FB6                     ECCP1AS         equ	4022	;# 
  1815   000FB7                     CCP3CON         equ	4023	;# 
  1816   000FB7                     ECCP3CON        equ	4023	;# 
  1817   000FB8                     CCPR3           equ	4024	;# 
  1818   000FB8                     CCPR3L          equ	4024	;# 
  1819   000FB9                     CCPR3H          equ	4025	;# 
  1820   000FBA                     CCP2CON         equ	4026	;# 
  1821   000FBA                     ECCP2CON        equ	4026	;# 
  1822   000FBB                     CCPR2           equ	4027	;# 
  1823   000FBB                     CCPR2L          equ	4027	;# 
  1824   000FBC                     CCPR2H          equ	4028	;# 
  1825   000FBD                     CCP1CON         equ	4029	;# 
  1826   000FBD                     ECCP1CON        equ	4029	;# 
  1827   000FBE                     CCPR1           equ	4030	;# 
  1828   000FBE                     CCPR1L          equ	4030	;# 
  1829   000FBF                     CCPR1H          equ	4031	;# 
  1830   000FC0                     ADCON2          equ	4032	;# 
  1831   000FC1                     ADCON1          equ	4033	;# 
  1832   000FC2                     ADCON0          equ	4034	;# 
  1833   000FC3                     ADRES           equ	4035	;# 
  1834   000FC3                     ADRESL          equ	4035	;# 
  1835   000FC4                     ADRESH          equ	4036	;# 
  1836   000FC5                     SSP1CON2        equ	4037	;# 
  1837   000FC5                     SSPCON2         equ	4037	;# 
  1838   000FC6                     SSP1CON1        equ	4038	;# 
  1839   000FC6                     SSPCON1         equ	4038	;# 
  1840   000FC7                     SSP1STAT        equ	4039	;# 
  1841   000FC7                     SSPSTAT         equ	4039	;# 
  1842   000FC8                     SSP1ADD         equ	4040	;# 
  1843   000FC8                     SSPADD          equ	4040	;# 
  1844   000FC9                     SSP1BUF         equ	4041	;# 
  1845   000FC9                     SSPBUF          equ	4041	;# 
  1846   000FCA                     T2CON           equ	4042	;# 
  1847   000FCB                     PR2             equ	4043	;# 
  1848   000FCC                     TMR2            equ	4044	;# 
  1849   000FCD                     T1CON           equ	4045	;# 
  1850   000FCE                     TMR1            equ	4046	;# 
  1851   000FCE                     TMR1L           equ	4046	;# 
  1852   000FCF                     TMR1H           equ	4047	;# 
  1853   000FD0                     RCON            equ	4048	;# 
  1854   000FD1                     WDTCON          equ	4049	;# 
  1855   000FD2                     ECON1           equ	4050	;# 
  1856   000FD3                     OSCCON          equ	4051	;# 
  1857   000FD5                     T0CON           equ	4053	;# 
  1858   000FD6                     TMR0            equ	4054	;# 
  1859   000FD6                     TMR0L           equ	4054	;# 
  1860   000FD7                     TMR0H           equ	4055	;# 
  1861   000FD8                     STATUS          equ	4056	;# 
  1862   000FD9                     FSR2            equ	4057	;# 
  1863   000FD9                     FSR2L           equ	4057	;# 
  1864   000FDA                     FSR2H           equ	4058	;# 
  1865   000FDB                     PLUSW2          equ	4059	;# 
  1866   000FDC                     PREINC2         equ	4060	;# 
  1867   000FDD                     POSTDEC2        equ	4061	;# 
  1868   000FDE                     POSTINC2        equ	4062	;# 
  1869   000FDF                     INDF2           equ	4063	;# 
  1870   000FE0                     BSR             equ	4064	;# 
  1871   000FE1                     FSR1            equ	4065	;# 
  1872   000FE1                     FSR1L           equ	4065	;# 
  1873   000FE2                     FSR1H           equ	4066	;# 
  1874   000FE3                     PLUSW1          equ	4067	;# 
  1875   000FE4                     PREINC1         equ	4068	;# 
  1876   000FE5                     POSTDEC1        equ	4069	;# 
  1877   000FE6                     POSTINC1        equ	4070	;# 
  1878   000FE7                     INDF1           equ	4071	;# 
  1879   000FE8                     WREG            equ	4072	;# 
  1880   000FE9                     FSR0            equ	4073	;# 
  1881   000FE9                     FSR0L           equ	4073	;# 
  1882   000FEA                     FSR0H           equ	4074	;# 
  1883   000FEB                     PLUSW0          equ	4075	;# 
  1884   000FEC                     PREINC0         equ	4076	;# 
  1885   000FED                     POSTDEC0        equ	4077	;# 
  1886   000FEE                     POSTINC0        equ	4078	;# 
  1887   000FEF                     INDF0           equ	4079	;# 
  1888   000FF0                     INTCON3         equ	4080	;# 
  1889   000FF1                     INTCON2         equ	4081	;# 
  1890   000FF2                     INTCON          equ	4082	;# 
  1891   000FF3                     PROD            equ	4083	;# 
  1892   000FF3                     PRODL           equ	4083	;# 
  1893   000FF4                     PRODH           equ	4084	;# 
  1894   000FF5                     TABLAT          equ	4085	;# 
  1895   000FF6                     TBLPTR          equ	4086	;# 
  1896   000FF6                     TBLPTRL         equ	4086	;# 
  1897   000FF7                     TBLPTRH         equ	4087	;# 
  1898   000FF8                     TBLPTRU         equ	4088	;# 
  1899   000FF9                     PCLAT           equ	4089	;# 
  1900   000FF9                     PC              equ	4089	;# 
  1901   000FF9                     PCL             equ	4089	;# 
  1902   000FFA                     PCLATH          equ	4090	;# 
  1903   000FFB                     PCLATU          equ	4091	;# 
  1904   000FFC                     STKPTR          equ	4092	;# 
  1905   000FFD                     TOS             equ	4093	;# 
  1906   000FFD                     TOSL            equ	4093	;# 
  1907   000FFE                     TOSH            equ	4094	;# 
  1908   000FFF                     TOSU            equ	4095	;# 
  1909   000E80                     MAADR5          equ	3712	;# 
  1910   000E81                     MAADR6          equ	3713	;# 
  1911   000E82                     MAADR3          equ	3714	;# 
  1912   000E83                     MAADR4          equ	3715	;# 
  1913   000E84                     MAADR1          equ	3716	;# 
  1914   000E85                     MAADR2          equ	3717	;# 
  1915   000E8A                     MISTAT          equ	3722	;# 
  1916   000E97                     EFLOCON         equ	3735	;# 
  1917   000E98                     EPAUS           equ	3736	;# 
  1918   000E98                     EPAUSL          equ	3736	;# 
  1919   000E99                     EPAUSH          equ	3737	;# 
  1920   000EA0                     MACON1          equ	3744	;# 
  1921   000EA2                     MACON3          equ	3746	;# 
  1922   000EA3                     MACON4          equ	3747	;# 
  1923   000EA4                     MABBIPG         equ	3748	;# 
  1924   000EA6                     MAIPG           equ	3750	;# 
  1925   000EA6                     MAIPGL          equ	3750	;# 
  1926   000EA7                     MAIPGH          equ	3751	;# 
  1927   000EAA                     MAMXFL          equ	3754	;# 
  1928   000EAA                     MAMXFLL         equ	3754	;# 
  1929   000EAB                     MAMXFLH         equ	3755	;# 
  1930   000EB2                     MICMD           equ	3762	;# 
  1931   000EB4                     MIREGADR        equ	3764	;# 
  1932   000EB6                     MIWR            equ	3766	;# 
  1933   000EB6                     MIWRL           equ	3766	;# 
  1934   000EB7                     MIWRH           equ	3767	;# 
  1935   000EB8                     MIRD            equ	3768	;# 
  1936   000EB8                     MIRDL           equ	3768	;# 
  1937   000EB9                     MIRDH           equ	3769	;# 
  1938   000EC0                     EHT0            equ	3776	;# 
  1939   000EC1                     EHT1            equ	3777	;# 
  1940   000EC2                     EHT2            equ	3778	;# 
  1941   000EC3                     EHT3            equ	3779	;# 
  1942   000EC4                     EHT4            equ	3780	;# 
  1943   000EC5                     EHT5            equ	3781	;# 
  1944   000EC6                     EHT6            equ	3782	;# 
  1945   000EC7                     EHT7            equ	3783	;# 
  1946   000EC8                     EPMM0           equ	3784	;# 
  1947   000EC9                     EPMM1           equ	3785	;# 
  1948   000ECA                     EPMM2           equ	3786	;# 
  1949   000ECB                     EPMM3           equ	3787	;# 
  1950   000ECC                     EPMM4           equ	3788	;# 
  1951   000ECD                     EPMM5           equ	3789	;# 
  1952   000ECE                     EPMM6           equ	3790	;# 
  1953   000ECF                     EPMM7           equ	3791	;# 
  1954   000ED0                     EPMCS           equ	3792	;# 
  1955   000ED0                     EPMCSL          equ	3792	;# 
  1956   000ED1                     EPMCSH          equ	3793	;# 
  1957   000ED4                     EPMO            equ	3796	;# 
  1958   000ED4                     EPMOL           equ	3796	;# 
  1959   000ED5                     EPMOH           equ	3797	;# 
  1960   000ED8                     ERXFCON         equ	3800	;# 
  1961   000ED9                     EPKTCNT         equ	3801	;# 
  1962   000EE2                     EWRPT           equ	3810	;# 
  1963   000EE2                     EWRPTL          equ	3810	;# 
  1964   000EE3                     EWRPTH          equ	3811	;# 
  1965   000EE4                     ETXST           equ	3812	;# 
  1966   000EE4                     ETXSTL          equ	3812	;# 
  1967   000EE5                     ETXSTH          equ	3813	;# 
  1968   000EE6                     ETXND           equ	3814	;# 
  1969   000EE6                     ETXNDL          equ	3814	;# 
  1970   000EE7                     ETXNDH          equ	3815	;# 
  1971   000EE8                     ERXST           equ	3816	;# 
  1972   000EE8                     ERXSTL          equ	3816	;# 
  1973   000EE9                     ERXSTH          equ	3817	;# 
  1974   000EEA                     ERXND           equ	3818	;# 
  1975   000EEA                     ERXNDL          equ	3818	;# 
  1976   000EEB                     ERXNDH          equ	3819	;# 
  1977   000EEC                     ERXRDPT         equ	3820	;# 
  1978   000EEC                     ERXRDPTL        equ	3820	;# 
  1979   000EED                     ERXRDPTH        equ	3821	;# 
  1980   000EEE                     ERXWRPT         equ	3822	;# 
  1981   000EEE                     ERXWRPTL        equ	3822	;# 
  1982   000EEF                     ERXWRPTH        equ	3823	;# 
  1983   000EF0                     EDMAST          equ	3824	;# 
  1984   000EF0                     EDMASTL         equ	3824	;# 
  1985   000EF1                     EDMASTH         equ	3825	;# 
  1986   000EF2                     EDMAND          equ	3826	;# 
  1987   000EF2                     EDMANDL         equ	3826	;# 
  1988   000EF3                     EDMANDH         equ	3827	;# 
  1989   000EF4                     EDMADST         equ	3828	;# 
  1990   000EF4                     EDMADSTL        equ	3828	;# 
  1991   000EF5                     EDMADSTH        equ	3829	;# 
  1992   000EF6                     EDMACS          equ	3830	;# 
  1993   000EF6                     EDMACSL         equ	3830	;# 
  1994   000EF7                     EDMACSH         equ	3831	;# 
  1995   000EFB                     EIE             equ	3835	;# 
  1996   000EFD                     ESTAT           equ	3837	;# 
  1997   000EFE                     ECON2           equ	3838	;# 
  1998   000F60                     EIR             equ	3936	;# 
  1999   000F61                     EDATA           equ	3937	;# 
  2000   000F62                     SSP2CON2        equ	3938	;# 
  2001   000F63                     SSP2CON1        equ	3939	;# 
  2002   000F64                     SSP2STAT        equ	3940	;# 
  2003   000F65                     SSP2ADD         equ	3941	;# 
  2004   000F66                     SSP2BUF         equ	3942	;# 
  2005   000F67                     ECCP2DEL        equ	3943	;# 
  2006   000F68                     ECCP2AS         equ	3944	;# 
  2007   000F69                     ECCP3DEL        equ	3945	;# 
  2008   000F6A                     ECCP3AS         equ	3946	;# 
  2009   000F6B                     RCSTA2          equ	3947	;# 
  2010   000F6C                     TXSTA2          equ	3948	;# 
  2011   000F6D                     TXREG2          equ	3949	;# 
  2012   000F6E                     RCREG2          equ	3950	;# 
  2013   000F6F                     SPBRG2          equ	3951	;# 
  2014   000F70                     CCP5CON         equ	3952	;# 
  2015   000F71                     CCPR5           equ	3953	;# 
  2016   000F71                     CCPR5L          equ	3953	;# 
  2017   000F72                     CCPR5H          equ	3954	;# 
  2018   000F73                     CCP4CON         equ	3955	;# 
  2019   000F74                     CCPR4           equ	3956	;# 
  2020   000F74                     CCPR4L          equ	3956	;# 
  2021   000F75                     CCPR4H          equ	3957	;# 
  2022   000F76                     T4CON           equ	3958	;# 
  2023   000F77                     PR4             equ	3959	;# 
  2024   000F78                     TMR4            equ	3960	;# 
  2025   000F79                     ECCP1DEL        equ	3961	;# 
  2026   000F7A                     ERDPT           equ	3962	;# 
  2027   000F7A                     ERDPTL          equ	3962	;# 
  2028   000F7B                     ERDPTH          equ	3963	;# 
  2029   000F7C                     BAUDCON2        equ	3964	;# 
  2030   000F7C                     BAUDCTL2        equ	3964	;# 
  2031   000F7D                     SPBRGH2         equ	3965	;# 
  2032   000F7E                     BAUDCON1        equ	3966	;# 
  2033   000F7E                     BAUDCON         equ	3966	;# 
  2034   000F7E                     BAUDCTL         equ	3966	;# 
  2035   000F7E                     BAUDCTL1        equ	3966	;# 
  2036   000F7F                     SPBRGH1         equ	3967	;# 
  2037   000F7F                     SPBRGH          equ	3967	;# 
  2038   000F80                     PORTA           equ	3968	;# 
  2039   000F81                     PORTB           equ	3969	;# 
  2040   000F82                     PORTC           equ	3970	;# 
  2041   000F83                     PORTD           equ	3971	;# 
  2042   000F84                     PORTE           equ	3972	;# 
  2043   000F85                     PORTF           equ	3973	;# 
  2044   000F86                     PORTG           equ	3974	;# 
  2045   000F87                     PORTH           equ	3975	;# 
  2046   000F88                     PORTJ           equ	3976	;# 
  2047   000F89                     LATA            equ	3977	;# 
  2048   000F8A                     LATB            equ	3978	;# 
  2049   000F8B                     LATC            equ	3979	;# 
  2050   000F8C                     LATD            equ	3980	;# 
  2051   000F8D                     LATE            equ	3981	;# 
  2052   000F8E                     LATF            equ	3982	;# 
  2053   000F8F                     LATG            equ	3983	;# 
  2054   000F90                     LATH            equ	3984	;# 
  2055   000F91                     LATJ            equ	3985	;# 
  2056   000F92                     TRISA           equ	3986	;# 
  2057   000F92                     DDRA            equ	3986	;# 
  2058   000F93                     TRISB           equ	3987	;# 
  2059   000F93                     DDRB            equ	3987	;# 
  2060   000F94                     TRISC           equ	3988	;# 
  2061   000F94                     DDRC            equ	3988	;# 
  2062   000F95                     TRISD           equ	3989	;# 
  2063   000F95                     DDRD            equ	3989	;# 
  2064   000F96                     TRISE           equ	3990	;# 
  2065   000F96                     DDRE            equ	3990	;# 
  2066   000F97                     TRISF           equ	3991	;# 
  2067   000F97                     DDRF            equ	3991	;# 
  2068   000F98                     TRISG           equ	3992	;# 
  2069   000F98                     DDRG            equ	3992	;# 
  2070   000F99                     TRISH           equ	3993	;# 
  2071   000F99                     DDRH            equ	3993	;# 
  2072   000F9A                     TRISJ           equ	3994	;# 
  2073   000F9A                     DDRJ            equ	3994	;# 
  2074   000F9B                     OSCTUNE         equ	3995	;# 
  2075   000F9C                     MEMCON          equ	3996	;# 
  2076   000F9D                     PIE1            equ	3997	;# 
  2077   000F9E                     PIR1            equ	3998	;# 
  2078   000F9F                     IPR1            equ	3999	;# 
  2079   000FA0                     PIE2            equ	4000	;# 
  2080   000FA1                     PIR2            equ	4001	;# 
  2081   000FA2                     IPR2            equ	4002	;# 
  2082   000FA3                     PIE3            equ	4003	;# 
  2083   000FA4                     PIR3            equ	4004	;# 
  2084   000FA5                     IPR3            equ	4005	;# 
  2085   000FA6                     EECON1          equ	4006	;# 
  2086   000FA7                     EECON2          equ	4007	;# 
  2087   000FAB                     RCSTA1          equ	4011	;# 
  2088   000FAB                     RCSTA           equ	4011	;# 
  2089   000FAC                     TXSTA1          equ	4012	;# 
  2090   000FAC                     TXSTA           equ	4012	;# 
  2091   000FAD                     TXREG1          equ	4013	;# 
  2092   000FAD                     TXREG           equ	4013	;# 
  2093   000FAE                     RCREG1          equ	4014	;# 
  2094   000FAE                     RCREG           equ	4014	;# 
  2095   000FAF                     SPBRG1          equ	4015	;# 
  2096   000FAF                     SPBRG           equ	4015	;# 
  2097   000FB0                     PSPCON          equ	4016	;# 
  2098   000FB1                     T3CON           equ	4017	;# 
  2099   000FB2                     TMR3            equ	4018	;# 
  2100   000FB2                     TMR3L           equ	4018	;# 
  2101   000FB3                     TMR3H           equ	4019	;# 
  2102   000FB4                     CMCON           equ	4020	;# 
  2103   000FB5                     CVRCON          equ	4021	;# 
  2104   000FB6                     ECCP1AS         equ	4022	;# 
  2105   000FB7                     CCP3CON         equ	4023	;# 
  2106   000FB7                     ECCP3CON        equ	4023	;# 
  2107   000FB8                     CCPR3           equ	4024	;# 
  2108   000FB8                     CCPR3L          equ	4024	;# 
  2109   000FB9                     CCPR3H          equ	4025	;# 
  2110   000FBA                     CCP2CON         equ	4026	;# 
  2111   000FBA                     ECCP2CON        equ	4026	;# 
  2112   000FBB                     CCPR2           equ	4027	;# 
  2113   000FBB                     CCPR2L          equ	4027	;# 
  2114   000FBC                     CCPR2H          equ	4028	;# 
  2115   000FBD                     CCP1CON         equ	4029	;# 
  2116   000FBD                     ECCP1CON        equ	4029	;# 
  2117   000FBE                     CCPR1           equ	4030	;# 
  2118   000FBE                     CCPR1L          equ	4030	;# 
  2119   000FBF                     CCPR1H          equ	4031	;# 
  2120   000FC0                     ADCON2          equ	4032	;# 
  2121   000FC1                     ADCON1          equ	4033	;# 
  2122   000FC2                     ADCON0          equ	4034	;# 
  2123   000FC3                     ADRES           equ	4035	;# 
  2124   000FC3                     ADRESL          equ	4035	;# 
  2125   000FC4                     ADRESH          equ	4036	;# 
  2126   000FC5                     SSP1CON2        equ	4037	;# 
  2127   000FC5                     SSPCON2         equ	4037	;# 
  2128   000FC6                     SSP1CON1        equ	4038	;# 
  2129   000FC6                     SSPCON1         equ	4038	;# 
  2130   000FC7                     SSP1STAT        equ	4039	;# 
  2131   000FC7                     SSPSTAT         equ	4039	;# 
  2132   000FC8                     SSP1ADD         equ	4040	;# 
  2133   000FC8                     SSPADD          equ	4040	;# 
  2134   000FC9                     SSP1BUF         equ	4041	;# 
  2135   000FC9                     SSPBUF          equ	4041	;# 
  2136   000FCA                     T2CON           equ	4042	;# 
  2137   000FCB                     PR2             equ	4043	;# 
  2138   000FCC                     TMR2            equ	4044	;# 
  2139   000FCD                     T1CON           equ	4045	;# 
  2140   000FCE                     TMR1            equ	4046	;# 
  2141   000FCE                     TMR1L           equ	4046	;# 
  2142   000FCF                     TMR1H           equ	4047	;# 
  2143   000FD0                     RCON            equ	4048	;# 
  2144   000FD1                     WDTCON          equ	4049	;# 
  2145   000FD2                     ECON1           equ	4050	;# 
  2146   000FD3                     OSCCON          equ	4051	;# 
  2147   000FD5                     T0CON           equ	4053	;# 
  2148   000FD6                     TMR0            equ	4054	;# 
  2149   000FD6                     TMR0L           equ	4054	;# 
  2150   000FD7                     TMR0H           equ	4055	;# 
  2151   000FD8                     STATUS          equ	4056	;# 
  2152   000FD9                     FSR2            equ	4057	;# 
  2153   000FD9                     FSR2L           equ	4057	;# 
  2154   000FDA                     FSR2H           equ	4058	;# 
  2155   000FDB                     PLUSW2          equ	4059	;# 
  2156   000FDC                     PREINC2         equ	4060	;# 
  2157   000FDD                     POSTDEC2        equ	4061	;# 
  2158   000FDE                     POSTINC2        equ	4062	;# 
  2159   000FDF                     INDF2           equ	4063	;# 
  2160   000FE0                     BSR             equ	4064	;# 
  2161   000FE1                     FSR1            equ	4065	;# 
  2162   000FE1                     FSR1L           equ	4065	;# 
  2163   000FE2                     FSR1H           equ	4066	;# 
  2164   000FE3                     PLUSW1          equ	4067	;# 
  2165   000FE4                     PREINC1         equ	4068	;# 
  2166   000FE5                     POSTDEC1        equ	4069	;# 
  2167   000FE6                     POSTINC1        equ	4070	;# 
  2168   000FE7                     INDF1           equ	4071	;# 
  2169   000FE8                     WREG            equ	4072	;# 
  2170   000FE9                     FSR0            equ	4073	;# 
  2171   000FE9                     FSR0L           equ	4073	;# 
  2172   000FEA                     FSR0H           equ	4074	;# 
  2173   000FEB                     PLUSW0          equ	4075	;# 
  2174   000FEC                     PREINC0         equ	4076	;# 
  2175   000FED                     POSTDEC0        equ	4077	;# 
  2176   000FEE                     POSTINC0        equ	4078	;# 
  2177   000FEF                     INDF0           equ	4079	;# 
  2178   000FF0                     INTCON3         equ	4080	;# 
  2179   000FF1                     INTCON2         equ	4081	;# 
  2180   000FF2                     INTCON          equ	4082	;# 
  2181   000FF3                     PROD            equ	4083	;# 
  2182   000FF3                     PRODL           equ	4083	;# 
  2183   000FF4                     PRODH           equ	4084	;# 
  2184   000FF5                     TABLAT          equ	4085	;# 
  2185   000FF6                     TBLPTR          equ	4086	;# 
  2186   000FF6                     TBLPTRL         equ	4086	;# 
  2187   000FF7                     TBLPTRH         equ	4087	;# 
  2188   000FF8                     TBLPTRU         equ	4088	;# 
  2189   000FF9                     PCLAT           equ	4089	;# 
  2190   000FF9                     PC              equ	4089	;# 
  2191   000FF9                     PCL             equ	4089	;# 
  2192   000FFA                     PCLATH          equ	4090	;# 
  2193   000FFB                     PCLATU          equ	4091	;# 
  2194   000FFC                     STKPTR          equ	4092	;# 
  2195   000FFD                     TOS             equ	4093	;# 
  2196   000FFD                     TOSL            equ	4093	;# 
  2197   000FFE                     TOSH            equ	4094	;# 
  2198   000FFF                     TOSU            equ	4095	;# 
  2199   000E80                     MAADR5          equ	3712	;# 
  2200   000E81                     MAADR6          equ	3713	;# 
  2201   000E82                     MAADR3          equ	3714	;# 
  2202   000E83                     MAADR4          equ	3715	;# 
  2203   000E84                     MAADR1          equ	3716	;# 
  2204   000E85                     MAADR2          equ	3717	;# 
  2205   000E8A                     MISTAT          equ	3722	;# 
  2206   000E97                     EFLOCON         equ	3735	;# 
  2207   000E98                     EPAUS           equ	3736	;# 
  2208   000E98                     EPAUSL          equ	3736	;# 
  2209   000E99                     EPAUSH          equ	3737	;# 
  2210   000EA0                     MACON1          equ	3744	;# 
  2211   000EA2                     MACON3          equ	3746	;# 
  2212   000EA3                     MACON4          equ	3747	;# 
  2213   000EA4                     MABBIPG         equ	3748	;# 
  2214   000EA6                     MAIPG           equ	3750	;# 
  2215   000EA6                     MAIPGL          equ	3750	;# 
  2216   000EA7                     MAIPGH          equ	3751	;# 
  2217   000EAA                     MAMXFL          equ	3754	;# 
  2218   000EAA                     MAMXFLL         equ	3754	;# 
  2219   000EAB                     MAMXFLH         equ	3755	;# 
  2220   000EB2                     MICMD           equ	3762	;# 
  2221   000EB4                     MIREGADR        equ	3764	;# 
  2222   000EB6                     MIWR            equ	3766	;# 
  2223   000EB6                     MIWRL           equ	3766	;# 
  2224   000EB7                     MIWRH           equ	3767	;# 
  2225   000EB8                     MIRD            equ	3768	;# 
  2226   000EB8                     MIRDL           equ	3768	;# 
  2227   000EB9                     MIRDH           equ	3769	;# 
  2228   000EC0                     EHT0            equ	3776	;# 
  2229   000EC1                     EHT1            equ	3777	;# 
  2230   000EC2                     EHT2            equ	3778	;# 
  2231   000EC3                     EHT3            equ	3779	;# 
  2232   000EC4                     EHT4            equ	3780	;# 
  2233   000EC5                     EHT5            equ	3781	;# 
  2234   000EC6                     EHT6            equ	3782	;# 
  2235   000EC7                     EHT7            equ	3783	;# 
  2236   000EC8                     EPMM0           equ	3784	;# 
  2237   000EC9                     EPMM1           equ	3785	;# 
  2238   000ECA                     EPMM2           equ	3786	;# 
  2239   000ECB                     EPMM3           equ	3787	;# 
  2240   000ECC                     EPMM4           equ	3788	;# 
  2241   000ECD                     EPMM5           equ	3789	;# 
  2242   000ECE                     EPMM6           equ	3790	;# 
  2243   000ECF                     EPMM7           equ	3791	;# 
  2244   000ED0                     EPMCS           equ	3792	;# 
  2245   000ED0                     EPMCSL          equ	3792	;# 
  2246   000ED1                     EPMCSH          equ	3793	;# 
  2247   000ED4                     EPMO            equ	3796	;# 
  2248   000ED4                     EPMOL           equ	3796	;# 
  2249   000ED5                     EPMOH           equ	3797	;# 
  2250   000ED8                     ERXFCON         equ	3800	;# 
  2251   000ED9                     EPKTCNT         equ	3801	;# 
  2252   000EE2                     EWRPT           equ	3810	;# 
  2253   000EE2                     EWRPTL          equ	3810	;# 
  2254   000EE3                     EWRPTH          equ	3811	;# 
  2255   000EE4                     ETXST           equ	3812	;# 
  2256   000EE4                     ETXSTL          equ	3812	;# 
  2257   000EE5                     ETXSTH          equ	3813	;# 
  2258   000EE6                     ETXND           equ	3814	;# 
  2259   000EE6                     ETXNDL          equ	3814	;# 
  2260   000EE7                     ETXNDH          equ	3815	;# 
  2261   000EE8                     ERXST           equ	3816	;# 
  2262   000EE8                     ERXSTL          equ	3816	;# 
  2263   000EE9                     ERXSTH          equ	3817	;# 
  2264   000EEA                     ERXND           equ	3818	;# 
  2265   000EEA                     ERXNDL          equ	3818	;# 
  2266   000EEB                     ERXNDH          equ	3819	;# 
  2267   000EEC                     ERXRDPT         equ	3820	;# 
  2268   000EEC                     ERXRDPTL        equ	3820	;# 
  2269   000EED                     ERXRDPTH        equ	3821	;# 
  2270   000EEE                     ERXWRPT         equ	3822	;# 
  2271   000EEE                     ERXWRPTL        equ	3822	;# 
  2272   000EEF                     ERXWRPTH        equ	3823	;# 
  2273   000EF0                     EDMAST          equ	3824	;# 
  2274   000EF0                     EDMASTL         equ	3824	;# 
  2275   000EF1                     EDMASTH         equ	3825	;# 
  2276   000EF2                     EDMAND          equ	3826	;# 
  2277   000EF2                     EDMANDL         equ	3826	;# 
  2278   000EF3                     EDMANDH         equ	3827	;# 
  2279   000EF4                     EDMADST         equ	3828	;# 
  2280   000EF4                     EDMADSTL        equ	3828	;# 
  2281   000EF5                     EDMADSTH        equ	3829	;# 
  2282   000EF6                     EDMACS          equ	3830	;# 
  2283   000EF6                     EDMACSL         equ	3830	;# 
  2284   000EF7                     EDMACSH         equ	3831	;# 
  2285   000EFB                     EIE             equ	3835	;# 
  2286   000EFD                     ESTAT           equ	3837	;# 
  2287   000EFE                     ECON2           equ	3838	;# 
  2288   000F60                     EIR             equ	3936	;# 
  2289   000F61                     EDATA           equ	3937	;# 
  2290   000F62                     SSP2CON2        equ	3938	;# 
  2291   000F63                     SSP2CON1        equ	3939	;# 
  2292   000F64                     SSP2STAT        equ	3940	;# 
  2293   000F65                     SSP2ADD         equ	3941	;# 
  2294   000F66                     SSP2BUF         equ	3942	;# 
  2295   000F67                     ECCP2DEL        equ	3943	;# 
  2296   000F68                     ECCP2AS         equ	3944	;# 
  2297   000F69                     ECCP3DEL        equ	3945	;# 
  2298   000F6A                     ECCP3AS         equ	3946	;# 
  2299   000F6B                     RCSTA2          equ	3947	;# 
  2300   000F6C                     TXSTA2          equ	3948	;# 
  2301   000F6D                     TXREG2          equ	3949	;# 
  2302   000F6E                     RCREG2          equ	3950	;# 
  2303   000F6F                     SPBRG2          equ	3951	;# 
  2304   000F70                     CCP5CON         equ	3952	;# 
  2305   000F71                     CCPR5           equ	3953	;# 
  2306   000F71                     CCPR5L          equ	3953	;# 
  2307   000F72                     CCPR5H          equ	3954	;# 
  2308   000F73                     CCP4CON         equ	3955	;# 
  2309   000F74                     CCPR4           equ	3956	;# 
  2310   000F74                     CCPR4L          equ	3956	;# 
  2311   000F75                     CCPR4H          equ	3957	;# 
  2312   000F76                     T4CON           equ	3958	;# 
  2313   000F77                     PR4             equ	3959	;# 
  2314   000F78                     TMR4            equ	3960	;# 
  2315   000F79                     ECCP1DEL        equ	3961	;# 
  2316   000F7A                     ERDPT           equ	3962	;# 
  2317   000F7A                     ERDPTL          equ	3962	;# 
  2318   000F7B                     ERDPTH          equ	3963	;# 
  2319   000F7C                     BAUDCON2        equ	3964	;# 
  2320   000F7C                     BAUDCTL2        equ	3964	;# 
  2321   000F7D                     SPBRGH2         equ	3965	;# 
  2322   000F7E                     BAUDCON1        equ	3966	;# 
  2323   000F7E                     BAUDCON         equ	3966	;# 
  2324   000F7E                     BAUDCTL         equ	3966	;# 
  2325   000F7E                     BAUDCTL1        equ	3966	;# 
  2326   000F7F                     SPBRGH1         equ	3967	;# 
  2327   000F7F                     SPBRGH          equ	3967	;# 
  2328   000F80                     PORTA           equ	3968	;# 
  2329   000F81                     PORTB           equ	3969	;# 
  2330   000F82                     PORTC           equ	3970	;# 
  2331   000F83                     PORTD           equ	3971	;# 
  2332   000F84                     PORTE           equ	3972	;# 
  2333   000F85                     PORTF           equ	3973	;# 
  2334   000F86                     PORTG           equ	3974	;# 
  2335   000F87                     PORTH           equ	3975	;# 
  2336   000F88                     PORTJ           equ	3976	;# 
  2337   000F89                     LATA            equ	3977	;# 
  2338   000F8A                     LATB            equ	3978	;# 
  2339   000F8B                     LATC            equ	3979	;# 
  2340   000F8C                     LATD            equ	3980	;# 
  2341   000F8D                     LATE            equ	3981	;# 
  2342   000F8E                     LATF            equ	3982	;# 
  2343   000F8F                     LATG            equ	3983	;# 
  2344   000F90                     LATH            equ	3984	;# 
  2345   000F91                     LATJ            equ	3985	;# 
  2346   000F92                     TRISA           equ	3986	;# 
  2347   000F92                     DDRA            equ	3986	;# 
  2348   000F93                     TRISB           equ	3987	;# 
  2349   000F93                     DDRB            equ	3987	;# 
  2350   000F94                     TRISC           equ	3988	;# 
  2351   000F94                     DDRC            equ	3988	;# 
  2352   000F95                     TRISD           equ	3989	;# 
  2353   000F95                     DDRD            equ	3989	;# 
  2354   000F96                     TRISE           equ	3990	;# 
  2355   000F96                     DDRE            equ	3990	;# 
  2356   000F97                     TRISF           equ	3991	;# 
  2357   000F97                     DDRF            equ	3991	;# 
  2358   000F98                     TRISG           equ	3992	;# 
  2359   000F98                     DDRG            equ	3992	;# 
  2360   000F99                     TRISH           equ	3993	;# 
  2361   000F99                     DDRH            equ	3993	;# 
  2362   000F9A                     TRISJ           equ	3994	;# 
  2363   000F9A                     DDRJ            equ	3994	;# 
  2364   000F9B                     OSCTUNE         equ	3995	;# 
  2365   000F9C                     MEMCON          equ	3996	;# 
  2366   000F9D                     PIE1            equ	3997	;# 
  2367   000F9E                     PIR1            equ	3998	;# 
  2368   000F9F                     IPR1            equ	3999	;# 
  2369   000FA0                     PIE2            equ	4000	;# 
  2370   000FA1                     PIR2            equ	4001	;# 
  2371   000FA2                     IPR2            equ	4002	;# 
  2372   000FA3                     PIE3            equ	4003	;# 
  2373   000FA4                     PIR3            equ	4004	;# 
  2374   000FA5                     IPR3            equ	4005	;# 
  2375   000FA6                     EECON1          equ	4006	;# 
  2376   000FA7                     EECON2          equ	4007	;# 
  2377   000FAB                     RCSTA1          equ	4011	;# 
  2378   000FAB                     RCSTA           equ	4011	;# 
  2379   000FAC                     TXSTA1          equ	4012	;# 
  2380   000FAC                     TXSTA           equ	4012	;# 
  2381   000FAD                     TXREG1          equ	4013	;# 
  2382   000FAD                     TXREG           equ	4013	;# 
  2383   000FAE                     RCREG1          equ	4014	;# 
  2384   000FAE                     RCREG           equ	4014	;# 
  2385   000FAF                     SPBRG1          equ	4015	;# 
  2386   000FAF                     SPBRG           equ	4015	;# 
  2387   000FB0                     PSPCON          equ	4016	;# 
  2388   000FB1                     T3CON           equ	4017	;# 
  2389   000FB2                     TMR3            equ	4018	;# 
  2390   000FB2                     TMR3L           equ	4018	;# 
  2391   000FB3                     TMR3H           equ	4019	;# 
  2392   000FB4                     CMCON           equ	4020	;# 
  2393   000FB5                     CVRCON          equ	4021	;# 
  2394   000FB6                     ECCP1AS         equ	4022	;# 
  2395   000FB7                     CCP3CON         equ	4023	;# 
  2396   000FB7                     ECCP3CON        equ	4023	;# 
  2397   000FB8                     CCPR3           equ	4024	;# 
  2398   000FB8                     CCPR3L          equ	4024	;# 
  2399   000FB9                     CCPR3H          equ	4025	;# 
  2400   000FBA                     CCP2CON         equ	4026	;# 
  2401   000FBA                     ECCP2CON        equ	4026	;# 
  2402   000FBB                     CCPR2           equ	4027	;# 
  2403   000FBB                     CCPR2L          equ	4027	;# 
  2404   000FBC                     CCPR2H          equ	4028	;# 
  2405   000FBD                     CCP1CON         equ	4029	;# 
  2406   000FBD                     ECCP1CON        equ	4029	;# 
  2407   000FBE                     CCPR1           equ	4030	;# 
  2408   000FBE                     CCPR1L          equ	4030	;# 
  2409   000FBF                     CCPR1H          equ	4031	;# 
  2410   000FC0                     ADCON2          equ	4032	;# 
  2411   000FC1                     ADCON1          equ	4033	;# 
  2412   000FC2                     ADCON0          equ	4034	;# 
  2413   000FC3                     ADRES           equ	4035	;# 
  2414   000FC3                     ADRESL          equ	4035	;# 
  2415   000FC4                     ADRESH          equ	4036	;# 
  2416   000FC5                     SSP1CON2        equ	4037	;# 
  2417   000FC5                     SSPCON2         equ	4037	;# 
  2418   000FC6                     SSP1CON1        equ	4038	;# 
  2419   000FC6                     SSPCON1         equ	4038	;# 
  2420   000FC7                     SSP1STAT        equ	4039	;# 
  2421   000FC7                     SSPSTAT         equ	4039	;# 
  2422   000FC8                     SSP1ADD         equ	4040	;# 
  2423   000FC8                     SSPADD          equ	4040	;# 
  2424   000FC9                     SSP1BUF         equ	4041	;# 
  2425   000FC9                     SSPBUF          equ	4041	;# 
  2426   000FCA                     T2CON           equ	4042	;# 
  2427   000FCB                     PR2             equ	4043	;# 
  2428   000FCC                     TMR2            equ	4044	;# 
  2429   000FCD                     T1CON           equ	4045	;# 
  2430   000FCE                     TMR1            equ	4046	;# 
  2431   000FCE                     TMR1L           equ	4046	;# 
  2432   000FCF                     TMR1H           equ	4047	;# 
  2433   000FD0                     RCON            equ	4048	;# 
  2434   000FD1                     WDTCON          equ	4049	;# 
  2435   000FD2                     ECON1           equ	4050	;# 
  2436   000FD3                     OSCCON          equ	4051	;# 
  2437   000FD5                     T0CON           equ	4053	;# 
  2438   000FD6                     TMR0            equ	4054	;# 
  2439   000FD6                     TMR0L           equ	4054	;# 
  2440   000FD7                     TMR0H           equ	4055	;# 
  2441   000FD8                     STATUS          equ	4056	;# 
  2442   000FD9                     FSR2            equ	4057	;# 
  2443   000FD9                     FSR2L           equ	4057	;# 
  2444   000FDA                     FSR2H           equ	4058	;# 
  2445   000FDB                     PLUSW2          equ	4059	;# 
  2446   000FDC                     PREINC2         equ	4060	;# 
  2447   000FDD                     POSTDEC2        equ	4061	;# 
  2448   000FDE                     POSTINC2        equ	4062	;# 
  2449   000FDF                     INDF2           equ	4063	;# 
  2450   000FE0                     BSR             equ	4064	;# 
  2451   000FE1                     FSR1            equ	4065	;# 
  2452   000FE1                     FSR1L           equ	4065	;# 
  2453   000FE2                     FSR1H           equ	4066	;# 
  2454   000FE3                     PLUSW1          equ	4067	;# 
  2455   000FE4                     PREINC1         equ	4068	;# 
  2456   000FE5                     POSTDEC1        equ	4069	;# 
  2457   000FE6                     POSTINC1        equ	4070	;# 
  2458   000FE7                     INDF1           equ	4071	;# 
  2459   000FE8                     WREG            equ	4072	;# 
  2460   000FE9                     FSR0            equ	4073	;# 
  2461   000FE9                     FSR0L           equ	4073	;# 
  2462   000FEA                     FSR0H           equ	4074	;# 
  2463   000FEB                     PLUSW0          equ	4075	;# 
  2464   000FEC                     PREINC0         equ	4076	;# 
  2465   000FED                     POSTDEC0        equ	4077	;# 
  2466   000FEE                     POSTINC0        equ	4078	;# 
  2467   000FEF                     INDF0           equ	4079	;# 
  2468   000FF0                     INTCON3         equ	4080	;# 
  2469   000FF1                     INTCON2         equ	4081	;# 
  2470   000FF2                     INTCON          equ	4082	;# 
  2471   000FF3                     PROD            equ	4083	;# 
  2472   000FF3                     PRODL           equ	4083	;# 
  2473   000FF4                     PRODH           equ	4084	;# 
  2474   000FF5                     TABLAT          equ	4085	;# 
  2475   000FF6                     TBLPTR          equ	4086	;# 
  2476   000FF6                     TBLPTRL         equ	4086	;# 
  2477   000FF7                     TBLPTRH         equ	4087	;# 
  2478   000FF8                     TBLPTRU         equ	4088	;# 
  2479   000FF9                     PCLAT           equ	4089	;# 
  2480   000FF9                     PC              equ	4089	;# 
  2481   000FF9                     PCL             equ	4089	;# 
  2482   000FFA                     PCLATH          equ	4090	;# 
  2483   000FFB                     PCLATU          equ	4091	;# 
  2484   000FFC                     STKPTR          equ	4092	;# 
  2485   000FFD                     TOS             equ	4093	;# 
  2486   000FFD                     TOSL            equ	4093	;# 
  2487   000FFE                     TOSH            equ	4094	;# 
  2488   000FFF                     TOSU            equ	4095	;# 
  2489   000E80                     MAADR5          equ	3712	;# 
  2490   000E81                     MAADR6          equ	3713	;# 
  2491   000E82                     MAADR3          equ	3714	;# 
  2492   000E83                     MAADR4          equ	3715	;# 
  2493   000E84                     MAADR1          equ	3716	;# 
  2494   000E85                     MAADR2          equ	3717	;# 
  2495   000E8A                     MISTAT          equ	3722	;# 
  2496   000E97                     EFLOCON         equ	3735	;# 
  2497   000E98                     EPAUS           equ	3736	;# 
  2498   000E98                     EPAUSL          equ	3736	;# 
  2499   000E99                     EPAUSH          equ	3737	;# 
  2500   000EA0                     MACON1          equ	3744	;# 
  2501   000EA2                     MACON3          equ	3746	;# 
  2502   000EA3                     MACON4          equ	3747	;# 
  2503   000EA4                     MABBIPG         equ	3748	;# 
  2504   000EA6                     MAIPG           equ	3750	;# 
  2505   000EA6                     MAIPGL          equ	3750	;# 
  2506   000EA7                     MAIPGH          equ	3751	;# 
  2507   000EAA                     MAMXFL          equ	3754	;# 
  2508   000EAA                     MAMXFLL         equ	3754	;# 
  2509   000EAB                     MAMXFLH         equ	3755	;# 
  2510   000EB2                     MICMD           equ	3762	;# 
  2511   000EB4                     MIREGADR        equ	3764	;# 
  2512   000EB6                     MIWR            equ	3766	;# 
  2513   000EB6                     MIWRL           equ	3766	;# 
  2514   000EB7                     MIWRH           equ	3767	;# 
  2515   000EB8                     MIRD            equ	3768	;# 
  2516   000EB8                     MIRDL           equ	3768	;# 
  2517   000EB9                     MIRDH           equ	3769	;# 
  2518   000EC0                     EHT0            equ	3776	;# 
  2519   000EC1                     EHT1            equ	3777	;# 
  2520   000EC2                     EHT2            equ	3778	;# 
  2521   000EC3                     EHT3            equ	3779	;# 
  2522   000EC4                     EHT4            equ	3780	;# 
  2523   000EC5                     EHT5            equ	3781	;# 
  2524   000EC6                     EHT6            equ	3782	;# 
  2525   000EC7                     EHT7            equ	3783	;# 
  2526   000EC8                     EPMM0           equ	3784	;# 
  2527   000EC9                     EPMM1           equ	3785	;# 
  2528   000ECA                     EPMM2           equ	3786	;# 
  2529   000ECB                     EPMM3           equ	3787	;# 
  2530   000ECC                     EPMM4           equ	3788	;# 
  2531   000ECD                     EPMM5           equ	3789	;# 
  2532   000ECE                     EPMM6           equ	3790	;# 
  2533   000ECF                     EPMM7           equ	3791	;# 
  2534   000ED0                     EPMCS           equ	3792	;# 
  2535   000ED0                     EPMCSL          equ	3792	;# 
  2536   000ED1                     EPMCSH          equ	3793	;# 
  2537   000ED4                     EPMO            equ	3796	;# 
  2538   000ED4                     EPMOL           equ	3796	;# 
  2539   000ED5                     EPMOH           equ	3797	;# 
  2540   000ED8                     ERXFCON         equ	3800	;# 
  2541   000ED9                     EPKTCNT         equ	3801	;# 
  2542   000EE2                     EWRPT           equ	3810	;# 
  2543   000EE2                     EWRPTL          equ	3810	;# 
  2544   000EE3                     EWRPTH          equ	3811	;# 
  2545   000EE4                     ETXST           equ	3812	;# 
  2546   000EE4                     ETXSTL          equ	3812	;# 
  2547   000EE5                     ETXSTH          equ	3813	;# 
  2548   000EE6                     ETXND           equ	3814	;# 
  2549   000EE6                     ETXNDL          equ	3814	;# 
  2550   000EE7                     ETXNDH          equ	3815	;# 
  2551   000EE8                     ERXST           equ	3816	;# 
  2552   000EE8                     ERXSTL          equ	3816	;# 
  2553   000EE9                     ERXSTH          equ	3817	;# 
  2554   000EEA                     ERXND           equ	3818	;# 
  2555   000EEA                     ERXNDL          equ	3818	;# 
  2556   000EEB                     ERXNDH          equ	3819	;# 
  2557   000EEC                     ERXRDPT         equ	3820	;# 
  2558   000EEC                     ERXRDPTL        equ	3820	;# 
  2559   000EED                     ERXRDPTH        equ	3821	;# 
  2560   000EEE                     ERXWRPT         equ	3822	;# 
  2561   000EEE                     ERXWRPTL        equ	3822	;# 
  2562   000EEF                     ERXWRPTH        equ	3823	;# 
  2563   000EF0                     EDMAST          equ	3824	;# 
  2564   000EF0                     EDMASTL         equ	3824	;# 
  2565   000EF1                     EDMASTH         equ	3825	;# 
  2566   000EF2                     EDMAND          equ	3826	;# 
  2567   000EF2                     EDMANDL         equ	3826	;# 
  2568   000EF3                     EDMANDH         equ	3827	;# 
  2569   000EF4                     EDMADST         equ	3828	;# 
  2570   000EF4                     EDMADSTL        equ	3828	;# 
  2571   000EF5                     EDMADSTH        equ	3829	;# 
  2572   000EF6                     EDMACS          equ	3830	;# 
  2573   000EF6                     EDMACSL         equ	3830	;# 
  2574   000EF7                     EDMACSH         equ	3831	;# 
  2575   000EFB                     EIE             equ	3835	;# 
  2576   000EFD                     ESTAT           equ	3837	;# 
  2577   000EFE                     ECON2           equ	3838	;# 
  2578   000F60                     EIR             equ	3936	;# 
  2579   000F61                     EDATA           equ	3937	;# 
  2580   000F62                     SSP2CON2        equ	3938	;# 
  2581   000F63                     SSP2CON1        equ	3939	;# 
  2582   000F64                     SSP2STAT        equ	3940	;# 
  2583   000F65                     SSP2ADD         equ	3941	;# 
  2584   000F66                     SSP2BUF         equ	3942	;# 
  2585   000F67                     ECCP2DEL        equ	3943	;# 
  2586   000F68                     ECCP2AS         equ	3944	;# 
  2587   000F69                     ECCP3DEL        equ	3945	;# 
  2588   000F6A                     ECCP3AS         equ	3946	;# 
  2589   000F6B                     RCSTA2          equ	3947	;# 
  2590   000F6C                     TXSTA2          equ	3948	;# 
  2591   000F6D                     TXREG2          equ	3949	;# 
  2592   000F6E                     RCREG2          equ	3950	;# 
  2593   000F6F                     SPBRG2          equ	3951	;# 
  2594   000F70                     CCP5CON         equ	3952	;# 
  2595   000F71                     CCPR5           equ	3953	;# 
  2596   000F71                     CCPR5L          equ	3953	;# 
  2597   000F72                     CCPR5H          equ	3954	;# 
  2598   000F73                     CCP4CON         equ	3955	;# 
  2599   000F74                     CCPR4           equ	3956	;# 
  2600   000F74                     CCPR4L          equ	3956	;# 
  2601   000F75                     CCPR4H          equ	3957	;# 
  2602   000F76                     T4CON           equ	3958	;# 
  2603   000F77                     PR4             equ	3959	;# 
  2604   000F78                     TMR4            equ	3960	;# 
  2605   000F79                     ECCP1DEL        equ	3961	;# 
  2606   000F7A                     ERDPT           equ	3962	;# 
  2607   000F7A                     ERDPTL          equ	3962	;# 
  2608   000F7B                     ERDPTH          equ	3963	;# 
  2609   000F7C                     BAUDCON2        equ	3964	;# 
  2610   000F7C                     BAUDCTL2        equ	3964	;# 
  2611   000F7D                     SPBRGH2         equ	3965	;# 
  2612   000F7E                     BAUDCON1        equ	3966	;# 
  2613   000F7E                     BAUDCON         equ	3966	;# 
  2614   000F7E                     BAUDCTL         equ	3966	;# 
  2615   000F7E                     BAUDCTL1        equ	3966	;# 
  2616   000F7F                     SPBRGH1         equ	3967	;# 
  2617   000F7F                     SPBRGH          equ	3967	;# 
  2618   000F80                     PORTA           equ	3968	;# 
  2619   000F81                     PORTB           equ	3969	;# 
  2620   000F82                     PORTC           equ	3970	;# 
  2621   000F83                     PORTD           equ	3971	;# 
  2622   000F84                     PORTE           equ	3972	;# 
  2623   000F85                     PORTF           equ	3973	;# 
  2624   000F86                     PORTG           equ	3974	;# 
  2625   000F87                     PORTH           equ	3975	;# 
  2626   000F88                     PORTJ           equ	3976	;# 
  2627   000F89                     LATA            equ	3977	;# 
  2628   000F8A                     LATB            equ	3978	;# 
  2629   000F8B                     LATC            equ	3979	;# 
  2630   000F8C                     LATD            equ	3980	;# 
  2631   000F8D                     LATE            equ	3981	;# 
  2632   000F8E                     LATF            equ	3982	;# 
  2633   000F8F                     LATG            equ	3983	;# 
  2634   000F90                     LATH            equ	3984	;# 
  2635   000F91                     LATJ            equ	3985	;# 
  2636   000F92                     TRISA           equ	3986	;# 
  2637   000F92                     DDRA            equ	3986	;# 
  2638   000F93                     TRISB           equ	3987	;# 
  2639   000F93                     DDRB            equ	3987	;# 
  2640   000F94                     TRISC           equ	3988	;# 
  2641   000F94                     DDRC            equ	3988	;# 
  2642   000F95                     TRISD           equ	3989	;# 
  2643   000F95                     DDRD            equ	3989	;# 
  2644   000F96                     TRISE           equ	3990	;# 
  2645   000F96                     DDRE            equ	3990	;# 
  2646   000F97                     TRISF           equ	3991	;# 
  2647   000F97                     DDRF            equ	3991	;# 
  2648   000F98                     TRISG           equ	3992	;# 
  2649   000F98                     DDRG            equ	3992	;# 
  2650   000F99                     TRISH           equ	3993	;# 
  2651   000F99                     DDRH            equ	3993	;# 
  2652   000F9A                     TRISJ           equ	3994	;# 
  2653   000F9A                     DDRJ            equ	3994	;# 
  2654   000F9B                     OSCTUNE         equ	3995	;# 
  2655   000F9C                     MEMCON          equ	3996	;# 
  2656   000F9D                     PIE1            equ	3997	;# 
  2657   000F9E                     PIR1            equ	3998	;# 
  2658   000F9F                     IPR1            equ	3999	;# 
  2659   000FA0                     PIE2            equ	4000	;# 
  2660   000FA1                     PIR2            equ	4001	;# 
  2661   000FA2                     IPR2            equ	4002	;# 
  2662   000FA3                     PIE3            equ	4003	;# 
  2663   000FA4                     PIR3            equ	4004	;# 
  2664   000FA5                     IPR3            equ	4005	;# 
  2665   000FA6                     EECON1          equ	4006	;# 
  2666   000FA7                     EECON2          equ	4007	;# 
  2667   000FAB                     RCSTA1          equ	4011	;# 
  2668   000FAB                     RCSTA           equ	4011	;# 
  2669   000FAC                     TXSTA1          equ	4012	;# 
  2670   000FAC                     TXSTA           equ	4012	;# 
  2671   000FAD                     TXREG1          equ	4013	;# 
  2672   000FAD                     TXREG           equ	4013	;# 
  2673   000FAE                     RCREG1          equ	4014	;# 
  2674   000FAE                     RCREG           equ	4014	;# 
  2675   000FAF                     SPBRG1          equ	4015	;# 
  2676   000FAF                     SPBRG           equ	4015	;# 
  2677   000FB0                     PSPCON          equ	4016	;# 
  2678   000FB1                     T3CON           equ	4017	;# 
  2679   000FB2                     TMR3            equ	4018	;# 
  2680   000FB2                     TMR3L           equ	4018	;# 
  2681   000FB3                     TMR3H           equ	4019	;# 
  2682   000FB4                     CMCON           equ	4020	;# 
  2683   000FB5                     CVRCON          equ	4021	;# 
  2684   000FB6                     ECCP1AS         equ	4022	;# 
  2685   000FB7                     CCP3CON         equ	4023	;# 
  2686   000FB7                     ECCP3CON        equ	4023	;# 
  2687   000FB8                     CCPR3           equ	4024	;# 
  2688   000FB8                     CCPR3L          equ	4024	;# 
  2689   000FB9                     CCPR3H          equ	4025	;# 
  2690   000FBA                     CCP2CON         equ	4026	;# 
  2691   000FBA                     ECCP2CON        equ	4026	;# 
  2692   000FBB                     CCPR2           equ	4027	;# 
  2693   000FBB                     CCPR2L          equ	4027	;# 
  2694   000FBC                     CCPR2H          equ	4028	;# 
  2695   000FBD                     CCP1CON         equ	4029	;# 
  2696   000FBD                     ECCP1CON        equ	4029	;# 
  2697   000FBE                     CCPR1           equ	4030	;# 
  2698   000FBE                     CCPR1L          equ	4030	;# 
  2699   000FBF                     CCPR1H          equ	4031	;# 
  2700   000FC0                     ADCON2          equ	4032	;# 
  2701   000FC1                     ADCON1          equ	4033	;# 
  2702   000FC2                     ADCON0          equ	4034	;# 
  2703   000FC3                     ADRES           equ	4035	;# 
  2704   000FC3                     ADRESL          equ	4035	;# 
  2705   000FC4                     ADRESH          equ	4036	;# 
  2706   000FC5                     SSP1CON2        equ	4037	;# 
  2707   000FC5                     SSPCON2         equ	4037	;# 
  2708   000FC6                     SSP1CON1        equ	4038	;# 
  2709   000FC6                     SSPCON1         equ	4038	;# 
  2710   000FC7                     SSP1STAT        equ	4039	;# 
  2711   000FC7                     SSPSTAT         equ	4039	;# 
  2712   000FC8                     SSP1ADD         equ	4040	;# 
  2713   000FC8                     SSPADD          equ	4040	;# 
  2714   000FC9                     SSP1BUF         equ	4041	;# 
  2715   000FC9                     SSPBUF          equ	4041	;# 
  2716   000FCA                     T2CON           equ	4042	;# 
  2717   000FCB                     PR2             equ	4043	;# 
  2718   000FCC                     TMR2            equ	4044	;# 
  2719   000FCD                     T1CON           equ	4045	;# 
  2720   000FCE                     TMR1            equ	4046	;# 
  2721   000FCE                     TMR1L           equ	4046	;# 
  2722   000FCF                     TMR1H           equ	4047	;# 
  2723   000FD0                     RCON            equ	4048	;# 
  2724   000FD1                     WDTCON          equ	4049	;# 
  2725   000FD2                     ECON1           equ	4050	;# 
  2726   000FD3                     OSCCON          equ	4051	;# 
  2727   000FD5                     T0CON           equ	4053	;# 
  2728   000FD6                     TMR0            equ	4054	;# 
  2729   000FD6                     TMR0L           equ	4054	;# 
  2730   000FD7                     TMR0H           equ	4055	;# 
  2731   000FD8                     STATUS          equ	4056	;# 
  2732   000FD9                     FSR2            equ	4057	;# 
  2733   000FD9                     FSR2L           equ	4057	;# 
  2734   000FDA                     FSR2H           equ	4058	;# 
  2735   000FDB                     PLUSW2          equ	4059	;# 
  2736   000FDC                     PREINC2         equ	4060	;# 
  2737   000FDD                     POSTDEC2        equ	4061	;# 
  2738   000FDE                     POSTINC2        equ	4062	;# 
  2739   000FDF                     INDF2           equ	4063	;# 
  2740   000FE0                     BSR             equ	4064	;# 
  2741   000FE1                     FSR1            equ	4065	;# 
  2742   000FE1                     FSR1L           equ	4065	;# 
  2743   000FE2                     FSR1H           equ	4066	;# 
  2744   000FE3                     PLUSW1          equ	4067	;# 
  2745   000FE4                     PREINC1         equ	4068	;# 
  2746   000FE5                     POSTDEC1        equ	4069	;# 
  2747   000FE6                     POSTINC1        equ	4070	;# 
  2748   000FE7                     INDF1           equ	4071	;# 
  2749   000FE8                     WREG            equ	4072	;# 
  2750   000FE9                     FSR0            equ	4073	;# 
  2751   000FE9                     FSR0L           equ	4073	;# 
  2752   000FEA                     FSR0H           equ	4074	;# 
  2753   000FEB                     PLUSW0          equ	4075	;# 
  2754   000FEC                     PREINC0         equ	4076	;# 
  2755   000FED                     POSTDEC0        equ	4077	;# 
  2756   000FEE                     POSTINC0        equ	4078	;# 
  2757   000FEF                     INDF0           equ	4079	;# 
  2758   000FF0                     INTCON3         equ	4080	;# 
  2759   000FF1                     INTCON2         equ	4081	;# 
  2760   000FF2                     INTCON          equ	4082	;# 
  2761   000FF3                     PROD            equ	4083	;# 
  2762   000FF3                     PRODL           equ	4083	;# 
  2763   000FF4                     PRODH           equ	4084	;# 
  2764   000FF5                     TABLAT          equ	4085	;# 
  2765   000FF6                     TBLPTR          equ	4086	;# 
  2766   000FF6                     TBLPTRL         equ	4086	;# 
  2767   000FF7                     TBLPTRH         equ	4087	;# 
  2768   000FF8                     TBLPTRU         equ	4088	;# 
  2769   000FF9                     PCLAT           equ	4089	;# 
  2770   000FF9                     PC              equ	4089	;# 
  2771   000FF9                     PCL             equ	4089	;# 
  2772   000FFA                     PCLATH          equ	4090	;# 
  2773   000FFB                     PCLATU          equ	4091	;# 
  2774   000FFC                     STKPTR          equ	4092	;# 
  2775   000FFD                     TOS             equ	4093	;# 
  2776   000FFD                     TOSL            equ	4093	;# 
  2777   000FFE                     TOSH            equ	4094	;# 
  2778   000FFF                     TOSU            equ	4095	;# 
  2779   000E80                     MAADR5          equ	3712	;# 
  2780   000E81                     MAADR6          equ	3713	;# 
  2781   000E82                     MAADR3          equ	3714	;# 
  2782   000E83                     MAADR4          equ	3715	;# 
  2783   000E84                     MAADR1          equ	3716	;# 
  2784   000E85                     MAADR2          equ	3717	;# 
  2785   000E8A                     MISTAT          equ	3722	;# 
  2786   000E97                     EFLOCON         equ	3735	;# 
  2787   000E98                     EPAUS           equ	3736	;# 
  2788   000E98                     EPAUSL          equ	3736	;# 
  2789   000E99                     EPAUSH          equ	3737	;# 
  2790   000EA0                     MACON1          equ	3744	;# 
  2791   000EA2                     MACON3          equ	3746	;# 
  2792   000EA3                     MACON4          equ	3747	;# 
  2793   000EA4                     MABBIPG         equ	3748	;# 
  2794   000EA6                     MAIPG           equ	3750	;# 
  2795   000EA6                     MAIPGL          equ	3750	;# 
  2796   000EA7                     MAIPGH          equ	3751	;# 
  2797   000EAA                     MAMXFL          equ	3754	;# 
  2798   000EAA                     MAMXFLL         equ	3754	;# 
  2799   000EAB                     MAMXFLH         equ	3755	;# 
  2800   000EB2                     MICMD           equ	3762	;# 
  2801   000EB4                     MIREGADR        equ	3764	;# 
  2802   000EB6                     MIWR            equ	3766	;# 
  2803   000EB6                     MIWRL           equ	3766	;# 
  2804   000EB7                     MIWRH           equ	3767	;# 
  2805   000EB8                     MIRD            equ	3768	;# 
  2806   000EB8                     MIRDL           equ	3768	;# 
  2807   000EB9                     MIRDH           equ	3769	;# 
  2808   000EC0                     EHT0            equ	3776	;# 
  2809   000EC1                     EHT1            equ	3777	;# 
  2810   000EC2                     EHT2            equ	3778	;# 
  2811   000EC3                     EHT3            equ	3779	;# 
  2812   000EC4                     EHT4            equ	3780	;# 
  2813   000EC5                     EHT5            equ	3781	;# 
  2814   000EC6                     EHT6            equ	3782	;# 
  2815   000EC7                     EHT7            equ	3783	;# 
  2816   000EC8                     EPMM0           equ	3784	;# 
  2817   000EC9                     EPMM1           equ	3785	;# 
  2818   000ECA                     EPMM2           equ	3786	;# 
  2819   000ECB                     EPMM3           equ	3787	;# 
  2820   000ECC                     EPMM4           equ	3788	;# 
  2821   000ECD                     EPMM5           equ	3789	;# 
  2822   000ECE                     EPMM6           equ	3790	;# 
  2823   000ECF                     EPMM7           equ	3791	;# 
  2824   000ED0                     EPMCS           equ	3792	;# 
  2825   000ED0                     EPMCSL          equ	3792	;# 
  2826   000ED1                     EPMCSH          equ	3793	;# 
  2827   000ED4                     EPMO            equ	3796	;# 
  2828   000ED4                     EPMOL           equ	3796	;# 
  2829   000ED5                     EPMOH           equ	3797	;# 
  2830   000ED8                     ERXFCON         equ	3800	;# 
  2831   000ED9                     EPKTCNT         equ	3801	;# 
  2832   000EE2                     EWRPT           equ	3810	;# 
  2833   000EE2                     EWRPTL          equ	3810	;# 
  2834   000EE3                     EWRPTH          equ	3811	;# 
  2835   000EE4                     ETXST           equ	3812	;# 
  2836   000EE4                     ETXSTL          equ	3812	;# 
  2837   000EE5                     ETXSTH          equ	3813	;# 
  2838   000EE6                     ETXND           equ	3814	;# 
  2839   000EE6                     ETXNDL          equ	3814	;# 
  2840   000EE7                     ETXNDH          equ	3815	;# 
  2841   000EE8                     ERXST           equ	3816	;# 
  2842   000EE8                     ERXSTL          equ	3816	;# 
  2843   000EE9                     ERXSTH          equ	3817	;# 
  2844   000EEA                     ERXND           equ	3818	;# 
  2845   000EEA                     ERXNDL          equ	3818	;# 
  2846   000EEB                     ERXNDH          equ	3819	;# 
  2847   000EEC                     ERXRDPT         equ	3820	;# 
  2848   000EEC                     ERXRDPTL        equ	3820	;# 
  2849   000EED                     ERXRDPTH        equ	3821	;# 
  2850   000EEE                     ERXWRPT         equ	3822	;# 
  2851   000EEE                     ERXWRPTL        equ	3822	;# 
  2852   000EEF                     ERXWRPTH        equ	3823	;# 
  2853   000EF0                     EDMAST          equ	3824	;# 
  2854   000EF0                     EDMASTL         equ	3824	;# 
  2855   000EF1                     EDMASTH         equ	3825	;# 
  2856   000EF2                     EDMAND          equ	3826	;# 
  2857   000EF2                     EDMANDL         equ	3826	;# 
  2858   000EF3                     EDMANDH         equ	3827	;# 
  2859   000EF4                     EDMADST         equ	3828	;# 
  2860   000EF4                     EDMADSTL        equ	3828	;# 
  2861   000EF5                     EDMADSTH        equ	3829	;# 
  2862   000EF6                     EDMACS          equ	3830	;# 
  2863   000EF6                     EDMACSL         equ	3830	;# 
  2864   000EF7                     EDMACSH         equ	3831	;# 
  2865   000EFB                     EIE             equ	3835	;# 
  2866   000EFD                     ESTAT           equ	3837	;# 
  2867   000EFE                     ECON2           equ	3838	;# 
  2868   000F60                     EIR             equ	3936	;# 
  2869   000F61                     EDATA           equ	3937	;# 
  2870   000F62                     SSP2CON2        equ	3938	;# 
  2871   000F63                     SSP2CON1        equ	3939	;# 
  2872   000F64                     SSP2STAT        equ	3940	;# 
  2873   000F65                     SSP2ADD         equ	3941	;# 
  2874   000F66                     SSP2BUF         equ	3942	;# 
  2875   000F67                     ECCP2DEL        equ	3943	;# 
  2876   000F68                     ECCP2AS         equ	3944	;# 
  2877   000F69                     ECCP3DEL        equ	3945	;# 
  2878   000F6A                     ECCP3AS         equ	3946	;# 
  2879   000F6B                     RCSTA2          equ	3947	;# 
  2880   000F6C                     TXSTA2          equ	3948	;# 
  2881   000F6D                     TXREG2          equ	3949	;# 
  2882   000F6E                     RCREG2          equ	3950	;# 
  2883   000F6F                     SPBRG2          equ	3951	;# 
  2884   000F70                     CCP5CON         equ	3952	;# 
  2885   000F71                     CCPR5           equ	3953	;# 
  2886   000F71                     CCPR5L          equ	3953	;# 
  2887   000F72                     CCPR5H          equ	3954	;# 
  2888   000F73                     CCP4CON         equ	3955	;# 
  2889   000F74                     CCPR4           equ	3956	;# 
  2890   000F74                     CCPR4L          equ	3956	;# 
  2891   000F75                     CCPR4H          equ	3957	;# 
  2892   000F76                     T4CON           equ	3958	;# 
  2893   000F77                     PR4             equ	3959	;# 
  2894   000F78                     TMR4            equ	3960	;# 
  2895   000F79                     ECCP1DEL        equ	3961	;# 
  2896   000F7A                     ERDPT           equ	3962	;# 
  2897   000F7A                     ERDPTL          equ	3962	;# 
  2898   000F7B                     ERDPTH          equ	3963	;# 
  2899   000F7C                     BAUDCON2        equ	3964	;# 
  2900   000F7C                     BAUDCTL2        equ	3964	;# 
  2901   000F7D                     SPBRGH2         equ	3965	;# 
  2902   000F7E                     BAUDCON1        equ	3966	;# 
  2903   000F7E                     BAUDCON         equ	3966	;# 
  2904   000F7E                     BAUDCTL         equ	3966	;# 
  2905   000F7E                     BAUDCTL1        equ	3966	;# 
  2906   000F7F                     SPBRGH1         equ	3967	;# 
  2907   000F7F                     SPBRGH          equ	3967	;# 
  2908   000F80                     PORTA           equ	3968	;# 
  2909   000F81                     PORTB           equ	3969	;# 
  2910   000F82                     PORTC           equ	3970	;# 
  2911   000F83                     PORTD           equ	3971	;# 
  2912   000F84                     PORTE           equ	3972	;# 
  2913   000F85                     PORTF           equ	3973	;# 
  2914   000F86                     PORTG           equ	3974	;# 
  2915   000F87                     PORTH           equ	3975	;# 
  2916   000F88                     PORTJ           equ	3976	;# 
  2917   000F89                     LATA            equ	3977	;# 
  2918   000F8A                     LATB            equ	3978	;# 
  2919   000F8B                     LATC            equ	3979	;# 
  2920   000F8C                     LATD            equ	3980	;# 
  2921   000F8D                     LATE            equ	3981	;# 
  2922   000F8E                     LATF            equ	3982	;# 
  2923   000F8F                     LATG            equ	3983	;# 
  2924   000F90                     LATH            equ	3984	;# 
  2925   000F91                     LATJ            equ	3985	;# 
  2926   000F92                     TRISA           equ	3986	;# 
  2927   000F92                     DDRA            equ	3986	;# 
  2928   000F93                     TRISB           equ	3987	;# 
  2929   000F93                     DDRB            equ	3987	;# 
  2930   000F94                     TRISC           equ	3988	;# 
  2931   000F94                     DDRC            equ	3988	;# 
  2932   000F95                     TRISD           equ	3989	;# 
  2933   000F95                     DDRD            equ	3989	;# 
  2934   000F96                     TRISE           equ	3990	;# 
  2935   000F96                     DDRE            equ	3990	;# 
  2936   000F97                     TRISF           equ	3991	;# 
  2937   000F97                     DDRF            equ	3991	;# 
  2938   000F98                     TRISG           equ	3992	;# 
  2939   000F98                     DDRG            equ	3992	;# 
  2940   000F99                     TRISH           equ	3993	;# 
  2941   000F99                     DDRH            equ	3993	;# 
  2942   000F9A                     TRISJ           equ	3994	;# 
  2943   000F9A                     DDRJ            equ	3994	;# 
  2944   000F9B                     OSCTUNE         equ	3995	;# 
  2945   000F9C                     MEMCON          equ	3996	;# 
  2946   000F9D                     PIE1            equ	3997	;# 
  2947   000F9E                     PIR1            equ	3998	;# 
  2948   000F9F                     IPR1            equ	3999	;# 
  2949   000FA0                     PIE2            equ	4000	;# 
  2950   000FA1                     PIR2            equ	4001	;# 
  2951   000FA2                     IPR2            equ	4002	;# 
  2952   000FA3                     PIE3            equ	4003	;# 
  2953   000FA4                     PIR3            equ	4004	;# 
  2954   000FA5                     IPR3            equ	4005	;# 
  2955   000FA6                     EECON1          equ	4006	;# 
  2956   000FA7                     EECON2          equ	4007	;# 
  2957   000FAB                     RCSTA1          equ	4011	;# 
  2958   000FAB                     RCSTA           equ	4011	;# 
  2959   000FAC                     TXSTA1          equ	4012	;# 
  2960   000FAC                     TXSTA           equ	4012	;# 
  2961   000FAD                     TXREG1          equ	4013	;# 
  2962   000FAD                     TXREG           equ	4013	;# 
  2963   000FAE                     RCREG1          equ	4014	;# 
  2964   000FAE                     RCREG           equ	4014	;# 
  2965   000FAF                     SPBRG1          equ	4015	;# 
  2966   000FAF                     SPBRG           equ	4015	;# 
  2967   000FB0                     PSPCON          equ	4016	;# 
  2968   000FB1                     T3CON           equ	4017	;# 
  2969   000FB2                     TMR3            equ	4018	;# 
  2970   000FB2                     TMR3L           equ	4018	;# 
  2971   000FB3                     TMR3H           equ	4019	;# 
  2972   000FB4                     CMCON           equ	4020	;# 
  2973   000FB5                     CVRCON          equ	4021	;# 
  2974   000FB6                     ECCP1AS         equ	4022	;# 
  2975   000FB7                     CCP3CON         equ	4023	;# 
  2976   000FB7                     ECCP3CON        equ	4023	;# 
  2977   000FB8                     CCPR3           equ	4024	;# 
  2978   000FB8                     CCPR3L          equ	4024	;# 
  2979   000FB9                     CCPR3H          equ	4025	;# 
  2980   000FBA                     CCP2CON         equ	4026	;# 
  2981   000FBA                     ECCP2CON        equ	4026	;# 
  2982   000FBB                     CCPR2           equ	4027	;# 
  2983   000FBB                     CCPR2L          equ	4027	;# 
  2984   000FBC                     CCPR2H          equ	4028	;# 
  2985   000FBD                     CCP1CON         equ	4029	;# 
  2986   000FBD                     ECCP1CON        equ	4029	;# 
  2987   000FBE                     CCPR1           equ	4030	;# 
  2988   000FBE                     CCPR1L          equ	4030	;# 
  2989   000FBF                     CCPR1H          equ	4031	;# 
  2990   000FC0                     ADCON2          equ	4032	;# 
  2991   000FC1                     ADCON1          equ	4033	;# 
  2992   000FC2                     ADCON0          equ	4034	;# 
  2993   000FC3                     ADRES           equ	4035	;# 
  2994   000FC3                     ADRESL          equ	4035	;# 
  2995   000FC4                     ADRESH          equ	4036	;# 
  2996   000FC5                     SSP1CON2        equ	4037	;# 
  2997   000FC5                     SSPCON2         equ	4037	;# 
  2998   000FC6                     SSP1CON1        equ	4038	;# 
  2999   000FC6                     SSPCON1         equ	4038	;# 
  3000   000FC7                     SSP1STAT        equ	4039	;# 
  3001   000FC7                     SSPSTAT         equ	4039	;# 
  3002   000FC8                     SSP1ADD         equ	4040	;# 
  3003   000FC8                     SSPADD          equ	4040	;# 
  3004   000FC9                     SSP1BUF         equ	4041	;# 
  3005   000FC9                     SSPBUF          equ	4041	;# 
  3006   000FCA                     T2CON           equ	4042	;# 
  3007   000FCB                     PR2             equ	4043	;# 
  3008   000FCC                     TMR2            equ	4044	;# 
  3009   000FCD                     T1CON           equ	4045	;# 
  3010   000FCE                     TMR1            equ	4046	;# 
  3011   000FCE                     TMR1L           equ	4046	;# 
  3012   000FCF                     TMR1H           equ	4047	;# 
  3013   000FD0                     RCON            equ	4048	;# 
  3014   000FD1                     WDTCON          equ	4049	;# 
  3015   000FD2                     ECON1           equ	4050	;# 
  3016   000FD3                     OSCCON          equ	4051	;# 
  3017   000FD5                     T0CON           equ	4053	;# 
  3018   000FD6                     TMR0            equ	4054	;# 
  3019   000FD6                     TMR0L           equ	4054	;# 
  3020   000FD7                     TMR0H           equ	4055	;# 
  3021   000FD8                     STATUS          equ	4056	;# 
  3022   000FD9                     FSR2            equ	4057	;# 
  3023   000FD9                     FSR2L           equ	4057	;# 
  3024   000FDA                     FSR2H           equ	4058	;# 
  3025   000FDB                     PLUSW2          equ	4059	;# 
  3026   000FDC                     PREINC2         equ	4060	;# 
  3027   000FDD                     POSTDEC2        equ	4061	;# 
  3028   000FDE                     POSTINC2        equ	4062	;# 
  3029   000FDF                     INDF2           equ	4063	;# 
  3030   000FE0                     BSR             equ	4064	;# 
  3031   000FE1                     FSR1            equ	4065	;# 
  3032   000FE1                     FSR1L           equ	4065	;# 
  3033   000FE2                     FSR1H           equ	4066	;# 
  3034   000FE3                     PLUSW1          equ	4067	;# 
  3035   000FE4                     PREINC1         equ	4068	;# 
  3036   000FE5                     POSTDEC1        equ	4069	;# 
  3037   000FE6                     POSTINC1        equ	4070	;# 
  3038   000FE7                     INDF1           equ	4071	;# 
  3039   000FE8                     WREG            equ	4072	;# 
  3040   000FE9                     FSR0            equ	4073	;# 
  3041   000FE9                     FSR0L           equ	4073	;# 
  3042   000FEA                     FSR0H           equ	4074	;# 
  3043   000FEB                     PLUSW0          equ	4075	;# 
  3044   000FEC                     PREINC0         equ	4076	;# 
  3045   000FED                     POSTDEC0        equ	4077	;# 
  3046   000FEE                     POSTINC0        equ	4078	;# 
  3047   000FEF                     INDF0           equ	4079	;# 
  3048   000FF0                     INTCON3         equ	4080	;# 
  3049   000FF1                     INTCON2         equ	4081	;# 
  3050   000FF2                     INTCON          equ	4082	;# 
  3051   000FF3                     PROD            equ	4083	;# 
  3052   000FF3                     PRODL           equ	4083	;# 
  3053   000FF4                     PRODH           equ	4084	;# 
  3054   000FF5                     TABLAT          equ	4085	;# 
  3055   000FF6                     TBLPTR          equ	4086	;# 
  3056   000FF6                     TBLPTRL         equ	4086	;# 
  3057   000FF7                     TBLPTRH         equ	4087	;# 
  3058   000FF8                     TBLPTRU         equ	4088	;# 
  3059   000FF9                     PCLAT           equ	4089	;# 
  3060   000FF9                     PC              equ	4089	;# 
  3061   000FF9                     PCL             equ	4089	;# 
  3062   000FFA                     PCLATH          equ	4090	;# 
  3063   000FFB                     PCLATU          equ	4091	;# 
  3064   000FFC                     STKPTR          equ	4092	;# 
  3065   000FFD                     TOS             equ	4093	;# 
  3066   000FFD                     TOSL            equ	4093	;# 
  3067   000FFE                     TOSH            equ	4094	;# 
  3068   000FFF                     TOSU            equ	4095	;# 
  3069                           
  3070 ;;_filterObj	offset	0
  3071 ;;_maskObj	offset	6
  3072 ;;_rxObj	offset	0
  3073 ;;_rxdata	offset	16
  3074 ;;_ev	offset	0
  3075 ;;_tmid	offset	6
  3076 ;;_processEvent	offset=-3 (param)
  3077 ;;_id	offset=-4 (param)
  3078 ;;_delay	offset=-6 (param)
  3079 ;;_tm	offset	0
  3080 ;;_temp	offset	2
  3081 ;;_ev	offset=-6 (param)
  3082 ;;_inISR	offset=-7 (param)
  3083 ;;_tmid	offset=-9 (param)
  3084 ;;_i	offset	0
  3085 ;;_tm	offset=-2 (param)
  3086 ;;_ev	offset=-8 (param)
  3087 ;;_inISR	offset=-9 (param)
  3088 ;;_me	offset=-2 (param)
  3089 ;;_delay	offset=-4 (param)
  3090 ;;_me	offset=-2 (param)
  3091 ;;_me	offset=-2 (param)
  3092 ;;_processEvent	offset=-5 (param)
  3093 ;;_me	offset=-2 (param)
  3094 ;;_eventID	offset=-3 (param)
  3095 ;;_rxFlags	offset	0
  3096 ;;_rxObj	offset=-2 (param)
  3097 ;;_rxd	offset=-4 (param)
  3098 ;;_temp32	offset	0
  3099 ;;_ba	offset	4
  3100 ;;_fifoReg	offset	80
  3101 ;;_ciFifoCon	offset	92
  3102 ;;_myReg	offset	97
  3103 ;;_ciFifoUa	offset	101
  3104 ;;_a	offset	105
  3105 ;;_i	offset	107
  3106 ;;_n	offset	108
  3107 ;;_spiTransferError	offset	109
  3108 ;;_channel	offset=-1 (param)
  3109 ;;_rxObj	offset=-3 (param)
  3110 ;;_rxd	offset=-5 (param)
  3111 ;;_nBytes	offset=-6 (param)
  3112 ;;_ciFifoCon	offset	0
  3113 ;;_a	offset	5
  3114 ;;_spiTransferError	offset	7
  3115 ;;_channel	offset=-1 (param)
  3116 ;;_i	offset	0
  3117 ;;_spiTransferSize	offset	2
  3118 ;;_spiTransferError	offset	4
  3119 ;;_address	offset=-2 (param)
  3120 ;;_rxd	offset=-4 (param)
  3121 ;;_nBytes	offset=-6 (param)
  3122 ;;_ciFifoSta	offset	0
  3123 ;;_a	offset	4
  3124 ;;_spiTransferError	offset	6
  3125 ;;_channel	offset=-1 (param)
  3126 ;;_flags	offset=-3 (param)
  3127 ;;_i	offset	0
  3128 ;;_me	offset=-2 (param)
  3129 ;;_ev	offset	0
  3130 ;;_ev	offset=-2 (param)
  3131 ;;_txMsg	offset	0
  3132 ;;_txdata	offset	16
  3133 ;;_percent	offset=-1 (param)
  3134 ;;_starter	offset=-2 (param)
  3135 ;;_ev	offset=-2 (param)
  3136 ;;_txMsg	offset	0
  3137 ;;_txdata	offset	16
  3138 ;;_light	offset=-1 (param)
  3139 ;;_txMsg	offset	0
  3140 ;;_txdata	offset	16
  3141 ;;_light	offset=-1 (param)
  3142 ;;_txFlags	offset	0
  3143 ;;_txObj	offset=-2 (param)
  3144 ;;_txd	offset=-4 (param)
  3145 ;;_temp32	offset	0
  3146 ;;_txBuffer	offset	4
  3147 ;;_fifoReg	offset	80
  3148 ;;_ciFifoCon	offset	92
  3149 ;;_a	offset	97
  3150 ;;_ciFifoUa	offset	101
  3151 ;;_dataBytesInObject	offset	105
  3152 ;;_n	offset	109
  3153 ;;_spiTransferError	offset	111
  3154 ;;_i	offset	112
  3155 ;;_j	offset	113
  3156 ;;_channel	offset=-1 (param)
  3157 ;;_txObj	offset=-3 (param)
  3158 ;;_txd	offset=-5 (param)
  3159 ;;_txdNumBytes	offset=-9 (param)
  3160 ;;_flush	offset=-10 (param)
  3161 ;;_i	offset	0
  3162 ;;_spiTransferSize	offset	2
  3163 ;;_spiTransferError	offset	4
  3164 ;;_address	offset=-2 (param)
  3165 ;;_txd	offset=-4 (param)
  3166 ;;_nBytes	offset=-6 (param)
  3167 ;;_ciFifoCon	offset	0
  3168 ;;_a	offset	5
  3169 ;;_spiTransferError	offset	7
  3170 ;;_channel	offset=-1 (param)
  3171 ;;_flush	offset=-2 (param)
  3172 ;;_w	offset	0
  3173 ;;_i	offset	4
  3174 ;;_j	offset	6
  3175 ;;_spiTransferSize	offset	8
  3176 ;;_n	offset	10
  3177 ;;_spiTransferError	offset	12
  3178 ;;_address	offset=-2 (param)
  3179 ;;_rxd	offset=-4 (param)
  3180 ;;_nWords	offset=-6 (param)
  3181 ;;_dataBytesInObject	offset	0
  3182 ;;_dlc	offset=-1 (param)
  3183 ;;_ciFifoSta	offset	0
  3184 ;;_a	offset	4
  3185 ;;_spiTransferError	offset	6
  3186 ;;_channel	offset=-1 (param)
  3187 ;;_flags	offset=-3 (param)
  3188 ;;_ev	offset	0
  3189 ;;_inISR	offset=-6 (param)
  3190 ;;_sign	offset	0
  3191 ;;_counter	offset	1
  3192 ;;_dividend	offset=-2 (param)
  3193 ;;_divisor	offset=-4 (param)
  3194 ;;_inISR	offset=-1 (param)
  3195 ;;_inISR	offset=-1 (param)
  3196 ;;_InterruptHandler	offset=-3 (param)
  3197 ;;_filter	offset=-1 (param)
  3198 ;;_fObj	offset=-3 (param)
  3199 ;;_mObj	offset=-5 (param)
  3200 ;;_a	offset	0
  3201 ;;_fCtrl	offset	2
  3202 ;;_filter	offset=-1 (param)
  3203 ;;_channel	offset=-2 (param)
  3204 ;;_enable	offset=-3 (param)
  3205 ;;_temp32	offset	0
  3206 ;;_fObj	offset	4
  3207 ;;_a	offset	10
  3208 ;;_filter	offset=-1 (param)
  3209 ;;_id	offset=-3 (param)
  3210 ;;_temp32	offset	0
  3211 ;;_mObj	offset	4
  3212 ;;_a	offset	10
  3213 ;;_filter	offset=-1 (param)
  3214 ;;_mask	offset=-3 (param)
  3215 ;;_EXIDE	offset=-4 (param)
  3216 ;;_a	offset	0
  3217 ;;_spiTransferError	offset	2
  3218 ;;_fCtrl	offset	3
  3219 ;;_filter	offset=-1 (param)
  3220 ;;_txqConfig	offset	0
  3221 ;;_config	offset	4
  3222 ;;_rxfConfig	offset	7
  3223 ;;_txfConfig	offset	10
  3224 ;;_tefConfig	offset	12
  3225 ;;_bitTime	offset=-1 (param)
  3226 ;;_withISR	offset=-2 (param)
  3227 ;;_ciFifoCon	offset	0
  3228 ;;_config	offset=-2 (param)
  3229 ;;_ciFifoCon	offset	0
  3230 ;;_config	offset=-2 (param)
  3231 ;;_ciFifoCon	offset	0
  3232 ;;_config	offset=-2 (param)
  3233 ;;_ciFifoCon	offset	0
  3234 ;;_a	offset	5
  3235 ;;_channel	offset=-1 (param)
  3236 ;;_config	offset=-3 (param)
  3237 ;;_ts	offset=-4 (param)
  3238 ;;_ps	offset=-2 (param)
  3239 ;;_d	offset	0
  3240 ;;_spiTransferError	offset	1
  3241 ;;_ciTefCon	offset	0
  3242 ;;_config	offset=-2 (param)
  3243 ;;_spi2UniqueConfiguration	offset=-1 (param)
  3244 ;;_ciFifoCon	offset	0
  3245 ;;_a	offset	5
  3246 ;;_channel	offset=-1 (param)
  3247 ;;_config	offset=-3 (param)
  3248 ;;_d	offset	0
  3249 ;;_spiTransferError	offset	1
  3250 ;;_opMode	offset=-1 (param)
  3251 ;;_spiTransferError	offset	0
  3252 ;;_address	offset=-2 (param)
  3253 ;;_txd	offset=-3 (param)
  3254 ;;_spiTransferError	offset	0
  3255 ;;_address	offset=-2 (param)
  3256 ;;_rxd	offset=-4 (param)
  3257 ;;_intEnables	offset	0
  3258 ;;_index	offset=-1 (param)
  3259 ;;_flags	offset=-3 (param)
  3260 ;;_spiTransferSize	offset	0
  3261 ;;_i	offset	2
  3262 ;;_spiTransferError	offset	3
  3263 ;;_address	offset=-2 (param)
  3264 ;;_txd	offset=-4 (param)
  3265 ;;_ciCon	offset	0
  3266 ;;_config	offset=-2 (param)
  3267 ;;_ciCon	offset	0
  3268 ;;_config	offset=-2 (param)
  3269 ;;_ciNbtcfg	offset	0
  3270 ;;_bitTime	offset=-1 (param)
  3271 ;;_spiTransferSize	offset	0
  3272 ;;_i	offset	2
  3273 ;;_spiTransferError	offset	3
  3274 ;;_address	offset=-2 (param)
  3275 ;;_txd	offset=-6 (param)
  3276 ;;_dummy	offset	0
  3277 ;;_txPtr	offset=-2 (param)
  3278 ;;_rxPtr	offset=-4 (param)
  3279 ;;_size	offset=-6 (param)
  3280 ;;_dummy	offset	0
  3281 ;;_i	offset	1
  3282 ;;_id	offset=-1 (param)
  3283 ;;_inISR	offset=-2 (param)
  3284 ;;_me	offset=-2 (param)
  3285 ;;_tm	offset	0
  3286 ;;_temp	offset	2
  3287 ;;_ev	offset=-6 (param)
  3288 ;;_inISR	offset=-7 (param)
  3289 ;;_tmid	offset=-9 (param)
  3290 ;;_sign	offset	0
  3291 ;;_counter	offset	1
  3292 ;;_dividend	offset=-2 (param)
  3293 ;;_divisor	offset=-4 (param)
  3294 ;;_i	offset	0
  3295 ;;_tm	offset=-2 (param)
  3296 ;;_ev	offset=-8 (param)
  3297 ;;_inISR	offset=-9 (param)
  3298 ;;_inISR	offset=-1 (param)
  3299 ;;_inISR	offset=-1 (param)
  3300 ;;_me	offset=-2 (param)
  3301 ;;_delay	offset=-4 (param)
  3302 ;;_me	offset=-2 (param)
  3303                           
  3304                           	psect	mediumconst
  3305   00FF8C                     __pmediumconst:
  3306                           	callstack 0
  3307   00FF8C  00                 	db	0
  3308   00FF8D                     _canControlResetValues:
  3309                           	callstack 0
  3310   00FF8D  0760               	dw	1888
  3311   00FF8F  0498               	dw	1176
  3312   00FF91  0F0F               	dw	3855
  3313   00FF93  003E               	dw	62
  3314   00FF95  0303               	dw	771
  3315   00FF97  000E               	dw	14
  3316   00FF99  1000               	dw	4096
  3317   00FF9B  0002               	dw	2
  3318   00FF9D  0000               	dw	0
  3319   00FF9F  0000               	dw	0
  3320   00FFA1  0000               	dw	0
  3321   00FFA3  0000               	dw	0
  3322   00FFA5  0040               	dw	64
  3323   00FFA7  4040               	dw	16448
  3324   00FFA9  0000               	dw	0
  3325   00FFAB  0000               	dw	0
  3326   00FFAD  0000               	dw	0
  3327   00FFAF  0000               	dw	0
  3328   00FFB1  0000               	dw	0
  3329   00FFB3  0000               	dw	0
  3330   00FFB5  0000               	dw	0
  3331   00FFB7  0000               	dw	0
  3332   00FFB9  0000               	dw	0
  3333   00FFBB  0000               	dw	0
  3334   00FFBD  0000               	dw	0
  3335   00FFBF  0000               	dw	0
  3336   00FFC1  0000               	dw	0
  3337   00FFC3  0020               	dw	32
  3338   00FFC5  0000               	dw	0
  3339   00FFC7  0000               	dw	0
  3340   00FFC9  0000               	dw	0
  3341   00FFCB  0000               	dw	0
  3342   00FFCD  0400               	dw	1024
  3343   00FFCF  0000               	dw	0
  3344   00FFD1  0000               	dw	0
  3345   00FFD3  0000               	dw	0
  3346   00FFD5  0000               	dw	0
  3347   00FFD7  0000               	dw	0
  3348   00FFD9  0000               	dw	0
  3349   00FFDB  0000               	dw	0
  3350   00FFDD                     __end_of_canControlResetValues:
  3351                           	callstack 0
  3352   00FFDD                     _canFifoResetValues:
  3353                           	callstack 0
  3354   00FFDD  0400               	dw	1024
  3355   00FFDF  0060               	dw	96
  3356   00FFE1  0000               	dw	0
  3357   00FFE3  0000               	dw	0
  3358   00FFE5  0000               	dw	0
  3359   00FFE7  0000               	dw	0
  3360   00FFE9                     __end_of_canFifoResetValues:
  3361                           	callstack 0
  3362   00FFE9                     _spi2_configuration:
  3363                           	callstack 0
  3364   00FFE9  01                 	db	1
  3365   00FFEA  40                 	db	64
  3366   00FFEB  00                 	db	0
  3367   00FFEC  00                 	db	0
  3368   00FFED                     __end_of_spi2_configuration:
  3369                           	callstack 0
  3370   00FFED                     STR_1:
  3371   00FFED  20                 	db	32
  3372   00FFEE  20                 	db	32
  3373   00FFEF  20                 	db	32
  3374   00FFF0  20                 	db	32
  3375   00FFF1  20                 	db	32
  3376   00FFF2  20                 	db	32
  3377   00FFF3  20                 	db	32
  3378   00FFF4  20                 	db	32
  3379   00FFF5  20                 	db	32
  3380   00FFF6  20                 	db	32
  3381   00FFF7  20                 	db	32
  3382   00FFF8  20                 	db	32
  3383   00FFF9  20                 	db	32
  3384   00FFFA  20                 	db	32
  3385   00FFFB  20                 	db	32
  3386   00FFFC  20                 	db	32
  3387   00FFFD  00                 	db	0
  3388   00FFED                     STR_2           equ	STR_1
  3389   00FFFE  00                 	db	0	; dummy byte at the end
  3390   000003                     __activetblptr  equ	3
  3391                           
  3392                           	psect	nvCOMRAM
  3393   000051                     __pnvCOMRAM:
  3394                           	callstack 0
  3395   000051                     _TMR0_InterruptHandler:
  3396                           	callstack 0
  3397   000051                     	ds	3
  3398   000F62                     _SSP2CON2       set	3938
  3399   000F63                     _SSP2CON1bits   set	3939
  3400   000F65                     _SSP2ADD        set	3941
  3401   000F63                     _SSP2CON1       set	3939
  3402   000F64                     _SSP2STAT       set	3940
  3403   000FD5                     _T0CON          set	4053
  3404   000FD6                     _TMR0L          set	4054
  3405   000FD7                     _TMR0H          set	4055
  3406   000FD5                     _T0CONbits      set	4053
  3407   000FF2                     _INTCONbits     set	4082
  3408   000FD0                     _RCONbits       set	4048
  3409   000FC1                     _ADCON1bits     set	4033
  3410   000F95                     _TRISD          set	3989
  3411   000F94                     _TRISC          set	3988
  3412   000F99                     _TRISH          set	3993
  3413   000F93                     _TRISB          set	3987
  3414   000F98                     _TRISG          set	3992
  3415   000F92                     _TRISA          set	3986
  3416   000F97                     _TRISF          set	3991
  3417   000F96                     _TRISE          set	3990
  3418   000F90                     _LATH           set	3984
  3419   000F8B                     _LATC           set	3979
  3420   000F8F                     _LATG           set	3983
  3421   000F8A                     _LATB           set	3978
  3422   000F8E                     _LATF           set	3982
  3423   000F89                     _LATA           set	3977
  3424   000F8C                     _LATD           set	3980
  3425   000F91                     _LATJ           set	3985
  3426   000F8D                     _LATE           set	3981
  3427   000F9B                     _OSCTUNE        set	3995
  3428   000FD3                     _OSCCON         set	4051
  3429   000F9A                     _TRISJ          set	3994
  3430   000F95                     _TRISDbits      set	3989
  3431   000F98                     _TRISGbits      set	3992
  3432   000F66                     _SSP2BUF        set	3942
  3433   000F64                     _SSP2STATbits   set	3940
  3434   000F8F                     _LATGbits       set	3983
  3435                           
  3436                           ; #config settings
  3437                           
  3438                           	psect	cinit
  3439   0146E6                     __pcinit:
  3440                           	callstack 0
  3441   0146E6                     start_initialization:
  3442                           	callstack 0
  3443   0146E6                     __initialization:
  3444                           	callstack 0
  3445                           
  3446                           ; Clear objects allocated to BIGRAM (282 bytes)
  3447   0146E6  EE02  F0C8         	lfsr	0,__pbssBIGRAM
  3448   0146EA  EE21 F01A          	lfsr	2,282
  3449   0146EE                     clear_0:
  3450   0146EE  6AEE               	clrf	postinc0,c
  3451   0146F0  50DD               	movf	postdec2,w,c
  3452   0146F2  50D9               	movf	fsr2l,w,c
  3453   0146F4  E1FC               	bnz	clear_0
  3454   0146F6  50DA               	movf	fsr2h,w,c
  3455   0146F8  E1FA               	bnz	clear_0
  3456                           
  3457                           ; Clear objects allocated to BANK2 (200 bytes)
  3458   0146FA  EE02  F000         	lfsr	0,__pbssBANK2
  3459   0146FE  0EC8               	movlw	200
  3460   014700                     clear_1:
  3461   014700  6AEE               	clrf	postinc0,c
  3462   014702  06E8               	decf	wreg,f,c
  3463   014704  E1FD               	bnz	clear_1
  3464                           
  3465                           ; Clear objects allocated to BANK1 (200 bytes)
  3466   014706  EE01  F000         	lfsr	0,__pbssBANK1
  3467   01470A  0EC8               	movlw	200
  3468   01470C                     clear_2:
  3469   01470C  6AEE               	clrf	postinc0,c
  3470   01470E  06E8               	decf	wreg,f,c
  3471   014710  E1FD               	bnz	clear_2
  3472                           
  3473                           ; Clear objects allocated to BANK0 (59 bytes)
  3474   014712  EE00  F060         	lfsr	0,__pbssBANK0
  3475   014716  0E3B               	movlw	59
  3476   014718                     clear_3:
  3477   014718  6AEE               	clrf	postinc0,c
  3478   01471A  06E8               	decf	wreg,f,c
  3479   01471C  E1FD               	bnz	clear_3
  3480                           
  3481                           ; Clear objects allocated to COMRAM (32 bytes)
  3482   01471E  EE00  F001         	lfsr	0,__pbssCOMRAM
  3483   014722  0E20               	movlw	32
  3484   014724                     clear_4:
  3485   014724  6AEE               	clrf	postinc0,c
  3486   014726  06E8               	decf	wreg,f,c
  3487   014728  E1FD               	bnz	clear_4
  3488   01472A                     end_of_initialization:
  3489                           	callstack 0
  3490   01472A                     __end_of__initialization:
  3491                           	callstack 0
  3492   01472A  0100               	movlb	0
  3493   01472C  EF1E  F099         	goto	_main	;jump to C main() function
  3494                           
  3495                           	psect	bssCOMRAM
  3496   000001                     __pbssCOMRAM:
  3497                           	callstack 0
  3498   000001                     motorControl@F6658:
  3499                           	callstack 0
  3500   000001                     	ds	16
  3501   000011                     _dummy:
  3502                           	callstack 0
  3503   000011                     	ds	4
  3504   000015                     TMR0_ISR@CountCallBack:
  3505                           	callstack 0
  3506   000015                     	ds	2
  3507   000017                     _timer0ReloadVal:
  3508                           	callstack 0
  3509   000017                     	ds	2
  3510   000019                     lightControl_Process@oldState:
  3511                           	callstack 0
  3512   000019                     	ds	1
  3513   00001A                     lightControl_Process@state:
  3514                           	callstack 0
  3515   00001A                     	ds	1
  3516   00001B                     motorControl_Process@oldState:
  3517                           	callstack 0
  3518   00001B                     	ds	1
  3519   00001C                     motorControl_Process@state:
  3520                           	callstack 0
  3521   00001C                     	ds	1
  3522   00001D                     lightContol_BackLight@lastLight:
  3523                           	callstack 0
  3524   00001D                     	ds	1
  3525   00001E                     lightContol_FrontLight@lastLight:
  3526                           	callstack 0
  3527   00001E                     	ds	1
  3528   00001F                     motorControl@lastStarter:
  3529                           	callstack 0
  3530   00001F                     	ds	1
  3531   000020                     motorControl@lastPercent:
  3532                           	callstack 0
  3533   000020                     	ds	1
  3534                           
  3535                           	psect	bssBANK0
  3536   000060                     __pbssBANK0:
  3537                           	callstack 0
  3538   000060                     _carState:
  3539                           	callstack 0
  3540   000060                     	ds	27
  3541   00007B                     lightContol_BackLight@F6670:
  3542                           	callstack 0
  3543   00007B                     	ds	16
  3544   00008B                     lightContol_FrontLight@F6664:
  3545                           	callstack 0
  3546   00008B                     	ds	16
  3547                           
  3548                           	psect	bssBANK1
  3549   000100                     __pbssBANK1:
  3550                           	callstack 0
  3551   000100                     _spiTransmitBuffer:
  3552                           	callstack 0
  3553   000100                     	ds	200
  3554                           
  3555                           	psect	bssBANK2
  3556   000200                     __pbssBANK2:
  3557                           	callstack 0
  3558   000200                     _spiReceiveBuffer:
  3559                           	callstack 0
  3560   000200                     	ds	200
  3561                           
  3562                           	psect	bssBIGRAM
  3563   0002C8                     __pbssBIGRAM:
  3564                           	callstack 0
  3565   0002C8                     _theXF:
  3566                           	callstack 0
  3567   0002C8                     	ds	282
  3568                           
  3569                           	psect	cstackCOMRAM
  3570   000041                     __pcstackCOMRAM:
  3571                           	callstack 0
  3572   000041                     ??_INTERRUPT_InterruptManager:
  3573                           
  3574                           ; 1 bytes @ 0x0
  3575   000041                     	ds	16
  3576                           
  3577 ;;
  3578 ;;Main: autosize = 12, tempsize = 0, incstack = 0, save=0
  3579 ;;
  3580 ;; *************** function _main *****************
  3581 ;; Defined at:
  3582 ;;		line 56 in file "main.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;  filterObj       6  [STACK] struct _CAN_FILTEROBJ_ID
  3587 ;;  maskObj         6  [STACK] struct _CAN_MASKOBJ_ID
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  1  [STACK] void 
  3590 ;; Registers used:
  3591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl,
      + prodh
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;Total ram usage:        0 bytes
  3602 ;; Hardware stack levels required when called: 15
  3603 ;; This function calls:
  3604 ;;		_CanInit
  3605 ;;		_CanSetFilter
  3606 ;;		_SYSTEM_Initialize
  3607 ;;		_TMR0_SetInterruptHandler
  3608 ;;		_XF_executeOnce
  3609 ;;		_XF_init
  3610 ;;		_XF_post
  3611 ;;		_updateCarState
  3612 ;; This function is called by:
  3613 ;;		Startup code after reset
  3614 ;; This function uses a reentrant model
  3615 ;;
  3616                           
  3617                           	psect	text0
  3618   01323C                     __ptext0:
  3619                           	callstack 0
  3620   01323C                     _main:
  3621                           	callstack 0
  3622                           
  3623                           ; autosize = 12, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3624   01323C  0E0C               	movlw	12
  3625   01323E  26E1               	addwf	fsr1l,f,c
  3626   013240  0E00               	movlw	0
  3627   013242  22E2               	addwfc	fsr1h,f,c
  3628   013244                     
  3629                           ;main.c: 58:     CAN_FILTEROBJ_ID filterObj;;main.c: 59:     CAN_MASKOBJ_ID maskObj;;mai
      +                          n.c: 62:     filterObj.ID = 1;
  3630   013244  0E01               	movlw	1
  3631   013246  6E29               	movwf	(btemp+8)^0,c
  3632   013248  6A2A               	clrf	(btemp+9)^0,c
  3633   01324A  6A2B               	clrf	(btemp+10)^0,c
  3634   01324C  6A2C               	clrf	(btemp+11)^0,c
  3635                           
  3636                           ;stkvar	_filterObj @ sp[(-12)+0]
  3637   01324E  0EF4               	movlw	-12
  3638   013250  C029  FFE3         	movff	btemp+8,plusw1
  3639   013254  0EF5               	movlw	-11
  3640   013256  C02A  FFE3         	movff	btemp+9,plusw1
  3641   01325A  0EF6               	movlw	-10
  3642   01325C  C02B  FFE3         	movff	btemp+10,plusw1
  3643   013260  0EF7               	movlw	-9
  3644   013262  C02C  FFE3         	movff	btemp+11,plusw1
  3645   013266                     
  3646                           ;main.c: 63:     filterObj.SID11 = 0;
  3647                           ;stkvar	_filterObj @ sp[(-12)+0]
  3648   013266  0EF8               	movlw	248
  3649   013268  24E1               	addwf	fsr1l,w,c
  3650   01326A  6ED9               	movwf	fsr2l,c
  3651   01326C  0EFF               	movlw	255
  3652   01326E  20E2               	addwfc	fsr1h,w,c
  3653   013270  6EDA               	movwf	fsr2h,c
  3654   013272  6ADF               	clrf	indf2,c
  3655   013274                     
  3656                           ;main.c: 64:     filterObj.EXIDE = 0;
  3657                           ;stkvar	_filterObj @ sp[(-12)+0]
  3658   013274  0EF9               	movlw	249
  3659   013276  24E1               	addwf	fsr1l,w,c
  3660   013278  6ED9               	movwf	fsr2l,c
  3661   01327A  0EFF               	movlw	255
  3662   01327C  20E2               	addwfc	fsr1h,w,c
  3663   01327E  6EDA               	movwf	fsr2h,c
  3664   013280  6ADF               	clrf	indf2,c
  3665                           
  3666                           ;main.c: 66:     maskObj.MID = 0x00F;
  3667   013282  0E0F               	movlw	15
  3668   013284  6E29               	movwf	(btemp+8)^0,c
  3669   013286  6A2A               	clrf	(btemp+9)^0,c
  3670   013288  6A2B               	clrf	(btemp+10)^0,c
  3671   01328A  6A2C               	clrf	(btemp+11)^0,c
  3672                           
  3673                           ;stkvar	_maskObj @ sp[(-12)+6]
  3674   01328C  0EFA               	movlw	-6
  3675   01328E  C029  FFE3         	movff	btemp+8,plusw1
  3676   013292  0EFB               	movlw	-5
  3677   013294  C02A  FFE3         	movff	btemp+9,plusw1
  3678   013298  0EFC               	movlw	-4
  3679   01329A  C02B  FFE3         	movff	btemp+10,plusw1
  3680   01329E  0EFD               	movlw	-3
  3681   0132A0  C02C  FFE3         	movff	btemp+11,plusw1
  3682   0132A4                     
  3683                           ;main.c: 67:     maskObj.MIDE = 1;
  3684                           ;stkvar	_maskObj @ sp[(-12)+6]
  3685   0132A4  0EFF               	movlw	255
  3686   0132A6  24E1               	addwf	fsr1l,w,c
  3687   0132A8  6ED9               	movwf	fsr2l,c
  3688   0132AA  0EFF               	movlw	255
  3689   0132AC  20E2               	addwfc	fsr1h,w,c
  3690   0132AE  6EDA               	movwf	fsr2h,c
  3691   0132B0  0E01               	movlw	1
  3692   0132B2  6EDF               	movwf	indf2,c
  3693   0132B4                     
  3694                           ;main.c: 68:     maskObj.MSID11 = 0;
  3695                           ;stkvar	_maskObj @ sp[(-12)+6]
  3696   0132B4  0EFE               	movlw	254
  3697   0132B6  24E1               	addwf	fsr1l,w,c
  3698   0132B8  6ED9               	movwf	fsr2l,c
  3699   0132BA  0EFF               	movlw	255
  3700   0132BC  20E2               	addwfc	fsr1h,w,c
  3701   0132BE  6EDA               	movwf	fsr2h,c
  3702   0132C0  6ADF               	clrf	indf2,c
  3703   0132C2                     
  3704                           ;main.c: 69:     SYSTEM_Initialize();
  3705   0132C2  ECBA  F0A4         	call	_SYSTEM_Initialize	;wreg free
  3706   0132C6                     
  3707                           ;main.c: 72:     CanInit(CAN_250K_500K, 0);
  3708   0132C6  0E00               	movlw	0
  3709   0132C8  6EE6               	movwf	postinc1,c
  3710   0132CA  0E08               	movlw	8
  3711   0132CC  6EE6               	movwf	postinc1,c
  3712   0132CE  EC53  F090         	call	_CanInit	;wreg free
  3713   0132D2                     
  3714                           ;main.c: 73:     CanSetFilter(CAN_FILTER0, &filterObj, &maskObj);
  3715                           ;stkvar	_maskObj @ sp[(-12)+6]
  3716   0132D2  0EFA               	movlw	250
  3717   0132D4  24E1               	addwf	fsr1l,w,c
  3718   0132D6  6E21               	movwf	btemp^0,c
  3719   0132D8  0EFF               	movlw	255
  3720   0132DA  20E2               	addwfc	fsr1h,w,c
  3721   0132DC  6E22               	movwf	(btemp+1)^0,c
  3722   0132DE  C021  FFE6         	movff	btemp,postinc1
  3723   0132E2  C022  FFE6         	movff	btemp+1,postinc1
  3724                           
  3725                           ;stkvar	_filterObj @ sp[(-14)+0]
  3726   0132E6  0EF2               	movlw	242
  3727   0132E8  24E1               	addwf	fsr1l,w,c
  3728   0132EA  6E21               	movwf	btemp^0,c
  3729   0132EC  0EFF               	movlw	255
  3730   0132EE  20E2               	addwfc	fsr1h,w,c
  3731   0132F0  6E22               	movwf	(btemp+1)^0,c
  3732   0132F2  C021  FFE6         	movff	btemp,postinc1
  3733   0132F6  C022  FFE6         	movff	btemp+1,postinc1
  3734   0132FA  0E00               	movlw	0
  3735   0132FC  6EE6               	movwf	postinc1,c
  3736   0132FE  ECFB  F0A1         	call	_CanSetFilter	;wreg free
  3737   013302                     
  3738                           ;main.c: 75:     XF_init();
  3739   013302  EC64  F095         	call	_XF_init	;wreg free
  3740   013306                     
  3741                           ;main.c: 77:     TMR0_SetInterruptHandler(XF_decrementAndQueueTimers);
  3742   013306  0E46               	movlw	low _XF_decrementAndQueueTimers
  3743   013308  6EE6               	movwf	postinc1,c
  3744   01330A  0E33               	movlw	high _XF_decrementAndQueueTimers
  3745   01330C  6EE6               	movwf	postinc1,c
  3746   01330E  0E01               	movlw	low (_XF_decrementAndQueueTimers shr (0+16))
  3747   013310  6EE6               	movwf	postinc1,c
  3748   013312  EC76  F0A4         	call	_TMR0_SetInterruptHandler	;wreg free
  3749   013316                     
  3750                           ;main.c: 85:     (INTCONbits.GIE = 1);
  3751   013316  8EF2               	bsf	242,7,c	;volatile
  3752   013318                     
  3753                           ;main.c: 91:     (INTCONbits.PEIE = 1);
  3754   013318  8CF2               	bsf	242,6,c	;volatile
  3755   01331A                     
  3756                           ;main.c: 95:     XF_post(lightControl_Process,E_INIT,0);
  3757   01331A  0E00               	movlw	0
  3758   01331C  6EE6               	movwf	postinc1,c
  3759   01331E  0E00               	movlw	0
  3760   013320  6EE6               	movwf	postinc1,c
  3761   013322  0E01               	movlw	1
  3762   013324  6EE6               	movwf	postinc1,c
  3763   013326  0E92               	movlw	low _lightControl_Process
  3764   013328  6EE6               	movwf	postinc1,c
  3765   01332A  0E24               	movlw	high _lightControl_Process
  3766   01332C  6EE6               	movwf	postinc1,c
  3767   01332E  0E01               	movlw	low (_lightControl_Process shr (0+16))
  3768   013330  6EE6               	movwf	postinc1,c
  3769   013332  EC5D  F09C         	call	_XF_post	;wreg free
  3770   013336                     l5362:
  3771                           
  3772                           ;main.c: 97:     {;main.c: 98:         updateCarState();
  3773   013336  EC32  F08F         	call	_updateCarState	;wreg free
  3774   01333A                     
  3775                           ;main.c: 99:         XF_executeOnce();
  3776   01333A  EC36  F0A1         	call	_XF_executeOnce	;wreg free
  3777   01333E  EF9B  F099         	goto	l5362
  3778   013342  EF57  F000         	goto	start
  3779   013346                     __end_of_main:
  3780                           	callstack 0
  3781                           
  3782 ;; *************** function _updateCarState *****************
  3783 ;; Defined at:
  3784 ;;		line 204 in file "carFunctions.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;		None
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;  rxObj          16  [STACK] struct _CAN_RX_MSGOBJ
  3789 ;;  rxdata          8  [STACK] unsigned char [8]
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1  [STACK] void 
  3792 ;; Registers used:
  3793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3803 ;;Total ram usage:        0 bytes
  3804 ;; Hardware stack levels used: 1
  3805 ;; Hardware stack levels required when called: 12
  3806 ;; This function calls:
  3807 ;;		_CanReceive
  3808 ;;		_XF_post
  3809 ;; This function is called by:
  3810 ;;		_main
  3811 ;; This function uses a reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text1
  3815   011E64                     __ptext1:
  3816                           	callstack 0
  3817   011E64                     _updateCarState:
  3818                           	callstack 0
  3819                           
  3820                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3821   011E64  0E18               	movlw	24
  3822   011E66  26E1               	addwf	fsr1l,f,c
  3823   011E68  0E00               	movlw	0
  3824   011E6A  22E2               	addwfc	fsr1h,f,c
  3825   011E6C                     
  3826                           ;carFunctions.c: 207:      CAN_RX_MSGOBJ rxObj;;carFunctions.c: 208:      uint8_t rxdata
      +                          [8];;carFunctions.c: 210:      if (CanReceive(&rxObj, rxdata) == 0)
  3827                           ;stkvar	_rxdata @ sp[(-24)+16]
  3828   011E6C  0EF8               	movlw	248
  3829   011E6E  24E1               	addwf	fsr1l,w,c
  3830   011E70  6E21               	movwf	btemp^0,c
  3831   011E72  0EFF               	movlw	255
  3832   011E74  20E2               	addwfc	fsr1h,w,c
  3833   011E76  6E22               	movwf	(btemp+1)^0,c
  3834   011E78  C021  FFE6         	movff	btemp,postinc1
  3835   011E7C  C022  FFE6         	movff	btemp+1,postinc1
  3836                           
  3837                           ;stkvar	_rxObj @ sp[(-26)+0]
  3838   011E80  0EE6               	movlw	230
  3839   011E82  24E1               	addwf	fsr1l,w,c
  3840   011E84  6E21               	movwf	btemp^0,c
  3841   011E86  0EFF               	movlw	255
  3842   011E88  20E2               	addwfc	fsr1h,w,c
  3843   011E8A  6E22               	movwf	(btemp+1)^0,c
  3844   011E8C  C021  FFE6         	movff	btemp,postinc1
  3845   011E90  C022  FFE6         	movff	btemp+1,postinc1
  3846   011E94  EC30  F0A2         	call	_CanReceive	;wreg free
  3847   011E98  5021               	movf	btemp^0,w,c
  3848   011E9A  A4D8               	btfss	status,2,c
  3849   011E9C  EF52  F08F         	goto	u2971
  3850   011EA0  EF54  F08F         	goto	u2970
  3851   011EA4                     u2971:
  3852   011EA4  EF4E  F090         	goto	l1509
  3853   011EA8                     u2970:
  3854   011EA8  EF10  F090         	goto	l5312
  3855   011EAC                     l5282:
  3856                           
  3857                           ;carFunctions.c: 216:                  carState.contactKey = rxdata[0];
  3858                           ;stkvar	_rxdata @ sp[(-24)+16]
  3859   011EAC  0EF8               	movlw	-8
  3860   011EAE  CFE3 F06E          	movff	plusw1,_carState+14
  3861   011EB2                     
  3862                           ;carFunctions.c: 218:                  if (rxdata[0] == 0)
  3863                           ;stkvar	_rxdata @ sp[(-24)+16]
  3864   011EB2  0EF8               	movlw	-8
  3865   011EB4  50E3               	movf	plusw1,w,c
  3866   011EB6  A4D8               	btfss	status,2,c
  3867   011EB8  EF60  F08F         	goto	u2981
  3868   011EBC  EF62  F08F         	goto	u2980
  3869   011EC0                     u2981:
  3870   011EC0  EF80  F08F         	goto	l5288
  3871   011EC4                     u2980:
  3872   011EC4                     
  3873                           ;carFunctions.c: 219:                  {;carFunctions.c: 220:                      XF_po
      +                          st(lightControl_Process, E_CONTACT_OFF, 0);
  3874   011EC4  0E00               	movlw	0
  3875   011EC6  6EE6               	movwf	postinc1,c
  3876   011EC8  0E00               	movlw	0
  3877   011ECA  6EE6               	movwf	postinc1,c
  3878   011ECC  0E02               	movlw	2
  3879   011ECE  6EE6               	movwf	postinc1,c
  3880   011ED0  0E92               	movlw	low _lightControl_Process
  3881   011ED2  6EE6               	movwf	postinc1,c
  3882   011ED4  0E24               	movlw	high _lightControl_Process
  3883   011ED6  6EE6               	movwf	postinc1,c
  3884   011ED8  0E01               	movlw	low (_lightControl_Process shr (0+16))
  3885   011EDA  6EE6               	movwf	postinc1,c
  3886   011EDC  EC5D  F09C         	call	_XF_post	;wreg free
  3887                           
  3888                           ;carFunctions.c: 221:                      XF_post(motorControl_Process, E_CONTACT_OFF, 
      +                          0);
  3889   011EE0  0E00               	movlw	0
  3890   011EE2  6EE6               	movwf	postinc1,c
  3891   011EE4  0E00               	movlw	0
  3892   011EE6  6EE6               	movwf	postinc1,c
  3893   011EE8  0E02               	movlw	2
  3894   011EEA  6EE6               	movwf	postinc1,c
  3895   011EEC  0E1C               	movlw	low _motorControl_Process
  3896   011EEE  6EE6               	movwf	postinc1,c
  3897   011EF0  0E36               	movlw	high _motorControl_Process
  3898   011EF2  6EE6               	movwf	postinc1,c
  3899   011EF4  0E01               	movlw	low (_motorControl_Process shr (0+16))
  3900   011EF6  6EE6               	movwf	postinc1,c
  3901   011EF8  EC5D  F09C         	call	_XF_post	;wreg free
  3902                           
  3903                           ;carFunctions.c: 222:                  }
  3904   011EFC  EF4E  F090         	goto	l1509
  3905   011F00                     l5288:
  3906                           
  3907                           ;carFunctions.c: 224:                  {;carFunctions.c: 225:                      XF_po
      +                          st(lightControl_Process, E_CONTACT_ON, 0);
  3908   011F00  0E00               	movlw	0
  3909   011F02  6EE6               	movwf	postinc1,c
  3910   011F04  0E00               	movlw	0
  3911   011F06  6EE6               	movwf	postinc1,c
  3912   011F08  0E03               	movlw	3
  3913   011F0A  6EE6               	movwf	postinc1,c
  3914   011F0C  0E92               	movlw	low _lightControl_Process
  3915   011F0E  6EE6               	movwf	postinc1,c
  3916   011F10  0E24               	movlw	high _lightControl_Process
  3917   011F12  6EE6               	movwf	postinc1,c
  3918   011F14  0E01               	movlw	low (_lightControl_Process shr (0+16))
  3919   011F16  6EE6               	movwf	postinc1,c
  3920   011F18  EC5D  F09C         	call	_XF_post	;wreg free
  3921                           
  3922                           ;carFunctions.c: 226:                      XF_post(motorControl_Process, E_CONTACT_ON, 0
      +                          );
  3923   011F1C  0E00               	movlw	0
  3924   011F1E  6EE6               	movwf	postinc1,c
  3925   011F20  0E00               	movlw	0
  3926   011F22  6EE6               	movwf	postinc1,c
  3927   011F24  0E03               	movlw	3
  3928   011F26  6EE6               	movwf	postinc1,c
  3929   011F28  0E1C               	movlw	low _motorControl_Process
  3930   011F2A  6EE6               	movwf	postinc1,c
  3931   011F2C  0E36               	movlw	high _motorControl_Process
  3932   011F2E  6EE6               	movwf	postinc1,c
  3933   011F30  0E01               	movlw	low (_motorControl_Process shr (0+16))
  3934   011F32  6EE6               	movwf	postinc1,c
  3935   011F34  EC5D  F09C         	call	_XF_post	;wreg free
  3936   011F38  EF4E  F090         	goto	l1509
  3937   011F3C                     l5290:
  3938                           
  3939                           ;carFunctions.c: 233:                  carState.brakePedal = rxdata[0];
  3940                           ;stkvar	_rxdata @ sp[(-24)+16]
  3941   011F3C  0EF8               	movlw	-8
  3942   011F3E  CFE3 F06C          	movff	plusw1,_carState+12
  3943   011F42                     
  3944                           ;carFunctions.c: 235:                  if (rxdata[0] > 6)
  3945                           ;stkvar	_rxdata @ sp[(-24)+16]
  3946   011F42  0EF8               	movlw	-8
  3947   011F44  CFE3 F021          	movff	plusw1,btemp
  3948   011F48  0E06               	movlw	6
  3949   011F4A  6421               	cpfsgt	btemp^0,c
  3950   011F4C  EFAA  F08F         	goto	u2991
  3951   011F50  EFAC  F08F         	goto	u2990
  3952   011F54                     u2991:
  3953   011F54  EFBC  F08F         	goto	l5296
  3954   011F58                     u2990:
  3955   011F58                     
  3956                           ;carFunctions.c: 236:                  {;carFunctions.c: 237:                      XF_po
      +                          st(lightControl_Process, E_HIGH_BRAKE, 0);
  3957   011F58  0E00               	movlw	0
  3958   011F5A  6EE6               	movwf	postinc1,c
  3959   011F5C  0E00               	movlw	0
  3960   011F5E  6EE6               	movwf	postinc1,c
  3961   011F60  0E04               	movlw	4
  3962   011F62  6EE6               	movwf	postinc1,c
  3963   011F64  0E92               	movlw	low _lightControl_Process
  3964   011F66  6EE6               	movwf	postinc1,c
  3965   011F68  0E24               	movlw	high _lightControl_Process
  3966   011F6A  6EE6               	movwf	postinc1,c
  3967   011F6C  0E01               	movlw	low (_lightControl_Process shr (0+16))
  3968   011F6E  6EE6               	movwf	postinc1,c
  3969   011F70  EC5D  F09C         	call	_XF_post	;wreg free
  3970                           
  3971                           ;carFunctions.c: 238:                  }else if (rxdata[0] < 6)
  3972   011F74  EF4E  F090         	goto	l1509
  3973   011F78                     l5296:
  3974                           
  3975                           ;stkvar	_rxdata @ sp[(-24)+16]
  3976   011F78  0EF8               	movlw	-8
  3977   011F7A  CFE3 F021          	movff	plusw1,btemp
  3978   011F7E  0E06               	movlw	6
  3979   011F80  6021               	cpfslt	btemp^0,c
  3980   011F82  EFC5  F08F         	goto	u3001
  3981   011F86  EFC7  F08F         	goto	u3000
  3982   011F8A                     u3001:
  3983   011F8A  EF4E  F090         	goto	l1499
  3984   011F8E                     u3000:
  3985   011F8E                     
  3986                           ;carFunctions.c: 239:                  {;carFunctions.c: 240:                      XF_po
      +                          st(lightControl_Process, E_HIGH_BRAKE_RELASED, 0);
  3987   011F8E  0E00               	movlw	0
  3988   011F90  6EE6               	movwf	postinc1,c
  3989   011F92  0E00               	movlw	0
  3990   011F94  6EE6               	movwf	postinc1,c
  3991   011F96  0E0A               	movlw	10
  3992   011F98  6EE6               	movwf	postinc1,c
  3993   011F9A  0E92               	movlw	low _lightControl_Process
  3994   011F9C  6EE6               	movwf	postinc1,c
  3995   011F9E  0E24               	movlw	high _lightControl_Process
  3996   011FA0  6EE6               	movwf	postinc1,c
  3997   011FA2  0E01               	movlw	low (_lightControl_Process shr (0+16))
  3998   011FA4  6EE6               	movwf	postinc1,c
  3999   011FA6  EC5D  F09C         	call	_XF_post	;wreg free
  4000   011FAA  EF4E  F090         	goto	l1509
  4001   011FAE                     l5300:
  4002                           
  4003                           ;carFunctions.c: 247:                  carState.accelPedal = rxdata[0];
  4004                           ;stkvar	_rxdata @ sp[(-24)+16]
  4005   011FAE  0EF8               	movlw	-8
  4006   011FB0  CFE3 F06D          	movff	plusw1,_carState+13
  4007   011FB4                     
  4008                           ;carFunctions.c: 248:                  if (rxdata[0] > 10)
  4009                           ;stkvar	_rxdata @ sp[(-24)+16]
  4010   011FB4  0EF8               	movlw	-8
  4011   011FB6  CFE3 F021          	movff	plusw1,btemp
  4012   011FBA  0E0A               	movlw	10
  4013   011FBC  6421               	cpfsgt	btemp^0,c
  4014   011FBE  EFE3  F08F         	goto	u3011
  4015   011FC2  EFE5  F08F         	goto	u3010
  4016   011FC6                     u3011:
  4017   011FC6  EFF5  F08F         	goto	l5306
  4018   011FCA                     u3010:
  4019   011FCA                     
  4020                           ;carFunctions.c: 249:                  {;carFunctions.c: 250:                      XF_po
      +                          st(motorControl_Process, E_ACCELERATION_ON, 0);
  4021   011FCA  0E00               	movlw	0
  4022   011FCC  6EE6               	movwf	postinc1,c
  4023   011FCE  0E00               	movlw	0
  4024   011FD0  6EE6               	movwf	postinc1,c
  4025   011FD2  0E08               	movlw	8
  4026   011FD4  6EE6               	movwf	postinc1,c
  4027   011FD6  0E1C               	movlw	low _motorControl_Process
  4028   011FD8  6EE6               	movwf	postinc1,c
  4029   011FDA  0E36               	movlw	high _motorControl_Process
  4030   011FDC  6EE6               	movwf	postinc1,c
  4031   011FDE  0E01               	movlw	low (_motorControl_Process shr (0+16))
  4032   011FE0  6EE6               	movwf	postinc1,c
  4033   011FE2  EC5D  F09C         	call	_XF_post	;wreg free
  4034                           
  4035                           ;carFunctions.c: 251:                  }else if (rxdata[0] < 10)
  4036   011FE6  EF4E  F090         	goto	l1509
  4037   011FEA                     l5306:
  4038                           
  4039                           ;stkvar	_rxdata @ sp[(-24)+16]
  4040   011FEA  0EF8               	movlw	-8
  4041   011FEC  CFE3 F021          	movff	plusw1,btemp
  4042   011FF0  0E0A               	movlw	10
  4043   011FF2  6021               	cpfslt	btemp^0,c
  4044   011FF4  EFFE  F08F         	goto	u3021
  4045   011FF8  EF00  F090         	goto	u3020
  4046   011FFC                     u3021:
  4047   011FFC  EF4E  F090         	goto	l1499
  4048   012000                     u3020:
  4049   012000                     
  4050                           ;carFunctions.c: 252:                  {;carFunctions.c: 253:                      XF_po
      +                          st(motorControl_Process, E_ACCELERATION_OFF, 0);
  4051   012000  0E00               	movlw	0
  4052   012002  6EE6               	movwf	postinc1,c
  4053   012004  0E00               	movlw	0
  4054   012006  6EE6               	movwf	postinc1,c
  4055   012008  0E09               	movlw	9
  4056   01200A  6EE6               	movwf	postinc1,c
  4057   01200C  0E1C               	movlw	low _motorControl_Process
  4058   01200E  6EE6               	movwf	postinc1,c
  4059   012010  0E36               	movlw	high _motorControl_Process
  4060   012012  6EE6               	movwf	postinc1,c
  4061   012014  0E01               	movlw	low (_motorControl_Process shr (0+16))
  4062   012016  6EE6               	movwf	postinc1,c
  4063   012018  EC5D  F09C         	call	_XF_post	;wreg free
  4064   01201C  EF4E  F090         	goto	l1509
  4065   012020                     l5312:
  4066                           
  4067                           ;stkvar	_rxObj @ sp[(-24)+0]
  4068   012020  50E1               	movf	fsr1l,w,c
  4069   012022  0FE8               	addlw	-24
  4070   012024  6ED9               	movwf	fsr2l,c
  4071   012026  50E2               	movf	fsr1h,w,c
  4072   012028  6EDA               	movwf	fsr2h,c
  4073   01202A  0EFF               	movlw	255
  4074   01202C  22DA               	addwfc	fsr2h,f,c
  4075   01202E  0EF0               	movlw	240
  4076   012030  14DE               	andwf	postinc2,w,c
  4077   012032  6E29               	movwf	(btemp+8)^0,c
  4078   012034  0E07               	movlw	7
  4079   012036  14DE               	andwf	postinc2,w,c
  4080   012038  6E2A               	movwf	(btemp+9)^0,c
  4081   01203A  0E00               	movlw	0
  4082   01203C  14DE               	andwf	postinc2,w,c
  4083   01203E  6E2B               	movwf	(btemp+10)^0,c
  4084   012040  0E00               	movlw	0
  4085   012042  14DE               	andwf	postinc2,w,c
  4086   012044  6E2C               	movwf	(btemp+11)^0,c
  4087                           
  4088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4089                           ; Switch size 1, requested type "simple"
  4090                           ; Number of cases is 1, Range of values is 0 to 0
  4091                           ; switch strategies available:
  4092                           ; Name         Instructions Cycles
  4093                           ; simple_byte            4     3 (average)
  4094                           ;	Chosen strategy is simple_byte
  4095   012046  502C               	movf	(btemp+11)^0,w,c
  4096   012048  0A00               	xorlw	0	; case 0
  4097   01204A  B4D8               	btfsc	status,2,c
  4098   01204C  EF47  F090         	goto	l5568
  4099   012050  EF4E  F090         	goto	l1509
  4100   012054                     l5566:
  4101                           
  4102                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4103                           ; Switch size 1, requested type "simple"
  4104                           ; Number of cases is 2, Range of values is 0 to 1
  4105                           ; switch strategies available:
  4106                           ; Name         Instructions Cycles
  4107                           ; simple_byte            7     4 (average)
  4108                           ;	Chosen strategy is simple_byte
  4109   012054  502A               	movf	(btemp+9)^0,w,c
  4110   012056  0A00               	xorlw	0	; case 0
  4111   012058  B4D8               	btfsc	status,2,c
  4112   01205A  EF35  F090         	goto	l5570
  4113   01205E  0A01               	xorlw	1	; case 1
  4114   012060  B4D8               	btfsc	status,2,c
  4115   012062  EF40  F090         	goto	l5572
  4116   012066  EF4E  F090         	goto	l1509
  4117   01206A                     l5570:
  4118                           
  4119                           ; Switch size 1, requested type "simple"
  4120                           ; Number of cases is 2, Range of values is 64 to 80
  4121                           ; switch strategies available:
  4122                           ; Name         Instructions Cycles
  4123                           ; simple_byte            7     4 (average)
  4124                           ;	Chosen strategy is simple_byte
  4125   01206A  5029               	movf	(btemp+8)^0,w,c
  4126   01206C  0A40               	xorlw	64	; case 64
  4127   01206E  B4D8               	btfsc	status,2,c
  4128   012070  EF9E  F08F         	goto	l5290
  4129   012074  0A10               	xorlw	16	; case 80
  4130   012076  B4D8               	btfsc	status,2,c
  4131   012078  EF56  F08F         	goto	l5282
  4132   01207C  EF4E  F090         	goto	l1509
  4133   012080                     l5572:
  4134                           
  4135                           ; Switch size 1, requested type "simple"
  4136                           ; Number of cases is 1, Range of values is 64 to 64
  4137                           ; switch strategies available:
  4138                           ; Name         Instructions Cycles
  4139                           ; simple_byte            4     3 (average)
  4140                           ;	Chosen strategy is simple_byte
  4141   012080  5029               	movf	(btemp+8)^0,w,c
  4142   012082  0A40               	xorlw	64	; case 64
  4143   012084  B4D8               	btfsc	status,2,c
  4144   012086  EFD7  F08F         	goto	l5300
  4145   01208A  EF4E  F090         	goto	l1509
  4146   01208E                     l5568:
  4147                           
  4148                           ; Switch size 1, requested type "simple"
  4149                           ; Number of cases is 1, Range of values is 0 to 0
  4150                           ; switch strategies available:
  4151                           ; Name         Instructions Cycles
  4152                           ; simple_byte            4     3 (average)
  4153                           ;	Chosen strategy is simple_byte
  4154   01208E  502B               	movf	(btemp+10)^0,w,c
  4155   012090  0A00               	xorlw	0	; case 0
  4156   012092  B4D8               	btfsc	status,2,c
  4157   012094  EF2A  F090         	goto	l5566
  4158   012098  EF4E  F090         	goto	l1509
  4159   01209C                     l1499:
  4160   01209C                     l1509:
  4161                           
  4162                           ; _updateCarState: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  4163   01209C  0EE8               	movlw	232
  4164   01209E  26E1               	addwf	fsr1l,f,c
  4165   0120A0  0EFF               	movlw	255
  4166   0120A2  22E2               	addwfc	fsr1h,f,c
  4167   0120A4  0012               	return		;funcret
  4168   0120A6                     __end_of_updateCarState:
  4169                           	callstack 0
  4170                           
  4171 ;; *************** function _XF_post *****************
  4172 ;; Defined at:
  4173 ;;		line 274 in file "xf/xf.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  processEvent    3  [STACK] PTR FTN(PTR struct Event
  4176 ;;		 -> motorControl_Process(1), lightControl_Process(1), 
  4177 ;;  id              1  [STACK] unsigned char 
  4178 ;;  delay           2  [STACK] unsigned short 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  ev              6  [STACK] struct Event_
  4181 ;;  tmid            1  [STACK] unsigned char 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1  [STACK] unsigned char 
  4184 ;; Registers used:
  4185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;Total ram usage:        0 bytes
  4196 ;; Hardware stack levels used: 1
  4197 ;; Hardware stack levels required when called: 10
  4198 ;; This function calls:
  4199 ;;		_Event_init
  4200 ;;		_Event_setDelay
  4201 ;;		_Event_setId
  4202 ;;		_Event_setPE
  4203 ;;		_XF_pushEvent
  4204 ;; This function is called by:
  4205 ;;		_main
  4206 ;;		_updateCarState
  4207 ;; This function uses a reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text2
  4211   0138BA                     __ptext2:
  4212                           	callstack 0
  4213   0138BA                     _XF_post:
  4214                           	callstack 0
  4215                           
  4216                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4217   0138BA  0E07               	movlw	7
  4218   0138BC  26E1               	addwf	fsr1l,f,c
  4219   0138BE  0E00               	movlw	0
  4220   0138C0  22E2               	addwfc	fsr1h,f,c
  4221   0138C2                     
  4222                           ;xf/xf.c: 274: uint8_t XF_post(processEventT processEvent, uint8_t id, uint16_t delay);x
      +                          f/xf.c: 275: {;xf/xf.c: 276:     uint8_t tmid = 12;
  4223                           ;stkvar	_tmid @ sp[(-7)+6]
  4224   0138C2  0EFF               	movlw	-1
  4225   0138C4  6AE3               	clrf	plusw1,c
  4226   0138C6  84E3               	bsf	plusw1,2,c
  4227   0138C8  86E3               	bsf	plusw1,3,c	;indir
  4228   0138CA                     
  4229                           ;xf/xf.c: 279:     Event ev;;xf/xf.c: 280:     Event_init(&ev);
  4230                           ;stkvar	_ev @ sp[(-7)+0]
  4231   0138CA  0EF9               	movlw	249
  4232   0138CC  24E1               	addwf	fsr1l,w,c
  4233   0138CE  6E21               	movwf	btemp^0,c
  4234   0138D0  0EFF               	movlw	255
  4235   0138D2  20E2               	addwfc	fsr1h,w,c
  4236   0138D4  6E22               	movwf	(btemp+1)^0,c
  4237   0138D6  C021  FFE6         	movff	btemp,postinc1
  4238   0138DA  C022  FFE6         	movff	btemp+1,postinc1
  4239   0138DE  EC4C  F0A3         	call	_Event_init	;wreg free
  4240   0138E2                     
  4241                           ;xf/xf.c: 282:     Event_setPE(&ev,processEvent);
  4242                           ;stkvar	_processEvent @ sp[(-7)+-3]
  4243   0138E2  0EF6               	movlw	-10
  4244   0138E4  CFE3 FFE6          	movff	plusw1,postinc1
  4245   0138E8  CFE3 FFE6          	movff	plusw1,postinc1
  4246   0138EC  CFE3 FFE6          	movff	plusw1,postinc1
  4247                           
  4248                           ;stkvar	_ev @ sp[(-10)+0]
  4249   0138F0  0EF6               	movlw	246
  4250   0138F2  24E1               	addwf	fsr1l,w,c
  4251   0138F4  6E21               	movwf	btemp^0,c
  4252   0138F6  0EFF               	movlw	255
  4253   0138F8  20E2               	addwfc	fsr1h,w,c
  4254   0138FA  6E22               	movwf	(btemp+1)^0,c
  4255   0138FC  C021  FFE6         	movff	btemp,postinc1
  4256   013900  C022  FFE6         	movff	btemp+1,postinc1
  4257   013904  EC98  F0A3         	call	_Event_setPE	;wreg free
  4258   013908                     
  4259                           ;xf/xf.c: 283:     Event_setId(&ev,id);
  4260                           ;stkvar	_id @ sp[(-7)+-4]
  4261   013908  0EF5               	movlw	-11
  4262   01390A  50E3               	movf	plusw1,w,c
  4263   01390C  6EE6               	movwf	postinc1,c
  4264                           
  4265                           ;stkvar	_ev @ sp[(-8)+0]
  4266   01390E  0EF8               	movlw	248
  4267   013910  24E1               	addwf	fsr1l,w,c
  4268   013912  6E21               	movwf	btemp^0,c
  4269   013914  0EFF               	movlw	255
  4270   013916  20E2               	addwfc	fsr1h,w,c
  4271   013918  6E22               	movwf	(btemp+1)^0,c
  4272   01391A  C021  FFE6         	movff	btemp,postinc1
  4273   01391E  C022  FFE6         	movff	btemp+1,postinc1
  4274   013922  EC95  F0A4         	call	_Event_setId	;wreg free
  4275   013926                     
  4276                           ;xf/xf.c: 284:     Event_setDelay(&ev,delay);
  4277                           ;stkvar	_delay @ sp[(-7)+-6]
  4278   013926  0EF3               	movlw	-13
  4279   013928  CFE3 FFE6          	movff	plusw1,postinc1
  4280   01392C  CFE3 FFE6          	movff	plusw1,postinc1
  4281                           
  4282                           ;stkvar	_ev @ sp[(-9)+0]
  4283   013930  0EF7               	movlw	247
  4284   013932  24E1               	addwf	fsr1l,w,c
  4285   013934  6E21               	movwf	btemp^0,c
  4286   013936  0EFF               	movlw	255
  4287   013938  20E2               	addwfc	fsr1h,w,c
  4288   01393A  6E22               	movwf	(btemp+1)^0,c
  4289   01393C  C021  FFE6         	movff	btemp,postinc1
  4290   013940  C022  FFE6         	movff	btemp+1,postinc1
  4291   013944  ECD3  F0A3         	call	_Event_setDelay	;wreg free
  4292   013948                     
  4293                           ;xf/xf.c: 286:     XF_pushEvent(ev,0,&tmid);
  4294                           ;stkvar	_tmid @ sp[(-7)+6]
  4295   013948  0EFF               	movlw	255
  4296   01394A  24E1               	addwf	fsr1l,w,c
  4297   01394C  6E21               	movwf	btemp^0,c
  4298   01394E  0EFF               	movlw	255
  4299   013950  20E2               	addwfc	fsr1h,w,c
  4300   013952  6E22               	movwf	(btemp+1)^0,c
  4301   013954  C021  FFE6         	movff	btemp,postinc1
  4302   013958  C022  FFE6         	movff	btemp+1,postinc1
  4303   01395C  0E00               	movlw	0
  4304   01395E  6EE6               	movwf	postinc1,c
  4305                           
  4306                           ;stkvar	_ev @ sp[(-10)+0]
  4307   013960  0EF6               	movlw	246
  4308   013962  24E1               	addwf	fsr1l,w,c
  4309   013964  6ED9               	movwf	fsr2l,c
  4310   013966  0EFF               	movlw	255
  4311   013968  20E2               	addwfc	fsr1h,w,c
  4312   01396A  6EDA               	movwf	fsr2h,c
  4313   01396C  0E06               	movlw	6
  4314   01396E                     u2791:
  4315   01396E  CFDE FFE6          	movff	postinc2,postinc1
  4316   013972  2CE8               	decfsz	wreg,w,c
  4317   013974  EFB7  F09C         	goto	u2791
  4318   013978  ECA4  F094         	call	_XF_pushEvent	;wreg free
  4319   01397C                     
  4320                           ; _XF_post: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  4321   01397C  0EF3               	movlw	243
  4322   01397E  26E1               	addwf	fsr1l,f,c
  4323   013980  0EFF               	movlw	255
  4324   013982  22E2               	addwfc	fsr1h,f,c
  4325   013984  0012               	return		;funcret
  4326   013986                     __end_of_XF_post:
  4327                           	callstack 0
  4328                           
  4329 ;; *************** function _XF_pushEvent *****************
  4330 ;; Defined at:
  4331 ;;		line 106 in file "xf/xf.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  ev              6  [STACK] struct Event_
  4334 ;;  inISR           1  [STACK] _Bool 
  4335 ;;  tmid            2  [STACK] PTR unsigned char 
  4336 ;;		 -> tmid(1), dummy(1), 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  tm              2  [STACK] unsigned short 
  4339 ;;  temp            1  [STACK] unsigned char 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1  [STACK] _Bool 
  4342 ;; Registers used:
  4343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;Total ram usage:        0 bytes
  4354 ;; Hardware stack levels used: 1
  4355 ;; Hardware stack levels required when called: 9
  4356 ;; This function calls:
  4357 ;;		_ENTERCRITICAL
  4358 ;;		_Event_getDelay
  4359 ;;		_Event_setDelay
  4360 ;;		_LEAVECRITICAL
  4361 ;;		_XF_noMoreEvent
  4362 ;;		_XF_scheduleTimer
  4363 ;;		___awmod
  4364 ;; This function is called by:
  4365 ;;		_XF_decrementAndQueueTimers
  4366 ;;		_XF_post
  4367 ;; This function uses a reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text3
  4371   012948                     __ptext3:
  4372                           	callstack 0
  4373   012948                     _XF_pushEvent:
  4374                           	callstack 0
  4375                           
  4376                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 9, argsize = 9 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4377   012948  52E6               	movf	postinc1,f,c
  4378   01294A  52E6               	movf	postinc1,f,c
  4379   01294C  52E6               	movf	postinc1,f,c
  4380   01294E                     
  4381                           ;xf/xf.c: 106: _Bool XF_pushEvent(Event ev, _Bool inISR, uint8_t* tmid);xf/xf.c: 107: {;
      +                          xf/xf.c: 108:     uint8_t temp;;xf/xf.c: 109:     uint16_t tm;;xf/xf.c: 110:     tm = Ev
      +                          ent_getDelay(&ev);
  4382                           ;stkvar	_ev @ sp[(-3)+-6]
  4383   01294E  0EF7               	movlw	247
  4384   012950  24E1               	addwf	fsr1l,w,c
  4385   012952  6E21               	movwf	btemp^0,c
  4386   012954  0EFF               	movlw	255
  4387   012956  20E2               	addwfc	fsr1h,w,c
  4388   012958  6E22               	movwf	(btemp+1)^0,c
  4389   01295A  C021  FFE6         	movff	btemp,postinc1
  4390   01295E  C022  FFE6         	movff	btemp+1,postinc1
  4391   012962  EC63  F0A4         	call	_Event_getDelay	;wreg free
  4392                           
  4393                           ;stkvar	_tm @ sp[(-3)+0]
  4394   012966  0EFD               	movlw	-3
  4395   012968  C021  FFE3         	movff	btemp,plusw1
  4396   01296C  0EFE               	movlw	-2
  4397   01296E  C022  FFE3         	movff	btemp+1,plusw1
  4398   012972                     
  4399                           ;xf/xf.c: 111:     if ( tm > 0)
  4400                           ;stkvar	_tm @ sp[(-3)+0]
  4401   012972  0EFD               	movlw	-3
  4402   012974  CFE3 F021          	movff	plusw1,btemp
  4403   012978  0EFE               	movlw	-2
  4404   01297A  50E3               	movf	plusw1,w,c
  4405   01297C  1021               	iorwf	btemp^0,w,c
  4406   01297E  B4D8               	btfsc	status,2,c
  4407   012980  EFC4  F094         	goto	u2021
  4408   012984  EFC6  F094         	goto	u2020
  4409   012988                     u2021:
  4410   012988  EFF6  F094         	goto	l4396
  4411   01298C                     u2020:
  4412   01298C                     
  4413                           ;xf/xf.c: 112:     {;xf/xf.c: 113:         Event_setDelay(&ev,0);
  4414   01298C  0E00               	movlw	0
  4415   01298E  6EE6               	movwf	postinc1,c
  4416   012990  0E00               	movlw	0
  4417   012992  6EE6               	movwf	postinc1,c
  4418                           
  4419                           ;stkvar	_ev @ sp[(-5)+-6]
  4420   012994  0EF5               	movlw	245
  4421   012996  24E1               	addwf	fsr1l,w,c
  4422   012998  6E21               	movwf	btemp^0,c
  4423   01299A  0EFF               	movlw	255
  4424   01299C  20E2               	addwfc	fsr1h,w,c
  4425   01299E  6E22               	movwf	(btemp+1)^0,c
  4426   0129A0  C021  FFE6         	movff	btemp,postinc1
  4427   0129A4  C022  FFE6         	movff	btemp+1,postinc1
  4428   0129A8  ECD3  F0A3         	call	_Event_setDelay	;wreg free
  4429   0129AC                     
  4430                           ;xf/xf.c: 114:         *tmid = XF_scheduleTimer(tm, ev, inISR);
  4431                           ;stkvar	_inISR @ sp[(-3)+-7]
  4432   0129AC  0EF6               	movlw	-10
  4433   0129AE  50E3               	movf	plusw1,w,c
  4434   0129B0  6EE6               	movwf	postinc1,c
  4435                           
  4436                           ;stkvar	_ev @ sp[(-4)+-6]
  4437   0129B2  0EF6               	movlw	246
  4438   0129B4  24E1               	addwf	fsr1l,w,c
  4439   0129B6  6ED9               	movwf	fsr2l,c
  4440   0129B8  0EFF               	movlw	255
  4441   0129BA  20E2               	addwfc	fsr1h,w,c
  4442   0129BC  6EDA               	movwf	fsr2h,c
  4443   0129BE  0E06               	movlw	6
  4444   0129C0                     u2031:
  4445   0129C0  CFDE FFE6          	movff	postinc2,postinc1
  4446   0129C4  2CE8               	decfsz	wreg,w,c
  4447   0129C6  EFE0  F094         	goto	u2031
  4448                           
  4449                           ;stkvar	_tm @ sp[(-10)+0]
  4450   0129CA  0EF6               	movlw	-10
  4451   0129CC  CFE3 FFE6          	movff	plusw1,postinc1
  4452   0129D0  CFE3 FFE6          	movff	plusw1,postinc1
  4453   0129D4  EC99  F09A         	call	_XF_scheduleTimer	;wreg free
  4454                           
  4455                           ;stkvar	_tmid @ sp[(-3)+-9]
  4456   0129D8  0EF4               	movlw	-12
  4457   0129DA  CFE3 FFD9          	movff	plusw1,fsr2l
  4458   0129DE  0EF5               	movlw	-11
  4459   0129E0  CFE3 FFDA          	movff	plusw1,fsr2h
  4460   0129E4  C021  FFDF         	movff	btemp,indf2
  4461                           
  4462                           ;xf/xf.c: 115:     }
  4463   0129E8  EF5D  F095         	goto	l4416
  4464   0129EC                     l4396:
  4465                           
  4466                           ;xf/xf.c: 117:     {;xf/xf.c: 118:         ENTERCRITICAL(inISR);
  4467                           ;stkvar	_inISR @ sp[(-3)+-7]
  4468   0129EC  0EF6               	movlw	-10
  4469   0129EE  50E3               	movf	plusw1,w,c
  4470   0129F0  6EE6               	movwf	postinc1,c
  4471   0129F2  ECAE  F0A4         	call	_ENTERCRITICAL	;wreg free
  4472   0129F6                     
  4473                           ;xf/xf.c: 119:         if((theXF.countEvt+1) >= 30)
  4474   0129F6  EE23  F0DF         	lfsr	2,_theXF+279
  4475   0129FA  50DF               	movf	indf2,w,c
  4476   0129FC  6E2B               	movwf	(btemp+10)^0,c
  4477   0129FE  6A2C               	clrf	(btemp+11)^0,c
  4478   012A00  0E01               	movlw	1
  4479   012A02  262B               	addwf	(btemp+10)^0,f,c
  4480   012A04  0E00               	movlw	0
  4481   012A06  222C               	addwfc	(btemp+11)^0,f,c
  4482   012A08  BE2C               	btfsc	(btemp+11)^0,7,c
  4483   012A0A  EF10  F095         	goto	u2041
  4484   012A0E  502C               	movf	(btemp+11)^0,w,c
  4485   012A10  E109               	bnz	u2040
  4486   012A12  0E1E               	movlw	30
  4487   012A14  5C2B               	subwf	(btemp+10)^0,w,c
  4488   012A16  A0D8               	btfss	status,0,c
  4489   012A18  EF10  F095         	goto	u2041
  4490   012A1C  EF12  F095         	goto	u2040
  4491   012A20                     u2041:
  4492   012A20  EF14  F095         	goto	l4402
  4493   012A24                     u2040:
  4494   012A24                     
  4495                           ;xf/xf.c: 120:         {;xf/xf.c: 121:             XF_noMoreEvent();
  4496   012A24  ECD4  F0A4         	call	_XF_noMoreEvent	;wreg free
  4497   012A28                     l4402:
  4498                           
  4499                           ;xf/xf.c: 123:         theXF.countEvt++;
  4500   012A28  C3DF  FFE8         	movff	_theXF+279,wreg
  4501   012A2C  0F01               	addlw	1
  4502   012A2E  CFE8 F3DF          	movff	wreg,_theXF+279
  4503   012A32                     
  4504                           ;xf/xf.c: 124:         if(theXF.maxEvt < theXF.countEvt)
  4505   012A32  EE23  F0DF         	lfsr	2,_theXF+279
  4506   012A36  EE03  F0DE         	lfsr	0,_theXF+278
  4507   012A3A  50DE               	movf	postinc2,w,c
  4508   012A3C  5CEE               	subwf	postinc0,w,c
  4509   012A3E  B0D8               	btfsc	status,0,c
  4510   012A40  EF24  F095         	goto	u2051
  4511   012A44  EF26  F095         	goto	u2050
  4512   012A48                     u2051:
  4513   012A48  EF28  F095         	goto	l4408
  4514   012A4C                     u2050:
  4515   012A4C                     
  4516                           ;xf/xf.c: 125:         {;xf/xf.c: 126:             theXF.maxEvt = theXF.countEvt;
  4517   012A4C  C3DF  F3DE         	movff	_theXF+279,_theXF+278
  4518   012A50                     l4408:
  4519                           
  4520                           ;xf/xf.c: 128:         temp = (theXF.in+1) % (uint8_t)(30);
  4521   012A50  0E1E               	movlw	30
  4522   012A52  6EE6               	movwf	postinc1,c
  4523   012A54  0E00               	movlw	0
  4524   012A56  6EE6               	movwf	postinc1,c
  4525   012A58  EE23  F0DC         	lfsr	2,_theXF+276
  4526   012A5C  50DF               	movf	indf2,w,c
  4527   012A5E  6E2B               	movwf	(btemp+10)^0,c
  4528   012A60  6A2C               	clrf	(btemp+11)^0,c
  4529   012A62  0E01               	movlw	1
  4530   012A64  262B               	addwf	(btemp+10)^0,f,c
  4531   012A66  0E00               	movlw	0
  4532   012A68  222C               	addwfc	(btemp+11)^0,f,c
  4533   012A6A  C02B  FFE6         	movff	btemp+10,postinc1
  4534   012A6E  C02C  FFE6         	movff	btemp+11,postinc1
  4535   012A72  EC0E  F096         	call	___awmod	;wreg free
  4536                           
  4537                           ;stkvar	_temp @ sp[(-3)+2]
  4538   012A76  0EFF               	movlw	-1
  4539   012A78  C021  FFE3         	movff	btemp,plusw1
  4540   012A7C                     
  4541                           ;xf/xf.c: 129:         theXF.eventQueue[theXF.in] = ev;
  4542                           ;stkvar	_ev @ sp[(-3)+-6]
  4543   012A7C  0EF7               	movlw	247
  4544   012A7E  24E1               	addwf	fsr1l,w,c
  4545   012A80  6ED9               	movwf	fsr2l,c
  4546   012A82  0EFF               	movlw	255
  4547   012A84  20E2               	addwfc	fsr1h,w,c
  4548   012A86  6EDA               	movwf	fsr2h,c
  4549   012A88  EE03  F0DC         	lfsr	0,_theXF+276
  4550   012A8C  50EF               	movf	indf0,w,c
  4551   012A8E  0D06               	mullw	6
  4552   012A90  0E28               	movlw	low (_theXF+96)
  4553   012A92  24F3               	addwf	243,w,c
  4554   012A94  6EE9               	movwf	fsr0l,c
  4555   012A96  0E03               	movlw	high (_theXF+96)
  4556   012A98  20F4               	addwfc	prodh,w,c
  4557   012A9A  6EEA               	movwf	fsr0h,c
  4558   012A9C  0E05               	movlw	5
  4559   012A9E                     u2061:
  4560   012A9E  CFDB FFEB          	movff	plusw2,plusw0
  4561   012AA2  06E8               	decf	wreg,f,c
  4562   012AA4  E2FC               	bc	u2061
  4563   012AA6                     
  4564                           ;xf/xf.c: 130:         theXF.in = temp;
  4565                           ;stkvar	_temp @ sp[(-3)+2]
  4566   012AA6  0EFF               	movlw	-1
  4567   012AA8  CFE3 F02C          	movff	plusw1,btemp+11
  4568   012AAC  C02C  F3DC         	movff	btemp+11,_theXF+276
  4569   012AB0                     
  4570                           ;xf/xf.c: 131:         LEAVECRITICAL(inISR);
  4571                           ;stkvar	_inISR @ sp[(-3)+-7]
  4572   012AB0  0EF6               	movlw	-10
  4573   012AB2  50E3               	movf	plusw1,w,c
  4574   012AB4  6EE6               	movwf	postinc1,c
  4575   012AB6  ECA2  F0A4         	call	_LEAVECRITICAL	;wreg free
  4576   012ABA                     l4416:
  4577                           
  4578                           ;xf/xf.c: 133:     return 1;
  4579   012ABA  0E01               	movlw	1
  4580   012ABC  6E21               	movwf	btemp^0,c
  4581   012ABE                     
  4582                           ; _XF_pushEvent: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 9, 
      +                          argsize = 9, vargsize = 0
  4583   012ABE  0EF4               	movlw	244
  4584   012AC0  26E1               	addwf	fsr1l,f,c
  4585   012AC2  0EFF               	movlw	255
  4586   012AC4  22E2               	addwfc	fsr1h,f,c
  4587   012AC6  0012               	return		;funcret
  4588   012AC8                     __end_of_XF_pushEvent:
  4589                           	callstack 0
  4590                           
  4591 ;; *************** function _XF_scheduleTimer *****************
  4592 ;; Defined at:
  4593 ;;		line 169 in file "xf/xf.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  tm              2  [STACK] unsigned short 
  4596 ;;  ev              6  [STACK] struct Event_
  4597 ;;  inISR           1  [STACK] _Bool 
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;  i               1  [STACK] unsigned char 
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  1  [STACK] unsigned char 
  4602 ;; Registers used:
  4603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;Total ram usage:        0 bytes
  4614 ;; Hardware stack levels used: 1
  4615 ;; Hardware stack levels required when called: 8
  4616 ;; This function calls:
  4617 ;;		_ENTERCRITICAL
  4618 ;;		_LEAVECRITICAL
  4619 ;;		_XF_noMoreTimer
  4620 ;; This function is called by:
  4621 ;;		_XF_pushEvent
  4622 ;; This function uses a reentrant model
  4623 ;;
  4624                           
  4625                           	psect	text4
  4626   013532                     __ptext4:
  4627                           	callstack 0
  4628   013532                     _XF_scheduleTimer:
  4629                           	callstack 0
  4630                           
  4631                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 9, argsize = 9 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4632   013532  52E6               	movf	postinc1,f,c
  4633   013534                     
  4634                           ;xf/xf.c: 169: uint8_t XF_scheduleTimer(uint16_t tm, Event ev, _Bool inISR);xf/xf.c: 170
      +                          : {;xf/xf.c: 171:     uint8_t i;;xf/xf.c: 173:     ENTERCRITICAL(inISR);
  4635                           ;stkvar	_inISR @ sp[(-1)+-9]
  4636   013534  0EF6               	movlw	-10
  4637   013536  50E3               	movf	plusw1,w,c
  4638   013538  6EE6               	movwf	postinc1,c
  4639   01353A  ECAE  F0A4         	call	_ENTERCRITICAL	;wreg free
  4640                           
  4641                           ;xf/xf.c: 174:     for (i=0; i<12; i++)
  4642                           ;stkvar	_i @ sp[(-1)+0]
  4643   01353E  0EFF               	movlw	-1
  4644   013540  6AE3               	clrf	plusw1,c
  4645   013542                     l4266:
  4646                           
  4647                           ;xf/xf.c: 175:     {;xf/xf.c: 176:         if (theXF.timerList[i].ev.id == 0)
  4648                           ;stkvar	_i @ sp[(-1)+0]
  4649   013542  0EFF               	movlw	-1
  4650   013544  50E3               	movf	plusw1,w,c
  4651   013546  0D08               	mullw	8
  4652   013548  0ECA               	movlw	low (_theXF+2)
  4653   01354A  24F3               	addwf	243,w,c
  4654   01354C  6ED9               	movwf	fsr2l,c
  4655   01354E  0E02               	movlw	high (_theXF+2)
  4656   013550  20F4               	addwfc	prodh,w,c
  4657   013552  6EDA               	movwf	fsr2h,c
  4658   013554  50DF               	movf	indf2,w,c
  4659   013556  A4D8               	btfss	status,2,c
  4660   013558  EFB0  F09A         	goto	u1881
  4661   01355C  EFB2  F09A         	goto	u1880
  4662   013560                     u1881:
  4663   013560  EFF8  F09A         	goto	l4284
  4664   013564                     u1880:
  4665   013564                     
  4666                           ;xf/xf.c: 177:         {;xf/xf.c: 178:             theXF.timerList[i].tm = tm;
  4667                           ;stkvar	_tm @ sp[(-1)+-2]
  4668   013564  50E1               	movf	fsr1l,w,c
  4669   013566  0FFD               	addlw	-3
  4670   013568  6ED9               	movwf	fsr2l,c
  4671   01356A  50E2               	movf	fsr1h,w,c
  4672   01356C  6EDA               	movwf	fsr2h,c
  4673   01356E  0EFF               	movlw	255
  4674   013570  22DA               	addwfc	fsr2h,f,c
  4675                           
  4676                           ;stkvar	_i @ sp[(-1)+0]
  4677   013572  0EFF               	movlw	-1
  4678   013574  50E3               	movf	plusw1,w,c
  4679   013576  0D08               	mullw	8
  4680   013578  0EC8               	movlw	low _theXF
  4681   01357A  24F3               	addwf	243,w,c
  4682   01357C  6EE9               	movwf	fsr0l,c
  4683   01357E  0E02               	movlw	high _theXF
  4684   013580  20F4               	addwfc	prodh,w,c
  4685   013582  6EEA               	movwf	fsr0h,c
  4686   013584  CFDE FFEE          	movff	postinc2,postinc0
  4687   013588  CFDD FFED          	movff	postdec2,postdec0
  4688                           
  4689                           ;xf/xf.c: 179:             theXF.timerList[i].ev = ev;
  4690                           ;stkvar	_ev @ sp[(-1)+-8]
  4691   01358C  0EF7               	movlw	247
  4692   01358E  24E1               	addwf	fsr1l,w,c
  4693   013590  6ED9               	movwf	fsr2l,c
  4694   013592  0EFF               	movlw	255
  4695   013594  20E2               	addwfc	fsr1h,w,c
  4696   013596  6EDA               	movwf	fsr2h,c
  4697                           
  4698                           ;stkvar	_i @ sp[(-1)+0]
  4699   013598  0EFF               	movlw	-1
  4700   01359A  50E3               	movf	plusw1,w,c
  4701   01359C  0D08               	mullw	8
  4702   01359E  0ECA               	movlw	low (_theXF+2)
  4703   0135A0  24F3               	addwf	243,w,c
  4704   0135A2  6EE9               	movwf	fsr0l,c
  4705   0135A4  0E02               	movlw	high (_theXF+2)
  4706   0135A6  20F4               	addwfc	prodh,w,c
  4707   0135A8  6EEA               	movwf	fsr0h,c
  4708   0135AA  0E05               	movlw	5
  4709   0135AC                     u1891:
  4710   0135AC  CFDB FFEB          	movff	plusw2,plusw0
  4711   0135B0  06E8               	decf	wreg,f,c
  4712   0135B2  E2FC               	bc	u1891
  4713   0135B4                     
  4714                           ;xf/xf.c: 180:             theXF.countTmr++;
  4715   0135B4  C3E1  FFE8         	movff	_theXF+281,wreg
  4716   0135B8  0F01               	addlw	1
  4717   0135BA  CFE8 F3E1          	movff	wreg,_theXF+281
  4718   0135BE                     
  4719                           ;xf/xf.c: 181:             if(theXF.countTmr > theXF.maxTmr)
  4720   0135BE  EE23  F0E1         	lfsr	2,_theXF+281
  4721   0135C2  EE03  F0E0         	lfsr	0,_theXF+280
  4722   0135C6  50DE               	movf	postinc2,w,c
  4723   0135C8  5CEE               	subwf	postinc0,w,c
  4724   0135CA  B0D8               	btfsc	status,0,c
  4725   0135CC  EFEA  F09A         	goto	u1901
  4726   0135D0  EFEC  F09A         	goto	u1900
  4727   0135D4                     u1901:
  4728   0135D4  EFEE  F09A         	goto	l4276
  4729   0135D8                     u1900:
  4730   0135D8                     
  4731                           ;xf/xf.c: 182:             {;xf/xf.c: 183:                 theXF.maxTmr = theXF.countTmr
      +                          ;
  4732   0135D8  C3E1  F3E0         	movff	_theXF+281,_theXF+280
  4733   0135DC                     l4276:
  4734                           
  4735                           ;xf/xf.c: 185:             LEAVECRITICAL(inISR);
  4736                           ;stkvar	_inISR @ sp[(-1)+-9]
  4737   0135DC  0EF6               	movlw	-10
  4738   0135DE  50E3               	movf	plusw1,w,c
  4739   0135E0  6EE6               	movwf	postinc1,c
  4740   0135E2  ECA2  F0A4         	call	_LEAVECRITICAL	;wreg free
  4741   0135E6                     
  4742                           ;xf/xf.c: 186:             return i;
  4743                           ;stkvar	_i @ sp[(-1)+0]
  4744   0135E6  0EFF               	movlw	-1
  4745   0135E8  CFE3 F021          	movff	plusw1,btemp
  4746   0135EC  EF09  F09B         	goto	l1234
  4747   0135F0                     l4284:
  4748                           
  4749                           ;xf/xf.c: 189:     }
  4750                           ;stkvar	_i @ sp[(-1)+0]
  4751   0135F0  0EFF               	movlw	-1
  4752   0135F2  2AE3               	incf	plusw1,f,c
  4753   0135F4                     
  4754                           ;stkvar	_i @ sp[(-1)+0]
  4755   0135F4  0EFF               	movlw	-1
  4756   0135F6  CFE3 F021          	movff	plusw1,btemp
  4757   0135FA  0E0B               	movlw	11
  4758   0135FC  6421               	cpfsgt	btemp^0,c
  4759   0135FE  EF03  F09B         	goto	u1911
  4760   013602  EF05  F09B         	goto	u1910
  4761   013606                     u1911:
  4762   013606  EFA1  F09A         	goto	l4266
  4763   01360A                     u1910:
  4764   01360A                     
  4765                           ;xf/xf.c: 190:     XF_noMoreTimer();
  4766   01360A  ECD1  F0A4         	call	_XF_noMoreTimer	;wreg free
  4767   01360E  EFEE  F09A         	goto	l4276
  4768   013612                     l1234:
  4769                           
  4770                           ; _XF_scheduleTimer: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           9, argsize = 9, vargsize = 0
  4771   013612  0EF6               	movlw	246
  4772   013614  26E1               	addwf	fsr1l,f,c
  4773   013616  0EFF               	movlw	255
  4774   013618  22E2               	addwfc	fsr1h,f,c
  4775   01361A  0012               	return		;funcret
  4776   01361C                     __end_of_XF_scheduleTimer:
  4777                           	callstack 0
  4778                           
  4779 ;; *************** function _XF_noMoreTimer *****************
  4780 ;; Defined at:
  4781 ;;		line 69 in file "xf/xf.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;		None
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;		None
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  1  [STACK] void 
  4788 ;; Registers used:
  4789 ;;		None
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4799 ;;Total ram usage:        0 bytes
  4800 ;; Hardware stack levels used: 1
  4801 ;; Hardware stack levels required when called: 7
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_XF_scheduleTimer
  4806 ;; This function uses a reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text5
  4810   0149A2                     __ptext5:
  4811                           	callstack 0
  4812   0149A2                     _XF_noMoreTimer:
  4813                           	callstack 9
  4814   0149A2                     l1206:
  4815   0149A2  EFD1  F0A4         	goto	l1206
  4816                           
  4817                           ; _XF_noMoreTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4818   0149A6  0012               	return		;funcret
  4819   0149A8                     __end_of_XF_noMoreTimer:
  4820                           	callstack 0
  4821                           
  4822 ;; *************** function _XF_noMoreEvent *****************
  4823 ;; Defined at:
  4824 ;;		line 65 in file "xf/xf.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;		None
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;		None
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  1  [STACK] void 
  4831 ;; Registers used:
  4832 ;;		None
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;Total ram usage:        0 bytes
  4843 ;; Hardware stack levels used: 1
  4844 ;; Hardware stack levels required when called: 7
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_XF_pushEvent
  4849 ;; This function uses a reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text6
  4853   0149A8                     __ptext6:
  4854                           	callstack 0
  4855   0149A8                     _XF_noMoreEvent:
  4856                           	callstack 10
  4857   0149A8                     l1200:
  4858   0149A8  EFD4  F0A4         	goto	l1200
  4859                           
  4860                           ; _XF_noMoreEvent: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4861   0149AC  0012               	return		;funcret
  4862   0149AE                     __end_of_XF_noMoreEvent:
  4863                           	callstack 0
  4864                           
  4865 ;; *************** function _Event_setDelay *****************
  4866 ;; Defined at:
  4867 ;;		line 32 in file "xf/event.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;  me              2  [STACK] PTR struct Event_
  4870 ;;		 -> ev(6), 
  4871 ;;  delay           2  [STACK] unsigned short 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;		None
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1  [STACK] void 
  4876 ;; Registers used:
  4877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;Total ram usage:        0 bytes
  4888 ;; Hardware stack levels used: 1
  4889 ;; Hardware stack levels required when called: 7
  4890 ;; This function calls:
  4891 ;;		Nothing
  4892 ;; This function is called by:
  4893 ;;		_XF_pushEvent
  4894 ;;		_XF_post
  4895 ;; This function uses a reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text7
  4899   0147A6                     __ptext7:
  4900                           	callstack 0
  4901   0147A6                     _Event_setDelay:
  4902                           	callstack 10
  4903   0147A6                     
  4904                           ;xf/event.c: 32: void Event_setDelay(Event* me, uint16_t delay);xf/event.c: 33: {;xf/eve
      +                          nt.c: 34:     me->delay = delay;
  4905                           ;stkvar	_delay @ sp[(0)+-4]
  4906   0147A6  50E1               	movf	fsr1l,w,c
  4907   0147A8  0FFC               	addlw	-4
  4908   0147AA  6ED9               	movwf	fsr2l,c
  4909   0147AC  50E2               	movf	fsr1h,w,c
  4910   0147AE  6EDA               	movwf	fsr2h,c
  4911   0147B0  0EFF               	movlw	255
  4912   0147B2  22DA               	addwfc	fsr2h,f,c
  4913                           
  4914                           ;stkvar	_me @ sp[(0)+-2]
  4915   0147B4  0EFE               	movlw	-2
  4916   0147B6  CFE3 F02B          	movff	plusw1,btemp+10
  4917   0147BA  0EFF               	movlw	-1
  4918   0147BC  CFE3 F02C          	movff	plusw1,btemp+11
  4919   0147C0  0E04               	movlw	4
  4920   0147C2  242B               	addwf	(btemp+10)^0,w,c
  4921   0147C4  6EE9               	movwf	fsr0l,c
  4922   0147C6  0E00               	movlw	0
  4923   0147C8  202C               	addwfc	(btemp+11)^0,w,c
  4924   0147CA  6EEA               	movwf	fsr0h,c
  4925   0147CC  CFDE FFEE          	movff	postinc2,postinc0
  4926   0147D0  CFDD FFED          	movff	postdec2,postdec0
  4927   0147D4                     
  4928                           ; _Event_setDelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  4929   0147D4  52E5               	movf	postdec1,f,c
  4930   0147D6  52E5               	movf	postdec1,f,c
  4931   0147D8  52E5               	movf	postdec1,f,c
  4932   0147DA  52E5               	movf	postdec1,f,c
  4933   0147DC  0012               	return		;funcret
  4934   0147DE                     __end_of_Event_setDelay:
  4935                           	callstack 0
  4936                           
  4937 ;; *************** function _Event_getDelay *****************
  4938 ;; Defined at:
  4939 ;;		line 37 in file "xf/event.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;  me              2  [STACK] PTR struct Event_
  4942 ;;		 -> ev(6), 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;		None
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  2  [STACK] unsigned short 
  4947 ;; Registers used:
  4948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;Total ram usage:        0 bytes
  4959 ;; Hardware stack levels used: 1
  4960 ;; Hardware stack levels required when called: 7
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		_XF_pushEvent
  4965 ;; This function uses a reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text8
  4969   0148C6                     __ptext8:
  4970                           	callstack 0
  4971   0148C6                     _Event_getDelay:
  4972                           	callstack 10
  4973   0148C6                     
  4974                           ;xf/event.c: 37: uint16_t Event_getDelay(Event* me);xf/event.c: 38: {;xf/event.c: 39:   
      +                            return me->delay;
  4975                           ;stkvar	_me @ sp[(0)+-2]
  4976   0148C6  0EFE               	movlw	-2
  4977   0148C8  CFE3 F02B          	movff	plusw1,btemp+10
  4978   0148CC  0EFF               	movlw	-1
  4979   0148CE  CFE3 F02C          	movff	plusw1,btemp+11
  4980   0148D2  0E04               	movlw	4
  4981   0148D4  242B               	addwf	(btemp+10)^0,w,c
  4982   0148D6  6ED9               	movwf	fsr2l,c
  4983   0148D8  0E00               	movlw	0
  4984   0148DA  202C               	addwfc	(btemp+11)^0,w,c
  4985   0148DC  6EDA               	movwf	fsr2h,c
  4986   0148DE  CFDE F021          	movff	postinc2,btemp
  4987   0148E2  CFDD F022          	movff	postdec2,btemp+1
  4988   0148E6                     
  4989                           ; _Event_getDelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
  4990   0148E6  52E5               	movf	postdec1,f,c
  4991   0148E8  52E5               	movf	postdec1,f,c
  4992   0148EA  0012               	return		;funcret
  4993   0148EC                     __end_of_Event_getDelay:
  4994                           	callstack 0
  4995                           
  4996 ;; *************** function _Event_setPE *****************
  4997 ;; Defined at:
  4998 ;;		line 12 in file "xf/event.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  me              2  [STACK] PTR struct Event_
  5001 ;;		 -> ev(6), 
  5002 ;;  processEvent    3  [STACK] PTR FTN(PTR struct Event
  5003 ;;		 -> motorControl_Process(1), lightControl_Process(1), 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;		None
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  1  [STACK] void 
  5008 ;; Registers used:
  5009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5019 ;;Total ram usage:        0 bytes
  5020 ;; Hardware stack levels used: 1
  5021 ;; Hardware stack levels required when called: 7
  5022 ;; This function calls:
  5023 ;;		Nothing
  5024 ;; This function is called by:
  5025 ;;		_XF_post
  5026 ;; This function uses a reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text9
  5030   014730                     __ptext9:
  5031                           	callstack 0
  5032   014730                     _Event_setPE:
  5033                           	callstack 21
  5034   014730                     
  5035                           ;xf/event.c: 12: void Event_setPE(Event* me, processEventT processEvent);xf/event.c: 13:
      +                           {;xf/event.c: 14:     me->processEvent = processEvent;
  5036                           ;stkvar	_processEvent @ sp[(0)+-5]
  5037   014730  50E1               	movf	fsr1l,w,c
  5038   014732  0FFB               	addlw	-5
  5039   014734  6ED9               	movwf	fsr2l,c
  5040   014736  50E2               	movf	fsr1h,w,c
  5041   014738  6EDA               	movwf	fsr2h,c
  5042   01473A  0EFF               	movlw	255
  5043   01473C  22DA               	addwfc	fsr2h,f,c
  5044                           
  5045                           ;stkvar	_me @ sp[(0)+-2]
  5046   01473E  0EFE               	movlw	-2
  5047   014740  CFE3 F02B          	movff	plusw1,btemp+10
  5048   014744  0EFF               	movlw	-1
  5049   014746  CFE3 F02C          	movff	plusw1,btemp+11
  5050   01474A  0E01               	movlw	1
  5051   01474C  242B               	addwf	(btemp+10)^0,w,c
  5052   01474E  6EE9               	movwf	fsr0l,c
  5053   014750  0E00               	movlw	0
  5054   014752  202C               	addwfc	(btemp+11)^0,w,c
  5055   014754  6EEA               	movwf	fsr0h,c
  5056   014756  CFDE FFEE          	movff	postinc2,postinc0
  5057   01475A  CFDE FFEE          	movff	postinc2,postinc0
  5058   01475E  CFDE FFEE          	movff	postinc2,postinc0
  5059   014762                     
  5060                           ; _Event_setPE: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, a
      +                          rgsize = 5, vargsize = 0
  5061   014762  0EFB               	movlw	251
  5062   014764  26E1               	addwf	fsr1l,f,c
  5063   014766  0EFF               	movlw	255
  5064   014768  22E2               	addwfc	fsr1h,f,c
  5065   01476A  0012               	return		;funcret
  5066   01476C                     __end_of_Event_setPE:
  5067                           	callstack 0
  5068                           
  5069 ;; *************** function _Event_setId *****************
  5070 ;; Defined at:
  5071 ;;		line 22 in file "xf/event.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  me              2  [STACK] PTR struct Event_
  5074 ;;		 -> ev(6), 
  5075 ;;  eventID         1  [STACK] unsigned char 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;		None
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1  [STACK] void 
  5080 ;; Registers used:
  5081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;Total ram usage:        0 bytes
  5092 ;; Hardware stack levels used: 1
  5093 ;; Hardware stack levels required when called: 7
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_XF_post
  5098 ;; This function uses a reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text10
  5102   01492A                     __ptext10:
  5103                           	callstack 0
  5104   01492A                     _Event_setId:
  5105                           	callstack 21
  5106   01492A                     
  5107                           ;xf/event.c: 22: void Event_setId(Event* me, evIDT eventID);xf/event.c: 23: {;xf/event.c
      +                          : 24:     me->id = eventID;
  5108                           ;stkvar	_eventID @ sp[(0)+-3]
  5109                           ;stkvar	_me @ sp[(0)+-2]
  5110   01492A  0EFE               	movlw	-2
  5111   01492C  CFE3 FFD9          	movff	plusw1,fsr2l
  5112   014930  0EFF               	movlw	-1
  5113   014932  CFE3 FFDA          	movff	plusw1,fsr2h
  5114   014936  0EFD               	movlw	-3
  5115   014938  CFE3 FFDF          	movff	plusw1,indf2
  5116   01493C                     
  5117                           ; _Event_setId: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, a
      +                          rgsize = 3, vargsize = 0
  5118   01493C  52E5               	movf	postdec1,f,c
  5119   01493E  52E5               	movf	postdec1,f,c
  5120   014940  52E5               	movf	postdec1,f,c
  5121   014942  0012               	return		;funcret
  5122   014944                     __end_of_Event_setId:
  5123                           	callstack 0
  5124                           
  5125 ;; *************** function _CanReceive *****************
  5126 ;; Defined at:
  5127 ;;		line 242 in file "can/can.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  rxObj           2  [STACK] PTR struct _CAN_RX_MSGOB
  5130 ;;		 -> rxObj(16), 
  5131 ;;  rxd             2  [STACK] PTR unsigned char 
  5132 ;;		 -> rxdata(8), 
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  rxFlags         1  [STACK] enum E5588
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1  [STACK] char 
  5137 ;; Registers used:
  5138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5148 ;;Total ram usage:        0 bytes
  5149 ;; Hardware stack levels used: 1
  5150 ;; Hardware stack levels required when called: 11
  5151 ;; This function calls:
  5152 ;;		_DRV_CANFDSPI_ReceiveChannelEventGet
  5153 ;;		_DRV_CANFDSPI_ReceiveMessageGet
  5154 ;; This function is called by:
  5155 ;;		_updateCarState
  5156 ;; This function uses a reentrant model
  5157 ;;
  5158                           
  5159                           	psect	text11
  5160   014460                     __ptext11:
  5161                           	callstack 0
  5162   014460                     _CanReceive:
  5163                           	callstack 0
  5164                           
  5165                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5166   014460  52E6               	movf	postinc1,f,c
  5167   014462                     
  5168                           ;can/can.c: 242: int8_t CanReceive(CAN_RX_MSGOBJ * rxObj, uint8_t * rxd);can/can.c: 243:
      +                           {;can/can.c: 244:   CAN_RX_FIFO_EVENT rxFlags;;can/can.c: 245:   DRV_CANFDSPI_ReceiveCh
      +                          annelEventGet(CAN_FIFO_CH2,&rxFlags);
  5169                           ;stkvar	_rxFlags @ sp[(-1)+0]
  5170   014462  0EFF               	movlw	255
  5171   014464  24E1               	addwf	fsr1l,w,c
  5172   014466  6E21               	movwf	btemp^0,c
  5173   014468  0EFF               	movlw	255
  5174   01446A  20E2               	addwfc	fsr1h,w,c
  5175   01446C  6E22               	movwf	(btemp+1)^0,c
  5176   01446E  C021  FFE6         	movff	btemp,postinc1
  5177   014472  C022  FFE6         	movff	btemp+1,postinc1
  5178   014476  0E02               	movlw	2
  5179   014478  6EE6               	movwf	postinc1,c
  5180   01447A  EC04  F0A0         	call	_DRV_CANFDSPI_ReceiveChannelEventGet	;wreg free
  5181   01447E                     
  5182                           ;can/can.c: 246:   if(rxFlags & CAN_RX_FIFO_NOT_EMPTY_EVENT)
  5183                           ;stkvar	_rxFlags @ sp[(-1)+0]
  5184   01447E  0EFF               	movlw	-1
  5185   014480  A0E3               	btfss	plusw1,0,c
  5186   014482  EF45  F0A2         	goto	u2731
  5187   014486  EF47  F0A2         	goto	u2730
  5188   01448A                     u2731:
  5189   01448A  EF5B  F0A2         	goto	l5010
  5190   01448E                     u2730:
  5191   01448E                     
  5192                           ;can/can.c: 247:   {;can/can.c: 248:     DRV_CANFDSPI_ReceiveMessageGet(CAN_FIFO_CH2,rxO
      +                          bj,rxd,8);
  5193   01448E  0E08               	movlw	8
  5194   014490  6EE6               	movwf	postinc1,c
  5195                           
  5196                           ;stkvar	_rxd @ sp[(-2)+-4]
  5197   014492  0EFA               	movlw	-6
  5198   014494  CFE3 FFE6          	movff	plusw1,postinc1
  5199   014498  CFE3 FFE6          	movff	plusw1,postinc1
  5200                           
  5201                           ;stkvar	_rxObj @ sp[(-4)+-2]
  5202   01449C  0EFA               	movlw	-6
  5203   01449E  CFE3 FFE6          	movff	plusw1,postinc1
  5204   0144A2  CFE3 FFE6          	movff	plusw1,postinc1
  5205   0144A6  0E02               	movlw	2
  5206   0144A8  6EE6               	movwf	postinc1,c
  5207   0144AA  ECA6  F083         	call	_DRV_CANFDSPI_ReceiveMessageGet	;wreg free
  5208   0144AE                     
  5209                           ;can/can.c: 249:     return 0;
  5210   0144AE  0E00               	movlw	0
  5211   0144B0  6E21               	movwf	btemp^0,c
  5212   0144B2  EF5D  F0A2         	goto	l165
  5213   0144B6                     l5010:
  5214                           
  5215                           ;can/can.c: 251:   return -1;
  5216   0144B6  0EFF               	movlw	255
  5217   0144B8  6E21               	movwf	btemp^0,c
  5218   0144BA                     l165:
  5219                           
  5220                           ; _CanReceive: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  5221   0144BA  0EFB               	movlw	251
  5222   0144BC  26E1               	addwf	fsr1l,f,c
  5223   0144BE  0EFF               	movlw	255
  5224   0144C0  22E2               	addwfc	fsr1h,f,c
  5225   0144C2  0012               	return		;funcret
  5226   0144C4                     __end_of_CanReceive:
  5227                           	callstack 0
  5228                           
  5229 ;; *************** function _DRV_CANFDSPI_ReceiveMessageGet *****************
  5230 ;; Defined at:
  5231 ;;		line 1236 in file "can/can.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  channel         1  [STACK] enum E5287
  5234 ;;  rxObj           2  [STACK] PTR struct _CAN_RX_MSGOB
  5235 ;;		 -> rxObj(16), txMsg(16), 
  5236 ;;  rxd             2  [STACK] PTR unsigned char 
  5237 ;;		 -> rxdata(8), 
  5238 ;;  nBytes          1  [STACK] unsigned char 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  temp32          4  [STACK] unsigned long 
  5241 ;;  ba             76  [STACK] unsigned char [76]
  5242 ;;  fifoReg        12  [STACK] unsigned long [3]
  5243 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
  5244 ;;  myReg           4  [STACK] struct _REG_t
  5245 ;;  ciFifoUa        4  [STACK] struct _REG_CiFIFOUA
  5246 ;;  ciFifoSta       4    0        struct _REG_CiFIFOSTA
  5247 ;;  a               2  [STACK] unsigned short 
  5248 ;;  i               1  [STACK] unsigned char 
  5249 ;;  n               1  [STACK] unsigned char 
  5250 ;;  spiTransferE    1  [STACK] char 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  1  [STACK] char 
  5253 ;; Registers used:
  5254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5264 ;;Total ram usage:        0 bytes
  5265 ;; Hardware stack levels used: 1
  5266 ;; Hardware stack levels required when called: 10
  5267 ;; This function calls:
  5268 ;;		_DRV_CANFDSPI_ReadByteArray
  5269 ;;		_DRV_CANFDSPI_ReadWordArray
  5270 ;;		_DRV_CANFDSPI_ReceiveChannelUpdate
  5271 ;; This function is called by:
  5272 ;;		_CanReceive
  5273 ;; This function uses a reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text12
  5277   01074C                     __ptext12:
  5278                           	callstack 0
  5279   01074C                     _DRV_CANFDSPI_ReceiveMessageGet:
  5280                           	callstack 0
  5281                           
  5282                           ; autosize = 110, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 v
      +                          argsize = 0, retsize = 0 argfudge = 0
  5283   01074C  0E6E               	movlw	110
  5284   01074E  26E1               	addwf	fsr1l,f,c
  5285   010750  0E00               	movlw	0
  5286   010752  22E2               	addwfc	fsr1h,f,c
  5287   010754                     
  5288                           ;can/can.c: 1241:     uint8_t i = 0;
  5289                           ;stkvar	_i @ sp[(-110)+107]
  5290   010754  0EFD               	movlw	-3
  5291   010756  6AE3               	clrf	plusw1,c
  5292                           
  5293                           ;can/can.c: 1242:     uint16_t a;;can/can.c: 1243:     uint32_t fifoReg[3];;can/can.c: 1
      +                          244:     REG_CiFIFOCON ciFifoCon;;can/can.c: 1245:     __attribute__((unused)) REG_CiFIF
      +                          OSTA ciFifoSta;;can/can.c: 1246:     REG_CiFIFOUA ciFifoUa;;can/can.c: 1247:     int8_t 
      +                          spiTransferError = 0;
  5294                           ;stkvar	_spiTransferError @ sp[(-110)+109]
  5295   010758  0EFF               	movlw	-1
  5296   01075A  6AE3               	clrf	plusw1,c
  5297   01075C                     
  5298                           ;can/can.c: 1250:     a = 0x050 + (channel * (3*4));
  5299                           ;stkvar	_channel @ sp[(-110)+-1]
  5300   01075C  0E91               	movlw	-111
  5301   01075E  50E3               	movf	plusw1,w,c
  5302   010760  0D0C               	mullw	12
  5303   010762  0E50               	movlw	80
  5304   010764  26F3               	addwf	243,f,c
  5305   010766  0E00               	movlw	0
  5306   010768  22F4               	addwfc	244,f,c
  5307                           
  5308                           ;stkvar	_a @ sp[(-110)+105]
  5309   01076A  0EFB               	movlw	-5
  5310   01076C  CFF3 FFE3          	movff	prodl,plusw1
  5311   010770  0EFC               	movlw	-4
  5312   010772  CFF4 FFE3          	movff	prodh,plusw1
  5313   010776                     
  5314                           ;can/can.c: 1252:     spiTransferError = DRV_CANFDSPI_ReadWordArray( a, fifoReg, 3);
  5315   010776  0E03               	movlw	3
  5316   010778  6EE6               	movwf	postinc1,c
  5317   01077A  0E00               	movlw	0
  5318   01077C  6EE6               	movwf	postinc1,c
  5319                           
  5320                           ;stkvar	_fifoReg @ sp[(-112)+80]
  5321   01077E  0EE0               	movlw	224
  5322   010780  24E1               	addwf	fsr1l,w,c
  5323   010782  6E21               	movwf	btemp^0,c
  5324   010784  0EFF               	movlw	255
  5325   010786  20E2               	addwfc	fsr1h,w,c
  5326   010788  6E22               	movwf	(btemp+1)^0,c
  5327   01078A  C021  FFE6         	movff	btemp,postinc1
  5328   01078E  C022  FFE6         	movff	btemp+1,postinc1
  5329                           
  5330                           ;stkvar	_a @ sp[(-114)+105]
  5331   010792  0EF7               	movlw	-9
  5332   010794  CFE3 FFE6          	movff	plusw1,postinc1
  5333   010798  CFE3 FFE6          	movff	plusw1,postinc1
  5334   01079C  EC59  F08A         	call	_DRV_CANFDSPI_ReadWordArray	;wreg free
  5335                           
  5336                           ;stkvar	_spiTransferError @ sp[(-110)+109]
  5337   0107A0  0EFF               	movlw	-1
  5338   0107A2  C021  FFE3         	movff	btemp,plusw1
  5339   0107A6                     
  5340                           ;can/can.c: 1253:     if (spiTransferError) {
  5341                           ;stkvar	_spiTransferError @ sp[(-110)+109]
  5342   0107A6  0EFF               	movlw	-1
  5343   0107A8  50E3               	movf	plusw1,w,c
  5344   0107AA  B4D8               	btfsc	status,2,c
  5345   0107AC  EFDA  F083         	goto	u2091
  5346   0107B0  EFDC  F083         	goto	u2090
  5347   0107B4                     u2091:
  5348   0107B4  EFDE  F083         	goto	l4462
  5349   0107B8                     u2090:
  5350   0107B8  EF15  F087         	goto	l357
  5351   0107BC                     l4462:
  5352                           
  5353                           ;can/can.c: 1258:     ciFifoCon.word = fifoReg[0];
  5354                           ;stkvar	_fifoReg @ sp[(-110)+80]
  5355   0107BC  0EE2               	movlw	-30
  5356   0107BE  CFE3 F029          	movff	plusw1,btemp+8
  5357   0107C2  0EE3               	movlw	-29
  5358   0107C4  CFE3 F02A          	movff	plusw1,btemp+9
  5359   0107C8  0EE4               	movlw	-28
  5360   0107CA  CFE3 F02B          	movff	plusw1,btemp+10
  5361   0107CE  0EE5               	movlw	-27
  5362   0107D0  CFE3 F02C          	movff	plusw1,btemp+11
  5363                           
  5364                           ;stkvar	_ciFifoCon @ sp[(-110)+92]
  5365   0107D4  0EEE               	movlw	-18
  5366   0107D6  C029  FFE3         	movff	btemp+8,plusw1
  5367   0107DA  0EEF               	movlw	-17
  5368   0107DC  C02A  FFE3         	movff	btemp+9,plusw1
  5369   0107E0  0EF0               	movlw	-16
  5370   0107E2  C02B  FFE3         	movff	btemp+10,plusw1
  5371   0107E6  0EF1               	movlw	-15
  5372   0107E8  C02C  FFE3         	movff	btemp+11,plusw1
  5373   0107EC                     
  5374                           ;can/can.c: 1259:     if (ciFifoCon.txBF.TxEnable) {
  5375                           ;stkvar	_ciFifoCon @ sp[(-110)+92]
  5376   0107EC  50E1               	movf	fsr1l,w,c
  5377   0107EE  0FEE               	addlw	-18
  5378   0107F0  6ED9               	movwf	fsr2l,c
  5379   0107F2  50E2               	movf	fsr1h,w,c
  5380   0107F4  6EDA               	movwf	fsr2h,c
  5381   0107F6  0EFF               	movlw	255
  5382   0107F8  22DA               	addwfc	fsr2h,f,c
  5383   0107FA  AEDF               	btfss	indf2,7,c
  5384   0107FC  EF02  F084         	goto	u2101
  5385   010800  EF04  F084         	goto	u2100
  5386   010804                     u2101:
  5387   010804  EF06  F084         	goto	l4468
  5388   010808                     u2100:
  5389   010808  EF15  F087         	goto	l357
  5390   01080C                     l4468:
  5391                           
  5392                           ;can/can.c: 1267:     ciFifoUa.word = fifoReg[2];
  5393                           ;stkvar	_fifoReg @ sp[(-110)+80]
  5394   01080C  0EEA               	movlw	234
  5395   01080E  24E1               	addwf	fsr1l,w,c
  5396   010810  6ED9               	movwf	fsr2l,c
  5397   010812  0EFF               	movlw	255
  5398   010814  20E2               	addwfc	fsr1h,w,c
  5399   010816  6EDA               	movwf	fsr2h,c
  5400   010818  CFDE F029          	movff	postinc2,btemp+8
  5401   01081C  CFDE F02A          	movff	postinc2,btemp+9
  5402   010820  CFDE F02B          	movff	postinc2,btemp+10
  5403   010824  CFDE F02C          	movff	postinc2,btemp+11
  5404                           
  5405                           ;stkvar	_ciFifoUa @ sp[(-110)+101]
  5406   010828  0EF7               	movlw	-9
  5407   01082A  C029  FFE3         	movff	btemp+8,plusw1
  5408   01082E  0EF8               	movlw	-8
  5409   010830  C02A  FFE3         	movff	btemp+9,plusw1
  5410   010834  0EF9               	movlw	-7
  5411   010836  C02B  FFE3         	movff	btemp+10,plusw1
  5412   01083A  0EFA               	movlw	-6
  5413   01083C  C02C  FFE3         	movff	btemp+11,plusw1
  5414   010840                     
  5415                           ;can/can.c: 1271:     a = (uint16_t)ciFifoUa.bF.UserAddress;
  5416                           ;stkvar	_ciFifoUa @ sp[(-110)+101]
  5417                           ;stkvar	_a @ sp[(-110)+105]
  5418   010840  0EF7               	movlw	-9
  5419   010842  CFE3 F021          	movff	plusw1,btemp
  5420   010846  0EFB               	movlw	-5
  5421   010848  C021  FFE3         	movff	btemp,plusw1
  5422   01084C  0EF8               	movlw	-8
  5423   01084E  CFE3 F021          	movff	plusw1,btemp
  5424   010852  0EFC               	movlw	-4
  5425   010854  C021  FFE3         	movff	btemp,plusw1
  5426   010858                     
  5427                           ;can/can.c: 1273:     a += 0x400;
  5428                           ;stkvar	_a @ sp[(-110)+105]
  5429   010858  50E1               	movf	fsr1l,w,c
  5430   01085A  0FFB               	addlw	-5
  5431   01085C  6ED9               	movwf	fsr2l,c
  5432   01085E  50E2               	movf	fsr1h,w,c
  5433   010860  6EDA               	movwf	fsr2h,c
  5434   010862  0EFF               	movlw	255
  5435   010864  22DA               	addwfc	fsr2h,f,c
  5436   010866  0E00               	movlw	0
  5437   010868  26DE               	addwf	postinc2,f,c
  5438   01086A  0E04               	movlw	4
  5439   01086C  22DD               	addwfc	postdec2,f,c
  5440   01086E                     
  5441                           ;can/can.c: 1276:     n = nBytes + 8;
  5442   01086E  0E08               	movlw	8
  5443   010870  6E2C               	movwf	(btemp+11)^0,c
  5444                           
  5445                           ;stkvar	_nBytes @ sp[(-110)+-6]
  5446   010872  0E8C               	movlw	-116
  5447   010874  50E3               	movf	plusw1,w,c
  5448   010876  242C               	addwf	(btemp+11)^0,w,c
  5449   010878  6E2B               	movwf	(btemp+10)^0,c
  5450                           
  5451                           ;stkvar	_n @ sp[(-110)+108]
  5452   01087A  0EFE               	movlw	-2
  5453   01087C  C02B  FFE3         	movff	btemp+10,plusw1
  5454   010880                     
  5455                           ;can/can.c: 1278:     if (ciFifoCon.rxBF.RxTimeStampEnable) {
  5456                           ;stkvar	_ciFifoCon @ sp[(-110)+92]
  5457   010880  50E1               	movf	fsr1l,w,c
  5458   010882  0FEE               	addlw	-18
  5459   010884  6ED9               	movwf	fsr2l,c
  5460   010886  50E2               	movf	fsr1h,w,c
  5461   010888  6EDA               	movwf	fsr2h,c
  5462   01088A  0EFF               	movlw	255
  5463   01088C  22DA               	addwfc	fsr2h,f,c
  5464   01088E  AADF               	btfss	indf2,5,c
  5465   010890  EF4C  F084         	goto	u2111
  5466   010894  EF4E  F084         	goto	u2110
  5467   010898                     u2111:
  5468   010898  EF56  F084         	goto	l4480
  5469   01089C                     u2110:
  5470   01089C                     
  5471                           ;can/can.c: 1279:         n += 4;
  5472                           ;stkvar	_n @ sp[(-110)+108]
  5473   01089C  0EFE               	movlw	-2
  5474   01089E  CFE3 F021          	movff	plusw1,btemp
  5475   0108A2  0E04               	movlw	4
  5476   0108A4  2621               	addwf	btemp^0,f,c
  5477   0108A6  0EFE               	movlw	-2
  5478   0108A8  C021  FFE3         	movff	btemp,plusw1
  5479   0108AC                     l4480:
  5480                           
  5481                           ;can/can.c: 1283:     if (n % 4) {
  5482                           ;stkvar	_n @ sp[(-110)+108]
  5483   0108AC  0EFE               	movlw	-2
  5484   0108AE  CFE3 F02C          	movff	plusw1,btemp+11
  5485   0108B2  0E03               	movlw	3
  5486   0108B4  162C               	andwf	(btemp+11)^0,f,c
  5487   0108B6  B4D8               	btfsc	status,2,c
  5488   0108B8  EF60  F084         	goto	u2121
  5489   0108BC  EF62  F084         	goto	u2120
  5490   0108C0                     u2121:
  5491   0108C0  EF72  F084         	goto	l4484
  5492   0108C4                     u2120:
  5493   0108C4                     
  5494                           ;can/can.c: 1284:         n = n + 4 - (n % 4);
  5495                           ;stkvar	_n @ sp[(-110)+108]
  5496   0108C4  0EFE               	movlw	-2
  5497   0108C6  CFE3 F02C          	movff	plusw1,btemp+11
  5498   0108CA  0E03               	movlw	3
  5499   0108CC  162C               	andwf	(btemp+11)^0,f,c
  5500                           
  5501                           ;stkvar	_n @ sp[(-110)+108]
  5502   0108CE  0EFE               	movlw	-2
  5503   0108D0  CFE3 F02B          	movff	plusw1,btemp+10
  5504   0108D4  502C               	movf	(btemp+11)^0,w,c
  5505   0108D6  5C2B               	subwf	(btemp+10)^0,w,c
  5506   0108D8  6E2C               	movwf	(btemp+11)^0,c
  5507   0108DA  0E04               	movlw	4
  5508   0108DC  262C               	addwf	(btemp+11)^0,f,c
  5509                           
  5510                           ;stkvar	_n @ sp[(-110)+108]
  5511   0108DE  0EFE               	movlw	-2
  5512   0108E0  C02C  FFE3         	movff	btemp+11,plusw1
  5513   0108E4                     l4484:
  5514                           
  5515                           ;can/can.c: 1288:     uint8_t ba[76];;can/can.c: 1290:     if (n > 76) {
  5516                           ;stkvar	_n @ sp[(-110)+108]
  5517   0108E4  0EFE               	movlw	-2
  5518   0108E6  CFE3 F021          	movff	plusw1,btemp
  5519   0108EA  0E4C               	movlw	76
  5520   0108EC  6421               	cpfsgt	btemp^0,c
  5521   0108EE  EF7B  F084         	goto	u2131
  5522   0108F2  EF7D  F084         	goto	u2130
  5523   0108F6                     u2131:
  5524   0108F6  EF82  F084         	goto	l4488
  5525   0108FA                     u2130:
  5526   0108FA                     
  5527                           ;can/can.c: 1291:         n = 76;
  5528   0108FA  0E4C               	movlw	76
  5529   0108FC  6E2C               	movwf	(btemp+11)^0,c
  5530                           
  5531                           ;stkvar	_n @ sp[(-110)+108]
  5532   0108FE  0EFE               	movlw	-2
  5533   010900  C02C  FFE3         	movff	btemp+11,plusw1
  5534   010904                     l4488:
  5535                           
  5536                           ;can/can.c: 1294:     spiTransferError = DRV_CANFDSPI_ReadByteArray( a, ba, n);
  5537                           ;stkvar	_n @ sp[(-110)+108]
  5538   010904  0EFE               	movlw	-2
  5539   010906  50E3               	movf	plusw1,w,c
  5540   010908  6EE6               	movwf	postinc1,c
  5541   01090A  0E00               	movlw	0
  5542   01090C  6EE6               	movwf	postinc1,c
  5543                           
  5544                           ;stkvar	_ba @ sp[(-112)+4]
  5545   01090E  0E94               	movlw	148
  5546   010910  24E1               	addwf	fsr1l,w,c
  5547   010912  6E21               	movwf	btemp^0,c
  5548   010914  0EFF               	movlw	255
  5549   010916  20E2               	addwfc	fsr1h,w,c
  5550   010918  6E22               	movwf	(btemp+1)^0,c
  5551   01091A  C021  FFE6         	movff	btemp,postinc1
  5552   01091E  C022  FFE6         	movff	btemp+1,postinc1
  5553                           
  5554                           ;stkvar	_a @ sp[(-114)+105]
  5555   010922  0EF7               	movlw	-9
  5556   010924  CFE3 FFE6          	movff	plusw1,postinc1
  5557   010928  CFE3 FFE6          	movff	plusw1,postinc1
  5558   01092C  EC1D  F093         	call	_DRV_CANFDSPI_ReadByteArray	;wreg free
  5559                           
  5560                           ;stkvar	_spiTransferError @ sp[(-110)+109]
  5561   010930  0EFF               	movlw	-1
  5562   010932  C021  FFE3         	movff	btemp,plusw1
  5563   010936                     
  5564                           ;can/can.c: 1295:     if (spiTransferError) {
  5565                           ;stkvar	_spiTransferError @ sp[(-110)+109]
  5566   010936  0EFF               	movlw	-1
  5567   010938  50E3               	movf	plusw1,w,c
  5568   01093A  B4D8               	btfsc	status,2,c
  5569   01093C  EFA2  F084         	goto	u2141
  5570   010940  EFA4  F084         	goto	u2140
  5571   010944                     u2141:
  5572   010944  EFA6  F084         	goto	l4494
  5573   010948                     u2140:
  5574   010948  EF15  F087         	goto	l357
  5575   01094C                     l4494:
  5576                           
  5577                           ;can/can.c: 1300:     REG_t myReg;;can/can.c: 1315:     rxObj->byte[6] = ba[4];
  5578                           ;stkvar	_ba @ sp[(-110)+4]
  5579   01094C  0E9A               	movlw	154
  5580   01094E  24E1               	addwf	fsr1l,w,c
  5581   010950  6ED9               	movwf	fsr2l,c
  5582   010952  0EFF               	movlw	255
  5583   010954  20E2               	addwfc	fsr1h,w,c
  5584   010956  6EDA               	movwf	fsr2h,c
  5585                           
  5586                           ;stkvar	_rxObj @ sp[(-110)+-3]
  5587   010958  0E8F               	movlw	-113
  5588   01095A  CFE3 F02B          	movff	plusw1,btemp+10
  5589   01095E  0E90               	movlw	-112
  5590   010960  CFE3 F02C          	movff	plusw1,btemp+11
  5591   010964  0E06               	movlw	6
  5592   010966  242B               	addwf	(btemp+10)^0,w,c
  5593   010968  6EE9               	movwf	fsr0l,c
  5594   01096A  0E00               	movlw	0
  5595   01096C  202C               	addwfc	(btemp+11)^0,w,c
  5596   01096E  6EEA               	movwf	fsr0h,c
  5597   010970  CFDF FFEF          	movff	indf2,indf0
  5598   010974                     
  5599                           ;can/can.c: 1316:     if(rxObj->bF.ctrl.IDE == 0)
  5600                           ;stkvar	_rxObj @ sp[(-110)+-3]
  5601   010974  0E8F               	movlw	-113
  5602   010976  CFE3 F02B          	movff	plusw1,btemp+10
  5603   01097A  0E90               	movlw	-112
  5604   01097C  CFE3 F02C          	movff	plusw1,btemp+11
  5605   010980  0E06               	movlw	6
  5606   010982  242B               	addwf	(btemp+10)^0,w,c
  5607   010984  6ED9               	movwf	fsr2l,c
  5608   010986  0E00               	movlw	0
  5609   010988  202C               	addwfc	(btemp+11)^0,w,c
  5610   01098A  6EDA               	movwf	fsr2h,c
  5611   01098C  B8DF               	btfsc	indf2,4,c
  5612   01098E  EFCB  F084         	goto	u2151
  5613   010992  EFCD  F084         	goto	u2150
  5614   010996                     u2151:
  5615   010996  EF38  F085         	goto	l4500
  5616   01099A                     u2150:
  5617   01099A                     
  5618                           ;can/can.c: 1317:     {;can/can.c: 1318:       rxObj->bF.id.ID = ba[0] | ((uint32_t)ba[1
      +                          ] << 8) |
  5619                           ;stkvar	_ba @ sp[(-110)+4]
  5620   01099A  0E99               	movlw	153
  5621   01099C  24E1               	addwf	fsr1l,w,c
  5622   01099E  6ED9               	movwf	fsr2l,c
  5623   0109A0  0EFF               	movlw	255
  5624   0109A2  20E2               	addwfc	fsr1h,w,c
  5625   0109A4  6EDA               	movwf	fsr2h,c
  5626   0109A6  50DF               	movf	indf2,w,c
  5627   0109A8  6E2C               	movwf	(btemp+11)^0,c
  5628   0109AA  0E1F               	movlw	31
  5629   0109AC  162C               	andwf	(btemp+11)^0,f,c
  5630   0109AE  C02C  F025         	movff	btemp+11,btemp+4
  5631   0109B2  6A26               	clrf	(btemp+5)^0,c
  5632   0109B4  6A27               	clrf	(btemp+6)^0,c
  5633   0109B6  6A28               	clrf	(btemp+7)^0,c
  5634   0109B8  C025  F028         	movff	btemp+4,btemp+7
  5635   0109BC  6A27               	clrf	(btemp+6)^0,c
  5636   0109BE  6A26               	clrf	(btemp+5)^0,c
  5637   0109C0  6A25               	clrf	(btemp+4)^0,c
  5638                           
  5639                           ;stkvar	_ba @ sp[(-110)+4]
  5640   0109C2  0E97               	movlw	151
  5641   0109C4  24E1               	addwf	fsr1l,w,c
  5642   0109C6  6ED9               	movwf	fsr2l,c
  5643   0109C8  0EFF               	movlw	255
  5644   0109CA  20E2               	addwfc	fsr1h,w,c
  5645   0109CC  6EDA               	movwf	fsr2h,c
  5646   0109CE  50DF               	movf	indf2,w,c
  5647   0109D0  6E2C               	movwf	(btemp+11)^0,c
  5648   0109D2  C02C  F021         	movff	btemp+11,btemp
  5649   0109D6  6A22               	clrf	(btemp+1)^0,c
  5650   0109D8  6A23               	clrf	(btemp+2)^0,c
  5651   0109DA  6A24               	clrf	(btemp+3)^0,c
  5652   0109DC  C023  F024         	movff	btemp+2,btemp+3
  5653   0109E0  C022  F023         	movff	btemp+1,btemp+2
  5654   0109E4  C021  F022         	movff	btemp,btemp+1
  5655   0109E8  6A21               	clrf	btemp^0,c
  5656                           
  5657                           ;stkvar	_ba @ sp[(-110)+4]
  5658   0109EA  0E96               	movlw	-106
  5659   0109EC  50E3               	movf	plusw1,w,c
  5660   0109EE  6E29               	movwf	(btemp+8)^0,c
  5661   0109F0  6A2A               	clrf	(btemp+9)^0,c
  5662   0109F2  6A2B               	clrf	(btemp+10)^0,c
  5663   0109F4  6A2C               	clrf	(btemp+11)^0,c
  5664   0109F6  5021               	movf	btemp^0,w,c
  5665   0109F8  1229               	iorwf	(btemp+8)^0,f,c
  5666   0109FA  5022               	movf	(btemp+1)^0,w,c
  5667   0109FC  122A               	iorwf	(btemp+9)^0,f,c
  5668   0109FE  5023               	movf	(btemp+2)^0,w,c
  5669   010A00  122B               	iorwf	(btemp+10)^0,f,c
  5670   010A02  5024               	movf	(btemp+3)^0,w,c
  5671   010A04  122C               	iorwf	(btemp+11)^0,f,c
  5672                           
  5673                           ;stkvar	_ba @ sp[(-110)+4]
  5674   010A06  0E98               	movlw	152
  5675   010A08  24E1               	addwf	fsr1l,w,c
  5676   010A0A  6ED9               	movwf	fsr2l,c
  5677   010A0C  0EFF               	movlw	255
  5678   010A0E  20E2               	addwfc	fsr1h,w,c
  5679   010A10  6EDA               	movwf	fsr2h,c
  5680   010A12  50DF               	movf	indf2,w,c
  5681   010A14  6E21               	movwf	btemp^0,c
  5682   010A16  6A22               	clrf	(btemp+1)^0,c
  5683   010A18  6A23               	clrf	(btemp+2)^0,c
  5684   010A1A  6A24               	clrf	(btemp+3)^0,c
  5685   010A1C  C022  F024         	movff	btemp+1,btemp+3
  5686   010A20  C021  F023         	movff	btemp,btemp+2
  5687   010A24  6A22               	clrf	(btemp+1)^0,c
  5688   010A26  6A21               	clrf	btemp^0,c
  5689   010A28  5021               	movf	btemp^0,w,c
  5690   010A2A  1229               	iorwf	(btemp+8)^0,f,c
  5691   010A2C  5022               	movf	(btemp+1)^0,w,c
  5692   010A2E  122A               	iorwf	(btemp+9)^0,f,c
  5693   010A30  5023               	movf	(btemp+2)^0,w,c
  5694   010A32  122B               	iorwf	(btemp+10)^0,f,c
  5695   010A34  5024               	movf	(btemp+3)^0,w,c
  5696   010A36  122C               	iorwf	(btemp+11)^0,f,c
  5697   010A38  5025               	movf	(btemp+4)^0,w,c
  5698   010A3A  1029               	iorwf	(btemp+8)^0,w,c
  5699   010A3C  6E21               	movwf	btemp^0,c
  5700   010A3E  5026               	movf	(btemp+5)^0,w,c
  5701   010A40  102A               	iorwf	(btemp+9)^0,w,c
  5702   010A42  6E22               	movwf	(btemp+1)^0,c
  5703   010A44  5027               	movf	(btemp+6)^0,w,c
  5704   010A46  102B               	iorwf	(btemp+10)^0,w,c
  5705   010A48  6E23               	movwf	(btemp+2)^0,c
  5706   010A4A  5028               	movf	(btemp+7)^0,w,c
  5707   010A4C  102C               	iorwf	(btemp+11)^0,w,c
  5708   010A4E  6E24               	movwf	(btemp+3)^0,c
  5709                           
  5710                           ;stkvar	_rxObj @ sp[(-110)+-3]
  5711   010A50  0E8F               	movlw	-113
  5712   010A52  CFE3 FFD9          	movff	plusw1,fsr2l
  5713   010A56  0E90               	movlw	-112
  5714   010A58  CFE3 FFDA          	movff	plusw1,fsr2h
  5715   010A5C  C021  FFDE         	movff	btemp,postinc2
  5716   010A60  C022  FFDE         	movff	btemp+1,postinc2
  5717   010A64  C023  FFDE         	movff	btemp+2,postinc2
  5718   010A68  C024  FFDE         	movff	btemp+3,postinc2
  5719                           
  5720                           ;can/can.c: 1320:     }
  5721   010A6C  EFF8  F085         	goto	l4502
  5722   010A70                     l4500:
  5723                           
  5724                           ;can/can.c: 1322:     {;can/can.c: 1323:       uint32_t temp32 = ba[0] | ((uint32_t)ba[1
      +                          ] << 8) |
  5725                           ;stkvar	_ba @ sp[(-110)+4]
  5726   010A70  0E99               	movlw	153
  5727   010A72  24E1               	addwf	fsr1l,w,c
  5728   010A74  6ED9               	movwf	fsr2l,c
  5729   010A76  0EFF               	movlw	255
  5730   010A78  20E2               	addwfc	fsr1h,w,c
  5731   010A7A  6EDA               	movwf	fsr2h,c
  5732   010A7C  50DF               	movf	indf2,w,c
  5733   010A7E  6E2C               	movwf	(btemp+11)^0,c
  5734   010A80  0E1F               	movlw	31
  5735   010A82  162C               	andwf	(btemp+11)^0,f,c
  5736   010A84  C02C  F025         	movff	btemp+11,btemp+4
  5737   010A88  6A26               	clrf	(btemp+5)^0,c
  5738   010A8A  6A27               	clrf	(btemp+6)^0,c
  5739   010A8C  6A28               	clrf	(btemp+7)^0,c
  5740   010A8E  C025  F028         	movff	btemp+4,btemp+7
  5741   010A92  6A27               	clrf	(btemp+6)^0,c
  5742   010A94  6A26               	clrf	(btemp+5)^0,c
  5743   010A96  6A25               	clrf	(btemp+4)^0,c
  5744                           
  5745                           ;stkvar	_ba @ sp[(-110)+4]
  5746   010A98  0E97               	movlw	151
  5747   010A9A  24E1               	addwf	fsr1l,w,c
  5748   010A9C  6ED9               	movwf	fsr2l,c
  5749   010A9E  0EFF               	movlw	255
  5750   010AA0  20E2               	addwfc	fsr1h,w,c
  5751   010AA2  6EDA               	movwf	fsr2h,c
  5752   010AA4  50DF               	movf	indf2,w,c
  5753   010AA6  6E2C               	movwf	(btemp+11)^0,c
  5754   010AA8  C02C  F021         	movff	btemp+11,btemp
  5755   010AAC  6A22               	clrf	(btemp+1)^0,c
  5756   010AAE  6A23               	clrf	(btemp+2)^0,c
  5757   010AB0  6A24               	clrf	(btemp+3)^0,c
  5758   010AB2  C023  F024         	movff	btemp+2,btemp+3
  5759   010AB6  C022  F023         	movff	btemp+1,btemp+2
  5760   010ABA  C021  F022         	movff	btemp,btemp+1
  5761   010ABE  6A21               	clrf	btemp^0,c
  5762                           
  5763                           ;stkvar	_ba @ sp[(-110)+4]
  5764   010AC0  0E96               	movlw	-106
  5765   010AC2  50E3               	movf	plusw1,w,c
  5766   010AC4  6E29               	movwf	(btemp+8)^0,c
  5767   010AC6  6A2A               	clrf	(btemp+9)^0,c
  5768   010AC8  6A2B               	clrf	(btemp+10)^0,c
  5769   010ACA  6A2C               	clrf	(btemp+11)^0,c
  5770   010ACC  5021               	movf	btemp^0,w,c
  5771   010ACE  1229               	iorwf	(btemp+8)^0,f,c
  5772   010AD0  5022               	movf	(btemp+1)^0,w,c
  5773   010AD2  122A               	iorwf	(btemp+9)^0,f,c
  5774   010AD4  5023               	movf	(btemp+2)^0,w,c
  5775   010AD6  122B               	iorwf	(btemp+10)^0,f,c
  5776   010AD8  5024               	movf	(btemp+3)^0,w,c
  5777   010ADA  122C               	iorwf	(btemp+11)^0,f,c
  5778                           
  5779                           ;stkvar	_ba @ sp[(-110)+4]
  5780   010ADC  0E98               	movlw	152
  5781   010ADE  24E1               	addwf	fsr1l,w,c
  5782   010AE0  6ED9               	movwf	fsr2l,c
  5783   010AE2  0EFF               	movlw	255
  5784   010AE4  20E2               	addwfc	fsr1h,w,c
  5785   010AE6  6EDA               	movwf	fsr2h,c
  5786   010AE8  50DF               	movf	indf2,w,c
  5787   010AEA  6E21               	movwf	btemp^0,c
  5788   010AEC  6A22               	clrf	(btemp+1)^0,c
  5789   010AEE  6A23               	clrf	(btemp+2)^0,c
  5790   010AF0  6A24               	clrf	(btemp+3)^0,c
  5791   010AF2  C022  F024         	movff	btemp+1,btemp+3
  5792   010AF6  C021  F023         	movff	btemp,btemp+2
  5793   010AFA  6A22               	clrf	(btemp+1)^0,c
  5794   010AFC  6A21               	clrf	btemp^0,c
  5795   010AFE  5021               	movf	btemp^0,w,c
  5796   010B00  1229               	iorwf	(btemp+8)^0,f,c
  5797   010B02  5022               	movf	(btemp+1)^0,w,c
  5798   010B04  122A               	iorwf	(btemp+9)^0,f,c
  5799   010B06  5023               	movf	(btemp+2)^0,w,c
  5800   010B08  122B               	iorwf	(btemp+10)^0,f,c
  5801   010B0A  5024               	movf	(btemp+3)^0,w,c
  5802   010B0C  122C               	iorwf	(btemp+11)^0,f,c
  5803   010B0E  5025               	movf	(btemp+4)^0,w,c
  5804   010B10  1029               	iorwf	(btemp+8)^0,w,c
  5805   010B12  6E21               	movwf	btemp^0,c
  5806   010B14  5026               	movf	(btemp+5)^0,w,c
  5807   010B16  102A               	iorwf	(btemp+9)^0,w,c
  5808   010B18  6E22               	movwf	(btemp+1)^0,c
  5809   010B1A  5027               	movf	(btemp+6)^0,w,c
  5810   010B1C  102B               	iorwf	(btemp+10)^0,w,c
  5811   010B1E  6E23               	movwf	(btemp+2)^0,c
  5812   010B20  5028               	movf	(btemp+7)^0,w,c
  5813   010B22  102C               	iorwf	(btemp+11)^0,w,c
  5814   010B24  6E24               	movwf	(btemp+3)^0,c
  5815                           
  5816                           ;stkvar	_temp32 @ sp[(-110)+0]
  5817   010B26  0E92               	movlw	-110
  5818   010B28  C021  FFE3         	movff	btemp,plusw1
  5819   010B2C  0E93               	movlw	-109
  5820   010B2E  C022  FFE3         	movff	btemp+1,plusw1
  5821   010B32  0E94               	movlw	-108
  5822   010B34  C023  FFE3         	movff	btemp+2,plusw1
  5823   010B38  0E95               	movlw	-107
  5824   010B3A  C024  FFE3         	movff	btemp+3,plusw1
  5825                           
  5826                           ;can/can.c: 1326:       rxObj->bF.id.ID = ((temp32 & 0x000007FF) << 18) |
  5827                           ;stkvar	_temp32 @ sp[(-110)+0]
  5828   010B3E  0E92               	movlw	-110
  5829   010B40  CFE3 F029          	movff	plusw1,btemp+8
  5830   010B44  0E93               	movlw	-109
  5831   010B46  CFE3 F02A          	movff	plusw1,btemp+9
  5832   010B4A  0E94               	movlw	-108
  5833   010B4C  CFE3 F02B          	movff	plusw1,btemp+10
  5834   010B50  0E95               	movlw	-107
  5835   010B52  CFE3 F02C          	movff	plusw1,btemp+11
  5836   010B56  0E0C               	movlw	12
  5837   010B58  EFB3  F085         	goto	u2160
  5838   010B5C                     u2165:
  5839   010B5C  90D8               	bcf	status,0,c
  5840   010B5E  322C               	rrcf	(btemp+11)^0,f,c
  5841   010B60  322B               	rrcf	(btemp+10)^0,f,c
  5842   010B62  322A               	rrcf	(btemp+9)^0,f,c
  5843   010B64  3229               	rrcf	(btemp+8)^0,f,c
  5844   010B66                     u2160:
  5845   010B66  2EE8               	decfsz	wreg,f,c
  5846   010B68  EFAE  F085         	goto	u2165
  5847   010B6C  0EFF               	movlw	255
  5848   010B6E  1429               	andwf	(btemp+8)^0,w,c
  5849   010B70  6E25               	movwf	(btemp+4)^0,c
  5850   010B72  0EFF               	movlw	255
  5851   010B74  142A               	andwf	(btemp+9)^0,w,c
  5852   010B76  6E26               	movwf	(btemp+5)^0,c
  5853   010B78  0E03               	movlw	3
  5854   010B7A  142B               	andwf	(btemp+10)^0,w,c
  5855   010B7C  6E27               	movwf	(btemp+6)^0,c
  5856   010B7E  0E00               	movlw	0
  5857   010B80  142C               	andwf	(btemp+11)^0,w,c
  5858   010B82  6E28               	movwf	(btemp+7)^0,c
  5859                           
  5860                           ;stkvar	_temp32 @ sp[(-110)+0]
  5861   010B84  50E1               	movf	fsr1l,w,c
  5862   010B86  0F92               	addlw	-110
  5863   010B88  6ED9               	movwf	fsr2l,c
  5864   010B8A  50E2               	movf	fsr1h,w,c
  5865   010B8C  6EDA               	movwf	fsr2h,c
  5866   010B8E  0EFF               	movlw	255
  5867   010B90  22DA               	addwfc	fsr2h,f,c
  5868   010B92  0EFF               	movlw	255
  5869   010B94  14DE               	andwf	postinc2,w,c
  5870   010B96  6E29               	movwf	(btemp+8)^0,c
  5871   010B98  0E07               	movlw	7
  5872   010B9A  14DE               	andwf	postinc2,w,c
  5873   010B9C  6E2A               	movwf	(btemp+9)^0,c
  5874   010B9E  0E00               	movlw	0
  5875   010BA0  14DE               	andwf	postinc2,w,c
  5876   010BA2  6E2B               	movwf	(btemp+10)^0,c
  5877   010BA4  0E00               	movlw	0
  5878   010BA6  14DE               	andwf	postinc2,w,c
  5879   010BA8  6E2C               	movwf	(btemp+11)^0,c
  5880   010BAA  0E12               	movlw	18
  5881   010BAC                     u2175:
  5882   010BAC  90D8               	bcf	status,0,c
  5883   010BAE  3629               	rlcf	(btemp+8)^0,f,c
  5884   010BB0  362A               	rlcf	(btemp+9)^0,f,c
  5885   010BB2  362B               	rlcf	(btemp+10)^0,f,c
  5886   010BB4  362C               	rlcf	(btemp+11)^0,f,c
  5887   010BB6  2EE8               	decfsz	wreg,f,c
  5888   010BB8  EFD6  F085         	goto	u2175
  5889   010BBC  5025               	movf	(btemp+4)^0,w,c
  5890   010BBE  1029               	iorwf	(btemp+8)^0,w,c
  5891   010BC0  6E21               	movwf	btemp^0,c
  5892   010BC2  5026               	movf	(btemp+5)^0,w,c
  5893   010BC4  102A               	iorwf	(btemp+9)^0,w,c
  5894   010BC6  6E22               	movwf	(btemp+1)^0,c
  5895   010BC8  5027               	movf	(btemp+6)^0,w,c
  5896   010BCA  102B               	iorwf	(btemp+10)^0,w,c
  5897   010BCC  6E23               	movwf	(btemp+2)^0,c
  5898   010BCE  5028               	movf	(btemp+7)^0,w,c
  5899   010BD0  102C               	iorwf	(btemp+11)^0,w,c
  5900   010BD2  6E24               	movwf	(btemp+3)^0,c
  5901                           
  5902                           ;stkvar	_rxObj @ sp[(-110)+-3]
  5903   010BD4  0E8F               	movlw	-113
  5904   010BD6  CFE3 FFD9          	movff	plusw1,fsr2l
  5905   010BDA  0E90               	movlw	-112
  5906   010BDC  CFE3 FFDA          	movff	plusw1,fsr2h
  5907   010BE0  C021  FFDE         	movff	btemp,postinc2
  5908   010BE4  C022  FFDE         	movff	btemp+1,postinc2
  5909   010BE8  C023  FFDE         	movff	btemp+2,postinc2
  5910   010BEC  C024  FFDE         	movff	btemp+3,postinc2
  5911   010BF0                     l4502:
  5912                           
  5913                           ;can/can.c: 1330:     rxObj->bF.ctrl.ESI = ba[5] & 0x01;
  5914                           ;stkvar	_rxObj @ sp[(-110)+-3]
  5915   010BF0  0E8F               	movlw	-113
  5916   010BF2  CFE3 F02B          	movff	plusw1,btemp+10
  5917   010BF6  0E90               	movlw	-112
  5918   010BF8  CFE3 F02C          	movff	plusw1,btemp+11
  5919   010BFC  0E07               	movlw	7
  5920   010BFE  242B               	addwf	(btemp+10)^0,w,c
  5921   010C00  6ED9               	movwf	fsr2l,c
  5922   010C02  0E00               	movlw	0
  5923   010C04  202C               	addwfc	(btemp+11)^0,w,c
  5924   010C06  6EDA               	movwf	fsr2h,c
  5925                           
  5926                           ;stkvar	_ba @ sp[(-110)+4]
  5927   010C08  0E9B               	movlw	155
  5928   010C0A  24E1               	addwf	fsr1l,w,c
  5929   010C0C  6EE9               	movwf	fsr0l,c
  5930   010C0E  0EFF               	movlw	255
  5931   010C10  20E2               	addwfc	fsr1h,w,c
  5932   010C12  6EEA               	movwf	fsr0h,c
  5933   010C14  50EF               	movf	indf0,w,c
  5934   010C16  0B01               	andlw	1
  5935   010C18  6EDF               	movwf	indf2,c
  5936   010C1A                     
  5937                           ;can/can.c: 1331:     rxObj->bF.ctrl.FilterHit = ba[5] >> 3;
  5938                           ;stkvar	_rxObj @ sp[(-110)+-3]
  5939   010C1A  0E8F               	movlw	-113
  5940   010C1C  CFE3 F02B          	movff	plusw1,btemp+10
  5941   010C20  0E90               	movlw	-112
  5942   010C22  CFE3 F02C          	movff	plusw1,btemp+11
  5943   010C26  0E08               	movlw	8
  5944   010C28  242B               	addwf	(btemp+10)^0,w,c
  5945   010C2A  6ED9               	movwf	fsr2l,c
  5946   010C2C  0E00               	movlw	0
  5947   010C2E  202C               	addwfc	(btemp+11)^0,w,c
  5948   010C30  6EDA               	movwf	fsr2h,c
  5949                           
  5950                           ;stkvar	_ba @ sp[(-110)+4]
  5951   010C32  0E9B               	movlw	155
  5952   010C34  24E1               	addwf	fsr1l,w,c
  5953   010C36  6EE9               	movwf	fsr0l,c
  5954   010C38  0EFF               	movlw	255
  5955   010C3A  20E2               	addwfc	fsr1h,w,c
  5956   010C3C  6EEA               	movwf	fsr0h,c
  5957   010C3E  50EF               	movf	indf0,w,c
  5958   010C40  6E2C               	movwf	(btemp+11)^0,c
  5959   010C42  90D8               	bcf	status,0,c
  5960   010C44  322C               	rrcf	(btemp+11)^0,f,c
  5961   010C46  90D8               	bcf	status,0,c
  5962   010C48  322C               	rrcf	(btemp+11)^0,f,c
  5963   010C4A  90D8               	bcf	status,0,c
  5964   010C4C  302C               	rrcf	(btemp+11)^0,w,c
  5965   010C4E  6EDF               	movwf	indf2,c
  5966   010C50                     
  5967                           ;can/can.c: 1332:     if (ciFifoCon.rxBF.RxTimeStampEnable) {
  5968                           ;stkvar	_ciFifoCon @ sp[(-110)+92]
  5969   010C50  50E1               	movf	fsr1l,w,c
  5970   010C52  0FEE               	addlw	-18
  5971   010C54  6ED9               	movwf	fsr2l,c
  5972   010C56  50E2               	movf	fsr1h,w,c
  5973   010C58  6EDA               	movwf	fsr2h,c
  5974   010C5A  0EFF               	movlw	255
  5975   010C5C  22DA               	addwfc	fsr2h,f,c
  5976   010C5E  AADF               	btfss	indf2,5,c
  5977   010C60  EF34  F086         	goto	u2181
  5978   010C64  EF36  F086         	goto	u2180
  5979   010C68                     u2181:
  5980   010C68  EFC4  F086         	goto	l4526
  5981   010C6C                     u2180:
  5982   010C6C                     
  5983                           ;can/can.c: 1333:         myReg.byte[0] = ba[8];
  5984                           ;stkvar	_ba @ sp[(-110)+4]
  5985   010C6C  0E9E               	movlw	158
  5986   010C6E  24E1               	addwf	fsr1l,w,c
  5987   010C70  6ED9               	movwf	fsr2l,c
  5988   010C72  0EFF               	movlw	255
  5989   010C74  20E2               	addwfc	fsr1h,w,c
  5990   010C76  6EDA               	movwf	fsr2h,c
  5991   010C78  50DF               	movf	indf2,w,c
  5992   010C7A  6E2C               	movwf	(btemp+11)^0,c
  5993                           
  5994                           ;stkvar	_myReg @ sp[(-110)+97]
  5995   010C7C  0EF3               	movlw	-13
  5996   010C7E  C02C  FFE3         	movff	btemp+11,plusw1
  5997   010C82                     
  5998                           ;can/can.c: 1334:         myReg.byte[1] = ba[9];
  5999                           ;stkvar	_ba @ sp[(-110)+4]
  6000   010C82  0E9F               	movlw	159
  6001   010C84  24E1               	addwf	fsr1l,w,c
  6002   010C86  6ED9               	movwf	fsr2l,c
  6003   010C88  0EFF               	movlw	255
  6004   010C8A  20E2               	addwfc	fsr1h,w,c
  6005   010C8C  6EDA               	movwf	fsr2h,c
  6006                           
  6007                           ;stkvar	_myReg @ sp[(-110)+97]
  6008   010C8E  0EF4               	movlw	244
  6009   010C90  24E1               	addwf	fsr1l,w,c
  6010   010C92  6EE9               	movwf	fsr0l,c
  6011   010C94  0EFF               	movlw	255
  6012   010C96  20E2               	addwfc	fsr1h,w,c
  6013   010C98  6EEA               	movwf	fsr0h,c
  6014   010C9A  CFDF FFEF          	movff	indf2,indf0
  6015   010C9E                     
  6016                           ;can/can.c: 1335:         myReg.byte[2] = ba[10];
  6017                           ;stkvar	_ba @ sp[(-110)+4]
  6018   010C9E  0EA0               	movlw	160
  6019   010CA0  24E1               	addwf	fsr1l,w,c
  6020   010CA2  6ED9               	movwf	fsr2l,c
  6021   010CA4  0EFF               	movlw	255
  6022   010CA6  20E2               	addwfc	fsr1h,w,c
  6023   010CA8  6EDA               	movwf	fsr2h,c
  6024                           
  6025                           ;stkvar	_myReg @ sp[(-110)+97]
  6026   010CAA  0EF5               	movlw	245
  6027   010CAC  24E1               	addwf	fsr1l,w,c
  6028   010CAE  6EE9               	movwf	fsr0l,c
  6029   010CB0  0EFF               	movlw	255
  6030   010CB2  20E2               	addwfc	fsr1h,w,c
  6031   010CB4  6EEA               	movwf	fsr0h,c
  6032   010CB6  CFDF FFEF          	movff	indf2,indf0
  6033   010CBA                     
  6034                           ;can/can.c: 1336:         myReg.byte[3] = ba[11];
  6035                           ;stkvar	_ba @ sp[(-110)+4]
  6036   010CBA  0EA1               	movlw	161
  6037   010CBC  24E1               	addwf	fsr1l,w,c
  6038   010CBE  6ED9               	movwf	fsr2l,c
  6039   010CC0  0EFF               	movlw	255
  6040   010CC2  20E2               	addwfc	fsr1h,w,c
  6041   010CC4  6EDA               	movwf	fsr2h,c
  6042                           
  6043                           ;stkvar	_myReg @ sp[(-110)+97]
  6044   010CC6  0EF6               	movlw	246
  6045   010CC8  24E1               	addwf	fsr1l,w,c
  6046   010CCA  6EE9               	movwf	fsr0l,c
  6047   010CCC  0EFF               	movlw	255
  6048   010CCE  20E2               	addwfc	fsr1h,w,c
  6049   010CD0  6EEA               	movwf	fsr0h,c
  6050   010CD2  CFDF FFEF          	movff	indf2,indf0
  6051   010CD6                     
  6052                           ;can/can.c: 1337:         rxObj->bF.timeStamp = myReg.word;
  6053                           ;stkvar	_myReg @ sp[(-110)+97]
  6054   010CD6  50E1               	movf	fsr1l,w,c
  6055   010CD8  0FF3               	addlw	-13
  6056   010CDA  6ED9               	movwf	fsr2l,c
  6057   010CDC  50E2               	movf	fsr1h,w,c
  6058   010CDE  6EDA               	movwf	fsr2h,c
  6059   010CE0  0EFF               	movlw	255
  6060   010CE2  22DA               	addwfc	fsr2h,f,c
  6061                           
  6062                           ;stkvar	_rxObj @ sp[(-110)+-3]
  6063   010CE4  0E8F               	movlw	-113
  6064   010CE6  CFE3 F02B          	movff	plusw1,btemp+10
  6065   010CEA  0E90               	movlw	-112
  6066   010CEC  CFE3 F02C          	movff	plusw1,btemp+11
  6067   010CF0  0E09               	movlw	9
  6068   010CF2  242B               	addwf	(btemp+10)^0,w,c
  6069   010CF4  6EE9               	movwf	fsr0l,c
  6070   010CF6  0E00               	movlw	0
  6071   010CF8  202C               	addwfc	(btemp+11)^0,w,c
  6072   010CFA  6EEA               	movwf	fsr0h,c
  6073   010CFC  CFDE FFEE          	movff	postinc2,postinc0
  6074   010D00  CFDE FFEE          	movff	postinc2,postinc0
  6075   010D04  CFDE FFEE          	movff	postinc2,postinc0
  6076   010D08  CFDE FFEE          	movff	postinc2,postinc0
  6077   010D0C                     
  6078                           ;can/can.c: 1340:         for (i = 0; i < nBytes; i++) {
  6079                           ;stkvar	_i @ sp[(-110)+107]
  6080   010D0C  0EFD               	movlw	-3
  6081   010D0E  6AE3               	clrf	plusw1,c
  6082   010D10  EFB1  F086         	goto	l4524
  6083   010D14                     l4520:
  6084                           
  6085                           ;can/can.c: 1341:             rxd[i] = ba[i + 12];
  6086                           ;stkvar	_i @ sp[(-110)+107]
  6087   010D14  0EFD               	movlw	-3
  6088   010D16  50E3               	movf	plusw1,w,c
  6089   010D18  6E2B               	movwf	(btemp+10)^0,c
  6090   010D1A  6A2C               	clrf	(btemp+11)^0,c
  6091   010D1C  0E0C               	movlw	12
  6092   010D1E  262B               	addwf	(btemp+10)^0,f,c
  6093   010D20  0E00               	movlw	0
  6094   010D22  222C               	addwfc	(btemp+11)^0,f,c
  6095                           
  6096                           ;stkvar	_ba @ sp[(-110)+4]
  6097   010D24  0E96               	movlw	150
  6098   010D26  24E1               	addwf	fsr1l,w,c
  6099   010D28  6E29               	movwf	(btemp+8)^0,c
  6100   010D2A  0EFF               	movlw	255
  6101   010D2C  20E2               	addwfc	fsr1h,w,c
  6102   010D2E  6E2A               	movwf	(btemp+9)^0,c
  6103   010D30  502B               	movf	(btemp+10)^0,w,c
  6104   010D32  2429               	addwf	(btemp+8)^0,w,c
  6105   010D34  6ED9               	movwf	fsr2l,c
  6106   010D36  502C               	movf	(btemp+11)^0,w,c
  6107   010D38  202A               	addwfc	(btemp+9)^0,w,c
  6108   010D3A  6EDA               	movwf	fsr2h,c
  6109                           
  6110                           ;stkvar	_i @ sp[(-110)+107]
  6111   010D3C  0EFD               	movlw	-3
  6112   010D3E  CFE3 F02C          	movff	plusw1,btemp+11
  6113                           
  6114                           ;stkvar	_rxd @ sp[(-110)+-5]
  6115   010D42  0E8D               	movlw	-115
  6116   010D44  CFE3 F029          	movff	plusw1,btemp+8
  6117   010D48  0E8E               	movlw	-114
  6118   010D4A  CFE3 F02A          	movff	plusw1,btemp+9
  6119   010D4E  502C               	movf	(btemp+11)^0,w,c
  6120   010D50  2429               	addwf	(btemp+8)^0,w,c
  6121   010D52  6EE9               	movwf	fsr0l,c
  6122   010D54  0E00               	movlw	0
  6123   010D56  202A               	addwfc	(btemp+9)^0,w,c
  6124   010D58  6EEA               	movwf	fsr0h,c
  6125   010D5A  CFDF FFEF          	movff	indf2,indf0
  6126   010D5E                     
  6127                           ;can/can.c: 1342:         }
  6128                           ;stkvar	_i @ sp[(-110)+107]
  6129   010D5E  0EFD               	movlw	-3
  6130   010D60  2AE3               	incf	plusw1,f,c
  6131   010D62                     l4524:
  6132                           
  6133                           ;stkvar	_nBytes @ sp[(-110)+-6]
  6134                           ;stkvar	_i @ sp[(-110)+107]
  6135   010D62  50E1               	movf	fsr1l,w,c
  6136   010D64  0FFD               	addlw	-3
  6137   010D66  6ED9               	movwf	fsr2l,c
  6138   010D68  50E2               	movf	fsr1h,w,c
  6139   010D6A  6EDA               	movwf	fsr2h,c
  6140   010D6C  0EFF               	movlw	255
  6141   010D6E  22DA               	addwfc	fsr2h,f,c
  6142   010D70  0E8C               	movlw	-116
  6143   010D72  50E3               	movf	plusw1,w,c
  6144   010D74  5CDE               	subwf	postinc2,w,c
  6145   010D76  A0D8               	btfss	status,0,c
  6146   010D78  EFC0  F086         	goto	u2191
  6147   010D7C  EFC2  F086         	goto	u2190
  6148   010D80                     u2191:
  6149   010D80  EF8A  F086         	goto	l4520
  6150   010D84                     u2190:
  6151   010D84  EF10  F087         	goto	l4536
  6152   010D88                     l4526:
  6153                           
  6154                           ;can/can.c: 1344:         rxObj->bF.timeStamp = 0;
  6155                           ;stkvar	_rxObj @ sp[(-110)+-3]
  6156   010D88  0E8F               	movlw	-113
  6157   010D8A  CFE3 F02B          	movff	plusw1,btemp+10
  6158   010D8E  0E90               	movlw	-112
  6159   010D90  CFE3 F02C          	movff	plusw1,btemp+11
  6160   010D94  0E09               	movlw	9
  6161   010D96  242B               	addwf	(btemp+10)^0,w,c
  6162   010D98  6ED9               	movwf	fsr2l,c
  6163   010D9A  0E00               	movlw	0
  6164   010D9C  202C               	addwfc	(btemp+11)^0,w,c
  6165   010D9E  6EDA               	movwf	fsr2h,c
  6166   010DA0  6ADE               	clrf	postinc2,c
  6167   010DA2  6ADE               	clrf	postinc2,c
  6168   010DA4  6ADE               	clrf	postinc2,c
  6169   010DA6  6ADD               	clrf	postdec2,c
  6170   010DA8                     
  6171                           ;can/can.c: 1347:         for (i = 0; i < nBytes; i++) {
  6172                           ;stkvar	_i @ sp[(-110)+107]
  6173   010DA8  0EFD               	movlw	-3
  6174   010DAA  6AE3               	clrf	plusw1,c
  6175   010DAC  EFFF  F086         	goto	l4534
  6176   010DB0                     l4530:
  6177                           
  6178                           ;can/can.c: 1348:             rxd[i] = ba[i + 8];
  6179                           ;stkvar	_i @ sp[(-110)+107]
  6180   010DB0  0EFD               	movlw	-3
  6181   010DB2  50E3               	movf	plusw1,w,c
  6182   010DB4  6E2B               	movwf	(btemp+10)^0,c
  6183   010DB6  6A2C               	clrf	(btemp+11)^0,c
  6184   010DB8  0E08               	movlw	8
  6185   010DBA  262B               	addwf	(btemp+10)^0,f,c
  6186   010DBC  0E00               	movlw	0
  6187   010DBE  222C               	addwfc	(btemp+11)^0,f,c
  6188                           
  6189                           ;stkvar	_ba @ sp[(-110)+4]
  6190   010DC0  0E96               	movlw	150
  6191   010DC2  24E1               	addwf	fsr1l,w,c
  6192   010DC4  6E29               	movwf	(btemp+8)^0,c
  6193   010DC6  0EFF               	movlw	255
  6194   010DC8  20E2               	addwfc	fsr1h,w,c
  6195   010DCA  6E2A               	movwf	(btemp+9)^0,c
  6196   010DCC  502B               	movf	(btemp+10)^0,w,c
  6197   010DCE  2429               	addwf	(btemp+8)^0,w,c
  6198   010DD0  6ED9               	movwf	fsr2l,c
  6199   010DD2  502C               	movf	(btemp+11)^0,w,c
  6200   010DD4  202A               	addwfc	(btemp+9)^0,w,c
  6201   010DD6  6EDA               	movwf	fsr2h,c
  6202                           
  6203                           ;stkvar	_i @ sp[(-110)+107]
  6204   010DD8  0EFD               	movlw	-3
  6205   010DDA  CFE3 F02C          	movff	plusw1,btemp+11
  6206                           
  6207                           ;stkvar	_rxd @ sp[(-110)+-5]
  6208   010DDE  0E8D               	movlw	-115
  6209   010DE0  CFE3 F029          	movff	plusw1,btemp+8
  6210   010DE4  0E8E               	movlw	-114
  6211   010DE6  CFE3 F02A          	movff	plusw1,btemp+9
  6212   010DEA  502C               	movf	(btemp+11)^0,w,c
  6213   010DEC  2429               	addwf	(btemp+8)^0,w,c
  6214   010DEE  6EE9               	movwf	fsr0l,c
  6215   010DF0  0E00               	movlw	0
  6216   010DF2  202A               	addwfc	(btemp+9)^0,w,c
  6217   010DF4  6EEA               	movwf	fsr0h,c
  6218   010DF6  CFDF FFEF          	movff	indf2,indf0
  6219   010DFA                     
  6220                           ;can/can.c: 1349:         }
  6221                           ;stkvar	_i @ sp[(-110)+107]
  6222   010DFA  0EFD               	movlw	-3
  6223   010DFC  2AE3               	incf	plusw1,f,c
  6224   010DFE                     l4534:
  6225                           
  6226                           ;stkvar	_nBytes @ sp[(-110)+-6]
  6227                           ;stkvar	_i @ sp[(-110)+107]
  6228   010DFE  50E1               	movf	fsr1l,w,c
  6229   010E00  0FFD               	addlw	-3
  6230   010E02  6ED9               	movwf	fsr2l,c
  6231   010E04  50E2               	movf	fsr1h,w,c
  6232   010E06  6EDA               	movwf	fsr2h,c
  6233   010E08  0EFF               	movlw	255
  6234   010E0A  22DA               	addwfc	fsr2h,f,c
  6235   010E0C  0E8C               	movlw	-116
  6236   010E0E  50E3               	movf	plusw1,w,c
  6237   010E10  5CDE               	subwf	postinc2,w,c
  6238   010E12  A0D8               	btfss	status,0,c
  6239   010E14  EF0E  F087         	goto	u2201
  6240   010E18  EF10  F087         	goto	u2200
  6241   010E1C                     u2201:
  6242   010E1C  EFD8  F086         	goto	l4530
  6243   010E20                     u2200:
  6244   010E20                     l4536:
  6245                           
  6246                           ;stkvar	_channel @ sp[(-110)+-1]
  6247   010E20  0E91               	movlw	-111
  6248   010E22  50E3               	movf	plusw1,w,c
  6249   010E24  6EE6               	movwf	postinc1,c
  6250   010E26  ECC1  F0A1         	call	_DRV_CANFDSPI_ReceiveChannelUpdate	;wreg free
  6251   010E2A                     l357:
  6252                           
  6253                           ; _DRV_CANFDSPI_ReceiveMessageGet: autosize = 110, savesize = 0, parsavesize = 0, tempsi
      +                          ze = 0 parsize = 6, argsize = 6, vargsize = 0
  6254   010E2A  0E8C               	movlw	140
  6255   010E2C  26E1               	addwf	fsr1l,f,c
  6256   010E2E  0EFF               	movlw	255
  6257   010E30  22E2               	addwfc	fsr1h,f,c
  6258   010E32  0012               	return		;funcret
  6259   010E34                     __end_of_DRV_CANFDSPI_ReceiveMessageGet:
  6260                           	callstack 0
  6261                           
  6262 ;; *************** function _DRV_CANFDSPI_ReceiveChannelUpdate *****************
  6263 ;; Defined at:
  6264 ;;		line 1378 in file "can/can.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;  channel         1  [STACK] enum E5287
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
  6269 ;;  a               2  [STACK] unsigned short 
  6270 ;;  spiTransferE    1  [STACK] char 
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  1  [STACK] char 
  6273 ;; Registers used:
  6274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6284 ;;Total ram usage:        0 bytes
  6285 ;; Hardware stack levels used: 1
  6286 ;; Hardware stack levels required when called: 9
  6287 ;; This function calls:
  6288 ;;		_DRV_CANFDSPI_WriteByte
  6289 ;; This function is called by:
  6290 ;;		_DRV_CANFDSPI_ReceiveMessageGet
  6291 ;; This function uses a reentrant model
  6292 ;;
  6293                           
  6294                           	psect	text13
  6295   014382                     __ptext13:
  6296                           	callstack 0
  6297   014382                     _DRV_CANFDSPI_ReceiveChannelUpdate:
  6298                           	callstack 0
  6299                           
  6300                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6301   014382  0E08               	movlw	8
  6302   014384  26E1               	addwf	fsr1l,f,c
  6303   014386  0E00               	movlw	0
  6304   014388  22E2               	addwfc	fsr1h,f,c
  6305   01438A                     
  6306                           ;can/can.c: 1384:     ciFifoCon.word = 0;
  6307                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  6308   01438A  0EF8               	movlw	-8
  6309   01438C  6AE3               	clrf	plusw1,c
  6310   01438E  0EF9               	movlw	-7
  6311   014390  6AE3               	clrf	plusw1,c
  6312   014392  0EFA               	movlw	-6
  6313   014394  6AE3               	clrf	plusw1,c
  6314   014396  0EFB               	movlw	-5
  6315   014398  6AE3               	clrf	plusw1,c
  6316   01439A                     
  6317                           ;can/can.c: 1387:     a = 0x050 + (channel * (3*4)) + 1;
  6318                           ;stkvar	_channel @ sp[(-8)+-1]
  6319   01439A  0EF7               	movlw	-9
  6320   01439C  50E3               	movf	plusw1,w,c
  6321   01439E  0D0C               	mullw	12
  6322   0143A0  0E51               	movlw	81
  6323   0143A2  26F3               	addwf	243,f,c
  6324   0143A4  0E00               	movlw	0
  6325   0143A6  22F4               	addwfc	244,f,c
  6326                           
  6327                           ;stkvar	_a @ sp[(-8)+5]
  6328   0143A8  0EFD               	movlw	-3
  6329   0143AA  CFF3 FFE3          	movff	prodl,plusw1
  6330   0143AE  0EFE               	movlw	-2
  6331   0143B0  CFF4 FFE3          	movff	prodh,plusw1
  6332   0143B4                     
  6333                           ;can/can.c: 1388:     ciFifoCon.rxBF.UINC = 1;
  6334                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  6335   0143B4  0EF9               	movlw	249
  6336   0143B6  24E1               	addwf	fsr1l,w,c
  6337   0143B8  6ED9               	movwf	fsr2l,c
  6338   0143BA  0EFF               	movlw	255
  6339   0143BC  20E2               	addwfc	fsr1h,w,c
  6340   0143BE  6EDA               	movwf	fsr2h,c
  6341   0143C0  80DF               	bsf	indf2,0,c
  6342   0143C2                     
  6343                           ;can/can.c: 1391:     spiTransferError = DRV_CANFDSPI_WriteByte( a, ciFifoCon.byte[1]);
  6344                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  6345   0143C2  0EF9               	movlw	249
  6346   0143C4  24E1               	addwf	fsr1l,w,c
  6347   0143C6  6ED9               	movwf	fsr2l,c
  6348   0143C8  0EFF               	movlw	255
  6349   0143CA  20E2               	addwfc	fsr1h,w,c
  6350   0143CC  6EDA               	movwf	fsr2h,c
  6351   0143CE  50DF               	movf	indf2,w,c
  6352   0143D0  6EE6               	movwf	postinc1,c
  6353                           
  6354                           ;stkvar	_a @ sp[(-9)+5]
  6355   0143D2  0EFC               	movlw	-4
  6356   0143D4  CFE3 FFE6          	movff	plusw1,postinc1
  6357   0143D8  CFE3 FFE6          	movff	plusw1,postinc1
  6358   0143DC  EC21  F0A3         	call	_DRV_CANFDSPI_WriteByte	;wreg free
  6359                           
  6360                           ;stkvar	_spiTransferError @ sp[(-8)+7]
  6361   0143E0  0EFF               	movlw	-1
  6362   0143E2  C021  FFE3         	movff	btemp,plusw1
  6363   0143E6                     
  6364                           ;can/can.c: 1393:     return spiTransferError;
  6365                           ;stkvar	_spiTransferError @ sp[(-8)+7]
  6366   0143E6  0EFF               	movlw	-1
  6367   0143E8  CFE3 F021          	movff	plusw1,btemp
  6368   0143EC                     
  6369                           ; _DRV_CANFDSPI_ReceiveChannelUpdate: autosize = 8, savesize = 0, parsavesize = 0, temps
      +                          ize = 0 parsize = 1, argsize = 1, vargsize = 0
  6370   0143EC  0EF7               	movlw	247
  6371   0143EE  26E1               	addwf	fsr1l,f,c
  6372   0143F0  0EFF               	movlw	255
  6373   0143F2  22E2               	addwfc	fsr1h,f,c
  6374   0143F4  0012               	return		;funcret
  6375   0143F6                     __end_of_DRV_CANFDSPI_ReceiveChannelUpdate:
  6376                           	callstack 0
  6377                           
  6378 ;; *************** function _DRV_CANFDSPI_ReadByteArray *****************
  6379 ;; Defined at:
  6380 ;;		line 356 in file "can/can.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;  address         2  [STACK] unsigned short 
  6383 ;;  rxd             2  [STACK] PTR unsigned char 
  6384 ;;		 -> ba(12), ba(76), 
  6385 ;;  nBytes          2  [STACK] unsigned short 
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;  i               2  [STACK] unsigned short 
  6388 ;;  spiTransferS    2  [STACK] unsigned short 
  6389 ;;  spiTransferE    1  [STACK] char 
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  1  [STACK] char 
  6392 ;; Registers used:
  6393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;Total ram usage:        0 bytes
  6404 ;; Hardware stack levels used: 1
  6405 ;; Hardware stack levels required when called: 8
  6406 ;; This function calls:
  6407 ;;		_SpiTransfer
  6408 ;; This function is called by:
  6409 ;;		_DRV_CANFDSPI_ReceiveMessageGet
  6410 ;; This function uses a reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text14
  6414   01263A                     __ptext14:
  6415                           	callstack 0
  6416   01263A                     _DRV_CANFDSPI_ReadByteArray:
  6417                           	callstack 0
  6418                           
  6419                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6420   01263A  0E05               	movlw	5
  6421   01263C  26E1               	addwf	fsr1l,f,c
  6422   01263E  0E00               	movlw	0
  6423   012640  22E2               	addwfc	fsr1h,f,c
  6424   012642                     
  6425                           ;can/can.c: 356: int8_t DRV_CANFDSPI_ReadByteArray(uint16_t address,;can/can.c: 357:    
      +                               uint8_t *rxd, uint16_t nBytes);can/can.c: 358: {;can/can.c: 359:     uint16_t i;;ca
      +                          n/can.c: 360:     uint16_t spiTransferSize = nBytes + 2;
  6426                           ;stkvar	_nBytes @ sp[(-5)+-6]
  6427   012642  0EF5               	movlw	-11
  6428   012644  50E3               	movf	plusw1,w,c
  6429   012646  0F02               	addlw	2
  6430   012648  6E2B               	movwf	(btemp+10)^0,c
  6431   01264A  0EF6               	movlw	-10
  6432   01264C  CFE3 F02C          	movff	plusw1,btemp+11
  6433   012650  0E00               	movlw	0
  6434   012652  222C               	addwfc	(btemp+11)^0,f,c
  6435                           
  6436                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  6437   012654  0EFD               	movlw	-3
  6438   012656  C02B  FFE3         	movff	btemp+10,plusw1
  6439   01265A  0EFE               	movlw	-2
  6440   01265C  C02C  FFE3         	movff	btemp+11,plusw1
  6441   012660                     
  6442                           ;can/can.c: 364:     spiTransmitBuffer[0] = (uint8_t) ((0x03 << 4) + ((address >> 8) & 0
      +                          xF));
  6443                           ;stkvar	_address @ sp[(-5)+-2]
  6444   012660  0EFA               	movlw	250
  6445   012662  24E1               	addwf	fsr1l,w,c
  6446   012664  6ED9               	movwf	fsr2l,c
  6447   012666  0EFF               	movlw	255
  6448   012668  20E2               	addwfc	fsr1h,w,c
  6449   01266A  6EDA               	movwf	fsr2h,c
  6450   01266C  50DF               	movf	indf2,w,c
  6451   01266E  0B0F               	andlw	15
  6452   012670  0F30               	addlw	48
  6453   012672  0101               	movlb	1	; () banked
  6454   012674  6F00               	movwf	_spiTransmitBuffer& (0+255),b
  6455   012676                     
  6456                           ; BSR set to: 1
  6457                           ;can/can.c: 365:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
  6458                           ;stkvar	_address @ sp[(-5)+-2]
  6459   012676  0EF9               	movlw	-7
  6460   012678  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
  6461   01267C                     
  6462                           ; BSR set to: 1
  6463                           ;can/can.c: 368:     for (i = 2; i < spiTransferSize; i++) {
  6464   01267C  0E02               	movlw	2
  6465   01267E  6E2B               	movwf	(btemp+10)^0,c
  6466   012680  0E00               	movlw	0
  6467   012682  6E2C               	movwf	(btemp+11)^0,c
  6468                           
  6469                           ;stkvar	_i @ sp[(-5)+0]
  6470   012684  0EFB               	movlw	-5
  6471   012686  C02B  FFE3         	movff	btemp+10,plusw1
  6472   01268A  0EFC               	movlw	-4
  6473   01268C  C02C  FFE3         	movff	btemp+11,plusw1
  6474   012690  EF66  F093         	goto	l4356
  6475   012694                     l4352:
  6476                           
  6477                           ;can/can.c: 369:         spiTransmitBuffer[i] = 0;
  6478                           ;stkvar	_i @ sp[(-5)+0]
  6479   012694  0EFB               	movlw	-5
  6480   012696  CFE3 F02B          	movff	plusw1,btemp+10
  6481   01269A  0EFC               	movlw	-4
  6482   01269C  CFE3 F02C          	movff	plusw1,btemp+11
  6483   0126A0  0E00               	movlw	low _spiTransmitBuffer
  6484   0126A2  242B               	addwf	(btemp+10)^0,w,c
  6485   0126A4  6ED9               	movwf	fsr2l,c
  6486   0126A6  0E01               	movlw	high _spiTransmitBuffer
  6487   0126A8  202C               	addwfc	(btemp+11)^0,w,c
  6488   0126AA  6EDA               	movwf	fsr2h,c
  6489   0126AC  6ADF               	clrf	indf2,c
  6490   0126AE                     
  6491                           ;can/can.c: 370:     }
  6492                           ;stkvar	_i @ sp[(-5)+0]
  6493   0126AE  0EFB               	movlw	-5
  6494   0126B0  50E3               	movf	plusw1,w,c
  6495   0126B2  0F01               	addlw	1
  6496   0126B4  6E21               	movwf	btemp^0,c
  6497   0126B6  0EFB               	movlw	-5
  6498   0126B8  C021  FFE3         	movff	btemp,plusw1
  6499   0126BC  6A21               	clrf	btemp^0,c
  6500   0126BE  0EFC               	movlw	-4
  6501   0126C0  50E3               	movf	plusw1,w,c
  6502   0126C2  2021               	addwfc	btemp^0,w,c
  6503   0126C4  6E21               	movwf	btemp^0,c
  6504   0126C6  0EFC               	movlw	-4
  6505   0126C8  C021  FFE3         	movff	btemp,plusw1
  6506   0126CC                     l4356:
  6507                           
  6508                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  6509   0126CC  0EFD               	movlw	-3
  6510   0126CE  CFE3 F02B          	movff	plusw1,btemp+10
  6511   0126D2  0EFE               	movlw	-2
  6512   0126D4  CFE3 F02C          	movff	plusw1,btemp+11
  6513                           
  6514                           ;stkvar	_i @ sp[(-5)+0]
  6515   0126D8  0EFB               	movlw	-5
  6516   0126DA  CFE3 F029          	movff	plusw1,btemp+8
  6517   0126DE  0EFC               	movlw	-4
  6518   0126E0  CFE3 F02A          	movff	plusw1,btemp+9
  6519   0126E4  502B               	movf	(btemp+10)^0,w,c
  6520   0126E6  5C29               	subwf	(btemp+8)^0,w,c
  6521   0126E8  502C               	movf	(btemp+11)^0,w,c
  6522   0126EA  582A               	subwfb	(btemp+9)^0,w,c
  6523   0126EC  A0D8               	btfss	status,0,c
  6524   0126EE  EF7B  F093         	goto	u2001
  6525   0126F2  EF7D  F093         	goto	u2000
  6526   0126F6                     u2001:
  6527   0126F6  EF4A  F093         	goto	l4352
  6528   0126FA                     u2000:
  6529   0126FA                     
  6530                           ;can/can.c: 372:     spiTransferError = SpiTransfer(spiTransmitBuffer, spiReceiveBuffer,
      +                           spiTransferSize);
  6531                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  6532   0126FA  0EFD               	movlw	-3
  6533   0126FC  CFE3 FFE6          	movff	plusw1,postinc1
  6534   012700  CFE3 FFE6          	movff	plusw1,postinc1
  6535   012704  0E00               	movlw	low _spiReceiveBuffer
  6536   012706  6EE6               	movwf	postinc1,c
  6537   012708  0E02               	movlw	high _spiReceiveBuffer
  6538   01270A  6EE6               	movwf	postinc1,c
  6539   01270C  0E00               	movlw	low _spiTransmitBuffer
  6540   01270E  6EE6               	movwf	postinc1,c
  6541   012710  0E01               	movlw	high _spiTransmitBuffer
  6542   012712  6EE6               	movwf	postinc1,c
  6543   012714  EC8E  F09D         	call	_SpiTransfer	;wreg free
  6544                           
  6545                           ;stkvar	_spiTransferError @ sp[(-5)+4]
  6546   012718  0EFF               	movlw	-1
  6547   01271A  C021  FFE3         	movff	btemp,plusw1
  6548   01271E                     
  6549                           ;can/can.c: 375:     for (i = 0; i < nBytes; i++) {
  6550                           ;stkvar	_i @ sp[(-5)+0]
  6551   01271E  0EFB               	movlw	-5
  6552   012720  6AE3               	clrf	plusw1,c
  6553   012722  0EFC               	movlw	-4
  6554   012724  6AE3               	clrf	plusw1,c
  6555   012726  EFC4  F093         	goto	l4366
  6556   01272A                     l4362:
  6557                           
  6558                           ;can/can.c: 376:         rxd[i] = spiReceiveBuffer[i + 2];
  6559                           ;stkvar	_i @ sp[(-5)+0]
  6560   01272A  0EFB               	movlw	-5
  6561   01272C  CFE3 F02B          	movff	plusw1,btemp+10
  6562   012730  0EFC               	movlw	-4
  6563   012732  CFE3 F02C          	movff	plusw1,btemp+11
  6564   012736  0E02               	movlw	low (_spiReceiveBuffer+2)
  6565   012738  242B               	addwf	(btemp+10)^0,w,c
  6566   01273A  6ED9               	movwf	fsr2l,c
  6567   01273C  0E02               	movlw	high (_spiReceiveBuffer+2)
  6568   01273E  202C               	addwfc	(btemp+11)^0,w,c
  6569   012740  6EDA               	movwf	fsr2h,c
  6570                           
  6571                           ;stkvar	_i @ sp[(-5)+0]
  6572   012742  0EFB               	movlw	-5
  6573   012744  CFE3 F02B          	movff	plusw1,btemp+10
  6574   012748  0EFC               	movlw	-4
  6575   01274A  CFE3 F02C          	movff	plusw1,btemp+11
  6576                           
  6577                           ;stkvar	_rxd @ sp[(-5)+-4]
  6578   01274E  0EF7               	movlw	-9
  6579   012750  CFE3 F029          	movff	plusw1,btemp+8
  6580   012754  0EF8               	movlw	-8
  6581   012756  CFE3 F02A          	movff	plusw1,btemp+9
  6582   01275A  502B               	movf	(btemp+10)^0,w,c
  6583   01275C  2429               	addwf	(btemp+8)^0,w,c
  6584   01275E  6EE9               	movwf	fsr0l,c
  6585   012760  502C               	movf	(btemp+11)^0,w,c
  6586   012762  202A               	addwfc	(btemp+9)^0,w,c
  6587   012764  6EEA               	movwf	fsr0h,c
  6588   012766  CFDF FFEF          	movff	indf2,indf0
  6589   01276A                     
  6590                           ;can/can.c: 377:     }
  6591                           ;stkvar	_i @ sp[(-5)+0]
  6592   01276A  0EFB               	movlw	-5
  6593   01276C  50E3               	movf	plusw1,w,c
  6594   01276E  0F01               	addlw	1
  6595   012770  6E21               	movwf	btemp^0,c
  6596   012772  0EFB               	movlw	-5
  6597   012774  C021  FFE3         	movff	btemp,plusw1
  6598   012778  6A21               	clrf	btemp^0,c
  6599   01277A  0EFC               	movlw	-4
  6600   01277C  50E3               	movf	plusw1,w,c
  6601   01277E  2021               	addwfc	btemp^0,w,c
  6602   012780  6E21               	movwf	btemp^0,c
  6603   012782  0EFC               	movlw	-4
  6604   012784  C021  FFE3         	movff	btemp,plusw1
  6605   012788                     l4366:
  6606                           
  6607                           ;stkvar	_nBytes @ sp[(-5)+-6]
  6608   012788  0EF5               	movlw	-11
  6609   01278A  CFE3 F02B          	movff	plusw1,btemp+10
  6610   01278E  0EF6               	movlw	-10
  6611   012790  CFE3 F02C          	movff	plusw1,btemp+11
  6612                           
  6613                           ;stkvar	_i @ sp[(-5)+0]
  6614   012794  0EFB               	movlw	-5
  6615   012796  CFE3 F029          	movff	plusw1,btemp+8
  6616   01279A  0EFC               	movlw	-4
  6617   01279C  CFE3 F02A          	movff	plusw1,btemp+9
  6618   0127A0  502B               	movf	(btemp+10)^0,w,c
  6619   0127A2  5C29               	subwf	(btemp+8)^0,w,c
  6620   0127A4  502C               	movf	(btemp+11)^0,w,c
  6621   0127A6  582A               	subwfb	(btemp+9)^0,w,c
  6622   0127A8  A0D8               	btfss	status,0,c
  6623   0127AA  EFD9  F093         	goto	u2011
  6624   0127AE  EFDB  F093         	goto	u2010
  6625   0127B2                     u2011:
  6626   0127B2  EF95  F093         	goto	l4362
  6627   0127B6                     u2010:
  6628   0127B6                     
  6629                           ;can/can.c: 379:     return spiTransferError;
  6630                           ;stkvar	_spiTransferError @ sp[(-5)+4]
  6631   0127B6  0EFF               	movlw	-1
  6632   0127B8  CFE3 F021          	movff	plusw1,btemp
  6633   0127BC                     
  6634                           ; _DRV_CANFDSPI_ReadByteArray: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0
      +                           parsize = 6, argsize = 6, vargsize = 0
  6635   0127BC  0EF5               	movlw	245
  6636   0127BE  26E1               	addwf	fsr1l,f,c
  6637   0127C0  0EFF               	movlw	255
  6638   0127C2  22E2               	addwfc	fsr1h,f,c
  6639   0127C4  0012               	return		;funcret
  6640   0127C6                     __end_of_DRV_CANFDSPI_ReadByteArray:
  6641                           	callstack 0
  6642                           
  6643 ;; *************** function _DRV_CANFDSPI_ReceiveChannelEventGet *****************
  6644 ;; Defined at:
  6645 ;;		line 1928 in file "can/can.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  channel         1  [STACK] enum E5287
  6648 ;;  flags           2  [STACK] PTR enum E5588
  6649 ;;		 -> rxFlags(1), 
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;  ciFifoSta       4  [STACK] struct _REG_CiFIFOSTA
  6652 ;;  a               2  [STACK] unsigned short 
  6653 ;;  spiTransferE    1  [STACK] char 
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  1  [STACK] char 
  6656 ;; Registers used:
  6657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;Total ram usage:        0 bytes
  6668 ;; Hardware stack levels used: 1
  6669 ;; Hardware stack levels required when called: 9
  6670 ;; This function calls:
  6671 ;;		_DRV_CANFDSPI_ReadByte
  6672 ;; This function is called by:
  6673 ;;		_CanReceive
  6674 ;; This function uses a reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text15
  6678   014008                     __ptext15:
  6679                           	callstack 0
  6680   014008                     _DRV_CANFDSPI_ReceiveChannelEventGet:
  6681                           	callstack 0
  6682                           
  6683                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6684   014008  0E07               	movlw	7
  6685   01400A  26E1               	addwf	fsr1l,f,c
  6686   01400C  0E00               	movlw	0
  6687   01400E  22E2               	addwfc	fsr1h,f,c
  6688   014010                     
  6689                           ;can/can.c: 1934:     if (channel == CAN_FIFO_CH0) return -100;
  6690                           ;stkvar	_channel @ sp[(-7)+-1]
  6691   014010  0EF8               	movlw	-8
  6692   014012  50E3               	movf	plusw1,w,c
  6693   014014  A4D8               	btfss	status,2,c
  6694   014016  EF0F  F0A0         	goto	u2071
  6695   01401A  EF11  F0A0         	goto	u2070
  6696   01401E                     u2071:
  6697   01401E  EF13  F0A0         	goto	l4438
  6698   014022                     u2070:
  6699   014022  EF51  F0A0         	goto	l482
  6700   014026                     l4438:
  6701                           
  6702                           ;can/can.c: 1937:     REG_CiFIFOSTA ciFifoSta;;can/can.c: 1938:     ciFifoSta.word = 0;
  6703                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
  6704   014026  0EF9               	movlw	-7
  6705   014028  6AE3               	clrf	plusw1,c
  6706   01402A  0EFA               	movlw	-6
  6707   01402C  6AE3               	clrf	plusw1,c
  6708   01402E  0EFB               	movlw	-5
  6709   014030  6AE3               	clrf	plusw1,c
  6710   014032  0EFC               	movlw	-4
  6711   014034  6AE3               	clrf	plusw1,c
  6712   014036                     
  6713                           ;can/can.c: 1939:     a = 0x054 + (channel * (3*4));
  6714                           ;stkvar	_channel @ sp[(-7)+-1]
  6715   014036  0EF8               	movlw	-8
  6716   014038  50E3               	movf	plusw1,w,c
  6717   01403A  0D0C               	mullw	12
  6718   01403C  0E54               	movlw	84
  6719   01403E  26F3               	addwf	243,f,c
  6720   014040  0E00               	movlw	0
  6721   014042  22F4               	addwfc	244,f,c
  6722                           
  6723                           ;stkvar	_a @ sp[(-7)+4]
  6724   014044  0EFD               	movlw	-3
  6725   014046  CFF3 FFE3          	movff	prodl,plusw1
  6726   01404A  0EFE               	movlw	-2
  6727   01404C  CFF4 FFE3          	movff	prodh,plusw1
  6728   014050                     
  6729                           ;can/can.c: 1941:     spiTransferError = DRV_CANFDSPI_ReadByte( a, &ciFifoSta.byte[0]);
  6730                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
  6731   014050  0EF9               	movlw	249
  6732   014052  24E1               	addwf	fsr1l,w,c
  6733   014054  6E21               	movwf	btemp^0,c
  6734   014056  0EFF               	movlw	255
  6735   014058  20E2               	addwfc	fsr1h,w,c
  6736   01405A  6E22               	movwf	(btemp+1)^0,c
  6737   01405C  C021  FFE6         	movff	btemp,postinc1
  6738   014060  C022  FFE6         	movff	btemp+1,postinc1
  6739                           
  6740                           ;stkvar	_a @ sp[(-9)+4]
  6741   014064  0EFB               	movlw	-5
  6742   014066  CFE3 FFE6          	movff	plusw1,postinc1
  6743   01406A  CFE3 FFE6          	movff	plusw1,postinc1
  6744   01406E  EC94  F0A2         	call	_DRV_CANFDSPI_ReadByte	;wreg free
  6745                           
  6746                           ;stkvar	_spiTransferError @ sp[(-7)+6]
  6747   014072  0EFF               	movlw	-1
  6748   014074  C021  FFE3         	movff	btemp,plusw1
  6749   014078                     
  6750                           ;can/can.c: 1942:     if (spiTransferError) {
  6751                           ;stkvar	_spiTransferError @ sp[(-7)+6]
  6752   014078  0EFF               	movlw	-1
  6753   01407A  50E3               	movf	plusw1,w,c
  6754   01407C  B4D8               	btfsc	status,2,c
  6755   01407E  EF43  F0A0         	goto	u2081
  6756   014082  EF45  F0A0         	goto	u2080
  6757   014086                     u2081:
  6758   014086  EF47  F0A0         	goto	l4448
  6759   01408A                     u2080:
  6760   01408A  EF51  F0A0         	goto	l482
  6761   01408E                     l4448:
  6762                           
  6763                           ;can/can.c: 1947:     *flags = (CAN_RX_FIFO_EVENT) (ciFifoSta.byte[0] & CAN_RX_FIFO_ALL_
      +                          EVENTS);
  6764                           ;stkvar	_flags @ sp[(-7)+-3]
  6765   01408E  0EF6               	movlw	-10
  6766   014090  CFE3 FFD9          	movff	plusw1,fsr2l
  6767   014094  0EF7               	movlw	-9
  6768   014096  CFE3 FFDA          	movff	plusw1,fsr2h
  6769                           
  6770                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
  6771   01409A  0EF9               	movlw	-7
  6772   01409C  50E3               	movf	plusw1,w,c
  6773   01409E  0B0F               	andlw	15
  6774   0140A0  6EDF               	movwf	indf2,c
  6775   0140A2                     l482:
  6776                           
  6777                           ; _DRV_CANFDSPI_ReceiveChannelEventGet: autosize = 7, savesize = 0, parsavesize = 0, tem
      +                          psize = 0 parsize = 3, argsize = 3, vargsize = 0
  6778   0140A2  0EF6               	movlw	246
  6779   0140A4  26E1               	addwf	fsr1l,f,c
  6780   0140A6  0EFF               	movlw	255
  6781   0140A8  22E2               	addwfc	fsr1h,f,c
  6782   0140AA  0012               	return		;funcret
  6783   0140AC                     __end_of_DRV_CANFDSPI_ReceiveChannelEventGet:
  6784                           	callstack 0
  6785                           
  6786 ;; *************** function _XF_init *****************
  6787 ;; Defined at:
  6788 ;;		line 80 in file "xf/xf.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;		None
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;  i               2  [STACK] int 
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  1  [STACK] void 
  6795 ;; Registers used:
  6796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6806 ;;Total ram usage:        0 bytes
  6807 ;; Hardware stack levels used: 1
  6808 ;; Hardware stack levels required when called: 8
  6809 ;; This function calls:
  6810 ;;		_Event_init
  6811 ;; This function is called by:
  6812 ;;		_main
  6813 ;; This function uses a reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text16
  6817   012AC8                     __ptext16:
  6818                           	callstack 0
  6819   012AC8                     _XF_init:
  6820                           	callstack 0
  6821                           
  6822                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6823   012AC8  52E6               	movf	postinc1,f,c
  6824   012ACA  52E6               	movf	postinc1,f,c
  6825   012ACC                     
  6826                           ;xf/xf.c: 82:     int i;;xf/xf.c: 83:     for (i=0; i<30; i++)
  6827                           ;stkvar	_i @ sp[(-2)+0]
  6828   012ACC  0EFE               	movlw	-2
  6829   012ACE  6AE3               	clrf	plusw1,c
  6830   012AD0  0EFF               	movlw	-1
  6831   012AD2  6AE3               	clrf	plusw1,c
  6832   012AD4                     l5252:
  6833                           
  6834                           ;xf/xf.c: 84:     {;xf/xf.c: 85:         Event_init(&(theXF.eventQueue[i]));
  6835                           ;stkvar	_i @ sp[(-2)+0]
  6836   012AD4  0EFE               	movlw	-2
  6837   012AD6  CFE3 F02B          	movff	plusw1,btemp+10
  6838   012ADA  0EFF               	movlw	-1
  6839   012ADC  CFE3 F02C          	movff	plusw1,btemp+11
  6840   012AE0  0E06               	movlw	6
  6841   012AE2  022B               	mulwf	(btemp+10)^0,c
  6842   012AE4  CFF3 F029          	movff	prodl,btemp+8
  6843   012AE8  CFF4 F02A          	movff	prodh,btemp+9
  6844   012AEC  022C               	mulwf	(btemp+11)^0,c
  6845   012AEE  50F3               	movf	prodl,w,c
  6846   012AF0  262A               	addwf	(btemp+9)^0,f,c
  6847   012AF2  0E28               	movlw	low (_theXF+96)
  6848   012AF4  2429               	addwf	(btemp+8)^0,w,c
  6849   012AF6  6E2B               	movwf	(btemp+10)^0,c
  6850   012AF8  0E03               	movlw	high (_theXF+96)
  6851   012AFA  202A               	addwfc	(btemp+9)^0,w,c
  6852   012AFC  6E2C               	movwf	(btemp+11)^0,c
  6853   012AFE  C02B  FFE6         	movff	btemp+10,postinc1
  6854   012B02  C02C  FFE6         	movff	btemp+11,postinc1
  6855   012B06  EC4C  F0A3         	call	_Event_init	;wreg free
  6856   012B0A                     
  6857                           ;xf/xf.c: 86:     }
  6858                           ;stkvar	_i @ sp[(-2)+0]
  6859   012B0A  0EFE               	movlw	-2
  6860   012B0C  50E3               	movf	plusw1,w,c
  6861   012B0E  0F01               	addlw	1
  6862   012B10  6E21               	movwf	btemp^0,c
  6863   012B12  0EFE               	movlw	-2
  6864   012B14  C021  FFE3         	movff	btemp,plusw1
  6865   012B18  6A21               	clrf	btemp^0,c
  6866   012B1A  0EFF               	movlw	-1
  6867   012B1C  50E3               	movf	plusw1,w,c
  6868   012B1E  2021               	addwfc	btemp^0,w,c
  6869   012B20  6E21               	movwf	btemp^0,c
  6870   012B22  0EFF               	movlw	-1
  6871   012B24  C021  FFE3         	movff	btemp,plusw1
  6872   012B28                     
  6873                           ;stkvar	_i @ sp[(-2)+0]
  6874   012B28  0EFF               	movlw	-1
  6875   012B2A  BEE3               	btfsc	plusw1,7,c
  6876   012B2C  EFA5  F095         	goto	u2921
  6877   012B30  0EFF               	movlw	-1
  6878   012B32  50E3               	movf	plusw1,w,c
  6879   012B34  E10C               	bnz	u2920
  6880   012B36  0EFE               	movlw	-2
  6881   012B38  CFE3 F021          	movff	plusw1,btemp
  6882   012B3C  0E1E               	movlw	30
  6883   012B3E  5E21               	subwf	btemp^0,f,c
  6884   012B40  A0D8               	btfss	status,0,c
  6885   012B42  EFA5  F095         	goto	u2921
  6886   012B46  EFA7  F095         	goto	u2920
  6887   012B4A                     u2921:
  6888   012B4A  EF6A  F095         	goto	l5252
  6889   012B4E                     u2920:
  6890   012B4E                     
  6891                           ;xf/xf.c: 88:     for (i=0; i<12; i++)
  6892                           ;stkvar	_i @ sp[(-2)+0]
  6893   012B4E  0EFE               	movlw	-2
  6894   012B50  6AE3               	clrf	plusw1,c
  6895   012B52  0EFF               	movlw	-1
  6896   012B54  6AE3               	clrf	plusw1,c
  6897   012B56                     l5264:
  6898                           
  6899                           ;xf/xf.c: 89:     {;xf/xf.c: 90:         theXF.timerList[i].tm = 0;
  6900                           ;stkvar	_i @ sp[(-2)+0]
  6901   012B56  0EFE               	movlw	-2
  6902   012B58  CFE3 F02B          	movff	plusw1,btemp+10
  6903   012B5C  0EFF               	movlw	-1
  6904   012B5E  CFE3 F02C          	movff	plusw1,btemp+11
  6905   012B62  90D8               	bcf	status,0,c
  6906   012B64  362B               	rlcf	(btemp+10)^0,f,c
  6907   012B66  362C               	rlcf	(btemp+11)^0,f,c
  6908   012B68  90D8               	bcf	status,0,c
  6909   012B6A  362B               	rlcf	(btemp+10)^0,f,c
  6910   012B6C  362C               	rlcf	(btemp+11)^0,f,c
  6911   012B6E  90D8               	bcf	status,0,c
  6912   012B70  362B               	rlcf	(btemp+10)^0,f,c
  6913   012B72  362C               	rlcf	(btemp+11)^0,f,c
  6914   012B74  0EC8               	movlw	low _theXF
  6915   012B76  242B               	addwf	(btemp+10)^0,w,c
  6916   012B78  6ED9               	movwf	fsr2l,c
  6917   012B7A  0E02               	movlw	high _theXF
  6918   012B7C  202C               	addwfc	(btemp+11)^0,w,c
  6919   012B7E  6EDA               	movwf	fsr2h,c
  6920   012B80  6ADE               	clrf	postinc2,c
  6921   012B82  6ADD               	clrf	postdec2,c
  6922   012B84                     
  6923                           ;xf/xf.c: 91:         Event_init(&(theXF.timerList[i].ev));
  6924                           ;stkvar	_i @ sp[(-2)+0]
  6925   012B84  0EFE               	movlw	-2
  6926   012B86  CFE3 F02B          	movff	plusw1,btemp+10
  6927   012B8A  0EFF               	movlw	-1
  6928   012B8C  CFE3 F02C          	movff	plusw1,btemp+11
  6929   012B90  90D8               	bcf	status,0,c
  6930   012B92  362B               	rlcf	(btemp+10)^0,f,c
  6931   012B94  362C               	rlcf	(btemp+11)^0,f,c
  6932   012B96  90D8               	bcf	status,0,c
  6933   012B98  362B               	rlcf	(btemp+10)^0,f,c
  6934   012B9A  362C               	rlcf	(btemp+11)^0,f,c
  6935   012B9C  90D8               	bcf	status,0,c
  6936   012B9E  362B               	rlcf	(btemp+10)^0,f,c
  6937   012BA0  362C               	rlcf	(btemp+11)^0,f,c
  6938   012BA2  0ECA               	movlw	low (_theXF+2)
  6939   012BA4  242B               	addwf	(btemp+10)^0,w,c
  6940   012BA6  6E29               	movwf	(btemp+8)^0,c
  6941   012BA8  0E02               	movlw	high (_theXF+2)
  6942   012BAA  202C               	addwfc	(btemp+11)^0,w,c
  6943   012BAC  6E2A               	movwf	(btemp+9)^0,c
  6944   012BAE  C029  FFE6         	movff	btemp+8,postinc1
  6945   012BB2  C02A  FFE6         	movff	btemp+9,postinc1
  6946   012BB6  EC4C  F0A3         	call	_Event_init	;wreg free
  6947   012BBA                     
  6948                           ;xf/xf.c: 92:     }
  6949                           ;stkvar	_i @ sp[(-2)+0]
  6950   012BBA  0EFE               	movlw	-2
  6951   012BBC  50E3               	movf	plusw1,w,c
  6952   012BBE  0F01               	addlw	1
  6953   012BC0  6E21               	movwf	btemp^0,c
  6954   012BC2  0EFE               	movlw	-2
  6955   012BC4  C021  FFE3         	movff	btemp,plusw1
  6956   012BC8  6A21               	clrf	btemp^0,c
  6957   012BCA  0EFF               	movlw	-1
  6958   012BCC  50E3               	movf	plusw1,w,c
  6959   012BCE  2021               	addwfc	btemp^0,w,c
  6960   012BD0  6E21               	movwf	btemp^0,c
  6961   012BD2  0EFF               	movlw	-1
  6962   012BD4  C021  FFE3         	movff	btemp,plusw1
  6963   012BD8                     
  6964                           ;stkvar	_i @ sp[(-2)+0]
  6965   012BD8  0EFF               	movlw	-1
  6966   012BDA  BEE3               	btfsc	plusw1,7,c
  6967   012BDC  EFFD  F095         	goto	u2931
  6968   012BE0  0EFF               	movlw	-1
  6969   012BE2  50E3               	movf	plusw1,w,c
  6970   012BE4  E10C               	bnz	u2930
  6971   012BE6  0EFE               	movlw	-2
  6972   012BE8  CFE3 F021          	movff	plusw1,btemp
  6973   012BEC  0E0C               	movlw	12
  6974   012BEE  5E21               	subwf	btemp^0,f,c
  6975   012BF0  A0D8               	btfss	status,0,c
  6976   012BF2  EFFD  F095         	goto	u2931
  6977   012BF6  EFFF  F095         	goto	u2930
  6978   012BFA                     u2931:
  6979   012BFA  EFAB  F095         	goto	l5264
  6980   012BFE                     u2930:
  6981   012BFE                     
  6982                           ;xf/xf.c: 93:     theXF.in = 0;
  6983   012BFE  0E00               	movlw	0
  6984   012C00  CFE8 F3DC          	movff	wreg,_theXF+276
  6985                           
  6986                           ;xf/xf.c: 94:     theXF.out = 0;
  6987   012C04  0E00               	movlw	0
  6988   012C06  CFE8 F3DD          	movff	wreg,_theXF+277
  6989                           
  6990                           ;xf/xf.c: 95:     theXF.maxEvt = 0;
  6991   012C0A  0E00               	movlw	0
  6992   012C0C  CFE8 F3DE          	movff	wreg,_theXF+278
  6993                           
  6994                           ;xf/xf.c: 96:     theXF.countEvt = 0;
  6995   012C10  0E00               	movlw	0
  6996   012C12  CFE8 F3DF          	movff	wreg,_theXF+279
  6997   012C16                     
  6998                           ; _XF_init: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  6999   012C16  52E5               	movf	postdec1,f,c
  7000   012C18  52E5               	movf	postdec1,f,c
  7001   012C1A  0012               	return		;funcret
  7002   012C1C                     __end_of_XF_init:
  7003                           	callstack 0
  7004                           
  7005 ;; *************** function _Event_init *****************
  7006 ;; Defined at:
  7007 ;;		line 4 in file "xf/event.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;  me              2  [STACK] PTR struct Event_
  7010 ;;		 -> ev(6), theXF$timerList(96), theXF$eventQueue(180), theXF(282), 
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;		None
  7013 ;; Return value:  Size  Location     Type
  7014 ;;                  1  [STACK] void 
  7015 ;; Registers used:
  7016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  7017 ;; Tracked objects:
  7018 ;;		On entry : 0/0
  7019 ;;		On exit  : 0/0
  7020 ;;		Unchanged: 0/0
  7021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7026 ;;Total ram usage:        0 bytes
  7027 ;; Hardware stack levels used: 1
  7028 ;; Hardware stack levels required when called: 7
  7029 ;; This function calls:
  7030 ;;		Nothing
  7031 ;; This function is called by:
  7032 ;;		_XF_init
  7033 ;;		_XF_unscheduleTimer
  7034 ;;		_XF_post
  7035 ;; This function uses a reentrant model
  7036 ;;
  7037                           
  7038                           	psect	text17
  7039   014698                     __ptext17:
  7040                           	callstack 0
  7041   014698                     _Event_init:
  7042                           	callstack 10
  7043   014698                     
  7044                           ;xf/event.c: 4: void Event_init(struct Event_* me);xf/event.c: 5: {;xf/event.c: 6:     m
      +                          e->id = 0;
  7045                           ;stkvar	_me @ sp[(0)+-2]
  7046   014698  0EFE               	movlw	-2
  7047   01469A  CFE3 FFD9          	movff	plusw1,fsr2l
  7048   01469E  0EFF               	movlw	-1
  7049   0146A0  CFE3 FFDA          	movff	plusw1,fsr2h
  7050   0146A4  6ADF               	clrf	indf2,c
  7051   0146A6                     
  7052                           ;xf/event.c: 7:     me->delay = 0;
  7053                           ;stkvar	_me @ sp[(0)+-2]
  7054   0146A6  0EFE               	movlw	-2
  7055   0146A8  CFE3 F02B          	movff	plusw1,btemp+10
  7056   0146AC  0EFF               	movlw	-1
  7057   0146AE  CFE3 F02C          	movff	plusw1,btemp+11
  7058   0146B2  0E04               	movlw	4
  7059   0146B4  242B               	addwf	(btemp+10)^0,w,c
  7060   0146B6  6ED9               	movwf	fsr2l,c
  7061   0146B8  0E00               	movlw	0
  7062   0146BA  202C               	addwfc	(btemp+11)^0,w,c
  7063   0146BC  6EDA               	movwf	fsr2h,c
  7064   0146BE  6ADE               	clrf	postinc2,c
  7065   0146C0  6ADD               	clrf	postdec2,c
  7066   0146C2                     
  7067                           ;xf/event.c: 8:     me->processEvent = ((void*)(0));
  7068                           ;stkvar	_me @ sp[(0)+-2]
  7069   0146C2  0EFE               	movlw	-2
  7070   0146C4  CFE3 F02B          	movff	plusw1,btemp+10
  7071   0146C8  0EFF               	movlw	-1
  7072   0146CA  CFE3 F02C          	movff	plusw1,btemp+11
  7073   0146CE  0E01               	movlw	1
  7074   0146D0  242B               	addwf	(btemp+10)^0,w,c
  7075   0146D2  6ED9               	movwf	fsr2l,c
  7076   0146D4  0E00               	movlw	0
  7077   0146D6  202C               	addwfc	(btemp+11)^0,w,c
  7078   0146D8  6EDA               	movwf	fsr2h,c
  7079   0146DA  6ADE               	clrf	postinc2,c
  7080   0146DC  6ADE               	clrf	postinc2,c
  7081   0146DE  6ADD               	clrf	postdec2,c
  7082   0146E0                     
  7083                           ; _Event_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  7084   0146E0  52E5               	movf	postdec1,f,c
  7085   0146E2  52E5               	movf	postdec1,f,c
  7086   0146E4  0012               	return		;funcret
  7087   0146E6                     __end_of_Event_init:
  7088                           	callstack 0
  7089                           
  7090 ;; *************** function _XF_executeOnce *****************
  7091 ;; Defined at:
  7092 ;;		line 290 in file "xf/xf.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;		None
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;  ev              6  [STACK] struct Event_
  7097 ;; Return value:  Size  Location     Type
  7098 ;;                  1  [STACK] void 
  7099 ;; Registers used:
  7100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
  7101 ;; Tracked objects:
  7102 ;;		On entry : 0/0
  7103 ;;		On exit  : 0/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7110 ;;Total ram usage:        0 bytes
  7111 ;; Hardware stack levels used: 1
  7112 ;; Hardware stack levels required when called: 14
  7113 ;; This function calls:
  7114 ;;		_XF_popEvent
  7115 ;;		_lightControl_Process
  7116 ;;		_motorControl_Process
  7117 ;; This function is called by:
  7118 ;;		_main
  7119 ;; This function uses a reentrant model
  7120 ;;
  7121                           
  7122                           	psect	text18
  7123   01426C                     __ptext18:
  7124                           	callstack 0
  7125   01426C                     _XF_executeOnce:
  7126                           	callstack 0
  7127                           
  7128                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7129   01426C  0E06               	movlw	6
  7130   01426E  26E1               	addwf	fsr1l,f,c
  7131   014270  0E00               	movlw	0
  7132   014272  22E2               	addwfc	fsr1h,f,c
  7133   014274                     
  7134                           ;xf/xf.c: 292:     Event ev = XF_popEvent(0);
  7135   014274  0E00               	movlw	0
  7136   014276  6EE6               	movwf	postinc1,c
  7137   014278  ECC3  F09C         	call	_XF_popEvent	;wreg free
  7138                           
  7139                           ;stkvar	_ev @ sp[(-12)+0]
  7140   01427C  0EFA               	movlw	250
  7141   01427E  24E1               	addwf	fsr1l,w,c
  7142   014280  6ED9               	movwf	fsr2l,c
  7143   014282  0EFF               	movlw	255
  7144   014284  20E2               	addwfc	fsr1h,w,c
  7145   014286  6EDA               	movwf	fsr2h,c
  7146   014288  0E06               	movlw	6
  7147   01428A  6E21               	movwf	btemp^0,c
  7148   01428C                     uf294999:
  7149   01428C  50DD               	movf	postdec2,w,c
  7150   01428E  52E5               	movf	postdec1,f,c
  7151   014290  50E7               	movf	indf1,w,c
  7152   014292  6EDF               	movwf	indf2,c
  7153   014294  2E21               	decfsz	btemp^0,f,c
  7154   014296  D7FA               	bra	uf294999
  7155   014298                     
  7156                           ;xf/xf.c: 294:     if (ev.processEvent != ((void*)0))
  7157                           ;stkvar	_ev @ sp[(-6)+0]
  7158   014298  0EFB               	movlw	251
  7159   01429A  24E1               	addwf	fsr1l,w,c
  7160   01429C  6ED9               	movwf	fsr2l,c
  7161   01429E  0EFF               	movlw	255
  7162   0142A0  20E2               	addwfc	fsr1h,w,c
  7163   0142A2  6EDA               	movwf	fsr2h,c
  7164   0142A4  50DE               	movf	postinc2,w,c
  7165   0142A6  10DE               	iorwf	postinc2,w,c
  7166   0142A8  10DE               	iorwf	postinc2,w,c
  7167   0142AA  B4D8               	btfsc	status,2,c
  7168   0142AC  EF5A  F0A1         	goto	u2951
  7169   0142B0  EF5C  F0A1         	goto	u2950
  7170   0142B4                     u2951:
  7171   0142B4  EF79  F0A1         	goto	l1261
  7172   0142B8                     u2950:
  7173   0142B8                     
  7174                           ;xf/xf.c: 295:     {;xf/xf.c: 298:         ev.processEvent(&ev);
  7175                           ;stkvar	_ev @ sp[(-6)+0]
  7176   0142B8  0EFA               	movlw	250
  7177   0142BA  24E1               	addwf	fsr1l,w,c
  7178   0142BC  6E21               	movwf	btemp^0,c
  7179   0142BE  0EFF               	movlw	255
  7180   0142C0  20E2               	addwfc	fsr1h,w,c
  7181   0142C2  6E22               	movwf	(btemp+1)^0,c
  7182   0142C4  C021  FFE6         	movff	btemp,postinc1
  7183   0142C8  C022  FFE6         	movff	btemp+1,postinc1
  7184                           
  7185                           ;stkvar	_ev @ sp[(-8)+0]
  7186   0142CC  0EF9               	movlw	249
  7187   0142CE  24E1               	addwf	fsr1l,w,c
  7188   0142D0  6ED9               	movwf	fsr2l,c
  7189   0142D2  0EFF               	movlw	255
  7190   0142D4  20E2               	addwfc	fsr1h,w,c
  7191   0142D6  6EDA               	movwf	fsr2h,c
  7192   0142D8  D802               	call	u2968
  7193   0142DA  EF79  F0A1         	goto	u2969
  7194   0142DE                     u2968:
  7195   0142DE  0005               	push	
  7196   0142E0  6EFA               	movwf	pclath,c
  7197   0142E2  50DE               	movf	postinc2,w,c
  7198   0142E4  6EFD               	movwf	tosl,c
  7199   0142E6  50DE               	movf	postinc2,w,c
  7200   0142E8  6EFE               	movwf	tosh,c
  7201   0142EA  50DE               	movf	postinc2,w,c
  7202   0142EC  6EFF               	movwf	tosu,c
  7203   0142EE  50FA               	movf	pclath,w,c
  7204   0142F0  0012               	return		;indir
  7205   0142F2                     u2969:
  7206   0142F2                     l1261:
  7207                           
  7208                           ; _XF_executeOnce: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7209   0142F2  0EFA               	movlw	250
  7210   0142F4  26E1               	addwf	fsr1l,f,c
  7211   0142F6  0EFF               	movlw	255
  7212   0142F8  22E2               	addwfc	fsr1h,f,c
  7213   0142FA  0012               	return		;funcret
  7214   0142FC                     __end_of_XF_executeOnce:
  7215                           	callstack 0
  7216                           
  7217 ;; *************** function _lightControl_Process *****************
  7218 ;; Defined at:
  7219 ;;		line 128 in file "carFunctions.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  ev              2  [STACK] PTR struct Event_
  7222 ;;		 -> ev(6), 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;		None
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  1  [STACK] _Bool 
  7227 ;; Registers used:
  7228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7238 ;;Total ram usage:        0 bytes
  7239 ;; Hardware stack levels used: 1
  7240 ;; Hardware stack levels required when called: 13
  7241 ;; This function calls:
  7242 ;;		_lightContol_BackLight
  7243 ;;		_lightContol_FrontLight
  7244 ;; This function is called by:
  7245 ;;		_main
  7246 ;;		_updateCarState
  7247 ;;		_XF_executeOnce
  7248 ;; This function uses a reentrant model
  7249 ;;
  7250                           
  7251                           	psect	text19
  7252   012492                     __ptext19:
  7253                           	callstack 0
  7254   012492                     _lightControl_Process:
  7255                           	callstack 16
  7256   012492                     
  7257                           ;carFunctions.c: 128:  _Bool lightControl_Process(Event* ev);carFunctions.c: 129:  {;car
      +                          Functions.c: 138:      static LightState state = INIT;;carFunctions.c: 139:      static 
      +                          LightState oldState = INIT;;carFunctions.c: 140:      switch(state)
  7258   012492  EFB7  F092         	goto	l5136
  7259   012496                     l5110:
  7260                           
  7261                           ;carFunctions.c: 143:              if(ev->id == E_INIT){
  7262                           ;stkvar	_ev @ sp[(0)+-2]
  7263   012496  0EFE               	movlw	-2
  7264   012498  CFE3 FFD9          	movff	plusw1,fsr2l
  7265   01249C  0EFF               	movlw	-1
  7266   01249E  CFE3 FFDA          	movff	plusw1,fsr2h
  7267   0124A2  50DF               	movf	indf2,w,c
  7268   0124A4  06E8               	decf	wreg,f,c
  7269   0124A6  A4D8               	btfss	status,2,c
  7270   0124A8  EF58  F092         	goto	u2831
  7271   0124AC  EF5A  F092         	goto	u2830
  7272   0124B0                     u2831:
  7273   0124B0  EFD4  F092         	goto	l5138
  7274   0124B4                     u2830:
  7275   0124B4                     l5112:
  7276                           
  7277                           ;carFunctions.c: 144:                  state = OFF;
  7278   0124B4  0E01               	movlw	1
  7279   0124B6  6E1A               	movwf	lightControl_Process@state^0,c
  7280   0124B8  EFD4  F092         	goto	l5138
  7281   0124BC                     l5114:
  7282                           
  7283                           ;carFunctions.c: 148:              if(ev->id == E_CONTACT_ON)
  7284                           ;stkvar	_ev @ sp[(0)+-2]
  7285   0124BC  0EFE               	movlw	-2
  7286   0124BE  CFE3 FFD9          	movff	plusw1,fsr2l
  7287   0124C2  0EFF               	movlw	-1
  7288   0124C4  CFE3 FFDA          	movff	plusw1,fsr2h
  7289   0124C8  50DF               	movf	indf2,w,c
  7290   0124CA  0A03               	xorlw	3
  7291   0124CC  A4D8               	btfss	status,2,c
  7292   0124CE  EF6B  F092         	goto	u2841
  7293   0124D2  EF6D  F092         	goto	u2840
  7294   0124D6                     u2841:
  7295   0124D6  EFD4  F092         	goto	l5138
  7296   0124DA                     u2840:
  7297   0124DA                     l5116:
  7298                           
  7299                           ;carFunctions.c: 149:              {;carFunctions.c: 150:                  state = CRUIS
      +                          E;
  7300   0124DA  0E02               	movlw	2
  7301   0124DC  6E1A               	movwf	lightControl_Process@state^0,c
  7302   0124DE  EFD4  F092         	goto	l5138
  7303   0124E2                     l5118:
  7304                           
  7305                           ;carFunctions.c: 155:              if(ev->id == E_CONTACT_OFF)
  7306                           ;stkvar	_ev @ sp[(0)+-2]
  7307   0124E2  0EFE               	movlw	-2
  7308   0124E4  CFE3 FFD9          	movff	plusw1,fsr2l
  7309   0124E8  0EFF               	movlw	-1
  7310   0124EA  CFE3 FFDA          	movff	plusw1,fsr2h
  7311   0124EE  50DF               	movf	indf2,w,c
  7312   0124F0  0A02               	xorlw	2
  7313   0124F2  A4D8               	btfss	status,2,c
  7314   0124F4  EF7E  F092         	goto	u2851
  7315   0124F8  EF80  F092         	goto	u2850
  7316   0124FC                     u2851:
  7317   0124FC  EF82  F092         	goto	l5122
  7318   012500                     u2850:
  7319   012500  EF5A  F092         	goto	l5112
  7320   012504                     l5122:
  7321                           
  7322                           ;stkvar	_ev @ sp[(0)+-2]
  7323   012504  0EFE               	movlw	-2
  7324   012506  CFE3 FFD9          	movff	plusw1,fsr2l
  7325   01250A  0EFF               	movlw	-1
  7326   01250C  CFE3 FFDA          	movff	plusw1,fsr2h
  7327   012510  50DF               	movf	indf2,w,c
  7328   012512  0A04               	xorlw	4
  7329   012514  A4D8               	btfss	status,2,c
  7330   012516  EF8F  F092         	goto	u2861
  7331   01251A  EF91  F092         	goto	u2860
  7332   01251E                     u2861:
  7333   01251E  EFD4  F092         	goto	l5138
  7334   012522                     u2860:
  7335   012522                     
  7336                           ;carFunctions.c: 161:              {;carFunctions.c: 162:                  state = BRAKE
      +                          ;
  7337   012522  0E03               	movlw	3
  7338   012524  6E1A               	movwf	lightControl_Process@state^0,c
  7339   012526  EFD4  F092         	goto	l5138
  7340   01252A                     l5126:
  7341                           
  7342                           ;carFunctions.c: 166:              if(ev->id == E_CONTACT_OFF)
  7343                           ;stkvar	_ev @ sp[(0)+-2]
  7344   01252A  0EFE               	movlw	-2
  7345   01252C  CFE3 FFD9          	movff	plusw1,fsr2l
  7346   012530  0EFF               	movlw	-1
  7347   012532  CFE3 FFDA          	movff	plusw1,fsr2h
  7348   012536  50DF               	movf	indf2,w,c
  7349   012538  0A02               	xorlw	2
  7350   01253A  A4D8               	btfss	status,2,c
  7351   01253C  EFA2  F092         	goto	u2871
  7352   012540  EFA4  F092         	goto	u2870
  7353   012544                     u2871:
  7354   012544  EFA6  F092         	goto	l5130
  7355   012548                     u2870:
  7356   012548  EF5A  F092         	goto	l5112
  7357   01254C                     l5130:
  7358                           
  7359                           ;stkvar	_ev @ sp[(0)+-2]
  7360   01254C  0EFE               	movlw	-2
  7361   01254E  CFE3 FFD9          	movff	plusw1,fsr2l
  7362   012552  0EFF               	movlw	-1
  7363   012554  CFE3 FFDA          	movff	plusw1,fsr2h
  7364   012558  50DF               	movf	indf2,w,c
  7365   01255A  0A0A               	xorlw	10
  7366   01255C  A4D8               	btfss	status,2,c
  7367   01255E  EFB3  F092         	goto	u2881
  7368   012562  EFB5  F092         	goto	u2880
  7369   012566                     u2881:
  7370   012566  EFD4  F092         	goto	l5138
  7371   01256A                     u2880:
  7372   01256A  EF6D  F092         	goto	l5116
  7373   01256E                     l5136:
  7374   01256E  501A               	movf	lightControl_Process@state^0,w,c
  7375   012570  6E2B               	movwf	(btemp+10)^0,c
  7376   012572  6A2C               	clrf	(btemp+11)^0,c
  7377                           
  7378                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7379                           ; Switch size 1, requested type "simple"
  7380                           ; Number of cases is 1, Range of values is 0 to 0
  7381                           ; switch strategies available:
  7382                           ; Name         Instructions Cycles
  7383                           ; simple_byte            4     3 (average)
  7384                           ;	Chosen strategy is simple_byte
  7385   012574  502C               	movf	(btemp+11)^0,w,c
  7386   012576  0A00               	xorlw	0	; case 0
  7387   012578  B4D8               	btfsc	status,2,c
  7388   01257A  EFC1  F092         	goto	l5574
  7389   01257E  EFD4  F092         	goto	l5138
  7390   012582                     l5574:
  7391                           
  7392                           ; Switch size 1, requested type "simple"
  7393                           ; Number of cases is 4, Range of values is 0 to 3
  7394                           ; switch strategies available:
  7395                           ; Name         Instructions Cycles
  7396                           ; simple_byte           13     7 (average)
  7397                           ;	Chosen strategy is simple_byte
  7398   012582  502B               	movf	(btemp+10)^0,w,c
  7399   012584  0A00               	xorlw	0	; case 0
  7400   012586  B4D8               	btfsc	status,2,c
  7401   012588  EF4B  F092         	goto	l5110
  7402   01258C  0A01               	xorlw	1	; case 1
  7403   01258E  B4D8               	btfsc	status,2,c
  7404   012590  EF5E  F092         	goto	l5114
  7405   012594  0A03               	xorlw	3	; case 2
  7406   012596  B4D8               	btfsc	status,2,c
  7407   012598  EF71  F092         	goto	l5118
  7408   01259C  0A01               	xorlw	1	; case 3
  7409   01259E  B4D8               	btfsc	status,2,c
  7410   0125A0  EF95  F092         	goto	l5126
  7411   0125A4  EFD4  F092         	goto	l5138
  7412   0125A8                     l5138:
  7413                           
  7414                           ;carFunctions.c: 178:     if(oldState == state)
  7415   0125A8  501A               	movf	lightControl_Process@state^0,w,c
  7416   0125AA  1819               	xorwf	lightControl_Process@oldState^0,w,c
  7417   0125AC  A4D8               	btfss	status,2,c
  7418   0125AE  EFDB  F092         	goto	u2891
  7419   0125B2  EFDD  F092         	goto	u2890
  7420   0125B6                     u2891:
  7421   0125B6  EFDF  F092         	goto	l1483
  7422   0125BA                     u2890:
  7423   0125BA  EF1A  F093         	goto	l1484
  7424   0125BE                     l1483:
  7425                           
  7426                           ;carFunctions.c: 182:     oldState = state;
  7427   0125BE  C01A  F019         	movff	lightControl_Process@state,lightControl_Process@oldState
  7428                           
  7429                           ;carFunctions.c: 183:     switch(state)
  7430   0125C2  EFFD  F092         	goto	l5150
  7431   0125C6                     l5142:
  7432                           
  7433                           ;carFunctions.c: 188:              lightContol_FrontLight(0);
  7434   0125C6  0E00               	movlw	0
  7435   0125C8  6EE6               	movwf	postinc1,c
  7436   0125CA  EC01  F09F         	call	_lightContol_FrontLight	;wreg free
  7437                           
  7438                           ;carFunctions.c: 189:              lightContol_BackLight(0);
  7439   0125CE  0E00               	movlw	0
  7440   0125D0  6EE6               	movwf	postinc1,c
  7441   0125D2  ECA7  F09E         	call	_lightContol_BackLight	;wreg free
  7442                           
  7443                           ;carFunctions.c: 190:              break;
  7444   0125D6  EF1A  F093         	goto	l1484
  7445   0125DA                     l5144:
  7446                           
  7447                           ;carFunctions.c: 192:              lightContol_FrontLight(50);
  7448   0125DA  0E32               	movlw	50
  7449   0125DC  6EE6               	movwf	postinc1,c
  7450   0125DE  EC01  F09F         	call	_lightContol_FrontLight	;wreg free
  7451                           
  7452                           ;carFunctions.c: 193:              lightContol_BackLight(50);
  7453   0125E2  0E32               	movlw	50
  7454   0125E4  6EE6               	movwf	postinc1,c
  7455   0125E6  ECA7  F09E         	call	_lightContol_BackLight	;wreg free
  7456                           
  7457                           ;carFunctions.c: 194:              break;
  7458   0125EA  EF1A  F093         	goto	l1484
  7459   0125EE                     l5146:
  7460                           
  7461                           ;carFunctions.c: 196:              lightContol_BackLight(100);
  7462   0125EE  0E64               	movlw	100
  7463   0125F0  6EE6               	movwf	postinc1,c
  7464   0125F2  ECA7  F09E         	call	_lightContol_BackLight	;wreg free
  7465                           
  7466                           ;carFunctions.c: 197:              break;
  7467   0125F6  EF1A  F093         	goto	l1484
  7468   0125FA                     l5150:
  7469   0125FA  501A               	movf	lightControl_Process@state^0,w,c
  7470   0125FC  6E2B               	movwf	(btemp+10)^0,c
  7471   0125FE  6A2C               	clrf	(btemp+11)^0,c
  7472                           
  7473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7474                           ; Switch size 1, requested type "simple"
  7475                           ; Number of cases is 1, Range of values is 0 to 0
  7476                           ; switch strategies available:
  7477                           ; Name         Instructions Cycles
  7478                           ; simple_byte            4     3 (average)
  7479                           ;	Chosen strategy is simple_byte
  7480   012600  502C               	movf	(btemp+11)^0,w,c
  7481   012602  0A00               	xorlw	0	; case 0
  7482   012604  B4D8               	btfsc	status,2,c
  7483   012606  EF07  F093         	goto	l5576
  7484   01260A  EF1A  F093         	goto	l1484
  7485   01260E                     l5576:
  7486                           
  7487                           ; Switch size 1, requested type "simple"
  7488                           ; Number of cases is 4, Range of values is 0 to 3
  7489                           ; switch strategies available:
  7490                           ; Name         Instructions Cycles
  7491                           ; simple_byte           13     7 (average)
  7492                           ;	Chosen strategy is simple_byte
  7493   01260E  502B               	movf	(btemp+10)^0,w,c
  7494   012610  0A00               	xorlw	0	; case 0
  7495   012612  B4D8               	btfsc	status,2,c
  7496   012614  EF1A  F093         	goto	l1484
  7497   012618  0A01               	xorlw	1	; case 1
  7498   01261A  B4D8               	btfsc	status,2,c
  7499   01261C  EFE3  F092         	goto	l5142
  7500   012620  0A03               	xorlw	3	; case 2
  7501   012622  B4D8               	btfsc	status,2,c
  7502   012624  EFED  F092         	goto	l5144
  7503   012628  0A01               	xorlw	1	; case 3
  7504   01262A  B4D8               	btfsc	status,2,c
  7505   01262C  EFF7  F092         	goto	l5146
  7506   012630  EF1A  F093         	goto	l1484
  7507   012634                     l1484:
  7508                           
  7509                           ; _lightControl_Process: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 2, argsize = 2, vargsize = 0
  7510   012634  52E5               	movf	postdec1,f,c
  7511   012636  52E5               	movf	postdec1,f,c
  7512   012638  0012               	return		;funcret
  7513   01263A                     __end_of_lightControl_Process:
  7514                           	callstack 0
  7515                           
  7516 ;; *************** function _motorControl_Process *****************
  7517 ;; Defined at:
  7518 ;;		line 68 in file "carFunctions.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  ev              2  [STACK] PTR struct Event_
  7521 ;;		 -> ev(6), 
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;		None
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  1  [STACK] _Bool 
  7526 ;; Registers used:
  7527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7537 ;;Total ram usage:        0 bytes
  7538 ;; Hardware stack levels used: 1
  7539 ;; Hardware stack levels required when called: 13
  7540 ;; This function calls:
  7541 ;;		_motorControl
  7542 ;; This function is called by:
  7543 ;;		_updateCarState
  7544 ;;		_XF_executeOnce
  7545 ;; This function uses a reentrant model
  7546 ;;
  7547                           
  7548                           	psect	text20
  7549   01361C                     __ptext20:
  7550                           	callstack 0
  7551   01361C                     _motorControl_Process:
  7552                           	callstack 16
  7553   01361C                     
  7554                           ;carFunctions.c: 75:      static MotorState state = OFF;;carFunctions.c: 76:      static
      +                           MotorState oldState = OFF;;carFunctions.c: 80:      switch(state)
  7555   01361C  EF35  F09B         	goto	l5086
  7556   013620                     l5076:
  7557                           
  7558                           ;carFunctions.c: 84:              if(ev->id == E_CONTACT_ON)
  7559                           ;stkvar	_ev @ sp[(0)+-2]
  7560   013620  0EFE               	movlw	-2
  7561   013622  CFE3 FFD9          	movff	plusw1,fsr2l
  7562   013626  0EFF               	movlw	-1
  7563   013628  CFE3 FFDA          	movff	plusw1,fsr2h
  7564   01362C  50DF               	movf	indf2,w,c
  7565   01362E  0A03               	xorlw	3
  7566   013630  A4D8               	btfss	status,2,c
  7567   013632  EF1D  F09B         	goto	u2801
  7568   013636  EF1F  F09B         	goto	u2800
  7569   01363A                     u2801:
  7570   01363A  EF4A  F09B         	goto	l5088
  7571   01363E                     u2800:
  7572   01363E                     
  7573                           ;carFunctions.c: 85:              {;carFunctions.c: 86:                  state = CRUISE;
  7574   01363E  0E01               	movlw	1
  7575   013640  6E1C               	movwf	motorControl_Process@state^0,c
  7576   013642  EF4A  F09B         	goto	l5088
  7577   013646                     l5080:
  7578                           
  7579                           ;carFunctions.c: 93:              if(ev->id == E_CONTACT_OFF)
  7580                           ;stkvar	_ev @ sp[(0)+-2]
  7581   013646  0EFE               	movlw	-2
  7582   013648  CFE3 FFD9          	movff	plusw1,fsr2l
  7583   01364C  0EFF               	movlw	-1
  7584   01364E  CFE3 FFDA          	movff	plusw1,fsr2h
  7585   013652  50DF               	movf	indf2,w,c
  7586   013654  0A02               	xorlw	2
  7587   013656  A4D8               	btfss	status,2,c
  7588   013658  EF30  F09B         	goto	u2811
  7589   01365C  EF32  F09B         	goto	u2810
  7590   013660                     u2811:
  7591   013660  EF4A  F09B         	goto	l5088
  7592   013664                     u2810:
  7593   013664                     
  7594                           ;carFunctions.c: 94:              {;carFunctions.c: 95:                  state = OFF;
  7595   013664  6A1C               	clrf	motorControl_Process@state^0,c
  7596   013666  EF4A  F09B         	goto	l5088
  7597   01366A                     l5086:
  7598   01366A  501C               	movf	motorControl_Process@state^0,w,c
  7599   01366C  6E2B               	movwf	(btemp+10)^0,c
  7600   01366E  6A2C               	clrf	(btemp+11)^0,c
  7601                           
  7602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7603                           ; Switch size 1, requested type "simple"
  7604                           ; Number of cases is 1, Range of values is 0 to 0
  7605                           ; switch strategies available:
  7606                           ; Name         Instructions Cycles
  7607                           ; simple_byte            4     3 (average)
  7608                           ;	Chosen strategy is simple_byte
  7609   013670  502C               	movf	(btemp+11)^0,w,c
  7610   013672  0A00               	xorlw	0	; case 0
  7611   013674  B4D8               	btfsc	status,2,c
  7612   013676  EF3F  F09B         	goto	l5578
  7613   01367A  EF4A  F09B         	goto	l5088
  7614   01367E                     l5578:
  7615                           
  7616                           ; Switch size 1, requested type "simple"
  7617                           ; Number of cases is 2, Range of values is 0 to 1
  7618                           ; switch strategies available:
  7619                           ; Name         Instructions Cycles
  7620                           ; simple_byte            7     4 (average)
  7621                           ;	Chosen strategy is simple_byte
  7622   01367E  502B               	movf	(btemp+10)^0,w,c
  7623   013680  0A00               	xorlw	0	; case 0
  7624   013682  B4D8               	btfsc	status,2,c
  7625   013684  EF10  F09B         	goto	l5076
  7626   013688  0A01               	xorlw	1	; case 1
  7627   01368A  B4D8               	btfsc	status,2,c
  7628   01368C  EF23  F09B         	goto	l5080
  7629   013690  EF4A  F09B         	goto	l5088
  7630   013694                     l5088:
  7631                           
  7632                           ;carFunctions.c: 103:      if(oldState == state)
  7633   013694  501C               	movf	motorControl_Process@state^0,w,c
  7634   013696  181B               	xorwf	motorControl_Process@oldState^0,w,c
  7635   013698  A4D8               	btfss	status,2,c
  7636   01369A  EF51  F09B         	goto	u2821
  7637   01369E  EF53  F09B         	goto	u2820
  7638   0136A2                     u2821:
  7639   0136A2  EF55  F09B         	goto	l1455
  7640   0136A6                     u2820:
  7641   0136A6  EF7E  F09B         	goto	l1456
  7642   0136AA                     l1455:
  7643                           
  7644                           ;carFunctions.c: 109:     oldState = state;
  7645   0136AA  C01C  F01B         	movff	motorControl_Process@state,motorControl_Process@oldState
  7646                           
  7647                           ;carFunctions.c: 112:     switch(state)
  7648   0136AE  EF69  F09B         	goto	l5098
  7649   0136B2                     l5092:
  7650                           
  7651                           ;carFunctions.c: 116:              motorControl(0,0);
  7652   0136B2  0E00               	movlw	0
  7653   0136B4  6EE6               	movwf	postinc1,c
  7654   0136B6  0E00               	movlw	0
  7655   0136B8  6EE6               	movwf	postinc1,c
  7656   0136BA  EC81  F09B         	call	_motorControl	;wreg free
  7657                           
  7658                           ;carFunctions.c: 117:              break;
  7659   0136BE  EF7E  F09B         	goto	l1456
  7660   0136C2                     l5094:
  7661                           
  7662                           ;carFunctions.c: 119:              motorControl(10,1);
  7663   0136C2  0E01               	movlw	1
  7664   0136C4  6EE6               	movwf	postinc1,c
  7665   0136C6  0E0A               	movlw	10
  7666   0136C8  6EE6               	movwf	postinc1,c
  7667   0136CA  EC81  F09B         	call	_motorControl	;wreg free
  7668                           
  7669                           ;carFunctions.c: 120:              break;
  7670   0136CE  EF7E  F09B         	goto	l1456
  7671   0136D2                     l5098:
  7672   0136D2  501C               	movf	motorControl_Process@state^0,w,c
  7673   0136D4  6E2B               	movwf	(btemp+10)^0,c
  7674   0136D6  6A2C               	clrf	(btemp+11)^0,c
  7675                           
  7676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7677                           ; Switch size 1, requested type "simple"
  7678                           ; Number of cases is 1, Range of values is 0 to 0
  7679                           ; switch strategies available:
  7680                           ; Name         Instructions Cycles
  7681                           ; simple_byte            4     3 (average)
  7682                           ;	Chosen strategy is simple_byte
  7683   0136D8  502C               	movf	(btemp+11)^0,w,c
  7684   0136DA  0A00               	xorlw	0	; case 0
  7685   0136DC  B4D8               	btfsc	status,2,c
  7686   0136DE  EF73  F09B         	goto	l5580
  7687   0136E2  EF7E  F09B         	goto	l1456
  7688   0136E6                     l5580:
  7689                           
  7690                           ; Switch size 1, requested type "simple"
  7691                           ; Number of cases is 2, Range of values is 0 to 1
  7692                           ; switch strategies available:
  7693                           ; Name         Instructions Cycles
  7694                           ; simple_byte            7     4 (average)
  7695                           ;	Chosen strategy is simple_byte
  7696   0136E6  502B               	movf	(btemp+10)^0,w,c
  7697   0136E8  0A00               	xorlw	0	; case 0
  7698   0136EA  B4D8               	btfsc	status,2,c
  7699   0136EC  EF59  F09B         	goto	l5092
  7700   0136F0  0A01               	xorlw	1	; case 1
  7701   0136F2  B4D8               	btfsc	status,2,c
  7702   0136F4  EF61  F09B         	goto	l5094
  7703   0136F8  EF7E  F09B         	goto	l1456
  7704   0136FC                     l1456:
  7705                           
  7706                           ; _motorControl_Process: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 2, argsize = 2, vargsize = 0
  7707   0136FC  52E5               	movf	postdec1,f,c
  7708   0136FE  52E5               	movf	postdec1,f,c
  7709   013700  0012               	return		;funcret
  7710   013702                     __end_of_motorControl_Process:
  7711                           	callstack 0
  7712                           
  7713 ;; *************** function _motorControl *****************
  7714 ;; Defined at:
  7715 ;;		line 23 in file "carFunctions.c"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;  percent         1  [STACK] unsigned char 
  7718 ;;  starter         1  [STACK] unsigned char 
  7719 ;; Auto vars:     Size  Location     Type
  7720 ;;  txMsg          16  [STACK] struct _CAN_TX_MSGOBJ
  7721 ;;  txdata          8  [STACK] unsigned char [8]
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  1  [STACK] void 
  7724 ;; Registers used:
  7725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7726 ;; Tracked objects:
  7727 ;;		On entry : 0/0
  7728 ;;		On exit  : 0/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7735 ;;Total ram usage:        0 bytes
  7736 ;; Hardware stack levels used: 1
  7737 ;; Hardware stack levels required when called: 12
  7738 ;; This function calls:
  7739 ;;		_CanSend
  7740 ;; This function is called by:
  7741 ;;		_motorControl_Process
  7742 ;; This function uses a reentrant model
  7743 ;;
  7744                           
  7745                           	psect	text21
  7746   013702                     __ptext21:
  7747                           	callstack 0
  7748   013702                     _motorControl:
  7749                           	callstack 0
  7750                           
  7751                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7752   013702  0E18               	movlw	24
  7753   013704  26E1               	addwf	fsr1l,f,c
  7754   013706  0E00               	movlw	0
  7755   013708  22E2               	addwfc	fsr1h,f,c
  7756   01370A                     
  7757                           ;carFunctions.c: 24:      static uint8_t lastPercent = 0;;carFunctions.c: 25:      stati
      +                          c uint8_t lastStarter = 0;;carFunctions.c: 26:      CAN_TX_MSGOBJ txMsg={0};
  7758   01370A  EE20  F001         	lfsr	2,motorControl@F6658
  7759                           
  7760                           ;stkvar	_txMsg @ sp[(-24)+0]
  7761   01370E  0E10               	movlw	16
  7762   013710  6E21               	movwf	btemp^0,c
  7763   013712  0EE8               	movlw	-24
  7764   013714                     us231999:
  7765   013714  CFDE FFE3          	movff	postinc2,plusw1
  7766   013718  28E8               	incf	wreg,w,c
  7767   01371A  2E21               	decfsz	btemp^0,f,c
  7768   01371C  D7FB               	bra	us231999
  7769   01371E                     
  7770                           ;carFunctions.c: 27:      uint8_t txdata[8];;carFunctions.c: 28:          if((lastPercen
      +                          t != percent)||(lastStarter != starter)) {
  7771                           ;stkvar	_percent @ sp[(-24)+-1]
  7772   01371E  0EE7               	movlw	-25
  7773   013720  50E3               	movf	plusw1,w,c
  7774   013722  1820               	xorwf	motorControl@lastPercent^0,w,c
  7775   013724  A4D8               	btfss	status,2,c
  7776   013726  EF97  F09B         	goto	u2321
  7777   01372A  EF99  F09B         	goto	u2320
  7778   01372E                     u2321:
  7779   01372E  EFA3  F09B         	goto	l4638
  7780   013732                     u2320:
  7781   013732                     
  7782                           ;stkvar	_starter @ sp[(-24)+-2]
  7783   013732  0EE6               	movlw	-26
  7784   013734  50E3               	movf	plusw1,w,c
  7785   013736  181F               	xorwf	motorControl@lastStarter^0,w,c
  7786   013738  B4D8               	btfsc	status,2,c
  7787   01373A  EFA1  F09B         	goto	u2331
  7788   01373E  EFA3  F09B         	goto	u2330
  7789   013742                     u2331:
  7790   013742  EFEC  F09B         	goto	l1425
  7791   013746                     u2330:
  7792   013746                     l4638:
  7793                           
  7794                           ;carFunctions.c: 29:              lastPercent = percent;
  7795                           ;stkvar	_percent @ sp[(-24)+-1]
  7796   013746  0EE7               	movlw	-25
  7797   013748  CFE3 F020          	movff	plusw1,motorControl@lastPercent
  7798                           
  7799                           ;carFunctions.c: 30:              lastStarter = starter;
  7800                           ;stkvar	_starter @ sp[(-24)+-2]
  7801   01374C  0EE6               	movlw	-26
  7802   01374E  CFE3 F01F          	movff	plusw1,motorControl@lastStarter
  7803   013752                     
  7804                           ;carFunctions.c: 32:              txMsg.bF.id.ID = (0x112);
  7805   013752  0E12               	movlw	18
  7806   013754  6E29               	movwf	(btemp+8)^0,c
  7807   013756  0E01               	movlw	1
  7808   013758  6E2A               	movwf	(btemp+9)^0,c
  7809   01375A  0E00               	movlw	0
  7810   01375C  6E2B               	movwf	(btemp+10)^0,c
  7811   01375E  0E00               	movlw	0
  7812   013760  6E2C               	movwf	(btemp+11)^0,c
  7813                           
  7814                           ;stkvar	_txMsg @ sp[(-24)+0]
  7815   013762  0EE8               	movlw	-24
  7816   013764  C029  FFE3         	movff	btemp+8,plusw1
  7817   013768  0EE9               	movlw	-23
  7818   01376A  C02A  FFE3         	movff	btemp+9,plusw1
  7819   01376E  0EEA               	movlw	-22
  7820   013770  C02B  FFE3         	movff	btemp+10,plusw1
  7821   013774  0EEB               	movlw	-21
  7822   013776  C02C  FFE3         	movff	btemp+11,plusw1
  7823   01377A                     
  7824                           ;carFunctions.c: 33:              txMsg.bF.ctrl.DLC = CAN_DLC_2;
  7825                           ;stkvar	_txMsg @ sp[(-24)+0]
  7826   01377A  0EEE               	movlw	238
  7827   01377C  24E1               	addwf	fsr1l,w,c
  7828   01377E  6ED9               	movwf	fsr2l,c
  7829   013780  0EFF               	movlw	255
  7830   013782  20E2               	addwfc	fsr1h,w,c
  7831   013784  6EDA               	movwf	fsr2h,c
  7832   013786  50DF               	movf	223,w,c
  7833   013788  0BF0               	andlw	-16
  7834   01378A  0902               	iorlw	2
  7835   01378C  6EDF               	movwf	223,c
  7836   01378E                     
  7837                           ;carFunctions.c: 34:              txdata[0] = percent;
  7838                           ;stkvar	_percent @ sp[(-24)+-1]
  7839                           ;stkvar	_txdata @ sp[(-24)+16]
  7840   01378E  0EE7               	movlw	-25
  7841   013790  CFE3 F021          	movff	plusw1,btemp
  7842   013794  0EF8               	movlw	-8
  7843   013796  C021  FFE3         	movff	btemp,plusw1
  7844   01379A                     
  7845                           ;carFunctions.c: 35:              txdata[1] = starter;
  7846                           ;stkvar	_starter @ sp[(-24)+-2]
  7847                           ;stkvar	_txdata @ sp[(-24)+16]
  7848   01379A  0EF9               	movlw	249
  7849   01379C  24E1               	addwf	fsr1l,w,c
  7850   01379E  6ED9               	movwf	fsr2l,c
  7851   0137A0  0EFF               	movlw	255
  7852   0137A2  20E2               	addwfc	fsr1h,w,c
  7853   0137A4  6EDA               	movwf	fsr2h,c
  7854   0137A6  0EE6               	movlw	-26
  7855   0137A8  CFE3 FFDF          	movff	plusw1,indf2
  7856   0137AC                     
  7857                           ;carFunctions.c: 36:          CanSend(&txMsg,txdata);
  7858                           ;stkvar	_txdata @ sp[(-24)+16]
  7859   0137AC  0EF8               	movlw	248
  7860   0137AE  24E1               	addwf	fsr1l,w,c
  7861   0137B0  6E21               	movwf	btemp^0,c
  7862   0137B2  0EFF               	movlw	255
  7863   0137B4  20E2               	addwfc	fsr1h,w,c
  7864   0137B6  6E22               	movwf	(btemp+1)^0,c
  7865   0137B8  C021  FFE6         	movff	btemp,postinc1
  7866   0137BC  C022  FFE6         	movff	btemp+1,postinc1
  7867                           
  7868                           ;stkvar	_txMsg @ sp[(-26)+0]
  7869   0137C0  0EE6               	movlw	230
  7870   0137C2  24E1               	addwf	fsr1l,w,c
  7871   0137C4  6E21               	movwf	btemp^0,c
  7872   0137C6  0EFF               	movlw	255
  7873   0137C8  20E2               	addwfc	fsr1h,w,c
  7874   0137CA  6E22               	movwf	(btemp+1)^0,c
  7875   0137CC  C021  FFE6         	movff	btemp,postinc1
  7876   0137D0  C022  FFE6         	movff	btemp+1,postinc1
  7877   0137D4  ECAF  F09F         	call	_CanSend	;wreg free
  7878   0137D8                     l1425:
  7879                           
  7880                           ; _motorControl: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7881   0137D8  0EE6               	movlw	230
  7882   0137DA  26E1               	addwf	fsr1l,f,c
  7883   0137DC  0EFF               	movlw	255
  7884   0137DE  22E2               	addwfc	fsr1h,f,c
  7885   0137E0  0012               	return		;funcret
  7886   0137E2                     __end_of_motorControl:
  7887                           	callstack 0
  7888                           
  7889 ;; *************** function _lightContol_FrontLight *****************
  7890 ;; Defined at:
  7891 ;;		line 39 in file "carFunctions.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;  light           1  [STACK] unsigned char 
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;  txMsg          16  [STACK] struct _CAN_TX_MSGOBJ
  7896 ;;  txdata          8  [STACK] unsigned char [8]
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  1  [STACK] void 
  7899 ;; Registers used:
  7900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7910 ;;Total ram usage:        0 bytes
  7911 ;; Hardware stack levels used: 1
  7912 ;; Hardware stack levels required when called: 12
  7913 ;; This function calls:
  7914 ;;		_CanSend
  7915 ;; This function is called by:
  7916 ;;		_lightControl_Process
  7917 ;; This function uses a reentrant model
  7918 ;;
  7919                           
  7920                           	psect	text22
  7921   013E02                     __ptext22:
  7922                           	callstack 0
  7923   013E02                     _lightContol_FrontLight:
  7924                           	callstack 0
  7925                           
  7926                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7927   013E02  0E18               	movlw	24
  7928   013E04  26E1               	addwf	fsr1l,f,c
  7929   013E06  0E00               	movlw	0
  7930   013E08  22E2               	addwfc	fsr1h,f,c
  7931   013E0A                     
  7932                           ;carFunctions.c: 39:  void lightContol_FrontLight(uint8_t light);carFunctions.c: 40:  {;
      +                          carFunctions.c: 42:     static uint8_t lastLight=0;;carFunctions.c: 43:     CAN_TX_MSGOB
      +                          J txMsg={0};
  7933   013E0A  EE20  F08B         	lfsr	2,lightContol_FrontLight@F6664
  7934                           
  7935                           ;stkvar	_txMsg @ sp[(-24)+0]
  7936   013E0E  0E10               	movlw	16
  7937   013E10  6E21               	movwf	btemp^0,c
  7938   013E12  0EE8               	movlw	-24
  7939   013E14                     us234999:
  7940   013E14  CFDE FFE3          	movff	postinc2,plusw1
  7941   013E18  28E8               	incf	wreg,w,c
  7942   013E1A  2E21               	decfsz	btemp^0,f,c
  7943   013E1C  D7FB               	bra	us234999
  7944   013E1E                     
  7945                           ;carFunctions.c: 44:     uint8_t txdata[8];;carFunctions.c: 45:     if(lastLight!= light
      +                          ) {
  7946                           ;stkvar	_light @ sp[(-24)+-1]
  7947   013E1E  0EE7               	movlw	-25
  7948   013E20  50E3               	movf	plusw1,w,c
  7949   013E22  181E               	xorwf	lightContol_FrontLight@lastLight^0,w,c
  7950   013E24  B4D8               	btfsc	status,2,c
  7951   013E26  EF17  F09F         	goto	u2351
  7952   013E2A  EF19  F09F         	goto	u2350
  7953   013E2E                     u2351:
  7954   013E2E  EF53  F09F         	goto	l1433
  7955   013E32                     u2350:
  7956   013E32                     
  7957                           ;carFunctions.c: 46:         lastLight = light;
  7958                           ;stkvar	_light @ sp[(-24)+-1]
  7959   013E32  0EE7               	movlw	-25
  7960   013E34  CFE3 F01E          	movff	plusw1,lightContol_FrontLight@lastLight
  7961   013E38                     
  7962                           ;carFunctions.c: 48:         txMsg.bF.id.ID = (0x19);
  7963   013E38  0E19               	movlw	25
  7964   013E3A  6E29               	movwf	(btemp+8)^0,c
  7965   013E3C  6A2A               	clrf	(btemp+9)^0,c
  7966   013E3E  6A2B               	clrf	(btemp+10)^0,c
  7967   013E40  6A2C               	clrf	(btemp+11)^0,c
  7968                           
  7969                           ;stkvar	_txMsg @ sp[(-24)+0]
  7970   013E42  0EE8               	movlw	-24
  7971   013E44  C029  FFE3         	movff	btemp+8,plusw1
  7972   013E48  0EE9               	movlw	-23
  7973   013E4A  C02A  FFE3         	movff	btemp+9,plusw1
  7974   013E4E  0EEA               	movlw	-22
  7975   013E50  C02B  FFE3         	movff	btemp+10,plusw1
  7976   013E54  0EEB               	movlw	-21
  7977   013E56  C02C  FFE3         	movff	btemp+11,plusw1
  7978   013E5A                     
  7979                           ;carFunctions.c: 49:         txMsg.bF.ctrl.DLC = CAN_DLC_1;
  7980                           ;stkvar	_txMsg @ sp[(-24)+0]
  7981   013E5A  0EEE               	movlw	238
  7982   013E5C  24E1               	addwf	fsr1l,w,c
  7983   013E5E  6ED9               	movwf	fsr2l,c
  7984   013E60  0EFF               	movlw	255
  7985   013E62  20E2               	addwfc	fsr1h,w,c
  7986   013E64  6EDA               	movwf	fsr2h,c
  7987   013E66  50DF               	movf	223,w,c
  7988   013E68  0BF0               	andlw	-16
  7989   013E6A  0901               	iorlw	1
  7990   013E6C  6EDF               	movwf	223,c
  7991   013E6E                     
  7992                           ;carFunctions.c: 50:         txdata[0] = light;
  7993                           ;stkvar	_light @ sp[(-24)+-1]
  7994                           ;stkvar	_txdata @ sp[(-24)+16]
  7995   013E6E  0EE7               	movlw	-25
  7996   013E70  CFE3 F021          	movff	plusw1,btemp
  7997   013E74  0EF8               	movlw	-8
  7998   013E76  C021  FFE3         	movff	btemp,plusw1
  7999   013E7A                     
  8000                           ;carFunctions.c: 51:         CanSend(&txMsg,txdata);
  8001                           ;stkvar	_txdata @ sp[(-24)+16]
  8002   013E7A  0EF8               	movlw	248
  8003   013E7C  24E1               	addwf	fsr1l,w,c
  8004   013E7E  6E21               	movwf	btemp^0,c
  8005   013E80  0EFF               	movlw	255
  8006   013E82  20E2               	addwfc	fsr1h,w,c
  8007   013E84  6E22               	movwf	(btemp+1)^0,c
  8008   013E86  C021  FFE6         	movff	btemp,postinc1
  8009   013E8A  C022  FFE6         	movff	btemp+1,postinc1
  8010                           
  8011                           ;stkvar	_txMsg @ sp[(-26)+0]
  8012   013E8E  0EE6               	movlw	230
  8013   013E90  24E1               	addwf	fsr1l,w,c
  8014   013E92  6E21               	movwf	btemp^0,c
  8015   013E94  0EFF               	movlw	255
  8016   013E96  20E2               	addwfc	fsr1h,w,c
  8017   013E98  6E22               	movwf	(btemp+1)^0,c
  8018   013E9A  C021  FFE6         	movff	btemp,postinc1
  8019   013E9E  C022  FFE6         	movff	btemp+1,postinc1
  8020   013EA2  ECAF  F09F         	call	_CanSend	;wreg free
  8021   013EA6                     l1433:
  8022                           
  8023                           ; _lightContol_FrontLight: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 1, argsize = 1, vargsize = 0
  8024   013EA6  0EE7               	movlw	231
  8025   013EA8  26E1               	addwf	fsr1l,f,c
  8026   013EAA  0EFF               	movlw	255
  8027   013EAC  22E2               	addwfc	fsr1h,f,c
  8028   013EAE  0012               	return		;funcret
  8029   013EB0                     __end_of_lightContol_FrontLight:
  8030                           	callstack 0
  8031                           
  8032 ;; *************** function _lightContol_BackLight *****************
  8033 ;; Defined at:
  8034 ;;		line 54 in file "carFunctions.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;  light           1  [STACK] unsigned char 
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;  txMsg          16  [STACK] struct _CAN_TX_MSGOBJ
  8039 ;;  txdata          8  [STACK] unsigned char [8]
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  1  [STACK] void 
  8042 ;; Registers used:
  8043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8053 ;;Total ram usage:        0 bytes
  8054 ;; Hardware stack levels used: 1
  8055 ;; Hardware stack levels required when called: 12
  8056 ;; This function calls:
  8057 ;;		_CanSend
  8058 ;; This function is called by:
  8059 ;;		_lightControl_Process
  8060 ;; This function uses a reentrant model
  8061 ;;
  8062                           
  8063                           	psect	text23
  8064   013D4E                     __ptext23:
  8065                           	callstack 0
  8066   013D4E                     _lightContol_BackLight:
  8067                           	callstack 0
  8068                           
  8069                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8070   013D4E  0E18               	movlw	24
  8071   013D50  26E1               	addwf	fsr1l,f,c
  8072   013D52  0E00               	movlw	0
  8073   013D54  22E2               	addwfc	fsr1h,f,c
  8074   013D56                     
  8075                           ;carFunctions.c: 54:  void lightContol_BackLight(uint8_t light);carFunctions.c: 55:  {;c
      +                          arFunctions.c: 56:      static uint8_t lastLight=0;;carFunctions.c: 57:      CAN_TX_MSGO
      +                          BJ txMsg={0};
  8076   013D56  EE20  F07B         	lfsr	2,lightContol_BackLight@F6670
  8077                           
  8078                           ;stkvar	_txMsg @ sp[(-24)+0]
  8079   013D5A  0E10               	movlw	16
  8080   013D5C  6E21               	movwf	btemp^0,c
  8081   013D5E  0EE8               	movlw	-24
  8082   013D60                     us236999:
  8083   013D60  CFDE FFE3          	movff	postinc2,plusw1
  8084   013D64  28E8               	incf	wreg,w,c
  8085   013D66  2E21               	decfsz	btemp^0,f,c
  8086   013D68  D7FB               	bra	us236999
  8087   013D6A                     
  8088                           ;carFunctions.c: 58:      uint8_t txdata[8];;carFunctions.c: 59:      if(lastLight!= lig
      +                          ht) {
  8089                           ;stkvar	_light @ sp[(-24)+-1]
  8090   013D6A  0EE7               	movlw	-25
  8091   013D6C  50E3               	movf	plusw1,w,c
  8092   013D6E  181D               	xorwf	lightContol_BackLight@lastLight^0,w,c
  8093   013D70  B4D8               	btfsc	status,2,c
  8094   013D72  EFBD  F09E         	goto	u2371
  8095   013D76  EFBF  F09E         	goto	u2370
  8096   013D7A                     u2371:
  8097   013D7A  EFFC  F09E         	goto	l1441
  8098   013D7E                     u2370:
  8099   013D7E                     
  8100                           ;carFunctions.c: 60:          lastLight = light;
  8101                           ;stkvar	_light @ sp[(-24)+-1]
  8102   013D7E  0EE7               	movlw	-25
  8103   013D80  CFE3 F01D          	movff	plusw1,lightContol_BackLight@lastLight
  8104   013D84                     
  8105                           ;carFunctions.c: 62:          txMsg.bF.id.ID = (0x119);
  8106   013D84  0E19               	movlw	25
  8107   013D86  6E29               	movwf	(btemp+8)^0,c
  8108   013D88  0E01               	movlw	1
  8109   013D8A  6E2A               	movwf	(btemp+9)^0,c
  8110   013D8C  0E00               	movlw	0
  8111   013D8E  6E2B               	movwf	(btemp+10)^0,c
  8112   013D90  0E00               	movlw	0
  8113   013D92  6E2C               	movwf	(btemp+11)^0,c
  8114                           
  8115                           ;stkvar	_txMsg @ sp[(-24)+0]
  8116   013D94  0EE8               	movlw	-24
  8117   013D96  C029  FFE3         	movff	btemp+8,plusw1
  8118   013D9A  0EE9               	movlw	-23
  8119   013D9C  C02A  FFE3         	movff	btemp+9,plusw1
  8120   013DA0  0EEA               	movlw	-22
  8121   013DA2  C02B  FFE3         	movff	btemp+10,plusw1
  8122   013DA6  0EEB               	movlw	-21
  8123   013DA8  C02C  FFE3         	movff	btemp+11,plusw1
  8124   013DAC                     
  8125                           ;carFunctions.c: 63:          txMsg.bF.ctrl.DLC = CAN_DLC_1;
  8126                           ;stkvar	_txMsg @ sp[(-24)+0]
  8127   013DAC  0EEE               	movlw	238
  8128   013DAE  24E1               	addwf	fsr1l,w,c
  8129   013DB0  6ED9               	movwf	fsr2l,c
  8130   013DB2  0EFF               	movlw	255
  8131   013DB4  20E2               	addwfc	fsr1h,w,c
  8132   013DB6  6EDA               	movwf	fsr2h,c
  8133   013DB8  50DF               	movf	223,w,c
  8134   013DBA  0BF0               	andlw	-16
  8135   013DBC  0901               	iorlw	1
  8136   013DBE  6EDF               	movwf	223,c
  8137   013DC0                     
  8138                           ;carFunctions.c: 64:          txdata[0] = light;
  8139                           ;stkvar	_light @ sp[(-24)+-1]
  8140                           ;stkvar	_txdata @ sp[(-24)+16]
  8141   013DC0  0EE7               	movlw	-25
  8142   013DC2  CFE3 F021          	movff	plusw1,btemp
  8143   013DC6  0EF8               	movlw	-8
  8144   013DC8  C021  FFE3         	movff	btemp,plusw1
  8145   013DCC                     
  8146                           ;carFunctions.c: 65:          CanSend(&txMsg,txdata);
  8147                           ;stkvar	_txdata @ sp[(-24)+16]
  8148   013DCC  0EF8               	movlw	248
  8149   013DCE  24E1               	addwf	fsr1l,w,c
  8150   013DD0  6E21               	movwf	btemp^0,c
  8151   013DD2  0EFF               	movlw	255
  8152   013DD4  20E2               	addwfc	fsr1h,w,c
  8153   013DD6  6E22               	movwf	(btemp+1)^0,c
  8154   013DD8  C021  FFE6         	movff	btemp,postinc1
  8155   013DDC  C022  FFE6         	movff	btemp+1,postinc1
  8156                           
  8157                           ;stkvar	_txMsg @ sp[(-26)+0]
  8158   013DE0  0EE6               	movlw	230
  8159   013DE2  24E1               	addwf	fsr1l,w,c
  8160   013DE4  6E21               	movwf	btemp^0,c
  8161   013DE6  0EFF               	movlw	255
  8162   013DE8  20E2               	addwfc	fsr1h,w,c
  8163   013DEA  6E22               	movwf	(btemp+1)^0,c
  8164   013DEC  C021  FFE6         	movff	btemp,postinc1
  8165   013DF0  C022  FFE6         	movff	btemp+1,postinc1
  8166   013DF4  ECAF  F09F         	call	_CanSend	;wreg free
  8167   013DF8                     l1441:
  8168                           
  8169                           ; _lightContol_BackLight: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  8170   013DF8  0EE7               	movlw	231
  8171   013DFA  26E1               	addwf	fsr1l,f,c
  8172   013DFC  0EFF               	movlw	255
  8173   013DFE  22E2               	addwfc	fsr1h,f,c
  8174   013E00  0012               	return		;funcret
  8175   013E02                     __end_of_lightContol_BackLight:
  8176                           	callstack 0
  8177                           
  8178 ;; *************** function _CanSend *****************
  8179 ;; Defined at:
  8180 ;;		line 217 in file "can/can.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;  txObj           2  [STACK] PTR struct _CAN_TX_MSGOB
  8183 ;;		 -> txMsg(16), 
  8184 ;;  txd             2  [STACK] PTR unsigned char 
  8185 ;;		 -> txdata(8), txdata(8), txdata(8), 
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;  txFlags         1  [STACK] enum E5580
  8188 ;; Return value:  Size  Location     Type
  8189 ;;                  1  [STACK] char 
  8190 ;; Registers used:
  8191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8192 ;; Tracked objects:
  8193 ;;		On entry : 0/0
  8194 ;;		On exit  : 0/0
  8195 ;;		Unchanged: 0/0
  8196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8201 ;;Total ram usage:        0 bytes
  8202 ;; Hardware stack levels used: 1
  8203 ;; Hardware stack levels required when called: 11
  8204 ;; This function calls:
  8205 ;;		_DRV_CANFDSPI_TransmitChannelEventGet
  8206 ;;		_DRV_CANFDSPI_TransmitChannelLoad
  8207 ;; This function is called by:
  8208 ;;		_motorControl
  8209 ;;		_lightContol_FrontLight
  8210 ;;		_lightContol_BackLight
  8211 ;; This function uses a reentrant model
  8212 ;;
  8213                           
  8214                           	psect	text24
  8215   013F5E                     __ptext24:
  8216                           	callstack 0
  8217   013F5E                     _CanSend:
  8218                           	callstack 0
  8219                           
  8220                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8221   013F5E  52E6               	movf	postinc1,f,c
  8222   013F60                     
  8223                           ;can/can.c: 217: int8_t CanSend(CAN_TX_MSGOBJ * txObj, uint8_t * txd);can/can.c: 218: {;
      +                          can/can.c: 219:     txObj->bF.ctrl.SEQ = 1;
  8224                           ;stkvar	_txObj @ sp[(-1)+-2]
  8225   013F60  0EFD               	movlw	-3
  8226   013F62  CFE3 F02B          	movff	plusw1,btemp+10
  8227   013F66  0EFE               	movlw	-2
  8228   013F68  CFE3 F02C          	movff	plusw1,btemp+11
  8229   013F6C  0E08               	movlw	8
  8230   013F6E  242B               	addwf	(btemp+10)^0,w,c
  8231   013F70  6ED9               	movwf	fsr2l,c
  8232   013F72  0E00               	movlw	0
  8233   013F74  202C               	addwfc	(btemp+11)^0,w,c
  8234   013F76  6EDA               	movwf	fsr2h,c
  8235   013F78  0E01               	movlw	1
  8236   013F7A  6EDE               	movwf	postinc2,c
  8237   013F7C  0E00               	movlw	0
  8238   013F7E  6EDE               	movwf	postinc2,c
  8239   013F80  0E00               	movlw	0
  8240   013F82  6EDE               	movwf	postinc2,c
  8241   013F84  0E00               	movlw	0
  8242   013F86  6EDD               	movwf	postdec2,c
  8243   013F88                     
  8244                           ;can/can.c: 221:     CAN_TX_FIFO_EVENT txFlags;;can/can.c: 222:     DRV_CANFDSPI_Transmi
      +                          tChannelEventGet(CAN_FIFO_CH1,&txFlags);
  8245                           ;stkvar	_txFlags @ sp[(-1)+0]
  8246   013F88  0EFF               	movlw	255
  8247   013F8A  24E1               	addwf	fsr1l,w,c
  8248   013F8C  6E21               	movwf	btemp^0,c
  8249   013F8E  0EFF               	movlw	255
  8250   013F90  20E2               	addwfc	fsr1h,w,c
  8251   013F92  6E22               	movwf	(btemp+1)^0,c
  8252   013F94  C021  FFE6         	movff	btemp,postinc1
  8253   013F98  C022  FFE6         	movff	btemp+1,postinc1
  8254   013F9C  0E01               	movlw	1
  8255   013F9E  6EE6               	movwf	postinc1,c
  8256   013FA0  EC56  F0A0         	call	_DRV_CANFDSPI_TransmitChannelEventGet	;wreg free
  8257   013FA4                     
  8258                           ;can/can.c: 223:     if(txFlags & CAN_TX_FIFO_NOT_FULL_EVENT)
  8259                           ;stkvar	_txFlags @ sp[(-1)+0]
  8260   013FA4  0EFF               	movlw	-1
  8261   013FA6  A0E3               	btfss	plusw1,0,c
  8262   013FA8  EFD8  F09F         	goto	u1991
  8263   013FAC  EFDA  F09F         	goto	u1990
  8264   013FB0                     u1991:
  8265   013FB0  EFFF  F09F         	goto	l158
  8266   013FB4                     u1990:
  8267   013FB4                     
  8268                           ;can/can.c: 224:     {;can/can.c: 225:       DRV_CANFDSPI_TransmitChannelLoad(CAN_FIFO_C
      +                          H1,txObj,txd,txObj->bF.ctrl.DLC,1);
  8269   013FB4  0E01               	movlw	1
  8270   013FB6  6EE6               	movwf	postinc1,c
  8271                           
  8272                           ;stkvar	_txObj @ sp[(-2)+-2]
  8273   013FB8  0EFC               	movlw	-4
  8274   013FBA  CFE3 F02B          	movff	plusw1,btemp+10
  8275   013FBE  0EFD               	movlw	-3
  8276   013FC0  CFE3 F02C          	movff	plusw1,btemp+11
  8277   013FC4  0E06               	movlw	6
  8278   013FC6  242B               	addwf	(btemp+10)^0,w,c
  8279   013FC8  6ED9               	movwf	fsr2l,c
  8280   013FCA  0E00               	movlw	0
  8281   013FCC  202C               	addwfc	(btemp+11)^0,w,c
  8282   013FCE  6EDA               	movwf	fsr2h,c
  8283   013FD0  50DF               	movf	223,w,c
  8284   013FD2  0B0F               	andlw	15
  8285   013FD4  6E2C               	movwf	(btemp+11)^0,c
  8286   013FD6  C02C  FFE6         	movff	btemp+11,postinc1
  8287   013FDA  0E00               	movlw	0
  8288   013FDC  6EE6               	movwf	postinc1,c
  8289   013FDE  6EE6               	movwf	postinc1,c
  8290   013FE0  6EE6               	movwf	postinc1,c
  8291                           
  8292                           ;stkvar	_txd @ sp[(-6)+-4]
  8293   013FE2  0EF6               	movlw	-10
  8294   013FE4  CFE3 FFE6          	movff	plusw1,postinc1
  8295   013FE8  CFE3 FFE6          	movff	plusw1,postinc1
  8296                           
  8297                           ;stkvar	_txObj @ sp[(-8)+-2]
  8298   013FEC  0EF6               	movlw	-10
  8299   013FEE  CFE3 FFE6          	movff	plusw1,postinc1
  8300   013FF2  CFE3 FFE6          	movff	plusw1,postinc1
  8301   013FF6  0E01               	movlw	1
  8302   013FF8  6EE6               	movwf	postinc1,c
  8303   013FFA  EC00  F080         	call	_DRV_CANFDSPI_TransmitChannelLoad	;wreg free
  8304   013FFE                     l158:
  8305                           
  8306                           ; _CanSend: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  8307   013FFE  0EFB               	movlw	251
  8308   014000  26E1               	addwf	fsr1l,f,c
  8309   014002  0EFF               	movlw	255
  8310   014004  22E2               	addwfc	fsr1h,f,c
  8311   014006  0012               	return		;funcret
  8312   014008                     __end_of_CanSend:
  8313                           	callstack 0
  8314                           
  8315 ;; *************** function _DRV_CANFDSPI_TransmitChannelLoad *****************
  8316 ;; Defined at:
  8317 ;;		line 706 in file "can/can.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;  channel         1  [STACK] enum E5287
  8320 ;;  txObj           2  [STACK] PTR struct _CAN_TX_MSGOB
  8321 ;;		 -> txMsg(16), 
  8322 ;;  txd             2  [STACK] PTR unsigned char 
  8323 ;;		 -> txdata(8), txdata(8), txdata(8), 
  8324 ;;  txdNumBytes     4  [STACK] unsigned long 
  8325 ;;  flush           1  [STACK] _Bool 
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;  temp32          4  [STACK] unsigned long 
  8328 ;;  txBuffer       76  [STACK] unsigned char [76]
  8329 ;;  fifoReg        12  [STACK] unsigned long [3]
  8330 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
  8331 ;;  a               4  [STACK] unsigned long 
  8332 ;;  ciFifoUa        4  [STACK] struct _REG_CiFIFOUA
  8333 ;;  dataBytesInO    4  [STACK] unsigned long 
  8334 ;;  ciFifoSta       4  [STACK] struct _REG_CiFIFOSTA
  8335 ;;  n               2  [STACK] unsigned short 
  8336 ;;  spiTransferE    1  [STACK] char 
  8337 ;;  i               1  [STACK] unsigned char 
  8338 ;;  j               1  [STACK] unsigned char 
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  1  [STACK] char 
  8341 ;; Registers used:
  8342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8352 ;;Total ram usage:        0 bytes
  8353 ;; Hardware stack levels used: 1
  8354 ;; Hardware stack levels required when called: 10
  8355 ;; This function calls:
  8356 ;;		_DRV_CANFDSPI_DlcToDataBytes
  8357 ;;		_DRV_CANFDSPI_ReadWordArray
  8358 ;;		_DRV_CANFDSPI_TransmitChannelUpdate
  8359 ;;		_DRV_CANFDSPI_WriteByteArray
  8360 ;; This function is called by:
  8361 ;;		_CanSend
  8362 ;; This function uses a reentrant model
  8363 ;;
  8364                           
  8365                           	psect	text25
  8366   010000                     __ptext25:
  8367                           	callstack 0
  8368   010000                     _DRV_CANFDSPI_TransmitChannelLoad:
  8369                           	callstack 0
  8370                           
  8371                           ; autosize = 114, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10
      +                           vargsize = 0, retsize = 0 argfudge = 0
  8372   010000  0E72               	movlw	114
  8373   010002  26E1               	addwf	fsr1l,f,c
  8374   010004  0E00               	movlw	0
  8375   010006  22E2               	addwfc	fsr1h,f,c
  8376   010008                     
  8377                           ;can/can.c: 719:     a = 0x050 + (channel * (3*4));
  8378                           ;stkvar	_channel @ sp[(-114)+-1]
  8379   010008  0E8D               	movlw	-115
  8380   01000A  50E3               	movf	plusw1,w,c
  8381   01000C  0D0C               	mullw	12
  8382   01000E  0E50               	movlw	80
  8383   010010  26F3               	addwf	243,f,c
  8384   010012  0E00               	movlw	0
  8385   010014  22F4               	addwfc	244,f,c
  8386                           
  8387                           ;stkvar	_a @ sp[(-114)+97]
  8388   010016  0EEF               	movlw	-17
  8389   010018  CFF3 FFE3          	movff	prodl,plusw1
  8390   01001C  0EF0               	movlw	-16
  8391   01001E  CFF4 FFE3          	movff	prodh,plusw1
  8392   010022  0EF1               	movlw	-15
  8393   010024  6AE3               	clrf	plusw1,c
  8394   010026  0EF2               	movlw	-14
  8395   010028  6AE3               	clrf	plusw1,c
  8396   01002A                     
  8397                           ;can/can.c: 721:     spiTransferError = DRV_CANFDSPI_ReadWordArray( (uint16_t)a, fifoReg
      +                          , 3);
  8398   01002A  0E03               	movlw	3
  8399   01002C  6EE6               	movwf	postinc1,c
  8400   01002E  0E00               	movlw	0
  8401   010030  6EE6               	movwf	postinc1,c
  8402                           
  8403                           ;stkvar	_fifoReg @ sp[(-116)+80]
  8404   010032  0EDC               	movlw	220
  8405   010034  24E1               	addwf	fsr1l,w,c
  8406   010036  6E21               	movwf	btemp^0,c
  8407   010038  0EFF               	movlw	255
  8408   01003A  20E2               	addwfc	fsr1h,w,c
  8409   01003C  6E22               	movwf	(btemp+1)^0,c
  8410   01003E  C021  FFE6         	movff	btemp,postinc1
  8411   010042  C022  FFE6         	movff	btemp+1,postinc1
  8412                           
  8413                           ;stkvar	_a @ sp[(-118)+97]
  8414   010046  0EEB               	movlw	-21
  8415   010048  CFE3 FFE6          	movff	plusw1,postinc1
  8416   01004C  CFE3 FFE6          	movff	plusw1,postinc1
  8417   010050  EC59  F08A         	call	_DRV_CANFDSPI_ReadWordArray	;wreg free
  8418                           
  8419                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  8420   010054  0EFD               	movlw	-3
  8421   010056  C021  FFE3         	movff	btemp,plusw1
  8422   01005A                     
  8423                           ;can/can.c: 722:     if (spiTransferError) {
  8424                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  8425   01005A  0EFD               	movlw	-3
  8426   01005C  50E3               	movf	plusw1,w,c
  8427   01005E  B4D8               	btfsc	status,2,c
  8428   010060  EF34  F080         	goto	u1701
  8429   010064  EF36  F080         	goto	u1700
  8430   010068                     u1701:
  8431   010068  EF3A  F080         	goto	l4128
  8432   01006C                     u1700:
  8433   01006C                     
  8434                           ;can/can.c: 723:         return -1;
  8435   01006C  0EFF               	movlw	255
  8436   01006E  6E21               	movwf	btemp^0,c
  8437   010070  EFA1  F083         	goto	l264
  8438   010074                     l4128:
  8439                           
  8440                           ;can/can.c: 727:     ciFifoCon.word = fifoReg[0];
  8441                           ;stkvar	_fifoReg @ sp[(-114)+80]
  8442   010074  0EDE               	movlw	-34
  8443   010076  CFE3 F029          	movff	plusw1,btemp+8
  8444   01007A  0EDF               	movlw	-33
  8445   01007C  CFE3 F02A          	movff	plusw1,btemp+9
  8446   010080  0EE0               	movlw	-32
  8447   010082  CFE3 F02B          	movff	plusw1,btemp+10
  8448   010086  0EE1               	movlw	-31
  8449   010088  CFE3 F02C          	movff	plusw1,btemp+11
  8450                           
  8451                           ;stkvar	_ciFifoCon @ sp[(-114)+92]
  8452   01008C  0EEA               	movlw	-22
  8453   01008E  C029  FFE3         	movff	btemp+8,plusw1
  8454   010092  0EEB               	movlw	-21
  8455   010094  C02A  FFE3         	movff	btemp+9,plusw1
  8456   010098  0EEC               	movlw	-20
  8457   01009A  C02B  FFE3         	movff	btemp+10,plusw1
  8458   01009E  0EED               	movlw	-19
  8459   0100A0  C02C  FFE3         	movff	btemp+11,plusw1
  8460   0100A4                     
  8461                           ;can/can.c: 728:     if (!ciFifoCon.txBF.TxEnable) {
  8462                           ;stkvar	_ciFifoCon @ sp[(-114)+92]
  8463   0100A4  50E1               	movf	fsr1l,w,c
  8464   0100A6  0FEA               	addlw	-22
  8465   0100A8  6ED9               	movwf	fsr2l,c
  8466   0100AA  50E2               	movf	fsr1h,w,c
  8467   0100AC  6EDA               	movwf	fsr2h,c
  8468   0100AE  0EFF               	movlw	255
  8469   0100B0  22DA               	addwfc	fsr2h,f,c
  8470   0100B2  BEDF               	btfsc	indf2,7,c
  8471   0100B4  EF5E  F080         	goto	u1711
  8472   0100B8  EF60  F080         	goto	u1710
  8473   0100BC                     u1711:
  8474   0100BC  EF64  F080         	goto	l4136
  8475   0100C0                     u1710:
  8476   0100C0                     
  8477                           ;can/can.c: 729:         return -2;
  8478   0100C0  0EFE               	movlw	254
  8479   0100C2  6E21               	movwf	btemp^0,c
  8480   0100C4  EFA1  F083         	goto	l264
  8481   0100C8                     l4136:
  8482                           
  8483                           ;can/can.c: 733:     dataBytesInObject = DRV_CANFDSPI_DlcToDataBytes((CAN_DLC) txObj->bF
      +                          .ctrl.DLC);
  8484                           ;stkvar	_txObj @ sp[(-114)+-3]
  8485   0100C8  0E8B               	movlw	-117
  8486   0100CA  CFE3 F02B          	movff	plusw1,btemp+10
  8487   0100CE  0E8C               	movlw	-116
  8488   0100D0  CFE3 F02C          	movff	plusw1,btemp+11
  8489   0100D4  0E06               	movlw	6
  8490   0100D6  242B               	addwf	(btemp+10)^0,w,c
  8491   0100D8  6ED9               	movwf	fsr2l,c
  8492   0100DA  0E00               	movlw	0
  8493   0100DC  202C               	addwfc	(btemp+11)^0,w,c
  8494   0100DE  6EDA               	movwf	fsr2h,c
  8495   0100E0  50DF               	movf	223,w,c
  8496   0100E2  0B0F               	andlw	15
  8497   0100E4  6EE6               	movwf	postinc1,c
  8498   0100E6  EC5A  F091         	call	_DRV_CANFDSPI_DlcToDataBytes	;wreg free
  8499                           
  8500                           ;stkvar	_dataBytesInObject @ sp[(-114)+105]
  8501   0100EA  0EF7               	movlw	-9
  8502   0100EC  C021  FFE3         	movff	btemp,plusw1
  8503   0100F0  0EF8               	movlw	-8
  8504   0100F2  C022  FFE3         	movff	btemp+1,plusw1
  8505   0100F6  0EF9               	movlw	-7
  8506   0100F8  C023  FFE3         	movff	btemp+2,plusw1
  8507   0100FC  0EFA               	movlw	-6
  8508   0100FE  C024  FFE3         	movff	btemp+3,plusw1
  8509   010102                     
  8510                           ;can/can.c: 734:     if (dataBytesInObject < txdNumBytes) {
  8511                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  8512                           ;stkvar	_dataBytesInObject @ sp[(-114)+105]
  8513   010102  50E1               	movf	fsr1l,w,c
  8514   010104  0FF7               	addlw	-9
  8515   010106  6ED9               	movwf	fsr2l,c
  8516   010108  50E2               	movf	fsr1h,w,c
  8517   01010A  6EDA               	movwf	fsr2h,c
  8518   01010C  0EFF               	movlw	255
  8519   01010E  22DA               	addwfc	fsr2h,f,c
  8520   010110  0E85               	movlw	-123
  8521   010112  50E3               	movf	plusw1,w,c
  8522   010114  5CDE               	subwf	postinc2,w,c
  8523   010116  0E86               	movlw	-122
  8524   010118  50E3               	movf	plusw1,w,c
  8525   01011A  58DE               	subwfb	postinc2,w,c
  8526   01011C  0E87               	movlw	-121
  8527   01011E  50E3               	movf	plusw1,w,c
  8528   010120  58DE               	subwfb	postinc2,w,c
  8529   010122  0E88               	movlw	-120
  8530   010124  50E3               	movf	plusw1,w,c
  8531   010126  58DE               	subwfb	postinc2,w,c
  8532   010128  B0D8               	btfsc	status,0,c
  8533   01012A  EF99  F080         	goto	u1721
  8534   01012E  EF9B  F080         	goto	u1720
  8535   010132                     u1721:
  8536   010132  EF9F  F080         	goto	l4144
  8537   010136                     u1720:
  8538   010136                     
  8539                           ;can/can.c: 735:         return -3;
  8540   010136  0EFD               	movlw	253
  8541   010138  6E21               	movwf	btemp^0,c
  8542   01013A  EFA1  F083         	goto	l264
  8543   01013E                     l4144:
  8544                           
  8545                           ;can/can.c: 742:     ciFifoUa.word = fifoReg[2];
  8546                           ;stkvar	_fifoReg @ sp[(-114)+80]
  8547   01013E  0EE6               	movlw	230
  8548   010140  24E1               	addwf	fsr1l,w,c
  8549   010142  6ED9               	movwf	fsr2l,c
  8550   010144  0EFF               	movlw	255
  8551   010146  20E2               	addwfc	fsr1h,w,c
  8552   010148  6EDA               	movwf	fsr2h,c
  8553   01014A  CFDE F029          	movff	postinc2,btemp+8
  8554   01014E  CFDE F02A          	movff	postinc2,btemp+9
  8555   010152  CFDE F02B          	movff	postinc2,btemp+10
  8556   010156  CFDE F02C          	movff	postinc2,btemp+11
  8557                           
  8558                           ;stkvar	_ciFifoUa @ sp[(-114)+101]
  8559   01015A  0EF3               	movlw	-13
  8560   01015C  C029  FFE3         	movff	btemp+8,plusw1
  8561   010160  0EF4               	movlw	-12
  8562   010162  C02A  FFE3         	movff	btemp+9,plusw1
  8563   010166  0EF5               	movlw	-11
  8564   010168  C02B  FFE3         	movff	btemp+10,plusw1
  8565   01016C  0EF6               	movlw	-10
  8566   01016E  C02C  FFE3         	movff	btemp+11,plusw1
  8567   010172                     
  8568                           ;can/can.c: 746:     a = ciFifoUa.bF.UserAddress;
  8569                           ;stkvar	_ciFifoUa @ sp[(-114)+101]
  8570   010172  0EF3               	movlw	-13
  8571   010174  CFE3 F029          	movff	plusw1,btemp+8
  8572   010178  0EF4               	movlw	-12
  8573   01017A  CFE3 F02A          	movff	plusw1,btemp+9
  8574   01017E  0EF5               	movlw	-11
  8575   010180  CFE3 F02B          	movff	plusw1,btemp+10
  8576   010184  0EF6               	movlw	-10
  8577   010186  CFE3 F02C          	movff	plusw1,btemp+11
  8578                           
  8579                           ;stkvar	_a @ sp[(-114)+97]
  8580   01018A  0EEF               	movlw	-17
  8581   01018C  C029  FFE3         	movff	btemp+8,plusw1
  8582   010190  0EF0               	movlw	-16
  8583   010192  C02A  FFE3         	movff	btemp+9,plusw1
  8584   010196  0EF1               	movlw	-15
  8585   010198  C02B  FFE3         	movff	btemp+10,plusw1
  8586   01019C  0EF2               	movlw	-14
  8587   01019E  C02C  FFE3         	movff	btemp+11,plusw1
  8588   0101A2                     
  8589                           ;can/can.c: 748:     a += 0x400;
  8590                           ;stkvar	_a @ sp[(-114)+97]
  8591   0101A2  50E1               	movf	fsr1l,w,c
  8592   0101A4  0FEF               	addlw	-17
  8593   0101A6  6ED9               	movwf	fsr2l,c
  8594   0101A8  50E2               	movf	fsr1h,w,c
  8595   0101AA  6EDA               	movwf	fsr2h,c
  8596   0101AC  0EFF               	movlw	255
  8597   0101AE  22DA               	addwfc	fsr2h,f,c
  8598   0101B0  0E00               	movlw	0
  8599   0101B2  26DE               	addwf	postinc2,f,c
  8600   0101B4  0E04               	movlw	4
  8601   0101B6  22DE               	addwfc	postinc2,f,c
  8602   0101B8  0E00               	movlw	0
  8603   0101BA  22DE               	addwfc	postinc2,f,c
  8604   0101BC  0E00               	movlw	0
  8605   0101BE  22DE               	addwfc	postinc2,f,c
  8606   0101C0                     
  8607                           ;can/can.c: 750:     uint8_t txBuffer[76];;can/can.c: 764:     if(txObj->bF.ctrl.IDE == 
      +                          0)
  8608                           ;stkvar	_txObj @ sp[(-114)+-3]
  8609   0101C0  0E8B               	movlw	-117
  8610   0101C2  CFE3 F02B          	movff	plusw1,btemp+10
  8611   0101C6  0E8C               	movlw	-116
  8612   0101C8  CFE3 F02C          	movff	plusw1,btemp+11
  8613   0101CC  0E06               	movlw	6
  8614   0101CE  242B               	addwf	(btemp+10)^0,w,c
  8615   0101D0  6ED9               	movwf	fsr2l,c
  8616   0101D2  0E00               	movlw	0
  8617   0101D4  202C               	addwfc	(btemp+11)^0,w,c
  8618   0101D6  6EDA               	movwf	fsr2h,c
  8619   0101D8  B8DF               	btfsc	indf2,4,c
  8620   0101DA  EFF1  F080         	goto	u1731
  8621   0101DE  EFF3  F080         	goto	u1730
  8622   0101E2                     u1731:
  8623   0101E2  EF75  F081         	goto	l4160
  8624   0101E6                     u1730:
  8625   0101E6                     
  8626                           ;can/can.c: 765:     {;can/can.c: 766:       txBuffer[0] = (uint8_t)txObj->bF.id.ID;
  8627                           ;stkvar	_txObj @ sp[(-114)+-3]
  8628   0101E6  0E8B               	movlw	-117
  8629   0101E8  CFE3 FFD9          	movff	plusw1,fsr2l
  8630   0101EC  0E8C               	movlw	-116
  8631   0101EE  CFE3 FFDA          	movff	plusw1,fsr2h
  8632   0101F2  50DF               	movf	indf2,w,c
  8633   0101F4  6E2C               	movwf	(btemp+11)^0,c
  8634                           
  8635                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8636   0101F6  0E92               	movlw	-110
  8637   0101F8  C02C  FFE3         	movff	btemp+11,plusw1
  8638   0101FC                     
  8639                           ;can/can.c: 767:       txBuffer[1] = (uint8_t)(txObj->bF.id.ID >> 8);
  8640                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8641   0101FC  0E93               	movlw	147
  8642   0101FE  24E1               	addwf	fsr1l,w,c
  8643   010200  6ED9               	movwf	fsr2l,c
  8644   010202  0EFF               	movlw	255
  8645   010204  20E2               	addwfc	fsr1h,w,c
  8646   010206  6EDA               	movwf	fsr2h,c
  8647                           
  8648                           ;stkvar	_txObj @ sp[(-114)+-3]
  8649   010208  0E8B               	movlw	-117
  8650   01020A  CFE3 FFE9          	movff	plusw1,fsr0l
  8651   01020E  0E8C               	movlw	-116
  8652   010210  CFE3 FFEA          	movff	plusw1,fsr0h
  8653   010214  CFEE F029          	movff	postinc0,btemp+8
  8654   010218  CFEE F02A          	movff	postinc0,btemp+9
  8655   01021C  CFEE F02B          	movff	postinc0,btemp+10
  8656   010220  CFEE F02C          	movff	postinc0,btemp+11
  8657   010224  C02A  F029         	movff	btemp+9,btemp+8
  8658   010228  C02B  F02A         	movff	btemp+10,btemp+9
  8659   01022C  C02C  F02B         	movff	btemp+11,btemp+10
  8660   010230  6A2C               	clrf	(btemp+11)^0,c
  8661   010232  5029               	movf	(btemp+8)^0,w,c
  8662   010234  6EDF               	movwf	indf2,c
  8663   010236                     
  8664                           ;can/can.c: 768:       txBuffer[2] = (uint8_t)(txObj->bF.id.ID >> 16);
  8665                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8666   010236  0E94               	movlw	148
  8667   010238  24E1               	addwf	fsr1l,w,c
  8668   01023A  6ED9               	movwf	fsr2l,c
  8669   01023C  0EFF               	movlw	255
  8670   01023E  20E2               	addwfc	fsr1h,w,c
  8671   010240  6EDA               	movwf	fsr2h,c
  8672                           
  8673                           ;stkvar	_txObj @ sp[(-114)+-3]
  8674   010242  0E8B               	movlw	-117
  8675   010244  CFE3 FFE9          	movff	plusw1,fsr0l
  8676   010248  0E8C               	movlw	-116
  8677   01024A  CFE3 FFEA          	movff	plusw1,fsr0h
  8678   01024E  CFEE F029          	movff	postinc0,btemp+8
  8679   010252  CFEE F02A          	movff	postinc0,btemp+9
  8680   010256  CFEE F02B          	movff	postinc0,btemp+10
  8681   01025A  CFEE F02C          	movff	postinc0,btemp+11
  8682   01025E  0E11               	movlw	17
  8683   010260  EF37  F081         	goto	u1740
  8684   010264                     u1745:
  8685   010264  90D8               	bcf	status,0,c
  8686   010266  322C               	rrcf	(btemp+11)^0,f,c
  8687   010268  322B               	rrcf	(btemp+10)^0,f,c
  8688   01026A  322A               	rrcf	(btemp+9)^0,f,c
  8689   01026C  3229               	rrcf	(btemp+8)^0,f,c
  8690   01026E                     u1740:
  8691   01026E  2EE8               	decfsz	wreg,f,c
  8692   010270  EF32  F081         	goto	u1745
  8693   010274  5029               	movf	(btemp+8)^0,w,c
  8694   010276  6EDF               	movwf	indf2,c
  8695   010278                     
  8696                           ;can/can.c: 769:       txBuffer[3] = (uint8_t)(txObj->bF.id.ID >> 24) | (uint8_t)(txObj-
      +                          >bF.id.SID11 << 5);
  8697                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8698   010278  0E95               	movlw	149
  8699   01027A  24E1               	addwf	fsr1l,w,c
  8700   01027C  6ED9               	movwf	fsr2l,c
  8701   01027E  0EFF               	movlw	255
  8702   010280  20E2               	addwfc	fsr1h,w,c
  8703   010282  6EDA               	movwf	fsr2h,c
  8704                           
  8705                           ;stkvar	_txObj @ sp[(-114)+-3]
  8706   010284  0E8B               	movlw	-117
  8707   010286  CFE3 F02B          	movff	plusw1,btemp+10
  8708   01028A  0E8C               	movlw	-116
  8709   01028C  CFE3 F02C          	movff	plusw1,btemp+11
  8710   010290  0E04               	movlw	4
  8711   010292  242B               	addwf	(btemp+10)^0,w,c
  8712   010294  6EE9               	movwf	fsr0l,c
  8713   010296  0E00               	movlw	0
  8714   010298  202C               	addwfc	(btemp+11)^0,w,c
  8715   01029A  6EEA               	movwf	fsr0h,c
  8716   01029C  50EF               	movf	indf0,w,c
  8717   01029E  6E2C               	movwf	(btemp+11)^0,c
  8718   0102A0  0E05               	movlw	5
  8719   0102A2  6E21               	movwf	btemp^0,c
  8720   0102A4                     u1755:
  8721   0102A4  90D8               	bcf	status,0,c
  8722   0102A6  362C               	rlcf	(btemp+11)^0,f,c
  8723   0102A8  2E21               	decfsz	btemp^0,f,c
  8724   0102AA  EF52  F081         	goto	u1755
  8725                           
  8726                           ;stkvar	_txObj @ sp[(-114)+-3]
  8727   0102AE  0E8B               	movlw	-117
  8728   0102B0  CFE3 FFE9          	movff	plusw1,fsr0l
  8729   0102B4  0E8C               	movlw	-116
  8730   0102B6  CFE3 FFEA          	movff	plusw1,fsr0h
  8731   0102BA  CFEE F025          	movff	postinc0,btemp+4
  8732   0102BE  CFEE F026          	movff	postinc0,btemp+5
  8733   0102C2  CFEE F027          	movff	postinc0,btemp+6
  8734   0102C6  CFEE F028          	movff	postinc0,btemp+7
  8735   0102CA  0E19               	movlw	25
  8736   0102CC  EF6D  F081         	goto	u1760
  8737   0102D0                     u1765:
  8738   0102D0  90D8               	bcf	status,0,c
  8739   0102D2  3228               	rrcf	(btemp+7)^0,f,c
  8740   0102D4  3227               	rrcf	(btemp+6)^0,f,c
  8741   0102D6  3226               	rrcf	(btemp+5)^0,f,c
  8742   0102D8  3225               	rrcf	(btemp+4)^0,f,c
  8743   0102DA                     u1760:
  8744   0102DA  2EE8               	decfsz	wreg,f,c
  8745   0102DC  EF68  F081         	goto	u1765
  8746   0102E0  5025               	movf	(btemp+4)^0,w,c
  8747   0102E2  102C               	iorwf	(btemp+11)^0,w,c
  8748   0102E4  6EDF               	movwf	indf2,c
  8749                           
  8750                           ;can/can.c: 770:     }
  8751   0102E6  EF24  F082         	goto	l4172
  8752   0102EA                     l4160:
  8753                           
  8754                           ;can/can.c: 772:     {;can/can.c: 773:       uint32_t temp32 = ((txObj->bF.id.ID & 0x000
      +                          3FFFF) << 11) |
  8755                           ;stkvar	_txObj @ sp[(-114)+-3]
  8756   0102EA  0E8B               	movlw	-117
  8757   0102EC  CFE3 FFD9          	movff	plusw1,fsr2l
  8758   0102F0  0E8C               	movlw	-116
  8759   0102F2  CFE3 FFDA          	movff	plusw1,fsr2h
  8760   0102F6  CFDE F029          	movff	postinc2,btemp+8
  8761   0102FA  CFDE F02A          	movff	postinc2,btemp+9
  8762   0102FE  CFDE F02B          	movff	postinc2,btemp+10
  8763   010302  CFDE F02C          	movff	postinc2,btemp+11
  8764   010306  0E13               	movlw	19
  8765   010308  EF8B  F081         	goto	u1770
  8766   01030C                     u1775:
  8767   01030C  90D8               	bcf	status,0,c
  8768   01030E  322C               	rrcf	(btemp+11)^0,f,c
  8769   010310  322B               	rrcf	(btemp+10)^0,f,c
  8770   010312  322A               	rrcf	(btemp+9)^0,f,c
  8771   010314  3229               	rrcf	(btemp+8)^0,f,c
  8772   010316                     u1770:
  8773   010316  2EE8               	decfsz	wreg,f,c
  8774   010318  EF86  F081         	goto	u1775
  8775   01031C  0EFF               	movlw	255
  8776   01031E  1429               	andwf	(btemp+8)^0,w,c
  8777   010320  6E25               	movwf	(btemp+4)^0,c
  8778   010322  0E07               	movlw	7
  8779   010324  142A               	andwf	(btemp+9)^0,w,c
  8780   010326  6E26               	movwf	(btemp+5)^0,c
  8781   010328  0E00               	movlw	0
  8782   01032A  142B               	andwf	(btemp+10)^0,w,c
  8783   01032C  6E27               	movwf	(btemp+6)^0,c
  8784   01032E  0E00               	movlw	0
  8785   010330  142C               	andwf	(btemp+11)^0,w,c
  8786   010332  6E28               	movwf	(btemp+7)^0,c
  8787                           
  8788                           ;stkvar	_txObj @ sp[(-114)+-3]
  8789   010334  0E8B               	movlw	-117
  8790   010336  CFE3 FFD9          	movff	plusw1,fsr2l
  8791   01033A  0E8C               	movlw	-116
  8792   01033C  CFE3 FFDA          	movff	plusw1,fsr2h
  8793   010340  0EFF               	movlw	255
  8794   010342  14DE               	andwf	postinc2,w,c
  8795   010344  6E29               	movwf	(btemp+8)^0,c
  8796   010346  0EFF               	movlw	255
  8797   010348  14DE               	andwf	postinc2,w,c
  8798   01034A  6E2A               	movwf	(btemp+9)^0,c
  8799   01034C  0E03               	movlw	3
  8800   01034E  14DE               	andwf	postinc2,w,c
  8801   010350  6E2B               	movwf	(btemp+10)^0,c
  8802   010352  0E00               	movlw	0
  8803   010354  14DE               	andwf	postinc2,w,c
  8804   010356  6E2C               	movwf	(btemp+11)^0,c
  8805   010358  0E0B               	movlw	11
  8806   01035A                     u1785:
  8807   01035A  90D8               	bcf	status,0,c
  8808   01035C  3629               	rlcf	(btemp+8)^0,f,c
  8809   01035E  362A               	rlcf	(btemp+9)^0,f,c
  8810   010360  362B               	rlcf	(btemp+10)^0,f,c
  8811   010362  362C               	rlcf	(btemp+11)^0,f,c
  8812   010364  2EE8               	decfsz	wreg,f,c
  8813   010366  EFAD  F081         	goto	u1785
  8814   01036A  5025               	movf	(btemp+4)^0,w,c
  8815   01036C  1029               	iorwf	(btemp+8)^0,w,c
  8816   01036E  6E21               	movwf	btemp^0,c
  8817   010370  5026               	movf	(btemp+5)^0,w,c
  8818   010372  102A               	iorwf	(btemp+9)^0,w,c
  8819   010374  6E22               	movwf	(btemp+1)^0,c
  8820   010376  5027               	movf	(btemp+6)^0,w,c
  8821   010378  102B               	iorwf	(btemp+10)^0,w,c
  8822   01037A  6E23               	movwf	(btemp+2)^0,c
  8823   01037C  5028               	movf	(btemp+7)^0,w,c
  8824   01037E  102C               	iorwf	(btemp+11)^0,w,c
  8825   010380  6E24               	movwf	(btemp+3)^0,c
  8826                           
  8827                           ;stkvar	_temp32 @ sp[(-114)+0]
  8828   010382  0E8E               	movlw	-114
  8829   010384  C021  FFE3         	movff	btemp,plusw1
  8830   010388  0E8F               	movlw	-113
  8831   01038A  C022  FFE3         	movff	btemp+1,plusw1
  8832   01038E  0E90               	movlw	-112
  8833   010390  C023  FFE3         	movff	btemp+2,plusw1
  8834   010394  0E91               	movlw	-111
  8835   010396  C024  FFE3         	movff	btemp+3,plusw1
  8836   01039A                     
  8837                           ;can/can.c: 775:       temp32 = temp32 & 0x1FFFFFFF;
  8838                           ;stkvar	_temp32 @ sp[(-114)+0]
  8839   01039A  50E1               	movf	fsr1l,w,c
  8840   01039C  0F8E               	addlw	-114
  8841   01039E  6ED9               	movwf	fsr2l,c
  8842   0103A0  50E2               	movf	fsr1h,w,c
  8843   0103A2  6EDA               	movwf	fsr2h,c
  8844   0103A4  0EFF               	movlw	255
  8845   0103A6  22DA               	addwfc	fsr2h,f,c
  8846   0103A8  0EFF               	movlw	255
  8847   0103AA  16DE               	andwf	postinc2,f,c
  8848   0103AC  0EFF               	movlw	255
  8849   0103AE  16DE               	andwf	postinc2,f,c
  8850   0103B0  0EFF               	movlw	255
  8851   0103B2  16DE               	andwf	postinc2,f,c
  8852   0103B4  0E1F               	movlw	31
  8853   0103B6  16DE               	andwf	postinc2,f,c
  8854   0103B8                     
  8855                           ;can/can.c: 776:       txBuffer[0] = (uint8_t)temp32;
  8856                           ;stkvar	_temp32 @ sp[(-114)+0]
  8857                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8858   0103B8  0E8E               	movlw	-114
  8859   0103BA  CFE3 F021          	movff	plusw1,btemp
  8860   0103BE  0E92               	movlw	-110
  8861   0103C0  C021  FFE3         	movff	btemp,plusw1
  8862   0103C4                     
  8863                           ;can/can.c: 777:       txBuffer[1] = (uint8_t)(temp32 >> 8);
  8864                           ;stkvar	_temp32 @ sp[(-114)+0]
  8865   0103C4  0E8F               	movlw	143
  8866   0103C6  24E1               	addwf	fsr1l,w,c
  8867   0103C8  6ED9               	movwf	fsr2l,c
  8868   0103CA  0EFF               	movlw	255
  8869   0103CC  20E2               	addwfc	fsr1h,w,c
  8870   0103CE  6EDA               	movwf	fsr2h,c
  8871                           
  8872                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8873   0103D0  0E93               	movlw	147
  8874   0103D2  24E1               	addwf	fsr1l,w,c
  8875   0103D4  6EE9               	movwf	fsr0l,c
  8876   0103D6  0EFF               	movlw	255
  8877   0103D8  20E2               	addwfc	fsr1h,w,c
  8878   0103DA  6EEA               	movwf	fsr0h,c
  8879   0103DC  CFDF FFEF          	movff	indf2,indf0
  8880   0103E0                     
  8881                           ;can/can.c: 778:       txBuffer[2] = (uint8_t)(temp32 >> 16);
  8882                           ;stkvar	_temp32 @ sp[(-114)+0]
  8883   0103E0  0E90               	movlw	144
  8884   0103E2  24E1               	addwf	fsr1l,w,c
  8885   0103E4  6ED9               	movwf	fsr2l,c
  8886   0103E6  0EFF               	movlw	255
  8887   0103E8  20E2               	addwfc	fsr1h,w,c
  8888   0103EA  6EDA               	movwf	fsr2h,c
  8889                           
  8890                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8891   0103EC  0E94               	movlw	148
  8892   0103EE  24E1               	addwf	fsr1l,w,c
  8893   0103F0  6EE9               	movwf	fsr0l,c
  8894   0103F2  0EFF               	movlw	255
  8895   0103F4  20E2               	addwfc	fsr1h,w,c
  8896   0103F6  6EEA               	movwf	fsr0h,c
  8897   0103F8  CFDF FFEF          	movff	indf2,indf0
  8898   0103FC                     
  8899                           ;can/can.c: 779:       txBuffer[3] = (uint8_t)(temp32 >> 24) | (uint8_t)(txObj->bF.id.SI
      +                          D11 << 5);
  8900                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8901   0103FC  0E95               	movlw	149
  8902   0103FE  24E1               	addwf	fsr1l,w,c
  8903   010400  6ED9               	movwf	fsr2l,c
  8904   010402  0EFF               	movlw	255
  8905   010404  20E2               	addwfc	fsr1h,w,c
  8906   010406  6EDA               	movwf	fsr2h,c
  8907                           
  8908                           ;stkvar	_temp32 @ sp[(-114)+0]
  8909   010408  0E91               	movlw	145
  8910   01040A  24E1               	addwf	fsr1l,w,c
  8911   01040C  6EE9               	movwf	fsr0l,c
  8912   01040E  0EFF               	movlw	255
  8913   010410  20E2               	addwfc	fsr1h,w,c
  8914   010412  6EEA               	movwf	fsr0h,c
  8915   010414  50EF               	movf	indf0,w,c
  8916   010416  6E2C               	movwf	(btemp+11)^0,c
  8917                           
  8918                           ;stkvar	_txObj @ sp[(-114)+-3]
  8919   010418  0E8B               	movlw	-117
  8920   01041A  CFE3 F029          	movff	plusw1,btemp+8
  8921   01041E  0E8C               	movlw	-116
  8922   010420  CFE3 F02A          	movff	plusw1,btemp+9
  8923   010424  0E04               	movlw	4
  8924   010426  2429               	addwf	(btemp+8)^0,w,c
  8925   010428  6EE9               	movwf	fsr0l,c
  8926   01042A  0E00               	movlw	0
  8927   01042C  202A               	addwfc	(btemp+9)^0,w,c
  8928   01042E  6EEA               	movwf	fsr0h,c
  8929   010430  50EF               	movf	indf0,w,c
  8930   010432  6E2B               	movwf	(btemp+10)^0,c
  8931   010434  0E05               	movlw	5
  8932   010436  6E21               	movwf	btemp^0,c
  8933   010438                     u1795:
  8934   010438  90D8               	bcf	status,0,c
  8935   01043A  362B               	rlcf	(btemp+10)^0,f,c
  8936   01043C  2E21               	decfsz	btemp^0,f,c
  8937   01043E  EF1C  F082         	goto	u1795
  8938   010442  502B               	movf	(btemp+10)^0,w,c
  8939   010444  102C               	iorwf	(btemp+11)^0,w,c
  8940   010446  6EDF               	movwf	indf2,c
  8941   010448                     l4172:
  8942                           
  8943                           ;can/can.c: 781:     txBuffer[4] = txObj->byte[6];
  8944                           ;stkvar	_txObj @ sp[(-114)+-3]
  8945   010448  0E8B               	movlw	-117
  8946   01044A  CFE3 F02B          	movff	plusw1,btemp+10
  8947   01044E  0E8C               	movlw	-116
  8948   010450  CFE3 F02C          	movff	plusw1,btemp+11
  8949   010454  0E06               	movlw	6
  8950   010456  242B               	addwf	(btemp+10)^0,w,c
  8951   010458  6ED9               	movwf	fsr2l,c
  8952   01045A  0E00               	movlw	0
  8953   01045C  202C               	addwfc	(btemp+11)^0,w,c
  8954   01045E  6EDA               	movwf	fsr2h,c
  8955                           
  8956                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8957   010460  0E96               	movlw	150
  8958   010462  24E1               	addwf	fsr1l,w,c
  8959   010464  6EE9               	movwf	fsr0l,c
  8960   010466  0EFF               	movlw	255
  8961   010468  20E2               	addwfc	fsr1h,w,c
  8962   01046A  6EEA               	movwf	fsr0h,c
  8963   01046C  CFDF FFEF          	movff	indf2,indf0
  8964   010470                     
  8965                           ;can/can.c: 782:     txBuffer[5] = txObj->bF.ctrl.ESI | (uint8_t)(txObj->bF.ctrl.SEQ << 
      +                          1);
  8966                           ;stkvar	_txBuffer @ sp[(-114)+4]
  8967   010470  0E97               	movlw	151
  8968   010472  24E1               	addwf	fsr1l,w,c
  8969   010474  6ED9               	movwf	fsr2l,c
  8970   010476  0EFF               	movlw	255
  8971   010478  20E2               	addwfc	fsr1h,w,c
  8972   01047A  6EDA               	movwf	fsr2h,c
  8973                           
  8974                           ;stkvar	_txObj @ sp[(-114)+-3]
  8975   01047C  0E8B               	movlw	-117
  8976   01047E  CFE3 F02B          	movff	plusw1,btemp+10
  8977   010482  0E8C               	movlw	-116
  8978   010484  CFE3 F02C          	movff	plusw1,btemp+11
  8979   010488  0E07               	movlw	7
  8980   01048A  242B               	addwf	(btemp+10)^0,w,c
  8981   01048C  6EE9               	movwf	fsr0l,c
  8982   01048E  0E00               	movlw	0
  8983   010490  202C               	addwfc	(btemp+11)^0,w,c
  8984   010492  6EEA               	movwf	fsr0h,c
  8985   010494  50EF               	movf	indf0,w,c
  8986   010496  6E2C               	movwf	(btemp+11)^0,c
  8987                           
  8988                           ;stkvar	_txObj @ sp[(-114)+-3]
  8989   010498  0E8B               	movlw	-117
  8990   01049A  CFE3 F029          	movff	plusw1,btemp+8
  8991   01049E  0E8C               	movlw	-116
  8992   0104A0  CFE3 F02A          	movff	plusw1,btemp+9
  8993   0104A4  0E08               	movlw	8
  8994   0104A6  2429               	addwf	(btemp+8)^0,w,c
  8995   0104A8  6EE9               	movwf	fsr0l,c
  8996   0104AA  0E00               	movlw	0
  8997   0104AC  202A               	addwfc	(btemp+9)^0,w,c
  8998   0104AE  6EEA               	movwf	fsr0h,c
  8999   0104B0  50EF               	movf	indf0,w,c
  9000   0104B2  6E2B               	movwf	(btemp+10)^0,c
  9001   0104B4  90D8               	bcf	status,0,c
  9002   0104B6  342B               	rlcf	(btemp+10)^0,w,c
  9003   0104B8  102C               	iorwf	(btemp+11)^0,w,c
  9004   0104BA  6EDF               	movwf	indf2,c
  9005   0104BC                     
  9006                           ;can/can.c: 783:     txBuffer[6] = (uint8_t)(txObj->bF.ctrl.SEQ >> 7);
  9007                           ;stkvar	_txBuffer @ sp[(-114)+4]
  9008   0104BC  0E98               	movlw	152
  9009   0104BE  24E1               	addwf	fsr1l,w,c
  9010   0104C0  6ED9               	movwf	fsr2l,c
  9011   0104C2  0EFF               	movlw	255
  9012   0104C4  20E2               	addwfc	fsr1h,w,c
  9013   0104C6  6EDA               	movwf	fsr2h,c
  9014                           
  9015                           ;stkvar	_txObj @ sp[(-114)+-3]
  9016   0104C8  0E8B               	movlw	-117
  9017   0104CA  CFE3 F02B          	movff	plusw1,btemp+10
  9018   0104CE  0E8C               	movlw	-116
  9019   0104D0  CFE3 F02C          	movff	plusw1,btemp+11
  9020   0104D4  0E08               	movlw	8
  9021   0104D6  242B               	addwf	(btemp+10)^0,w,c
  9022   0104D8  6EE9               	movwf	fsr0l,c
  9023   0104DA  0E00               	movlw	0
  9024   0104DC  202C               	addwfc	(btemp+11)^0,w,c
  9025   0104DE  6EEA               	movwf	fsr0h,c
  9026   0104E0  CFEE F029          	movff	postinc0,btemp+8
  9027   0104E4  CFEE F02A          	movff	postinc0,btemp+9
  9028   0104E8  CFEE F02B          	movff	postinc0,btemp+10
  9029   0104EC  CFEE F02C          	movff	postinc0,btemp+11
  9030   0104F0  0E08               	movlw	8
  9031   0104F2  EF80  F082         	goto	u1800
  9032   0104F6                     u1805:
  9033   0104F6  90D8               	bcf	status,0,c
  9034   0104F8  322C               	rrcf	(btemp+11)^0,f,c
  9035   0104FA  322B               	rrcf	(btemp+10)^0,f,c
  9036   0104FC  322A               	rrcf	(btemp+9)^0,f,c
  9037   0104FE  3229               	rrcf	(btemp+8)^0,f,c
  9038   010500                     u1800:
  9039   010500  2EE8               	decfsz	wreg,f,c
  9040   010502  EF7B  F082         	goto	u1805
  9041   010506  5029               	movf	(btemp+8)^0,w,c
  9042   010508  6EDF               	movwf	indf2,c
  9043   01050A                     
  9044                           ;can/can.c: 784:     txBuffer[7] = (uint8_t)(txObj->bF.ctrl.SEQ >> 15);
  9045                           ;stkvar	_txBuffer @ sp[(-114)+4]
  9046   01050A  0E99               	movlw	153
  9047   01050C  24E1               	addwf	fsr1l,w,c
  9048   01050E  6ED9               	movwf	fsr2l,c
  9049   010510  0EFF               	movlw	255
  9050   010512  20E2               	addwfc	fsr1h,w,c
  9051   010514  6EDA               	movwf	fsr2h,c
  9052                           
  9053                           ;stkvar	_txObj @ sp[(-114)+-3]
  9054   010516  0E8B               	movlw	-117
  9055   010518  CFE3 F02B          	movff	plusw1,btemp+10
  9056   01051C  0E8C               	movlw	-116
  9057   01051E  CFE3 F02C          	movff	plusw1,btemp+11
  9058   010522  0E08               	movlw	8
  9059   010524  242B               	addwf	(btemp+10)^0,w,c
  9060   010526  6EE9               	movwf	fsr0l,c
  9061   010528  0E00               	movlw	0
  9062   01052A  202C               	addwfc	(btemp+11)^0,w,c
  9063   01052C  6EEA               	movwf	fsr0h,c
  9064   01052E  CFEE F029          	movff	postinc0,btemp+8
  9065   010532  CFEE F02A          	movff	postinc0,btemp+9
  9066   010536  CFEE F02B          	movff	postinc0,btemp+10
  9067   01053A  CFEE F02C          	movff	postinc0,btemp+11
  9068   01053E  0E10               	movlw	16
  9069   010540  EFA7  F082         	goto	u1810
  9070   010544                     u1815:
  9071   010544  90D8               	bcf	status,0,c
  9072   010546  322C               	rrcf	(btemp+11)^0,f,c
  9073   010548  322B               	rrcf	(btemp+10)^0,f,c
  9074   01054A  322A               	rrcf	(btemp+9)^0,f,c
  9075   01054C  3229               	rrcf	(btemp+8)^0,f,c
  9076   01054E                     u1810:
  9077   01054E  2EE8               	decfsz	wreg,f,c
  9078   010550  EFA2  F082         	goto	u1815
  9079   010554  5029               	movf	(btemp+8)^0,w,c
  9080   010556  6EDF               	movwf	indf2,c
  9081   010558                     
  9082                           ;can/can.c: 787:     uint8_t i;;can/can.c: 788:     for (i = 0; i < txdNumBytes; i++) {
  9083                           ;stkvar	_i @ sp[(-114)+112]
  9084   010558  0EFE               	movlw	-2
  9085   01055A  6AE3               	clrf	plusw1,c
  9086   01055C  EFD7  F082         	goto	l4186
  9087   010560                     l4182:
  9088                           
  9089                           ;can/can.c: 789:         txBuffer[i + 8] = txd[i];
  9090                           ;stkvar	_i @ sp[(-114)+112]
  9091   010560  0EFE               	movlw	-2
  9092   010562  CFE3 F02C          	movff	plusw1,btemp+11
  9093                           
  9094                           ;stkvar	_txd @ sp[(-114)+-5]
  9095   010566  0E89               	movlw	-119
  9096   010568  CFE3 F029          	movff	plusw1,btemp+8
  9097   01056C  0E8A               	movlw	-118
  9098   01056E  CFE3 F02A          	movff	plusw1,btemp+9
  9099   010572  502C               	movf	(btemp+11)^0,w,c
  9100   010574  2429               	addwf	(btemp+8)^0,w,c
  9101   010576  6ED9               	movwf	fsr2l,c
  9102   010578  0E00               	movlw	0
  9103   01057A  202A               	addwfc	(btemp+9)^0,w,c
  9104   01057C  6EDA               	movwf	fsr2h,c
  9105                           
  9106                           ;stkvar	_i @ sp[(-114)+112]
  9107   01057E  0EFE               	movlw	-2
  9108   010580  50E3               	movf	plusw1,w,c
  9109   010582  6E2B               	movwf	(btemp+10)^0,c
  9110   010584  6A2C               	clrf	(btemp+11)^0,c
  9111   010586  0E08               	movlw	8
  9112   010588  262B               	addwf	(btemp+10)^0,f,c
  9113   01058A  0E00               	movlw	0
  9114   01058C  222C               	addwfc	(btemp+11)^0,f,c
  9115                           
  9116                           ;stkvar	_txBuffer @ sp[(-114)+4]
  9117   01058E  0E92               	movlw	146
  9118   010590  24E1               	addwf	fsr1l,w,c
  9119   010592  6E29               	movwf	(btemp+8)^0,c
  9120   010594  0EFF               	movlw	255
  9121   010596  20E2               	addwfc	fsr1h,w,c
  9122   010598  6E2A               	movwf	(btemp+9)^0,c
  9123   01059A  502B               	movf	(btemp+10)^0,w,c
  9124   01059C  2429               	addwf	(btemp+8)^0,w,c
  9125   01059E  6EE9               	movwf	fsr0l,c
  9126   0105A0  502C               	movf	(btemp+11)^0,w,c
  9127   0105A2  202A               	addwfc	(btemp+9)^0,w,c
  9128   0105A4  6EEA               	movwf	fsr0h,c
  9129   0105A6  CFDF FFEF          	movff	indf2,indf0
  9130   0105AA                     
  9131                           ;can/can.c: 790:     }
  9132                           ;stkvar	_i @ sp[(-114)+112]
  9133   0105AA  0EFE               	movlw	-2
  9134   0105AC  2AE3               	incf	plusw1,f,c
  9135   0105AE                     l4186:
  9136                           
  9137                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  9138                           ;stkvar	_i @ sp[(-114)+112]
  9139   0105AE  0EFE               	movlw	-2
  9140   0105B0  CFE3 F02C          	movff	plusw1,btemp+11
  9141   0105B4  C02C  F025         	movff	btemp+11,btemp+4
  9142   0105B8  6A26               	clrf	(btemp+5)^0,c
  9143   0105BA  6A27               	clrf	(btemp+6)^0,c
  9144   0105BC  6A28               	clrf	(btemp+7)^0,c
  9145   0105BE  0E85               	movlw	-123
  9146   0105C0  50E3               	movf	plusw1,w,c
  9147   0105C2  5C25               	subwf	(btemp+4)^0,w,c
  9148   0105C4  0E86               	movlw	-122
  9149   0105C6  50E3               	movf	plusw1,w,c
  9150   0105C8  5826               	subwfb	(btemp+5)^0,w,c
  9151   0105CA  0E87               	movlw	-121
  9152   0105CC  50E3               	movf	plusw1,w,c
  9153   0105CE  5827               	subwfb	(btemp+6)^0,w,c
  9154   0105D0  0E88               	movlw	-120
  9155   0105D2  50E3               	movf	plusw1,w,c
  9156   0105D4  5828               	subwfb	(btemp+7)^0,w,c
  9157   0105D6  A0D8               	btfss	status,0,c
  9158   0105D8  EFF0  F082         	goto	u1821
  9159   0105DC  EFF2  F082         	goto	u1820
  9160   0105E0                     u1821:
  9161   0105E0  EFB0  F082         	goto	l4182
  9162   0105E4                     u1820:
  9163   0105E4                     
  9164                           ;can/can.c: 793:     uint16_t n = 0;
  9165                           ;stkvar	_n @ sp[(-114)+109]
  9166   0105E4  0EFB               	movlw	-5
  9167   0105E6  6AE3               	clrf	plusw1,c
  9168   0105E8  0EFC               	movlw	-4
  9169   0105EA  6AE3               	clrf	plusw1,c
  9170   0105EC                     
  9171                           ;can/can.c: 796:     if (txdNumBytes % 4) {
  9172                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  9173   0105EC  0E85               	movlw	-123
  9174   0105EE  CFE3 F02C          	movff	plusw1,btemp+11
  9175   0105F2  0E03               	movlw	3
  9176   0105F4  162C               	andwf	(btemp+11)^0,f,c
  9177   0105F6  B4D8               	btfsc	status,2,c
  9178   0105F8  EF00  F083         	goto	u1831
  9179   0105FC  EF02  F083         	goto	u1830
  9180   010600                     u1831:
  9181   010600  EF51  F083         	goto	l4206
  9182   010604                     u1830:
  9183   010604                     
  9184                           ;can/can.c: 798:         n = 4 - (txdNumBytes % 4);
  9185                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  9186   010604  0E85               	movlw	-123
  9187   010606  CFE3 F02B          	movff	plusw1,btemp+10
  9188   01060A  0E86               	movlw	-122
  9189   01060C  CFE3 F02C          	movff	plusw1,btemp+11
  9190   010610  0E03               	movlw	3
  9191   010612  162B               	andwf	(btemp+10)^0,f,c
  9192   010614  0E00               	movlw	0
  9193   010616  162C               	andwf	(btemp+11)^0,f,c
  9194   010618  502B               	movf	(btemp+10)^0,w,c
  9195   01061A  0804               	sublw	4
  9196   01061C  6E29               	movwf	(btemp+8)^0,c
  9197   01061E  502C               	movf	(btemp+11)^0,w,c
  9198   010620  A0D8               	btfss	status,0,c
  9199   010622  2AE8               	incf	wreg,f,c
  9200   010624  0800               	sublw	0
  9201   010626  6E2A               	movwf	(btemp+9)^0,c
  9202                           
  9203                           ;stkvar	_n @ sp[(-114)+109]
  9204   010628  0EFB               	movlw	-5
  9205   01062A  C029  FFE3         	movff	btemp+8,plusw1
  9206   01062E  0EFC               	movlw	-4
  9207   010630  C02A  FFE3         	movff	btemp+9,plusw1
  9208   010634                     
  9209                           ;can/can.c: 799:         i = (uint8_t)txdNumBytes + 8;
  9210   010634  0E08               	movlw	8
  9211   010636  6E2C               	movwf	(btemp+11)^0,c
  9212                           
  9213                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  9214   010638  0E85               	movlw	-123
  9215   01063A  50E3               	movf	plusw1,w,c
  9216   01063C  242C               	addwf	(btemp+11)^0,w,c
  9217   01063E  6E2B               	movwf	(btemp+10)^0,c
  9218                           
  9219                           ;stkvar	_i @ sp[(-114)+112]
  9220   010640  0EFE               	movlw	-2
  9221   010642  C02B  FFE3         	movff	btemp+10,plusw1
  9222   010646                     
  9223                           ;can/can.c: 801:         for (j = 0; j < n; j++) {
  9224                           ;stkvar	_j @ sp[(-114)+113]
  9225   010646  0EFF               	movlw	-1
  9226   010648  6AE3               	clrf	plusw1,c
  9227   01064A  EF40  F083         	goto	l4204
  9228   01064E                     l4200:
  9229                           
  9230                           ;can/can.c: 802:             txBuffer[i + 8 + j] = 0;
  9231                           ;stkvar	_txBuffer @ sp[(-114)+4]
  9232   01064E  0E92               	movlw	146
  9233   010650  24E1               	addwf	fsr1l,w,c
  9234   010652  6E2B               	movwf	(btemp+10)^0,c
  9235   010654  0EFF               	movlw	255
  9236   010656  20E2               	addwfc	fsr1h,w,c
  9237   010658  6E2C               	movwf	(btemp+11)^0,c
  9238                           
  9239                           ;stkvar	_i @ sp[(-114)+112]
  9240   01065A  0EFE               	movlw	-2
  9241   01065C  50E3               	movf	plusw1,w,c
  9242   01065E  262B               	addwf	(btemp+10)^0,f,c
  9243   010660  0E00               	movlw	0
  9244   010662  222C               	addwfc	(btemp+11)^0,f,c
  9245                           
  9246                           ;stkvar	_j @ sp[(-114)+113]
  9247   010664  0EFF               	movlw	-1
  9248   010666  50E3               	movf	plusw1,w,c
  9249   010668  262B               	addwf	(btemp+10)^0,f,c
  9250   01066A  0E00               	movlw	0
  9251   01066C  222C               	addwfc	(btemp+11)^0,f,c
  9252   01066E  0E08               	movlw	8
  9253   010670  242B               	addwf	(btemp+10)^0,w,c
  9254   010672  6ED9               	movwf	fsr2l,c
  9255   010674  0E00               	movlw	0
  9256   010676  202C               	addwfc	(btemp+11)^0,w,c
  9257   010678  6EDA               	movwf	fsr2h,c
  9258   01067A  6ADF               	clrf	indf2,c
  9259   01067C                     
  9260                           ;can/can.c: 803:         }
  9261                           ;stkvar	_j @ sp[(-114)+113]
  9262   01067C  0EFF               	movlw	-1
  9263   01067E  2AE3               	incf	plusw1,f,c
  9264   010680                     l4204:
  9265                           
  9266                           ;stkvar	_n @ sp[(-114)+109]
  9267                           ;stkvar	_j @ sp[(-114)+113]
  9268   010680  0EFF               	movlw	-1
  9269   010682  50E3               	movf	plusw1,w,c
  9270   010684  6E2B               	movwf	(btemp+10)^0,c
  9271   010686  6A2C               	clrf	(btemp+11)^0,c
  9272   010688  0EFB               	movlw	-5
  9273   01068A  50E3               	movf	plusw1,w,c
  9274   01068C  5C2B               	subwf	(btemp+10)^0,w,c
  9275   01068E  0EFC               	movlw	-4
  9276   010690  50E3               	movf	plusw1,w,c
  9277   010692  582C               	subwfb	(btemp+11)^0,w,c
  9278   010694  A0D8               	btfss	status,0,c
  9279   010696  EF4F  F083         	goto	u1841
  9280   01069A  EF51  F083         	goto	u1840
  9281   01069E                     u1841:
  9282   01069E  EF27  F083         	goto	l4200
  9283   0106A2                     u1840:
  9284   0106A2                     l4206:
  9285                           
  9286                           ;can/can.c: 806:     spiTransferError = DRV_CANFDSPI_WriteByteArray( (uint16_t)a, txBuff
      +                          er, (uint16_t)txdNumBytes + 8 + n);
  9287                           ;stkvar	_n @ sp[(-114)+109]
  9288                           ;stkvar	_txdNumBytes @ sp[(-114)+-9]
  9289   0106A2  0E85               	movlw	-123
  9290   0106A4  CFE3 F02B          	movff	plusw1,btemp+10
  9291   0106A8  0E86               	movlw	-122
  9292   0106AA  CFE3 F02C          	movff	plusw1,btemp+11
  9293   0106AE  0EFB               	movlw	-5
  9294   0106B0  50E3               	movf	plusw1,w,c
  9295   0106B2  262B               	addwf	(btemp+10)^0,f,c
  9296   0106B4  0EFC               	movlw	-4
  9297   0106B6  50E3               	movf	plusw1,w,c
  9298   0106B8  222C               	addwfc	(btemp+11)^0,f,c
  9299   0106BA  0E08               	movlw	8
  9300   0106BC  262B               	addwf	(btemp+10)^0,f,c
  9301   0106BE  0E00               	movlw	0
  9302   0106C0  222C               	addwfc	(btemp+11)^0,f,c
  9303   0106C2  C02B  FFE6         	movff	btemp+10,postinc1
  9304   0106C6  C02C  FFE6         	movff	btemp+11,postinc1
  9305                           
  9306                           ;stkvar	_txBuffer @ sp[(-116)+4]
  9307   0106CA  0E90               	movlw	144
  9308   0106CC  24E1               	addwf	fsr1l,w,c
  9309   0106CE  6E21               	movwf	btemp^0,c
  9310   0106D0  0EFF               	movlw	255
  9311   0106D2  20E2               	addwfc	fsr1h,w,c
  9312   0106D4  6E22               	movwf	(btemp+1)^0,c
  9313   0106D6  C021  FFE6         	movff	btemp,postinc1
  9314   0106DA  C022  FFE6         	movff	btemp+1,postinc1
  9315                           
  9316                           ;stkvar	_a @ sp[(-118)+97]
  9317   0106DE  0EEB               	movlw	-21
  9318   0106E0  CFE3 FFE6          	movff	plusw1,postinc1
  9319   0106E4  CFE3 FFE6          	movff	plusw1,postinc1
  9320   0106E8  EC91  F098         	call	_DRV_CANFDSPI_WriteByteArray	;wreg free
  9321                           
  9322                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  9323   0106EC  0EFD               	movlw	-3
  9324   0106EE  C021  FFE3         	movff	btemp,plusw1
  9325   0106F2                     
  9326                           ;can/can.c: 807:     if (spiTransferError) {
  9327                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  9328   0106F2  0EFD               	movlw	-3
  9329   0106F4  50E3               	movf	plusw1,w,c
  9330   0106F6  B4D8               	btfsc	status,2,c
  9331   0106F8  EF80  F083         	goto	u1851
  9332   0106FC  EF82  F083         	goto	u1850
  9333   010700                     u1851:
  9334   010700  EF86  F083         	goto	l4214
  9335   010704                     u1850:
  9336   010704                     
  9337                           ;can/can.c: 808:         return -4;
  9338   010704  0EFC               	movlw	252
  9339   010706  6E21               	movwf	btemp^0,c
  9340   010708  EFA1  F083         	goto	l264
  9341   01070C                     l4214:
  9342                           
  9343                           ;can/can.c: 812:     spiTransferError = DRV_CANFDSPI_TransmitChannelUpdate( channel, flu
      +                          sh);
  9344                           ;stkvar	_flush @ sp[(-114)+-10]
  9345   01070C  0E84               	movlw	-124
  9346   01070E  50E3               	movf	plusw1,w,c
  9347   010710  6EE6               	movwf	postinc1,c
  9348                           
  9349                           ;stkvar	_channel @ sp[(-115)+-1]
  9350   010712  0E8C               	movlw	-116
  9351   010714  50E3               	movf	plusw1,w,c
  9352   010716  6EE6               	movwf	postinc1,c
  9353   010718  EC58  F09F         	call	_DRV_CANFDSPI_TransmitChannelUpdate	;wreg free
  9354                           
  9355                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  9356   01071C  0EFD               	movlw	-3
  9357   01071E  C021  FFE3         	movff	btemp,plusw1
  9358   010722                     
  9359                           ;can/can.c: 813:     if (spiTransferError) {
  9360                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  9361   010722  0EFD               	movlw	-3
  9362   010724  50E3               	movf	plusw1,w,c
  9363   010726  B4D8               	btfsc	status,2,c
  9364   010728  EF98  F083         	goto	u1861
  9365   01072C  EF9A  F083         	goto	u1860
  9366   010730                     u1861:
  9367   010730  EF9E  F083         	goto	l4222
  9368   010734                     u1860:
  9369   010734                     
  9370                           ;can/can.c: 814:         return -5;
  9371   010734  0EFB               	movlw	251
  9372   010736  6E21               	movwf	btemp^0,c
  9373   010738  EFA1  F083         	goto	l264
  9374   01073C                     l4222:
  9375                           
  9376                           ;can/can.c: 817:     return spiTransferError;
  9377                           ;stkvar	_spiTransferError @ sp[(-114)+111]
  9378   01073C  0EFD               	movlw	-3
  9379   01073E  CFE3 F021          	movff	plusw1,btemp
  9380   010742                     l264:
  9381                           
  9382                           ; _DRV_CANFDSPI_TransmitChannelLoad: autosize = 114, savesize = 0, parsavesize = 0, temp
      +                          size = 0 parsize = 10, argsize = 10, vargsize = 0
  9383   010742  0E84               	movlw	132
  9384   010744  26E1               	addwf	fsr1l,f,c
  9385   010746  0EFF               	movlw	255
  9386   010748  22E2               	addwfc	fsr1h,f,c
  9387   01074A  0012               	return		;funcret
  9388   01074C                     __end_of_DRV_CANFDSPI_TransmitChannelLoad:
  9389                           	callstack 0
  9390                           
  9391 ;; *************** function _DRV_CANFDSPI_WriteByteArray *****************
  9392 ;; Defined at:
  9393 ;;		line 383 in file "can/can.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;  address         2  [STACK] unsigned short 
  9396 ;;  txd             2  [STACK] PTR unsigned char 
  9397 ;;		 -> txd(200), txBuffer(76), 
  9398 ;;  nBytes          2  [STACK] unsigned short 
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;  i               2  [STACK] unsigned short 
  9401 ;;  spiTransferS    2  [STACK] unsigned short 
  9402 ;;  spiTransferE    1  [STACK] char 
  9403 ;; Return value:  Size  Location     Type
  9404 ;;                  1  [STACK] char 
  9405 ;; Registers used:
  9406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  9407 ;; Tracked objects:
  9408 ;;		On entry : 0/0
  9409 ;;		On exit  : 0/0
  9410 ;;		Unchanged: 0/0
  9411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9416 ;;Total ram usage:        0 bytes
  9417 ;; Hardware stack levels used: 1
  9418 ;; Hardware stack levels required when called: 8
  9419 ;; This function calls:
  9420 ;;		_SpiTransfer
  9421 ;; This function is called by:
  9422 ;;		_DRV_CANFDSPI_TransmitChannelLoad
  9423 ;; This function uses a reentrant model
  9424 ;;
  9425                           
  9426                           	psect	text26
  9427   013122                     __ptext26:
  9428                           	callstack 0
  9429   013122                     _DRV_CANFDSPI_WriteByteArray:
  9430                           	callstack 0
  9431                           
  9432                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9433   013122  0E05               	movlw	5
  9434   013124  26E1               	addwf	fsr1l,f,c
  9435   013126  0E00               	movlw	0
  9436   013128  22E2               	addwfc	fsr1h,f,c
  9437   01312A                     
  9438                           ;can/can.c: 383: int8_t DRV_CANFDSPI_WriteByteArray( uint16_t address,;can/can.c: 384:  
      +                                 uint8_t *txd, uint16_t nBytes);can/can.c: 385: {;can/can.c: 386:     uint16_t i;;
      +                          can/can.c: 387:     uint16_t spiTransferSize = nBytes + 2;
  9439                           ;stkvar	_nBytes @ sp[(-5)+-6]
  9440   01312A  0EF5               	movlw	-11
  9441   01312C  50E3               	movf	plusw1,w,c
  9442   01312E  0F02               	addlw	2
  9443   013130  6E2B               	movwf	(btemp+10)^0,c
  9444   013132  0EF6               	movlw	-10
  9445   013134  CFE3 F02C          	movff	plusw1,btemp+11
  9446   013138  0E00               	movlw	0
  9447   01313A  222C               	addwfc	(btemp+11)^0,f,c
  9448                           
  9449                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  9450   01313C  0EFD               	movlw	-3
  9451   01313E  C02B  FFE3         	movff	btemp+10,plusw1
  9452   013142  0EFE               	movlw	-2
  9453   013144  C02C  FFE3         	movff	btemp+11,plusw1
  9454   013148                     
  9455                           ;can/can.c: 391:     spiTransmitBuffer[0] = (uint8_t) ((0x02 << 4) + ((address >> 8) & 0
      +                          xF));
  9456                           ;stkvar	_address @ sp[(-5)+-2]
  9457   013148  0EFA               	movlw	250
  9458   01314A  24E1               	addwf	fsr1l,w,c
  9459   01314C  6ED9               	movwf	fsr2l,c
  9460   01314E  0EFF               	movlw	255
  9461   013150  20E2               	addwfc	fsr1h,w,c
  9462   013152  6EDA               	movwf	fsr2h,c
  9463   013154  50DF               	movf	indf2,w,c
  9464   013156  0B0F               	andlw	15
  9465   013158  0F20               	addlw	32
  9466   01315A  0101               	movlb	1	; () banked
  9467   01315C  6F00               	movwf	_spiTransmitBuffer& (0+255),b
  9468   01315E                     
  9469                           ; BSR set to: 1
  9470                           ;can/can.c: 392:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
  9471                           ;stkvar	_address @ sp[(-5)+-2]
  9472   01315E  0EF9               	movlw	-7
  9473   013160  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
  9474   013164                     
  9475                           ; BSR set to: 1
  9476                           ;can/can.c: 395:     for (i = 2; i < spiTransferSize; i++) {
  9477   013164  0E02               	movlw	2
  9478   013166  6E2B               	movwf	(btemp+10)^0,c
  9479   013168  0E00               	movlw	0
  9480   01316A  6E2C               	movwf	(btemp+11)^0,c
  9481                           
  9482                           ;stkvar	_i @ sp[(-5)+0]
  9483   01316C  0EFB               	movlw	-5
  9484   01316E  C02B  FFE3         	movff	btemp+10,plusw1
  9485   013172  0EFC               	movlw	-4
  9486   013174  C02C  FFE3         	movff	btemp+11,plusw1
  9487   013178  EFED  F098         	goto	l4012
  9488   01317C                     l4008:
  9489                           
  9490                           ;can/can.c: 396:         spiTransmitBuffer[i] = txd[i - 2];
  9491                           ;stkvar	_i @ sp[(-5)+0]
  9492                           ;stkvar	_txd @ sp[(-5)+-4]
  9493   01317C  0EF7               	movlw	-9
  9494   01317E  CFE3 F02B          	movff	plusw1,btemp+10
  9495   013182  0EF8               	movlw	-8
  9496   013184  CFE3 F02C          	movff	plusw1,btemp+11
  9497   013188  0EFB               	movlw	-5
  9498   01318A  50E3               	movf	plusw1,w,c
  9499   01318C  262B               	addwf	(btemp+10)^0,f,c
  9500   01318E  0EFC               	movlw	-4
  9501   013190  50E3               	movf	plusw1,w,c
  9502   013192  222C               	addwfc	(btemp+11)^0,f,c
  9503   013194  0EFE               	movlw	254
  9504   013196  242B               	addwf	(btemp+10)^0,w,c
  9505   013198  6ED9               	movwf	fsr2l,c
  9506   01319A  0EFF               	movlw	255
  9507   01319C  202C               	addwfc	(btemp+11)^0,w,c
  9508   01319E  6EDA               	movwf	fsr2h,c
  9509                           
  9510                           ;stkvar	_i @ sp[(-5)+0]
  9511   0131A0  0EFB               	movlw	-5
  9512   0131A2  CFE3 F02B          	movff	plusw1,btemp+10
  9513   0131A6  0EFC               	movlw	-4
  9514   0131A8  CFE3 F02C          	movff	plusw1,btemp+11
  9515   0131AC  0E00               	movlw	low _spiTransmitBuffer
  9516   0131AE  242B               	addwf	(btemp+10)^0,w,c
  9517   0131B0  6EE9               	movwf	fsr0l,c
  9518   0131B2  0E01               	movlw	high _spiTransmitBuffer
  9519   0131B4  202C               	addwfc	(btemp+11)^0,w,c
  9520   0131B6  6EEA               	movwf	fsr0h,c
  9521   0131B8  CFDF FFEF          	movff	indf2,indf0
  9522   0131BC                     
  9523                           ;can/can.c: 397:     }
  9524                           ;stkvar	_i @ sp[(-5)+0]
  9525   0131BC  0EFB               	movlw	-5
  9526   0131BE  50E3               	movf	plusw1,w,c
  9527   0131C0  0F01               	addlw	1
  9528   0131C2  6E21               	movwf	btemp^0,c
  9529   0131C4  0EFB               	movlw	-5
  9530   0131C6  C021  FFE3         	movff	btemp,plusw1
  9531   0131CA  6A21               	clrf	btemp^0,c
  9532   0131CC  0EFC               	movlw	-4
  9533   0131CE  50E3               	movf	plusw1,w,c
  9534   0131D0  2021               	addwfc	btemp^0,w,c
  9535   0131D2  6E21               	movwf	btemp^0,c
  9536   0131D4  0EFC               	movlw	-4
  9537   0131D6  C021  FFE3         	movff	btemp,plusw1
  9538   0131DA                     l4012:
  9539                           
  9540                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  9541   0131DA  0EFD               	movlw	-3
  9542   0131DC  CFE3 F02B          	movff	plusw1,btemp+10
  9543   0131E0  0EFE               	movlw	-2
  9544   0131E2  CFE3 F02C          	movff	plusw1,btemp+11
  9545                           
  9546                           ;stkvar	_i @ sp[(-5)+0]
  9547   0131E6  0EFB               	movlw	-5
  9548   0131E8  CFE3 F029          	movff	plusw1,btemp+8
  9549   0131EC  0EFC               	movlw	-4
  9550   0131EE  CFE3 F02A          	movff	plusw1,btemp+9
  9551   0131F2  502B               	movf	(btemp+10)^0,w,c
  9552   0131F4  5C29               	subwf	(btemp+8)^0,w,c
  9553   0131F6  502C               	movf	(btemp+11)^0,w,c
  9554   0131F8  582A               	subwfb	(btemp+9)^0,w,c
  9555   0131FA  A0D8               	btfss	status,0,c
  9556   0131FC  EF02  F099         	goto	u1621
  9557   013200  EF04  F099         	goto	u1620
  9558   013204                     u1621:
  9559   013204  EFBE  F098         	goto	l4008
  9560   013208                     u1620:
  9561   013208                     
  9562                           ;can/can.c: 399:     spiTransferError = SpiTransfer(spiTransmitBuffer, spiReceiveBuffer,
      +                           spiTransferSize);
  9563                           ;stkvar	_spiTransferSize @ sp[(-5)+2]
  9564   013208  0EFD               	movlw	-3
  9565   01320A  CFE3 FFE6          	movff	plusw1,postinc1
  9566   01320E  CFE3 FFE6          	movff	plusw1,postinc1
  9567   013212  0E00               	movlw	low _spiReceiveBuffer
  9568   013214  6EE6               	movwf	postinc1,c
  9569   013216  0E02               	movlw	high _spiReceiveBuffer
  9570   013218  6EE6               	movwf	postinc1,c
  9571   01321A  0E00               	movlw	low _spiTransmitBuffer
  9572   01321C  6EE6               	movwf	postinc1,c
  9573   01321E  0E01               	movlw	high _spiTransmitBuffer
  9574   013220  6EE6               	movwf	postinc1,c
  9575   013222  EC8E  F09D         	call	_SpiTransfer	;wreg free
  9576                           
  9577                           ;stkvar	_spiTransferError @ sp[(-5)+4]
  9578   013226  0EFF               	movlw	-1
  9579   013228  C021  FFE3         	movff	btemp,plusw1
  9580   01322C                     
  9581                           ;can/can.c: 401:     return spiTransferError;
  9582                           ;stkvar	_spiTransferError @ sp[(-5)+4]
  9583   01322C  0EFF               	movlw	-1
  9584   01322E  CFE3 F021          	movff	plusw1,btemp
  9585   013232                     
  9586                           ; _DRV_CANFDSPI_WriteByteArray: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 6, argsize = 6, vargsize = 0
  9587   013232  0EF5               	movlw	245
  9588   013234  26E1               	addwf	fsr1l,f,c
  9589   013236  0EFF               	movlw	255
  9590   013238  22E2               	addwfc	fsr1h,f,c
  9591   01323A  0012               	return		;funcret
  9592   01323C                     __end_of_DRV_CANFDSPI_WriteByteArray:
  9593                           	callstack 0
  9594                           
  9595 ;; *************** function _DRV_CANFDSPI_TransmitChannelUpdate *****************
  9596 ;; Defined at:
  9597 ;;		line 880 in file "can/can.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;  channel         1  [STACK] enum E5287
  9600 ;;  flush           1  [STACK] _Bool 
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
  9603 ;;  a               2  [STACK] unsigned short 
  9604 ;;  spiTransferE    1  [STACK] char 
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  1  [STACK] char 
  9607 ;; Registers used:
  9608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  9609 ;; Tracked objects:
  9610 ;;		On entry : 0/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9618 ;;Total ram usage:        0 bytes
  9619 ;; Hardware stack levels used: 1
  9620 ;; Hardware stack levels required when called: 9
  9621 ;; This function calls:
  9622 ;;		_DRV_CANFDSPI_WriteByte
  9623 ;; This function is called by:
  9624 ;;		_DRV_CANFDSPI_TransmitChannelLoad
  9625 ;; This function uses a reentrant model
  9626 ;;
  9627                           
  9628                           	psect	text27
  9629   013EB0                     __ptext27:
  9630                           	callstack 0
  9631   013EB0                     _DRV_CANFDSPI_TransmitChannelUpdate:
  9632                           	callstack 0
  9633                           
  9634                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9635   013EB0  0E08               	movlw	8
  9636   013EB2  26E1               	addwf	fsr1l,f,c
  9637   013EB4  0E00               	movlw	0
  9638   013EB6  22E2               	addwfc	fsr1h,f,c
  9639   013EB8                     
  9640                           ;can/can.c: 888:     a = 0x050 + (channel * (3*4)) + 1;
  9641                           ;stkvar	_channel @ sp[(-8)+-1]
  9642   013EB8  0EF7               	movlw	-9
  9643   013EBA  50E3               	movf	plusw1,w,c
  9644   013EBC  0D0C               	mullw	12
  9645   013EBE  0E51               	movlw	81
  9646   013EC0  26F3               	addwf	243,f,c
  9647   013EC2  0E00               	movlw	0
  9648   013EC4  22F4               	addwfc	244,f,c
  9649                           
  9650                           ;stkvar	_a @ sp[(-8)+5]
  9651   013EC6  0EFD               	movlw	-3
  9652   013EC8  CFF3 FFE3          	movff	prodl,plusw1
  9653   013ECC  0EFE               	movlw	-2
  9654   013ECE  CFF4 FFE3          	movff	prodh,plusw1
  9655   013ED2                     
  9656                           ;can/can.c: 889:     ciFifoCon.word = 0;
  9657                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  9658   013ED2  0EF8               	movlw	-8
  9659   013ED4  6AE3               	clrf	plusw1,c
  9660   013ED6  0EF9               	movlw	-7
  9661   013ED8  6AE3               	clrf	plusw1,c
  9662   013EDA  0EFA               	movlw	-6
  9663   013EDC  6AE3               	clrf	plusw1,c
  9664   013EDE  0EFB               	movlw	-5
  9665   013EE0  6AE3               	clrf	plusw1,c
  9666   013EE2                     
  9667                           ;can/can.c: 890:     ciFifoCon.txBF.UINC = 1;
  9668                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  9669   013EE2  0EF9               	movlw	249
  9670   013EE4  24E1               	addwf	fsr1l,w,c
  9671   013EE6  6ED9               	movwf	fsr2l,c
  9672   013EE8  0EFF               	movlw	255
  9673   013EEA  20E2               	addwfc	fsr1h,w,c
  9674   013EEC  6EDA               	movwf	fsr2h,c
  9675   013EEE  80DF               	bsf	indf2,0,c
  9676   013EF0                     
  9677                           ;can/can.c: 893:     if (flush) {
  9678                           ;stkvar	_flush @ sp[(-8)+-2]
  9679   013EF0  0EF6               	movlw	-10
  9680   013EF2  50E3               	movf	plusw1,w,c
  9681   013EF4  B4D8               	btfsc	status,2,c
  9682   013EF6  EF7F  F09F         	goto	u1601
  9683   013EFA  EF81  F09F         	goto	u1600
  9684   013EFE                     u1601:
  9685   013EFE  EF88  F09F         	goto	l3968
  9686   013F02                     u1600:
  9687   013F02                     
  9688                           ;can/can.c: 894:         ciFifoCon.txBF.TxRequest = 1;
  9689                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  9690   013F02  0EF9               	movlw	249
  9691   013F04  24E1               	addwf	fsr1l,w,c
  9692   013F06  6ED9               	movwf	fsr2l,c
  9693   013F08  0EFF               	movlw	255
  9694   013F0A  20E2               	addwfc	fsr1h,w,c
  9695   013F0C  6EDA               	movwf	fsr2h,c
  9696   013F0E  82DF               	bsf	indf2,1,c
  9697   013F10                     l3968:
  9698                           
  9699                           ;can/can.c: 897:     spiTransferError = DRV_CANFDSPI_WriteByte( a, ciFifoCon.byte[1]);
  9700                           ;stkvar	_ciFifoCon @ sp[(-8)+0]
  9701   013F10  0EF9               	movlw	249
  9702   013F12  24E1               	addwf	fsr1l,w,c
  9703   013F14  6ED9               	movwf	fsr2l,c
  9704   013F16  0EFF               	movlw	255
  9705   013F18  20E2               	addwfc	fsr1h,w,c
  9706   013F1A  6EDA               	movwf	fsr2h,c
  9707   013F1C  50DF               	movf	indf2,w,c
  9708   013F1E  6EE6               	movwf	postinc1,c
  9709                           
  9710                           ;stkvar	_a @ sp[(-9)+5]
  9711   013F20  0EFC               	movlw	-4
  9712   013F22  CFE3 FFE6          	movff	plusw1,postinc1
  9713   013F26  CFE3 FFE6          	movff	plusw1,postinc1
  9714   013F2A  EC21  F0A3         	call	_DRV_CANFDSPI_WriteByte	;wreg free
  9715                           
  9716                           ;stkvar	_spiTransferError @ sp[(-8)+7]
  9717   013F2E  0EFF               	movlw	-1
  9718   013F30  C021  FFE3         	movff	btemp,plusw1
  9719   013F34                     
  9720                           ;can/can.c: 898:     if (spiTransferError) {
  9721                           ;stkvar	_spiTransferError @ sp[(-8)+7]
  9722   013F34  0EFF               	movlw	-1
  9723   013F36  50E3               	movf	plusw1,w,c
  9724   013F38  B4D8               	btfsc	status,2,c
  9725   013F3A  EFA1  F09F         	goto	u1611
  9726   013F3E  EFA3  F09F         	goto	u1610
  9727   013F42                     u1611:
  9728   013F42  EFA7  F09F         	goto	l3976
  9729   013F46                     u1610:
  9730   013F46                     
  9731                           ;can/can.c: 899:         return -1;
  9732   013F46  0EFF               	movlw	255
  9733   013F48  6E21               	movwf	btemp^0,c
  9734   013F4A  EFAA  F09F         	goto	l293
  9735   013F4E                     l3976:
  9736                           
  9737                           ;can/can.c: 902:     return spiTransferError;
  9738                           ;stkvar	_spiTransferError @ sp[(-8)+7]
  9739   013F4E  0EFF               	movlw	-1
  9740   013F50  CFE3 F021          	movff	plusw1,btemp
  9741   013F54                     l293:
  9742                           
  9743                           ; _DRV_CANFDSPI_TransmitChannelUpdate: autosize = 8, savesize = 0, parsavesize = 0, temp
      +                          size = 0 parsize = 2, argsize = 2, vargsize = 0
  9744   013F54  0EF6               	movlw	246
  9745   013F56  26E1               	addwf	fsr1l,f,c
  9746   013F58  0EFF               	movlw	255
  9747   013F5A  22E2               	addwfc	fsr1h,f,c
  9748   013F5C  0012               	return		;funcret
  9749   013F5E                     __end_of_DRV_CANFDSPI_TransmitChannelUpdate:
  9750                           	callstack 0
  9751                           
  9752 ;; *************** function _DRV_CANFDSPI_ReadWordArray *****************
  9753 ;; Defined at:
  9754 ;;		line 405 in file "can/can.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;  address         2  [STACK] unsigned short 
  9757 ;;  rxd             2  [STACK] PTR unsigned long 
  9758 ;;		 -> w(12), fifoReg(12), fifoReg(12), fifoReg(8), 
  9759 ;;		 -> fifoReg(12), 
  9760 ;;  nWords          2  [STACK] unsigned short 
  9761 ;; Auto vars:     Size  Location     Type
  9762 ;;  w               4  [STACK] struct _REG_t
  9763 ;;  i               2  [STACK] unsigned short 
  9764 ;;  j               2  [STACK] unsigned short 
  9765 ;;  spiTransferS    2  [STACK] unsigned short 
  9766 ;;  n               2  [STACK] unsigned short 
  9767 ;;  spiTransferE    1  [STACK] char 
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1  [STACK] char 
  9770 ;; Registers used:
  9771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;Total ram usage:        0 bytes
  9782 ;; Hardware stack levels used: 1
  9783 ;; Hardware stack levels required when called: 8
  9784 ;; This function calls:
  9785 ;;		_SpiTransfer
  9786 ;; This function is called by:
  9787 ;;		_DRV_CANFDSPI_TransmitChannelLoad
  9788 ;;		_DRV_CANFDSPI_ReceiveMessageGet
  9789 ;; This function uses a reentrant model
  9790 ;;
  9791                           
  9792                           	psect	text28
  9793   0114B2                     __ptext28:
  9794                           	callstack 0
  9795   0114B2                     _DRV_CANFDSPI_ReadWordArray:
  9796                           	callstack 0
  9797                           
  9798                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9799   0114B2  0E0D               	movlw	13
  9800   0114B4  26E1               	addwf	fsr1l,f,c
  9801   0114B6  0E00               	movlw	0
  9802   0114B8  22E2               	addwfc	fsr1h,f,c
  9803   0114BA                     
  9804                           ;can/can.c: 405: int8_t DRV_CANFDSPI_ReadWordArray( uint16_t address,;can/can.c: 406:   
      +                                uint32_t *rxd, uint16_t nWords);can/can.c: 407: {;can/can.c: 408:     uint16_t i, 
      +                          j, n;;can/can.c: 409:     REG_t w;;can/can.c: 410:     uint16_t spiTransferSize = nWords
      +                           * 4 + 2;
  9805                           ;stkvar	_nWords @ sp[(-13)+-6]
  9806   0114BA  0EED               	movlw	-19
  9807   0114BC  CFE3 F02B          	movff	plusw1,btemp+10
  9808   0114C0  0EEE               	movlw	-18
  9809   0114C2  CFE3 F02C          	movff	plusw1,btemp+11
  9810   0114C6  90D8               	bcf	status,0,c
  9811   0114C8  362B               	rlcf	(btemp+10)^0,f,c
  9812   0114CA  362C               	rlcf	(btemp+11)^0,f,c
  9813   0114CC  90D8               	bcf	status,0,c
  9814   0114CE  362B               	rlcf	(btemp+10)^0,f,c
  9815   0114D0  362C               	rlcf	(btemp+11)^0,f,c
  9816   0114D2  0E02               	movlw	2
  9817   0114D4  262B               	addwf	(btemp+10)^0,f,c
  9818   0114D6  0E00               	movlw	0
  9819   0114D8  222C               	addwfc	(btemp+11)^0,f,c
  9820                           
  9821                           ;stkvar	_spiTransferSize @ sp[(-13)+8]
  9822   0114DA  0EFB               	movlw	-5
  9823   0114DC  C02B  FFE3         	movff	btemp+10,plusw1
  9824   0114E0  0EFC               	movlw	-4
  9825   0114E2  C02C  FFE3         	movff	btemp+11,plusw1
  9826   0114E6                     
  9827                           ;can/can.c: 414:     spiTransmitBuffer[0] = (0x03 << 4) + ((address >> 8) & 0xF);
  9828                           ;stkvar	_address @ sp[(-13)+-2]
  9829   0114E6  0EF2               	movlw	242
  9830   0114E8  24E1               	addwf	fsr1l,w,c
  9831   0114EA  6ED9               	movwf	fsr2l,c
  9832   0114EC  0EFF               	movlw	255
  9833   0114EE  20E2               	addwfc	fsr1h,w,c
  9834   0114F0  6EDA               	movwf	fsr2h,c
  9835   0114F2  50DF               	movf	indf2,w,c
  9836   0114F4  0B0F               	andlw	15
  9837   0114F6  0F30               	addlw	48
  9838   0114F8  0101               	movlb	1	; () banked
  9839   0114FA  6F00               	movwf	_spiTransmitBuffer& (0+255),b
  9840   0114FC                     
  9841                           ; BSR set to: 1
  9842                           ;can/can.c: 415:     spiTransmitBuffer[1] = address & 0xFF;
  9843                           ;stkvar	_address @ sp[(-13)+-2]
  9844   0114FC  0EF1               	movlw	-15
  9845   0114FE  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
  9846   011502                     
  9847                           ; BSR set to: 1
  9848                           ;can/can.c: 418:     for (i = 2; i < spiTransferSize; i++) {
  9849   011502  0E02               	movlw	2
  9850   011504  6E2B               	movwf	(btemp+10)^0,c
  9851   011506  0E00               	movlw	0
  9852   011508  6E2C               	movwf	(btemp+11)^0,c
  9853                           
  9854                           ;stkvar	_i @ sp[(-13)+4]
  9855   01150A  0EF7               	movlw	-9
  9856   01150C  C02B  FFE3         	movff	btemp+10,plusw1
  9857   011510  0EF8               	movlw	-8
  9858   011512  C02C  FFE3         	movff	btemp+11,plusw1
  9859   011516  EFA9  F08A         	goto	l4034
  9860   01151A                     l4030:
  9861                           
  9862                           ;can/can.c: 419:         spiTransmitBuffer[i] = 0;
  9863                           ;stkvar	_i @ sp[(-13)+4]
  9864   01151A  0EF7               	movlw	-9
  9865   01151C  CFE3 F02B          	movff	plusw1,btemp+10
  9866   011520  0EF8               	movlw	-8
  9867   011522  CFE3 F02C          	movff	plusw1,btemp+11
  9868   011526  0E00               	movlw	low _spiTransmitBuffer
  9869   011528  242B               	addwf	(btemp+10)^0,w,c
  9870   01152A  6ED9               	movwf	fsr2l,c
  9871   01152C  0E01               	movlw	high _spiTransmitBuffer
  9872   01152E  202C               	addwfc	(btemp+11)^0,w,c
  9873   011530  6EDA               	movwf	fsr2h,c
  9874   011532  6ADF               	clrf	indf2,c
  9875   011534                     
  9876                           ;can/can.c: 420:     }
  9877                           ;stkvar	_i @ sp[(-13)+4]
  9878   011534  0EF7               	movlw	-9
  9879   011536  50E3               	movf	plusw1,w,c
  9880   011538  0F01               	addlw	1
  9881   01153A  6E21               	movwf	btemp^0,c
  9882   01153C  0EF7               	movlw	-9
  9883   01153E  C021  FFE3         	movff	btemp,plusw1
  9884   011542  6A21               	clrf	btemp^0,c
  9885   011544  0EF8               	movlw	-8
  9886   011546  50E3               	movf	plusw1,w,c
  9887   011548  2021               	addwfc	btemp^0,w,c
  9888   01154A  6E21               	movwf	btemp^0,c
  9889   01154C  0EF8               	movlw	-8
  9890   01154E  C021  FFE3         	movff	btemp,plusw1
  9891   011552                     l4034:
  9892                           
  9893                           ;stkvar	_spiTransferSize @ sp[(-13)+8]
  9894   011552  0EFB               	movlw	-5
  9895   011554  CFE3 F02B          	movff	plusw1,btemp+10
  9896   011558  0EFC               	movlw	-4
  9897   01155A  CFE3 F02C          	movff	plusw1,btemp+11
  9898                           
  9899                           ;stkvar	_i @ sp[(-13)+4]
  9900   01155E  0EF7               	movlw	-9
  9901   011560  CFE3 F029          	movff	plusw1,btemp+8
  9902   011564  0EF8               	movlw	-8
  9903   011566  CFE3 F02A          	movff	plusw1,btemp+9
  9904   01156A  502B               	movf	(btemp+10)^0,w,c
  9905   01156C  5C29               	subwf	(btemp+8)^0,w,c
  9906   01156E  502C               	movf	(btemp+11)^0,w,c
  9907   011570  582A               	subwfb	(btemp+9)^0,w,c
  9908   011572  A0D8               	btfss	status,0,c
  9909   011574  EFBE  F08A         	goto	u1631
  9910   011578  EFC0  F08A         	goto	u1630
  9911   01157C                     u1631:
  9912   01157C  EF8D  F08A         	goto	l4030
  9913   011580                     u1630:
  9914   011580                     
  9915                           ;can/can.c: 422:     spiTransferError = SpiTransfer( spiTransmitBuffer, spiReceiveBuffer
      +                          , spiTransferSize);
  9916                           ;stkvar	_spiTransferSize @ sp[(-13)+8]
  9917   011580  0EFB               	movlw	-5
  9918   011582  CFE3 FFE6          	movff	plusw1,postinc1
  9919   011586  CFE3 FFE6          	movff	plusw1,postinc1
  9920   01158A  0E00               	movlw	low _spiReceiveBuffer
  9921   01158C  6EE6               	movwf	postinc1,c
  9922   01158E  0E02               	movlw	high _spiReceiveBuffer
  9923   011590  6EE6               	movwf	postinc1,c
  9924   011592  0E00               	movlw	low _spiTransmitBuffer
  9925   011594  6EE6               	movwf	postinc1,c
  9926   011596  0E01               	movlw	high _spiTransmitBuffer
  9927   011598  6EE6               	movwf	postinc1,c
  9928   01159A  EC8E  F09D         	call	_SpiTransfer	;wreg free
  9929                           
  9930                           ;stkvar	_spiTransferError @ sp[(-13)+12]
  9931   01159E  0EFF               	movlw	-1
  9932   0115A0  C021  FFE3         	movff	btemp,plusw1
  9933   0115A4                     
  9934                           ;can/can.c: 423:     if (spiTransferError) {
  9935                           ;stkvar	_spiTransferError @ sp[(-13)+12]
  9936   0115A4  0EFF               	movlw	-1
  9937   0115A6  50E3               	movf	plusw1,w,c
  9938   0115A8  B4D8               	btfsc	status,2,c
  9939   0115AA  EFD9  F08A         	goto	u1641
  9940   0115AE  EFDB  F08A         	goto	u1640
  9941   0115B2                     u1641:
  9942   0115B2  EFE0  F08A         	goto	l4044
  9943   0115B6                     u1640:
  9944   0115B6                     l4040:
  9945                           
  9946                           ;can/can.c: 424:         return spiTransferError;
  9947                           ;stkvar	_spiTransferError @ sp[(-13)+12]
  9948   0115B6  0EFF               	movlw	-1
  9949   0115B8  CFE3 F021          	movff	plusw1,btemp
  9950   0115BC  EF98  F08B         	goto	l206
  9951   0115C0                     l4044:
  9952                           
  9953                           ;can/can.c: 428:     n = 2;
  9954   0115C0  0E02               	movlw	2
  9955   0115C2  6E2B               	movwf	(btemp+10)^0,c
  9956   0115C4  0E00               	movlw	0
  9957   0115C6  6E2C               	movwf	(btemp+11)^0,c
  9958                           
  9959                           ;stkvar	_n @ sp[(-13)+10]
  9960   0115C8  0EFD               	movlw	-3
  9961   0115CA  C02B  FFE3         	movff	btemp+10,plusw1
  9962   0115CE  0EFE               	movlw	-2
  9963   0115D0  C02C  FFE3         	movff	btemp+11,plusw1
  9964   0115D4                     
  9965                           ;can/can.c: 429:     for (i = 0; i < nWords; i++) {
  9966                           ;stkvar	_i @ sp[(-13)+4]
  9967   0115D4  0EF7               	movlw	-9
  9968   0115D6  6AE3               	clrf	plusw1,c
  9969   0115D8  0EF8               	movlw	-8
  9970   0115DA  6AE3               	clrf	plusw1,c
  9971   0115DC  EF7F  F08B         	goto	l4066
  9972   0115E0                     l4048:
  9973                           
  9974                           ;can/can.c: 430:         w.word = 0;
  9975                           ;stkvar	_w @ sp[(-13)+0]
  9976   0115E0  0EF3               	movlw	-13
  9977   0115E2  6AE3               	clrf	plusw1,c
  9978   0115E4  0EF4               	movlw	-12
  9979   0115E6  6AE3               	clrf	plusw1,c
  9980   0115E8  0EF5               	movlw	-11
  9981   0115EA  6AE3               	clrf	plusw1,c
  9982   0115EC  0EF6               	movlw	-10
  9983   0115EE  6AE3               	clrf	plusw1,c
  9984                           
  9985                           ;can/can.c: 431:         for (j = 0; j < 4; j++, n++) {
  9986                           ;stkvar	_j @ sp[(-13)+6]
  9987   0115F0  0EF9               	movlw	-7
  9988   0115F2  6AE3               	clrf	plusw1,c
  9989   0115F4  0EFA               	movlw	-6
  9990   0115F6  6AE3               	clrf	plusw1,c
  9991   0115F8                     l4054:
  9992                           
  9993                           ;can/can.c: 432:             w.byte[j] = spiReceiveBuffer[n];
  9994                           ;stkvar	_n @ sp[(-13)+10]
  9995   0115F8  0EFD               	movlw	-3
  9996   0115FA  CFE3 F02B          	movff	plusw1,btemp+10
  9997   0115FE  0EFE               	movlw	-2
  9998   011600  CFE3 F02C          	movff	plusw1,btemp+11
  9999   011604  0E00               	movlw	low _spiReceiveBuffer
 10000   011606  242B               	addwf	(btemp+10)^0,w,c
 10001   011608  6ED9               	movwf	fsr2l,c
 10002   01160A  0E02               	movlw	high _spiReceiveBuffer
 10003   01160C  202C               	addwfc	(btemp+11)^0,w,c
 10004   01160E  6EDA               	movwf	fsr2h,c
 10005                           
 10006                           ;stkvar	_j @ sp[(-13)+6]
 10007   011610  0EF9               	movlw	-7
 10008   011612  CFE3 F02B          	movff	plusw1,btemp+10
 10009   011616  0EFA               	movlw	-6
 10010   011618  CFE3 F02C          	movff	plusw1,btemp+11
 10011                           
 10012                           ;stkvar	_w @ sp[(-13)+0]
 10013   01161C  0EF3               	movlw	243
 10014   01161E  24E1               	addwf	fsr1l,w,c
 10015   011620  6E29               	movwf	(btemp+8)^0,c
 10016   011622  0EFF               	movlw	255
 10017   011624  20E2               	addwfc	fsr1h,w,c
 10018   011626  6E2A               	movwf	(btemp+9)^0,c
 10019   011628  502B               	movf	(btemp+10)^0,w,c
 10020   01162A  2429               	addwf	(btemp+8)^0,w,c
 10021   01162C  6EE9               	movwf	fsr0l,c
 10022   01162E  502C               	movf	(btemp+11)^0,w,c
 10023   011630  202A               	addwfc	(btemp+9)^0,w,c
 10024   011632  6EEA               	movwf	fsr0h,c
 10025   011634  CFDF FFEF          	movff	indf2,indf0
 10026   011638                     
 10027                           ;can/can.c: 433:         }
 10028                           ;stkvar	_j @ sp[(-13)+6]
 10029   011638  0EF9               	movlw	-7
 10030   01163A  50E3               	movf	plusw1,w,c
 10031   01163C  0F01               	addlw	1
 10032   01163E  6E21               	movwf	btemp^0,c
 10033   011640  0EF9               	movlw	-7
 10034   011642  C021  FFE3         	movff	btemp,plusw1
 10035   011646  6A21               	clrf	btemp^0,c
 10036   011648  0EFA               	movlw	-6
 10037   01164A  50E3               	movf	plusw1,w,c
 10038   01164C  2021               	addwfc	btemp^0,w,c
 10039   01164E  6E21               	movwf	btemp^0,c
 10040   011650  0EFA               	movlw	-6
 10041   011652  C021  FFE3         	movff	btemp,plusw1
 10042   011656                     
 10043                           ;stkvar	_n @ sp[(-13)+10]
 10044   011656  0EFD               	movlw	-3
 10045   011658  50E3               	movf	plusw1,w,c
 10046   01165A  0F01               	addlw	1
 10047   01165C  6E21               	movwf	btemp^0,c
 10048   01165E  0EFD               	movlw	-3
 10049   011660  C021  FFE3         	movff	btemp,plusw1
 10050   011664  6A21               	clrf	btemp^0,c
 10051   011666  0EFE               	movlw	-2
 10052   011668  50E3               	movf	plusw1,w,c
 10053   01166A  2021               	addwfc	btemp^0,w,c
 10054   01166C  6E21               	movwf	btemp^0,c
 10055   01166E  0EFE               	movlw	-2
 10056   011670  C021  FFE3         	movff	btemp,plusw1
 10057   011674                     
 10058                           ;stkvar	_j @ sp[(-13)+6]
 10059   011674  0EFA               	movlw	-6
 10060   011676  50E3               	movf	plusw1,w,c
 10061   011678  E10C               	bnz	u1650
 10062   01167A  0EF9               	movlw	-7
 10063   01167C  CFE3 F021          	movff	plusw1,btemp
 10064   011680  0E04               	movlw	4
 10065   011682  5E21               	subwf	btemp^0,f,c
 10066   011684  A0D8               	btfss	status,0,c
 10067   011686  EF47  F08B         	goto	u1651
 10068   01168A  EF49  F08B         	goto	u1650
 10069   01168E                     u1651:
 10070   01168E  EFFC  F08A         	goto	l4054
 10071   011692                     u1650:
 10072   011692                     
 10073                           ;can/can.c: 434:         rxd[i] = w.word;
 10074                           ;stkvar	_w @ sp[(-13)+0]
 10075   011692  50E1               	movf	fsr1l,w,c
 10076   011694  0FF3               	addlw	-13
 10077   011696  6ED9               	movwf	fsr2l,c
 10078   011698  50E2               	movf	fsr1h,w,c
 10079   01169A  6EDA               	movwf	fsr2h,c
 10080   01169C  0EFF               	movlw	255
 10081   01169E  22DA               	addwfc	fsr2h,f,c
 10082                           
 10083                           ;stkvar	_i @ sp[(-13)+4]
 10084   0116A0  0EF7               	movlw	-9
 10085   0116A2  CFE3 F02B          	movff	plusw1,btemp+10
 10086   0116A6  0EF8               	movlw	-8
 10087   0116A8  CFE3 F02C          	movff	plusw1,btemp+11
 10088   0116AC  90D8               	bcf	status,0,c
 10089   0116AE  362B               	rlcf	(btemp+10)^0,f,c
 10090   0116B0  362C               	rlcf	(btemp+11)^0,f,c
 10091   0116B2  90D8               	bcf	status,0,c
 10092   0116B4  362B               	rlcf	(btemp+10)^0,f,c
 10093   0116B6  362C               	rlcf	(btemp+11)^0,f,c
 10094                           
 10095                           ;stkvar	_rxd @ sp[(-13)+-4]
 10096   0116B8  0EEF               	movlw	-17
 10097   0116BA  CFE3 F029          	movff	plusw1,btemp+8
 10098   0116BE  0EF0               	movlw	-16
 10099   0116C0  CFE3 F02A          	movff	plusw1,btemp+9
 10100   0116C4  502B               	movf	(btemp+10)^0,w,c
 10101   0116C6  2429               	addwf	(btemp+8)^0,w,c
 10102   0116C8  6EE9               	movwf	fsr0l,c
 10103   0116CA  502C               	movf	(btemp+11)^0,w,c
 10104   0116CC  202A               	addwfc	(btemp+9)^0,w,c
 10105   0116CE  6EEA               	movwf	fsr0h,c
 10106   0116D0  CFDE FFEE          	movff	postinc2,postinc0
 10107   0116D4  CFDE FFEE          	movff	postinc2,postinc0
 10108   0116D8  CFDE FFEE          	movff	postinc2,postinc0
 10109   0116DC  CFDE FFEE          	movff	postinc2,postinc0
 10110   0116E0                     
 10111                           ;can/can.c: 435:     }
 10112                           ;stkvar	_i @ sp[(-13)+4]
 10113   0116E0  0EF7               	movlw	-9
 10114   0116E2  50E3               	movf	plusw1,w,c
 10115   0116E4  0F01               	addlw	1
 10116   0116E6  6E21               	movwf	btemp^0,c
 10117   0116E8  0EF7               	movlw	-9
 10118   0116EA  C021  FFE3         	movff	btemp,plusw1
 10119   0116EE  6A21               	clrf	btemp^0,c
 10120   0116F0  0EF8               	movlw	-8
 10121   0116F2  50E3               	movf	plusw1,w,c
 10122   0116F4  2021               	addwfc	btemp^0,w,c
 10123   0116F6  6E21               	movwf	btemp^0,c
 10124   0116F8  0EF8               	movlw	-8
 10125   0116FA  C021  FFE3         	movff	btemp,plusw1
 10126   0116FE                     l4066:
 10127                           
 10128                           ;stkvar	_nWords @ sp[(-13)+-6]
 10129   0116FE  0EED               	movlw	-19
 10130   011700  CFE3 F02B          	movff	plusw1,btemp+10
 10131   011704  0EEE               	movlw	-18
 10132   011706  CFE3 F02C          	movff	plusw1,btemp+11
 10133                           
 10134                           ;stkvar	_i @ sp[(-13)+4]
 10135   01170A  0EF7               	movlw	-9
 10136   01170C  CFE3 F029          	movff	plusw1,btemp+8
 10137   011710  0EF8               	movlw	-8
 10138   011712  CFE3 F02A          	movff	plusw1,btemp+9
 10139   011716  502B               	movf	(btemp+10)^0,w,c
 10140   011718  5C29               	subwf	(btemp+8)^0,w,c
 10141   01171A  502C               	movf	(btemp+11)^0,w,c
 10142   01171C  582A               	subwfb	(btemp+9)^0,w,c
 10143   01171E  A0D8               	btfss	status,0,c
 10144   011720  EF94  F08B         	goto	u1661
 10145   011724  EF96  F08B         	goto	u1660
 10146   011728                     u1661:
 10147   011728  EFF0  F08A         	goto	l4048
 10148   01172C                     u1660:
 10149   01172C  EFDB  F08A         	goto	l4040
 10150   011730                     l206:
 10151                           
 10152                           ; _DRV_CANFDSPI_ReadWordArray: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 6, argsize = 6, vargsize = 0
 10153   011730  0EED               	movlw	237
 10154   011732  26E1               	addwf	fsr1l,f,c
 10155   011734  0EFF               	movlw	255
 10156   011736  22E2               	addwfc	fsr1h,f,c
 10157   011738  0012               	return		;funcret
 10158   01173A                     __end_of_DRV_CANFDSPI_ReadWordArray:
 10159                           	callstack 0
 10160                           
 10161 ;; *************** function _DRV_CANFDSPI_DlcToDataBytes *****************
 10162 ;; Defined at:
 10163 ;;		line 3766 in file "can/can.c"
 10164 ;; Parameters:    Size  Location     Type
 10165 ;;  dlc             1  [STACK] enum E5461
 10166 ;; Auto vars:     Size  Location     Type
 10167 ;;  dataBytesInO    4  [STACK] unsigned long 
 10168 ;; Return value:  Size  Location     Type
 10169 ;;                  4  [STACK] unsigned long 
 10170 ;; Registers used:
 10171 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+
      +8, btemp+9, btemp+10, btemp+11
 10172 ;; Tracked objects:
 10173 ;;		On entry : 0/0
 10174 ;;		On exit  : 0/0
 10175 ;;		Unchanged: 0/0
 10176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10181 ;;Total ram usage:        0 bytes
 10182 ;; Hardware stack levels used: 1
 10183 ;; Hardware stack levels required when called: 7
 10184 ;; This function calls:
 10185 ;;		Nothing
 10186 ;; This function is called by:
 10187 ;;		_DRV_CANFDSPI_TransmitChannelLoad
 10188 ;; This function uses a reentrant model
 10189 ;;
 10190                           
 10191                           	psect	text29
 10192   0122B4                     __ptext29:
 10193                           	callstack 0
 10194   0122B4                     _DRV_CANFDSPI_DlcToDataBytes:
 10195                           	callstack 0
 10196                           
 10197                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10198   0122B4  52E6               	movf	postinc1,f,c
 10199   0122B6  52E6               	movf	postinc1,f,c
 10200   0122B8  52E6               	movf	postinc1,f,c
 10201   0122BA  52E6               	movf	postinc1,f,c
 10202   0122BC                     
 10203                           ;can/can.c: 3766: uint32_t DRV_CANFDSPI_DlcToDataBytes(CAN_DLC dlc);can/can.c: 3767: {;c
      +                          an/can.c: 3768:     uint32_t dataBytesInObject = 0;
 10204                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10205   0122BC  0EFC               	movlw	-4
 10206   0122BE  6AE3               	clrf	plusw1,c
 10207   0122C0  0EFD               	movlw	-3
 10208   0122C2  6AE3               	clrf	plusw1,c
 10209   0122C4  0EFE               	movlw	-2
 10210   0122C6  6AE3               	clrf	plusw1,c
 10211   0122C8  0EFF               	movlw	-1
 10212   0122CA  6AE3               	clrf	plusw1,c
 10213   0122CC                     
 10214                           ;can/can.c: 3770:     __nop();
 10215   0122CC  0000               	nop	
 10216   0122CE                     
 10217                           ;can/can.c: 3771:     __nop();
 10218   0122CE  0000               	nop	
 10219   0122D0                     
 10220                           ;can/can.c: 3773:     if (dlc < CAN_DLC_12) {
 10221                           ;stkvar	_dlc @ sp[(-4)+-1]
 10222   0122D0  0EFB               	movlw	-5
 10223   0122D2  CFE3 F021          	movff	plusw1,btemp
 10224   0122D6  0E09               	movlw	9
 10225   0122D8  6021               	cpfslt	btemp^0,c
 10226   0122DA  EF71  F091         	goto	u1671
 10227   0122DE  EF73  F091         	goto	u1670
 10228   0122E2                     u1671:
 10229   0122E2  EF0E  F092         	goto	l4098
 10230   0122E6                     u1670:
 10231   0122E6                     
 10232                           ;can/can.c: 3774:         dataBytesInObject = dlc;
 10233                           ;stkvar	_dlc @ sp[(-4)+-1]
 10234   0122E6  0EFB               	movlw	-5
 10235   0122E8  CFE3 F02C          	movff	plusw1,btemp+11
 10236   0122EC  C02C  F025         	movff	btemp+11,btemp+4
 10237   0122F0  6A26               	clrf	(btemp+5)^0,c
 10238   0122F2  6A27               	clrf	(btemp+6)^0,c
 10239   0122F4  6A28               	clrf	(btemp+7)^0,c
 10240                           
 10241                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10242   0122F6  0EFC               	movlw	-4
 10243   0122F8  C025  FFE3         	movff	btemp+4,plusw1
 10244   0122FC  0EFD               	movlw	-3
 10245   0122FE  C026  FFE3         	movff	btemp+5,plusw1
 10246   012302  0EFE               	movlw	-2
 10247   012304  C027  FFE3         	movff	btemp+6,plusw1
 10248   012308  0EFF               	movlw	-1
 10249   01230A  C028  FFE3         	movff	btemp+7,plusw1
 10250                           
 10251                           ;can/can.c: 3775:     } else {
 10252   01230E  EF38  F092         	goto	l4100
 10253   012312                     l4082:
 10254                           
 10255                           ;can/can.c: 3778:                 dataBytesInObject = 12;
 10256   012312  0E0C               	movlw	12
 10257   012314  6E29               	movwf	(btemp+8)^0,c
 10258   012316  6A2A               	clrf	(btemp+9)^0,c
 10259   012318  6A2B               	clrf	(btemp+10)^0,c
 10260   01231A  6A2C               	clrf	(btemp+11)^0,c
 10261                           
 10262                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10263   01231C  0EFC               	movlw	-4
 10264   01231E  C029  FFE3         	movff	btemp+8,plusw1
 10265   012322  0EFD               	movlw	-3
 10266   012324  C02A  FFE3         	movff	btemp+9,plusw1
 10267   012328  0EFE               	movlw	-2
 10268   01232A  C02B  FFE3         	movff	btemp+10,plusw1
 10269   01232E  0EFF               	movlw	-1
 10270   012330  C02C  FFE3         	movff	btemp+11,plusw1
 10271                           
 10272                           ;can/can.c: 3779:                 break;
 10273   012334  EF38  F092         	goto	l4100
 10274   012338                     l4084:
 10275                           
 10276                           ;can/can.c: 3781:                 dataBytesInObject = 16;
 10277   012338  0E10               	movlw	16
 10278   01233A  6E29               	movwf	(btemp+8)^0,c
 10279   01233C  6A2A               	clrf	(btemp+9)^0,c
 10280   01233E  6A2B               	clrf	(btemp+10)^0,c
 10281   012340  6A2C               	clrf	(btemp+11)^0,c
 10282                           
 10283                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10284   012342  0EFC               	movlw	-4
 10285   012344  C029  FFE3         	movff	btemp+8,plusw1
 10286   012348  0EFD               	movlw	-3
 10287   01234A  C02A  FFE3         	movff	btemp+9,plusw1
 10288   01234E  0EFE               	movlw	-2
 10289   012350  C02B  FFE3         	movff	btemp+10,plusw1
 10290   012354  0EFF               	movlw	-1
 10291   012356  C02C  FFE3         	movff	btemp+11,plusw1
 10292                           
 10293                           ;can/can.c: 3782:                 break;
 10294   01235A  EF38  F092         	goto	l4100
 10295   01235E                     l4086:
 10296                           
 10297                           ;can/can.c: 3784:                 dataBytesInObject = 20;
 10298   01235E  0E14               	movlw	20
 10299   012360  6E29               	movwf	(btemp+8)^0,c
 10300   012362  6A2A               	clrf	(btemp+9)^0,c
 10301   012364  6A2B               	clrf	(btemp+10)^0,c
 10302   012366  6A2C               	clrf	(btemp+11)^0,c
 10303                           
 10304                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10305   012368  0EFC               	movlw	-4
 10306   01236A  C029  FFE3         	movff	btemp+8,plusw1
 10307   01236E  0EFD               	movlw	-3
 10308   012370  C02A  FFE3         	movff	btemp+9,plusw1
 10309   012374  0EFE               	movlw	-2
 10310   012376  C02B  FFE3         	movff	btemp+10,plusw1
 10311   01237A  0EFF               	movlw	-1
 10312   01237C  C02C  FFE3         	movff	btemp+11,plusw1
 10313                           
 10314                           ;can/can.c: 3785:                 break;
 10315   012380  EF38  F092         	goto	l4100
 10316   012384                     l4088:
 10317                           
 10318                           ;can/can.c: 3787:                 dataBytesInObject = 24;
 10319   012384  0E18               	movlw	24
 10320   012386  6E29               	movwf	(btemp+8)^0,c
 10321   012388  6A2A               	clrf	(btemp+9)^0,c
 10322   01238A  6A2B               	clrf	(btemp+10)^0,c
 10323   01238C  6A2C               	clrf	(btemp+11)^0,c
 10324                           
 10325                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10326   01238E  0EFC               	movlw	-4
 10327   012390  C029  FFE3         	movff	btemp+8,plusw1
 10328   012394  0EFD               	movlw	-3
 10329   012396  C02A  FFE3         	movff	btemp+9,plusw1
 10330   01239A  0EFE               	movlw	-2
 10331   01239C  C02B  FFE3         	movff	btemp+10,plusw1
 10332   0123A0  0EFF               	movlw	-1
 10333   0123A2  C02C  FFE3         	movff	btemp+11,plusw1
 10334                           
 10335                           ;can/can.c: 3788:                 break;
 10336   0123A6  EF38  F092         	goto	l4100
 10337   0123AA                     l4090:
 10338                           
 10339                           ;can/can.c: 3790:                 dataBytesInObject = 32;
 10340   0123AA  0E20               	movlw	32
 10341   0123AC  6E29               	movwf	(btemp+8)^0,c
 10342   0123AE  6A2A               	clrf	(btemp+9)^0,c
 10343   0123B0  6A2B               	clrf	(btemp+10)^0,c
 10344   0123B2  6A2C               	clrf	(btemp+11)^0,c
 10345                           
 10346                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10347   0123B4  0EFC               	movlw	-4
 10348   0123B6  C029  FFE3         	movff	btemp+8,plusw1
 10349   0123BA  0EFD               	movlw	-3
 10350   0123BC  C02A  FFE3         	movff	btemp+9,plusw1
 10351   0123C0  0EFE               	movlw	-2
 10352   0123C2  C02B  FFE3         	movff	btemp+10,plusw1
 10353   0123C6  0EFF               	movlw	-1
 10354   0123C8  C02C  FFE3         	movff	btemp+11,plusw1
 10355                           
 10356                           ;can/can.c: 3791:                 break;
 10357   0123CC  EF38  F092         	goto	l4100
 10358   0123D0                     l4092:
 10359                           
 10360                           ;can/can.c: 3793:                 dataBytesInObject = 48;
 10361   0123D0  0E30               	movlw	48
 10362   0123D2  6E29               	movwf	(btemp+8)^0,c
 10363   0123D4  6A2A               	clrf	(btemp+9)^0,c
 10364   0123D6  6A2B               	clrf	(btemp+10)^0,c
 10365   0123D8  6A2C               	clrf	(btemp+11)^0,c
 10366                           
 10367                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10368   0123DA  0EFC               	movlw	-4
 10369   0123DC  C029  FFE3         	movff	btemp+8,plusw1
 10370   0123E0  0EFD               	movlw	-3
 10371   0123E2  C02A  FFE3         	movff	btemp+9,plusw1
 10372   0123E6  0EFE               	movlw	-2
 10373   0123E8  C02B  FFE3         	movff	btemp+10,plusw1
 10374   0123EC  0EFF               	movlw	-1
 10375   0123EE  C02C  FFE3         	movff	btemp+11,plusw1
 10376                           
 10377                           ;can/can.c: 3794:                 break;
 10378   0123F2  EF38  F092         	goto	l4100
 10379   0123F6                     l4094:
 10380                           
 10381                           ;can/can.c: 3796:                 dataBytesInObject = 64;
 10382   0123F6  0E40               	movlw	64
 10383   0123F8  6E29               	movwf	(btemp+8)^0,c
 10384   0123FA  6A2A               	clrf	(btemp+9)^0,c
 10385   0123FC  6A2B               	clrf	(btemp+10)^0,c
 10386   0123FE  6A2C               	clrf	(btemp+11)^0,c
 10387                           
 10388                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10389   012400  0EFC               	movlw	-4
 10390   012402  C029  FFE3         	movff	btemp+8,plusw1
 10391   012406  0EFD               	movlw	-3
 10392   012408  C02A  FFE3         	movff	btemp+9,plusw1
 10393   01240C  0EFE               	movlw	-2
 10394   01240E  C02B  FFE3         	movff	btemp+10,plusw1
 10395   012412  0EFF               	movlw	-1
 10396   012414  C02C  FFE3         	movff	btemp+11,plusw1
 10397                           
 10398                           ;can/can.c: 3797:                 break;
 10399   012418  EF38  F092         	goto	l4100
 10400   01241C                     l4098:
 10401                           
 10402                           ;stkvar	_dlc @ sp[(-4)+-1]
 10403   01241C  0EFB               	movlw	-5
 10404   01241E  50E3               	movf	plusw1,w,c
 10405   012420  6E2B               	movwf	(btemp+10)^0,c
 10406   012422  6A2C               	clrf	(btemp+11)^0,c
 10407                           
 10408                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10409                           ; Switch size 1, requested type "simple"
 10410                           ; Number of cases is 1, Range of values is 0 to 0
 10411                           ; switch strategies available:
 10412                           ; Name         Instructions Cycles
 10413                           ; simple_byte            4     3 (average)
 10414                           ;	Chosen strategy is simple_byte
 10415   012424  502C               	movf	(btemp+11)^0,w,c
 10416   012426  0A00               	xorlw	0	; case 0
 10417   012428  B4D8               	btfsc	status,2,c
 10418   01242A  EF19  F092         	goto	l5582
 10419   01242E  EF38  F092         	goto	l4100
 10420   012432                     l5582:
 10421                           
 10422                           ; Switch size 1, requested type "simple"
 10423                           ; Number of cases is 7, Range of values is 9 to 15
 10424                           ; switch strategies available:
 10425                           ; Name         Instructions Cycles
 10426                           ; simple_byte           22    12 (average)
 10427                           ;	Chosen strategy is simple_byte
 10428   012432  502B               	movf	(btemp+10)^0,w,c
 10429   012434  0A09               	xorlw	9	; case 9
 10430   012436  B4D8               	btfsc	status,2,c
 10431   012438  EF89  F091         	goto	l4082
 10432   01243C  0A03               	xorlw	3	; case 10
 10433   01243E  B4D8               	btfsc	status,2,c
 10434   012440  EF9C  F091         	goto	l4084
 10435   012444  0A01               	xorlw	1	; case 11
 10436   012446  B4D8               	btfsc	status,2,c
 10437   012448  EFAF  F091         	goto	l4086
 10438   01244C  0A07               	xorlw	7	; case 12
 10439   01244E  B4D8               	btfsc	status,2,c
 10440   012450  EFC2  F091         	goto	l4088
 10441   012454  0A01               	xorlw	1	; case 13
 10442   012456  B4D8               	btfsc	status,2,c
 10443   012458  EFD5  F091         	goto	l4090
 10444   01245C  0A03               	xorlw	3	; case 14
 10445   01245E  B4D8               	btfsc	status,2,c
 10446   012460  EFE8  F091         	goto	l4092
 10447   012464  0A01               	xorlw	1	; case 15
 10448   012466  B4D8               	btfsc	status,2,c
 10449   012468  EFFB  F091         	goto	l4094
 10450   01246C  EF38  F092         	goto	l4100
 10451   012470                     l4100:
 10452                           
 10453                           ;can/can.c: 3803:     return dataBytesInObject;
 10454                           ;stkvar	_dataBytesInObject @ sp[(-4)+0]
 10455   012470  0EFC               	movlw	-4
 10456   012472  CFE3 F021          	movff	plusw1,btemp
 10457   012476  0EFD               	movlw	-3
 10458   012478  CFE3 F022          	movff	plusw1,btemp+1
 10459   01247C  0EFE               	movlw	-2
 10460   01247E  CFE3 F023          	movff	plusw1,btemp+2
 10461   012482  0EFF               	movlw	-1
 10462   012484  CFE3 F024          	movff	plusw1,btemp+3
 10463   012488                     
 10464                           ; _DRV_CANFDSPI_DlcToDataBytes: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 1, argsize = 1, vargsize = 0
 10465   012488  0EFB               	movlw	251
 10466   01248A  26E1               	addwf	fsr1l,f,c
 10467   01248C  0EFF               	movlw	255
 10468   01248E  22E2               	addwfc	fsr1h,f,c
 10469   012490  0012               	return		;funcret
 10470   012492                     __end_of_DRV_CANFDSPI_DlcToDataBytes:
 10471                           	callstack 0
 10472                           
 10473 ;; *************** function _DRV_CANFDSPI_TransmitChannelEventGet *****************
 10474 ;; Defined at:
 10475 ;;		line 1776 in file "can/can.c"
 10476 ;; Parameters:    Size  Location     Type
 10477 ;;  channel         1  [STACK] enum E5287
 10478 ;;  flags           2  [STACK] PTR enum E5580
 10479 ;;		 -> txFlags(1), 
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;  ciFifoSta       4  [STACK] struct _REG_CiFIFOSTA
 10482 ;;  a               2  [STACK] unsigned short 
 10483 ;;  spiTransferE    1  [STACK] char 
 10484 ;; Return value:  Size  Location     Type
 10485 ;;                  1  [STACK] char 
 10486 ;; Registers used:
 10487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
 10488 ;; Tracked objects:
 10489 ;;		On entry : 0/0
 10490 ;;		On exit  : 0/0
 10491 ;;		Unchanged: 0/0
 10492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10497 ;;Total ram usage:        0 bytes
 10498 ;; Hardware stack levels used: 1
 10499 ;; Hardware stack levels required when called: 9
 10500 ;; This function calls:
 10501 ;;		_DRV_CANFDSPI_ReadByte
 10502 ;; This function is called by:
 10503 ;;		_CanSend
 10504 ;; This function uses a reentrant model
 10505 ;;
 10506                           
 10507                           	psect	text30
 10508   0140AC                     __ptext30:
 10509                           	callstack 0
 10510   0140AC                     _DRV_CANFDSPI_TransmitChannelEventGet:
 10511                           	callstack 0
 10512                           
 10513                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10514   0140AC  0E07               	movlw	7
 10515   0140AE  26E1               	addwf	fsr1l,f,c
 10516   0140B0  0E00               	movlw	0
 10517   0140B2  22E2               	addwfc	fsr1h,f,c
 10518   0140B4                     
 10519                           ;can/can.c: 1783:     REG_CiFIFOSTA ciFifoSta;;can/can.c: 1784:     ciFifoSta.word = 0;
 10520                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
 10521   0140B4  0EF9               	movlw	-7
 10522   0140B6  6AE3               	clrf	plusw1,c
 10523   0140B8  0EFA               	movlw	-6
 10524   0140BA  6AE3               	clrf	plusw1,c
 10525   0140BC  0EFB               	movlw	-5
 10526   0140BE  6AE3               	clrf	plusw1,c
 10527   0140C0  0EFC               	movlw	-4
 10528   0140C2  6AE3               	clrf	plusw1,c
 10529   0140C4                     
 10530                           ;can/can.c: 1785:     a = 0x054 + (channel * (3*4));
 10531                           ;stkvar	_channel @ sp[(-7)+-1]
 10532   0140C4  0EF8               	movlw	-8
 10533   0140C6  50E3               	movf	plusw1,w,c
 10534   0140C8  0D0C               	mullw	12
 10535   0140CA  0E54               	movlw	84
 10536   0140CC  26F3               	addwf	243,f,c
 10537   0140CE  0E00               	movlw	0
 10538   0140D0  22F4               	addwfc	244,f,c
 10539                           
 10540                           ;stkvar	_a @ sp[(-7)+4]
 10541   0140D2  0EFD               	movlw	-3
 10542   0140D4  CFF3 FFE3          	movff	prodl,plusw1
 10543   0140D8  0EFE               	movlw	-2
 10544   0140DA  CFF4 FFE3          	movff	prodh,plusw1
 10545   0140DE                     
 10546                           ;can/can.c: 1787:     spiTransferError = DRV_CANFDSPI_ReadByte( a, &ciFifoSta.byte[0]);
 10547                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
 10548   0140DE  0EF9               	movlw	249
 10549   0140E0  24E1               	addwf	fsr1l,w,c
 10550   0140E2  6E21               	movwf	btemp^0,c
 10551   0140E4  0EFF               	movlw	255
 10552   0140E6  20E2               	addwfc	fsr1h,w,c
 10553   0140E8  6E22               	movwf	(btemp+1)^0,c
 10554   0140EA  C021  FFE6         	movff	btemp,postinc1
 10555   0140EE  C022  FFE6         	movff	btemp+1,postinc1
 10556                           
 10557                           ;stkvar	_a @ sp[(-9)+4]
 10558   0140F2  0EFB               	movlw	-5
 10559   0140F4  CFE3 FFE6          	movff	plusw1,postinc1
 10560   0140F8  CFE3 FFE6          	movff	plusw1,postinc1
 10561   0140FC  EC94  F0A2         	call	_DRV_CANFDSPI_ReadByte	;wreg free
 10562                           
 10563                           ;stkvar	_spiTransferError @ sp[(-7)+6]
 10564   014100  0EFF               	movlw	-1
 10565   014102  C021  FFE3         	movff	btemp,plusw1
 10566   014106                     
 10567                           ;can/can.c: 1788:     if (spiTransferError) {
 10568                           ;stkvar	_spiTransferError @ sp[(-7)+6]
 10569   014106  0EFF               	movlw	-1
 10570   014108  50E3               	movf	plusw1,w,c
 10571   01410A  B4D8               	btfsc	status,2,c
 10572   01410C  EF8A  F0A0         	goto	u1871
 10573   014110  EF8C  F0A0         	goto	u1870
 10574   014114                     u1871:
 10575   014114  EF90  F0A0         	goto	l4242
 10576   014118                     u1870:
 10577   014118                     
 10578                           ;can/can.c: 1789:         return -1;
 10579   014118  0EFF               	movlw	255
 10580   01411A  6E21               	movwf	btemp^0,c
 10581   01411C  EF9D  F0A0         	goto	l453
 10582   014120                     l4242:
 10583                           
 10584                           ;can/can.c: 1793:     *flags = (CAN_TX_FIFO_EVENT) (ciFifoSta.byte[0] & CAN_TX_FIFO_ALL_
      +                          EVENTS);
 10585                           ;stkvar	_flags @ sp[(-7)+-3]
 10586   014120  0EF6               	movlw	-10
 10587   014122  CFE3 FFD9          	movff	plusw1,fsr2l
 10588   014126  0EF7               	movlw	-9
 10589   014128  CFE3 FFDA          	movff	plusw1,fsr2h
 10590                           
 10591                           ;stkvar	_ciFifoSta @ sp[(-7)+0]
 10592   01412C  0EF9               	movlw	-7
 10593   01412E  50E3               	movf	plusw1,w,c
 10594   014130  0B17               	andlw	23
 10595   014132  6EDF               	movwf	indf2,c
 10596   014134                     
 10597                           ;can/can.c: 1795:     return spiTransferError;
 10598                           ;stkvar	_spiTransferError @ sp[(-7)+6]
 10599   014134  0EFF               	movlw	-1
 10600   014136  CFE3 F021          	movff	plusw1,btemp
 10601   01413A                     l453:
 10602                           
 10603                           ; _DRV_CANFDSPI_TransmitChannelEventGet: autosize = 7, savesize = 0, parsavesize = 0, te
      +                          mpsize = 0 parsize = 3, argsize = 3, vargsize = 0
 10604   01413A  0EF6               	movlw	246
 10605   01413C  26E1               	addwf	fsr1l,f,c
 10606   01413E  0EFF               	movlw	255
 10607   014140  22E2               	addwfc	fsr1h,f,c
 10608   014142  0012               	return		;funcret
 10609   014144                     __end_of_DRV_CANFDSPI_TransmitChannelEventGet:
 10610                           	callstack 0
 10611                           
 10612 ;; *************** function _XF_popEvent *****************
 10613 ;; Defined at:
 10614 ;;		line 142 in file "xf/xf.c"
 10615 ;; Parameters:    Size  Location     Type
 10616 ;;  inISR           1  [STACK] _Bool 
 10617 ;; Auto vars:     Size  Location     Type
 10618 ;;  ev              6  [STACK] struct Event_
 10619 ;; Return value:  Size  Location     Type
 10620 ;;                  6  [STACK] struct Event_
 10621 ;; Registers used:
 10622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 10623 ;; Tracked objects:
 10624 ;;		On entry : 0/0
 10625 ;;		On exit  : 0/0
 10626 ;;		Unchanged: 0/0
 10627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10632 ;;Total ram usage:        0 bytes
 10633 ;; Hardware stack levels used: 1
 10634 ;; Hardware stack levels required when called: 8
 10635 ;; This function calls:
 10636 ;;		_ENTERCRITICAL
 10637 ;;		_LEAVECRITICAL
 10638 ;;		___awmod
 10639 ;; This function is called by:
 10640 ;;		_XF_executeOnce
 10641 ;; This function uses a reentrant model
 10642 ;;
 10643                           
 10644                           	psect	text31
 10645   013986                     __ptext31:
 10646                           	callstack 0
 10647   013986                     _XF_popEvent:
 10648                           	callstack 0
 10649                           
 10650                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 6 argfudge = 5
 10651   013986  0E0B               	movlw	11
 10652   013988  26E1               	addwf	fsr1l,f,c
 10653   01398A  0E00               	movlw	0
 10654   01398C  22E2               	addwfc	fsr1h,f,c
 10655   01398E                     
 10656                           ;xf/xf.c: 142: Event XF_popEvent(_Bool inISR);xf/xf.c: 143: {;xf/xf.c: 144:     Event ev
      +                          ;;xf/xf.c: 145:     ev.id = 0;
 10657                           ;stkvar	_ev @ sp[(-6)+0]
 10658   01398E  0EFA               	movlw	-6
 10659   013990  6AE3               	clrf	plusw1,c
 10660   013992                     
 10661                           ;xf/xf.c: 146:     ev.processEvent = ((void*)0);
 10662                           ;stkvar	_ev @ sp[(-6)+0]
 10663   013992  0EFB               	movlw	251
 10664   013994  24E1               	addwf	fsr1l,w,c
 10665   013996  6ED9               	movwf	fsr2l,c
 10666   013998  0EFF               	movlw	255
 10667   01399A  20E2               	addwfc	fsr1h,w,c
 10668   01399C  6EDA               	movwf	fsr2h,c
 10669   01399E  6ADE               	clrf	postinc2,c
 10670   0139A0  6ADE               	clrf	postinc2,c
 10671   0139A2  6ADD               	clrf	postdec2,c
 10672   0139A4                     
 10673                           ;xf/xf.c: 148:     ENTERCRITICAL(inISR);
 10674                           ;stkvar	_inISR @ sp[(-6)+-6]
 10675   0139A4  0EF4               	movlw	-12
 10676   0139A6  50E3               	movf	plusw1,w,c
 10677   0139A8  6EE6               	movwf	postinc1,c
 10678   0139AA  ECAE  F0A4         	call	_ENTERCRITICAL	;wreg free
 10679   0139AE                     
 10680                           ;xf/xf.c: 149:     if(theXF.countEvt == 0)
 10681   0139AE  EE23  F0DF         	lfsr	2,_theXF+279
 10682   0139B2  50DF               	movf	indf2,w,c
 10683   0139B4  A4D8               	btfss	status,2,c
 10684   0139B6  EFDF  F09C         	goto	u2761
 10685   0139BA  EFE1  F09C         	goto	u2760
 10686   0139BE                     u2761:
 10687   0139BE  EFF6  F09C         	goto	l5048
 10688   0139C2                     u2760:
 10689   0139C2                     l5042:
 10690                           
 10691                           ;xf/xf.c: 150:     {;xf/xf.c: 151:       LEAVECRITICAL(inISR);
 10692                           ;stkvar	_inISR @ sp[(-6)+-6]
 10693   0139C2  0EF4               	movlw	-12
 10694   0139C4  50E3               	movf	plusw1,w,c
 10695   0139C6  6EE6               	movwf	postinc1,c
 10696   0139C8  ECA2  F0A4         	call	_LEAVECRITICAL	;wreg free
 10697   0139CC                     
 10698                           ;xf/xf.c: 152:       return ev;
 10699                           ;stkvar	_ev @ sp[(-6)+0]
 10700   0139CC  0EFA               	movlw	250
 10701   0139CE  24E1               	addwf	fsr1l,w,c
 10702   0139D0  6ED9               	movwf	fsr2l,c
 10703   0139D2  0EFF               	movlw	255
 10704   0139D4  20E2               	addwfc	fsr1h,w,c
 10705   0139D6  6EDA               	movwf	fsr2h,c
 10706                           
 10707                           ;stkvar	?_XF_popEvent @ sp[(-6)+-6]
 10708   0139D8  0E06               	movlw	6
 10709   0139DA  6E21               	movwf	btemp^0,c
 10710   0139DC  0EF4               	movlw	-12
 10711   0139DE                     us277999:
 10712   0139DE  CFDE FFE3          	movff	postinc2,plusw1
 10713   0139E2  28E8               	incf	wreg,w,c
 10714   0139E4  2E21               	decfsz	btemp^0,f,c
 10715   0139E6  D7FB               	bra	us277999
 10716   0139E8  EF24  F09D         	goto	l1227
 10717   0139EC                     l5048:
 10718                           
 10719                           ;xf/xf.c: 154:     ev = theXF.eventQueue[theXF.out];
 10720   0139EC  EE23  F0DD         	lfsr	2,_theXF+277
 10721   0139F0  50DF               	movf	indf2,w,c
 10722   0139F2  0D06               	mullw	6
 10723   0139F4  0E28               	movlw	low (_theXF+96)
 10724   0139F6  24F3               	addwf	243,w,c
 10725   0139F8  6ED9               	movwf	fsr2l,c
 10726   0139FA  0E03               	movlw	high (_theXF+96)
 10727   0139FC  20F4               	addwfc	prodh,w,c
 10728   0139FE  6EDA               	movwf	fsr2h,c
 10729                           
 10730                           ;stkvar	_ev @ sp[(-6)+0]
 10731   013A00  0E06               	movlw	6
 10732   013A02  6E21               	movwf	btemp^0,c
 10733   013A04  0EFA               	movlw	-6
 10734   013A06                     us278999:
 10735   013A06  CFDE FFE3          	movff	postinc2,plusw1
 10736   013A0A  28E8               	incf	wreg,w,c
 10737   013A0C  2E21               	decfsz	btemp^0,f,c
 10738   013A0E  D7FB               	bra	us278999
 10739   013A10                     
 10740                           ;xf/xf.c: 155:     theXF.out = (theXF.out + 1)%(uint8_t)(30);
 10741   013A10  0E1E               	movlw	30
 10742   013A12  6EE6               	movwf	postinc1,c
 10743   013A14  0E00               	movlw	0
 10744   013A16  6EE6               	movwf	postinc1,c
 10745   013A18  EE23  F0DD         	lfsr	2,_theXF+277
 10746   013A1C  50DF               	movf	indf2,w,c
 10747   013A1E  6E2B               	movwf	(btemp+10)^0,c
 10748   013A20  6A2C               	clrf	(btemp+11)^0,c
 10749   013A22  0E01               	movlw	1
 10750   013A24  262B               	addwf	(btemp+10)^0,f,c
 10751   013A26  0E00               	movlw	0
 10752   013A28  222C               	addwfc	(btemp+11)^0,f,c
 10753   013A2A  C02B  FFE6         	movff	btemp+10,postinc1
 10754   013A2E  C02C  FFE6         	movff	btemp+11,postinc1
 10755   013A32  EC0E  F096         	call	___awmod	;wreg free
 10756   013A36  C021  F3DD         	movff	btemp,_theXF+277
 10757   013A3A                     
 10758                           ;xf/xf.c: 156:     theXF.countEvt--;
 10759   013A3A  C3DF  FFE8         	movff	_theXF+279,wreg
 10760   013A3E  0FFF               	addlw	-1
 10761   013A40  CFE8 F3DF          	movff	wreg,_theXF+279
 10762   013A44  EFE1  F09C         	goto	l5042
 10763   013A48                     l1227:
 10764                           
 10765                           ; _XF_popEvent: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 10766   013A48  0EFA               	movlw	250
 10767   013A4A  26E1               	addwf	fsr1l,f,c
 10768   013A4C  0EFF               	movlw	255
 10769   013A4E  22E2               	addwfc	fsr1h,f,c
 10770   013A50  0012               	return		;funcret
 10771   013A52                     __end_of_XF_popEvent:
 10772                           	callstack 0
 10773                           
 10774 ;; *************** function ___awmod *****************
 10775 ;; Defined at:
 10776 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;  dividend        2  [STACK] int 
 10779 ;;  divisor         2  [STACK] int 
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;  sign            1  [STACK] unsigned char 
 10782 ;;  counter         1  [STACK] unsigned char 
 10783 ;; Return value:  Size  Location     Type
 10784 ;;                  2  [STACK] int 
 10785 ;; Registers used:
 10786 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 10787 ;; Tracked objects:
 10788 ;;		On entry : 0/0
 10789 ;;		On exit  : 0/0
 10790 ;;		Unchanged: 0/0
 10791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10796 ;;Total ram usage:        0 bytes
 10797 ;; Hardware stack levels used: 1
 10798 ;; Hardware stack levels required when called: 7
 10799 ;; This function calls:
 10800 ;;		Nothing
 10801 ;; This function is called by:
 10802 ;;		_XF_pushEvent
 10803 ;;		_XF_popEvent
 10804 ;; This function uses a reentrant model
 10805 ;;
 10806                           
 10807                           	psect	text32
 10808   012C1C                     __ptext32:
 10809                           	callstack 0
 10810   012C1C                     ___awmod:
 10811                           	callstack 0
 10812                           
 10813                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10814   012C1C  52E6               	movf	postinc1,f,c
 10815   012C1E  52E6               	movf	postinc1,f,c
 10816   012C20                     
 10817                           ;stkvar	_sign @ sp[(-2)+0]
 10818   012C20  0EFE               	movlw	-2
 10819   012C22  6AE3               	clrf	plusw1,c
 10820   012C24                     
 10821                           ;stkvar	_dividend @ sp[(-2)+-2]
 10822   012C24  0EFD               	movlw	-3
 10823   012C26  BEE3               	btfsc	plusw1,7,c
 10824   012C28  EF1A  F096         	goto	u1920
 10825   012C2C  EF18  F096         	goto	u1921
 10826   012C30                     u1921:
 10827   012C30  EF23  F096         	goto	l4302
 10828   012C34                     u1920:
 10829   012C34                     
 10830                           ;stkvar	_dividend @ sp[(-2)+-2]
 10831                           ;stkvar	_dividend @ sp[(-2)+-2]
 10832   012C34  0EFC               	movlw	-4
 10833   012C36  6CE3               	negf	plusw1,c
 10834   012C38  0EFD               	movlw	-3
 10835   012C3A  1EE3               	comf	plusw1,f,c
 10836   012C3C  B0D8               	btfsc	status,0,c
 10837   012C3E  2AE3               	incf	plusw1,f,c
 10838   012C40                     
 10839                           ;stkvar	_sign @ sp[(-2)+0]
 10840   012C40  0EFE               	movlw	-2
 10841   012C42  6AE3               	clrf	plusw1,c
 10842   012C44  2AE3               	incf	plusw1,f,c
 10843   012C46                     l4302:
 10844                           
 10845                           ;stkvar	_divisor @ sp[(-2)+-4]
 10846   012C46  0EFB               	movlw	-5
 10847   012C48  BEE3               	btfsc	plusw1,7,c
 10848   012C4A  EF2B  F096         	goto	u1930
 10849   012C4E  EF29  F096         	goto	u1931
 10850   012C52                     u1931:
 10851   012C52  EF31  F096         	goto	l4306
 10852   012C56                     u1930:
 10853   012C56                     
 10854                           ;stkvar	_divisor @ sp[(-2)+-4]
 10855                           ;stkvar	_divisor @ sp[(-2)+-4]
 10856   012C56  0EFA               	movlw	-6
 10857   012C58  6CE3               	negf	plusw1,c
 10858   012C5A  0EFB               	movlw	-5
 10859   012C5C  1EE3               	comf	plusw1,f,c
 10860   012C5E  B0D8               	btfsc	status,0,c
 10861   012C60  2AE3               	incf	plusw1,f,c
 10862   012C62                     l4306:
 10863                           
 10864                           ;stkvar	_divisor @ sp[(-2)+-4]
 10865   012C62  0EFA               	movlw	-6
 10866   012C64  CFE3 F021          	movff	plusw1,btemp
 10867   012C68  0EFB               	movlw	-5
 10868   012C6A  50E3               	movf	plusw1,w,c
 10869   012C6C  1021               	iorwf	btemp^0,w,c
 10870   012C6E  B4D8               	btfsc	status,2,c
 10871   012C70  EF3C  F096         	goto	u1941
 10872   012C74  EF3E  F096         	goto	u1940
 10873   012C78                     u1941:
 10874   012C78  EF99  F096         	goto	l4324
 10875   012C7C                     u1940:
 10876   012C7C                     
 10877                           ;stkvar	_counter @ sp[(-2)+1]
 10878   012C7C  0EFF               	movlw	-1
 10879   012C7E  6AE3               	clrf	plusw1,c
 10880   012C80  2AE3               	incf	plusw1,f,c
 10881   012C82  EF54  F096         	goto	l4314
 10882   012C86                     l4310:
 10883                           
 10884                           ;stkvar	_divisor @ sp[(-2)+-4]
 10885   012C86  0EFA               	movlw	-6
 10886   012C88  50E3               	movf	plusw1,w,c
 10887   012C8A  90D8               	bcf	status,0,c
 10888   012C8C  34E8               	rlcf	wreg,w,c
 10889   012C8E  6E21               	movwf	btemp^0,c
 10890   012C90  0EFA               	movlw	-6
 10891   012C92  C021  FFE3         	movff	btemp,plusw1
 10892   012C96  0EFB               	movlw	-5
 10893   012C98  50E3               	movf	plusw1,w,c
 10894   012C9A  34E8               	rlcf	wreg,w,c
 10895   012C9C  6E21               	movwf	btemp^0,c
 10896   012C9E  0EFB               	movlw	-5
 10897   012CA0  C021  FFE3         	movff	btemp,plusw1
 10898   012CA4                     
 10899                           ;stkvar	_counter @ sp[(-2)+1]
 10900   012CA4  0EFF               	movlw	-1
 10901   012CA6  2AE3               	incf	plusw1,f,c
 10902   012CA8                     l4314:
 10903                           
 10904                           ;stkvar	_divisor @ sp[(-2)+-4]
 10905   012CA8  0EFB               	movlw	-5
 10906   012CAA  AEE3               	btfss	plusw1,7,c
 10907   012CAC  EF5A  F096         	goto	u1951
 10908   012CB0  EF5C  F096         	goto	u1950
 10909   012CB4                     u1951:
 10910   012CB4  EF43  F096         	goto	l4310
 10911   012CB8                     u1950:
 10912   012CB8                     l4316:
 10913                           
 10914                           ;stkvar	_divisor @ sp[(-2)+-4]
 10915   012CB8  0EFA               	movlw	-6
 10916   012CBA  CFE3 F02B          	movff	plusw1,btemp+10
 10917   012CBE  0EFB               	movlw	-5
 10918   012CC0  CFE3 F02C          	movff	plusw1,btemp+11
 10919                           
 10920                           ;stkvar	_dividend @ sp[(-2)+-2]
 10921   012CC4  0EFC               	movlw	-4
 10922   012CC6  CFE3 F029          	movff	plusw1,btemp+8
 10923   012CCA  0EFD               	movlw	-3
 10924   012CCC  CFE3 F02A          	movff	plusw1,btemp+9
 10925   012CD0  502B               	movf	(btemp+10)^0,w,c
 10926   012CD2  5C29               	subwf	(btemp+8)^0,w,c
 10927   012CD4  502C               	movf	(btemp+11)^0,w,c
 10928   012CD6  582A               	subwfb	(btemp+9)^0,w,c
 10929   012CD8  A0D8               	btfss	status,0,c
 10930   012CDA  EF71  F096         	goto	u1961
 10931   012CDE  EF73  F096         	goto	u1960
 10932   012CE2                     u1961:
 10933   012CE2  EF85  F096         	goto	l4320
 10934   012CE6                     u1960:
 10935   012CE6                     
 10936                           ;stkvar	_divisor @ sp[(-2)+-4]
 10937                           ;stkvar	_dividend @ sp[(-2)+-2]
 10938   012CE6  0EFC               	movlw	-4
 10939   012CE8  50E3               	movf	plusw1,w,c
 10940   012CEA  6E21               	movwf	btemp^0,c
 10941   012CEC  0EFA               	movlw	-6
 10942   012CEE  50E3               	movf	plusw1,w,c
 10943   012CF0  5E21               	subwf	btemp^0,f,c
 10944   012CF2  0EFC               	movlw	-4
 10945   012CF4  C021  FFE3         	movff	btemp,plusw1
 10946   012CF8  0EFD               	movlw	-3
 10947   012CFA  50E3               	movf	plusw1,w,c
 10948   012CFC  6E21               	movwf	btemp^0,c
 10949   012CFE  0EFB               	movlw	-5
 10950   012D00  50E3               	movf	plusw1,w,c
 10951   012D02  5A21               	subwfb	btemp^0,f,c
 10952   012D04  0EFD               	movlw	-3
 10953   012D06  C021  FFE3         	movff	btemp,plusw1
 10954   012D0A                     l4320:
 10955                           
 10956                           ;stkvar	_divisor @ sp[(-2)+-4]
 10957   012D0A  90D8               	bcf	status,0,c
 10958   012D0C  0EFB               	movlw	-5
 10959   012D0E  32E3               	rrcf	plusw1,f,c
 10960   012D10  0EFA               	movlw	-6
 10961   012D12  32E3               	rrcf	plusw1,f,c
 10962   012D14                     
 10963                           ;stkvar	_counter @ sp[(-2)+1]
 10964   012D14  0EFF               	movlw	-1
 10965   012D16  50E3               	movf	plusw1,w,c
 10966   012D18  6E21               	movwf	btemp^0,c
 10967   012D1A  0E01               	movlw	1
 10968   012D1C  5E21               	subwf	btemp^0,f,c
 10969   012D1E  0EFF               	movlw	-1
 10970   012D20  C021  FFE3         	movff	btemp,plusw1
 10971   012D24  A4D8               	btfss	status,2,c
 10972   012D26  EF97  F096         	goto	u1971
 10973   012D2A  EF99  F096         	goto	u1970
 10974   012D2E                     u1971:
 10975   012D2E  EF5C  F096         	goto	l4316
 10976   012D32                     u1970:
 10977   012D32                     l4324:
 10978                           
 10979                           ;stkvar	_sign @ sp[(-2)+0]
 10980   012D32  0EFE               	movlw	-2
 10981   012D34  50E3               	movf	plusw1,w,c
 10982   012D36  B4D8               	btfsc	status,2,c
 10983   012D38  EFA0  F096         	goto	u1981
 10984   012D3C  EFA2  F096         	goto	u1980
 10985   012D40                     u1981:
 10986   012D40  EFA8  F096         	goto	l4328
 10987   012D44                     u1980:
 10988   012D44                     
 10989                           ;stkvar	_dividend @ sp[(-2)+-2]
 10990                           ;stkvar	_dividend @ sp[(-2)+-2]
 10991   012D44  0EFC               	movlw	-4
 10992   012D46  6CE3               	negf	plusw1,c
 10993   012D48  0EFD               	movlw	-3
 10994   012D4A  1EE3               	comf	plusw1,f,c
 10995   012D4C  B0D8               	btfsc	status,0,c
 10996   012D4E  2AE3               	incf	plusw1,f,c
 10997   012D50                     l4328:
 10998                           
 10999                           ;stkvar	_dividend @ sp[(-2)+-2]
 11000   012D50  0EFC               	movlw	-4
 11001   012D52  CFE3 F021          	movff	plusw1,btemp
 11002   012D56  0EFD               	movlw	-3
 11003   012D58  CFE3 F022          	movff	plusw1,btemp+1
 11004   012D5C                     
 11005                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 11006   012D5C  0EFA               	movlw	250
 11007   012D5E  26E1               	addwf	fsr1l,f,c
 11008   012D60  0EFF               	movlw	255
 11009   012D62  22E2               	addwfc	fsr1h,f,c
 11010   012D64  0012               	return		;funcret
 11011   012D66                     __end_of___awmod:
 11012                           	callstack 0
 11013                           
 11014 ;; *************** function _LEAVECRITICAL *****************
 11015 ;; Defined at:
 11016 ;;		line 265 in file "xf/xf.c"
 11017 ;; Parameters:    Size  Location     Type
 11018 ;;  inISR           1  [STACK] _Bool 
 11019 ;; Auto vars:     Size  Location     Type
 11020 ;;		None
 11021 ;; Return value:  Size  Location     Type
 11022 ;;                  1  [STACK] void 
 11023 ;; Registers used:
 11024 ;;		wreg, fsr1l, fsr1h, status,2
 11025 ;; Tracked objects:
 11026 ;;		On entry : 0/0
 11027 ;;		On exit  : 0/0
 11028 ;;		Unchanged: 0/0
 11029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11034 ;;Total ram usage:        0 bytes
 11035 ;; Hardware stack levels used: 1
 11036 ;; Hardware stack levels required when called: 7
 11037 ;; This function calls:
 11038 ;;		Nothing
 11039 ;; This function is called by:
 11040 ;;		_XF_pushEvent
 11041 ;;		_XF_popEvent
 11042 ;;		_XF_scheduleTimer
 11043 ;;		_XF_unscheduleTimer
 11044 ;; This function uses a reentrant model
 11045 ;;
 11046                           
 11047                           	psect	text33
 11048   014944                     __ptext33:
 11049                           	callstack 0
 11050   014944                     _LEAVECRITICAL:
 11051                           	callstack 10
 11052   014944                     
 11053                           ;xf/xf.c: 265: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 266: {;xf/xf.c: 267:     
      +                          if (inISR == 0)
 11054                           ;stkvar	_inISR @ sp[(0)+-1]
 11055   014944  0EFF               	movlw	-1
 11056   014946  50E3               	movf	plusw1,w,c
 11057   014948  A4D8               	btfss	status,2,c
 11058   01494A  EFA9  F0A4         	goto	u1691
 11059   01494E  EFAB  F0A4         	goto	u1690
 11060   014952                     u1691:
 11061   014952  EFAC  F0A4         	goto	l1254
 11062   014956                     u1690:
 11063   014956                     
 11064                           ;xf/xf.c: 268:     {;xf/xf.c: 270:      (INTCONbits.GIE = 1);
 11065   014956  8EF2               	bsf	242,7,c	;volatile
 11066   014958                     l1254:
 11067                           
 11068                           ; _LEAVECRITICAL: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
 11069   014958  52E5               	movf	postdec1,f,c
 11070   01495A  0012               	return		;funcret
 11071   01495C                     __end_of_LEAVECRITICAL:
 11072                           	callstack 0
 11073                           
 11074 ;; *************** function _ENTERCRITICAL *****************
 11075 ;; Defined at:
 11076 ;;		line 250 in file "xf/xf.c"
 11077 ;; Parameters:    Size  Location     Type
 11078 ;;  inISR           1  [STACK] _Bool 
 11079 ;; Auto vars:     Size  Location     Type
 11080 ;;		None
 11081 ;; Return value:  Size  Location     Type
 11082 ;;                  1  [STACK] void 
 11083 ;; Registers used:
 11084 ;;		wreg, fsr1l, fsr1h, status,2
 11085 ;; Tracked objects:
 11086 ;;		On entry : 0/0
 11087 ;;		On exit  : 0/0
 11088 ;;		Unchanged: 0/0
 11089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11094 ;;Total ram usage:        0 bytes
 11095 ;; Hardware stack levels used: 1
 11096 ;; Hardware stack levels required when called: 7
 11097 ;; This function calls:
 11098 ;;		Nothing
 11099 ;; This function is called by:
 11100 ;;		_XF_pushEvent
 11101 ;;		_XF_popEvent
 11102 ;;		_XF_scheduleTimer
 11103 ;;		_XF_unscheduleTimer
 11104 ;; This function uses a reentrant model
 11105 ;;
 11106                           
 11107                           	psect	text34
 11108   01495C                     __ptext34:
 11109                           	callstack 0
 11110   01495C                     _ENTERCRITICAL:
 11111                           	callstack 10
 11112   01495C                     
 11113                           ;xf/xf.c: 250: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 251: {;xf/xf.c: 252:     
      +                          if (inISR == 0)
 11114                           ;stkvar	_inISR @ sp[(0)+-1]
 11115   01495C  0EFF               	movlw	-1
 11116   01495E  50E3               	movf	plusw1,w,c
 11117   014960  A4D8               	btfss	status,2,c
 11118   014962  EFB5  F0A4         	goto	u1681
 11119   014966  EFB7  F0A4         	goto	u1680
 11120   01496A                     u1681:
 11121   01496A  EFB8  F0A4         	goto	l1250
 11122   01496E                     u1680:
 11123   01496E                     
 11124                           ;xf/xf.c: 253:     {;xf/xf.c: 255:       (INTCONbits.GIE = 0);
 11125   01496E  9EF2               	bcf	242,7,c	;volatile
 11126   014970                     l1250:
 11127                           
 11128                           ; _ENTERCRITICAL: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
 11129   014970  52E5               	movf	postdec1,f,c
 11130   014972  0012               	return		;funcret
 11131   014974                     __end_of_ENTERCRITICAL:
 11132                           	callstack 0
 11133                           
 11134 ;; *************** function _SYSTEM_Initialize *****************
 11135 ;; Defined at:
 11136 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11137 ;; Parameters:    Size  Location     Type
 11138 ;;		None
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;		None
 11141 ;; Return value:  Size  Location     Type
 11142 ;;                  1  [STACK] void 
 11143 ;; Registers used:
 11144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11154 ;;Total ram usage:        0 bytes
 11155 ;; Hardware stack levels used: 1
 11156 ;; Hardware stack levels required when called: 9
 11157 ;; This function calls:
 11158 ;;		_INTERRUPT_Initialize
 11159 ;;		_OSCILLATOR_Initialize
 11160 ;;		_PIN_MANAGER_Initialize
 11161 ;;		_SPI2_Initialize
 11162 ;;		_TMR0_Initialize
 11163 ;; This function is called by:
 11164 ;;		_main
 11165 ;; This function uses a reentrant model
 11166 ;;
 11167                           
 11168                           	psect	text35
 11169   014974                     __ptext35:
 11170                           	callstack 0
 11171   014974                     _SYSTEM_Initialize:
 11172                           	callstack 21
 11173   014974                     
 11174                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 11175   014974  ECD7  F0A4         	call	_INTERRUPT_Initialize	;wreg free
 11176   014978                     
 11177                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
 11178   014978  ECC5  F0A4         	call	_SPI2_Initialize	;wreg free
 11179                           
 11180                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 11181   01497C  EC22  F0A4         	call	_PIN_MANAGER_Initialize	;wreg free
 11182                           
 11183                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 11184   014980  ECCD  F0A4         	call	_OSCILLATOR_Initialize	;wreg free
 11185   014984                     
 11186                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
 11187   014984  ECB6  F0A3         	call	_TMR0_Initialize	;wreg free
 11188   014988                     
 11189                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 11190   014988  0012               	return		;funcret
 11191   01498A                     __end_of_SYSTEM_Initialize:
 11192                           	callstack 0
 11193                           
 11194 ;; *************** function _TMR0_Initialize *****************
 11195 ;; Defined at:
 11196 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 11197 ;; Parameters:    Size  Location     Type
 11198 ;;		None
 11199 ;; Auto vars:     Size  Location     Type
 11200 ;;		None
 11201 ;; Return value:  Size  Location     Type
 11202 ;;                  1  [STACK] void 
 11203 ;; Registers used:
 11204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 11205 ;; Tracked objects:
 11206 ;;		On entry : 0/0
 11207 ;;		On exit  : 0/0
 11208 ;;		Unchanged: 0/0
 11209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11214 ;;Total ram usage:        0 bytes
 11215 ;; Hardware stack levels used: 1
 11216 ;; Hardware stack levels required when called: 8
 11217 ;; This function calls:
 11218 ;;		_TMR0_SetInterruptHandler
 11219 ;; This function is called by:
 11220 ;;		_SYSTEM_Initialize
 11221 ;; This function uses a reentrant model
 11222 ;;
 11223                           
 11224                           	psect	text36
 11225   01476C                     __ptext36:
 11226                           	callstack 0
 11227   01476C                     _TMR0_Initialize:
 11228                           	callstack 21
 11229   01476C                     
 11230                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
 11231   01476C  9CD5               	bcf	213,6,c	;volatile
 11232   01476E                     
 11233                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFD;
 11234   01476E  0EFD               	movlw	253
 11235   014770  6ED7               	movwf	215,c	;volatile
 11236                           
 11237                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x9D;
 11238   014772  0E9D               	movlw	157
 11239   014774  6ED6               	movwf	214,c	;volatile
 11240   014776                     
 11241                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
 11242   014776  50D6               	movf	214,w,c	;volatile
 11243   014778  CFD7 F021          	movff	4055,btemp	;volatile
 11244   01477C  6A22               	clrf	(btemp+1)^0,c
 11245   01477E  C021  F022         	movff	btemp,btemp+1
 11246   014782  6A21               	clrf	btemp^0,c
 11247   014784  1021               	iorwf	btemp^0,w,c
 11248   014786  6E17               	movwf	_timer0ReloadVal^0,c	;volatile
 11249   014788  5022               	movf	(btemp+1)^0,w,c
 11250   01478A  6E18               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
 11251   01478C                     
 11252                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
 11253   01478C  94F2               	bcf	242,2,c	;volatile
 11254   01478E                     
 11255                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
 11256   01478E  8AF2               	bsf	242,5,c	;volatile
 11257   014790                     
 11258                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 11259   014790  0EB2               	movlw	low _TMR0_DefaultInterruptHandler
 11260   014792  6EE6               	movwf	postinc1,c
 11261   014794  0E49               	movlw	high _TMR0_DefaultInterruptHandler
 11262   014796  6EE6               	movwf	postinc1,c
 11263   014798  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
 11264   01479A  6EE6               	movwf	postinc1,c
 11265   01479C  EC76  F0A4         	call	_TMR0_SetInterruptHandler	;wreg free
 11266   0147A0                     
 11267                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x97;
 11268   0147A0  0E97               	movlw	151
 11269   0147A2  6ED5               	movwf	213,c	;volatile
 11270   0147A4                     
 11271                           ; _TMR0_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11272   0147A4  0012               	return		;funcret
 11273   0147A6                     __end_of_TMR0_Initialize:
 11274                           	callstack 0
 11275                           
 11276 ;; *************** function _TMR0_SetInterruptHandler *****************
 11277 ;; Defined at:
 11278 ;;		line 172 in file "mcc_generated_files/tmr0.c"
 11279 ;; Parameters:    Size  Location     Type
 11280 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11281 ;;		 -> XF_decrementAndQueueTimers(1), TMR0_DefaultInterruptHandler(1), 
 11282 ;; Auto vars:     Size  Location     Type
 11283 ;;		None
 11284 ;; Return value:  Size  Location     Type
 11285 ;;                  1  [STACK] void 
 11286 ;; Registers used:
 11287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11288 ;; Tracked objects:
 11289 ;;		On entry : 0/0
 11290 ;;		On exit  : 0/0
 11291 ;;		Unchanged: 0/0
 11292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11297 ;;Total ram usage:        0 bytes
 11298 ;; Hardware stack levels used: 1
 11299 ;; Hardware stack levels required when called: 7
 11300 ;; This function calls:
 11301 ;;		Nothing
 11302 ;; This function is called by:
 11303 ;;		_TMR0_Initialize
 11304 ;;		_main
 11305 ;; This function uses a reentrant model
 11306 ;;
 11307                           
 11308                           	psect	text37
 11309   0148EC                     __ptext37:
 11310                           	callstack 0
 11311   0148EC                     _TMR0_SetInterruptHandler:
 11312                           	callstack 23
 11313   0148EC                     
 11314                           ;mcc_generated_files/tmr0.c: 173:     TMR0_InterruptHandler = InterruptHandler;
 11315                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11316   0148EC  50E1               	movf	fsr1l,w,c
 11317   0148EE  0FFD               	addlw	-3
 11318   0148F0  6ED9               	movwf	fsr2l,c
 11319   0148F2  50E2               	movf	fsr1h,w,c
 11320   0148F4  6EDA               	movwf	fsr2h,c
 11321   0148F6  0EFF               	movlw	255
 11322   0148F8  22DA               	addwfc	fsr2h,f,c
 11323   0148FA  CFDE F051          	movff	postinc2,_TMR0_InterruptHandler
 11324   0148FE  CFDE F052          	movff	postinc2,_TMR0_InterruptHandler+1
 11325   014902  CFDD F053          	movff	postdec2,_TMR0_InterruptHandler+2
 11326   014906                     
 11327                           ; _TMR0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11328   014906  52E5               	movf	postdec1,f,c
 11329   014908  52E5               	movf	postdec1,f,c
 11330   01490A  52E5               	movf	postdec1,f,c
 11331   01490C  0012               	return		;funcret
 11332   01490E                     __end_of_TMR0_SetInterruptHandler:
 11333                           	callstack 0
 11334                           
 11335 ;; *************** function _SPI2_Initialize *****************
 11336 ;; Defined at:
 11337 ;;		line 62 in file "mcc_generated_files/spi2.c"
 11338 ;; Parameters:    Size  Location     Type
 11339 ;;		None
 11340 ;; Auto vars:     Size  Location     Type
 11341 ;;		None
 11342 ;; Return value:  Size  Location     Type
 11343 ;;                  1  [STACK] void 
 11344 ;; Registers used:
 11345 ;;		wreg, status,2
 11346 ;; Tracked objects:
 11347 ;;		On entry : 0/0
 11348 ;;		On exit  : 0/0
 11349 ;;		Unchanged: 0/0
 11350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11355 ;;Total ram usage:        0 bytes
 11356 ;; Hardware stack levels used: 1
 11357 ;; Hardware stack levels required when called: 7
 11358 ;; This function calls:
 11359 ;;		Nothing
 11360 ;; This function is called by:
 11361 ;;		_SYSTEM_Initialize
 11362 ;; This function uses a reentrant model
 11363 ;;
 11364                           
 11365                           	psect	text38
 11366   01498A                     __ptext38:
 11367                           	callstack 0
 11368   01498A                     _SPI2_Initialize:
 11369                           	callstack 22
 11370   01498A                     
 11371                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
 11372   01498A  0E40               	movlw	64
 11373   01498C  6E64               	movwf	100,c	;volatile
 11374                           
 11375                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
 11376   01498E  0E01               	movlw	1
 11377   014990  6E63               	movwf	99,c	;volatile
 11378   014992                     
 11379                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x00;
 11380   014992  6A65               	clrf	101,c	;volatile
 11381   014994                     
 11382                           ;mcc_generated_files/spi2.c: 68:     TRISDbits.TRISD6 = 0;
 11383   014994  9C95               	bcf	149,6,c	;volatile
 11384   014996                     
 11385                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
 11386   014996  9A63               	bcf	99,5,c	;volatile
 11387   014998                     
 11388                           ; _SPI2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11389   014998  0012               	return		;funcret
 11390   01499A                     __end_of_SPI2_Initialize:
 11391                           	callstack 0
 11392                           
 11393 ;; *************** function _PIN_MANAGER_Initialize *****************
 11394 ;; Defined at:
 11395 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
 11396 ;; Parameters:    Size  Location     Type
 11397 ;;		None
 11398 ;; Auto vars:     Size  Location     Type
 11399 ;;		None
 11400 ;; Return value:  Size  Location     Type
 11401 ;;                  1  [STACK] void 
 11402 ;; Registers used:
 11403 ;;		wreg, status,2
 11404 ;; Tracked objects:
 11405 ;;		On entry : 0/0
 11406 ;;		On exit  : 0/0
 11407 ;;		Unchanged: 0/0
 11408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11413 ;;Total ram usage:        0 bytes
 11414 ;; Hardware stack levels used: 1
 11415 ;; Hardware stack levels required when called: 7
 11416 ;; This function calls:
 11417 ;;		Nothing
 11418 ;; This function is called by:
 11419 ;;		_SYSTEM_Initialize
 11420 ;; This function uses a reentrant model
 11421 ;;
 11422                           
 11423                           	psect	text39
 11424   014844                     __ptext39:
 11425                           	callstack 0
 11426   014844                     _PIN_MANAGER_Initialize:
 11427                           	callstack 22
 11428   014844                     
 11429                           ;mcc_generated_files/pin_manager.c: 55:     LATE = 0x00;
 11430   014844  6A8D               	clrf	141,c	;volatile
 11431                           
 11432                           ;mcc_generated_files/pin_manager.c: 56:     LATJ = 0x00;
 11433   014846  6A91               	clrf	145,c	;volatile
 11434                           
 11435                           ;mcc_generated_files/pin_manager.c: 57:     LATD = 0x00;
 11436   014848  6A8C               	clrf	140,c	;volatile
 11437                           
 11438                           ;mcc_generated_files/pin_manager.c: 58:     LATA = 0x00;
 11439   01484A  6A89               	clrf	137,c	;volatile
 11440                           
 11441                           ;mcc_generated_files/pin_manager.c: 59:     LATF = 0x00;
 11442   01484C  6A8E               	clrf	142,c	;volatile
 11443                           
 11444                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
 11445   01484E  6A8A               	clrf	138,c	;volatile
 11446                           
 11447                           ;mcc_generated_files/pin_manager.c: 61:     LATG = 0x00;
 11448   014850  6A8F               	clrf	143,c	;volatile
 11449                           
 11450                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 11451   014852  6A8B               	clrf	139,c	;volatile
 11452                           
 11453                           ;mcc_generated_files/pin_manager.c: 63:     LATH = 0x00;
 11454   014854  6A90               	clrf	144,c	;volatile
 11455                           
 11456                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0xFF;
 11457   014856  6896               	setf	150,c	;volatile
 11458                           
 11459                           ;mcc_generated_files/pin_manager.c: 69:     TRISF = 0xFF;
 11460   014858  6897               	setf	151,c	;volatile
 11461   01485A                     
 11462                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x3F;
 11463   01485A  0E3F               	movlw	63
 11464   01485C  6E92               	movwf	146,c	;volatile
 11465   01485E                     
 11466                           ;mcc_generated_files/pin_manager.c: 71:     TRISG = 0xFF;
 11467   01485E  6898               	setf	152,c	;volatile
 11468   014860                     
 11469                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
 11470   014860  6893               	setf	147,c	;volatile
 11471   014862                     
 11472                           ;mcc_generated_files/pin_manager.c: 73:     TRISH = 0xFF;
 11473   014862  6899               	setf	153,c	;volatile
 11474   014864                     
 11475                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xFF;
 11476   014864  6894               	setf	148,c	;volatile
 11477                           
 11478                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xAF;
 11479   014866  0EAF               	movlw	175
 11480   014868  6E95               	movwf	149,c	;volatile
 11481   01486A                     
 11482                           ;mcc_generated_files/pin_manager.c: 76:     TRISJ = 0xFF;
 11483   01486A  689A               	setf	154,c	;volatile
 11484                           
 11485                           ;mcc_generated_files/pin_manager.c: 81:     ADCON1bits.PCFG = 0x00;
 11486   01486C  0EF0               	movlw	-16
 11487   01486E  16C1               	andwf	193,f,c	;volatile
 11488   014870                     
 11489                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 11490   014870  0012               	return		;funcret
 11491   014872                     __end_of_PIN_MANAGER_Initialize:
 11492                           	callstack 0
 11493                           
 11494 ;; *************** function _OSCILLATOR_Initialize *****************
 11495 ;; Defined at:
 11496 ;;		line 60 in file "mcc_generated_files/mcc.c"
 11497 ;; Parameters:    Size  Location     Type
 11498 ;;		None
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;		None
 11501 ;; Return value:  Size  Location     Type
 11502 ;;                  1  [STACK] void 
 11503 ;; Registers used:
 11504 ;;		wreg, status,2
 11505 ;; Tracked objects:
 11506 ;;		On entry : 0/0
 11507 ;;		On exit  : 0/0
 11508 ;;		Unchanged: 0/0
 11509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11514 ;;Total ram usage:        0 bytes
 11515 ;; Hardware stack levels used: 1
 11516 ;; Hardware stack levels required when called: 7
 11517 ;; This function calls:
 11518 ;;		Nothing
 11519 ;; This function is called by:
 11520 ;;		_SYSTEM_Initialize
 11521 ;; This function uses a reentrant model
 11522 ;;
 11523                           
 11524                           	psect	text40
 11525   01499A                     __ptext40:
 11526                           	callstack 0
 11527   01499A                     _OSCILLATOR_Initialize:
 11528                           	callstack 22
 11529   01499A                     
 11530                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x00;
 11531   01499A  6AD3               	clrf	211,c	;volatile
 11532   01499C                     
 11533                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x50;
 11534   01499C  0E50               	movlw	80
 11535   01499E  6E9B               	movwf	155,c	;volatile
 11536   0149A0                     
 11537                           ; _OSCILLATOR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 0, argsize = 0, vargsize = 0
 11538   0149A0  0012               	return		;funcret
 11539   0149A2                     __end_of_OSCILLATOR_Initialize:
 11540                           	callstack 0
 11541                           
 11542 ;; *************** function _INTERRUPT_Initialize *****************
 11543 ;; Defined at:
 11544 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11545 ;; Parameters:    Size  Location     Type
 11546 ;;		None
 11547 ;; Auto vars:     Size  Location     Type
 11548 ;;		None
 11549 ;; Return value:  Size  Location     Type
 11550 ;;                  1  [STACK] void 
 11551 ;; Registers used:
 11552 ;;		None
 11553 ;; Tracked objects:
 11554 ;;		On entry : 0/0
 11555 ;;		On exit  : 0/0
 11556 ;;		Unchanged: 0/0
 11557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11562 ;;Total ram usage:        0 bytes
 11563 ;; Hardware stack levels used: 1
 11564 ;; Hardware stack levels required when called: 7
 11565 ;; This function calls:
 11566 ;;		Nothing
 11567 ;; This function is called by:
 11568 ;;		_SYSTEM_Initialize
 11569 ;; This function uses a reentrant model
 11570 ;;
 11571                           
 11572                           	psect	text41
 11573   0149AE                     __ptext41:
 11574                           	callstack 0
 11575   0149AE                     _INTERRUPT_Initialize:
 11576                           	callstack 22
 11577   0149AE                     
 11578                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 11579   0149AE  9ED0               	bcf	208,7,c	;volatile
 11580   0149B0                     
 11581                           ; _INTERRUPT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 11582   0149B0  0012               	return		;funcret
 11583   0149B2                     __end_of_INTERRUPT_Initialize:
 11584                           	callstack 0
 11585                           
 11586 ;; *************** function _CanSetFilter *****************
 11587 ;; Defined at:
 11588 ;;		line 231 in file "can/can.c"
 11589 ;; Parameters:    Size  Location     Type
 11590 ;;  filter          1  [STACK] enum E5322
 11591 ;;  fObj            2  [STACK] PTR struct _CAN_FILTEROB
 11592 ;;		 -> filterObj(6), 
 11593 ;;  mObj            2  [STACK] PTR struct _CAN_MASKOBJ_
 11594 ;;		 -> maskObj(6), 
 11595 ;; Auto vars:     Size  Location     Type
 11596 ;;		None
 11597 ;; Return value:  Size  Location     Type
 11598 ;;                  1  [STACK] void 
 11599 ;; Registers used:
 11600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11601 ;; Tracked objects:
 11602 ;;		On entry : 0/0
 11603 ;;		On exit  : 0/0
 11604 ;;		Unchanged: 0/0
 11605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11610 ;;Total ram usage:        0 bytes
 11611 ;; Hardware stack levels used: 1
 11612 ;; Hardware stack levels required when called: 10
 11613 ;; This function calls:
 11614 ;;		_DRV_CANFDSPI_FilterDisable
 11615 ;;		_DRV_CANFDSPI_FilterMaskConfigure
 11616 ;;		_DRV_CANFDSPI_FilterObjectConfigure
 11617 ;;		_DRV_CANFDSPI_FilterToFifoLink
 11618 ;; This function is called by:
 11619 ;;		_main
 11620 ;; This function uses a reentrant model
 11621 ;;
 11622                           
 11623                           	psect	text42
 11624   0143F6                     __ptext42:
 11625                           	callstack 0
 11626   0143F6                     _CanSetFilter:
 11627                           	callstack 20
 11628   0143F6                     
 11629                           ;can/can.c: 231: void CanSetFilter(CAN_FILTER filter, CAN_FILTEROBJ_ID * fObj, CAN_MASKO
      +                          BJ_ID * mObj);can/can.c: 232: {;can/can.c: 234:     DRV_CANFDSPI_FilterDisable(filter);
 11630                           ;stkvar	_filter @ sp[(0)+-1]
 11631   0143F6  0EFF               	movlw	-1
 11632   0143F8  50E3               	movf	plusw1,w,c
 11633   0143FA  6EE6               	movwf	postinc1,c
 11634   0143FC  ECED  F0A0         	call	_DRV_CANFDSPI_FilterDisable	;wreg free
 11635   014400                     
 11636                           ;can/can.c: 235:     DRV_CANFDSPI_FilterObjectConfigure(filter,fObj);
 11637                           ;stkvar	_fObj @ sp[(0)+-3]
 11638   014400  0EFD               	movlw	-3
 11639   014402  CFE3 FFE6          	movff	plusw1,postinc1
 11640   014406  CFE3 FFE6          	movff	plusw1,postinc1
 11641                           
 11642                           ;stkvar	_filter @ sp[(-2)+-1]
 11643   01440A  0EFD               	movlw	-3
 11644   01440C  50E3               	movf	plusw1,w,c
 11645   01440E  6EE6               	movwf	postinc1,c
 11646   014410  EC1A  F087         	call	_DRV_CANFDSPI_FilterObjectConfigure	;wreg free
 11647   014414                     
 11648                           ;can/can.c: 237:     DRV_CANFDSPI_FilterMaskConfigure(filter,mObj,fObj->EXIDE);
 11649                           ;stkvar	_fObj @ sp[(0)+-3]
 11650   014414  0EFD               	movlw	-3
 11651   014416  CFE3 F02B          	movff	plusw1,btemp+10
 11652   01441A  0EFE               	movlw	-2
 11653   01441C  CFE3 F02C          	movff	plusw1,btemp+11
 11654   014420  0E05               	movlw	5
 11655   014422  242B               	addwf	(btemp+10)^0,w,c
 11656   014424  6ED9               	movwf	fsr2l,c
 11657   014426  0E00               	movlw	0
 11658   014428  202C               	addwfc	(btemp+11)^0,w,c
 11659   01442A  6EDA               	movwf	fsr2h,c
 11660   01442C  50DF               	movf	indf2,w,c
 11661   01442E  6EE6               	movwf	postinc1,c
 11662                           
 11663                           ;stkvar	_mObj @ sp[(-1)+-5]
 11664   014430  0EFA               	movlw	-6
 11665   014432  CFE3 FFE6          	movff	plusw1,postinc1
 11666   014436  CFE3 FFE6          	movff	plusw1,postinc1
 11667                           
 11668                           ;stkvar	_filter @ sp[(-3)+-1]
 11669   01443A  0EFC               	movlw	-4
 11670   01443C  50E3               	movf	plusw1,w,c
 11671   01443E  6EE6               	movwf	postinc1,c
 11672   014440  ECBF  F088         	call	_DRV_CANFDSPI_FilterMaskConfigure	;wreg free
 11673   014444                     
 11674                           ;can/can.c: 239:     DRV_CANFDSPI_FilterToFifoLink(filter,CAN_FIFO_CH2,1);
 11675   014444  0E01               	movlw	1
 11676   014446  6EE6               	movwf	postinc1,c
 11677   014448  0E02               	movlw	2
 11678   01444A  6EE6               	movwf	postinc1,c
 11679                           
 11680                           ;stkvar	_filter @ sp[(-2)+-1]
 11681   01444C  0EFD               	movlw	-3
 11682   01444E  50E3               	movf	plusw1,w,c
 11683   014450  6EE6               	movwf	postinc1,c
 11684   014452  ECA2  F0A0         	call	_DRV_CANFDSPI_FilterToFifoLink	;wreg free
 11685   014456                     
 11686                           ; _CanSetFilter: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, 
      +                          argsize = 5, vargsize = 0
 11687   014456  0EFB               	movlw	251
 11688   014458  26E1               	addwf	fsr1l,f,c
 11689   01445A  0EFF               	movlw	255
 11690   01445C  22E2               	addwfc	fsr1h,f,c
 11691   01445E  0012               	return		;funcret
 11692   014460                     __end_of_CanSetFilter:
 11693                           	callstack 0
 11694                           
 11695 ;; *************** function _DRV_CANFDSPI_FilterToFifoLink *****************
 11696 ;; Defined at:
 11697 ;;		line 1072 in file "can/can.c"
 11698 ;; Parameters:    Size  Location     Type
 11699 ;;  filter          1  [STACK] enum E5322
 11700 ;;  channel         1  [STACK] enum E5287
 11701 ;;  enable          1  [STACK] _Bool 
 11702 ;; Auto vars:     Size  Location     Type
 11703 ;;  a               2  [STACK] unsigned short 
 11704 ;;  fCtrl           1  [STACK] struct _REG_CiFLTCON_BYT
 11705 ;;  spiTransferE    1    0        char 
 11706 ;; Return value:  Size  Location     Type
 11707 ;;                  1  [STACK] char 
 11708 ;; Registers used:
 11709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 11710 ;; Tracked objects:
 11711 ;;		On entry : 0/0
 11712 ;;		On exit  : 0/0
 11713 ;;		Unchanged: 0/0
 11714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11719 ;;Total ram usage:        0 bytes
 11720 ;; Hardware stack levels used: 1
 11721 ;; Hardware stack levels required when called: 9
 11722 ;; This function calls:
 11723 ;;		_DRV_CANFDSPI_WriteByte
 11724 ;; This function is called by:
 11725 ;;		_CanSetFilter
 11726 ;; This function uses a reentrant model
 11727 ;;
 11728                           
 11729                           	psect	text43
 11730   014144                     __ptext43:
 11731                           	callstack 0
 11732   014144                     _DRV_CANFDSPI_FilterToFifoLink:
 11733                           	callstack 0
 11734                           
 11735                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11736   014144  52E6               	movf	postinc1,f,c
 11737   014146  52E6               	movf	postinc1,f,c
 11738   014148  52E6               	movf	postinc1,f,c
 11739   01414A                     
 11740                           ;can/can.c: 1080:     if (enable) {
 11741                           ;stkvar	_enable @ sp[(-3)+-3]
 11742   01414A  0EFA               	movlw	-6
 11743   01414C  50E3               	movf	plusw1,w,c
 11744   01414E  B4D8               	btfsc	status,2,c
 11745   014150  EFAC  F0A0         	goto	u2721
 11746   014154  EFAE  F0A0         	goto	u2720
 11747   014158                     u2721:
 11748   014158  EFB8  F0A0         	goto	l4990
 11749   01415C                     u2720:
 11750   01415C                     
 11751                           ;can/can.c: 1081:         fCtrl.bF.Enable = 1;
 11752                           ;stkvar	_fCtrl @ sp[(-3)+2]
 11753   01415C  50E1               	movf	fsr1l,w,c
 11754   01415E  0FFF               	addlw	-1
 11755   014160  6ED9               	movwf	fsr2l,c
 11756   014162  50E2               	movf	fsr1h,w,c
 11757   014164  6EDA               	movwf	fsr2h,c
 11758   014166  0EFF               	movlw	255
 11759   014168  22DA               	addwfc	fsr2h,f,c
 11760   01416A  8EDF               	bsf	indf2,7,c
 11761                           
 11762                           ;can/can.c: 1082:     } else {
 11763   01416C  EFC0  F0A0         	goto	l4992
 11764   014170                     l4990:
 11765                           
 11766                           ;can/can.c: 1083:         fCtrl.bF.Enable = 0;
 11767                           ;stkvar	_fCtrl @ sp[(-3)+2]
 11768   014170  50E1               	movf	fsr1l,w,c
 11769   014172  0FFF               	addlw	-1
 11770   014174  6ED9               	movwf	fsr2l,c
 11771   014176  50E2               	movf	fsr1h,w,c
 11772   014178  6EDA               	movwf	fsr2h,c
 11773   01417A  0EFF               	movlw	255
 11774   01417C  22DA               	addwfc	fsr2h,f,c
 11775   01417E  9EDF               	bcf	indf2,7,c
 11776   014180                     l4992:
 11777                           
 11778                           ;can/can.c: 1087:     fCtrl.bF.BufferPointer = channel;
 11779                           ;stkvar	_channel @ sp[(-3)+-2]
 11780   014180  0EFB               	movlw	-5
 11781   014182  CFE3 F02C          	movff	plusw1,btemp+11
 11782                           
 11783                           ;stkvar	_fCtrl @ sp[(-3)+2]
 11784   014186  50E1               	movf	fsr1l,w,c
 11785   014188  0FFF               	addlw	-1
 11786   01418A  6ED9               	movwf	fsr2l,c
 11787   01418C  50E2               	movf	fsr1h,w,c
 11788   01418E  6EDA               	movwf	fsr2h,c
 11789   014190  0EFF               	movlw	255
 11790   014192  22DA               	addwfc	fsr2h,f,c
 11791   014194  50DF               	movf	223,w,c
 11792   014196  182C               	xorwf	(btemp+11)^0,w,c
 11793   014198  0BE0               	andlw	-32
 11794   01419A  182C               	xorwf	(btemp+11)^0,w,c
 11795   01419C  6EDF               	movwf	223,c
 11796   01419E                     
 11797                           ;can/can.c: 1088:     a = (0x050 +((3*4)*CAN_FIFO_TOTAL_CHANNELS)) + filter;
 11798                           ;stkvar	_filter @ sp[(-3)+-1]
 11799   01419E  0EFC               	movlw	-4
 11800   0141A0  CFE3 F02C          	movff	plusw1,btemp+11
 11801   0141A4  0ED0               	movlw	208
 11802   0141A6  242C               	addwf	(btemp+11)^0,w,c
 11803   0141A8  6E29               	movwf	(btemp+8)^0,c
 11804   0141AA  6A2A               	clrf	(btemp+9)^0,c
 11805   0141AC  0E01               	movlw	1
 11806   0141AE  222A               	addwfc	(btemp+9)^0,f,c
 11807                           
 11808                           ;stkvar	_a @ sp[(-3)+0]
 11809   0141B0  0EFD               	movlw	-3
 11810   0141B2  C029  FFE3         	movff	btemp+8,plusw1
 11811   0141B6  0EFE               	movlw	-2
 11812   0141B8  C02A  FFE3         	movff	btemp+9,plusw1
 11813   0141BC                     
 11814                           ;stkvar	_fCtrl @ sp[(-3)+2]
 11815   0141BC  0EFF               	movlw	-1
 11816   0141BE  50E3               	movf	plusw1,w,c
 11817   0141C0  6EE6               	movwf	postinc1,c
 11818                           
 11819                           ;stkvar	_a @ sp[(-4)+0]
 11820   0141C2  0EFC               	movlw	-4
 11821   0141C4  CFE3 FFE6          	movff	plusw1,postinc1
 11822   0141C8  CFE3 FFE6          	movff	plusw1,postinc1
 11823   0141CC  EC21  F0A3         	call	_DRV_CANFDSPI_WriteByte	;wreg free
 11824   0141D0                     
 11825                           ; _DRV_CANFDSPI_FilterToFifoLink: autosize = 3, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 3, argsize = 3, vargsize = 0
 11826   0141D0  0EFA               	movlw	250
 11827   0141D2  26E1               	addwf	fsr1l,f,c
 11828   0141D4  0EFF               	movlw	255
 11829   0141D6  22E2               	addwfc	fsr1h,f,c
 11830   0141D8  0012               	return		;funcret
 11831   0141DA                     __end_of_DRV_CANFDSPI_FilterToFifoLink:
 11832                           	callstack 0
 11833                           
 11834 ;; *************** function _DRV_CANFDSPI_FilterObjectConfigure *****************
 11835 ;; Defined at:
 11836 ;;		line 1001 in file "can/can.c"
 11837 ;; Parameters:    Size  Location     Type
 11838 ;;  filter          1  [STACK] enum E5322
 11839 ;;  id              2  [STACK] PTR struct _CAN_FILTEROB
 11840 ;;		 -> filterObj(6), 
 11841 ;; Auto vars:     Size  Location     Type
 11842 ;;  temp32          4  [STACK] unsigned long 
 11843 ;;  fObj            6  [STACK] struct _REG_CiFLTOBJ
 11844 ;;  a               2  [STACK] unsigned short 
 11845 ;;  spiTransferE    1    0        char 
 11846 ;; Return value:  Size  Location     Type
 11847 ;;                  1  [STACK] char 
 11848 ;; Registers used:
 11849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11850 ;; Tracked objects:
 11851 ;;		On entry : 0/0
 11852 ;;		On exit  : 0/0
 11853 ;;		Unchanged: 0/0
 11854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11859 ;;Total ram usage:        0 bytes
 11860 ;; Hardware stack levels used: 1
 11861 ;; Hardware stack levels required when called: 9
 11862 ;; This function calls:
 11863 ;;		_DRV_CANFDSPI_WriteWord
 11864 ;; This function is called by:
 11865 ;;		_CanSetFilter
 11866 ;; This function uses a reentrant model
 11867 ;;
 11868                           
 11869                           	psect	text44
 11870   010E34                     __ptext44:
 11871                           	callstack 0
 11872   010E34                     _DRV_CANFDSPI_FilterObjectConfigure:
 11873                           	callstack 0
 11874                           
 11875                           ; autosize = 12, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11876   010E34  0E0C               	movlw	12
 11877   010E36  26E1               	addwf	fsr1l,f,c
 11878   010E38  0E00               	movlw	0
 11879   010E3A  22E2               	addwfc	fsr1h,f,c
 11880   010E3C                     
 11881                           ;can/can.c: 1009:     fObj.word = 0;
 11882                           ;stkvar	_fObj @ sp[(-12)+4]
 11883   010E3C  0EF8               	movlw	-8
 11884   010E3E  6AE3               	clrf	plusw1,c
 11885   010E40  0EF9               	movlw	-7
 11886   010E42  6AE3               	clrf	plusw1,c
 11887   010E44  0EFA               	movlw	-6
 11888   010E46  6AE3               	clrf	plusw1,c
 11889   010E48  0EFB               	movlw	-5
 11890   010E4A  6AE3               	clrf	plusw1,c
 11891   010E4C                     
 11892                           ;can/can.c: 1011:     if(id->EXIDE == 0)
 11893                           ;stkvar	_id @ sp[(-12)+-3]
 11894   010E4C  0EF1               	movlw	-15
 11895   010E4E  CFE3 F02B          	movff	plusw1,btemp+10
 11896   010E52  0EF2               	movlw	-14
 11897   010E54  CFE3 F02C          	movff	plusw1,btemp+11
 11898   010E58  0E05               	movlw	5
 11899   010E5A  242B               	addwf	(btemp+10)^0,w,c
 11900   010E5C  6ED9               	movwf	fsr2l,c
 11901   010E5E  0E00               	movlw	0
 11902   010E60  202C               	addwfc	(btemp+11)^0,w,c
 11903   010E62  6EDA               	movwf	fsr2h,c
 11904   010E64  50DF               	movf	indf2,w,c
 11905   010E66  A4D8               	btfss	status,2,c
 11906   010E68  EF38  F087         	goto	u2541
 11907   010E6C  EF3A  F087         	goto	u2540
 11908   010E70                     u2541:
 11909   010E70  EFD2  F087         	goto	l4936
 11910   010E74                     u2540:
 11911   010E74                     
 11912                           ;can/can.c: 1012:     {;can/can.c: 1013:       fObj.byte[0] = (uint8_t)id->ID;
 11913                           ;stkvar	_id @ sp[(-12)+-3]
 11914   010E74  0EF1               	movlw	-15
 11915   010E76  CFE3 FFD9          	movff	plusw1,fsr2l
 11916   010E7A  0EF2               	movlw	-14
 11917   010E7C  CFE3 FFDA          	movff	plusw1,fsr2h
 11918   010E80  50DF               	movf	indf2,w,c
 11919   010E82  6E2C               	movwf	(btemp+11)^0,c
 11920                           
 11921                           ;stkvar	_fObj @ sp[(-12)+4]
 11922   010E84  0EF8               	movlw	-8
 11923   010E86  C02C  FFE3         	movff	btemp+11,plusw1
 11924   010E8A                     
 11925                           ;can/can.c: 1014:       fObj.byte[1] = (uint8_t)(id->ID >> 8);
 11926                           ;stkvar	_fObj @ sp[(-12)+4]
 11927   010E8A  0EF9               	movlw	249
 11928   010E8C  24E1               	addwf	fsr1l,w,c
 11929   010E8E  6ED9               	movwf	fsr2l,c
 11930   010E90  0EFF               	movlw	255
 11931   010E92  20E2               	addwfc	fsr1h,w,c
 11932   010E94  6EDA               	movwf	fsr2h,c
 11933                           
 11934                           ;stkvar	_id @ sp[(-12)+-3]
 11935   010E96  0EF1               	movlw	-15
 11936   010E98  CFE3 FFE9          	movff	plusw1,fsr0l
 11937   010E9C  0EF2               	movlw	-14
 11938   010E9E  CFE3 FFEA          	movff	plusw1,fsr0h
 11939   010EA2  CFEE F029          	movff	postinc0,btemp+8
 11940   010EA6  CFEE F02A          	movff	postinc0,btemp+9
 11941   010EAA  CFEE F02B          	movff	postinc0,btemp+10
 11942   010EAE  CFEE F02C          	movff	postinc0,btemp+11
 11943   010EB2  C02A  F029         	movff	btemp+9,btemp+8
 11944   010EB6  C02B  F02A         	movff	btemp+10,btemp+9
 11945   010EBA  C02C  F02B         	movff	btemp+11,btemp+10
 11946   010EBE  6A2C               	clrf	(btemp+11)^0,c
 11947   010EC0  5029               	movf	(btemp+8)^0,w,c
 11948   010EC2  6EDF               	movwf	indf2,c
 11949   010EC4                     
 11950                           ;can/can.c: 1015:       fObj.byte[2] = (uint8_t)(id->ID >> 16);
 11951                           ;stkvar	_fObj @ sp[(-12)+4]
 11952   010EC4  0EFA               	movlw	250
 11953   010EC6  24E1               	addwf	fsr1l,w,c
 11954   010EC8  6ED9               	movwf	fsr2l,c
 11955   010ECA  0EFF               	movlw	255
 11956   010ECC  20E2               	addwfc	fsr1h,w,c
 11957   010ECE  6EDA               	movwf	fsr2h,c
 11958                           
 11959                           ;stkvar	_id @ sp[(-12)+-3]
 11960   010ED0  0EF1               	movlw	-15
 11961   010ED2  CFE3 FFE9          	movff	plusw1,fsr0l
 11962   010ED6  0EF2               	movlw	-14
 11963   010ED8  CFE3 FFEA          	movff	plusw1,fsr0h
 11964   010EDC  CFEE F029          	movff	postinc0,btemp+8
 11965   010EE0  CFEE F02A          	movff	postinc0,btemp+9
 11966   010EE4  CFEE F02B          	movff	postinc0,btemp+10
 11967   010EE8  CFEE F02C          	movff	postinc0,btemp+11
 11968   010EEC  0E11               	movlw	17
 11969   010EEE  EF7E  F087         	goto	u2550
 11970   010EF2                     u2555:
 11971   010EF2  90D8               	bcf	status,0,c
 11972   010EF4  322C               	rrcf	(btemp+11)^0,f,c
 11973   010EF6  322B               	rrcf	(btemp+10)^0,f,c
 11974   010EF8  322A               	rrcf	(btemp+9)^0,f,c
 11975   010EFA  3229               	rrcf	(btemp+8)^0,f,c
 11976   010EFC                     u2550:
 11977   010EFC  2EE8               	decfsz	wreg,f,c
 11978   010EFE  EF79  F087         	goto	u2555
 11979   010F02  5029               	movf	(btemp+8)^0,w,c
 11980   010F04  6EDF               	movwf	indf2,c
 11981   010F06                     
 11982                           ;can/can.c: 1016:       fObj.byte[3] = (uint8_t)(id->ID >> 24) | (uint8_t)(id->SID11 << 
      +                          5) | (uint8_t)(id->EXIDE << 6);
 11983                           ;stkvar	_fObj @ sp[(-12)+4]
 11984   010F06  0EFB               	movlw	251
 11985   010F08  24E1               	addwf	fsr1l,w,c
 11986   010F0A  6ED9               	movwf	fsr2l,c
 11987   010F0C  0EFF               	movlw	255
 11988   010F0E  20E2               	addwfc	fsr1h,w,c
 11989   010F10  6EDA               	movwf	fsr2h,c
 11990                           
 11991                           ;stkvar	_id @ sp[(-12)+-3]
 11992   010F12  0EF1               	movlw	-15
 11993   010F14  CFE3 F02B          	movff	plusw1,btemp+10
 11994   010F18  0EF2               	movlw	-14
 11995   010F1A  CFE3 F02C          	movff	plusw1,btemp+11
 11996   010F1E  0E05               	movlw	5
 11997   010F20  242B               	addwf	(btemp+10)^0,w,c
 11998   010F22  6EE9               	movwf	fsr0l,c
 11999   010F24  0E00               	movlw	0
 12000   010F26  202C               	addwfc	(btemp+11)^0,w,c
 12001   010F28  6EEA               	movwf	fsr0h,c
 12002   010F2A  50EF               	movf	indf0,w,c
 12003   010F2C  6E2C               	movwf	(btemp+11)^0,c
 12004   010F2E  0E06               	movlw	6
 12005   010F30  6E21               	movwf	btemp^0,c
 12006   010F32                     u2565:
 12007   010F32  90D8               	bcf	status,0,c
 12008   010F34  362C               	rlcf	(btemp+11)^0,f,c
 12009   010F36  2E21               	decfsz	btemp^0,f,c
 12010   010F38  EF99  F087         	goto	u2565
 12011                           
 12012                           ;stkvar	_id @ sp[(-12)+-3]
 12013   010F3C  0EF1               	movlw	-15
 12014   010F3E  CFE3 F029          	movff	plusw1,btemp+8
 12015   010F42  0EF2               	movlw	-14
 12016   010F44  CFE3 F02A          	movff	plusw1,btemp+9
 12017   010F48  0E04               	movlw	4
 12018   010F4A  2429               	addwf	(btemp+8)^0,w,c
 12019   010F4C  6EE9               	movwf	fsr0l,c
 12020   010F4E  0E00               	movlw	0
 12021   010F50  202A               	addwfc	(btemp+9)^0,w,c
 12022   010F52  6EEA               	movwf	fsr0h,c
 12023   010F54  50EF               	movf	indf0,w,c
 12024   010F56  6E2B               	movwf	(btemp+10)^0,c
 12025   010F58  0E05               	movlw	5
 12026   010F5A  6E21               	movwf	btemp^0,c
 12027   010F5C                     u2575:
 12028   010F5C  90D8               	bcf	status,0,c
 12029   010F5E  362B               	rlcf	(btemp+10)^0,f,c
 12030   010F60  2E21               	decfsz	btemp^0,f,c
 12031   010F62  EFAE  F087         	goto	u2575
 12032                           
 12033                           ;stkvar	_id @ sp[(-12)+-3]
 12034   010F66  0EF1               	movlw	-15
 12035   010F68  CFE3 FFE9          	movff	plusw1,fsr0l
 12036   010F6C  0EF2               	movlw	-14
 12037   010F6E  CFE3 FFEA          	movff	plusw1,fsr0h
 12038   010F72  CFEE F025          	movff	postinc0,btemp+4
 12039   010F76  CFEE F026          	movff	postinc0,btemp+5
 12040   010F7A  CFEE F027          	movff	postinc0,btemp+6
 12041   010F7E  CFEE F028          	movff	postinc0,btemp+7
 12042   010F82  0E19               	movlw	25
 12043   010F84  EFC9  F087         	goto	u2580
 12044   010F88                     u2585:
 12045   010F88  90D8               	bcf	status,0,c
 12046   010F8A  3228               	rrcf	(btemp+7)^0,f,c
 12047   010F8C  3227               	rrcf	(btemp+6)^0,f,c
 12048   010F8E  3226               	rrcf	(btemp+5)^0,f,c
 12049   010F90  3225               	rrcf	(btemp+4)^0,f,c
 12050   010F92                     u2580:
 12051   010F92  2EE8               	decfsz	wreg,f,c
 12052   010F94  EFC4  F087         	goto	u2585
 12053   010F98  5025               	movf	(btemp+4)^0,w,c
 12054   010F9A  102B               	iorwf	(btemp+10)^0,w,c
 12055   010F9C  102C               	iorwf	(btemp+11)^0,w,c
 12056   010F9E  6EDF               	movwf	indf2,c
 12057                           
 12058                           ;can/can.c: 1017:     }
 12059   010FA0  EF97  F088         	goto	l4948
 12060   010FA4                     l4936:
 12061                           
 12062                           ;can/can.c: 1019:     {;can/can.c: 1020:       uint32_t temp32 = ((id->ID & 0x0003FFFF) 
      +                          << 11) |
 12063                           ;stkvar	_id @ sp[(-12)+-3]
 12064   010FA4  0EF1               	movlw	-15
 12065   010FA6  CFE3 FFD9          	movff	plusw1,fsr2l
 12066   010FAA  0EF2               	movlw	-14
 12067   010FAC  CFE3 FFDA          	movff	plusw1,fsr2h
 12068   010FB0  CFDE F029          	movff	postinc2,btemp+8
 12069   010FB4  CFDE F02A          	movff	postinc2,btemp+9
 12070   010FB8  CFDE F02B          	movff	postinc2,btemp+10
 12071   010FBC  CFDE F02C          	movff	postinc2,btemp+11
 12072   010FC0  0E13               	movlw	19
 12073   010FC2  EFE8  F087         	goto	u2590
 12074   010FC6                     u2595:
 12075   010FC6  90D8               	bcf	status,0,c
 12076   010FC8  322C               	rrcf	(btemp+11)^0,f,c
 12077   010FCA  322B               	rrcf	(btemp+10)^0,f,c
 12078   010FCC  322A               	rrcf	(btemp+9)^0,f,c
 12079   010FCE  3229               	rrcf	(btemp+8)^0,f,c
 12080   010FD0                     u2590:
 12081   010FD0  2EE8               	decfsz	wreg,f,c
 12082   010FD2  EFE3  F087         	goto	u2595
 12083   010FD6  0EFF               	movlw	255
 12084   010FD8  1429               	andwf	(btemp+8)^0,w,c
 12085   010FDA  6E25               	movwf	(btemp+4)^0,c
 12086   010FDC  0E07               	movlw	7
 12087   010FDE  142A               	andwf	(btemp+9)^0,w,c
 12088   010FE0  6E26               	movwf	(btemp+5)^0,c
 12089   010FE2  0E00               	movlw	0
 12090   010FE4  142B               	andwf	(btemp+10)^0,w,c
 12091   010FE6  6E27               	movwf	(btemp+6)^0,c
 12092   010FE8  0E00               	movlw	0
 12093   010FEA  142C               	andwf	(btemp+11)^0,w,c
 12094   010FEC  6E28               	movwf	(btemp+7)^0,c
 12095                           
 12096                           ;stkvar	_id @ sp[(-12)+-3]
 12097   010FEE  0EF1               	movlw	-15
 12098   010FF0  CFE3 FFD9          	movff	plusw1,fsr2l
 12099   010FF4  0EF2               	movlw	-14
 12100   010FF6  CFE3 FFDA          	movff	plusw1,fsr2h
 12101   010FFA  0EFF               	movlw	255
 12102   010FFC  14DE               	andwf	postinc2,w,c
 12103   010FFE  6E29               	movwf	(btemp+8)^0,c
 12104   011000  0EFF               	movlw	255
 12105   011002  14DE               	andwf	postinc2,w,c
 12106   011004  6E2A               	movwf	(btemp+9)^0,c
 12107   011006  0E03               	movlw	3
 12108   011008  14DE               	andwf	postinc2,w,c
 12109   01100A  6E2B               	movwf	(btemp+10)^0,c
 12110   01100C  0E00               	movlw	0
 12111   01100E  14DE               	andwf	postinc2,w,c
 12112   011010  6E2C               	movwf	(btemp+11)^0,c
 12113   011012  0E0B               	movlw	11
 12114   011014                     u2605:
 12115   011014  90D8               	bcf	status,0,c
 12116   011016  3629               	rlcf	(btemp+8)^0,f,c
 12117   011018  362A               	rlcf	(btemp+9)^0,f,c
 12118   01101A  362B               	rlcf	(btemp+10)^0,f,c
 12119   01101C  362C               	rlcf	(btemp+11)^0,f,c
 12120   01101E  2EE8               	decfsz	wreg,f,c
 12121   011020  EF0A  F088         	goto	u2605
 12122   011024  5025               	movf	(btemp+4)^0,w,c
 12123   011026  1029               	iorwf	(btemp+8)^0,w,c
 12124   011028  6E21               	movwf	btemp^0,c
 12125   01102A  5026               	movf	(btemp+5)^0,w,c
 12126   01102C  102A               	iorwf	(btemp+9)^0,w,c
 12127   01102E  6E22               	movwf	(btemp+1)^0,c
 12128   011030  5027               	movf	(btemp+6)^0,w,c
 12129   011032  102B               	iorwf	(btemp+10)^0,w,c
 12130   011034  6E23               	movwf	(btemp+2)^0,c
 12131   011036  5028               	movf	(btemp+7)^0,w,c
 12132   011038  102C               	iorwf	(btemp+11)^0,w,c
 12133   01103A  6E24               	movwf	(btemp+3)^0,c
 12134                           
 12135                           ;stkvar	_temp32 @ sp[(-12)+0]
 12136   01103C  0EF4               	movlw	-12
 12137   01103E  C021  FFE3         	movff	btemp,plusw1
 12138   011042  0EF5               	movlw	-11
 12139   011044  C022  FFE3         	movff	btemp+1,plusw1
 12140   011048  0EF6               	movlw	-10
 12141   01104A  C023  FFE3         	movff	btemp+2,plusw1
 12142   01104E  0EF7               	movlw	-9
 12143   011050  C024  FFE3         	movff	btemp+3,plusw1
 12144   011054                     
 12145                           ;can/can.c: 1022:       temp32 = temp32 & 0x1FFFFFFF;
 12146                           ;stkvar	_temp32 @ sp[(-12)+0]
 12147   011054  50E1               	movf	fsr1l,w,c
 12148   011056  0FF4               	addlw	-12
 12149   011058  6ED9               	movwf	fsr2l,c
 12150   01105A  50E2               	movf	fsr1h,w,c
 12151   01105C  6EDA               	movwf	fsr2h,c
 12152   01105E  0EFF               	movlw	255
 12153   011060  22DA               	addwfc	fsr2h,f,c
 12154   011062  0EFF               	movlw	255
 12155   011064  16DE               	andwf	postinc2,f,c
 12156   011066  0EFF               	movlw	255
 12157   011068  16DE               	andwf	postinc2,f,c
 12158   01106A  0EFF               	movlw	255
 12159   01106C  16DE               	andwf	postinc2,f,c
 12160   01106E  0E1F               	movlw	31
 12161   011070  16DE               	andwf	postinc2,f,c
 12162   011072                     
 12163                           ;can/can.c: 1023:       fObj.byte[0] = (uint8_t)temp32;
 12164                           ;stkvar	_temp32 @ sp[(-12)+0]
 12165                           ;stkvar	_fObj @ sp[(-12)+4]
 12166   011072  0EF4               	movlw	-12
 12167   011074  CFE3 F021          	movff	plusw1,btemp
 12168   011078  0EF8               	movlw	-8
 12169   01107A  C021  FFE3         	movff	btemp,plusw1
 12170   01107E                     
 12171                           ;can/can.c: 1024:       fObj.byte[1] = (uint8_t)(temp32 >> 8);
 12172                           ;stkvar	_temp32 @ sp[(-12)+0]
 12173   01107E  0EF5               	movlw	245
 12174   011080  24E1               	addwf	fsr1l,w,c
 12175   011082  6ED9               	movwf	fsr2l,c
 12176   011084  0EFF               	movlw	255
 12177   011086  20E2               	addwfc	fsr1h,w,c
 12178   011088  6EDA               	movwf	fsr2h,c
 12179                           
 12180                           ;stkvar	_fObj @ sp[(-12)+4]
 12181   01108A  0EF9               	movlw	249
 12182   01108C  24E1               	addwf	fsr1l,w,c
 12183   01108E  6EE9               	movwf	fsr0l,c
 12184   011090  0EFF               	movlw	255
 12185   011092  20E2               	addwfc	fsr1h,w,c
 12186   011094  6EEA               	movwf	fsr0h,c
 12187   011096  CFDF FFEF          	movff	indf2,indf0
 12188   01109A                     
 12189                           ;can/can.c: 1025:       fObj.byte[2] = (uint8_t)(temp32 >> 16);
 12190                           ;stkvar	_temp32 @ sp[(-12)+0]
 12191   01109A  0EF6               	movlw	246
 12192   01109C  24E1               	addwf	fsr1l,w,c
 12193   01109E  6ED9               	movwf	fsr2l,c
 12194   0110A0  0EFF               	movlw	255
 12195   0110A2  20E2               	addwfc	fsr1h,w,c
 12196   0110A4  6EDA               	movwf	fsr2h,c
 12197                           
 12198                           ;stkvar	_fObj @ sp[(-12)+4]
 12199   0110A6  0EFA               	movlw	250
 12200   0110A8  24E1               	addwf	fsr1l,w,c
 12201   0110AA  6EE9               	movwf	fsr0l,c
 12202   0110AC  0EFF               	movlw	255
 12203   0110AE  20E2               	addwfc	fsr1h,w,c
 12204   0110B0  6EEA               	movwf	fsr0h,c
 12205   0110B2  CFDF FFEF          	movff	indf2,indf0
 12206   0110B6                     
 12207                           ;can/can.c: 1026:       fObj.byte[3] = (uint8_t)(temp32 >> 24) | (uint8_t)(id->SID11 << 
      +                          5) | (uint8_t)(id->EXIDE << 6);
 12208                           ;stkvar	_fObj @ sp[(-12)+4]
 12209   0110B6  0EFB               	movlw	251
 12210   0110B8  24E1               	addwf	fsr1l,w,c
 12211   0110BA  6ED9               	movwf	fsr2l,c
 12212   0110BC  0EFF               	movlw	255
 12213   0110BE  20E2               	addwfc	fsr1h,w,c
 12214   0110C0  6EDA               	movwf	fsr2h,c
 12215                           
 12216                           ;stkvar	_temp32 @ sp[(-12)+0]
 12217   0110C2  0EF7               	movlw	247
 12218   0110C4  24E1               	addwf	fsr1l,w,c
 12219   0110C6  6EE9               	movwf	fsr0l,c
 12220   0110C8  0EFF               	movlw	255
 12221   0110CA  20E2               	addwfc	fsr1h,w,c
 12222   0110CC  6EEA               	movwf	fsr0h,c
 12223   0110CE  50EF               	movf	indf0,w,c
 12224   0110D0  6E2C               	movwf	(btemp+11)^0,c
 12225                           
 12226                           ;stkvar	_id @ sp[(-12)+-3]
 12227   0110D2  0EF1               	movlw	-15
 12228   0110D4  CFE3 F029          	movff	plusw1,btemp+8
 12229   0110D8  0EF2               	movlw	-14
 12230   0110DA  CFE3 F02A          	movff	plusw1,btemp+9
 12231   0110DE  0E05               	movlw	5
 12232   0110E0  2429               	addwf	(btemp+8)^0,w,c
 12233   0110E2  6EE9               	movwf	fsr0l,c
 12234   0110E4  0E00               	movlw	0
 12235   0110E6  202A               	addwfc	(btemp+9)^0,w,c
 12236   0110E8  6EEA               	movwf	fsr0h,c
 12237   0110EA  50EF               	movf	indf0,w,c
 12238   0110EC  6E2B               	movwf	(btemp+10)^0,c
 12239   0110EE  0E06               	movlw	6
 12240   0110F0  6E21               	movwf	btemp^0,c
 12241   0110F2                     u2615:
 12242   0110F2  90D8               	bcf	status,0,c
 12243   0110F4  362B               	rlcf	(btemp+10)^0,f,c
 12244   0110F6  2E21               	decfsz	btemp^0,f,c
 12245   0110F8  EF79  F088         	goto	u2615
 12246                           
 12247                           ;stkvar	_id @ sp[(-12)+-3]
 12248   0110FC  0EF1               	movlw	-15
 12249   0110FE  CFE3 F029          	movff	plusw1,btemp+8
 12250   011102  0EF2               	movlw	-14
 12251   011104  CFE3 F02A          	movff	plusw1,btemp+9
 12252   011108  0E04               	movlw	4
 12253   01110A  2429               	addwf	(btemp+8)^0,w,c
 12254   01110C  6EE9               	movwf	fsr0l,c
 12255   01110E  0E00               	movlw	0
 12256   011110  202A               	addwfc	(btemp+9)^0,w,c
 12257   011112  6EEA               	movwf	fsr0h,c
 12258   011114  50EF               	movf	indf0,w,c
 12259   011116  6E2A               	movwf	(btemp+9)^0,c
 12260   011118  0E05               	movlw	5
 12261   01111A  6E21               	movwf	btemp^0,c
 12262   01111C                     u2625:
 12263   01111C  90D8               	bcf	status,0,c
 12264   01111E  362A               	rlcf	(btemp+9)^0,f,c
 12265   011120  2E21               	decfsz	btemp^0,f,c
 12266   011122  EF8E  F088         	goto	u2625
 12267   011126  502A               	movf	(btemp+9)^0,w,c
 12268   011128  102B               	iorwf	(btemp+10)^0,w,c
 12269   01112A  102C               	iorwf	(btemp+11)^0,w,c
 12270   01112C  6EDF               	movwf	indf2,c
 12271   01112E                     l4948:
 12272                           
 12273                           ;can/can.c: 1028:     a = ((0x050 +((3*4)*CAN_FIFO_TOTAL_CHANNELS))+CAN_FIFO_TOTAL_CHANN
      +                          ELS) + (filter * (2*4));
 12274                           ;stkvar	_filter @ sp[(-12)+-1]
 12275   01112E  0EF3               	movlw	-13
 12276   011130  50E3               	movf	plusw1,w,c
 12277   011132  0D08               	mullw	8
 12278   011134  CFF3 F02B          	movff	prodl,btemp+10
 12279   011138  CFF4 F02C          	movff	prodh,btemp+11
 12280   01113C  0EF0               	movlw	240
 12281   01113E  242B               	addwf	(btemp+10)^0,w,c
 12282   011140  6E29               	movwf	(btemp+8)^0,c
 12283   011142  0E01               	movlw	1
 12284   011144  202C               	addwfc	(btemp+11)^0,w,c
 12285   011146  6E2A               	movwf	(btemp+9)^0,c
 12286                           
 12287                           ;stkvar	_a @ sp[(-12)+10]
 12288   011148  0EFE               	movlw	-2
 12289   01114A  C029  FFE3         	movff	btemp+8,plusw1
 12290   01114E  0EFF               	movlw	-1
 12291   011150  C02A  FFE3         	movff	btemp+9,plusw1
 12292   011154                     
 12293                           ;stkvar	_fObj @ sp[(-12)+4]
 12294   011154  0EF8               	movlw	-8
 12295   011156  CFE3 FFE6          	movff	plusw1,postinc1
 12296   01115A  CFE3 FFE6          	movff	plusw1,postinc1
 12297   01115E  CFE3 FFE6          	movff	plusw1,postinc1
 12298   011162  CFE3 FFE6          	movff	plusw1,postinc1
 12299                           
 12300                           ;stkvar	_a @ sp[(-16)+10]
 12301   011166  0EFA               	movlw	-6
 12302   011168  CFE3 FFE6          	movff	plusw1,postinc1
 12303   01116C  CFE3 FFE6          	movff	plusw1,postinc1
 12304   011170  ECF1  F09B         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 12305   011174                     
 12306                           ; _DRV_CANFDSPI_FilterObjectConfigure: autosize = 12, savesize = 0, parsavesize = 0, tem
      +                          psize = 0 parsize = 3, argsize = 3, vargsize = 0
 12307   011174  0EF1               	movlw	241
 12308   011176  26E1               	addwf	fsr1l,f,c
 12309   011178  0EFF               	movlw	255
 12310   01117A  22E2               	addwfc	fsr1h,f,c
 12311   01117C  0012               	return		;funcret
 12312   01117E                     __end_of_DRV_CANFDSPI_FilterObjectConfigure:
 12313                           	callstack 0
 12314                           
 12315 ;; *************** function _DRV_CANFDSPI_FilterMaskConfigure *****************
 12316 ;; Defined at:
 12317 ;;		line 1035 in file "can/can.c"
 12318 ;; Parameters:    Size  Location     Type
 12319 ;;  filter          1  [STACK] enum E5322
 12320 ;;  mask            2  [STACK] PTR struct _CAN_MASKOBJ_
 12321 ;;		 -> maskObj(6), 
 12322 ;;  EXIDE           1  [STACK] unsigned char 
 12323 ;; Auto vars:     Size  Location     Type
 12324 ;;  temp32          4  [STACK] unsigned long 
 12325 ;;  mObj            6  [STACK] struct _REG_CiMASK
 12326 ;;  a               2  [STACK] unsigned short 
 12327 ;;  spiTransferE    1    0        char 
 12328 ;; Return value:  Size  Location     Type
 12329 ;;                  1  [STACK] char 
 12330 ;; Registers used:
 12331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 12332 ;; Tracked objects:
 12333 ;;		On entry : 0/0
 12334 ;;		On exit  : 0/0
 12335 ;;		Unchanged: 0/0
 12336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12341 ;;Total ram usage:        0 bytes
 12342 ;; Hardware stack levels used: 1
 12343 ;; Hardware stack levels required when called: 9
 12344 ;; This function calls:
 12345 ;;		_DRV_CANFDSPI_WriteWord
 12346 ;; This function is called by:
 12347 ;;		_CanSetFilter
 12348 ;; This function uses a reentrant model
 12349 ;;
 12350                           
 12351                           	psect	text45
 12352   01117E                     __ptext45:
 12353                           	callstack 0
 12354   01117E                     _DRV_CANFDSPI_FilterMaskConfigure:
 12355                           	callstack 0
 12356                           
 12357                           ; autosize = 12, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12358   01117E  0E0C               	movlw	12
 12359   011180  26E1               	addwf	fsr1l,f,c
 12360   011182  0E00               	movlw	0
 12361   011184  22E2               	addwfc	fsr1h,f,c
 12362   011186                     
 12363                           ;can/can.c: 1043:     mObj.word = 0;
 12364                           ;stkvar	_mObj @ sp[(-12)+4]
 12365   011186  0EF8               	movlw	-8
 12366   011188  6AE3               	clrf	plusw1,c
 12367   01118A  0EF9               	movlw	-7
 12368   01118C  6AE3               	clrf	plusw1,c
 12369   01118E  0EFA               	movlw	-6
 12370   011190  6AE3               	clrf	plusw1,c
 12371   011192  0EFB               	movlw	-5
 12372   011194  6AE3               	clrf	plusw1,c
 12373   011196                     
 12374                           ;can/can.c: 1047:     if(EXIDE == 0)
 12375                           ;stkvar	_EXIDE @ sp[(-12)+-4]
 12376   011196  0EF0               	movlw	-16
 12377   011198  50E3               	movf	plusw1,w,c
 12378   01119A  A4D8               	btfss	status,2,c
 12379   01119C  EFD2  F088         	goto	u2631
 12380   0111A0  EFD4  F088         	goto	u2630
 12381   0111A4                     u2631:
 12382   0111A4  EF6C  F089         	goto	l4968
 12383   0111A8                     u2630:
 12384   0111A8                     
 12385                           ;can/can.c: 1048:     {;can/can.c: 1049:       mObj.byte[0] = (uint8_t)mask->MID;
 12386                           ;stkvar	_mask @ sp[(-12)+-3]
 12387   0111A8  0EF1               	movlw	-15
 12388   0111AA  CFE3 FFD9          	movff	plusw1,fsr2l
 12389   0111AE  0EF2               	movlw	-14
 12390   0111B0  CFE3 FFDA          	movff	plusw1,fsr2h
 12391   0111B4  50DF               	movf	indf2,w,c
 12392   0111B6  6E2C               	movwf	(btemp+11)^0,c
 12393                           
 12394                           ;stkvar	_mObj @ sp[(-12)+4]
 12395   0111B8  0EF8               	movlw	-8
 12396   0111BA  C02C  FFE3         	movff	btemp+11,plusw1
 12397   0111BE                     
 12398                           ;can/can.c: 1050:       mObj.byte[1] = (uint8_t)(mask->MID >> 8);
 12399                           ;stkvar	_mObj @ sp[(-12)+4]
 12400   0111BE  0EF9               	movlw	249
 12401   0111C0  24E1               	addwf	fsr1l,w,c
 12402   0111C2  6ED9               	movwf	fsr2l,c
 12403   0111C4  0EFF               	movlw	255
 12404   0111C6  20E2               	addwfc	fsr1h,w,c
 12405   0111C8  6EDA               	movwf	fsr2h,c
 12406                           
 12407                           ;stkvar	_mask @ sp[(-12)+-3]
 12408   0111CA  0EF1               	movlw	-15
 12409   0111CC  CFE3 FFE9          	movff	plusw1,fsr0l
 12410   0111D0  0EF2               	movlw	-14
 12411   0111D2  CFE3 FFEA          	movff	plusw1,fsr0h
 12412   0111D6  CFEE F029          	movff	postinc0,btemp+8
 12413   0111DA  CFEE F02A          	movff	postinc0,btemp+9
 12414   0111DE  CFEE F02B          	movff	postinc0,btemp+10
 12415   0111E2  CFEE F02C          	movff	postinc0,btemp+11
 12416   0111E6  C02A  F029         	movff	btemp+9,btemp+8
 12417   0111EA  C02B  F02A         	movff	btemp+10,btemp+9
 12418   0111EE  C02C  F02B         	movff	btemp+11,btemp+10
 12419   0111F2  6A2C               	clrf	(btemp+11)^0,c
 12420   0111F4  5029               	movf	(btemp+8)^0,w,c
 12421   0111F6  6EDF               	movwf	indf2,c
 12422   0111F8                     
 12423                           ;can/can.c: 1051:       mObj.byte[2] = (uint8_t)(mask->MID >> 16);
 12424                           ;stkvar	_mObj @ sp[(-12)+4]
 12425   0111F8  0EFA               	movlw	250
 12426   0111FA  24E1               	addwf	fsr1l,w,c
 12427   0111FC  6ED9               	movwf	fsr2l,c
 12428   0111FE  0EFF               	movlw	255
 12429   011200  20E2               	addwfc	fsr1h,w,c
 12430   011202  6EDA               	movwf	fsr2h,c
 12431                           
 12432                           ;stkvar	_mask @ sp[(-12)+-3]
 12433   011204  0EF1               	movlw	-15
 12434   011206  CFE3 FFE9          	movff	plusw1,fsr0l
 12435   01120A  0EF2               	movlw	-14
 12436   01120C  CFE3 FFEA          	movff	plusw1,fsr0h
 12437   011210  CFEE F029          	movff	postinc0,btemp+8
 12438   011214  CFEE F02A          	movff	postinc0,btemp+9
 12439   011218  CFEE F02B          	movff	postinc0,btemp+10
 12440   01121C  CFEE F02C          	movff	postinc0,btemp+11
 12441   011220  0E11               	movlw	17
 12442   011222  EF18  F089         	goto	u2640
 12443   011226                     u2645:
 12444   011226  90D8               	bcf	status,0,c
 12445   011228  322C               	rrcf	(btemp+11)^0,f,c
 12446   01122A  322B               	rrcf	(btemp+10)^0,f,c
 12447   01122C  322A               	rrcf	(btemp+9)^0,f,c
 12448   01122E  3229               	rrcf	(btemp+8)^0,f,c
 12449   011230                     u2640:
 12450   011230  2EE8               	decfsz	wreg,f,c
 12451   011232  EF13  F089         	goto	u2645
 12452   011236  5029               	movf	(btemp+8)^0,w,c
 12453   011238  6EDF               	movwf	indf2,c
 12454   01123A                     
 12455                           ;can/can.c: 1052:       mObj.byte[3] = (uint8_t)(mask->MID >> 24) | (uint8_t)(mask->MSID
      +                          11 << 5) | (uint8_t)(mask->MIDE << 6);
 12456                           ;stkvar	_mObj @ sp[(-12)+4]
 12457   01123A  0EFB               	movlw	251
 12458   01123C  24E1               	addwf	fsr1l,w,c
 12459   01123E  6ED9               	movwf	fsr2l,c
 12460   011240  0EFF               	movlw	255
 12461   011242  20E2               	addwfc	fsr1h,w,c
 12462   011244  6EDA               	movwf	fsr2h,c
 12463                           
 12464                           ;stkvar	_mask @ sp[(-12)+-3]
 12465   011246  0EF1               	movlw	-15
 12466   011248  CFE3 F02B          	movff	plusw1,btemp+10
 12467   01124C  0EF2               	movlw	-14
 12468   01124E  CFE3 F02C          	movff	plusw1,btemp+11
 12469   011252  0E05               	movlw	5
 12470   011254  242B               	addwf	(btemp+10)^0,w,c
 12471   011256  6EE9               	movwf	fsr0l,c
 12472   011258  0E00               	movlw	0
 12473   01125A  202C               	addwfc	(btemp+11)^0,w,c
 12474   01125C  6EEA               	movwf	fsr0h,c
 12475   01125E  50EF               	movf	indf0,w,c
 12476   011260  6E2C               	movwf	(btemp+11)^0,c
 12477   011262  0E06               	movlw	6
 12478   011264  6E21               	movwf	btemp^0,c
 12479   011266                     u2655:
 12480   011266  90D8               	bcf	status,0,c
 12481   011268  362C               	rlcf	(btemp+11)^0,f,c
 12482   01126A  2E21               	decfsz	btemp^0,f,c
 12483   01126C  EF33  F089         	goto	u2655
 12484                           
 12485                           ;stkvar	_mask @ sp[(-12)+-3]
 12486   011270  0EF1               	movlw	-15
 12487   011272  CFE3 F029          	movff	plusw1,btemp+8
 12488   011276  0EF2               	movlw	-14
 12489   011278  CFE3 F02A          	movff	plusw1,btemp+9
 12490   01127C  0E04               	movlw	4
 12491   01127E  2429               	addwf	(btemp+8)^0,w,c
 12492   011280  6EE9               	movwf	fsr0l,c
 12493   011282  0E00               	movlw	0
 12494   011284  202A               	addwfc	(btemp+9)^0,w,c
 12495   011286  6EEA               	movwf	fsr0h,c
 12496   011288  50EF               	movf	indf0,w,c
 12497   01128A  6E2B               	movwf	(btemp+10)^0,c
 12498   01128C  0E05               	movlw	5
 12499   01128E  6E21               	movwf	btemp^0,c
 12500   011290                     u2665:
 12501   011290  90D8               	bcf	status,0,c
 12502   011292  362B               	rlcf	(btemp+10)^0,f,c
 12503   011294  2E21               	decfsz	btemp^0,f,c
 12504   011296  EF48  F089         	goto	u2665
 12505                           
 12506                           ;stkvar	_mask @ sp[(-12)+-3]
 12507   01129A  0EF1               	movlw	-15
 12508   01129C  CFE3 FFE9          	movff	plusw1,fsr0l
 12509   0112A0  0EF2               	movlw	-14
 12510   0112A2  CFE3 FFEA          	movff	plusw1,fsr0h
 12511   0112A6  CFEE F025          	movff	postinc0,btemp+4
 12512   0112AA  CFEE F026          	movff	postinc0,btemp+5
 12513   0112AE  CFEE F027          	movff	postinc0,btemp+6
 12514   0112B2  CFEE F028          	movff	postinc0,btemp+7
 12515   0112B6  0E19               	movlw	25
 12516   0112B8  EF63  F089         	goto	u2670
 12517   0112BC                     u2675:
 12518   0112BC  90D8               	bcf	status,0,c
 12519   0112BE  3228               	rrcf	(btemp+7)^0,f,c
 12520   0112C0  3227               	rrcf	(btemp+6)^0,f,c
 12521   0112C2  3226               	rrcf	(btemp+5)^0,f,c
 12522   0112C4  3225               	rrcf	(btemp+4)^0,f,c
 12523   0112C6                     u2670:
 12524   0112C6  2EE8               	decfsz	wreg,f,c
 12525   0112C8  EF5E  F089         	goto	u2675
 12526   0112CC  5025               	movf	(btemp+4)^0,w,c
 12527   0112CE  102B               	iorwf	(btemp+10)^0,w,c
 12528   0112D0  102C               	iorwf	(btemp+11)^0,w,c
 12529   0112D2  6EDF               	movwf	indf2,c
 12530                           
 12531                           ;can/can.c: 1053:     }
 12532   0112D4  EF31  F08A         	goto	l4980
 12533   0112D8                     l4968:
 12534                           
 12535                           ;can/can.c: 1055:     {;can/can.c: 1056:       uint32_t temp32 = ((mask->MID & 0x0003FFF
      +                          F) << 11) |
 12536                           ;stkvar	_mask @ sp[(-12)+-3]
 12537   0112D8  0EF1               	movlw	-15
 12538   0112DA  CFE3 FFD9          	movff	plusw1,fsr2l
 12539   0112DE  0EF2               	movlw	-14
 12540   0112E0  CFE3 FFDA          	movff	plusw1,fsr2h
 12541   0112E4  CFDE F029          	movff	postinc2,btemp+8
 12542   0112E8  CFDE F02A          	movff	postinc2,btemp+9
 12543   0112EC  CFDE F02B          	movff	postinc2,btemp+10
 12544   0112F0  CFDE F02C          	movff	postinc2,btemp+11
 12545   0112F4  0E13               	movlw	19
 12546   0112F6  EF82  F089         	goto	u2680
 12547   0112FA                     u2685:
 12548   0112FA  90D8               	bcf	status,0,c
 12549   0112FC  322C               	rrcf	(btemp+11)^0,f,c
 12550   0112FE  322B               	rrcf	(btemp+10)^0,f,c
 12551   011300  322A               	rrcf	(btemp+9)^0,f,c
 12552   011302  3229               	rrcf	(btemp+8)^0,f,c
 12553   011304                     u2680:
 12554   011304  2EE8               	decfsz	wreg,f,c
 12555   011306  EF7D  F089         	goto	u2685
 12556   01130A  0EFF               	movlw	255
 12557   01130C  1429               	andwf	(btemp+8)^0,w,c
 12558   01130E  6E25               	movwf	(btemp+4)^0,c
 12559   011310  0E07               	movlw	7
 12560   011312  142A               	andwf	(btemp+9)^0,w,c
 12561   011314  6E26               	movwf	(btemp+5)^0,c
 12562   011316  0E00               	movlw	0
 12563   011318  142B               	andwf	(btemp+10)^0,w,c
 12564   01131A  6E27               	movwf	(btemp+6)^0,c
 12565   01131C  0E00               	movlw	0
 12566   01131E  142C               	andwf	(btemp+11)^0,w,c
 12567   011320  6E28               	movwf	(btemp+7)^0,c
 12568                           
 12569                           ;stkvar	_mask @ sp[(-12)+-3]
 12570   011322  0EF1               	movlw	-15
 12571   011324  CFE3 FFD9          	movff	plusw1,fsr2l
 12572   011328  0EF2               	movlw	-14
 12573   01132A  CFE3 FFDA          	movff	plusw1,fsr2h
 12574   01132E  0EFF               	movlw	255
 12575   011330  14DE               	andwf	postinc2,w,c
 12576   011332  6E29               	movwf	(btemp+8)^0,c
 12577   011334  0EFF               	movlw	255
 12578   011336  14DE               	andwf	postinc2,w,c
 12579   011338  6E2A               	movwf	(btemp+9)^0,c
 12580   01133A  0E03               	movlw	3
 12581   01133C  14DE               	andwf	postinc2,w,c
 12582   01133E  6E2B               	movwf	(btemp+10)^0,c
 12583   011340  0E00               	movlw	0
 12584   011342  14DE               	andwf	postinc2,w,c
 12585   011344  6E2C               	movwf	(btemp+11)^0,c
 12586   011346  0E0B               	movlw	11
 12587   011348                     u2695:
 12588   011348  90D8               	bcf	status,0,c
 12589   01134A  3629               	rlcf	(btemp+8)^0,f,c
 12590   01134C  362A               	rlcf	(btemp+9)^0,f,c
 12591   01134E  362B               	rlcf	(btemp+10)^0,f,c
 12592   011350  362C               	rlcf	(btemp+11)^0,f,c
 12593   011352  2EE8               	decfsz	wreg,f,c
 12594   011354  EFA4  F089         	goto	u2695
 12595   011358  5025               	movf	(btemp+4)^0,w,c
 12596   01135A  1029               	iorwf	(btemp+8)^0,w,c
 12597   01135C  6E21               	movwf	btemp^0,c
 12598   01135E  5026               	movf	(btemp+5)^0,w,c
 12599   011360  102A               	iorwf	(btemp+9)^0,w,c
 12600   011362  6E22               	movwf	(btemp+1)^0,c
 12601   011364  5027               	movf	(btemp+6)^0,w,c
 12602   011366  102B               	iorwf	(btemp+10)^0,w,c
 12603   011368  6E23               	movwf	(btemp+2)^0,c
 12604   01136A  5028               	movf	(btemp+7)^0,w,c
 12605   01136C  102C               	iorwf	(btemp+11)^0,w,c
 12606   01136E  6E24               	movwf	(btemp+3)^0,c
 12607                           
 12608                           ;stkvar	_temp32 @ sp[(-12)+0]
 12609   011370  0EF4               	movlw	-12
 12610   011372  C021  FFE3         	movff	btemp,plusw1
 12611   011376  0EF5               	movlw	-11
 12612   011378  C022  FFE3         	movff	btemp+1,plusw1
 12613   01137C  0EF6               	movlw	-10
 12614   01137E  C023  FFE3         	movff	btemp+2,plusw1
 12615   011382  0EF7               	movlw	-9
 12616   011384  C024  FFE3         	movff	btemp+3,plusw1
 12617   011388                     
 12618                           ;can/can.c: 1058:       temp32 = temp32 & 0x1FFFFFFF;
 12619                           ;stkvar	_temp32 @ sp[(-12)+0]
 12620   011388  50E1               	movf	fsr1l,w,c
 12621   01138A  0FF4               	addlw	-12
 12622   01138C  6ED9               	movwf	fsr2l,c
 12623   01138E  50E2               	movf	fsr1h,w,c
 12624   011390  6EDA               	movwf	fsr2h,c
 12625   011392  0EFF               	movlw	255
 12626   011394  22DA               	addwfc	fsr2h,f,c
 12627   011396  0EFF               	movlw	255
 12628   011398  16DE               	andwf	postinc2,f,c
 12629   01139A  0EFF               	movlw	255
 12630   01139C  16DE               	andwf	postinc2,f,c
 12631   01139E  0EFF               	movlw	255
 12632   0113A0  16DE               	andwf	postinc2,f,c
 12633   0113A2  0E1F               	movlw	31
 12634   0113A4  16DE               	andwf	postinc2,f,c
 12635   0113A6                     
 12636                           ;can/can.c: 1059:       mObj.byte[0] = (uint8_t)temp32;
 12637                           ;stkvar	_temp32 @ sp[(-12)+0]
 12638                           ;stkvar	_mObj @ sp[(-12)+4]
 12639   0113A6  0EF4               	movlw	-12
 12640   0113A8  CFE3 F021          	movff	plusw1,btemp
 12641   0113AC  0EF8               	movlw	-8
 12642   0113AE  C021  FFE3         	movff	btemp,plusw1
 12643   0113B2                     
 12644                           ;can/can.c: 1060:       mObj.byte[1] = (uint8_t)(temp32 >> 8);
 12645                           ;stkvar	_temp32 @ sp[(-12)+0]
 12646   0113B2  0EF5               	movlw	245
 12647   0113B4  24E1               	addwf	fsr1l,w,c
 12648   0113B6  6ED9               	movwf	fsr2l,c
 12649   0113B8  0EFF               	movlw	255
 12650   0113BA  20E2               	addwfc	fsr1h,w,c
 12651   0113BC  6EDA               	movwf	fsr2h,c
 12652                           
 12653                           ;stkvar	_mObj @ sp[(-12)+4]
 12654   0113BE  0EF9               	movlw	249
 12655   0113C0  24E1               	addwf	fsr1l,w,c
 12656   0113C2  6EE9               	movwf	fsr0l,c
 12657   0113C4  0EFF               	movlw	255
 12658   0113C6  20E2               	addwfc	fsr1h,w,c
 12659   0113C8  6EEA               	movwf	fsr0h,c
 12660   0113CA  CFDF FFEF          	movff	indf2,indf0
 12661   0113CE                     
 12662                           ;can/can.c: 1061:       mObj.byte[2] = (uint8_t)(temp32 >> 16);
 12663                           ;stkvar	_temp32 @ sp[(-12)+0]
 12664   0113CE  0EF6               	movlw	246
 12665   0113D0  24E1               	addwf	fsr1l,w,c
 12666   0113D2  6ED9               	movwf	fsr2l,c
 12667   0113D4  0EFF               	movlw	255
 12668   0113D6  20E2               	addwfc	fsr1h,w,c
 12669   0113D8  6EDA               	movwf	fsr2h,c
 12670                           
 12671                           ;stkvar	_mObj @ sp[(-12)+4]
 12672   0113DA  0EFA               	movlw	250
 12673   0113DC  24E1               	addwf	fsr1l,w,c
 12674   0113DE  6EE9               	movwf	fsr0l,c
 12675   0113E0  0EFF               	movlw	255
 12676   0113E2  20E2               	addwfc	fsr1h,w,c
 12677   0113E4  6EEA               	movwf	fsr0h,c
 12678   0113E6  CFDF FFEF          	movff	indf2,indf0
 12679   0113EA                     
 12680                           ;can/can.c: 1062:       mObj.byte[3] = (uint8_t)(temp32 >> 24) | (uint8_t)(mask->MSID11 
      +                          << 5) | (uint8_t)(mask->MIDE << 6);
 12681                           ;stkvar	_mObj @ sp[(-12)+4]
 12682   0113EA  0EFB               	movlw	251
 12683   0113EC  24E1               	addwf	fsr1l,w,c
 12684   0113EE  6ED9               	movwf	fsr2l,c
 12685   0113F0  0EFF               	movlw	255
 12686   0113F2  20E2               	addwfc	fsr1h,w,c
 12687   0113F4  6EDA               	movwf	fsr2h,c
 12688                           
 12689                           ;stkvar	_temp32 @ sp[(-12)+0]
 12690   0113F6  0EF7               	movlw	247
 12691   0113F8  24E1               	addwf	fsr1l,w,c
 12692   0113FA  6EE9               	movwf	fsr0l,c
 12693   0113FC  0EFF               	movlw	255
 12694   0113FE  20E2               	addwfc	fsr1h,w,c
 12695   011400  6EEA               	movwf	fsr0h,c
 12696   011402  50EF               	movf	indf0,w,c
 12697   011404  6E2C               	movwf	(btemp+11)^0,c
 12698                           
 12699                           ;stkvar	_mask @ sp[(-12)+-3]
 12700   011406  0EF1               	movlw	-15
 12701   011408  CFE3 F029          	movff	plusw1,btemp+8
 12702   01140C  0EF2               	movlw	-14
 12703   01140E  CFE3 F02A          	movff	plusw1,btemp+9
 12704   011412  0E05               	movlw	5
 12705   011414  2429               	addwf	(btemp+8)^0,w,c
 12706   011416  6EE9               	movwf	fsr0l,c
 12707   011418  0E00               	movlw	0
 12708   01141A  202A               	addwfc	(btemp+9)^0,w,c
 12709   01141C  6EEA               	movwf	fsr0h,c
 12710   01141E  50EF               	movf	indf0,w,c
 12711   011420  6E2B               	movwf	(btemp+10)^0,c
 12712   011422  0E06               	movlw	6
 12713   011424  6E21               	movwf	btemp^0,c
 12714   011426                     u2705:
 12715   011426  90D8               	bcf	status,0,c
 12716   011428  362B               	rlcf	(btemp+10)^0,f,c
 12717   01142A  2E21               	decfsz	btemp^0,f,c
 12718   01142C  EF13  F08A         	goto	u2705
 12719                           
 12720                           ;stkvar	_mask @ sp[(-12)+-3]
 12721   011430  0EF1               	movlw	-15
 12722   011432  CFE3 F029          	movff	plusw1,btemp+8
 12723   011436  0EF2               	movlw	-14
 12724   011438  CFE3 F02A          	movff	plusw1,btemp+9
 12725   01143C  0E04               	movlw	4
 12726   01143E  2429               	addwf	(btemp+8)^0,w,c
 12727   011440  6EE9               	movwf	fsr0l,c
 12728   011442  0E00               	movlw	0
 12729   011444  202A               	addwfc	(btemp+9)^0,w,c
 12730   011446  6EEA               	movwf	fsr0h,c
 12731   011448  50EF               	movf	indf0,w,c
 12732   01144A  6E2A               	movwf	(btemp+9)^0,c
 12733   01144C  0E05               	movlw	5
 12734   01144E  6E21               	movwf	btemp^0,c
 12735   011450                     u2715:
 12736   011450  90D8               	bcf	status,0,c
 12737   011452  362A               	rlcf	(btemp+9)^0,f,c
 12738   011454  2E21               	decfsz	btemp^0,f,c
 12739   011456  EF28  F08A         	goto	u2715
 12740   01145A  502A               	movf	(btemp+9)^0,w,c
 12741   01145C  102B               	iorwf	(btemp+10)^0,w,c
 12742   01145E  102C               	iorwf	(btemp+11)^0,w,c
 12743   011460  6EDF               	movwf	indf2,c
 12744   011462                     l4980:
 12745                           
 12746                           ;can/can.c: 1065:     a = (((0x050 +((3*4)*CAN_FIFO_TOTAL_CHANNELS))+CAN_FIFO_TOTAL_CHAN
      +                          NELS)+4) + (filter * (2*4));
 12747                           ;stkvar	_filter @ sp[(-12)+-1]
 12748   011462  0EF3               	movlw	-13
 12749   011464  50E3               	movf	plusw1,w,c
 12750   011466  0D08               	mullw	8
 12751   011468  CFF3 F02B          	movff	prodl,btemp+10
 12752   01146C  CFF4 F02C          	movff	prodh,btemp+11
 12753   011470  0EF4               	movlw	244
 12754   011472  242B               	addwf	(btemp+10)^0,w,c
 12755   011474  6E29               	movwf	(btemp+8)^0,c
 12756   011476  0E01               	movlw	1
 12757   011478  202C               	addwfc	(btemp+11)^0,w,c
 12758   01147A  6E2A               	movwf	(btemp+9)^0,c
 12759                           
 12760                           ;stkvar	_a @ sp[(-12)+10]
 12761   01147C  0EFE               	movlw	-2
 12762   01147E  C029  FFE3         	movff	btemp+8,plusw1
 12763   011482  0EFF               	movlw	-1
 12764   011484  C02A  FFE3         	movff	btemp+9,plusw1
 12765   011488                     
 12766                           ;stkvar	_mObj @ sp[(-12)+4]
 12767   011488  0EF8               	movlw	-8
 12768   01148A  CFE3 FFE6          	movff	plusw1,postinc1
 12769   01148E  CFE3 FFE6          	movff	plusw1,postinc1
 12770   011492  CFE3 FFE6          	movff	plusw1,postinc1
 12771   011496  CFE3 FFE6          	movff	plusw1,postinc1
 12772                           
 12773                           ;stkvar	_a @ sp[(-16)+10]
 12774   01149A  0EFA               	movlw	-6
 12775   01149C  CFE3 FFE6          	movff	plusw1,postinc1
 12776   0114A0  CFE3 FFE6          	movff	plusw1,postinc1
 12777   0114A4  ECF1  F09B         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 12778   0114A8                     
 12779                           ; _DRV_CANFDSPI_FilterMaskConfigure: autosize = 12, savesize = 0, parsavesize = 0, temps
      +                          ize = 0 parsize = 4, argsize = 4, vargsize = 0
 12780   0114A8  0EF0               	movlw	240
 12781   0114AA  26E1               	addwf	fsr1l,f,c
 12782   0114AC  0EFF               	movlw	255
 12783   0114AE  22E2               	addwfc	fsr1h,f,c
 12784   0114B0  0012               	return		;funcret
 12785   0114B2                     __end_of_DRV_CANFDSPI_FilterMaskConfigure:
 12786                           	callstack 0
 12787                           
 12788 ;; *************** function _DRV_CANFDSPI_FilterDisable *****************
 12789 ;; Defined at:
 12790 ;;		line 1121 in file "can/can.c"
 12791 ;; Parameters:    Size  Location     Type
 12792 ;;  filter          1  [STACK] enum E5322
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;  a               2  [STACK] unsigned short 
 12795 ;;  spiTransferE    1  [STACK] char 
 12796 ;;  fCtrl           1  [STACK] struct _REG_CiFLTCON_BYT
 12797 ;; Return value:  Size  Location     Type
 12798 ;;                  1  [STACK] char 
 12799 ;; Registers used:
 12800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 12801 ;; Tracked objects:
 12802 ;;		On entry : 0/0
 12803 ;;		On exit  : 0/0
 12804 ;;		Unchanged: 0/0
 12805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12810 ;;Total ram usage:        0 bytes
 12811 ;; Hardware stack levels used: 1
 12812 ;; Hardware stack levels required when called: 9
 12813 ;; This function calls:
 12814 ;;		_DRV_CANFDSPI_ReadByte
 12815 ;;		_DRV_CANFDSPI_WriteByte
 12816 ;; This function is called by:
 12817 ;;		_CanSetFilter
 12818 ;; This function uses a reentrant model
 12819 ;;
 12820                           
 12821                           	psect	text46
 12822   0141DA                     __ptext46:
 12823                           	callstack 0
 12824   0141DA                     _DRV_CANFDSPI_FilterDisable:
 12825                           	callstack 0
 12826                           
 12827                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12828   0141DA  52E6               	movf	postinc1,f,c
 12829   0141DC  52E6               	movf	postinc1,f,c
 12830   0141DE  52E6               	movf	postinc1,f,c
 12831   0141E0  52E6               	movf	postinc1,f,c
 12832   0141E2                     
 12833                           ;can/can.c: 1128:     a = (0x050 +((3*4)*CAN_FIFO_TOTAL_CHANNELS)) + filter;
 12834                           ;stkvar	_filter @ sp[(-4)+-1]
 12835   0141E2  0EFB               	movlw	-5
 12836   0141E4  CFE3 F02C          	movff	plusw1,btemp+11
 12837   0141E8  0ED0               	movlw	208
 12838   0141EA  242C               	addwf	(btemp+11)^0,w,c
 12839   0141EC  6E29               	movwf	(btemp+8)^0,c
 12840   0141EE  6A2A               	clrf	(btemp+9)^0,c
 12841   0141F0  0E01               	movlw	1
 12842   0141F2  222A               	addwfc	(btemp+9)^0,f,c
 12843                           
 12844                           ;stkvar	_a @ sp[(-4)+0]
 12845   0141F4  0EFC               	movlw	-4
 12846   0141F6  C029  FFE3         	movff	btemp+8,plusw1
 12847   0141FA  0EFD               	movlw	-3
 12848   0141FC  C02A  FFE3         	movff	btemp+9,plusw1
 12849   014200                     
 12850                           ;can/can.c: 1130:     spiTransferError = DRV_CANFDSPI_ReadByte( a, &fCtrl.byte);
 12851                           ;stkvar	_fCtrl @ sp[(-4)+3]
 12852   014200  0EFF               	movlw	255
 12853   014202  24E1               	addwf	fsr1l,w,c
 12854   014204  6E21               	movwf	btemp^0,c
 12855   014206  0EFF               	movlw	255
 12856   014208  20E2               	addwfc	fsr1h,w,c
 12857   01420A  6E22               	movwf	(btemp+1)^0,c
 12858   01420C  C021  FFE6         	movff	btemp,postinc1
 12859   014210  C022  FFE6         	movff	btemp+1,postinc1
 12860                           
 12861                           ;stkvar	_a @ sp[(-6)+0]
 12862   014214  0EFA               	movlw	-6
 12863   014216  CFE3 FFE6          	movff	plusw1,postinc1
 12864   01421A  CFE3 FFE6          	movff	plusw1,postinc1
 12865   01421E  EC94  F0A2         	call	_DRV_CANFDSPI_ReadByte	;wreg free
 12866                           
 12867                           ;stkvar	_spiTransferError @ sp[(-4)+2]
 12868   014222  0EFE               	movlw	-2
 12869   014224  C021  FFE3         	movff	btemp,plusw1
 12870   014228                     
 12871                           ;can/can.c: 1131:     if (spiTransferError) {
 12872                           ;stkvar	_spiTransferError @ sp[(-4)+2]
 12873   014228  0EFE               	movlw	-2
 12874   01422A  50E3               	movf	plusw1,w,c
 12875   01422C  B4D8               	btfsc	status,2,c
 12876   01422E  EF1B  F0A1         	goto	u2531
 12877   014232  EF1D  F0A1         	goto	u2530
 12878   014236                     u2531:
 12879   014236  EF1F  F0A1         	goto	l4914
 12880   01423A                     u2530:
 12881   01423A  EF31  F0A1         	goto	l336
 12882   01423E                     l4914:
 12883                           
 12884                           ;can/can.c: 1136:     fCtrl.bF.Enable = 0;
 12885                           ;stkvar	_fCtrl @ sp[(-4)+3]
 12886   01423E  50E1               	movf	fsr1l,w,c
 12887   014240  0FFF               	addlw	-1
 12888   014242  6ED9               	movwf	fsr2l,c
 12889   014244  50E2               	movf	fsr1h,w,c
 12890   014246  6EDA               	movwf	fsr2h,c
 12891   014248  0EFF               	movlw	255
 12892   01424A  22DA               	addwfc	fsr2h,f,c
 12893   01424C  9EDF               	bcf	indf2,7,c
 12894   01424E                     
 12895                           ;stkvar	_fCtrl @ sp[(-4)+3]
 12896   01424E  0EFF               	movlw	-1
 12897   014250  50E3               	movf	plusw1,w,c
 12898   014252  6EE6               	movwf	postinc1,c
 12899                           
 12900                           ;stkvar	_a @ sp[(-5)+0]
 12901   014254  0EFB               	movlw	-5
 12902   014256  CFE3 FFE6          	movff	plusw1,postinc1
 12903   01425A  CFE3 FFE6          	movff	plusw1,postinc1
 12904   01425E  EC21  F0A3         	call	_DRV_CANFDSPI_WriteByte	;wreg free
 12905   014262                     l336:
 12906                           
 12907                           ; _DRV_CANFDSPI_FilterDisable: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0
      +                           parsize = 1, argsize = 1, vargsize = 0
 12908   014262  0EFB               	movlw	251
 12909   014264  26E1               	addwf	fsr1l,f,c
 12910   014266  0EFF               	movlw	255
 12911   014268  22E2               	addwfc	fsr1h,f,c
 12912   01426A  0012               	return		;funcret
 12913   01426C                     __end_of_DRV_CANFDSPI_FilterDisable:
 12914                           	callstack 0
 12915                           
 12916 ;; *************** function _CanInit *****************
 12917 ;; Defined at:
 12918 ;;		line 156 in file "can/can.c"
 12919 ;; Parameters:    Size  Location     Type
 12920 ;;  bitTime         1  [STACK] enum E5604
 12921 ;;  withISR         1  [STACK] _Bool 
 12922 ;; Auto vars:     Size  Location     Type
 12923 ;;  txqConfig       4  [STACK] struct _CAN_TX_QUEUE_CON
 12924 ;;  config          3  [STACK] struct _CAN_CONFIG
 12925 ;;  rxfConfig       3  [STACK] struct _CAN_RX_FIFO_CONF
 12926 ;;  txfConfig       2  [STACK] struct _CAN_TX_FIFO_CONF
 12927 ;;  tefConfig       1  [STACK] struct _CAN_TEF_CONFIG
 12928 ;; Return value:  Size  Location     Type
 12929 ;;                  1  [STACK] void 
 12930 ;; Registers used:
 12931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 12932 ;; Tracked objects:
 12933 ;;		On entry : 0/0
 12934 ;;		On exit  : 0/0
 12935 ;;		Unchanged: 0/0
 12936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12941 ;;Total ram usage:        0 bytes
 12942 ;; Hardware stack levels used: 1
 12943 ;; Hardware stack levels required when called: 10
 12944 ;; This function calls:
 12945 ;;		_DRV_CANFDSPI_BitTimeConfigureNominal40MHz
 12946 ;;		_DRV_CANFDSPI_Configure
 12947 ;;		_DRV_CANFDSPI_ConfigureObjectReset
 12948 ;;		_DRV_CANFDSPI_ModuleEventEnable
 12949 ;;		_DRV_CANFDSPI_OperationModeSelect
 12950 ;;		_DRV_CANFDSPI_ReceiveChannelConfigure
 12951 ;;		_DRV_CANFDSPI_Reset
 12952 ;;		_DRV_CANFDSPI_TefConfigure
 12953 ;;		_DRV_CANFDSPI_TimeStampEnable
 12954 ;;		_DRV_CANFDSPI_TimeStampPrescalerSet
 12955 ;;		_DRV_CANFDSPI_TimeStampSet
 12956 ;;		_DRV_CANFDSPI_TransmitChannelConfigure
 12957 ;;		_DRV_CANFDSPI_TransmitChannelConfigureObjectReset
 12958 ;;		_DRV_CANFDSPI_TransmitQueueConfigure
 12959 ;;		_DRV_CANFDSPI_TransmitQueueConfigureObjectReset
 12960 ;; This function is called by:
 12961 ;;		_main
 12962 ;; This function uses a reentrant model
 12963 ;;
 12964                           
 12965                           	psect	text47
 12966   0120A6                     __ptext47:
 12967                           	callstack 0
 12968   0120A6                     _CanInit:
 12969                           	callstack 0
 12970                           
 12971                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12972   0120A6  0E0D               	movlw	13
 12973   0120A8  26E1               	addwf	fsr1l,f,c
 12974   0120AA  0E00               	movlw	0
 12975   0120AC  22E2               	addwfc	fsr1h,f,c
 12976   0120AE                     
 12977                           ;can/can.c: 156: void CanInit(CAN_BITTIME_SETUP bitTime, _Bool withISR);can/can.c: 157: 
      +                          {;can/can.c: 158:   TRISGbits.TRISG4 = 0;
 12978   0120AE  9898               	bcf	152,4,c	;volatile
 12979                           
 12980                           ;can/can.c: 159:   LATGbits.LATG4 = 1;
 12981   0120B0  888F               	bsf	143,4,c	;volatile
 12982   0120B2                     
 12983                           ;can/can.c: 160:   DRV_CANFDSPI_Reset();
 12984   0120B2  EC39  F0A4         	call	_DRV_CANFDSPI_Reset	;wreg free
 12985   0120B6                     
 12986                           ;can/can.c: 161:   DRV_CANFDSPI_BitTimeConfigureNominal40MHz(bitTime);
 12987                           ;stkvar	_bitTime @ sp[(-13)+-1]
 12988   0120B6  0EF2               	movlw	-14
 12989   0120B8  50E3               	movf	plusw1,w,c
 12990   0120BA  6EE6               	movwf	postinc1,c
 12991   0120BC  EC0C  F08E         	call	_DRV_CANFDSPI_BitTimeConfigureNominal40MHz	;wreg free
 12992   0120C0                     
 12993                           ;can/can.c: 163:     CAN_CONFIG config;;can/can.c: 164:     DRV_CANFDSPI_ConfigureObject
      +                          Reset(&config);
 12994                           ;stkvar	_config @ sp[(-13)+4]
 12995   0120C0  0EF7               	movlw	247
 12996   0120C2  24E1               	addwf	fsr1l,w,c
 12997   0120C4  6E21               	movwf	btemp^0,c
 12998   0120C6  0EFF               	movlw	255
 12999   0120C8  20E2               	addwfc	fsr1h,w,c
 13000   0120CA  6E22               	movwf	(btemp+1)^0,c
 13001   0120CC  C021  FFE6         	movff	btemp,postinc1
 13002   0120D0  C022  FFE6         	movff	btemp+1,postinc1
 13003   0120D4  ECDD  F08C         	call	_DRV_CANFDSPI_ConfigureObjectReset	;wreg free
 13004   0120D8                     
 13005                           ;can/can.c: 165:     config.IsoCrcEnable = 1;
 13006                           ;stkvar	_config @ sp[(-13)+4]
 13007   0120D8  50E1               	movf	fsr1l,w,c
 13008   0120DA  0FF7               	addlw	-9
 13009   0120DC  6ED9               	movwf	fsr2l,c
 13010   0120DE  50E2               	movf	fsr1h,w,c
 13011   0120E0  6EDA               	movwf	fsr2h,c
 13012   0120E2  0EFF               	movlw	255
 13013   0120E4  22DA               	addwfc	fsr2h,f,c
 13014   0120E6  8ADF               	bsf	indf2,5,c
 13015   0120E8                     
 13016                           ;can/can.c: 166:     config.StoreInTEF = 1;
 13017                           ;stkvar	_config @ sp[(-13)+4]
 13018   0120E8  0EF8               	movlw	248
 13019   0120EA  24E1               	addwf	fsr1l,w,c
 13020   0120EC  6ED9               	movwf	fsr2l,c
 13021   0120EE  0EFF               	movlw	255
 13022   0120F0  20E2               	addwfc	fsr1h,w,c
 13023   0120F2  6EDA               	movwf	fsr2h,c
 13024   0120F4  8CDF               	bsf	indf2,6,c
 13025   0120F6                     
 13026                           ;can/can.c: 167:     config.TXQEnable = 1;
 13027                           ;stkvar	_config @ sp[(-13)+4]
 13028   0120F6  0EF8               	movlw	248
 13029   0120F8  24E1               	addwf	fsr1l,w,c
 13030   0120FA  6ED9               	movwf	fsr2l,c
 13031   0120FC  0EFF               	movlw	255
 13032   0120FE  20E2               	addwfc	fsr1h,w,c
 13033   012100  6EDA               	movwf	fsr2h,c
 13034   012102  8EDF               	bsf	indf2,7,c
 13035   012104                     
 13036                           ;can/can.c: 168:     DRV_CANFDSPI_Configure(&config);
 13037                           ;stkvar	_config @ sp[(-13)+4]
 13038   012104  0EF7               	movlw	247
 13039   012106  24E1               	addwf	fsr1l,w,c
 13040   012108  6E21               	movwf	btemp^0,c
 13041   01210A  0EFF               	movlw	255
 13042   01210C  20E2               	addwfc	fsr1h,w,c
 13043   01210E  6E22               	movwf	(btemp+1)^0,c
 13044   012110  C021  FFE6         	movff	btemp,postinc1
 13045   012114  C022  FFE6         	movff	btemp+1,postinc1
 13046   012118  EC9D  F08B         	call	_DRV_CANFDSPI_Configure	;wreg free
 13047   01211C                     
 13048                           ;can/can.c: 172:     CAN_TEF_CONFIG tefConfig;;can/can.c: 173:     tefConfig.FifoSize = 
      +                          11;
 13049                           ;stkvar	_tefConfig @ sp[(-13)+12]
 13050   01211C  50E1               	movf	fsr1l,w,c
 13051   01211E  0FFF               	addlw	-1
 13052   012120  6ED9               	movwf	fsr2l,c
 13053   012122  50E2               	movf	fsr1h,w,c
 13054   012124  6EDA               	movwf	fsr2h,c
 13055   012126  0EFF               	movlw	255
 13056   012128  22DA               	addwfc	fsr2h,f,c
 13057   01212A  50DF               	movf	223,w,c
 13058   01212C  0BC1               	andlw	-63
 13059   01212E  0916               	iorlw	22
 13060   012130  6EDF               	movwf	223,c
 13061   012132                     
 13062                           ;can/can.c: 174:     tefConfig.TimeStampEnable = 1;
 13063                           ;stkvar	_tefConfig @ sp[(-13)+12]
 13064   012132  50E1               	movf	fsr1l,w,c
 13065   012134  0FFF               	addlw	-1
 13066   012136  6ED9               	movwf	fsr2l,c
 13067   012138  50E2               	movf	fsr1h,w,c
 13068   01213A  6EDA               	movwf	fsr2h,c
 13069   01213C  0EFF               	movlw	255
 13070   01213E  22DA               	addwfc	fsr2h,f,c
 13071   012140  80DF               	bsf	indf2,0,c
 13072   012142                     
 13073                           ;can/can.c: 175:     DRV_CANFDSPI_TefConfigure(&tefConfig);
 13074                           ;stkvar	_tefConfig @ sp[(-13)+12]
 13075   012142  0EFF               	movlw	255
 13076   012144  24E1               	addwf	fsr1l,w,c
 13077   012146  6E21               	movwf	btemp^0,c
 13078   012148  0EFF               	movlw	255
 13079   01214A  20E2               	addwfc	fsr1h,w,c
 13080   01214C  6E22               	movwf	(btemp+1)^0,c
 13081   01214E  C021  FFE6         	movff	btemp,postinc1
 13082   012152  C022  FFE6         	movff	btemp+1,postinc1
 13083   012156  ECF0  F09D         	call	_DRV_CANFDSPI_TefConfigure	;wreg free
 13084   01215A                     
 13085                           ;can/can.c: 178:     CAN_TX_QUEUE_CONFIG txqConfig;;can/can.c: 179:     DRV_CANFDSPI_Tra
      +                          nsmitQueueConfigureObjectReset(&txqConfig);
 13086                           ;stkvar	_txqConfig @ sp[(-13)+0]
 13087   01215A  0EF3               	movlw	243
 13088   01215C  24E1               	addwf	fsr1l,w,c
 13089   01215E  6E21               	movwf	btemp^0,c
 13090   012160  0EFF               	movlw	255
 13091   012162  20E2               	addwfc	fsr1h,w,c
 13092   012164  6E22               	movwf	(btemp+1)^0,c
 13093   012166  C021  FFE6         	movff	btemp,postinc1
 13094   01216A  C022  FFE6         	movff	btemp+1,postinc1
 13095   01216E  EC22  F09A         	call	_DRV_CANFDSPI_TransmitQueueConfigureObjectReset	;wreg free
 13096   012172                     
 13097                           ;can/can.c: 180:     txqConfig.TxPriority =1;
 13098                           ;stkvar	_txqConfig @ sp[(-13)+0]
 13099   012172  0EF3               	movlw	-13
 13100   012174  6AE3               	clrf	plusw1,c
 13101   012176  2AE3               	incf	plusw1,f,c
 13102   012178                     
 13103                           ;can/can.c: 181:     txqConfig.FifoSize = 7;
 13104                           ;stkvar	_txqConfig @ sp[(-13)+0]
 13105   012178  0EF5               	movlw	245
 13106   01217A  24E1               	addwf	fsr1l,w,c
 13107   01217C  6ED9               	movwf	fsr2l,c
 13108   01217E  0EFF               	movlw	255
 13109   012180  20E2               	addwfc	fsr1h,w,c
 13110   012182  6EDA               	movwf	fsr2h,c
 13111   012184  0E07               	movlw	7
 13112   012186  6EDF               	movwf	indf2,c
 13113   012188                     
 13114                           ;can/can.c: 182:     txqConfig.PayLoadSize = CAN_PLSIZE_32;
 13115                           ;stkvar	_txqConfig @ sp[(-13)+0]
 13116   012188  0EF6               	movlw	246
 13117   01218A  24E1               	addwf	fsr1l,w,c
 13118   01218C  6ED9               	movwf	fsr2l,c
 13119   01218E  0EFF               	movlw	255
 13120   012190  20E2               	addwfc	fsr1h,w,c
 13121   012192  6EDA               	movwf	fsr2h,c
 13122   012194  0E05               	movlw	5
 13123   012196  6EDF               	movwf	indf2,c
 13124   012198                     
 13125                           ;can/can.c: 183:     DRV_CANFDSPI_TransmitQueueConfigure(&txqConfig);
 13126                           ;stkvar	_txqConfig @ sp[(-13)+0]
 13127   012198  0EF3               	movlw	243
 13128   01219A  24E1               	addwf	fsr1l,w,c
 13129   01219C  6E21               	movwf	btemp^0,c
 13130   01219E  0EFF               	movlw	255
 13131   0121A0  20E2               	addwfc	fsr1h,w,c
 13132   0121A2  6E22               	movwf	(btemp+1)^0,c
 13133   0121A4  C021  FFE6         	movff	btemp,postinc1
 13134   0121A8  C022  FFE6         	movff	btemp+1,postinc1
 13135   0121AC  EC54  F097         	call	_DRV_CANFDSPI_TransmitQueueConfigure	;wreg free
 13136   0121B0                     
 13137                           ;can/can.c: 186:     CAN_TX_FIFO_CONFIG txfConfig;;can/can.c: 187:     DRV_CANFDSPI_Tran
      +                          smitChannelConfigureObjectReset(&txfConfig);
 13138                           ;stkvar	_txfConfig @ sp[(-13)+10]
 13139   0121B0  0EFD               	movlw	253
 13140   0121B2  24E1               	addwf	fsr1l,w,c
 13141   0121B4  6E21               	movwf	btemp^0,c
 13142   0121B6  0EFF               	movlw	255
 13143   0121B8  20E2               	addwfc	fsr1h,w,c
 13144   0121BA  6E22               	movwf	(btemp+1)^0,c
 13145   0121BC  C021  FFE6         	movff	btemp,postinc1
 13146   0121C0  C022  FFE6         	movff	btemp+1,postinc1
 13147   0121C4  ECF4  F097         	call	_DRV_CANFDSPI_TransmitChannelConfigureObjectReset	;wreg free
 13148   0121C8                     
 13149                           ;can/can.c: 188:     txfConfig.FifoSize = 4;
 13150                           ;stkvar	_txfConfig @ sp[(-13)+10]
 13151   0121C8  0EFE               	movlw	254
 13152   0121CA  24E1               	addwf	fsr1l,w,c
 13153   0121CC  6ED9               	movwf	fsr2l,c
 13154   0121CE  0EFF               	movlw	255
 13155   0121D0  20E2               	addwfc	fsr1h,w,c
 13156   0121D2  6EDA               	movwf	fsr2h,c
 13157   0121D4  50DF               	movf	223,w,c
 13158   0121D6  0BE0               	andlw	-32
 13159   0121D8  0904               	iorlw	4
 13160   0121DA  6EDF               	movwf	223,c
 13161   0121DC                     
 13162                           ;can/can.c: 189:     txfConfig.PayLoadSize = CAN_PLSIZE_64;
 13163                           ;stkvar	_txfConfig @ sp[(-13)+10]
 13164   0121DC  0EFE               	movlw	254
 13165   0121DE  24E1               	addwf	fsr1l,w,c
 13166   0121E0  6ED9               	movwf	fsr2l,c
 13167   0121E2  0EFF               	movlw	255
 13168   0121E4  20E2               	addwfc	fsr1h,w,c
 13169   0121E6  6EDA               	movwf	fsr2h,c
 13170   0121E8  0EE0               	movlw	224
 13171   0121EA  12DF               	iorwf	223,f,c
 13172   0121EC                     
 13173                           ;can/can.c: 190:     txfConfig.TxPriority = 0;
 13174                           ;stkvar	_txfConfig @ sp[(-13)+10]
 13175   0121EC  50E1               	movf	fsr1l,w,c
 13176   0121EE  0FFD               	addlw	-3
 13177   0121F0  6ED9               	movwf	fsr2l,c
 13178   0121F2  50E2               	movf	fsr1h,w,c
 13179   0121F4  6EDA               	movwf	fsr2h,c
 13180   0121F6  0EFF               	movlw	255
 13181   0121F8  22DA               	addwfc	fsr2h,f,c
 13182   0121FA  0EC1               	movlw	-63
 13183   0121FC  16DF               	andwf	223,f,c
 13184   0121FE                     
 13185                           ;can/can.c: 191:     DRV_CANFDSPI_TransmitChannelConfigure(CAN_FIFO_CH1,&txfConfig);
 13186                           ;stkvar	_txfConfig @ sp[(-13)+10]
 13187   0121FE  0EFD               	movlw	253
 13188   012200  24E1               	addwf	fsr1l,w,c
 13189   012202  6E21               	movwf	btemp^0,c
 13190   012204  0EFF               	movlw	255
 13191   012206  20E2               	addwfc	fsr1h,w,c
 13192   012208  6E22               	movwf	(btemp+1)^0,c
 13193   01220A  C021  FFE6         	movff	btemp,postinc1
 13194   01220E  C022  FFE6         	movff	btemp+1,postinc1
 13195   012212  0E01               	movlw	1
 13196   012214  6EE6               	movwf	postinc1,c
 13197   012216  ECE3  F093         	call	_DRV_CANFDSPI_TransmitChannelConfigure	;wreg free
 13198   01221A                     
 13199                           ;can/can.c: 194:     CAN_RX_FIFO_CONFIG rxfConfig;;can/can.c: 195:     rxfConfig.FifoSiz
      +                          e = 15;
 13200                           ;stkvar	_rxfConfig @ sp[(-13)+7]
 13201   01221A  0EFB               	movlw	251
 13202   01221C  24E1               	addwf	fsr1l,w,c
 13203   01221E  6ED9               	movwf	fsr2l,c
 13204   012220  0EFF               	movlw	255
 13205   012222  20E2               	addwfc	fsr1h,w,c
 13206   012224  6EDA               	movwf	fsr2h,c
 13207   012226  0E0F               	movlw	15
 13208   012228  6EDF               	movwf	indf2,c
 13209   01222A                     
 13210                           ;can/can.c: 196:     rxfConfig.PayLoadSize = CAN_PLSIZE_64;
 13211                           ;stkvar	_rxfConfig @ sp[(-13)+7]
 13212   01222A  0EFC               	movlw	252
 13213   01222C  24E1               	addwf	fsr1l,w,c
 13214   01222E  6ED9               	movwf	fsr2l,c
 13215   012230  0EFF               	movlw	255
 13216   012232  20E2               	addwfc	fsr1h,w,c
 13217   012234  6EDA               	movwf	fsr2h,c
 13218   012236  0E07               	movlw	7
 13219   012238  6EDF               	movwf	indf2,c
 13220   01223A                     
 13221                           ;can/can.c: 197:     rxfConfig.RxTimeStampEnable = 1;
 13222                           ;stkvar	_rxfConfig @ sp[(-13)+7]
 13223   01223A  0EFA               	movlw	-6
 13224   01223C  6AE3               	clrf	plusw1,c
 13225   01223E  2AE3               	incf	plusw1,f,c
 13226   012240                     
 13227                           ;can/can.c: 198:     DRV_CANFDSPI_ReceiveChannelConfigure(CAN_FIFO_CH2,&rxfConfig);
 13228                           ;stkvar	_rxfConfig @ sp[(-13)+7]
 13229   012240  0EFA               	movlw	250
 13230   012242  24E1               	addwf	fsr1l,w,c
 13231   012244  6E21               	movwf	btemp^0,c
 13232   012246  0EFF               	movlw	255
 13233   012248  20E2               	addwfc	fsr1h,w,c
 13234   01224A  6E22               	movwf	(btemp+1)^0,c
 13235   01224C  C021  FFE6         	movff	btemp,postinc1
 13236   012250  C022  FFE6         	movff	btemp+1,postinc1
 13237   012254  0E02               	movlw	2
 13238   012256  6EE6               	movwf	postinc1,c
 13239   012258  ECB3  F096         	call	_DRV_CANFDSPI_ReceiveChannelConfigure	;wreg free
 13240   01225C                     
 13241                           ;can/can.c: 200:     DRV_CANFDSPI_TimeStampPrescalerSet(39);
 13242   01225C  0E27               	movlw	39
 13243   01225E  6EE6               	movwf	postinc1,c
 13244   012260  0E00               	movlw	0
 13245   012262  6EE6               	movwf	postinc1,c
 13246   012264  EC87  F0A4         	call	_DRV_CANFDSPI_TimeStampPrescalerSet	;wreg free
 13247   012268                     
 13248                           ;can/can.c: 201:     DRV_CANFDSPI_TimeStampSet(0);
 13249   012268  0E00               	movlw	0
 13250   01226A  6EE6               	movwf	postinc1,c
 13251   01226C  0E00               	movlw	0
 13252   01226E  6EE6               	movwf	postinc1,c
 13253   012270  0E00               	movlw	0
 13254   012272  6EE6               	movwf	postinc1,c
 13255   012274  0E00               	movlw	0
 13256   012276  6EE6               	movwf	postinc1,c
 13257   012278  EC4F  F0A4         	call	_DRV_CANFDSPI_TimeStampSet	;wreg free
 13258   01227C                     
 13259                           ;can/can.c: 202:     DRV_CANFDSPI_TimeStampEnable();
 13260   01227C  ECC5  F0A2         	call	_DRV_CANFDSPI_TimeStampEnable	;wreg free
 13261   012280                     
 13262                           ;can/can.c: 209:     if(withISR == 1)
 13263                           ;stkvar	_withISR @ sp[(-13)+-2]
 13264   012280  0EF1               	movlw	-15
 13265   012282  04E3               	decf	plusw1,w,c
 13266   012284  A4D8               	btfss	status,2,c
 13267   012286  EF47  F091         	goto	u2901
 13268   01228A  EF49  F091         	goto	u2900
 13269   01228E                     u2901:
 13270   01228E  EF51  F091         	goto	l5220
 13271   012292                     u2900:
 13272   012292                     
 13273                           ;can/can.c: 210:     {;can/can.c: 211:         DRV_CANFDSPI_ModuleEventEnable(0,CAN_RX_E
      +                          VENT);
 13274   012292  0E02               	movlw	2
 13275   012294  6EE6               	movwf	postinc1,c
 13276   012296  0E00               	movlw	0
 13277   012298  6EE6               	movwf	postinc1,c
 13278   01229A  0E00               	movlw	0
 13279   01229C  6EE6               	movwf	postinc1,c
 13280   01229E  EC62  F0A2         	call	_DRV_CANFDSPI_ModuleEventEnable	;wreg free
 13281   0122A2                     l5220:
 13282                           
 13283                           ;can/can.c: 214:     DRV_CANFDSPI_OperationModeSelect(CAN_CLASSIC_MODE);
 13284   0122A2  0E06               	movlw	6
 13285   0122A4  6EE6               	movwf	postinc1,c
 13286   0122A6  EC7E  F0A1         	call	_DRV_CANFDSPI_OperationModeSelect	;wreg free
 13287   0122AA                     
 13288                           ; _CanInit: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 13289   0122AA  0EF1               	movlw	241
 13290   0122AC  26E1               	addwf	fsr1l,f,c
 13291   0122AE  0EFF               	movlw	255
 13292   0122B0  22E2               	addwfc	fsr1h,f,c
 13293   0122B2  0012               	return		;funcret
 13294   0122B4                     __end_of_CanInit:
 13295                           	callstack 0
 13296                           
 13297 ;; *************** function _DRV_CANFDSPI_TransmitQueueConfigureObjectReset *****************
 13298 ;; Defined at:
 13299 ;;		line 693 in file "can/can.c"
 13300 ;; Parameters:    Size  Location     Type
 13301 ;;  config          2  [STACK] PTR struct _CAN_TX_QUEUE
 13302 ;;		 -> txqConfig(4), 
 13303 ;; Auto vars:     Size  Location     Type
 13304 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
 13305 ;; Return value:  Size  Location     Type
 13306 ;;                  1  [STACK] char 
 13307 ;; Registers used:
 13308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru
 13309 ;; Tracked objects:
 13310 ;;		On entry : 0/0
 13311 ;;		On exit  : 0/0
 13312 ;;		Unchanged: 0/0
 13313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13318 ;;Total ram usage:        0 bytes
 13319 ;; Hardware stack levels used: 1
 13320 ;; Hardware stack levels required when called: 7
 13321 ;; This function calls:
 13322 ;;		Nothing
 13323 ;; This function is called by:
 13324 ;;		_CanInit
 13325 ;; This function uses a reentrant model
 13326 ;;
 13327                           
 13328                           	psect	text48
 13329   013444                     __ptext48:
 13330                           	callstack 0
 13331   013444                     _DRV_CANFDSPI_TransmitQueueConfigureObjectReset:
 13332                           	callstack 0
 13333                           
 13334                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13335   013444  0E05               	movlw	5
 13336   013446  26E1               	addwf	fsr1l,f,c
 13337   013448  0E00               	movlw	0
 13338   01344A  22E2               	addwfc	fsr1h,f,c
 13339   01344C                     
 13340                           ;can/can.c: 693: int8_t DRV_CANFDSPI_TransmitQueueConfigureObjectReset(CAN_TX_QUEUE_CONF
      +                          IG* config);can/can.c: 694: {;can/can.c: 695:     REG_CiFIFOCON ciFifoCon;;can/can.c: 69
      +                          6:     ciFifoCon.word = canFifoResetValues[0];
 13341   01344C  0EDD               	movlw	low _canFifoResetValues
 13342   01344E  6EF6               	movwf	tblptrl,c
 13343   013450                     	if	1	;There is more than 1 active tblptr byte
 13344   013450  0EFF               	movlw	high _canFifoResetValues
 13345   013452  6EF7               	movwf	tblptrh,c
 13346   013454                     	endif
 13347   013454                     	if	1	;There are 3 active tblptr bytes
 13348   013454  0E00               	movlw	low (_canFifoResetValues shr (0+16))
 13349   013456  6EF8               	movwf	tblptru,c
 13350   013458                     	endif
 13351   013458  0009               	tblrd		*+
 13352   01345A  CFF5 F029          	movff	tablat,btemp+8
 13353   01345E  0009               	tblrd		*+
 13354   013460  CFF5 F02A          	movff	tablat,btemp+9
 13355   013464  0009               	tblrd		*+
 13356   013466  CFF5 F02B          	movff	tablat,btemp+10
 13357   01346A  0009               	tblrd		*+
 13358   01346C  CFF5 F02C          	movff	tablat,btemp+11
 13359                           
 13360                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13361   013470  0EFB               	movlw	-5
 13362   013472  C029  FFE3         	movff	btemp+8,plusw1
 13363   013476  0EFC               	movlw	-4
 13364   013478  C02A  FFE3         	movff	btemp+9,plusw1
 13365   01347C  0EFD               	movlw	-3
 13366   01347E  C02B  FFE3         	movff	btemp+10,plusw1
 13367   013482  0EFE               	movlw	-2
 13368   013484  C02C  FFE3         	movff	btemp+11,plusw1
 13369   013488                     
 13370                           ;can/can.c: 698:     config->TxPriority = ciFifoCon.txBF.TxPriority;
 13371                           ;stkvar	_config @ sp[(-5)+-2]
 13372   013488  0EF9               	movlw	-7
 13373   01348A  CFE3 FFD9          	movff	plusw1,fsr2l
 13374   01348E  0EFA               	movlw	-6
 13375   013490  CFE3 FFDA          	movff	plusw1,fsr2h
 13376                           
 13377                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13378   013494  0EFD               	movlw	253
 13379   013496  24E1               	addwf	fsr1l,w,c
 13380   013498  6EE9               	movwf	fsr0l,c
 13381   01349A  0EFF               	movlw	255
 13382   01349C  20E2               	addwfc	fsr1h,w,c
 13383   01349E  6EEA               	movwf	fsr0h,c
 13384   0134A0  50EF               	movf	239,w,c
 13385   0134A2  0B1F               	andlw	31
 13386   0134A4  6EDF               	movwf	indf2,c
 13387   0134A6                     
 13388                           ;can/can.c: 699:     config->TxAttempts = ciFifoCon.txBF.TxAttempts;
 13389                           ;stkvar	_config @ sp[(-5)+-2]
 13390   0134A6  0EF9               	movlw	-7
 13391   0134A8  CFE3 F02B          	movff	plusw1,btemp+10
 13392   0134AC  0EFA               	movlw	-6
 13393   0134AE  CFE3 F02C          	movff	plusw1,btemp+11
 13394   0134B2  0E01               	movlw	1
 13395   0134B4  242B               	addwf	(btemp+10)^0,w,c
 13396   0134B6  6ED9               	movwf	fsr2l,c
 13397   0134B8  0E00               	movlw	0
 13398   0134BA  202C               	addwfc	(btemp+11)^0,w,c
 13399   0134BC  6EDA               	movwf	fsr2h,c
 13400                           
 13401                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13402   0134BE  0EFD               	movlw	253
 13403   0134C0  24E1               	addwf	fsr1l,w,c
 13404   0134C2  6EE9               	movwf	fsr0l,c
 13405   0134C4  0EFF               	movlw	255
 13406   0134C6  20E2               	addwfc	fsr1h,w,c
 13407   0134C8  6EEA               	movwf	fsr0h,c
 13408   0134CA  38EF               	swapf	239,w,c
 13409   0134CC  32E8               	rrcf	wreg,f,c
 13410   0134CE  0B03               	andlw	3
 13411   0134D0  6EDF               	movwf	indf2,c
 13412   0134D2                     
 13413                           ;can/can.c: 700:     config->FifoSize = ciFifoCon.txBF.FifoSize;
 13414                           ;stkvar	_config @ sp[(-5)+-2]
 13415   0134D2  0EF9               	movlw	-7
 13416   0134D4  CFE3 F02B          	movff	plusw1,btemp+10
 13417   0134D8  0EFA               	movlw	-6
 13418   0134DA  CFE3 F02C          	movff	plusw1,btemp+11
 13419   0134DE  0E02               	movlw	2
 13420   0134E0  242B               	addwf	(btemp+10)^0,w,c
 13421   0134E2  6ED9               	movwf	fsr2l,c
 13422   0134E4  0E00               	movlw	0
 13423   0134E6  202C               	addwfc	(btemp+11)^0,w,c
 13424   0134E8  6EDA               	movwf	fsr2h,c
 13425                           
 13426                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13427   0134EA  0EFE               	movlw	254
 13428   0134EC  24E1               	addwf	fsr1l,w,c
 13429   0134EE  6EE9               	movwf	fsr0l,c
 13430   0134F0  0EFF               	movlw	255
 13431   0134F2  20E2               	addwfc	fsr1h,w,c
 13432   0134F4  6EEA               	movwf	fsr0h,c
 13433   0134F6  50EF               	movf	239,w,c
 13434   0134F8  0B1F               	andlw	31
 13435   0134FA  6EDF               	movwf	indf2,c
 13436   0134FC                     
 13437                           ;can/can.c: 701:     config->PayLoadSize = ciFifoCon.txBF.PayLoadSize;
 13438                           ;stkvar	_config @ sp[(-5)+-2]
 13439   0134FC  0EF9               	movlw	-7
 13440   0134FE  CFE3 F02B          	movff	plusw1,btemp+10
 13441   013502  0EFA               	movlw	-6
 13442   013504  CFE3 F02C          	movff	plusw1,btemp+11
 13443   013508  0E03               	movlw	3
 13444   01350A  242B               	addwf	(btemp+10)^0,w,c
 13445   01350C  6ED9               	movwf	fsr2l,c
 13446   01350E  0E00               	movlw	0
 13447   013510  202C               	addwfc	(btemp+11)^0,w,c
 13448   013512  6EDA               	movwf	fsr2h,c
 13449                           
 13450                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13451   013514  0EFE               	movlw	254
 13452   013516  24E1               	addwf	fsr1l,w,c
 13453   013518  6EE9               	movwf	fsr0l,c
 13454   01351A  0EFF               	movlw	255
 13455   01351C  20E2               	addwfc	fsr1h,w,c
 13456   01351E  6EEA               	movwf	fsr0h,c
 13457   013520  38EF               	swapf	239,w,c
 13458   013522  32E8               	rrcf	wreg,f,c
 13459   013524  0B07               	andlw	7
 13460   013526  6EDF               	movwf	indf2,c
 13461   013528                     
 13462                           ; _DRV_CANFDSPI_TransmitQueueConfigureObjectReset: autosize = 5, savesize = 0, parsavesi
      +                          ze = 0, tempsize = 0 parsize = 2, argsize = 2, vargsize = 0
 13463   013528  0EF9               	movlw	249
 13464   01352A  26E1               	addwf	fsr1l,f,c
 13465   01352C  0EFF               	movlw	255
 13466   01352E  22E2               	addwfc	fsr1h,f,c
 13467   013530  0012               	return		;funcret
 13468   013532                     __end_of_DRV_CANFDSPI_TransmitQueueConfigureObjectReset:
 13469                           	callstack 0
 13470                           
 13471 ;; *************** function _DRV_CANFDSPI_TransmitQueueConfigure *****************
 13472 ;; Defined at:
 13473 ;;		line 671 in file "can/can.c"
 13474 ;; Parameters:    Size  Location     Type
 13475 ;;  config          2  [STACK] PTR struct _CAN_TX_QUEUE
 13476 ;;		 -> txqConfig(4), 
 13477 ;; Auto vars:     Size  Location     Type
 13478 ;;  ciFifoCon       4  [STACK] struct _REG_CiTXQCON
 13479 ;;  a               2    0        unsigned short 
 13480 ;;  spiTransferE    1    0        char 
 13481 ;; Return value:  Size  Location     Type
 13482 ;;                  1  [STACK] char 
 13483 ;; Registers used:
 13484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh,
      + tblptru, prodl, prodh
 13485 ;; Tracked objects:
 13486 ;;		On entry : 0/0
 13487 ;;		On exit  : 0/0
 13488 ;;		Unchanged: 0/0
 13489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13494 ;;Total ram usage:        0 bytes
 13495 ;; Hardware stack levels used: 1
 13496 ;; Hardware stack levels required when called: 9
 13497 ;; This function calls:
 13498 ;;		_DRV_CANFDSPI_WriteWord
 13499 ;; This function is called by:
 13500 ;;		_CanInit
 13501 ;; This function uses a reentrant model
 13502 ;;
 13503                           
 13504                           	psect	text49
 13505   012EA8                     __ptext49:
 13506                           	callstack 0
 13507   012EA8                     _DRV_CANFDSPI_TransmitQueueConfigure:
 13508                           	callstack 0
 13509                           
 13510                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13511   012EA8  52E6               	movf	postinc1,f,c
 13512   012EAA  52E6               	movf	postinc1,f,c
 13513   012EAC  52E6               	movf	postinc1,f,c
 13514   012EAE  52E6               	movf	postinc1,f,c
 13515   012EB0                     
 13516                           ;can/can.c: 678:     REG_CiTXQCON ciFifoCon;;can/can.c: 679:     ciFifoCon.word = canFif
      +                          oResetValues[0];
 13517   012EB0  0EDD               	movlw	low _canFifoResetValues
 13518   012EB2  6EF6               	movwf	tblptrl,c
 13519   012EB4                     	if	1	;There is more than 1 active tblptr byte
 13520   012EB4  0EFF               	movlw	high _canFifoResetValues
 13521   012EB6  6EF7               	movwf	tblptrh,c
 13522   012EB8                     	endif
 13523   012EB8                     	if	1	;There are 3 active tblptr bytes
 13524   012EB8  0E00               	movlw	low (_canFifoResetValues shr (0+16))
 13525   012EBA  6EF8               	movwf	tblptru,c
 13526   012EBC                     	endif
 13527   012EBC  0009               	tblrd		*+
 13528   012EBE  CFF5 F029          	movff	tablat,btemp+8
 13529   012EC2  0009               	tblrd		*+
 13530   012EC4  CFF5 F02A          	movff	tablat,btemp+9
 13531   012EC8  0009               	tblrd		*+
 13532   012ECA  CFF5 F02B          	movff	tablat,btemp+10
 13533   012ECE  0009               	tblrd		*+
 13534   012ED0  CFF5 F02C          	movff	tablat,btemp+11
 13535                           
 13536                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
 13537   012ED4  0EFC               	movlw	-4
 13538   012ED6  C029  FFE3         	movff	btemp+8,plusw1
 13539   012EDA  0EFD               	movlw	-3
 13540   012EDC  C02A  FFE3         	movff	btemp+9,plusw1
 13541   012EE0  0EFE               	movlw	-2
 13542   012EE2  C02B  FFE3         	movff	btemp+10,plusw1
 13543   012EE6  0EFF               	movlw	-1
 13544   012EE8  C02C  FFE3         	movff	btemp+11,plusw1
 13545   012EEC                     
 13546                           ;can/can.c: 681:     ciFifoCon.txBF.TxEnable = 1;
 13547                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
 13548   012EEC  50E1               	movf	fsr1l,w,c
 13549   012EEE  0FFC               	addlw	-4
 13550   012EF0  6ED9               	movwf	fsr2l,c
 13551   012EF2  50E2               	movf	fsr1h,w,c
 13552   012EF4  6EDA               	movwf	fsr2h,c
 13553   012EF6  0EFF               	movlw	255
 13554   012EF8  22DA               	addwfc	fsr2h,f,c
 13555   012EFA  8EDF               	bsf	indf2,7,c
 13556   012EFC                     
 13557                           ;can/can.c: 682:     ciFifoCon.txBF.FifoSize = config->FifoSize;
 13558                           ;stkvar	_config @ sp[(-4)+-2]
 13559   012EFC  0EFA               	movlw	-6
 13560   012EFE  CFE3 F02B          	movff	plusw1,btemp+10
 13561   012F02  0EFB               	movlw	-5
 13562   012F04  CFE3 F02C          	movff	plusw1,btemp+11
 13563   012F08  0E02               	movlw	2
 13564   012F0A  242B               	addwf	(btemp+10)^0,w,c
 13565   012F0C  6ED9               	movwf	fsr2l,c
 13566   012F0E  0E00               	movlw	0
 13567   012F10  202C               	addwfc	(btemp+11)^0,w,c
 13568   012F12  6EDA               	movwf	fsr2h,c
 13569   012F14  50DF               	movf	indf2,w,c
 13570   012F16  6E2C               	movwf	(btemp+11)^0,c
 13571                           
 13572                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
 13573   012F18  0EFF               	movlw	255
 13574   012F1A  24E1               	addwf	fsr1l,w,c
 13575   012F1C  6ED9               	movwf	fsr2l,c
 13576   012F1E  0EFF               	movlw	255
 13577   012F20  20E2               	addwfc	fsr1h,w,c
 13578   012F22  6EDA               	movwf	fsr2h,c
 13579   012F24  50DF               	movf	223,w,c
 13580   012F26  182C               	xorwf	(btemp+11)^0,w,c
 13581   012F28  0BE0               	andlw	-32
 13582   012F2A  182C               	xorwf	(btemp+11)^0,w,c
 13583   012F2C  6EDF               	movwf	223,c
 13584   012F2E                     
 13585                           ;can/can.c: 683:     ciFifoCon.txBF.PayLoadSize = config->PayLoadSize;
 13586                           ;stkvar	_config @ sp[(-4)+-2]
 13587   012F2E  0EFA               	movlw	-6
 13588   012F30  CFE3 F02B          	movff	plusw1,btemp+10
 13589   012F34  0EFB               	movlw	-5
 13590   012F36  CFE3 F02C          	movff	plusw1,btemp+11
 13591   012F3A  0E03               	movlw	3
 13592   012F3C  242B               	addwf	(btemp+10)^0,w,c
 13593   012F3E  6ED9               	movwf	fsr2l,c
 13594   012F40  0E00               	movlw	0
 13595   012F42  202C               	addwfc	(btemp+11)^0,w,c
 13596   012F44  6EDA               	movwf	fsr2h,c
 13597   012F46  50DF               	movf	indf2,w,c
 13598   012F48  6E2C               	movwf	(btemp+11)^0,c
 13599                           
 13600                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
 13601   012F4A  0EFF               	movlw	255
 13602   012F4C  24E1               	addwf	fsr1l,w,c
 13603   012F4E  6ED9               	movwf	fsr2l,c
 13604   012F50  0EFF               	movlw	255
 13605   012F52  20E2               	addwfc	fsr1h,w,c
 13606   012F54  6EDA               	movwf	fsr2h,c
 13607   012F56  3A2C               	swapf	(btemp+11)^0,f,c
 13608   012F58  462C               	rlncf	(btemp+11)^0,f,c
 13609   012F5A  50DF               	movf	223,w,c
 13610   012F5C  182C               	xorwf	(btemp+11)^0,w,c
 13611   012F5E  0B1F               	andlw	-225
 13612   012F60  182C               	xorwf	(btemp+11)^0,w,c
 13613   012F62  6EDF               	movwf	223,c
 13614   012F64                     
 13615                           ;can/can.c: 684:     ciFifoCon.txBF.TxAttempts = config->TxAttempts;
 13616                           ;stkvar	_config @ sp[(-4)+-2]
 13617   012F64  0EFA               	movlw	-6
 13618   012F66  CFE3 F02B          	movff	plusw1,btemp+10
 13619   012F6A  0EFB               	movlw	-5
 13620   012F6C  CFE3 F02C          	movff	plusw1,btemp+11
 13621   012F70  0E01               	movlw	1
 13622   012F72  242B               	addwf	(btemp+10)^0,w,c
 13623   012F74  6ED9               	movwf	fsr2l,c
 13624   012F76  0E00               	movlw	0
 13625   012F78  202C               	addwfc	(btemp+11)^0,w,c
 13626   012F7A  6EDA               	movwf	fsr2h,c
 13627   012F7C  50DF               	movf	indf2,w,c
 13628   012F7E  6E2C               	movwf	(btemp+11)^0,c
 13629                           
 13630                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
 13631   012F80  0EFE               	movlw	254
 13632   012F82  24E1               	addwf	fsr1l,w,c
 13633   012F84  6ED9               	movwf	fsr2l,c
 13634   012F86  0EFF               	movlw	255
 13635   012F88  20E2               	addwfc	fsr1h,w,c
 13636   012F8A  6EDA               	movwf	fsr2h,c
 13637   012F8C  3A2C               	swapf	(btemp+11)^0,f,c
 13638   012F8E  462C               	rlncf	(btemp+11)^0,f,c
 13639   012F90  50DF               	movf	223,w,c
 13640   012F92  182C               	xorwf	(btemp+11)^0,w,c
 13641   012F94  0B9F               	andlw	-97
 13642   012F96  182C               	xorwf	(btemp+11)^0,w,c
 13643   012F98  6EDF               	movwf	223,c
 13644   012F9A                     
 13645                           ;can/can.c: 685:     ciFifoCon.txBF.TxPriority = config->TxPriority;
 13646                           ;stkvar	_config @ sp[(-4)+-2]
 13647   012F9A  0EFA               	movlw	-6
 13648   012F9C  CFE3 FFD9          	movff	plusw1,fsr2l
 13649   012FA0  0EFB               	movlw	-5
 13650   012FA2  CFE3 FFDA          	movff	plusw1,fsr2h
 13651   012FA6  50DF               	movf	indf2,w,c
 13652   012FA8  6E2C               	movwf	(btemp+11)^0,c
 13653                           
 13654                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
 13655   012FAA  0EFE               	movlw	254
 13656   012FAC  24E1               	addwf	fsr1l,w,c
 13657   012FAE  6ED9               	movwf	fsr2l,c
 13658   012FB0  0EFF               	movlw	255
 13659   012FB2  20E2               	addwfc	fsr1h,w,c
 13660   012FB4  6EDA               	movwf	fsr2h,c
 13661   012FB6  50DF               	movf	223,w,c
 13662   012FB8  182C               	xorwf	(btemp+11)^0,w,c
 13663   012FBA  0BE0               	andlw	-32
 13664   012FBC  182C               	xorwf	(btemp+11)^0,w,c
 13665   012FBE  6EDF               	movwf	223,c
 13666   012FC0                     
 13667                           ;stkvar	_ciFifoCon @ sp[(-4)+0]
 13668   012FC0  0EFC               	movlw	-4
 13669   012FC2  CFE3 FFE6          	movff	plusw1,postinc1
 13670   012FC6  CFE3 FFE6          	movff	plusw1,postinc1
 13671   012FCA  CFE3 FFE6          	movff	plusw1,postinc1
 13672   012FCE  CFE3 FFE6          	movff	plusw1,postinc1
 13673   012FD2  0E50               	movlw	80
 13674   012FD4  6EE6               	movwf	postinc1,c
 13675   012FD6  0E00               	movlw	0
 13676   012FD8  6EE6               	movwf	postinc1,c
 13677   012FDA  ECF1  F09B         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 13678   012FDE                     
 13679                           ; _DRV_CANFDSPI_TransmitQueueConfigure: autosize = 4, savesize = 0, parsavesize = 0, tem
      +                          psize = 0 parsize = 2, argsize = 2, vargsize = 0
 13680   012FDE  0EFA               	movlw	250
 13681   012FE0  26E1               	addwf	fsr1l,f,c
 13682   012FE2  0EFF               	movlw	255
 13683   012FE4  22E2               	addwfc	fsr1h,f,c
 13684   012FE6  0012               	return		;funcret
 13685   012FE8                     __end_of_DRV_CANFDSPI_TransmitQueueConfigure:
 13686                           	callstack 0
 13687                           
 13688 ;; *************** function _DRV_CANFDSPI_TransmitChannelConfigureObjectReset *****************
 13689 ;; Defined at:
 13690 ;;		line 657 in file "can/can.c"
 13691 ;; Parameters:    Size  Location     Type
 13692 ;;  config          2  [STACK] PTR struct _CAN_TX_FIFO_
 13693 ;;		 -> txfConfig(2), 
 13694 ;; Auto vars:     Size  Location     Type
 13695 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
 13696 ;; Return value:  Size  Location     Type
 13697 ;;                  1  [STACK] char 
 13698 ;; Registers used:
 13699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru
 13700 ;; Tracked objects:
 13701 ;;		On entry : 0/0
 13702 ;;		On exit  : 0/0
 13703 ;;		Unchanged: 0/0
 13704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13709 ;;Total ram usage:        0 bytes
 13710 ;; Hardware stack levels used: 1
 13711 ;; Hardware stack levels required when called: 7
 13712 ;; This function calls:
 13713 ;;		Nothing
 13714 ;; This function is called by:
 13715 ;;		_CanInit
 13716 ;; This function uses a reentrant model
 13717 ;;
 13718                           
 13719                           	psect	text50
 13720   012FE8                     __ptext50:
 13721                           	callstack 0
 13722   012FE8                     _DRV_CANFDSPI_TransmitChannelConfigureObjectReset:
 13723                           	callstack 0
 13724                           
 13725                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13726   012FE8  0E05               	movlw	5
 13727   012FEA  26E1               	addwf	fsr1l,f,c
 13728   012FEC  0E00               	movlw	0
 13729   012FEE  22E2               	addwfc	fsr1h,f,c
 13730   012FF0                     
 13731                           ;can/can.c: 657: int8_t DRV_CANFDSPI_TransmitChannelConfigureObjectReset(CAN_TX_FIFO_CON
      +                          FIG* config);can/can.c: 658: {;can/can.c: 659:     REG_CiFIFOCON ciFifoCon;;can/can.c: 6
      +                          60:     ciFifoCon.word = canFifoResetValues[0];
 13732   012FF0  0EDD               	movlw	low _canFifoResetValues
 13733   012FF2  6EF6               	movwf	tblptrl,c
 13734   012FF4                     	if	1	;There is more than 1 active tblptr byte
 13735   012FF4  0EFF               	movlw	high _canFifoResetValues
 13736   012FF6  6EF7               	movwf	tblptrh,c
 13737   012FF8                     	endif
 13738   012FF8                     	if	1	;There are 3 active tblptr bytes
 13739   012FF8  0E00               	movlw	low (_canFifoResetValues shr (0+16))
 13740   012FFA  6EF8               	movwf	tblptru,c
 13741   012FFC                     	endif
 13742   012FFC  0009               	tblrd		*+
 13743   012FFE  CFF5 F029          	movff	tablat,btemp+8
 13744   013002  0009               	tblrd		*+
 13745   013004  CFF5 F02A          	movff	tablat,btemp+9
 13746   013008  0009               	tblrd		*+
 13747   01300A  CFF5 F02B          	movff	tablat,btemp+10
 13748   01300E  0009               	tblrd		*+
 13749   013010  CFF5 F02C          	movff	tablat,btemp+11
 13750                           
 13751                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13752   013014  0EFB               	movlw	-5
 13753   013016  C029  FFE3         	movff	btemp+8,plusw1
 13754   01301A  0EFC               	movlw	-4
 13755   01301C  C02A  FFE3         	movff	btemp+9,plusw1
 13756   013020  0EFD               	movlw	-3
 13757   013022  C02B  FFE3         	movff	btemp+10,plusw1
 13758   013026  0EFE               	movlw	-2
 13759   013028  C02C  FFE3         	movff	btemp+11,plusw1
 13760   01302C                     
 13761                           ;can/can.c: 662:     config->RTREnable = ciFifoCon.txBF.RTREnable;
 13762                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13763   01302C  50E1               	movf	fsr1l,w,c
 13764   01302E  0FFB               	addlw	-5
 13765   013030  6ED9               	movwf	fsr2l,c
 13766   013032  50E2               	movf	fsr1h,w,c
 13767   013034  6EDA               	movwf	fsr2h,c
 13768   013036  0EFF               	movlw	255
 13769   013038  22DA               	addwfc	fsr2h,f,c
 13770                           
 13771                           ;stkvar	_config @ sp[(-5)+-2]
 13772   01303A  0EF9               	movlw	-7
 13773   01303C  CFE3 FFE9          	movff	plusw1,fsr0l
 13774   013040  0EFA               	movlw	-6
 13775   013042  CFE3 FFEA          	movff	plusw1,fsr0h
 13776   013046  90EF               	bcf	indf0,0,c
 13777   013048  ACDF               	btfss	indf2,6,c
 13778   01304A  EF28  F098         	goto	u1005
 13779   01304E  80EF               	bsf	indf0,0,c
 13780   013050                     u1005:
 13781   013050                     
 13782                           ;can/can.c: 663:     config->TxPriority = ciFifoCon.txBF.TxPriority;
 13783                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13784   013050  0EFD               	movlw	253
 13785   013052  24E1               	addwf	fsr1l,w,c
 13786   013054  6ED9               	movwf	fsr2l,c
 13787   013056  0EFF               	movlw	255
 13788   013058  20E2               	addwfc	fsr1h,w,c
 13789   01305A  6EDA               	movwf	fsr2h,c
 13790   01305C  50DF               	movf	223,w,c
 13791   01305E  0B1F               	andlw	31
 13792   013060  6E2C               	movwf	(btemp+11)^0,c
 13793                           
 13794                           ;stkvar	_config @ sp[(-5)+-2]
 13795   013062  0EF9               	movlw	-7
 13796   013064  CFE3 FFD9          	movff	plusw1,fsr2l
 13797   013068  0EFA               	movlw	-6
 13798   01306A  CFE3 FFDA          	movff	plusw1,fsr2h
 13799   01306E  462C               	rlncf	(btemp+11)^0,f,c
 13800   013070  50DF               	movf	223,w,c
 13801   013072  182C               	xorwf	(btemp+11)^0,w,c
 13802   013074  0BC1               	andlw	-63
 13803   013076  182C               	xorwf	(btemp+11)^0,w,c
 13804   013078  6EDF               	movwf	223,c
 13805   01307A                     
 13806                           ;can/can.c: 664:     config->TxAttempts = ciFifoCon.txBF.TxAttempts;
 13807                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13808   01307A  0EFD               	movlw	253
 13809   01307C  24E1               	addwf	fsr1l,w,c
 13810   01307E  6ED9               	movwf	fsr2l,c
 13811   013080  0EFF               	movlw	255
 13812   013082  20E2               	addwfc	fsr1h,w,c
 13813   013084  6EDA               	movwf	fsr2h,c
 13814   013086  38DF               	swapf	223,w,c
 13815   013088  32E8               	rrcf	wreg,f,c
 13816   01308A  0B03               	andlw	3
 13817   01308C  6E2C               	movwf	(btemp+11)^0,c
 13818                           
 13819                           ;stkvar	_config @ sp[(-5)+-2]
 13820   01308E  0EF9               	movlw	-7
 13821   013090  CFE3 FFD9          	movff	plusw1,fsr2l
 13822   013094  0EFA               	movlw	-6
 13823   013096  CFE3 FFDA          	movff	plusw1,fsr2h
 13824   01309A  3A2C               	swapf	(btemp+11)^0,f,c
 13825   01309C  462C               	rlncf	(btemp+11)^0,f,c
 13826   01309E  462C               	rlncf	(btemp+11)^0,f,c
 13827   0130A0  50DF               	movf	223,w,c
 13828   0130A2  182C               	xorwf	(btemp+11)^0,w,c
 13829   0130A4  0B3F               	andlw	-193
 13830   0130A6  182C               	xorwf	(btemp+11)^0,w,c
 13831   0130A8  6EDF               	movwf	223,c
 13832   0130AA                     
 13833                           ;can/can.c: 665:     config->FifoSize = ciFifoCon.txBF.FifoSize;
 13834                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13835   0130AA  0EFE               	movlw	254
 13836   0130AC  24E1               	addwf	fsr1l,w,c
 13837   0130AE  6ED9               	movwf	fsr2l,c
 13838   0130B0  0EFF               	movlw	255
 13839   0130B2  20E2               	addwfc	fsr1h,w,c
 13840   0130B4  6EDA               	movwf	fsr2h,c
 13841   0130B6  50DF               	movf	223,w,c
 13842   0130B8  0B1F               	andlw	31
 13843   0130BA  6E2C               	movwf	(btemp+11)^0,c
 13844                           
 13845                           ;stkvar	_config @ sp[(-5)+-2]
 13846   0130BC  0EF9               	movlw	-7
 13847   0130BE  CFE3 F029          	movff	plusw1,btemp+8
 13848   0130C2  0EFA               	movlw	-6
 13849   0130C4  CFE3 F02A          	movff	plusw1,btemp+9
 13850   0130C8  0E01               	movlw	1
 13851   0130CA  2429               	addwf	(btemp+8)^0,w,c
 13852   0130CC  6ED9               	movwf	fsr2l,c
 13853   0130CE  0E00               	movlw	0
 13854   0130D0  202A               	addwfc	(btemp+9)^0,w,c
 13855   0130D2  6EDA               	movwf	fsr2h,c
 13856   0130D4  50DF               	movf	223,w,c
 13857   0130D6  182C               	xorwf	(btemp+11)^0,w,c
 13858   0130D8  0BE0               	andlw	-32
 13859   0130DA  182C               	xorwf	(btemp+11)^0,w,c
 13860   0130DC  6EDF               	movwf	223,c
 13861   0130DE                     
 13862                           ;can/can.c: 666:     config->PayLoadSize = ciFifoCon.txBF.PayLoadSize;
 13863                           ;stkvar	_ciFifoCon @ sp[(-5)+0]
 13864   0130DE  0EFE               	movlw	254
 13865   0130E0  24E1               	addwf	fsr1l,w,c
 13866   0130E2  6ED9               	movwf	fsr2l,c
 13867   0130E4  0EFF               	movlw	255
 13868   0130E6  20E2               	addwfc	fsr1h,w,c
 13869   0130E8  6EDA               	movwf	fsr2h,c
 13870   0130EA  38DF               	swapf	223,w,c
 13871   0130EC  32E8               	rrcf	wreg,f,c
 13872   0130EE  0B07               	andlw	7
 13873   0130F0  6E2C               	movwf	(btemp+11)^0,c
 13874                           
 13875                           ;stkvar	_config @ sp[(-5)+-2]
 13876   0130F2  0EF9               	movlw	-7
 13877   0130F4  CFE3 F029          	movff	plusw1,btemp+8
 13878   0130F8  0EFA               	movlw	-6
 13879   0130FA  CFE3 F02A          	movff	plusw1,btemp+9
 13880   0130FE  0E01               	movlw	1
 13881   013100  2429               	addwf	(btemp+8)^0,w,c
 13882   013102  6ED9               	movwf	fsr2l,c
 13883   013104  0E00               	movlw	0
 13884   013106  202A               	addwfc	(btemp+9)^0,w,c
 13885   013108  6EDA               	movwf	fsr2h,c
 13886   01310A  3A2C               	swapf	(btemp+11)^0,f,c
 13887   01310C  462C               	rlncf	(btemp+11)^0,f,c
 13888   01310E  50DF               	movf	223,w,c
 13889   013110  182C               	xorwf	(btemp+11)^0,w,c
 13890   013112  0B1F               	andlw	-225
 13891   013114  182C               	xorwf	(btemp+11)^0,w,c
 13892   013116  6EDF               	movwf	223,c
 13893   013118                     
 13894                           ; _DRV_CANFDSPI_TransmitChannelConfigureObjectReset: autosize = 5, savesize = 0, parsave
      +                          size = 0, tempsize = 0 parsize = 2, argsize = 2, vargsize = 0
 13895   013118  0EF9               	movlw	249
 13896   01311A  26E1               	addwf	fsr1l,f,c
 13897   01311C  0EFF               	movlw	255
 13898   01311E  22E2               	addwfc	fsr1h,f,c
 13899   013120  0012               	return		;funcret
 13900   013122                     __end_of_DRV_CANFDSPI_TransmitChannelConfigureObjectReset:
 13901                           	callstack 0
 13902                           
 13903 ;; *************** function _DRV_CANFDSPI_TransmitChannelConfigure *****************
 13904 ;; Defined at:
 13905 ;;		line 633 in file "can/can.c"
 13906 ;; Parameters:    Size  Location     Type
 13907 ;;  channel         1  [STACK] enum E5287
 13908 ;;  config          2  [STACK] PTR struct _CAN_TX_FIFO_
 13909 ;;		 -> txfConfig(2), 
 13910 ;; Auto vars:     Size  Location     Type
 13911 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
 13912 ;;  a               2  [STACK] unsigned short 
 13913 ;;  spiTransferE    1    0        char 
 13914 ;; Return value:  Size  Location     Type
 13915 ;;                  1  [STACK] char 
 13916 ;; Registers used:
 13917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 13918 ;; Tracked objects:
 13919 ;;		On entry : 0/0
 13920 ;;		On exit  : 0/0
 13921 ;;		Unchanged: 0/0
 13922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13927 ;;Total ram usage:        0 bytes
 13928 ;; Hardware stack levels used: 1
 13929 ;; Hardware stack levels required when called: 9
 13930 ;; This function calls:
 13931 ;;		_DRV_CANFDSPI_WriteWord
 13932 ;; This function is called by:
 13933 ;;		_CanInit
 13934 ;; This function uses a reentrant model
 13935 ;;
 13936                           
 13937                           	psect	text51
 13938   0127C6                     __ptext51:
 13939                           	callstack 0
 13940   0127C6                     _DRV_CANFDSPI_TransmitChannelConfigure:
 13941                           	callstack 0
 13942                           
 13943                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13944   0127C6  0E07               	movlw	7
 13945   0127C8  26E1               	addwf	fsr1l,f,c
 13946   0127CA  0E00               	movlw	0
 13947   0127CC  22E2               	addwfc	fsr1h,f,c
 13948   0127CE                     
 13949                           ;can/can.c: 640:     REG_CiFIFOCON ciFifoCon;;can/can.c: 641:     ciFifoCon.word = canFi
      +                          foResetValues[0];
 13950   0127CE  0EDD               	movlw	low _canFifoResetValues
 13951   0127D0  6EF6               	movwf	tblptrl,c
 13952   0127D2                     	if	1	;There is more than 1 active tblptr byte
 13953   0127D2  0EFF               	movlw	high _canFifoResetValues
 13954   0127D4  6EF7               	movwf	tblptrh,c
 13955   0127D6                     	endif
 13956   0127D6                     	if	1	;There are 3 active tblptr bytes
 13957   0127D6  0E00               	movlw	low (_canFifoResetValues shr (0+16))
 13958   0127D8  6EF8               	movwf	tblptru,c
 13959   0127DA                     	endif
 13960   0127DA  0009               	tblrd		*+
 13961   0127DC  CFF5 F029          	movff	tablat,btemp+8
 13962   0127E0  0009               	tblrd		*+
 13963   0127E2  CFF5 F02A          	movff	tablat,btemp+9
 13964   0127E6  0009               	tblrd		*+
 13965   0127E8  CFF5 F02B          	movff	tablat,btemp+10
 13966   0127EC  0009               	tblrd		*+
 13967   0127EE  CFF5 F02C          	movff	tablat,btemp+11
 13968                           
 13969                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 13970   0127F2  0EF9               	movlw	-7
 13971   0127F4  C029  FFE3         	movff	btemp+8,plusw1
 13972   0127F8  0EFA               	movlw	-6
 13973   0127FA  C02A  FFE3         	movff	btemp+9,plusw1
 13974   0127FE  0EFB               	movlw	-5
 13975   012800  C02B  FFE3         	movff	btemp+10,plusw1
 13976   012804  0EFC               	movlw	-4
 13977   012806  C02C  FFE3         	movff	btemp+11,plusw1
 13978   01280A                     
 13979                           ;can/can.c: 643:     ciFifoCon.txBF.TxEnable = 1;
 13980                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 13981   01280A  50E1               	movf	fsr1l,w,c
 13982   01280C  0FF9               	addlw	-7
 13983   01280E  6ED9               	movwf	fsr2l,c
 13984   012810  50E2               	movf	fsr1h,w,c
 13985   012812  6EDA               	movwf	fsr2h,c
 13986   012814  0EFF               	movlw	255
 13987   012816  22DA               	addwfc	fsr2h,f,c
 13988   012818  8EDF               	bsf	indf2,7,c
 13989   01281A                     
 13990                           ;can/can.c: 644:     ciFifoCon.txBF.FifoSize = config->FifoSize;
 13991                           ;stkvar	_config @ sp[(-7)+-3]
 13992   01281A  0EF6               	movlw	-10
 13993   01281C  CFE3 F02B          	movff	plusw1,btemp+10
 13994   012820  0EF7               	movlw	-9
 13995   012822  CFE3 F02C          	movff	plusw1,btemp+11
 13996   012826  0E01               	movlw	1
 13997   012828  242B               	addwf	(btemp+10)^0,w,c
 13998   01282A  6ED9               	movwf	fsr2l,c
 13999   01282C  0E00               	movlw	0
 14000   01282E  202C               	addwfc	(btemp+11)^0,w,c
 14001   012830  6EDA               	movwf	fsr2h,c
 14002   012832  50DF               	movf	223,w,c
 14003   012834  0B1F               	andlw	31
 14004   012836  6E2C               	movwf	(btemp+11)^0,c
 14005                           
 14006                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14007   012838  0EFC               	movlw	252
 14008   01283A  24E1               	addwf	fsr1l,w,c
 14009   01283C  6ED9               	movwf	fsr2l,c
 14010   01283E  0EFF               	movlw	255
 14011   012840  20E2               	addwfc	fsr1h,w,c
 14012   012842  6EDA               	movwf	fsr2h,c
 14013   012844  50DF               	movf	223,w,c
 14014   012846  182C               	xorwf	(btemp+11)^0,w,c
 14015   012848  0BE0               	andlw	-32
 14016   01284A  182C               	xorwf	(btemp+11)^0,w,c
 14017   01284C  6EDF               	movwf	223,c
 14018   01284E                     
 14019                           ;can/can.c: 645:     ciFifoCon.txBF.PayLoadSize = config->PayLoadSize;
 14020                           ;stkvar	_config @ sp[(-7)+-3]
 14021   01284E  0EF6               	movlw	-10
 14022   012850  CFE3 F02B          	movff	plusw1,btemp+10
 14023   012854  0EF7               	movlw	-9
 14024   012856  CFE3 F02C          	movff	plusw1,btemp+11
 14025   01285A  0E01               	movlw	1
 14026   01285C  242B               	addwf	(btemp+10)^0,w,c
 14027   01285E  6ED9               	movwf	fsr2l,c
 14028   012860  0E00               	movlw	0
 14029   012862  202C               	addwfc	(btemp+11)^0,w,c
 14030   012864  6EDA               	movwf	fsr2h,c
 14031   012866  38DF               	swapf	223,w,c
 14032   012868  32E8               	rrcf	wreg,f,c
 14033   01286A  0B07               	andlw	7
 14034   01286C  6E2C               	movwf	(btemp+11)^0,c
 14035                           
 14036                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14037   01286E  0EFC               	movlw	252
 14038   012870  24E1               	addwf	fsr1l,w,c
 14039   012872  6ED9               	movwf	fsr2l,c
 14040   012874  0EFF               	movlw	255
 14041   012876  20E2               	addwfc	fsr1h,w,c
 14042   012878  6EDA               	movwf	fsr2h,c
 14043   01287A  3A2C               	swapf	(btemp+11)^0,f,c
 14044   01287C  462C               	rlncf	(btemp+11)^0,f,c
 14045   01287E  50DF               	movf	223,w,c
 14046   012880  182C               	xorwf	(btemp+11)^0,w,c
 14047   012882  0B1F               	andlw	-225
 14048   012884  182C               	xorwf	(btemp+11)^0,w,c
 14049   012886  6EDF               	movwf	223,c
 14050   012888                     
 14051                           ;can/can.c: 646:     ciFifoCon.txBF.TxAttempts = config->TxAttempts;
 14052                           ;stkvar	_config @ sp[(-7)+-3]
 14053   012888  0EF6               	movlw	-10
 14054   01288A  CFE3 FFD9          	movff	plusw1,fsr2l
 14055   01288E  0EF7               	movlw	-9
 14056   012890  CFE3 FFDA          	movff	plusw1,fsr2h
 14057   012894  38DF               	swapf	223,w,c
 14058   012896  32E8               	rrcf	wreg,f,c
 14059   012898  32E8               	rrcf	wreg,f,c
 14060   01289A  0B03               	andlw	3
 14061   01289C  6E2C               	movwf	(btemp+11)^0,c
 14062                           
 14063                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14064   01289E  0EFB               	movlw	251
 14065   0128A0  24E1               	addwf	fsr1l,w,c
 14066   0128A2  6ED9               	movwf	fsr2l,c
 14067   0128A4  0EFF               	movlw	255
 14068   0128A6  20E2               	addwfc	fsr1h,w,c
 14069   0128A8  6EDA               	movwf	fsr2h,c
 14070   0128AA  3A2C               	swapf	(btemp+11)^0,f,c
 14071   0128AC  462C               	rlncf	(btemp+11)^0,f,c
 14072   0128AE  50DF               	movf	223,w,c
 14073   0128B0  182C               	xorwf	(btemp+11)^0,w,c
 14074   0128B2  0B9F               	andlw	-97
 14075   0128B4  182C               	xorwf	(btemp+11)^0,w,c
 14076   0128B6  6EDF               	movwf	223,c
 14077   0128B8                     
 14078                           ;can/can.c: 647:     ciFifoCon.txBF.TxPriority = config->TxPriority;
 14079                           ;stkvar	_config @ sp[(-7)+-3]
 14080   0128B8  0EF6               	movlw	-10
 14081   0128BA  CFE3 FFD9          	movff	plusw1,fsr2l
 14082   0128BE  0EF7               	movlw	-9
 14083   0128C0  CFE3 FFDA          	movff	plusw1,fsr2h
 14084   0128C4  30DF               	rrcf	223,w,c
 14085   0128C6  0B1F               	andlw	31
 14086   0128C8  6E2C               	movwf	(btemp+11)^0,c
 14087                           
 14088                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14089   0128CA  0EFB               	movlw	251
 14090   0128CC  24E1               	addwf	fsr1l,w,c
 14091   0128CE  6ED9               	movwf	fsr2l,c
 14092   0128D0  0EFF               	movlw	255
 14093   0128D2  20E2               	addwfc	fsr1h,w,c
 14094   0128D4  6EDA               	movwf	fsr2h,c
 14095   0128D6  50DF               	movf	223,w,c
 14096   0128D8  182C               	xorwf	(btemp+11)^0,w,c
 14097   0128DA  0BE0               	andlw	-32
 14098   0128DC  182C               	xorwf	(btemp+11)^0,w,c
 14099   0128DE  6EDF               	movwf	223,c
 14100   0128E0                     
 14101                           ;can/can.c: 648:     ciFifoCon.txBF.RTREnable = config->RTREnable;
 14102                           ;stkvar	_config @ sp[(-7)+-3]
 14103   0128E0  0EF6               	movlw	-10
 14104   0128E2  CFE3 FFD9          	movff	plusw1,fsr2l
 14105   0128E6  0EF7               	movlw	-9
 14106   0128E8  CFE3 FFDA          	movff	plusw1,fsr2h
 14107                           
 14108                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14109   0128EC  50E1               	movf	fsr1l,w,c
 14110   0128EE  0FF9               	addlw	-7
 14111   0128F0  6EE9               	movwf	fsr0l,c
 14112   0128F2  50E2               	movf	fsr1h,w,c
 14113   0128F4  6EEA               	movwf	fsr0h,c
 14114   0128F6  0EFF               	movlw	255
 14115   0128F8  22EA               	addwfc	fsr0h,f,c
 14116   0128FA  9CEF               	bcf	indf0,6,c
 14117   0128FC  A0DF               	btfss	indf2,0,c
 14118   0128FE  EF82  F094         	goto	u2485
 14119   012902  8CEF               	bsf	indf0,6,c
 14120   012904                     u2485:
 14121   012904                     
 14122                           ;can/can.c: 650:     a = 0x050 + (channel * (3*4));
 14123                           ;stkvar	_channel @ sp[(-7)+-1]
 14124   012904  0EF8               	movlw	-8
 14125   012906  50E3               	movf	plusw1,w,c
 14126   012908  0D0C               	mullw	12
 14127   01290A  0E50               	movlw	80
 14128   01290C  26F3               	addwf	243,f,c
 14129   01290E  0E00               	movlw	0
 14130   012910  22F4               	addwfc	244,f,c
 14131                           
 14132                           ;stkvar	_a @ sp[(-7)+5]
 14133   012912  0EFE               	movlw	-2
 14134   012914  CFF3 FFE3          	movff	prodl,plusw1
 14135   012918  0EFF               	movlw	-1
 14136   01291A  CFF4 FFE3          	movff	prodh,plusw1
 14137   01291E                     
 14138                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14139   01291E  0EF9               	movlw	-7
 14140   012920  CFE3 FFE6          	movff	plusw1,postinc1
 14141   012924  CFE3 FFE6          	movff	plusw1,postinc1
 14142   012928  CFE3 FFE6          	movff	plusw1,postinc1
 14143   01292C  CFE3 FFE6          	movff	plusw1,postinc1
 14144                           
 14145                           ;stkvar	_a @ sp[(-11)+5]
 14146   012930  0EFA               	movlw	-6
 14147   012932  CFE3 FFE6          	movff	plusw1,postinc1
 14148   012936  CFE3 FFE6          	movff	plusw1,postinc1
 14149   01293A  ECF1  F09B         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 14150   01293E                     
 14151                           ; _DRV_CANFDSPI_TransmitChannelConfigure: autosize = 7, savesize = 0, parsavesize = 0, t
      +                          empsize = 0 parsize = 3, argsize = 3, vargsize = 0
 14152   01293E  0EF6               	movlw	246
 14153   012940  26E1               	addwf	fsr1l,f,c
 14154   012942  0EFF               	movlw	255
 14155   012944  22E2               	addwfc	fsr1h,f,c
 14156   012946  0012               	return		;funcret
 14157   012948                     __end_of_DRV_CANFDSPI_TransmitChannelConfigure:
 14158                           	callstack 0
 14159                           
 14160 ;; *************** function _DRV_CANFDSPI_TimeStampSet *****************
 14161 ;; Defined at:
 14162 ;;		line 2690 in file "can/can.c"
 14163 ;; Parameters:    Size  Location     Type
 14164 ;;  ts              4  [STACK] unsigned long 
 14165 ;; Auto vars:     Size  Location     Type
 14166 ;;  spiTransferE    1    0        char 
 14167 ;; Return value:  Size  Location     Type
 14168 ;;                  1  [STACK] char 
 14169 ;; Registers used:
 14170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14171 ;; Tracked objects:
 14172 ;;		On entry : 0/0
 14173 ;;		On exit  : 0/0
 14174 ;;		Unchanged: 0/0
 14175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14180 ;;Total ram usage:        0 bytes
 14181 ;; Hardware stack levels used: 1
 14182 ;; Hardware stack levels required when called: 9
 14183 ;; This function calls:
 14184 ;;		_DRV_CANFDSPI_WriteWord
 14185 ;; This function is called by:
 14186 ;;		_CanInit
 14187 ;; This function uses a reentrant model
 14188 ;;
 14189                           
 14190                           	psect	text52
 14191   01489E                     __ptext52:
 14192                           	callstack 0
 14193   01489E                     _DRV_CANFDSPI_TimeStampSet:
 14194                           	callstack 20
 14195   01489E                     
 14196                           ;stkvar	_ts @ sp[(0)+-4]
 14197   01489E  0EFC               	movlw	-4
 14198   0148A0  CFE3 FFE6          	movff	plusw1,postinc1
 14199   0148A4  CFE3 FFE6          	movff	plusw1,postinc1
 14200   0148A8  CFE3 FFE6          	movff	plusw1,postinc1
 14201   0148AC  CFE3 FFE6          	movff	plusw1,postinc1
 14202   0148B0  0E10               	movlw	16
 14203   0148B2  6EE6               	movwf	postinc1,c
 14204   0148B4  0E00               	movlw	0
 14205   0148B6  6EE6               	movwf	postinc1,c
 14206   0148B8  ECF1  F09B         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 14207   0148BC                     
 14208                           ; _DRV_CANFDSPI_TimeStampSet: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 4, argsize = 4, vargsize = 0
 14209   0148BC  52E5               	movf	postdec1,f,c
 14210   0148BE  52E5               	movf	postdec1,f,c
 14211   0148C0  52E5               	movf	postdec1,f,c
 14212   0148C2  52E5               	movf	postdec1,f,c
 14213   0148C4  0012               	return		;funcret
 14214   0148C6                     __end_of_DRV_CANFDSPI_TimeStampSet:
 14215                           	callstack 0
 14216                           
 14217 ;; *************** function _DRV_CANFDSPI_TimeStampPrescalerSet *****************
 14218 ;; Defined at:
 14219 ;;		line 2725 in file "can/can.c"
 14220 ;; Parameters:    Size  Location     Type
 14221 ;;  ps              2  [STACK] unsigned short 
 14222 ;; Auto vars:     Size  Location     Type
 14223 ;;  spiTransferE    1    0        char 
 14224 ;; Return value:  Size  Location     Type
 14225 ;;                  1  [STACK] char 
 14226 ;; Registers used:
 14227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14228 ;; Tracked objects:
 14229 ;;		On entry : 0/0
 14230 ;;		On exit  : 0/0
 14231 ;;		Unchanged: 0/0
 14232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14237 ;;Total ram usage:        0 bytes
 14238 ;; Hardware stack levels used: 1
 14239 ;; Hardware stack levels required when called: 9
 14240 ;; This function calls:
 14241 ;;		_DRV_CANFDSPI_WriteHalfWord
 14242 ;; This function is called by:
 14243 ;;		_CanInit
 14244 ;; This function uses a reentrant model
 14245 ;;
 14246                           
 14247                           	psect	text53
 14248   01490E                     __ptext53:
 14249                           	callstack 0
 14250   01490E                     _DRV_CANFDSPI_TimeStampPrescalerSet:
 14251                           	callstack 20
 14252   01490E                     
 14253                           ;stkvar	_ps @ sp[(0)+-2]
 14254   01490E  0EFE               	movlw	-2
 14255   014910  CFE3 FFE6          	movff	plusw1,postinc1
 14256   014914  CFE3 FFE6          	movff	plusw1,postinc1
 14257   014918  0E14               	movlw	20
 14258   01491A  6EE6               	movwf	postinc1,c
 14259   01491C  0E00               	movlw	0
 14260   01491E  6EE6               	movwf	postinc1,c
 14261   014920  EC29  F09D         	call	_DRV_CANFDSPI_WriteHalfWord	;wreg free
 14262   014924                     
 14263                           ; _DRV_CANFDSPI_TimeStampPrescalerSet: autosize = 0, savesize = 0, parsavesize = 0, temp
      +                          size = 0 parsize = 2, argsize = 2, vargsize = 0
 14264   014924  52E5               	movf	postdec1,f,c
 14265   014926  52E5               	movf	postdec1,f,c
 14266   014928  0012               	return		;funcret
 14267   01492A                     __end_of_DRV_CANFDSPI_TimeStampPrescalerSet:
 14268                           	callstack 0
 14269                           
 14270 ;; *************** function _DRV_CANFDSPI_TimeStampEnable *****************
 14271 ;; Defined at:
 14272 ;;		line 2634 in file "can/can.c"
 14273 ;; Parameters:    Size  Location     Type
 14274 ;;		None
 14275 ;; Auto vars:     Size  Location     Type
 14276 ;;  d               1  [STACK] unsigned char 
 14277 ;;  spiTransferE    1  [STACK] char 
 14278 ;; Return value:  Size  Location     Type
 14279 ;;                  1  [STACK] char 
 14280 ;; Registers used:
 14281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 14282 ;; Tracked objects:
 14283 ;;		On entry : 0/0
 14284 ;;		On exit  : 0/0
 14285 ;;		Unchanged: 0/0
 14286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14291 ;;Total ram usage:        0 bytes
 14292 ;; Hardware stack levels used: 1
 14293 ;; Hardware stack levels required when called: 9
 14294 ;; This function calls:
 14295 ;;		_DRV_CANFDSPI_ReadByte
 14296 ;;		_DRV_CANFDSPI_WriteByte
 14297 ;; This function is called by:
 14298 ;;		_CanInit
 14299 ;; This function uses a reentrant model
 14300 ;;
 14301                           
 14302                           	psect	text54
 14303   01458A                     __ptext54:
 14304                           	callstack 0
 14305   01458A                     _DRV_CANFDSPI_TimeStampEnable:
 14306                           	callstack 0
 14307                           
 14308                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14309   01458A  52E6               	movf	postinc1,f,c
 14310   01458C  52E6               	movf	postinc1,f,c
 14311   01458E                     
 14312                           ;can/can.c: 2637:     uint8_t d = 0;
 14313                           ;stkvar	_d @ sp[(-2)+0]
 14314   01458E  0EFE               	movlw	-2
 14315   014590  6AE3               	clrf	plusw1,c
 14316   014592                     
 14317                           ;can/can.c: 2640:     spiTransferError = DRV_CANFDSPI_ReadByte( 0x014 + 2, &d);
 14318                           ;stkvar	_d @ sp[(-2)+0]
 14319   014592  0EFE               	movlw	254
 14320   014594  24E1               	addwf	fsr1l,w,c
 14321   014596  6E21               	movwf	btemp^0,c
 14322   014598  0EFF               	movlw	255
 14323   01459A  20E2               	addwfc	fsr1h,w,c
 14324   01459C  6E22               	movwf	(btemp+1)^0,c
 14325   01459E  C021  FFE6         	movff	btemp,postinc1
 14326   0145A2  C022  FFE6         	movff	btemp+1,postinc1
 14327   0145A6  0E16               	movlw	22
 14328   0145A8  6EE6               	movwf	postinc1,c
 14329   0145AA  0E00               	movlw	0
 14330   0145AC  6EE6               	movwf	postinc1,c
 14331   0145AE  EC94  F0A2         	call	_DRV_CANFDSPI_ReadByte	;wreg free
 14332                           
 14333                           ;stkvar	_spiTransferError @ sp[(-2)+1]
 14334   0145B2  0EFF               	movlw	-1
 14335   0145B4  C021  FFE3         	movff	btemp,plusw1
 14336   0145B8                     
 14337                           ;can/can.c: 2641:     if (spiTransferError) {
 14338                           ;stkvar	_spiTransferError @ sp[(-2)+1]
 14339   0145B8  0EFF               	movlw	-1
 14340   0145BA  50E3               	movf	plusw1,w,c
 14341   0145BC  B4D8               	btfsc	status,2,c
 14342   0145BE  EFE3  F0A2         	goto	u2511
 14343   0145C2  EFE5  F0A2         	goto	u2510
 14344   0145C6                     u2511:
 14345   0145C6  EFE7  F0A2         	goto	l4862
 14346   0145CA                     u2510:
 14347   0145CA  EFF2  F0A2         	goto	l623
 14348   0145CE                     l4862:
 14349                           
 14350                           ;can/can.c: 2646:     d |= 0x01;
 14351                           ;stkvar	_d @ sp[(-2)+0]
 14352   0145CE  0EFE               	movlw	-2
 14353   0145D0  80E3               	bsf	plusw1,0,c
 14354   0145D2                     
 14355                           ;stkvar	_d @ sp[(-2)+0]
 14356   0145D2  0EFE               	movlw	-2
 14357   0145D4  50E3               	movf	plusw1,w,c
 14358   0145D6  6EE6               	movwf	postinc1,c
 14359   0145D8  0E16               	movlw	22
 14360   0145DA  6EE6               	movwf	postinc1,c
 14361   0145DC  0E00               	movlw	0
 14362   0145DE  6EE6               	movwf	postinc1,c
 14363   0145E0  EC21  F0A3         	call	_DRV_CANFDSPI_WriteByte	;wreg free
 14364   0145E4                     l623:
 14365                           
 14366                           ; _DRV_CANFDSPI_TimeStampEnable: autosize = 2, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14367   0145E4  52E5               	movf	postdec1,f,c
 14368   0145E6  52E5               	movf	postdec1,f,c
 14369   0145E8  0012               	return		;funcret
 14370   0145EA                     __end_of_DRV_CANFDSPI_TimeStampEnable:
 14371                           	callstack 0
 14372                           
 14373 ;; *************** function _DRV_CANFDSPI_TefConfigure *****************
 14374 ;; Defined at:
 14375 ;;		line 1539 in file "can/can.c"
 14376 ;; Parameters:    Size  Location     Type
 14377 ;;  config          2  [STACK] PTR struct _CAN_TEF_CONF
 14378 ;;		 -> tefConfig(1), 
 14379 ;; Auto vars:     Size  Location     Type
 14380 ;;  ciTefCon        4  [STACK] struct _REG_CiTEFCON
 14381 ;;  spiTransferE    1    0        char 
 14382 ;; Return value:  Size  Location     Type
 14383 ;;                  1  [STACK] char 
 14384 ;; Registers used:
 14385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 14386 ;; Tracked objects:
 14387 ;;		On entry : 0/0
 14388 ;;		On exit  : 0/0
 14389 ;;		Unchanged: 0/0
 14390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14395 ;;Total ram usage:        0 bytes
 14396 ;; Hardware stack levels used: 1
 14397 ;; Hardware stack levels required when called: 9
 14398 ;; This function calls:
 14399 ;;		_DRV_CANFDSPI_WriteWord
 14400 ;; This function is called by:
 14401 ;;		_CanInit
 14402 ;; This function uses a reentrant model
 14403 ;;
 14404                           
 14405                           	psect	text55
 14406   013BE0                     __ptext55:
 14407                           	callstack 0
 14408   013BE0                     _DRV_CANFDSPI_TefConfigure:
 14409                           	callstack 0
 14410                           
 14411                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14412   013BE0  52E6               	movf	postinc1,f,c
 14413   013BE2  52E6               	movf	postinc1,f,c
 14414   013BE4  52E6               	movf	postinc1,f,c
 14415   013BE6  52E6               	movf	postinc1,f,c
 14416   013BE8                     
 14417                           ;can/can.c: 1544:     REG_CiTEFCON ciTefCon;;can/can.c: 1545:     ciTefCon.word = canFif
      +                          oResetValues[0];
 14418   013BE8  0EDD               	movlw	low _canFifoResetValues
 14419   013BEA  6EF6               	movwf	tblptrl,c
 14420   013BEC                     	if	1	;There is more than 1 active tblptr byte
 14421   013BEC  0EFF               	movlw	high _canFifoResetValues
 14422   013BEE  6EF7               	movwf	tblptrh,c
 14423   013BF0                     	endif
 14424   013BF0                     	if	1	;There are 3 active tblptr bytes
 14425   013BF0  0E00               	movlw	low (_canFifoResetValues shr (0+16))
 14426   013BF2  6EF8               	movwf	tblptru,c
 14427   013BF4                     	endif
 14428   013BF4  0009               	tblrd		*+
 14429   013BF6  CFF5 F029          	movff	tablat,btemp+8
 14430   013BFA  0009               	tblrd		*+
 14431   013BFC  CFF5 F02A          	movff	tablat,btemp+9
 14432   013C00  0009               	tblrd		*+
 14433   013C02  CFF5 F02B          	movff	tablat,btemp+10
 14434   013C06  0009               	tblrd		*+
 14435   013C08  CFF5 F02C          	movff	tablat,btemp+11
 14436                           
 14437                           ;stkvar	_ciTefCon @ sp[(-4)+0]
 14438   013C0C  0EFC               	movlw	-4
 14439   013C0E  C029  FFE3         	movff	btemp+8,plusw1
 14440   013C12  0EFD               	movlw	-3
 14441   013C14  C02A  FFE3         	movff	btemp+9,plusw1
 14442   013C18  0EFE               	movlw	-2
 14443   013C1A  C02B  FFE3         	movff	btemp+10,plusw1
 14444   013C1E  0EFF               	movlw	-1
 14445   013C20  C02C  FFE3         	movff	btemp+11,plusw1
 14446   013C24                     
 14447                           ;can/can.c: 1547:     ciTefCon.bF.FifoSize = config->FifoSize;
 14448                           ;stkvar	_config @ sp[(-4)+-2]
 14449   013C24  0EFA               	movlw	-6
 14450   013C26  CFE3 FFD9          	movff	plusw1,fsr2l
 14451   013C2A  0EFB               	movlw	-5
 14452   013C2C  CFE3 FFDA          	movff	plusw1,fsr2h
 14453   013C30  30DF               	rrcf	223,w,c
 14454   013C32  0B1F               	andlw	31
 14455   013C34  6E2C               	movwf	(btemp+11)^0,c
 14456                           
 14457                           ;stkvar	_ciTefCon @ sp[(-4)+0]
 14458   013C36  0EFF               	movlw	255
 14459   013C38  24E1               	addwf	fsr1l,w,c
 14460   013C3A  6ED9               	movwf	fsr2l,c
 14461   013C3C  0EFF               	movlw	255
 14462   013C3E  20E2               	addwfc	fsr1h,w,c
 14463   013C40  6EDA               	movwf	fsr2h,c
 14464   013C42  50DF               	movf	223,w,c
 14465   013C44  182C               	xorwf	(btemp+11)^0,w,c
 14466   013C46  0BE0               	andlw	-32
 14467   013C48  182C               	xorwf	(btemp+11)^0,w,c
 14468   013C4A  6EDF               	movwf	223,c
 14469   013C4C                     
 14470                           ;can/can.c: 1548:     ciTefCon.bF.TimeStampEnable = config->TimeStampEnable;
 14471                           ;stkvar	_config @ sp[(-4)+-2]
 14472   013C4C  0EFA               	movlw	-6
 14473   013C4E  CFE3 FFD9          	movff	plusw1,fsr2l
 14474   013C52  0EFB               	movlw	-5
 14475   013C54  CFE3 FFDA          	movff	plusw1,fsr2h
 14476                           
 14477                           ;stkvar	_ciTefCon @ sp[(-4)+0]
 14478   013C58  50E1               	movf	fsr1l,w,c
 14479   013C5A  0FFC               	addlw	-4
 14480   013C5C  6EE9               	movwf	fsr0l,c
 14481   013C5E  50E2               	movf	fsr1h,w,c
 14482   013C60  6EEA               	movwf	fsr0h,c
 14483   013C62  0EFF               	movlw	255
 14484   013C64  22EA               	addwfc	fsr0h,f,c
 14485   013C66  9AEF               	bcf	indf0,5,c
 14486   013C68  A0DF               	btfss	indf2,0,c
 14487   013C6A  EF38  F09E         	goto	u2475
 14488   013C6E  8AEF               	bsf	indf0,5,c
 14489   013C70                     u2475:
 14490   013C70                     
 14491                           ;stkvar	_ciTefCon @ sp[(-4)+0]
 14492   013C70  0EFC               	movlw	-4
 14493   013C72  CFE3 FFE6          	movff	plusw1,postinc1
 14494   013C76  CFE3 FFE6          	movff	plusw1,postinc1
 14495   013C7A  CFE3 FFE6          	movff	plusw1,postinc1
 14496   013C7E  CFE3 FFE6          	movff	plusw1,postinc1
 14497   013C82  0E40               	movlw	64
 14498   013C84  6EE6               	movwf	postinc1,c
 14499   013C86  0E00               	movlw	0
 14500   013C88  6EE6               	movwf	postinc1,c
 14501   013C8A  ECF1  F09B         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 14502   013C8E                     
 14503                           ; _DRV_CANFDSPI_TefConfigure: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 2, argsize = 2, vargsize = 0
 14504   013C8E  0EFA               	movlw	250
 14505   013C90  26E1               	addwf	fsr1l,f,c
 14506   013C92  0EFF               	movlw	255
 14507   013C94  22E2               	addwfc	fsr1h,f,c
 14508   013C96  0012               	return		;funcret
 14509   013C98                     __end_of_DRV_CANFDSPI_TefConfigure:
 14510                           	callstack 0
 14511                           
 14512 ;; *************** function _DRV_CANFDSPI_Reset *****************
 14513 ;; Defined at:
 14514 ;;		line 257 in file "can/can.c"
 14515 ;; Parameters:    Size  Location     Type
 14516 ;;		None
 14517 ;; Auto vars:     Size  Location     Type
 14518 ;;  spiTransferS    2    0        unsigned short 
 14519 ;;  spiTransferE    1    0        char 
 14520 ;; Return value:  Size  Location     Type
 14521 ;;                  1  [STACK] char 
 14522 ;; Registers used:
 14523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, p
      +rodh
 14524 ;; Tracked objects:
 14525 ;;		On entry : 0/0
 14526 ;;		On exit  : 0/0
 14527 ;;		Unchanged: 0/0
 14528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14533 ;;Total ram usage:        0 bytes
 14534 ;; Hardware stack levels used: 1
 14535 ;; Hardware stack levels required when called: 8
 14536 ;; This function calls:
 14537 ;;		_SPI2_Open
 14538 ;;		_SpiTransfer
 14539 ;; This function is called by:
 14540 ;;		_CanInit
 14541 ;; This function uses a reentrant model
 14542 ;;
 14543                           
 14544                           	psect	text56
 14545   014872                     __ptext56:
 14546                           	callstack 0
 14547   014872                     _DRV_CANFDSPI_Reset:
 14548                           	callstack 21
 14549   014872                     
 14550                           ;can/can.c: 263:     spiTransmitBuffer[0] = (uint8_t) (0x00 << 4);
 14551   014872  0101               	movlb	1	; () banked
 14552   014874  6B00               	clrf	_spiTransmitBuffer& (0+255),b
 14553   014876                     
 14554                           ; BSR set to: 1
 14555                           ;can/can.c: 264:     spiTransmitBuffer[1] = 0;
 14556   014876  6B01               	clrf	(_spiTransmitBuffer+1)& (0+255),b
 14557   014878                     
 14558                           ; BSR set to: 1
 14559                           ;can/can.c: 265:     SPI2_Open(SPI2_DEFAULT);
 14560   014878  0E00               	movlw	0
 14561   01487A  6EE6               	movwf	postinc1,c
 14562   01487C  EC4C  F09E         	call	_SPI2_Open	;wreg free
 14563   014880  0E02               	movlw	2
 14564   014882  6EE6               	movwf	postinc1,c
 14565   014884  0E00               	movlw	0
 14566   014886  6EE6               	movwf	postinc1,c
 14567   014888  0E00               	movlw	low _spiReceiveBuffer
 14568   01488A  6EE6               	movwf	postinc1,c
 14569   01488C  0E02               	movlw	high _spiReceiveBuffer
 14570   01488E  6EE6               	movwf	postinc1,c
 14571   014890  0E00               	movlw	low _spiTransmitBuffer
 14572   014892  6EE6               	movwf	postinc1,c
 14573   014894  0E01               	movlw	high _spiTransmitBuffer
 14574   014896  6EE6               	movwf	postinc1,c
 14575   014898  EC8E  F09D         	call	_SpiTransfer	;wreg free
 14576   01489C                     
 14577                           ; _DRV_CANFDSPI_Reset: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14578   01489C  0012               	return		;funcret
 14579   01489E                     __end_of_DRV_CANFDSPI_Reset:
 14580                           	callstack 0
 14581                           
 14582 ;; *************** function _SPI2_Open *****************
 14583 ;; Defined at:
 14584 ;;		line 72 in file "mcc_generated_files/spi2.c"
 14585 ;; Parameters:    Size  Location     Type
 14586 ;;  spi2UniqueCo    1  [STACK] enum E358
 14587 ;; Auto vars:     Size  Location     Type
 14588 ;;		None
 14589 ;; Return value:  Size  Location     Type
 14590 ;;                  1  [STACK] _Bool 
 14591 ;; Registers used:
 14592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 14593 ;; Tracked objects:
 14594 ;;		On entry : 3F/1
 14595 ;;		On exit  : 0/0
 14596 ;;		Unchanged: 0/0
 14597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14602 ;;Total ram usage:        0 bytes
 14603 ;; Hardware stack levels used: 1
 14604 ;; Hardware stack levels required when called: 7
 14605 ;; This function calls:
 14606 ;;		Nothing
 14607 ;; This function is called by:
 14608 ;;		_DRV_CANFDSPI_Reset
 14609 ;; This function uses a reentrant model
 14610 ;;
 14611                           
 14612                           	psect	text57
 14613   013C98                     __ptext57:
 14614                           	callstack 0
 14615   013C98                     _SPI2_Open:
 14616                           	callstack 21
 14617   013C98                     
 14618                           ;mcc_generated_files/spi2.c: 72: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 73: {;mcc_generated_files/spi2.c: 74:     if(!SSP2CON1bits.SS
      +                          PEN)
 14619   013C98  BA63               	btfsc	99,5,c	;volatile
 14620   013C9A  EF51  F09E         	goto	u2211
 14621   013C9E  EF53  F09E         	goto	u2210
 14622   013CA2                     u2211:
 14623   013CA2  EFA5  F09E         	goto	l1120
 14624   013CA6                     u2210:
 14625   013CA6                     
 14626                           ;mcc_generated_files/spi2.c: 75:     {;mcc_generated_files/spi2.c: 76:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
 14627                           ;stkvar	_spi2UniqueConfiguration @ sp[(0)+-1]
 14628   013CA6  0EFF               	movlw	-1
 14629   013CA8  50E3               	movf	plusw1,w,c
 14630   013CAA  0D04               	mullw	4
 14631   013CAC  0E01               	movlw	1
 14632   013CAE  26F3               	addwf	243,f,c
 14633   013CB0  0E00               	movlw	0
 14634   013CB2  22F4               	addwfc	244,f,c
 14635   013CB4  0EE9               	movlw	low _spi2_configuration
 14636   013CB6  24F3               	addwf	243,w,c
 14637   013CB8  6EF6               	movwf	tblptrl,c
 14638   013CBA  0EFF               	movlw	high _spi2_configuration
 14639   013CBC  20F4               	addwfc	244,w,c
 14640   013CBE  6EF7               	movwf	tblptrh,c
 14641   013CC0                     	if	1	;There are 3 active tblptr bytes
 14642   013CC0  6AF8               	clrf	tblptru,c
 14643   013CC2  0E00               	movlw	low (__mediumconst shr (0+16))
 14644   013CC4  22F8               	addwfc	tblptru,f,c
 14645   013CC6                     	endif
 14646   013CC6  0008               	tblrd		*
 14647   013CC8  CFF5 FF64          	movff	tablat,3940	;volatile
 14648                           
 14649                           ;mcc_generated_files/spi2.c: 77:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
 14650                           ;stkvar	_spi2UniqueConfiguration @ sp[(0)+-1]
 14651   013CCC  0EFF               	movlw	-1
 14652   013CCE  50E3               	movf	plusw1,w,c
 14653   013CD0  0D04               	mullw	4
 14654   013CD2  0EE9               	movlw	low _spi2_configuration
 14655   013CD4  24F3               	addwf	243,w,c
 14656   013CD6  6EF6               	movwf	tblptrl,c
 14657   013CD8  0EFF               	movlw	high _spi2_configuration
 14658   013CDA  20F4               	addwfc	244,w,c
 14659   013CDC  6EF7               	movwf	tblptrh,c
 14660   013CDE                     	if	1	;There are 3 active tblptr bytes
 14661   013CDE  6AF8               	clrf	tblptru,c
 14662   013CE0  0E00               	movlw	low (__mediumconst shr (0+16))
 14663   013CE2  22F8               	addwfc	tblptru,f,c
 14664   013CE4                     	endif
 14665   013CE4  0008               	tblrd		*
 14666   013CE6  CFF5 FF63          	movff	tablat,3939	;volatile
 14667   013CEA                     
 14668                           ;mcc_generated_files/spi2.c: 78:         SSP2CON2 = 0x00;
 14669   013CEA  6A62               	clrf	98,c	;volatile
 14670                           
 14671                           ;mcc_generated_files/spi2.c: 79:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
 14672                           ;stkvar	_spi2UniqueConfiguration @ sp[(0)+-1]
 14673   013CEC  0EFF               	movlw	-1
 14674   013CEE  50E3               	movf	plusw1,w,c
 14675   013CF0  0D04               	mullw	4
 14676   013CF2  0E02               	movlw	2
 14677   013CF4  26F3               	addwf	243,f,c
 14678   013CF6  0E00               	movlw	0
 14679   013CF8  22F4               	addwfc	244,f,c
 14680   013CFA  0EE9               	movlw	low _spi2_configuration
 14681   013CFC  24F3               	addwf	243,w,c
 14682   013CFE  6EF6               	movwf	tblptrl,c
 14683   013D00  0EFF               	movlw	high _spi2_configuration
 14684   013D02  20F4               	addwfc	244,w,c
 14685   013D04  6EF7               	movwf	tblptrh,c
 14686   013D06                     	if	1	;There are 3 active tblptr bytes
 14687   013D06  6AF8               	clrf	tblptru,c
 14688   013D08  0E00               	movlw	low (__mediumconst shr (0+16))
 14689   013D0A  22F8               	addwfc	tblptru,f,c
 14690   013D0C                     	endif
 14691   013D0C  0008               	tblrd		*
 14692   013D0E  CFF5 FF65          	movff	tablat,3941	;volatile
 14693   013D12                     
 14694                           ;mcc_generated_files/spi2.c: 80:         TRISDbits.TRISD6 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
 14695                           ;stkvar	_spi2UniqueConfiguration @ sp[(0)+-1]
 14696   013D12  0EFF               	movlw	-1
 14697   013D14  50E3               	movf	plusw1,w,c
 14698   013D16  0D04               	mullw	4
 14699   013D18  0E03               	movlw	3
 14700   013D1A  26F3               	addwf	243,f,c
 14701   013D1C  0E00               	movlw	0
 14702   013D1E  22F4               	addwfc	244,f,c
 14703   013D20  0EE9               	movlw	low _spi2_configuration
 14704   013D22  24F3               	addwf	243,w,c
 14705   013D24  6EF6               	movwf	tblptrl,c
 14706   013D26  0EFF               	movlw	high _spi2_configuration
 14707   013D28  20F4               	addwfc	244,w,c
 14708   013D2A  6EF7               	movwf	tblptrh,c
 14709   013D2C                     	if	1	;There are 3 active tblptr bytes
 14710   013D2C  6AF8               	clrf	tblptru,c
 14711   013D2E  0E00               	movlw	low (__mediumconst shr (0+16))
 14712   013D30  22F8               	addwfc	tblptru,f,c
 14713   013D32                     	endif
 14714   013D32  0008               	tblrd		*
 14715   013D34  CFF5 F02C          	movff	tablat,btemp+11
 14716   013D38  3A2C               	swapf	(btemp+11)^0,f,c
 14717   013D3A  462C               	rlncf	(btemp+11)^0,f,c
 14718   013D3C  462C               	rlncf	(btemp+11)^0,f,c
 14719   013D3E  5095               	movf	149,w,c	;volatile
 14720   013D40  182C               	xorwf	(btemp+11)^0,w,c
 14721   013D42  0BBF               	andlw	-65
 14722   013D44  182C               	xorwf	(btemp+11)^0,w,c
 14723   013D46  6E95               	movwf	149,c	;volatile
 14724   013D48                     
 14725                           ;mcc_generated_files/spi2.c: 81:         SSP2CON1bits.SSPEN = 1;
 14726   013D48  8A63               	bsf	99,5,c	;volatile
 14727   013D4A                     l1120:
 14728                           
 14729                           ; _SPI2_Open: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 14730   013D4A  52E5               	movf	postdec1,f,c
 14731   013D4C  0012               	return		;funcret
 14732   013D4E                     __end_of_SPI2_Open:
 14733                           	callstack 0
 14734                           
 14735 ;; *************** function _DRV_CANFDSPI_ReceiveChannelConfigure *****************
 14736 ;; Defined at:
 14737 ;;		line 1172 in file "can/can.c"
 14738 ;; Parameters:    Size  Location     Type
 14739 ;;  channel         1  [STACK] enum E5287
 14740 ;;  config          2  [STACK] PTR struct _CAN_RX_FIFO_
 14741 ;;		 -> rxfConfig(3), 
 14742 ;; Auto vars:     Size  Location     Type
 14743 ;;  ciFifoCon       5  [STACK] struct _REG_CiFIFOCON
 14744 ;;  a               2  [STACK] unsigned short 
 14745 ;;  spiTransferE    1    0        char 
 14746 ;; Return value:  Size  Location     Type
 14747 ;;                  1  [STACK] char 
 14748 ;; Registers used:
 14749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 14750 ;; Tracked objects:
 14751 ;;		On entry : 0/0
 14752 ;;		On exit  : 0/0
 14753 ;;		Unchanged: 0/0
 14754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14759 ;;Total ram usage:        0 bytes
 14760 ;; Hardware stack levels used: 1
 14761 ;; Hardware stack levels required when called: 9
 14762 ;; This function calls:
 14763 ;;		_DRV_CANFDSPI_WriteWord
 14764 ;; This function is called by:
 14765 ;;		_CanInit
 14766 ;; This function uses a reentrant model
 14767 ;;
 14768                           
 14769                           	psect	text58
 14770   012D66                     __ptext58:
 14771                           	callstack 0
 14772   012D66                     _DRV_CANFDSPI_ReceiveChannelConfigure:
 14773                           	callstack 0
 14774                           
 14775                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14776   012D66  0E07               	movlw	7
 14777   012D68  26E1               	addwf	fsr1l,f,c
 14778   012D6A  0E00               	movlw	0
 14779   012D6C  22E2               	addwfc	fsr1h,f,c
 14780   012D6E                     
 14781                           ;can/can.c: 1178:     if (channel == CAN_FIFO_CH0) {
 14782                           ;stkvar	_channel @ sp[(-7)+-1]
 14783   012D6E  0EF8               	movlw	-8
 14784   012D70  50E3               	movf	plusw1,w,c
 14785   012D72  A4D8               	btfss	status,2,c
 14786   012D74  EFBE  F096         	goto	u2491
 14787   012D78  EFC0  F096         	goto	u2490
 14788   012D7C                     u2491:
 14789   012D7C  EFC2  F096         	goto	l4826
 14790   012D80                     u2490:
 14791   012D80  EF4F  F097         	goto	l346
 14792   012D84                     l4826:
 14793                           
 14794                           ;can/can.c: 1183:     REG_CiFIFOCON ciFifoCon;;can/can.c: 1184:     ciFifoCon.word = can
      +                          FifoResetValues[0];
 14795   012D84  0EDD               	movlw	low _canFifoResetValues
 14796   012D86  6EF6               	movwf	tblptrl,c
 14797   012D88                     	if	1	;There is more than 1 active tblptr byte
 14798   012D88  0EFF               	movlw	high _canFifoResetValues
 14799   012D8A  6EF7               	movwf	tblptrh,c
 14800   012D8C                     	endif
 14801   012D8C                     	if	1	;There are 3 active tblptr bytes
 14802   012D8C  0E00               	movlw	low (_canFifoResetValues shr (0+16))
 14803   012D8E  6EF8               	movwf	tblptru,c
 14804   012D90                     	endif
 14805   012D90  0009               	tblrd		*+
 14806   012D92  CFF5 F029          	movff	tablat,btemp+8
 14807   012D96  0009               	tblrd		*+
 14808   012D98  CFF5 F02A          	movff	tablat,btemp+9
 14809   012D9C  0009               	tblrd		*+
 14810   012D9E  CFF5 F02B          	movff	tablat,btemp+10
 14811   012DA2  0009               	tblrd		*+
 14812   012DA4  CFF5 F02C          	movff	tablat,btemp+11
 14813                           
 14814                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14815   012DA8  0EF9               	movlw	-7
 14816   012DAA  C029  FFE3         	movff	btemp+8,plusw1
 14817   012DAE  0EFA               	movlw	-6
 14818   012DB0  C02A  FFE3         	movff	btemp+9,plusw1
 14819   012DB4  0EFB               	movlw	-5
 14820   012DB6  C02B  FFE3         	movff	btemp+10,plusw1
 14821   012DBA  0EFC               	movlw	-4
 14822   012DBC  C02C  FFE3         	movff	btemp+11,plusw1
 14823   012DC0                     
 14824                           ;can/can.c: 1186:     ciFifoCon.rxBF.TxEnable = 0;
 14825                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14826   012DC0  50E1               	movf	fsr1l,w,c
 14827   012DC2  0FF9               	addlw	-7
 14828   012DC4  6ED9               	movwf	fsr2l,c
 14829   012DC6  50E2               	movf	fsr1h,w,c
 14830   012DC8  6EDA               	movwf	fsr2h,c
 14831   012DCA  0EFF               	movlw	255
 14832   012DCC  22DA               	addwfc	fsr2h,f,c
 14833   012DCE  9EDF               	bcf	indf2,7,c
 14834   012DD0                     
 14835                           ;can/can.c: 1189:     ciFifoCon.byte[3] = config->FifoSize | (uint8_t)(config->PayLoadSi
      +                          ze << 5);
 14836                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14837   012DD0  0EFC               	movlw	252
 14838   012DD2  24E1               	addwf	fsr1l,w,c
 14839   012DD4  6ED9               	movwf	fsr2l,c
 14840   012DD6  0EFF               	movlw	255
 14841   012DD8  20E2               	addwfc	fsr1h,w,c
 14842   012DDA  6EDA               	movwf	fsr2h,c
 14843                           
 14844                           ;stkvar	_config @ sp[(-7)+-3]
 14845   012DDC  0EF6               	movlw	-10
 14846   012DDE  CFE3 F02B          	movff	plusw1,btemp+10
 14847   012DE2  0EF7               	movlw	-9
 14848   012DE4  CFE3 F02C          	movff	plusw1,btemp+11
 14849   012DE8  0E01               	movlw	1
 14850   012DEA  242B               	addwf	(btemp+10)^0,w,c
 14851   012DEC  6EE9               	movwf	fsr0l,c
 14852   012DEE  0E00               	movlw	0
 14853   012DF0  202C               	addwfc	(btemp+11)^0,w,c
 14854   012DF2  6EEA               	movwf	fsr0h,c
 14855   012DF4  50EF               	movf	indf0,w,c
 14856   012DF6  6E2C               	movwf	(btemp+11)^0,c
 14857                           
 14858                           ;stkvar	_config @ sp[(-7)+-3]
 14859   012DF8  0EF6               	movlw	-10
 14860   012DFA  CFE3 F029          	movff	plusw1,btemp+8
 14861   012DFE  0EF7               	movlw	-9
 14862   012E00  CFE3 F02A          	movff	plusw1,btemp+9
 14863   012E04  0E02               	movlw	2
 14864   012E06  2429               	addwf	(btemp+8)^0,w,c
 14865   012E08  6EE9               	movwf	fsr0l,c
 14866   012E0A  0E00               	movlw	0
 14867   012E0C  202A               	addwfc	(btemp+9)^0,w,c
 14868   012E0E  6EEA               	movwf	fsr0h,c
 14869   012E10  50EF               	movf	indf0,w,c
 14870   012E12  6E2B               	movwf	(btemp+10)^0,c
 14871   012E14  0E05               	movlw	5
 14872   012E16  6E21               	movwf	btemp^0,c
 14873   012E18                     u2505:
 14874   012E18  90D8               	bcf	status,0,c
 14875   012E1A  362B               	rlcf	(btemp+10)^0,f,c
 14876   012E1C  2E21               	decfsz	btemp^0,f,c
 14877   012E1E  EF0C  F097         	goto	u2505
 14878   012E22  502B               	movf	(btemp+10)^0,w,c
 14879   012E24  102C               	iorwf	(btemp+11)^0,w,c
 14880   012E26  6EDF               	movwf	indf2,c
 14881   012E28                     
 14882                           ;can/can.c: 1190:     ciFifoCon.rxBF.RxTimeStampEnable = config->RxTimeStampEnable;
 14883                           ;stkvar	_config @ sp[(-7)+-3]
 14884   012E28  0EF6               	movlw	-10
 14885   012E2A  CFE3 FFD9          	movff	plusw1,fsr2l
 14886   012E2E  0EF7               	movlw	-9
 14887   012E30  CFE3 FFDA          	movff	plusw1,fsr2h
 14888   012E34  50DF               	movf	indf2,w,c
 14889   012E36  6E2C               	movwf	(btemp+11)^0,c
 14890                           
 14891                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14892   012E38  50E1               	movf	fsr1l,w,c
 14893   012E3A  0FF9               	addlw	-7
 14894   012E3C  6ED9               	movwf	fsr2l,c
 14895   012E3E  50E2               	movf	fsr1h,w,c
 14896   012E40  6EDA               	movwf	fsr2h,c
 14897   012E42  0EFF               	movlw	255
 14898   012E44  22DA               	addwfc	fsr2h,f,c
 14899   012E46  3A2C               	swapf	(btemp+11)^0,f,c
 14900   012E48  462C               	rlncf	(btemp+11)^0,f,c
 14901   012E4A  50DF               	movf	223,w,c
 14902   012E4C  182C               	xorwf	(btemp+11)^0,w,c
 14903   012E4E  0BDF               	andlw	-33
 14904   012E50  182C               	xorwf	(btemp+11)^0,w,c
 14905   012E52  6EDF               	movwf	223,c
 14906   012E54                     
 14907                           ;can/can.c: 1193:     ciFifoCon.rxBF.RxNotEmptyIE = 1;
 14908                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14909   012E54  50E1               	movf	fsr1l,w,c
 14910   012E56  0FF9               	addlw	-7
 14911   012E58  6ED9               	movwf	fsr2l,c
 14912   012E5A  50E2               	movf	fsr1h,w,c
 14913   012E5C  6EDA               	movwf	fsr2h,c
 14914   012E5E  0EFF               	movlw	255
 14915   012E60  22DA               	addwfc	fsr2h,f,c
 14916   012E62  80DF               	bsf	indf2,0,c
 14917   012E64                     
 14918                           ;can/can.c: 1195:     a = 0x050 + (channel * (3*4));
 14919                           ;stkvar	_channel @ sp[(-7)+-1]
 14920   012E64  0EF8               	movlw	-8
 14921   012E66  50E3               	movf	plusw1,w,c
 14922   012E68  0D0C               	mullw	12
 14923   012E6A  0E50               	movlw	80
 14924   012E6C  26F3               	addwf	243,f,c
 14925   012E6E  0E00               	movlw	0
 14926   012E70  22F4               	addwfc	244,f,c
 14927                           
 14928                           ;stkvar	_a @ sp[(-7)+5]
 14929   012E72  0EFE               	movlw	-2
 14930   012E74  CFF3 FFE3          	movff	prodl,plusw1
 14931   012E78  0EFF               	movlw	-1
 14932   012E7A  CFF4 FFE3          	movff	prodh,plusw1
 14933   012E7E                     
 14934                           ;stkvar	_ciFifoCon @ sp[(-7)+0]
 14935   012E7E  0EF9               	movlw	-7
 14936   012E80  CFE3 FFE6          	movff	plusw1,postinc1
 14937   012E84  CFE3 FFE6          	movff	plusw1,postinc1
 14938   012E88  CFE3 FFE6          	movff	plusw1,postinc1
 14939   012E8C  CFE3 FFE6          	movff	plusw1,postinc1
 14940                           
 14941                           ;stkvar	_a @ sp[(-11)+5]
 14942   012E90  0EFA               	movlw	-6
 14943   012E92  CFE3 FFE6          	movff	plusw1,postinc1
 14944   012E96  CFE3 FFE6          	movff	plusw1,postinc1
 14945   012E9A  ECF1  F09B         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 14946   012E9E                     l346:
 14947                           
 14948                           ; _DRV_CANFDSPI_ReceiveChannelConfigure: autosize = 7, savesize = 0, parsavesize = 0, te
      +                          mpsize = 0 parsize = 3, argsize = 3, vargsize = 0
 14949   012E9E  0EF6               	movlw	246
 14950   012EA0  26E1               	addwf	fsr1l,f,c
 14951   012EA2  0EFF               	movlw	255
 14952   012EA4  22E2               	addwfc	fsr1h,f,c
 14953   012EA6  0012               	return		;funcret
 14954   012EA8                     __end_of_DRV_CANFDSPI_ReceiveChannelConfigure:
 14955                           	callstack 0
 14956                           
 14957 ;; *************** function _DRV_CANFDSPI_OperationModeSelect *****************
 14958 ;; Defined at:
 14959 ;;		line 499 in file "can/can.c"
 14960 ;; Parameters:    Size  Location     Type
 14961 ;;  opMode          1  [STACK] enum E5357
 14962 ;; Auto vars:     Size  Location     Type
 14963 ;;  d               1  [STACK] unsigned char 
 14964 ;;  spiTransferE    1  [STACK] char 
 14965 ;; Return value:  Size  Location     Type
 14966 ;;                  1  [STACK] char 
 14967 ;; Registers used:
 14968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 14969 ;; Tracked objects:
 14970 ;;		On entry : 0/0
 14971 ;;		On exit  : 0/0
 14972 ;;		Unchanged: 0/0
 14973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14978 ;;Total ram usage:        0 bytes
 14979 ;; Hardware stack levels used: 1
 14980 ;; Hardware stack levels required when called: 9
 14981 ;; This function calls:
 14982 ;;		_DRV_CANFDSPI_ReadByte
 14983 ;;		_DRV_CANFDSPI_WriteByte
 14984 ;; This function is called by:
 14985 ;;		_CanInit
 14986 ;; This function uses a reentrant model
 14987 ;;
 14988                           
 14989                           	psect	text59
 14990   0142FC                     __ptext59:
 14991                           	callstack 0
 14992   0142FC                     _DRV_CANFDSPI_OperationModeSelect:
 14993                           	callstack 0
 14994                           
 14995                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14996   0142FC  52E6               	movf	postinc1,f,c
 14997   0142FE  52E6               	movf	postinc1,f,c
 14998   014300                     
 14999                           ;can/can.c: 499: int8_t DRV_CANFDSPI_OperationModeSelect(CAN_OPERATION_MODE opMode);can/
      +                          can.c: 500: {;can/can.c: 501:     uint8_t d = 0;
 15000                           ;stkvar	_d @ sp[(-2)+0]
 15001   014300  0EFE               	movlw	-2
 15002   014302  6AE3               	clrf	plusw1,c
 15003   014304                     
 15004                           ;can/can.c: 505:     spiTransferError = DRV_CANFDSPI_ReadByte(0x000 + 3, &d);
 15005                           ;stkvar	_d @ sp[(-2)+0]
 15006   014304  0EFE               	movlw	254
 15007   014306  24E1               	addwf	fsr1l,w,c
 15008   014308  6E21               	movwf	btemp^0,c
 15009   01430A  0EFF               	movlw	255
 15010   01430C  20E2               	addwfc	fsr1h,w,c
 15011   01430E  6E22               	movwf	(btemp+1)^0,c
 15012   014310  C021  FFE6         	movff	btemp,postinc1
 15013   014314  C022  FFE6         	movff	btemp+1,postinc1
 15014   014318  0E03               	movlw	3
 15015   01431A  6EE6               	movwf	postinc1,c
 15016   01431C  0E00               	movlw	0
 15017   01431E  6EE6               	movwf	postinc1,c
 15018   014320  EC94  F0A2         	call	_DRV_CANFDSPI_ReadByte	;wreg free
 15019                           
 15020                           ;stkvar	_spiTransferError @ sp[(-2)+1]
 15021   014324  0EFF               	movlw	-1
 15022   014326  C021  FFE3         	movff	btemp,plusw1
 15023   01432A                     
 15024                           ;can/can.c: 506:     if (spiTransferError) {
 15025                           ;stkvar	_spiTransferError @ sp[(-2)+1]
 15026   01432A  0EFF               	movlw	-1
 15027   01432C  50E3               	movf	plusw1,w,c
 15028   01432E  B4D8               	btfsc	status,2,c
 15029   014330  EF9C  F0A1         	goto	u2521
 15030   014334  EF9E  F0A1         	goto	u2520
 15031   014338                     u2521:
 15032   014338  EFA0  F0A1         	goto	l4894
 15033   01433C                     u2520:
 15034   01433C  EFBD  F0A1         	goto	l222
 15035   014340                     l4894:
 15036                           
 15037                           ;can/can.c: 511:     d &= ~0x07;
 15038                           ;stkvar	_d @ sp[(-2)+0]
 15039   014340  0EFE               	movlw	-2
 15040   014342  CFE3 F021          	movff	plusw1,btemp
 15041   014346  0EF8               	movlw	248
 15042   014348  1621               	andwf	btemp^0,f,c
 15043   01434A  0EFE               	movlw	-2
 15044   01434C  C021  FFE3         	movff	btemp,plusw1
 15045   014350                     
 15046                           ;can/can.c: 512:     d |= opMode;
 15047                           ;stkvar	_opMode @ sp[(-2)+-1]
 15048   014350  0EFD               	movlw	-3
 15049   014352  CFE3 F02C          	movff	plusw1,btemp+11
 15050                           
 15051                           ;stkvar	_d @ sp[(-2)+0]
 15052   014356  50E1               	movf	fsr1l,w,c
 15053   014358  0FFE               	addlw	-2
 15054   01435A  6ED9               	movwf	fsr2l,c
 15055   01435C  50E2               	movf	fsr1h,w,c
 15056   01435E  6EDA               	movwf	fsr2h,c
 15057   014360  0EFF               	movlw	255
 15058   014362  22DA               	addwfc	fsr2h,f,c
 15059   014364  502C               	movf	(btemp+11)^0,w,c
 15060   014366  12DF               	iorwf	indf2,f,c
 15061   014368                     
 15062                           ;stkvar	_d @ sp[(-2)+0]
 15063   014368  0EFE               	movlw	-2
 15064   01436A  50E3               	movf	plusw1,w,c
 15065   01436C  6EE6               	movwf	postinc1,c
 15066   01436E  0E03               	movlw	3
 15067   014370  6EE6               	movwf	postinc1,c
 15068   014372  0E00               	movlw	0
 15069   014374  6EE6               	movwf	postinc1,c
 15070   014376  EC21  F0A3         	call	_DRV_CANFDSPI_WriteByte	;wreg free
 15071   01437A                     l222:
 15072                           
 15073                           ; _DRV_CANFDSPI_OperationModeSelect: autosize = 2, savesize = 0, parsavesize = 0, tempsi
      +                          ze = 0 parsize = 1, argsize = 1, vargsize = 0
 15074   01437A  52E5               	movf	postdec1,f,c
 15075   01437C  52E5               	movf	postdec1,f,c
 15076   01437E  52E5               	movf	postdec1,f,c
 15077   014380  0012               	return		;funcret
 15078   014382                     __end_of_DRV_CANFDSPI_OperationModeSelect:
 15079                           	callstack 0
 15080                           
 15081 ;; *************** function _DRV_CANFDSPI_WriteByte *****************
 15082 ;; Defined at:
 15083 ;;		line 294 in file "can/can.c"
 15084 ;; Parameters:    Size  Location     Type
 15085 ;;  address         2  [STACK] unsigned short 
 15086 ;;  txd             1  [STACK] unsigned char 
 15087 ;; Auto vars:     Size  Location     Type
 15088 ;;  spiTransferS    2    0        unsigned short 
 15089 ;;  spiTransferE    1  [STACK] char 
 15090 ;; Return value:  Size  Location     Type
 15091 ;;                  1  [STACK] char 
 15092 ;; Registers used:
 15093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 15094 ;; Tracked objects:
 15095 ;;		On entry : 0/0
 15096 ;;		On exit  : 0/0
 15097 ;;		Unchanged: 0/0
 15098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15103 ;;Total ram usage:        0 bytes
 15104 ;; Hardware stack levels used: 1
 15105 ;; Hardware stack levels required when called: 8
 15106 ;; This function calls:
 15107 ;;		_SpiTransfer
 15108 ;; This function is called by:
 15109 ;;		_DRV_CANFDSPI_OperationModeSelect
 15110 ;;		_DRV_CANFDSPI_TransmitChannelUpdate
 15111 ;;		_DRV_CANFDSPI_FilterToFifoLink
 15112 ;;		_DRV_CANFDSPI_FilterDisable
 15113 ;;		_DRV_CANFDSPI_ReceiveChannelUpdate
 15114 ;;		_DRV_CANFDSPI_TimeStampEnable
 15115 ;; This function uses a reentrant model
 15116 ;;
 15117                           
 15118                           	psect	text60
 15119   014642                     __ptext60:
 15120                           	callstack 0
 15121   014642                     _DRV_CANFDSPI_WriteByte:
 15122                           	callstack 0
 15123                           
 15124                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15125   014642  52E6               	movf	postinc1,f,c
 15126   014644                     
 15127                           ;can/can.c: 300:     spiTransmitBuffer[0] = (uint8_t) ((0x02 << 4) + ((address >> 8) & 0
      +                          xF));
 15128                           ;stkvar	_address @ sp[(-1)+-2]
 15129   014644  0EFE               	movlw	254
 15130   014646  24E1               	addwf	fsr1l,w,c
 15131   014648  6ED9               	movwf	fsr2l,c
 15132   01464A  0EFF               	movlw	255
 15133   01464C  20E2               	addwfc	fsr1h,w,c
 15134   01464E  6EDA               	movwf	fsr2h,c
 15135   014650  50DF               	movf	indf2,w,c
 15136   014652  0B0F               	andlw	15
 15137   014654  0F20               	addlw	32
 15138   014656  0101               	movlb	1	; () banked
 15139   014658  6F00               	movwf	_spiTransmitBuffer& (0+255),b
 15140   01465A                     
 15141                           ; BSR set to: 1
 15142                           ;can/can.c: 301:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
 15143                           ;stkvar	_address @ sp[(-1)+-2]
 15144   01465A  0EFD               	movlw	-3
 15145   01465C  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
 15146   014660                     
 15147                           ; BSR set to: 1
 15148                           ;can/can.c: 302:     spiTransmitBuffer[2] = txd;
 15149                           ;stkvar	_txd @ sp[(-1)+-3]
 15150   014660  0EFC               	movlw	-4
 15151   014662  CFE3 F102          	movff	plusw1,_spiTransmitBuffer+2
 15152   014666                     
 15153                           ; BSR set to: 1
 15154                           ;can/can.c: 304:     spiTransferError = SpiTransfer(spiTransmitBuffer, spiReceiveBuffer,
      +                           spiTransferSize);
 15155   014666  0E03               	movlw	3
 15156   014668  6EE6               	movwf	postinc1,c
 15157   01466A  0E00               	movlw	0
 15158   01466C  6EE6               	movwf	postinc1,c
 15159   01466E  0E00               	movlw	low _spiReceiveBuffer
 15160   014670  6EE6               	movwf	postinc1,c
 15161   014672  0E02               	movlw	high _spiReceiveBuffer
 15162   014674  6EE6               	movwf	postinc1,c
 15163   014676  0E00               	movlw	low _spiTransmitBuffer
 15164   014678  6EE6               	movwf	postinc1,c
 15165   01467A  0E01               	movlw	high _spiTransmitBuffer
 15166   01467C  6EE6               	movwf	postinc1,c
 15167   01467E  EC8E  F09D         	call	_SpiTransfer	;wreg free
 15168                           
 15169                           ;stkvar	_spiTransferError @ sp[(-1)+0]
 15170   014682  0EFF               	movlw	-1
 15171   014684  C021  FFE3         	movff	btemp,plusw1
 15172   014688                     
 15173                           ;can/can.c: 306:     return spiTransferError;
 15174                           ;stkvar	_spiTransferError @ sp[(-1)+0]
 15175   014688  0EFF               	movlw	-1
 15176   01468A  CFE3 F021          	movff	plusw1,btemp
 15177   01468E                     
 15178                           ; _DRV_CANFDSPI_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 3, argsize = 3, vargsize = 0
 15179   01468E  52E5               	movf	postdec1,f,c
 15180   014690  52E5               	movf	postdec1,f,c
 15181   014692  52E5               	movf	postdec1,f,c
 15182   014694  52E5               	movf	postdec1,f,c
 15183   014696  0012               	return		;funcret
 15184   014698                     __end_of_DRV_CANFDSPI_WriteByte:
 15185                           	callstack 0
 15186                           
 15187 ;; *************** function _DRV_CANFDSPI_ReadByte *****************
 15188 ;; Defined at:
 15189 ;;		line 276 in file "can/can.c"
 15190 ;; Parameters:    Size  Location     Type
 15191 ;;  address         2  [STACK] unsigned short 
 15192 ;;  rxd             2  [STACK] PTR unsigned char 
 15193 ;;		 -> b(1), iocon(4), osc(4), d(1), 
 15194 ;;		 -> d(1), d(1), d(1), crc(1), 
 15195 ;;		 -> crc(1), crc(1), crc(1), eccStat(1), 
 15196 ;;		 -> eccInterrupts(1), eccInterrupts(1), eccStatus(1), d(1), 
 15197 ;;		 -> d(1), f(1), icodeByte(1), filterHitByte(1), 
 15198 ;;		 -> txCodeByte(1), rxCodeByte(1), ciTefCon(4), ciTefSta(4), 
 15199 ;;		 -> d(1), fCtrl(1), d(1), d(1), 
 15200 ;;		 -> ciFifoSta(4), ciFifoCon(5), d(1), d(1), 
 15201 ;;		 -> d(1), d(1), 
 15202 ;; Auto vars:     Size  Location     Type
 15203 ;;  spiTransferS    2    0        unsigned short 
 15204 ;;  spiTransferE    1  [STACK] char 
 15205 ;; Return value:  Size  Location     Type
 15206 ;;                  1  [STACK] char 
 15207 ;; Registers used:
 15208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 15209 ;; Tracked objects:
 15210 ;;		On entry : 0/0
 15211 ;;		On exit  : 0/0
 15212 ;;		Unchanged: 0/0
 15213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15218 ;;Total ram usage:        0 bytes
 15219 ;; Hardware stack levels used: 1
 15220 ;; Hardware stack levels required when called: 8
 15221 ;; This function calls:
 15222 ;;		_SpiTransfer
 15223 ;; This function is called by:
 15224 ;;		_DRV_CANFDSPI_OperationModeSelect
 15225 ;;		_DRV_CANFDSPI_FilterDisable
 15226 ;;		_DRV_CANFDSPI_TransmitChannelEventGet
 15227 ;;		_DRV_CANFDSPI_ReceiveChannelEventGet
 15228 ;;		_DRV_CANFDSPI_TimeStampEnable
 15229 ;; This function uses a reentrant model
 15230 ;;
 15231                           
 15232                           	psect	text61
 15233   014528                     __ptext61:
 15234                           	callstack 0
 15235   014528                     _DRV_CANFDSPI_ReadByte:
 15236                           	callstack 0
 15237                           
 15238                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15239   014528  52E6               	movf	postinc1,f,c
 15240   01452A                     
 15241                           ;can/can.c: 282:     spiTransmitBuffer[0] = (uint8_t) ((0x03 << 4) + ((address >> 8) & 0
      +                          xF));
 15242                           ;stkvar	_address @ sp[(-1)+-2]
 15243   01452A  0EFE               	movlw	254
 15244   01452C  24E1               	addwf	fsr1l,w,c
 15245   01452E  6ED9               	movwf	fsr2l,c
 15246   014530  0EFF               	movlw	255
 15247   014532  20E2               	addwfc	fsr1h,w,c
 15248   014534  6EDA               	movwf	fsr2h,c
 15249   014536  50DF               	movf	indf2,w,c
 15250   014538  0B0F               	andlw	15
 15251   01453A  0F30               	addlw	48
 15252   01453C  0101               	movlb	1	; () banked
 15253   01453E  6F00               	movwf	_spiTransmitBuffer& (0+255),b
 15254   014540                     
 15255                           ; BSR set to: 1
 15256                           ;can/can.c: 283:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
 15257                           ;stkvar	_address @ sp[(-1)+-2]
 15258   014540  0EFD               	movlw	-3
 15259   014542  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
 15260   014546                     
 15261                           ; BSR set to: 1
 15262                           ;can/can.c: 284:     spiTransmitBuffer[2] = 0;
 15263   014546  6B02               	clrf	(_spiTransmitBuffer+2)& (0+255),b
 15264   014548                     
 15265                           ; BSR set to: 1
 15266                           ;can/can.c: 286:     spiTransferError = SpiTransfer(spiTransmitBuffer, spiReceiveBuffer,
      +                           spiTransferSize);
 15267   014548  0E03               	movlw	3
 15268   01454A  6EE6               	movwf	postinc1,c
 15269   01454C  0E00               	movlw	0
 15270   01454E  6EE6               	movwf	postinc1,c
 15271   014550  0E00               	movlw	low _spiReceiveBuffer
 15272   014552  6EE6               	movwf	postinc1,c
 15273   014554  0E02               	movlw	high _spiReceiveBuffer
 15274   014556  6EE6               	movwf	postinc1,c
 15275   014558  0E00               	movlw	low _spiTransmitBuffer
 15276   01455A  6EE6               	movwf	postinc1,c
 15277   01455C  0E01               	movlw	high _spiTransmitBuffer
 15278   01455E  6EE6               	movwf	postinc1,c
 15279   014560  EC8E  F09D         	call	_SpiTransfer	;wreg free
 15280                           
 15281                           ;stkvar	_spiTransferError @ sp[(-1)+0]
 15282   014564  0EFF               	movlw	-1
 15283   014566  C021  FFE3         	movff	btemp,plusw1
 15284   01456A                     
 15285                           ;can/can.c: 289:     *rxd = spiReceiveBuffer[2];
 15286                           ;stkvar	_rxd @ sp[(-1)+-4]
 15287   01456A  0EFB               	movlw	-5
 15288   01456C  CFE3 FFD9          	movff	plusw1,fsr2l
 15289   014570  0EFC               	movlw	-4
 15290   014572  CFE3 FFDA          	movff	plusw1,fsr2h
 15291   014576  C202  FFDF         	movff	_spiReceiveBuffer+2,indf2
 15292   01457A                     
 15293                           ;can/can.c: 291:     return spiTransferError;
 15294                           ;stkvar	_spiTransferError @ sp[(-1)+0]
 15295   01457A  0EFF               	movlw	-1
 15296   01457C  CFE3 F021          	movff	plusw1,btemp
 15297   014580                     
 15298                           ; _DRV_CANFDSPI_ReadByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 4, argsize = 4, vargsize = 0
 15299   014580  0EFB               	movlw	251
 15300   014582  26E1               	addwf	fsr1l,f,c
 15301   014584  0EFF               	movlw	255
 15302   014586  22E2               	addwfc	fsr1h,f,c
 15303   014588  0012               	return		;funcret
 15304   01458A                     __end_of_DRV_CANFDSPI_ReadByte:
 15305                           	callstack 0
 15306                           
 15307 ;; *************** function _DRV_CANFDSPI_ModuleEventEnable *****************
 15308 ;; Defined at:
 15309 ;;		line 1591 in file "can/can.c"
 15310 ;; Parameters:    Size  Location     Type
 15311 ;;  index           1  [STACK] unsigned char 
 15312 ;;  flags           2  [STACK] enum E5563
 15313 ;; Auto vars:     Size  Location     Type
 15314 ;;  intEnables      2  [STACK] struct _REG_CiINTENABLE
 15315 ;;  a               2    0        unsigned short 
 15316 ;;  spiTransferE    1    0        char 
 15317 ;; Return value:  Size  Location     Type
 15318 ;;                  1  [STACK] char 
 15319 ;; Registers used:
 15320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 15321 ;; Tracked objects:
 15322 ;;		On entry : 0/0
 15323 ;;		On exit  : 0/0
 15324 ;;		Unchanged: 0/0
 15325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15330 ;;Total ram usage:        0 bytes
 15331 ;; Hardware stack levels used: 1
 15332 ;; Hardware stack levels required when called: 9
 15333 ;; This function calls:
 15334 ;;		_DRV_CANFDSPI_WriteHalfWord
 15335 ;; This function is called by:
 15336 ;;		_CanInit
 15337 ;; This function uses a reentrant model
 15338 ;;
 15339                           
 15340                           	psect	text62
 15341   0144C4                     __ptext62:
 15342                           	callstack 0
 15343   0144C4                     _DRV_CANFDSPI_ModuleEventEnable:
 15344                           	callstack 0
 15345                           
 15346                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15347   0144C4  52E6               	movf	postinc1,f,c
 15348   0144C6  52E6               	movf	postinc1,f,c
 15349   0144C8                     
 15350                           ;can/can.c: 1599:     REG_CiINTENABLE intEnables;;can/can.c: 1600:     intEnables.word =
      +                           0;
 15351                           ;stkvar	_intEnables @ sp[(-2)+0]
 15352   0144C8  0EFE               	movlw	-2
 15353   0144CA  6AE3               	clrf	plusw1,c
 15354   0144CC  0EFF               	movlw	-1
 15355   0144CE  6AE3               	clrf	plusw1,c
 15356   0144D0                     
 15357                           ;can/can.c: 1608:     intEnables.word |= (flags & CAN_ALL_EVENTS);
 15358                           ;stkvar	_flags @ sp[(-2)+-3]
 15359   0144D0  0EFB               	movlw	-5
 15360   0144D2  CFE3 F02B          	movff	plusw1,btemp+10
 15361   0144D6  0EFC               	movlw	-4
 15362   0144D8  CFE3 F02C          	movff	plusw1,btemp+11
 15363   0144DC  0E1F               	movlw	31
 15364   0144DE  142B               	andwf	(btemp+10)^0,w,c
 15365   0144E0  6E29               	movwf	(btemp+8)^0,c
 15366   0144E2  0EFF               	movlw	255
 15367   0144E4  142C               	andwf	(btemp+11)^0,w,c
 15368   0144E6  6E2A               	movwf	(btemp+9)^0,c
 15369                           
 15370                           ;stkvar	_intEnables @ sp[(-2)+0]
 15371   0144E8  0EFE               	movlw	-2
 15372   0144EA  CFE3 F021          	movff	plusw1,btemp
 15373   0144EE  5029               	movf	(btemp+8)^0,w,c
 15374   0144F0  1221               	iorwf	btemp^0,f,c
 15375   0144F2  0EFE               	movlw	-2
 15376   0144F4  C021  FFE3         	movff	btemp,plusw1
 15377   0144F8  0EFF               	movlw	-1
 15378   0144FA  CFE3 F021          	movff	plusw1,btemp
 15379   0144FE  502A               	movf	(btemp+9)^0,w,c
 15380   014500  1221               	iorwf	btemp^0,f,c
 15381   014502  0EFF               	movlw	-1
 15382   014504  C021  FFE3         	movff	btemp,plusw1
 15383   014508                     
 15384                           ;stkvar	_intEnables @ sp[(-2)+0]
 15385   014508  0EFE               	movlw	-2
 15386   01450A  CFE3 FFE6          	movff	plusw1,postinc1
 15387   01450E  CFE3 FFE6          	movff	plusw1,postinc1
 15388   014512  0E1E               	movlw	30
 15389   014514  6EE6               	movwf	postinc1,c
 15390   014516  0E00               	movlw	0
 15391   014518  6EE6               	movwf	postinc1,c
 15392   01451A  EC29  F09D         	call	_DRV_CANFDSPI_WriteHalfWord	;wreg free
 15393   01451E                     
 15394                           ; _DRV_CANFDSPI_ModuleEventEnable: autosize = 2, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 3, argsize = 3, vargsize = 0
 15395   01451E  0EFB               	movlw	251
 15396   014520  26E1               	addwf	fsr1l,f,c
 15397   014522  0EFF               	movlw	255
 15398   014524  22E2               	addwfc	fsr1h,f,c
 15399   014526  0012               	return		;funcret
 15400   014528                     __end_of_DRV_CANFDSPI_ModuleEventEnable:
 15401                           	callstack 0
 15402                           
 15403 ;; *************** function _DRV_CANFDSPI_WriteHalfWord *****************
 15404 ;; Defined at:
 15405 ;;		line 332 in file "can/can.c"
 15406 ;; Parameters:    Size  Location     Type
 15407 ;;  address         2  [STACK] unsigned short 
 15408 ;;  txd             2  [STACK] unsigned short 
 15409 ;; Auto vars:     Size  Location     Type
 15410 ;;  spiTransferS    2  [STACK] unsigned short 
 15411 ;;  i               1  [STACK] unsigned char 
 15412 ;;  spiTransferE    1  [STACK] char 
 15413 ;; Return value:  Size  Location     Type
 15414 ;;                  1  [STACK] char 
 15415 ;; Registers used:
 15416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 15417 ;; Tracked objects:
 15418 ;;		On entry : 0/0
 15419 ;;		On exit  : 0/0
 15420 ;;		Unchanged: 0/0
 15421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15426 ;;Total ram usage:        0 bytes
 15427 ;; Hardware stack levels used: 1
 15428 ;; Hardware stack levels required when called: 8
 15429 ;; This function calls:
 15430 ;;		_SpiTransfer
 15431 ;; This function is called by:
 15432 ;;		_DRV_CANFDSPI_ModuleEventEnable
 15433 ;;		_DRV_CANFDSPI_TimeStampPrescalerSet
 15434 ;; This function uses a reentrant model
 15435 ;;
 15436                           
 15437                           	psect	text63
 15438   013A52                     __ptext63:
 15439                           	callstack 0
 15440   013A52                     _DRV_CANFDSPI_WriteHalfWord:
 15441                           	callstack 0
 15442                           
 15443                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15444   013A52  52E6               	movf	postinc1,f,c
 15445   013A54  52E6               	movf	postinc1,f,c
 15446   013A56  52E6               	movf	postinc1,f,c
 15447   013A58  52E6               	movf	postinc1,f,c
 15448   013A5A                     
 15449                           ;can/can.c: 332: int8_t DRV_CANFDSPI_WriteHalfWord( uint16_t address,;can/can.c: 333:   
      +                                uint16_t txd);can/can.c: 334: {;can/can.c: 335:     uint8_t i;;can/can.c: 336:    
      +                           uint16_t spiTransferSize = 4;
 15450   013A5A  0E04               	movlw	4
 15451   013A5C  6E2B               	movwf	(btemp+10)^0,c
 15452   013A5E  0E00               	movlw	0
 15453   013A60  6E2C               	movwf	(btemp+11)^0,c
 15454                           
 15455                           ;stkvar	_spiTransferSize @ sp[(-4)+0]
 15456   013A62  0EFC               	movlw	-4
 15457   013A64  C02B  FFE3         	movff	btemp+10,plusw1
 15458   013A68  0EFD               	movlw	-3
 15459   013A6A  C02C  FFE3         	movff	btemp+11,plusw1
 15460   013A6E                     
 15461                           ;can/can.c: 340:     spiTransmitBuffer[0] = (uint8_t) ((0x02 << 4) + ((address >> 8) & 0
      +                          xF));
 15462                           ;stkvar	_address @ sp[(-4)+-2]
 15463   013A6E  0EFB               	movlw	251
 15464   013A70  24E1               	addwf	fsr1l,w,c
 15465   013A72  6ED9               	movwf	fsr2l,c
 15466   013A74  0EFF               	movlw	255
 15467   013A76  20E2               	addwfc	fsr1h,w,c
 15468   013A78  6EDA               	movwf	fsr2h,c
 15469   013A7A  50DF               	movf	indf2,w,c
 15470   013A7C  0B0F               	andlw	15
 15471   013A7E  0F20               	addlw	32
 15472   013A80  0101               	movlb	1	; () banked
 15473   013A82  6F00               	movwf	_spiTransmitBuffer& (0+255),b
 15474   013A84                     
 15475                           ; BSR set to: 1
 15476                           ;can/can.c: 341:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
 15477                           ;stkvar	_address @ sp[(-4)+-2]
 15478   013A84  0EFA               	movlw	-6
 15479   013A86  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
 15480   013A8A                     
 15481                           ; BSR set to: 1
 15482                           ;can/can.c: 344:     for (i = 0; i < 2; i++) {
 15483                           ;stkvar	_i @ sp[(-4)+2]
 15484   013A8A  0EFE               	movlw	-2
 15485   013A8C  6AE3               	clrf	plusw1,c
 15486   013A8E                     l4594:
 15487                           
 15488                           ;can/can.c: 345:         spiTransmitBuffer[i + 2] = (uint8_t) ((txd >> (i * 8)) & 0xFF);
 15489                           ;stkvar	_i @ sp[(-4)+2]
 15490   013A8E  0EFE               	movlw	-2
 15491   013A90  50E3               	movf	plusw1,w,c
 15492   013A92  6E2B               	movwf	(btemp+10)^0,c
 15493   013A94  6A2C               	clrf	(btemp+11)^0,c
 15494   013A96  0E02               	movlw	low (_spiTransmitBuffer+2)
 15495   013A98  242B               	addwf	(btemp+10)^0,w,c
 15496   013A9A  6ED9               	movwf	fsr2l,c
 15497   013A9C  0E01               	movlw	high (_spiTransmitBuffer+2)
 15498   013A9E  202C               	addwfc	(btemp+11)^0,w,c
 15499   013AA0  6EDA               	movwf	fsr2h,c
 15500                           
 15501                           ;stkvar	_i @ sp[(-4)+2]
 15502   013AA2  0EFE               	movlw	-2
 15503   013AA4  50E3               	movf	plusw1,w,c
 15504   013AA6  0D08               	mullw	8
 15505   013AA8  CFF3 F02C          	movff	prodl,btemp+11
 15506                           
 15507                           ;stkvar	_txd @ sp[(-4)+-4]
 15508   013AAC  0EF8               	movlw	-8
 15509   013AAE  CFE3 F029          	movff	plusw1,btemp+8
 15510   013AB2  0EF9               	movlw	-7
 15511   013AB4  CFE3 F02A          	movff	plusw1,btemp+9
 15512   013AB8  2A2C               	incf	(btemp+11)^0,f,c
 15513   013ABA  EF62  F09D         	goto	u2244
 15514   013ABE                     u2245:
 15515   013ABE  90D8               	bcf	status,0,c
 15516   013AC0  322A               	rrcf	(btemp+9)^0,f,c
 15517   013AC2  3229               	rrcf	(btemp+8)^0,f,c
 15518   013AC4                     u2244:
 15519   013AC4  2E2C               	decfsz	(btemp+11)^0,f,c
 15520   013AC6  EF5F  F09D         	goto	u2245
 15521   013ACA  5029               	movf	(btemp+8)^0,w,c
 15522   013ACC  6EDF               	movwf	indf2,c
 15523   013ACE                     
 15524                           ;can/can.c: 346:     }
 15525                           ;stkvar	_i @ sp[(-4)+2]
 15526   013ACE  0EFE               	movlw	-2
 15527   013AD0  2AE3               	incf	plusw1,f,c
 15528   013AD2                     
 15529                           ;stkvar	_i @ sp[(-4)+2]
 15530   013AD2  0EFE               	movlw	-2
 15531   013AD4  CFE3 F021          	movff	plusw1,btemp
 15532   013AD8  0E01               	movlw	1
 15533   013ADA  6421               	cpfsgt	btemp^0,c
 15534   013ADC  EF72  F09D         	goto	u2251
 15535   013AE0  EF74  F09D         	goto	u2250
 15536   013AE4                     u2251:
 15537   013AE4  EF47  F09D         	goto	l4594
 15538   013AE8                     u2250:
 15539   013AE8                     
 15540                           ;can/can.c: 348:     spiTransferError = SpiTransfer( spiTransmitBuffer, spiReceiveBuffer
      +                          , spiTransferSize);
 15541                           ;stkvar	_spiTransferSize @ sp[(-4)+0]
 15542   013AE8  0EFC               	movlw	-4
 15543   013AEA  CFE3 FFE6          	movff	plusw1,postinc1
 15544   013AEE  CFE3 FFE6          	movff	plusw1,postinc1
 15545   013AF2  0E00               	movlw	low _spiReceiveBuffer
 15546   013AF4  6EE6               	movwf	postinc1,c
 15547   013AF6  0E02               	movlw	high _spiReceiveBuffer
 15548   013AF8  6EE6               	movwf	postinc1,c
 15549   013AFA  0E00               	movlw	low _spiTransmitBuffer
 15550   013AFC  6EE6               	movwf	postinc1,c
 15551   013AFE  0E01               	movlw	high _spiTransmitBuffer
 15552   013B00  6EE6               	movwf	postinc1,c
 15553   013B02  EC8E  F09D         	call	_SpiTransfer	;wreg free
 15554                           
 15555                           ;stkvar	_spiTransferError @ sp[(-4)+3]
 15556   013B06  0EFF               	movlw	-1
 15557   013B08  C021  FFE3         	movff	btemp,plusw1
 15558   013B0C                     
 15559                           ;can/can.c: 350:     return spiTransferError;
 15560                           ;stkvar	_spiTransferError @ sp[(-4)+3]
 15561   013B0C  0EFF               	movlw	-1
 15562   013B0E  CFE3 F021          	movff	plusw1,btemp
 15563   013B12                     
 15564                           ; _DRV_CANFDSPI_WriteHalfWord: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0
      +                           parsize = 4, argsize = 4, vargsize = 0
 15565   013B12  0EF8               	movlw	248
 15566   013B14  26E1               	addwf	fsr1l,f,c
 15567   013B16  0EFF               	movlw	255
 15568   013B18  22E2               	addwfc	fsr1h,f,c
 15569   013B1A  0012               	return		;funcret
 15570   013B1C                     __end_of_DRV_CANFDSPI_WriteHalfWord:
 15571                           	callstack 0
 15572                           
 15573 ;; *************** function _DRV_CANFDSPI_ConfigureObjectReset *****************
 15574 ;; Defined at:
 15575 ;;		line 474 in file "can/can.c"
 15576 ;; Parameters:    Size  Location     Type
 15577 ;;  config          2  [STACK] PTR struct _CAN_CONFIG
 15578 ;;		 -> config(3), 
 15579 ;; Auto vars:     Size  Location     Type
 15580 ;;  ciCon           4  [STACK] struct _REG_CiCON
 15581 ;; Return value:  Size  Location     Type
 15582 ;;                  1  [STACK] char 
 15583 ;; Registers used:
 15584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru
 15585 ;; Tracked objects:
 15586 ;;		On entry : 0/0
 15587 ;;		On exit  : 0/0
 15588 ;;		Unchanged: 0/0
 15589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15594 ;;Total ram usage:        0 bytes
 15595 ;; Hardware stack levels used: 1
 15596 ;; Hardware stack levels required when called: 7
 15597 ;; This function calls:
 15598 ;;		Nothing
 15599 ;; This function is called by:
 15600 ;;		_CanInit
 15601 ;; This function uses a reentrant model
 15602 ;;
 15603                           
 15604                           	psect	text64
 15605   0119BA                     __ptext64:
 15606                           	callstack 0
 15607   0119BA                     _DRV_CANFDSPI_ConfigureObjectReset:
 15608                           	callstack 0
 15609                           
 15610                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15611   0119BA  52E6               	movf	postinc1,f,c
 15612   0119BC  52E6               	movf	postinc1,f,c
 15613   0119BE  52E6               	movf	postinc1,f,c
 15614   0119C0  52E6               	movf	postinc1,f,c
 15615   0119C2                     
 15616                           ;can/can.c: 474: int8_t DRV_CANFDSPI_ConfigureObjectReset(CAN_CONFIG* config);can/can.c:
      +                           475: {;can/can.c: 476:     REG_CiCON ciCon;;can/can.c: 477:     ciCon.word = canControl
      +                          ResetValues[0x000 / 4];
 15617   0119C2  0E8D               	movlw	low _canControlResetValues
 15618   0119C4  6EF6               	movwf	tblptrl,c
 15619   0119C6                     	if	1	;There is more than 1 active tblptr byte
 15620   0119C6  0EFF               	movlw	high _canControlResetValues
 15621   0119C8  6EF7               	movwf	tblptrh,c
 15622   0119CA                     	endif
 15623   0119CA                     	if	1	;There are 3 active tblptr bytes
 15624   0119CA  0E00               	movlw	low (_canControlResetValues shr (0+16))
 15625   0119CC  6EF8               	movwf	tblptru,c
 15626   0119CE                     	endif
 15627   0119CE  0009               	tblrd		*+
 15628   0119D0  CFF5 F029          	movff	tablat,btemp+8
 15629   0119D4  0009               	tblrd		*+
 15630   0119D6  CFF5 F02A          	movff	tablat,btemp+9
 15631   0119DA  0009               	tblrd		*+
 15632   0119DC  CFF5 F02B          	movff	tablat,btemp+10
 15633   0119E0  0009               	tblrd		*+
 15634   0119E2  CFF5 F02C          	movff	tablat,btemp+11
 15635                           
 15636                           ;stkvar	_ciCon @ sp[(-4)+0]
 15637   0119E6  0EFC               	movlw	-4
 15638   0119E8  C029  FFE3         	movff	btemp+8,plusw1
 15639   0119EC  0EFD               	movlw	-3
 15640   0119EE  C02A  FFE3         	movff	btemp+9,plusw1
 15641   0119F2  0EFE               	movlw	-2
 15642   0119F4  C02B  FFE3         	movff	btemp+10,plusw1
 15643   0119F8  0EFF               	movlw	-1
 15644   0119FA  C02C  FFE3         	movff	btemp+11,plusw1
 15645   0119FE                     
 15646                           ;can/can.c: 479:     config->DNetFilterCount = ciCon.bF.DNetFilterCount;
 15647                           ;stkvar	_ciCon @ sp[(-4)+0]
 15648   0119FE  50E1               	movf	fsr1l,w,c
 15649   011A00  0FFC               	addlw	-4
 15650   011A02  6ED9               	movwf	fsr2l,c
 15651   011A04  50E2               	movf	fsr1h,w,c
 15652   011A06  6EDA               	movwf	fsr2h,c
 15653   011A08  0EFF               	movlw	255
 15654   011A0A  22DA               	addwfc	fsr2h,f,c
 15655   011A0C  50DF               	movf	223,w,c
 15656   011A0E  0B1F               	andlw	31
 15657   011A10  6E2C               	movwf	(btemp+11)^0,c
 15658                           
 15659                           ;stkvar	_config @ sp[(-4)+-2]
 15660   011A12  0EFA               	movlw	-6
 15661   011A14  CFE3 FFD9          	movff	plusw1,fsr2l
 15662   011A18  0EFB               	movlw	-5
 15663   011A1A  CFE3 FFDA          	movff	plusw1,fsr2h
 15664   011A1E  50DF               	movf	223,w,c
 15665   011A20  182C               	xorwf	(btemp+11)^0,w,c
 15666   011A22  0BE0               	andlw	-32
 15667   011A24  182C               	xorwf	(btemp+11)^0,w,c
 15668   011A26  6EDF               	movwf	223,c
 15669   011A28                     
 15670                           ;can/can.c: 480:     config->IsoCrcEnable = ciCon.bF.IsoCrcEnable;
 15671                           ;stkvar	_ciCon @ sp[(-4)+0]
 15672   011A28  50E1               	movf	fsr1l,w,c
 15673   011A2A  0FFC               	addlw	-4
 15674   011A2C  6ED9               	movwf	fsr2l,c
 15675   011A2E  50E2               	movf	fsr1h,w,c
 15676   011A30  6EDA               	movwf	fsr2h,c
 15677   011A32  0EFF               	movlw	255
 15678   011A34  22DA               	addwfc	fsr2h,f,c
 15679                           
 15680                           ;stkvar	_config @ sp[(-4)+-2]
 15681   011A36  0EFA               	movlw	-6
 15682   011A38  CFE3 FFE9          	movff	plusw1,fsr0l
 15683   011A3C  0EFB               	movlw	-5
 15684   011A3E  CFE3 FFEA          	movff	plusw1,fsr0h
 15685   011A42  9AEF               	bcf	indf0,5,c
 15686   011A44  AADF               	btfss	indf2,5,c
 15687   011A46  EF26  F08D         	goto	u815
 15688   011A4A  8AEF               	bsf	indf0,5,c
 15689   011A4C                     u815:
 15690   011A4C                     
 15691                           ;can/can.c: 481:     config->ProtocolExpectionEventDisable = ciCon.bF.ProtocolExceptionE
      +                          ventDisable;
 15692                           ;stkvar	_ciCon @ sp[(-4)+0]
 15693   011A4C  50E1               	movf	fsr1l,w,c
 15694   011A4E  0FFC               	addlw	-4
 15695   011A50  6ED9               	movwf	fsr2l,c
 15696   011A52  50E2               	movf	fsr1h,w,c
 15697   011A54  6EDA               	movwf	fsr2h,c
 15698   011A56  0EFF               	movlw	255
 15699   011A58  22DA               	addwfc	fsr2h,f,c
 15700                           
 15701                           ;stkvar	_config @ sp[(-4)+-2]
 15702   011A5A  0EFA               	movlw	-6
 15703   011A5C  CFE3 FFE9          	movff	plusw1,fsr0l
 15704   011A60  0EFB               	movlw	-5
 15705   011A62  CFE3 FFEA          	movff	plusw1,fsr0h
 15706   011A66  9CEF               	bcf	indf0,6,c
 15707   011A68  ACDF               	btfss	indf2,6,c
 15708   011A6A  EF38  F08D         	goto	u825
 15709   011A6E  8CEF               	bsf	indf0,6,c
 15710   011A70                     u825:
 15711   011A70                     
 15712                           ;can/can.c: 482:     config->WakeUpFilterEnable = ciCon.bF.WakeUpFilterEnable;
 15713                           ;stkvar	_ciCon @ sp[(-4)+0]
 15714   011A70  0EFD               	movlw	253
 15715   011A72  24E1               	addwf	fsr1l,w,c
 15716   011A74  6ED9               	movwf	fsr2l,c
 15717   011A76  0EFF               	movlw	255
 15718   011A78  20E2               	addwfc	fsr1h,w,c
 15719   011A7A  6EDA               	movwf	fsr2h,c
 15720                           
 15721                           ;stkvar	_config @ sp[(-4)+-2]
 15722   011A7C  0EFA               	movlw	-6
 15723   011A7E  CFE3 FFE9          	movff	plusw1,fsr0l
 15724   011A82  0EFB               	movlw	-5
 15725   011A84  CFE3 FFEA          	movff	plusw1,fsr0h
 15726   011A88  9EEF               	bcf	indf0,7,c
 15727   011A8A  A0DF               	btfss	indf2,0,c
 15728   011A8C  EF49  F08D         	goto	u835
 15729   011A90  8EEF               	bsf	indf0,7,c
 15730   011A92                     u835:
 15731   011A92                     
 15732                           ;can/can.c: 483:     config->WakeUpFilterTime = ciCon.bF.WakeUpFilterTime;
 15733                           ;stkvar	_ciCon @ sp[(-4)+0]
 15734   011A92  0EFD               	movlw	253
 15735   011A94  24E1               	addwf	fsr1l,w,c
 15736   011A96  6ED9               	movwf	fsr2l,c
 15737   011A98  0EFF               	movlw	255
 15738   011A9A  20E2               	addwfc	fsr1h,w,c
 15739   011A9C  6EDA               	movwf	fsr2h,c
 15740   011A9E  30DF               	rrcf	223,w,c
 15741   011AA0  0B03               	andlw	3
 15742   011AA2  6E2C               	movwf	(btemp+11)^0,c
 15743                           
 15744                           ;stkvar	_config @ sp[(-4)+-2]
 15745   011AA4  0EFA               	movlw	-6
 15746   011AA6  CFE3 F029          	movff	plusw1,btemp+8
 15747   011AAA  0EFB               	movlw	-5
 15748   011AAC  CFE3 F02A          	movff	plusw1,btemp+9
 15749   011AB0  0E01               	movlw	1
 15750   011AB2  2429               	addwf	(btemp+8)^0,w,c
 15751   011AB4  6ED9               	movwf	fsr2l,c
 15752   011AB6  0E00               	movlw	0
 15753   011AB8  202A               	addwfc	(btemp+9)^0,w,c
 15754   011ABA  6EDA               	movwf	fsr2h,c
 15755   011ABC  50DF               	movf	223,w,c
 15756   011ABE  182C               	xorwf	(btemp+11)^0,w,c
 15757   011AC0  0BFC               	andlw	-4
 15758   011AC2  182C               	xorwf	(btemp+11)^0,w,c
 15759   011AC4  6EDF               	movwf	223,c
 15760   011AC6                     
 15761                           ;can/can.c: 484:     config->BitRateSwitchDisable = ciCon.bF.BitRateSwitchDisable;
 15762                           ;stkvar	_ciCon @ sp[(-4)+0]
 15763   011AC6  0EFD               	movlw	253
 15764   011AC8  24E1               	addwf	fsr1l,w,c
 15765   011ACA  6ED9               	movwf	fsr2l,c
 15766   011ACC  0EFF               	movlw	255
 15767   011ACE  20E2               	addwfc	fsr1h,w,c
 15768   011AD0  6EDA               	movwf	fsr2h,c
 15769                           
 15770                           ;stkvar	_config @ sp[(-4)+-2]
 15771   011AD2  0EFA               	movlw	-6
 15772   011AD4  CFE3 F02B          	movff	plusw1,btemp+10
 15773   011AD8  0EFB               	movlw	-5
 15774   011ADA  CFE3 F02C          	movff	plusw1,btemp+11
 15775   011ADE  0E01               	movlw	1
 15776   011AE0  242B               	addwf	(btemp+10)^0,w,c
 15777   011AE2  6EE9               	movwf	fsr0l,c
 15778   011AE4  0E00               	movlw	0
 15779   011AE6  202C               	addwfc	(btemp+11)^0,w,c
 15780   011AE8  6EEA               	movwf	fsr0h,c
 15781   011AEA  94EF               	bcf	indf0,2,c
 15782   011AEC  A8DF               	btfss	indf2,4,c
 15783   011AEE  EF7A  F08D         	goto	u845
 15784   011AF2  84EF               	bsf	indf0,2,c
 15785   011AF4                     u845:
 15786   011AF4                     
 15787                           ;can/can.c: 485:     config->RestrictReTxAttempts = ciCon.bF.RestrictReTxAttempts;
 15788                           ;stkvar	_ciCon @ sp[(-4)+0]
 15789   011AF4  0EFE               	movlw	254
 15790   011AF6  24E1               	addwf	fsr1l,w,c
 15791   011AF8  6ED9               	movwf	fsr2l,c
 15792   011AFA  0EFF               	movlw	255
 15793   011AFC  20E2               	addwfc	fsr1h,w,c
 15794   011AFE  6EDA               	movwf	fsr2h,c
 15795                           
 15796                           ;stkvar	_config @ sp[(-4)+-2]
 15797   011B00  0EFA               	movlw	-6
 15798   011B02  CFE3 F02B          	movff	plusw1,btemp+10
 15799   011B06  0EFB               	movlw	-5
 15800   011B08  CFE3 F02C          	movff	plusw1,btemp+11
 15801   011B0C  0E01               	movlw	1
 15802   011B0E  242B               	addwf	(btemp+10)^0,w,c
 15803   011B10  6EE9               	movwf	fsr0l,c
 15804   011B12  0E00               	movlw	0
 15805   011B14  202C               	addwfc	(btemp+11)^0,w,c
 15806   011B16  6EEA               	movwf	fsr0h,c
 15807   011B18  96EF               	bcf	indf0,3,c
 15808   011B1A  A0DF               	btfss	indf2,0,c
 15809   011B1C  EF91  F08D         	goto	u855
 15810   011B20  86EF               	bsf	indf0,3,c
 15811   011B22                     u855:
 15812   011B22                     
 15813                           ;can/can.c: 486:     config->EsiInGatewayMode = ciCon.bF.EsiInGatewayMode;
 15814                           ;stkvar	_ciCon @ sp[(-4)+0]
 15815   011B22  0EFE               	movlw	254
 15816   011B24  24E1               	addwf	fsr1l,w,c
 15817   011B26  6ED9               	movwf	fsr2l,c
 15818   011B28  0EFF               	movlw	255
 15819   011B2A  20E2               	addwfc	fsr1h,w,c
 15820   011B2C  6EDA               	movwf	fsr2h,c
 15821                           
 15822                           ;stkvar	_config @ sp[(-4)+-2]
 15823   011B2E  0EFA               	movlw	-6
 15824   011B30  CFE3 F02B          	movff	plusw1,btemp+10
 15825   011B34  0EFB               	movlw	-5
 15826   011B36  CFE3 F02C          	movff	plusw1,btemp+11
 15827   011B3A  0E01               	movlw	1
 15828   011B3C  242B               	addwf	(btemp+10)^0,w,c
 15829   011B3E  6EE9               	movwf	fsr0l,c
 15830   011B40  0E00               	movlw	0
 15831   011B42  202C               	addwfc	(btemp+11)^0,w,c
 15832   011B44  6EEA               	movwf	fsr0h,c
 15833   011B46  98EF               	bcf	indf0,4,c
 15834   011B48  A2DF               	btfss	indf2,1,c
 15835   011B4A  EFA8  F08D         	goto	u865
 15836   011B4E  88EF               	bsf	indf0,4,c
 15837   011B50                     u865:
 15838   011B50                     
 15839                           ;can/can.c: 487:     config->SystemErrorToListenOnly = ciCon.bF.SystemErrorToListenOnly;
 15840                           ;stkvar	_ciCon @ sp[(-4)+0]
 15841   011B50  0EFE               	movlw	254
 15842   011B52  24E1               	addwf	fsr1l,w,c
 15843   011B54  6ED9               	movwf	fsr2l,c
 15844   011B56  0EFF               	movlw	255
 15845   011B58  20E2               	addwfc	fsr1h,w,c
 15846   011B5A  6EDA               	movwf	fsr2h,c
 15847                           
 15848                           ;stkvar	_config @ sp[(-4)+-2]
 15849   011B5C  0EFA               	movlw	-6
 15850   011B5E  CFE3 F02B          	movff	plusw1,btemp+10
 15851   011B62  0EFB               	movlw	-5
 15852   011B64  CFE3 F02C          	movff	plusw1,btemp+11
 15853   011B68  0E01               	movlw	1
 15854   011B6A  242B               	addwf	(btemp+10)^0,w,c
 15855   011B6C  6EE9               	movwf	fsr0l,c
 15856   011B6E  0E00               	movlw	0
 15857   011B70  202C               	addwfc	(btemp+11)^0,w,c
 15858   011B72  6EEA               	movwf	fsr0h,c
 15859   011B74  9AEF               	bcf	indf0,5,c
 15860   011B76  A4DF               	btfss	indf2,2,c
 15861   011B78  EFBF  F08D         	goto	u875
 15862   011B7C  8AEF               	bsf	indf0,5,c
 15863   011B7E                     u875:
 15864   011B7E                     
 15865                           ;can/can.c: 488:     config->StoreInTEF = ciCon.bF.StoreInTEF;
 15866                           ;stkvar	_ciCon @ sp[(-4)+0]
 15867   011B7E  0EFE               	movlw	254
 15868   011B80  24E1               	addwf	fsr1l,w,c
 15869   011B82  6ED9               	movwf	fsr2l,c
 15870   011B84  0EFF               	movlw	255
 15871   011B86  20E2               	addwfc	fsr1h,w,c
 15872   011B88  6EDA               	movwf	fsr2h,c
 15873                           
 15874                           ;stkvar	_config @ sp[(-4)+-2]
 15875   011B8A  0EFA               	movlw	-6
 15876   011B8C  CFE3 F02B          	movff	plusw1,btemp+10
 15877   011B90  0EFB               	movlw	-5
 15878   011B92  CFE3 F02C          	movff	plusw1,btemp+11
 15879   011B96  0E01               	movlw	1
 15880   011B98  242B               	addwf	(btemp+10)^0,w,c
 15881   011B9A  6EE9               	movwf	fsr0l,c
 15882   011B9C  0E00               	movlw	0
 15883   011B9E  202C               	addwfc	(btemp+11)^0,w,c
 15884   011BA0  6EEA               	movwf	fsr0h,c
 15885   011BA2  9CEF               	bcf	indf0,6,c
 15886   011BA4  A6DF               	btfss	indf2,3,c
 15887   011BA6  EFD6  F08D         	goto	u885
 15888   011BAA  8CEF               	bsf	indf0,6,c
 15889   011BAC                     u885:
 15890   011BAC                     
 15891                           ;can/can.c: 489:     config->TXQEnable = ciCon.bF.TXQEnable;
 15892                           ;stkvar	_ciCon @ sp[(-4)+0]
 15893   011BAC  0EFE               	movlw	254
 15894   011BAE  24E1               	addwf	fsr1l,w,c
 15895   011BB0  6ED9               	movwf	fsr2l,c
 15896   011BB2  0EFF               	movlw	255
 15897   011BB4  20E2               	addwfc	fsr1h,w,c
 15898   011BB6  6EDA               	movwf	fsr2h,c
 15899                           
 15900                           ;stkvar	_config @ sp[(-4)+-2]
 15901   011BB8  0EFA               	movlw	-6
 15902   011BBA  CFE3 F02B          	movff	plusw1,btemp+10
 15903   011BBE  0EFB               	movlw	-5
 15904   011BC0  CFE3 F02C          	movff	plusw1,btemp+11
 15905   011BC4  0E01               	movlw	1
 15906   011BC6  242B               	addwf	(btemp+10)^0,w,c
 15907   011BC8  6EE9               	movwf	fsr0l,c
 15908   011BCA  0E00               	movlw	0
 15909   011BCC  202C               	addwfc	(btemp+11)^0,w,c
 15910   011BCE  6EEA               	movwf	fsr0h,c
 15911   011BD0  9EEF               	bcf	indf0,7,c
 15912   011BD2  A8DF               	btfss	indf2,4,c
 15913   011BD4  EFED  F08D         	goto	u895
 15914   011BD8  8EEF               	bsf	indf0,7,c
 15915   011BDA                     u895:
 15916   011BDA                     
 15917                           ;can/can.c: 490:     config->TxBandWidthSharing = ciCon.bF.TxBandWidthSharing;
 15918                           ;stkvar	_ciCon @ sp[(-4)+0]
 15919   011BDA  0EFF               	movlw	255
 15920   011BDC  24E1               	addwf	fsr1l,w,c
 15921   011BDE  6ED9               	movwf	fsr2l,c
 15922   011BE0  0EFF               	movlw	255
 15923   011BE2  20E2               	addwfc	fsr1h,w,c
 15924   011BE4  6EDA               	movwf	fsr2h,c
 15925   011BE6  38DF               	swapf	223,w,c
 15926   011BE8  0B0F               	andlw	15
 15927   011BEA  6E2C               	movwf	(btemp+11)^0,c
 15928                           
 15929                           ;stkvar	_config @ sp[(-4)+-2]
 15930   011BEC  0EFA               	movlw	-6
 15931   011BEE  CFE3 F029          	movff	plusw1,btemp+8
 15932   011BF2  0EFB               	movlw	-5
 15933   011BF4  CFE3 F02A          	movff	plusw1,btemp+9
 15934   011BF8  0E02               	movlw	2
 15935   011BFA  2429               	addwf	(btemp+8)^0,w,c
 15936   011BFC  6ED9               	movwf	fsr2l,c
 15937   011BFE  0E00               	movlw	0
 15938   011C00  202A               	addwfc	(btemp+9)^0,w,c
 15939   011C02  6EDA               	movwf	fsr2h,c
 15940   011C04  50DF               	movf	223,w,c
 15941   011C06  182C               	xorwf	(btemp+11)^0,w,c
 15942   011C08  0BF0               	andlw	-16
 15943   011C0A  182C               	xorwf	(btemp+11)^0,w,c
 15944   011C0C  6EDF               	movwf	223,c
 15945   011C0E                     
 15946                           ; _DRV_CANFDSPI_ConfigureObjectReset: autosize = 4, savesize = 0, parsavesize = 0, temps
      +                          ize = 0 parsize = 2, argsize = 2, vargsize = 0
 15947   011C0E  0EFA               	movlw	250
 15948   011C10  26E1               	addwf	fsr1l,f,c
 15949   011C12  0EFF               	movlw	255
 15950   011C14  22E2               	addwfc	fsr1h,f,c
 15951   011C16  0012               	return		;funcret
 15952   011C18                     __end_of_DRV_CANFDSPI_ConfigureObjectReset:
 15953                           	callstack 0
 15954                           
 15955 ;; *************** function _DRV_CANFDSPI_Configure *****************
 15956 ;; Defined at:
 15957 ;;		line 446 in file "can/can.c"
 15958 ;; Parameters:    Size  Location     Type
 15959 ;;  config          2  [STACK] PTR struct _CAN_CONFIG
 15960 ;;		 -> config(3), 
 15961 ;; Auto vars:     Size  Location     Type
 15962 ;;  ciCon           4  [STACK] struct _REG_CiCON
 15963 ;;  spiTransferE    1    0        char 
 15964 ;; Return value:  Size  Location     Type
 15965 ;;                  1  [STACK] char 
 15966 ;; Registers used:
 15967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 15968 ;; Tracked objects:
 15969 ;;		On entry : 0/0
 15970 ;;		On exit  : 0/0
 15971 ;;		Unchanged: 0/0
 15972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15977 ;;Total ram usage:        0 bytes
 15978 ;; Hardware stack levels used: 1
 15979 ;; Hardware stack levels required when called: 9
 15980 ;; This function calls:
 15981 ;;		_DRV_CANFDSPI_WriteWord
 15982 ;; This function is called by:
 15983 ;;		_CanInit
 15984 ;; This function uses a reentrant model
 15985 ;;
 15986                           
 15987                           	psect	text65
 15988   01173A                     __ptext65:
 15989                           	callstack 0
 15990   01173A                     _DRV_CANFDSPI_Configure:
 15991                           	callstack 0
 15992                           
 15993                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15994   01173A  52E6               	movf	postinc1,f,c
 15995   01173C  52E6               	movf	postinc1,f,c
 15996   01173E  52E6               	movf	postinc1,f,c
 15997   011740  52E6               	movf	postinc1,f,c
 15998   011742                     
 15999                           ;can/can.c: 451:     ciCon.word = canControlResetValues[0x000 / 4];
 16000   011742  0E8D               	movlw	low _canControlResetValues
 16001   011744  6EF6               	movwf	tblptrl,c
 16002   011746                     	if	1	;There is more than 1 active tblptr byte
 16003   011746  0EFF               	movlw	high _canControlResetValues
 16004   011748  6EF7               	movwf	tblptrh,c
 16005   01174A                     	endif
 16006   01174A                     	if	1	;There are 3 active tblptr bytes
 16007   01174A  0E00               	movlw	low (_canControlResetValues shr (0+16))
 16008   01174C  6EF8               	movwf	tblptru,c
 16009   01174E                     	endif
 16010   01174E  0009               	tblrd		*+
 16011   011750  CFF5 F029          	movff	tablat,btemp+8
 16012   011754  0009               	tblrd		*+
 16013   011756  CFF5 F02A          	movff	tablat,btemp+9
 16014   01175A  0009               	tblrd		*+
 16015   01175C  CFF5 F02B          	movff	tablat,btemp+10
 16016   011760  0009               	tblrd		*+
 16017   011762  CFF5 F02C          	movff	tablat,btemp+11
 16018                           
 16019                           ;stkvar	_ciCon @ sp[(-4)+0]
 16020   011766  0EFC               	movlw	-4
 16021   011768  C029  FFE3         	movff	btemp+8,plusw1
 16022   01176C  0EFD               	movlw	-3
 16023   01176E  C02A  FFE3         	movff	btemp+9,plusw1
 16024   011772  0EFE               	movlw	-2
 16025   011774  C02B  FFE3         	movff	btemp+10,plusw1
 16026   011778  0EFF               	movlw	-1
 16027   01177A  C02C  FFE3         	movff	btemp+11,plusw1
 16028   01177E                     
 16029                           ;can/can.c: 453:     ciCon.bF.DNetFilterCount = config->DNetFilterCount;
 16030                           ;stkvar	_config @ sp[(-4)+-2]
 16031   01177E  0EFA               	movlw	-6
 16032   011780  CFE3 FFD9          	movff	plusw1,fsr2l
 16033   011784  0EFB               	movlw	-5
 16034   011786  CFE3 FFDA          	movff	plusw1,fsr2h
 16035   01178A  50DF               	movf	223,w,c
 16036   01178C  0B1F               	andlw	31
 16037   01178E  6E2C               	movwf	(btemp+11)^0,c
 16038                           
 16039                           ;stkvar	_ciCon @ sp[(-4)+0]
 16040   011790  50E1               	movf	fsr1l,w,c
 16041   011792  0FFC               	addlw	-4
 16042   011794  6ED9               	movwf	fsr2l,c
 16043   011796  50E2               	movf	fsr1h,w,c
 16044   011798  6EDA               	movwf	fsr2h,c
 16045   01179A  0EFF               	movlw	255
 16046   01179C  22DA               	addwfc	fsr2h,f,c
 16047   01179E  50DF               	movf	223,w,c
 16048   0117A0  182C               	xorwf	(btemp+11)^0,w,c
 16049   0117A2  0BE0               	andlw	-32
 16050   0117A4  182C               	xorwf	(btemp+11)^0,w,c
 16051   0117A6  6EDF               	movwf	223,c
 16052   0117A8                     
 16053                           ;can/can.c: 454:     ciCon.bF.IsoCrcEnable = config->IsoCrcEnable;
 16054                           ;stkvar	_config @ sp[(-4)+-2]
 16055   0117A8  0EFA               	movlw	-6
 16056   0117AA  CFE3 FFD9          	movff	plusw1,fsr2l
 16057   0117AE  0EFB               	movlw	-5
 16058   0117B0  CFE3 FFDA          	movff	plusw1,fsr2h
 16059                           
 16060                           ;stkvar	_ciCon @ sp[(-4)+0]
 16061   0117B4  50E1               	movf	fsr1l,w,c
 16062   0117B6  0FFC               	addlw	-4
 16063   0117B8  6EE9               	movwf	fsr0l,c
 16064   0117BA  50E2               	movf	fsr1h,w,c
 16065   0117BC  6EEA               	movwf	fsr0h,c
 16066   0117BE  0EFF               	movlw	255
 16067   0117C0  22EA               	addwfc	fsr0h,f,c
 16068   0117C2  9AEF               	bcf	indf0,5,c
 16069   0117C4  AADF               	btfss	indf2,5,c
 16070   0117C6  EFE6  F08B         	goto	u2385
 16071   0117CA  8AEF               	bsf	indf0,5,c
 16072   0117CC                     u2385:
 16073   0117CC                     
 16074                           ;can/can.c: 455:     ciCon.bF.ProtocolExceptionEventDisable = config->ProtocolExpectionE
      +                          ventDisable;
 16075                           ;stkvar	_config @ sp[(-4)+-2]
 16076   0117CC  0EFA               	movlw	-6
 16077   0117CE  CFE3 FFD9          	movff	plusw1,fsr2l
 16078   0117D2  0EFB               	movlw	-5
 16079   0117D4  CFE3 FFDA          	movff	plusw1,fsr2h
 16080                           
 16081                           ;stkvar	_ciCon @ sp[(-4)+0]
 16082   0117D8  50E1               	movf	fsr1l,w,c
 16083   0117DA  0FFC               	addlw	-4
 16084   0117DC  6EE9               	movwf	fsr0l,c
 16085   0117DE  50E2               	movf	fsr1h,w,c
 16086   0117E0  6EEA               	movwf	fsr0h,c
 16087   0117E2  0EFF               	movlw	255
 16088   0117E4  22EA               	addwfc	fsr0h,f,c
 16089   0117E6  9CEF               	bcf	indf0,6,c
 16090   0117E8  ACDF               	btfss	indf2,6,c
 16091   0117EA  EFF8  F08B         	goto	u2395
 16092   0117EE  8CEF               	bsf	indf0,6,c
 16093   0117F0                     u2395:
 16094   0117F0                     
 16095                           ;can/can.c: 456:     ciCon.bF.WakeUpFilterEnable = config->WakeUpFilterEnable;
 16096                           ;stkvar	_config @ sp[(-4)+-2]
 16097   0117F0  0EFA               	movlw	-6
 16098   0117F2  CFE3 FFD9          	movff	plusw1,fsr2l
 16099   0117F6  0EFB               	movlw	-5
 16100   0117F8  CFE3 FFDA          	movff	plusw1,fsr2h
 16101                           
 16102                           ;stkvar	_ciCon @ sp[(-4)+0]
 16103   0117FC  0EFD               	movlw	253
 16104   0117FE  24E1               	addwf	fsr1l,w,c
 16105   011800  6EE9               	movwf	fsr0l,c
 16106   011802  0EFF               	movlw	255
 16107   011804  20E2               	addwfc	fsr1h,w,c
 16108   011806  6EEA               	movwf	fsr0h,c
 16109   011808  90EF               	bcf	indf0,0,c
 16110   01180A  AEDF               	btfss	indf2,7,c
 16111   01180C  EF09  F08C         	goto	u2405
 16112   011810  80EF               	bsf	indf0,0,c
 16113   011812                     u2405:
 16114   011812                     
 16115                           ;can/can.c: 457:     ciCon.bF.WakeUpFilterTime = config->WakeUpFilterTime;
 16116                           ;stkvar	_config @ sp[(-4)+-2]
 16117   011812  0EFA               	movlw	-6
 16118   011814  CFE3 F02B          	movff	plusw1,btemp+10
 16119   011818  0EFB               	movlw	-5
 16120   01181A  CFE3 F02C          	movff	plusw1,btemp+11
 16121   01181E  0E01               	movlw	1
 16122   011820  242B               	addwf	(btemp+10)^0,w,c
 16123   011822  6ED9               	movwf	fsr2l,c
 16124   011824  0E00               	movlw	0
 16125   011826  202C               	addwfc	(btemp+11)^0,w,c
 16126   011828  6EDA               	movwf	fsr2h,c
 16127   01182A  50DF               	movf	223,w,c
 16128   01182C  0B03               	andlw	3
 16129   01182E  6E2C               	movwf	(btemp+11)^0,c
 16130                           
 16131                           ;stkvar	_ciCon @ sp[(-4)+0]
 16132   011830  0EFD               	movlw	253
 16133   011832  24E1               	addwf	fsr1l,w,c
 16134   011834  6ED9               	movwf	fsr2l,c
 16135   011836  0EFF               	movlw	255
 16136   011838  20E2               	addwfc	fsr1h,w,c
 16137   01183A  6EDA               	movwf	fsr2h,c
 16138   01183C  462C               	rlncf	(btemp+11)^0,f,c
 16139   01183E  50DF               	movf	223,w,c
 16140   011840  182C               	xorwf	(btemp+11)^0,w,c
 16141   011842  0BF9               	andlw	-7
 16142   011844  182C               	xorwf	(btemp+11)^0,w,c
 16143   011846  6EDF               	movwf	223,c
 16144   011848                     
 16145                           ;can/can.c: 458:     ciCon.bF.BitRateSwitchDisable = config->BitRateSwitchDisable;
 16146                           ;stkvar	_config @ sp[(-4)+-2]
 16147   011848  0EFA               	movlw	-6
 16148   01184A  CFE3 F02B          	movff	plusw1,btemp+10
 16149   01184E  0EFB               	movlw	-5
 16150   011850  CFE3 F02C          	movff	plusw1,btemp+11
 16151   011854  0E01               	movlw	1
 16152   011856  242B               	addwf	(btemp+10)^0,w,c
 16153   011858  6ED9               	movwf	fsr2l,c
 16154   01185A  0E00               	movlw	0
 16155   01185C  202C               	addwfc	(btemp+11)^0,w,c
 16156   01185E  6EDA               	movwf	fsr2h,c
 16157                           
 16158                           ;stkvar	_ciCon @ sp[(-4)+0]
 16159   011860  0EFD               	movlw	253
 16160   011862  24E1               	addwf	fsr1l,w,c
 16161   011864  6EE9               	movwf	fsr0l,c
 16162   011866  0EFF               	movlw	255
 16163   011868  20E2               	addwfc	fsr1h,w,c
 16164   01186A  6EEA               	movwf	fsr0h,c
 16165   01186C  98EF               	bcf	indf0,4,c
 16166   01186E  A4DF               	btfss	indf2,2,c
 16167   011870  EF3B  F08C         	goto	u2415
 16168   011874  88EF               	bsf	indf0,4,c
 16169   011876                     u2415:
 16170   011876                     
 16171                           ;can/can.c: 459:     ciCon.bF.RestrictReTxAttempts = config->RestrictReTxAttempts;
 16172                           ;stkvar	_config @ sp[(-4)+-2]
 16173   011876  0EFA               	movlw	-6
 16174   011878  CFE3 F02B          	movff	plusw1,btemp+10
 16175   01187C  0EFB               	movlw	-5
 16176   01187E  CFE3 F02C          	movff	plusw1,btemp+11
 16177   011882  0E01               	movlw	1
 16178   011884  242B               	addwf	(btemp+10)^0,w,c
 16179   011886  6ED9               	movwf	fsr2l,c
 16180   011888  0E00               	movlw	0
 16181   01188A  202C               	addwfc	(btemp+11)^0,w,c
 16182   01188C  6EDA               	movwf	fsr2h,c
 16183                           
 16184                           ;stkvar	_ciCon @ sp[(-4)+0]
 16185   01188E  0EFE               	movlw	254
 16186   011890  24E1               	addwf	fsr1l,w,c
 16187   011892  6EE9               	movwf	fsr0l,c
 16188   011894  0EFF               	movlw	255
 16189   011896  20E2               	addwfc	fsr1h,w,c
 16190   011898  6EEA               	movwf	fsr0h,c
 16191   01189A  90EF               	bcf	indf0,0,c
 16192   01189C  A6DF               	btfss	indf2,3,c
 16193   01189E  EF52  F08C         	goto	u2425
 16194   0118A2  80EF               	bsf	indf0,0,c
 16195   0118A4                     u2425:
 16196   0118A4                     
 16197                           ;can/can.c: 460:     ciCon.bF.EsiInGatewayMode = config->EsiInGatewayMode;
 16198                           ;stkvar	_config @ sp[(-4)+-2]
 16199   0118A4  0EFA               	movlw	-6
 16200   0118A6  CFE3 F02B          	movff	plusw1,btemp+10
 16201   0118AA  0EFB               	movlw	-5
 16202   0118AC  CFE3 F02C          	movff	plusw1,btemp+11
 16203   0118B0  0E01               	movlw	1
 16204   0118B2  242B               	addwf	(btemp+10)^0,w,c
 16205   0118B4  6ED9               	movwf	fsr2l,c
 16206   0118B6  0E00               	movlw	0
 16207   0118B8  202C               	addwfc	(btemp+11)^0,w,c
 16208   0118BA  6EDA               	movwf	fsr2h,c
 16209                           
 16210                           ;stkvar	_ciCon @ sp[(-4)+0]
 16211   0118BC  0EFE               	movlw	254
 16212   0118BE  24E1               	addwf	fsr1l,w,c
 16213   0118C0  6EE9               	movwf	fsr0l,c
 16214   0118C2  0EFF               	movlw	255
 16215   0118C4  20E2               	addwfc	fsr1h,w,c
 16216   0118C6  6EEA               	movwf	fsr0h,c
 16217   0118C8  92EF               	bcf	indf0,1,c
 16218   0118CA  A8DF               	btfss	indf2,4,c
 16219   0118CC  EF69  F08C         	goto	u2435
 16220   0118D0  82EF               	bsf	indf0,1,c
 16221   0118D2                     u2435:
 16222   0118D2                     
 16223                           ;can/can.c: 461:     ciCon.bF.SystemErrorToListenOnly = config->SystemErrorToListenOnly;
 16224                           ;stkvar	_config @ sp[(-4)+-2]
 16225   0118D2  0EFA               	movlw	-6
 16226   0118D4  CFE3 F02B          	movff	plusw1,btemp+10
 16227   0118D8  0EFB               	movlw	-5
 16228   0118DA  CFE3 F02C          	movff	plusw1,btemp+11
 16229   0118DE  0E01               	movlw	1
 16230   0118E0  242B               	addwf	(btemp+10)^0,w,c
 16231   0118E2  6ED9               	movwf	fsr2l,c
 16232   0118E4  0E00               	movlw	0
 16233   0118E6  202C               	addwfc	(btemp+11)^0,w,c
 16234   0118E8  6EDA               	movwf	fsr2h,c
 16235                           
 16236                           ;stkvar	_ciCon @ sp[(-4)+0]
 16237   0118EA  0EFE               	movlw	254
 16238   0118EC  24E1               	addwf	fsr1l,w,c
 16239   0118EE  6EE9               	movwf	fsr0l,c
 16240   0118F0  0EFF               	movlw	255
 16241   0118F2  20E2               	addwfc	fsr1h,w,c
 16242   0118F4  6EEA               	movwf	fsr0h,c
 16243   0118F6  94EF               	bcf	indf0,2,c
 16244   0118F8  AADF               	btfss	indf2,5,c
 16245   0118FA  EF80  F08C         	goto	u2445
 16246   0118FE  84EF               	bsf	indf0,2,c
 16247   011900                     u2445:
 16248   011900                     
 16249                           ;can/can.c: 462:     ciCon.bF.StoreInTEF = config->StoreInTEF;
 16250                           ;stkvar	_config @ sp[(-4)+-2]
 16251   011900  0EFA               	movlw	-6
 16252   011902  CFE3 F02B          	movff	plusw1,btemp+10
 16253   011906  0EFB               	movlw	-5
 16254   011908  CFE3 F02C          	movff	plusw1,btemp+11
 16255   01190C  0E01               	movlw	1
 16256   01190E  242B               	addwf	(btemp+10)^0,w,c
 16257   011910  6ED9               	movwf	fsr2l,c
 16258   011912  0E00               	movlw	0
 16259   011914  202C               	addwfc	(btemp+11)^0,w,c
 16260   011916  6EDA               	movwf	fsr2h,c
 16261                           
 16262                           ;stkvar	_ciCon @ sp[(-4)+0]
 16263   011918  0EFE               	movlw	254
 16264   01191A  24E1               	addwf	fsr1l,w,c
 16265   01191C  6EE9               	movwf	fsr0l,c
 16266   01191E  0EFF               	movlw	255
 16267   011920  20E2               	addwfc	fsr1h,w,c
 16268   011922  6EEA               	movwf	fsr0h,c
 16269   011924  96EF               	bcf	indf0,3,c
 16270   011926  ACDF               	btfss	indf2,6,c
 16271   011928  EF97  F08C         	goto	u2455
 16272   01192C  86EF               	bsf	indf0,3,c
 16273   01192E                     u2455:
 16274   01192E                     
 16275                           ;can/can.c: 463:     ciCon.bF.TXQEnable = config->TXQEnable;
 16276                           ;stkvar	_config @ sp[(-4)+-2]
 16277   01192E  0EFA               	movlw	-6
 16278   011930  CFE3 F02B          	movff	plusw1,btemp+10
 16279   011934  0EFB               	movlw	-5
 16280   011936  CFE3 F02C          	movff	plusw1,btemp+11
 16281   01193A  0E01               	movlw	1
 16282   01193C  242B               	addwf	(btemp+10)^0,w,c
 16283   01193E  6ED9               	movwf	fsr2l,c
 16284   011940  0E00               	movlw	0
 16285   011942  202C               	addwfc	(btemp+11)^0,w,c
 16286   011944  6EDA               	movwf	fsr2h,c
 16287                           
 16288                           ;stkvar	_ciCon @ sp[(-4)+0]
 16289   011946  0EFE               	movlw	254
 16290   011948  24E1               	addwf	fsr1l,w,c
 16291   01194A  6EE9               	movwf	fsr0l,c
 16292   01194C  0EFF               	movlw	255
 16293   01194E  20E2               	addwfc	fsr1h,w,c
 16294   011950  6EEA               	movwf	fsr0h,c
 16295   011952  98EF               	bcf	indf0,4,c
 16296   011954  AEDF               	btfss	indf2,7,c
 16297   011956  EFAE  F08C         	goto	u2465
 16298   01195A  88EF               	bsf	indf0,4,c
 16299   01195C                     u2465:
 16300   01195C                     
 16301                           ;can/can.c: 464:     ciCon.bF.TxBandWidthSharing = config->TxBandWidthSharing;
 16302                           ;stkvar	_config @ sp[(-4)+-2]
 16303   01195C  0EFA               	movlw	-6
 16304   01195E  CFE3 F02B          	movff	plusw1,btemp+10
 16305   011962  0EFB               	movlw	-5
 16306   011964  CFE3 F02C          	movff	plusw1,btemp+11
 16307   011968  0E02               	movlw	2
 16308   01196A  242B               	addwf	(btemp+10)^0,w,c
 16309   01196C  6ED9               	movwf	fsr2l,c
 16310   01196E  0E00               	movlw	0
 16311   011970  202C               	addwfc	(btemp+11)^0,w,c
 16312   011972  6EDA               	movwf	fsr2h,c
 16313   011974  50DF               	movf	223,w,c
 16314   011976  0B0F               	andlw	15
 16315   011978  6E2C               	movwf	(btemp+11)^0,c
 16316                           
 16317                           ;stkvar	_ciCon @ sp[(-4)+0]
 16318   01197A  0EFF               	movlw	255
 16319   01197C  24E1               	addwf	fsr1l,w,c
 16320   01197E  6ED9               	movwf	fsr2l,c
 16321   011980  0EFF               	movlw	255
 16322   011982  20E2               	addwfc	fsr1h,w,c
 16323   011984  6EDA               	movwf	fsr2h,c
 16324   011986  3A2C               	swapf	(btemp+11)^0,f,c
 16325   011988  50DF               	movf	223,w,c
 16326   01198A  182C               	xorwf	(btemp+11)^0,w,c
 16327   01198C  0B0F               	andlw	-241
 16328   01198E  182C               	xorwf	(btemp+11)^0,w,c
 16329   011990  6EDF               	movwf	223,c
 16330   011992                     
 16331                           ;stkvar	_ciCon @ sp[(-4)+0]
 16332   011992  0EFC               	movlw	-4
 16333   011994  CFE3 FFE6          	movff	plusw1,postinc1
 16334   011998  CFE3 FFE6          	movff	plusw1,postinc1
 16335   01199C  CFE3 FFE6          	movff	plusw1,postinc1
 16336   0119A0  CFE3 FFE6          	movff	plusw1,postinc1
 16337   0119A4  0E00               	movlw	0
 16338   0119A6  6EE6               	movwf	postinc1,c
 16339   0119A8  0E00               	movlw	0
 16340   0119AA  6EE6               	movwf	postinc1,c
 16341   0119AC  ECF1  F09B         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 16342   0119B0                     
 16343                           ; _DRV_CANFDSPI_Configure: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 2, argsize = 2, vargsize = 0
 16344   0119B0  0EFA               	movlw	250
 16345   0119B2  26E1               	addwf	fsr1l,f,c
 16346   0119B4  0EFF               	movlw	255
 16347   0119B6  22E2               	addwfc	fsr1h,f,c
 16348   0119B8  0012               	return		;funcret
 16349   0119BA                     __end_of_DRV_CANFDSPI_Configure:
 16350                           	callstack 0
 16351                           
 16352 ;; *************** function _DRV_CANFDSPI_BitTimeConfigureNominal40MHz *****************
 16353 ;; Defined at:
 16354 ;;		line 2825 in file "can/can.c"
 16355 ;; Parameters:    Size  Location     Type
 16356 ;;  bitTime         1  [STACK] enum E5604
 16357 ;; Auto vars:     Size  Location     Type
 16358 ;;  ciNbtcfg        4  [STACK] struct _REG_CiNBTCFG
 16359 ;;  spiTransferE    1    0        char 
 16360 ;; Return value:  Size  Location     Type
 16361 ;;                  1  [STACK] char 
 16362 ;; Registers used:
 16363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh,
      + tblptru, prodl, prodh
 16364 ;; Tracked objects:
 16365 ;;		On entry : 0/0
 16366 ;;		On exit  : 0/0
 16367 ;;		Unchanged: 0/0
 16368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16373 ;;Total ram usage:        0 bytes
 16374 ;; Hardware stack levels used: 1
 16375 ;; Hardware stack levels required when called: 9
 16376 ;; This function calls:
 16377 ;;		_DRV_CANFDSPI_WriteWord
 16378 ;; This function is called by:
 16379 ;;		_CanInit
 16380 ;; This function uses a reentrant model
 16381 ;;
 16382                           
 16383                           	psect	text66
 16384   011C18                     __ptext66:
 16385                           	callstack 0
 16386   011C18                     _DRV_CANFDSPI_BitTimeConfigureNominal40MHz:
 16387                           	callstack 0
 16388                           
 16389                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16390   011C18  52E6               	movf	postinc1,f,c
 16391   011C1A  52E6               	movf	postinc1,f,c
 16392   011C1C  52E6               	movf	postinc1,f,c
 16393   011C1E  52E6               	movf	postinc1,f,c
 16394   011C20                     
 16395                           ;can/can.c: 2829:     REG_CiNBTCFG ciNbtcfg;;can/can.c: 2831:     ciNbtcfg.word = canCon
      +                          trolResetValues[0x004 / 4];
 16396   011C20  0E91               	movlw	low (_canControlResetValues+4)
 16397   011C22  6EF6               	movwf	tblptrl,c
 16398   011C24  0EFF               	movlw	high (_canControlResetValues+4)
 16399   011C26  6EF7               	movwf	tblptrh,c
 16400   011C28                     	if	0	;tblptru may be non-zero
 16401   011C28                     	endif
 16402   011C28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16403   011C28  0E00               	movlw	low (__mediumconst shr (0+16))
 16404   011C2A  6EF8               	movwf	tblptru,c
 16405   011C2C                     	endif
 16406   011C2C  0009               	tblrd		*+
 16407   011C2E  CFF5 F029          	movff	tablat,btemp+8
 16408   011C32  0009               	tblrd		*+
 16409   011C34  CFF5 F02A          	movff	tablat,btemp+9
 16410   011C38  0009               	tblrd		*+
 16411   011C3A  CFF5 F02B          	movff	tablat,btemp+10
 16412   011C3E  0009               	tblrd		*+
 16413   011C40  CFF5 F02C          	movff	tablat,btemp+11
 16414                           
 16415                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16416   011C44  0EFC               	movlw	-4
 16417   011C46  C029  FFE3         	movff	btemp+8,plusw1
 16418   011C4A  0EFD               	movlw	-3
 16419   011C4C  C02A  FFE3         	movff	btemp+9,plusw1
 16420   011C50  0EFE               	movlw	-2
 16421   011C52  C02B  FFE3         	movff	btemp+10,plusw1
 16422   011C56  0EFF               	movlw	-1
 16423   011C58  C02C  FFE3         	movff	btemp+11,plusw1
 16424                           
 16425                           ;can/can.c: 2834:     switch (bitTime) {
 16426   011C5C  EFC8  F08E         	goto	l4716
 16427   011C60                     l665:
 16428   011C60                     l4696:
 16429                           
 16430                           ;can/can.c: 2844:             ciNbtcfg.bF.BRP = 0;
 16431                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16432   011C60  0EFF               	movlw	255
 16433   011C62  24E1               	addwf	fsr1l,w,c
 16434   011C64  6ED9               	movwf	fsr2l,c
 16435   011C66  0EFF               	movlw	255
 16436   011C68  20E2               	addwfc	fsr1h,w,c
 16437   011C6A  6EDA               	movwf	fsr2h,c
 16438   011C6C  6ADF               	clrf	indf2,c
 16439                           
 16440                           ;can/can.c: 2845:             ciNbtcfg.bF.TSEG1 = 62;
 16441                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16442   011C6E  0EFE               	movlw	254
 16443   011C70  24E1               	addwf	fsr1l,w,c
 16444   011C72  6ED9               	movwf	fsr2l,c
 16445   011C74  0EFF               	movlw	255
 16446   011C76  20E2               	addwfc	fsr1h,w,c
 16447   011C78  6EDA               	movwf	fsr2h,c
 16448   011C7A  0E3E               	movlw	62
 16449   011C7C  6EDF               	movwf	indf2,c
 16450                           
 16451                           ;can/can.c: 2846:             ciNbtcfg.bF.TSEG2 = 15;
 16452                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16453   011C7E  0EFD               	movlw	253
 16454   011C80  24E1               	addwf	fsr1l,w,c
 16455   011C82  6ED9               	movwf	fsr2l,c
 16456   011C84  0EFF               	movlw	255
 16457   011C86  20E2               	addwfc	fsr1h,w,c
 16458   011C88  6EDA               	movwf	fsr2h,c
 16459   011C8A  50DF               	movf	223,w,c
 16460   011C8C  0B80               	andlw	-128
 16461   011C8E  090F               	iorlw	15
 16462   011C90  6EDF               	movwf	223,c
 16463   011C92                     
 16464                           ;can/can.c: 2847:             ciNbtcfg.bF.SJW = 15;
 16465                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16466   011C92  50E1               	movf	fsr1l,w,c
 16467   011C94  0FFC               	addlw	-4
 16468   011C96  6ED9               	movwf	fsr2l,c
 16469   011C98  50E2               	movf	fsr1h,w,c
 16470   011C9A  6EDA               	movwf	fsr2h,c
 16471   011C9C  0EFF               	movlw	255
 16472   011C9E  22DA               	addwfc	fsr2h,f,c
 16473   011CA0  50DF               	movf	223,w,c
 16474   011CA2  0B80               	andlw	-128
 16475   011CA4  090F               	iorlw	15
 16476   011CA6  6EDF               	movwf	223,c
 16477                           
 16478                           ;can/can.c: 2848:             break;
 16479   011CA8  EF1E  F08F         	goto	l4718
 16480   011CAC                     l674:
 16481   011CAC                     l4700:
 16482                           
 16483                           ;can/can.c: 2858:             ciNbtcfg.bF.BRP = 0;
 16484                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16485   011CAC  0EFF               	movlw	255
 16486   011CAE  24E1               	addwf	fsr1l,w,c
 16487   011CB0  6ED9               	movwf	fsr2l,c
 16488   011CB2  0EFF               	movlw	255
 16489   011CB4  20E2               	addwfc	fsr1h,w,c
 16490   011CB6  6EDA               	movwf	fsr2h,c
 16491   011CB8  6ADF               	clrf	indf2,c
 16492                           
 16493                           ;can/can.c: 2859:             ciNbtcfg.bF.TSEG1 = 126;
 16494                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16495   011CBA  0EFE               	movlw	254
 16496   011CBC  24E1               	addwf	fsr1l,w,c
 16497   011CBE  6ED9               	movwf	fsr2l,c
 16498   011CC0  0EFF               	movlw	255
 16499   011CC2  20E2               	addwfc	fsr1h,w,c
 16500   011CC4  6EDA               	movwf	fsr2h,c
 16501   011CC6  0E7E               	movlw	126
 16502   011CC8  6EDF               	movwf	indf2,c
 16503                           
 16504                           ;can/can.c: 2860:             ciNbtcfg.bF.TSEG2 = 31;
 16505                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16506   011CCA  0EFD               	movlw	253
 16507   011CCC  24E1               	addwf	fsr1l,w,c
 16508   011CCE  6ED9               	movwf	fsr2l,c
 16509   011CD0  0EFF               	movlw	255
 16510   011CD2  20E2               	addwfc	fsr1h,w,c
 16511   011CD4  6EDA               	movwf	fsr2h,c
 16512   011CD6  50DF               	movf	223,w,c
 16513   011CD8  0B80               	andlw	-128
 16514   011CDA  091F               	iorlw	31
 16515   011CDC  6EDF               	movwf	223,c
 16516   011CDE                     
 16517                           ;can/can.c: 2861:             ciNbtcfg.bF.SJW = 31;
 16518                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16519   011CDE  50E1               	movf	fsr1l,w,c
 16520   011CE0  0FFC               	addlw	-4
 16521   011CE2  6ED9               	movwf	fsr2l,c
 16522   011CE4  50E2               	movf	fsr1h,w,c
 16523   011CE6  6EDA               	movwf	fsr2h,c
 16524   011CE8  0EFF               	movlw	255
 16525   011CEA  22DA               	addwfc	fsr2h,f,c
 16526   011CEC  50DF               	movf	223,w,c
 16527   011CEE  0B80               	andlw	-128
 16528   011CF0  091F               	iorlw	31
 16529   011CF2  6EDF               	movwf	223,c
 16530                           
 16531                           ;can/can.c: 2862:             break;
 16532   011CF4  EF1E  F08F         	goto	l4718
 16533   011CF8                     l4704:
 16534                           
 16535                           ;can/can.c: 2866:             ciNbtcfg.bF.BRP = 0;
 16536                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16537   011CF8  0EFF               	movlw	255
 16538   011CFA  24E1               	addwf	fsr1l,w,c
 16539   011CFC  6ED9               	movwf	fsr2l,c
 16540   011CFE  0EFF               	movlw	255
 16541   011D00  20E2               	addwfc	fsr1h,w,c
 16542   011D02  6EDA               	movwf	fsr2h,c
 16543   011D04  6ADF               	clrf	indf2,c
 16544                           
 16545                           ;can/can.c: 2867:             ciNbtcfg.bF.TSEG1 = 30;
 16546                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16547   011D06  0EFE               	movlw	254
 16548   011D08  24E1               	addwf	fsr1l,w,c
 16549   011D0A  6ED9               	movwf	fsr2l,c
 16550   011D0C  0EFF               	movlw	255
 16551   011D0E  20E2               	addwfc	fsr1h,w,c
 16552   011D10  6EDA               	movwf	fsr2h,c
 16553   011D12  0E1E               	movlw	30
 16554   011D14  6EDF               	movwf	indf2,c
 16555                           
 16556                           ;can/can.c: 2868:             ciNbtcfg.bF.TSEG2 = 7;
 16557                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16558   011D16  0EFD               	movlw	253
 16559   011D18  24E1               	addwf	fsr1l,w,c
 16560   011D1A  6ED9               	movwf	fsr2l,c
 16561   011D1C  0EFF               	movlw	255
 16562   011D1E  20E2               	addwfc	fsr1h,w,c
 16563   011D20  6EDA               	movwf	fsr2h,c
 16564   011D22  50DF               	movf	223,w,c
 16565   011D24  0B80               	andlw	-128
 16566   011D26  0907               	iorlw	7
 16567   011D28  6EDF               	movwf	223,c
 16568   011D2A                     
 16569                           ;can/can.c: 2869:             ciNbtcfg.bF.SJW = 7;
 16570                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16571   011D2A  50E1               	movf	fsr1l,w,c
 16572   011D2C  0FFC               	addlw	-4
 16573   011D2E  6ED9               	movwf	fsr2l,c
 16574   011D30  50E2               	movf	fsr1h,w,c
 16575   011D32  6EDA               	movwf	fsr2h,c
 16576   011D34  0EFF               	movlw	255
 16577   011D36  22DA               	addwfc	fsr2h,f,c
 16578   011D38  50DF               	movf	223,w,c
 16579   011D3A  0B80               	andlw	-128
 16580   011D3C  0907               	iorlw	7
 16581   011D3E  6EDF               	movwf	223,c
 16582                           
 16583                           ;can/can.c: 2870:             break;
 16584   011D40  EF1E  F08F         	goto	l4718
 16585   011D44                     l4708:
 16586                           
 16587                           ;can/can.c: 2873:             ciNbtcfg.bF.BRP = 0;
 16588                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16589   011D44  0EFF               	movlw	255
 16590   011D46  24E1               	addwf	fsr1l,w,c
 16591   011D48  6ED9               	movwf	fsr2l,c
 16592   011D4A  0EFF               	movlw	255
 16593   011D4C  20E2               	addwfc	fsr1h,w,c
 16594   011D4E  6EDA               	movwf	fsr2h,c
 16595   011D50  6ADF               	clrf	indf2,c
 16596                           
 16597                           ;can/can.c: 2874:             ciNbtcfg.bF.TSEG1 = 254;
 16598                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16599   011D52  0EFE               	movlw	254
 16600   011D54  24E1               	addwf	fsr1l,w,c
 16601   011D56  6ED9               	movwf	fsr2l,c
 16602   011D58  0EFF               	movlw	255
 16603   011D5A  20E2               	addwfc	fsr1h,w,c
 16604   011D5C  6EDA               	movwf	fsr2h,c
 16605   011D5E  0EFE               	movlw	254
 16606   011D60  6EDF               	movwf	indf2,c
 16607                           
 16608                           ;can/can.c: 2875:             ciNbtcfg.bF.TSEG2 = 63;
 16609                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16610   011D62  0EFD               	movlw	253
 16611   011D64  24E1               	addwf	fsr1l,w,c
 16612   011D66  6ED9               	movwf	fsr2l,c
 16613   011D68  0EFF               	movlw	255
 16614   011D6A  20E2               	addwfc	fsr1h,w,c
 16615   011D6C  6EDA               	movwf	fsr2h,c
 16616   011D6E  50DF               	movf	223,w,c
 16617   011D70  0B80               	andlw	-128
 16618   011D72  093F               	iorlw	63
 16619   011D74  6EDF               	movwf	223,c
 16620   011D76                     
 16621                           ;can/can.c: 2876:             ciNbtcfg.bF.SJW = 63;
 16622                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16623   011D76  50E1               	movf	fsr1l,w,c
 16624   011D78  0FFC               	addlw	-4
 16625   011D7A  6ED9               	movwf	fsr2l,c
 16626   011D7C  50E2               	movf	fsr1h,w,c
 16627   011D7E  6EDA               	movwf	fsr2h,c
 16628   011D80  0EFF               	movlw	255
 16629   011D82  22DA               	addwfc	fsr2h,f,c
 16630   011D84  50DF               	movf	223,w,c
 16631   011D86  0B80               	andlw	-128
 16632   011D88  093F               	iorlw	63
 16633   011D8A  6EDF               	movwf	223,c
 16634                           
 16635                           ;can/can.c: 2877:             break;
 16636   011D8C  EF1E  F08F         	goto	l4718
 16637   011D90                     l4716:
 16638                           
 16639                           ;stkvar	_bitTime @ sp[(-4)+-1]
 16640   011D90  0EFB               	movlw	-5
 16641   011D92  50E3               	movf	plusw1,w,c
 16642   011D94  6E2B               	movwf	(btemp+10)^0,c
 16643   011D96  6A2C               	clrf	(btemp+11)^0,c
 16644                           
 16645                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16646                           ; Switch size 1, requested type "simple"
 16647                           ; Number of cases is 1, Range of values is 0 to 0
 16648                           ; switch strategies available:
 16649                           ; Name         Instructions Cycles
 16650                           ; simple_byte            4     3 (average)
 16651                           ;	Chosen strategy is simple_byte
 16652   011D98  502C               	movf	(btemp+11)^0,w,c
 16653   011D9A  0A00               	xorlw	0	; case 0
 16654   011D9C  B4D8               	btfsc	status,2,c
 16655   011D9E  EFD3  F08E         	goto	l5584
 16656   011DA2  EF2D  F08F         	goto	l682
 16657   011DA6                     l5584:
 16658                           
 16659                           ; Switch size 1, requested type "simple"
 16660                           ; Number of cases is 18, Range of values is 0 to 17
 16661                           ; switch strategies available:
 16662                           ; Name         Instructions Cycles
 16663                           ; simple_byte           55    28 (average)
 16664                           ;	Chosen strategy is simple_byte
 16665   011DA6  502B               	movf	(btemp+10)^0,w,c
 16666   011DA8  0A00               	xorlw	0	; case 0
 16667   011DAA  B4D8               	btfsc	status,2,c
 16668   011DAC  EF30  F08E         	goto	l665
 16669   011DB0  0A01               	xorlw	1	; case 1
 16670   011DB2  B4D8               	btfsc	status,2,c
 16671   011DB4  EF30  F08E         	goto	l4696
 16672   011DB8  0A03               	xorlw	3	; case 2
 16673   011DBA  B4D8               	btfsc	status,2,c
 16674   011DBC  EF30  F08E         	goto	l4696
 16675   011DC0  0A01               	xorlw	1	; case 3
 16676   011DC2  B4D8               	btfsc	status,2,c
 16677   011DC4  EF30  F08E         	goto	l4696
 16678   011DC8  0A07               	xorlw	7	; case 4
 16679   011DCA  B4D8               	btfsc	status,2,c
 16680   011DCC  EF30  F08E         	goto	l4696
 16681   011DD0  0A01               	xorlw	1	; case 5
 16682   011DD2  B4D8               	btfsc	status,2,c
 16683   011DD4  EF30  F08E         	goto	l4696
 16684   011DD8  0A03               	xorlw	3	; case 6
 16685   011DDA  B4D8               	btfsc	status,2,c
 16686   011DDC  EF30  F08E         	goto	l4696
 16687   011DE0  0A01               	xorlw	1	; case 7
 16688   011DE2  B4D8               	btfsc	status,2,c
 16689   011DE4  EF30  F08E         	goto	l4696
 16690   011DE8  0A0F               	xorlw	15	; case 8
 16691   011DEA  B4D8               	btfsc	status,2,c
 16692   011DEC  EF56  F08E         	goto	l674
 16693   011DF0  0A01               	xorlw	1	; case 9
 16694   011DF2  B4D8               	btfsc	status,2,c
 16695   011DF4  EF56  F08E         	goto	l4700
 16696   011DF8  0A03               	xorlw	3	; case 10
 16697   011DFA  B4D8               	btfsc	status,2,c
 16698   011DFC  EF56  F08E         	goto	l4700
 16699   011E00  0A01               	xorlw	1	; case 11
 16700   011E02  B4D8               	btfsc	status,2,c
 16701   011E04  EF56  F08E         	goto	l4700
 16702   011E08  0A07               	xorlw	7	; case 12
 16703   011E0A  B4D8               	btfsc	status,2,c
 16704   011E0C  EF56  F08E         	goto	l4700
 16705   011E10  0A01               	xorlw	1	; case 13
 16706   011E12  B4D8               	btfsc	status,2,c
 16707   011E14  EF56  F08E         	goto	l4700
 16708   011E18  0A03               	xorlw	3	; case 14
 16709   011E1A  B4D8               	btfsc	status,2,c
 16710   011E1C  EF56  F08E         	goto	l4700
 16711   011E20  0A01               	xorlw	1	; case 15
 16712   011E22  B4D8               	btfsc	status,2,c
 16713   011E24  EF7C  F08E         	goto	l4704
 16714   011E28  0A1F               	xorlw	31	; case 16
 16715   011E2A  B4D8               	btfsc	status,2,c
 16716   011E2C  EF7C  F08E         	goto	l4704
 16717   011E30  0A01               	xorlw	1	; case 17
 16718   011E32  B4D8               	btfsc	status,2,c
 16719   011E34  EFA2  F08E         	goto	l4708
 16720   011E38  EF2D  F08F         	goto	l682
 16721   011E3C                     l4718:
 16722                           
 16723                           ;stkvar	_ciNbtcfg @ sp[(-4)+0]
 16724   011E3C  0EFC               	movlw	-4
 16725   011E3E  CFE3 FFE6          	movff	plusw1,postinc1
 16726   011E42  CFE3 FFE6          	movff	plusw1,postinc1
 16727   011E46  CFE3 FFE6          	movff	plusw1,postinc1
 16728   011E4A  CFE3 FFE6          	movff	plusw1,postinc1
 16729   011E4E  0E04               	movlw	4
 16730   011E50  6EE6               	movwf	postinc1,c
 16731   011E52  0E00               	movlw	0
 16732   011E54  6EE6               	movwf	postinc1,c
 16733   011E56  ECF1  F09B         	call	_DRV_CANFDSPI_WriteWord	;wreg free
 16734   011E5A                     l682:
 16735                           
 16736                           ; _DRV_CANFDSPI_BitTimeConfigureNominal40MHz: autosize = 4, savesize = 0, parsavesize = 
      +                          0, tempsize = 0 parsize = 1, argsize = 1, vargsize = 0
 16737   011E5A  0EFB               	movlw	251
 16738   011E5C  26E1               	addwf	fsr1l,f,c
 16739   011E5E  0EFF               	movlw	255
 16740   011E60  22E2               	addwfc	fsr1h,f,c
 16741   011E62  0012               	return		;funcret
 16742   011E64                     __end_of_DRV_CANFDSPI_BitTimeConfigureNominal40MHz:
 16743                           	callstack 0
 16744                           
 16745 ;; *************** function _DRV_CANFDSPI_WriteWord *****************
 16746 ;; Defined at:
 16747 ;;		line 310 in file "can/can.c"
 16748 ;; Parameters:    Size  Location     Type
 16749 ;;  address         2  [STACK] unsigned short 
 16750 ;;  txd             4  [STACK] unsigned long 
 16751 ;; Auto vars:     Size  Location     Type
 16752 ;;  spiTransferS    2  [STACK] unsigned short 
 16753 ;;  i               1  [STACK] unsigned char 
 16754 ;;  spiTransferE    1  [STACK] char 
 16755 ;; Return value:  Size  Location     Type
 16756 ;;                  1  [STACK] char 
 16757 ;; Registers used:
 16758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 16759 ;; Tracked objects:
 16760 ;;		On entry : 0/0
 16761 ;;		On exit  : 0/0
 16762 ;;		Unchanged: 0/0
 16763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16768 ;;Total ram usage:        0 bytes
 16769 ;; Hardware stack levels used: 1
 16770 ;; Hardware stack levels required when called: 8
 16771 ;; This function calls:
 16772 ;;		_SpiTransfer
 16773 ;; This function is called by:
 16774 ;;		_DRV_CANFDSPI_Configure
 16775 ;;		_DRV_CANFDSPI_TransmitChannelConfigure
 16776 ;;		_DRV_CANFDSPI_TransmitQueueConfigure
 16777 ;;		_DRV_CANFDSPI_FilterObjectConfigure
 16778 ;;		_DRV_CANFDSPI_FilterMaskConfigure
 16779 ;;		_DRV_CANFDSPI_ReceiveChannelConfigure
 16780 ;;		_DRV_CANFDSPI_TefConfigure
 16781 ;;		_DRV_CANFDSPI_TimeStampSet
 16782 ;;		_DRV_CANFDSPI_BitTimeConfigureNominal40MHz
 16783 ;; This function uses a reentrant model
 16784 ;;
 16785                           
 16786                           	psect	text67
 16787   0137E2                     __ptext67:
 16788                           	callstack 0
 16789   0137E2                     _DRV_CANFDSPI_WriteWord:
 16790                           	callstack 0
 16791                           
 16792                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16793   0137E2  52E6               	movf	postinc1,f,c
 16794   0137E4  52E6               	movf	postinc1,f,c
 16795   0137E6  52E6               	movf	postinc1,f,c
 16796   0137E8  52E6               	movf	postinc1,f,c
 16797   0137EA                     
 16798                           ;can/can.c: 310: int8_t DRV_CANFDSPI_WriteWord( uint16_t address,;can/can.c: 311:       
      +                            uint32_t txd);can/can.c: 312: {;can/can.c: 313:     uint8_t i;;can/can.c: 314:     uin
      +                          t16_t spiTransferSize = 6;
 16799   0137EA  0E06               	movlw	6
 16800   0137EC  6E2B               	movwf	(btemp+10)^0,c
 16801   0137EE  0E00               	movlw	0
 16802   0137F0  6E2C               	movwf	(btemp+11)^0,c
 16803                           
 16804                           ;stkvar	_spiTransferSize @ sp[(-4)+0]
 16805   0137F2  0EFC               	movlw	-4
 16806   0137F4  C02B  FFE3         	movff	btemp+10,plusw1
 16807   0137F8  0EFD               	movlw	-3
 16808   0137FA  C02C  FFE3         	movff	btemp+11,plusw1
 16809   0137FE                     
 16810                           ;can/can.c: 318:     spiTransmitBuffer[0] = (uint8_t) ((0x02 << 4) + ((address >> 8) & 0
      +                          xF));
 16811                           ;stkvar	_address @ sp[(-4)+-2]
 16812   0137FE  0EFB               	movlw	251
 16813   013800  24E1               	addwf	fsr1l,w,c
 16814   013802  6ED9               	movwf	fsr2l,c
 16815   013804  0EFF               	movlw	255
 16816   013806  20E2               	addwfc	fsr1h,w,c
 16817   013808  6EDA               	movwf	fsr2h,c
 16818   01380A  50DF               	movf	indf2,w,c
 16819   01380C  0B0F               	andlw	15
 16820   01380E  0F20               	addlw	32
 16821   013810  0101               	movlb	1	; () banked
 16822   013812  6F00               	movwf	_spiTransmitBuffer& (0+255),b
 16823   013814                     
 16824                           ; BSR set to: 1
 16825                           ;can/can.c: 319:     spiTransmitBuffer[1] = (uint8_t) (address & 0xFF);
 16826                           ;stkvar	_address @ sp[(-4)+-2]
 16827   013814  0EFA               	movlw	-6
 16828   013816  CFE3 F101          	movff	plusw1,_spiTransmitBuffer+1
 16829   01381A                     
 16830                           ; BSR set to: 1
 16831                           ;can/can.c: 322:     for (i = 0; i < 4; i++) {
 16832                           ;stkvar	_i @ sp[(-4)+2]
 16833   01381A  0EFE               	movlw	-2
 16834   01381C  6AE3               	clrf	plusw1,c
 16835   01381E                     l4568:
 16836                           
 16837                           ;can/can.c: 323:         spiTransmitBuffer[i + 2] = (uint8_t) ((txd >> (i * 8)) & 0xFF);
 16838                           ;stkvar	_i @ sp[(-4)+2]
 16839   01381E  0EFE               	movlw	-2
 16840   013820  50E3               	movf	plusw1,w,c
 16841   013822  6E2B               	movwf	(btemp+10)^0,c
 16842   013824  6A2C               	clrf	(btemp+11)^0,c
 16843   013826  0E02               	movlw	low (_spiTransmitBuffer+2)
 16844   013828  242B               	addwf	(btemp+10)^0,w,c
 16845   01382A  6ED9               	movwf	fsr2l,c
 16846   01382C  0E01               	movlw	high (_spiTransmitBuffer+2)
 16847   01382E  202C               	addwfc	(btemp+11)^0,w,c
 16848   013830  6EDA               	movwf	fsr2h,c
 16849                           
 16850                           ;stkvar	_txd @ sp[(-4)+-6]
 16851   013832  0EF6               	movlw	-10
 16852   013834  CFE3 F029          	movff	plusw1,btemp+8
 16853   013838  0EF7               	movlw	-9
 16854   01383A  CFE3 F02A          	movff	plusw1,btemp+9
 16855   01383E  0EF8               	movlw	-8
 16856   013840  CFE3 F02B          	movff	plusw1,btemp+10
 16857   013844  0EF9               	movlw	-7
 16858   013846  CFE3 F02C          	movff	plusw1,btemp+11
 16859                           
 16860                           ;stkvar	_i @ sp[(-4)+2]
 16861   01384A  0EFE               	movlw	-2
 16862   01384C  50E3               	movf	plusw1,w,c
 16863   01384E  0D08               	mullw	8
 16864   013850  50F3               	movf	243,w,c
 16865   013852  2AE8               	incf	wreg,f,c
 16866   013854  EF31  F09C         	goto	u2220
 16867   013858                     u2225:
 16868   013858  90D8               	bcf	status,0,c
 16869   01385A  322C               	rrcf	(btemp+11)^0,f,c
 16870   01385C  322B               	rrcf	(btemp+10)^0,f,c
 16871   01385E  322A               	rrcf	(btemp+9)^0,f,c
 16872   013860  3229               	rrcf	(btemp+8)^0,f,c
 16873   013862                     u2220:
 16874   013862  2EE8               	decfsz	wreg,f,c
 16875   013864  EF2C  F09C         	goto	u2225
 16876   013868  5029               	movf	(btemp+8)^0,w,c
 16877   01386A  6EDF               	movwf	indf2,c
 16878   01386C                     
 16879                           ;can/can.c: 324:     }
 16880                           ;stkvar	_i @ sp[(-4)+2]
 16881   01386C  0EFE               	movlw	-2
 16882   01386E  2AE3               	incf	plusw1,f,c
 16883   013870                     
 16884                           ;stkvar	_i @ sp[(-4)+2]
 16885   013870  0EFE               	movlw	-2
 16886   013872  CFE3 F021          	movff	plusw1,btemp
 16887   013876  0E03               	movlw	3
 16888   013878  6421               	cpfsgt	btemp^0,c
 16889   01387A  EF41  F09C         	goto	u2231
 16890   01387E  EF43  F09C         	goto	u2230
 16891   013882                     u2231:
 16892   013882  EF0F  F09C         	goto	l4568
 16893   013886                     u2230:
 16894   013886                     
 16895                           ;can/can.c: 326:     spiTransferError = SpiTransfer( spiTransmitBuffer, spiReceiveBuffer
      +                          , spiTransferSize);
 16896                           ;stkvar	_spiTransferSize @ sp[(-4)+0]
 16897   013886  0EFC               	movlw	-4
 16898   013888  CFE3 FFE6          	movff	plusw1,postinc1
 16899   01388C  CFE3 FFE6          	movff	plusw1,postinc1
 16900   013890  0E00               	movlw	low _spiReceiveBuffer
 16901   013892  6EE6               	movwf	postinc1,c
 16902   013894  0E02               	movlw	high _spiReceiveBuffer
 16903   013896  6EE6               	movwf	postinc1,c
 16904   013898  0E00               	movlw	low _spiTransmitBuffer
 16905   01389A  6EE6               	movwf	postinc1,c
 16906   01389C  0E01               	movlw	high _spiTransmitBuffer
 16907   01389E  6EE6               	movwf	postinc1,c
 16908   0138A0  EC8E  F09D         	call	_SpiTransfer	;wreg free
 16909                           
 16910                           ;stkvar	_spiTransferError @ sp[(-4)+3]
 16911   0138A4  0EFF               	movlw	-1
 16912   0138A6  C021  FFE3         	movff	btemp,plusw1
 16913   0138AA                     
 16914                           ;can/can.c: 328:     return spiTransferError;
 16915                           ;stkvar	_spiTransferError @ sp[(-4)+3]
 16916   0138AA  0EFF               	movlw	-1
 16917   0138AC  CFE3 F021          	movff	plusw1,btemp
 16918   0138B0                     
 16919                           ; _DRV_CANFDSPI_WriteWord: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 6, argsize = 6, vargsize = 0
 16920   0138B0  0EF6               	movlw	246
 16921   0138B2  26E1               	addwf	fsr1l,f,c
 16922   0138B4  0EFF               	movlw	255
 16923   0138B6  22E2               	addwfc	fsr1h,f,c
 16924   0138B8  0012               	return		;funcret
 16925   0138BA                     __end_of_DRV_CANFDSPI_WriteWord:
 16926                           	callstack 0
 16927                           
 16928 ;; *************** function _SpiTransfer *****************
 16929 ;; Defined at:
 16930 ;;		line 132 in file "can/can.c"
 16931 ;; Parameters:    Size  Location     Type
 16932 ;;  txPtr           2  [STACK] PTR unsigned char 
 16933 ;;		 -> spiTransmitBuffer(200), 
 16934 ;;  rxPtr           2  [STACK] PTR unsigned char 
 16935 ;;		 -> spiReceiveBuffer(200), 
 16936 ;;  size            2  [STACK] unsigned short 
 16937 ;; Auto vars:     Size  Location     Type
 16938 ;;  dummy           1  [STACK] volatile unsigned char 
 16939 ;; Return value:  Size  Location     Type
 16940 ;;                  1  [STACK] char 
 16941 ;; Registers used:
 16942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 16943 ;; Tracked objects:
 16944 ;;		On entry : 0/1
 16945 ;;		On exit  : 0/0
 16946 ;;		Unchanged: 0/0
 16947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16952 ;;Total ram usage:        0 bytes
 16953 ;; Hardware stack levels used: 1
 16954 ;; Hardware stack levels required when called: 7
 16955 ;; This function calls:
 16956 ;;		Nothing
 16957 ;; This function is called by:
 16958 ;;		_DRV_CANFDSPI_Reset
 16959 ;;		_DRV_CANFDSPI_ReadByte
 16960 ;;		_DRV_CANFDSPI_WriteByte
 16961 ;;		_DRV_CANFDSPI_WriteWord
 16962 ;;		_DRV_CANFDSPI_WriteHalfWord
 16963 ;;		_DRV_CANFDSPI_ReadByteArray
 16964 ;;		_DRV_CANFDSPI_WriteByteArray
 16965 ;;		_DRV_CANFDSPI_ReadWordArray
 16966 ;; This function uses a reentrant model
 16967 ;;
 16968                           
 16969                           	psect	text68
 16970   013B1C                     __ptext68:
 16971                           	callstack 0
 16972   013B1C                     _SpiTransfer:
 16973                           	callstack 0
 16974                           
 16975                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16976   013B1C  52E6               	movf	postinc1,f,c
 16977   013B1E                     
 16978                           ;can/can.c: 132: static int8_t SpiTransfer(uint8_t * txPtr, uint8_t * rxPtr, uint16_t si
      +                          ze);can/can.c: 133: {;can/can.c: 134:   volatile uint8_t dummy;;can/can.c: 135:   LATGbi
      +                          ts.LATG4 = 0;
 16979   013B1E  988F               	bcf	143,4,c	;volatile
 16980                           
 16981                           ;can/can.c: 136:   while(size > 0)
 16982   013B20  EFDB  F09D         	goto	l3934
 16983   013B24                     l145:
 16984                           
 16985                           ;can/can.c: 137:   {;can/can.c: 138:     SSP2STATbits.BF = 0;
 16986   013B24  9064               	bcf	100,0,c	;volatile
 16987   013B26                     
 16988                           ;can/can.c: 139:     dummy = SSP2BUF;
 16989                           ;stkvar	_dummy @ sp[(-1)+0]
 16990   013B26  0EFF               	movlw	-1
 16991   013B28  CF66 FFE3          	movff	3942,plusw1	;volatile
 16992   013B2C                     
 16993                           ;can/can.c: 140:     SSP2BUF = *txPtr;
 16994                           ;stkvar	_txPtr @ sp[(-1)+-2]
 16995   013B2C  0EFD               	movlw	-3
 16996   013B2E  CFE3 FFD9          	movff	plusw1,fsr2l
 16997   013B32  0EFE               	movlw	-2
 16998   013B34  CFE3 FFDA          	movff	plusw1,fsr2h
 16999   013B38  50DF               	movf	indf2,w,c
 17000   013B3A  6E66               	movwf	102,c	;volatile
 17001   013B3C                     l146:
 17002   013B3C  A064               	btfss	100,0,c	;volatile
 17003   013B3E  EFA3  F09D         	goto	u1581
 17004   013B42  EFA5  F09D         	goto	u1580
 17005   013B46                     u1581:
 17006   013B46  EF9E  F09D         	goto	l146
 17007   013B4A                     u1580:
 17008   013B4A                     
 17009                           ;can/can.c: 142:     *rxPtr = SSP2BUF;
 17010                           ;stkvar	_rxPtr @ sp[(-1)+-4]
 17011   013B4A  0EFB               	movlw	-5
 17012   013B4C  CFE3 FFD9          	movff	plusw1,fsr2l
 17013   013B50  0EFC               	movlw	-4
 17014   013B52  CFE3 FFDA          	movff	plusw1,fsr2h
 17015   013B56  CF66 FFDF          	movff	3942,indf2	;volatile
 17016   013B5A                     
 17017                           ;can/can.c: 143:     txPtr++;
 17018                           ;stkvar	_txPtr @ sp[(-1)+-2]
 17019   013B5A  0EFD               	movlw	-3
 17020   013B5C  50E3               	movf	plusw1,w,c
 17021   013B5E  0F01               	addlw	1
 17022   013B60  6E21               	movwf	btemp^0,c
 17023   013B62  0EFD               	movlw	-3
 17024   013B64  C021  FFE3         	movff	btemp,plusw1
 17025   013B68  6A21               	clrf	btemp^0,c
 17026   013B6A  0EFE               	movlw	-2
 17027   013B6C  50E3               	movf	plusw1,w,c
 17028   013B6E  2021               	addwfc	btemp^0,w,c
 17029   013B70  6E21               	movwf	btemp^0,c
 17030   013B72  0EFE               	movlw	-2
 17031   013B74  C021  FFE3         	movff	btemp,plusw1
 17032   013B78                     
 17033                           ;can/can.c: 144:     rxPtr++;
 17034                           ;stkvar	_rxPtr @ sp[(-1)+-4]
 17035   013B78  0EFB               	movlw	-5
 17036   013B7A  50E3               	movf	plusw1,w,c
 17037   013B7C  0F01               	addlw	1
 17038   013B7E  6E21               	movwf	btemp^0,c
 17039   013B80  0EFB               	movlw	-5
 17040   013B82  C021  FFE3         	movff	btemp,plusw1
 17041   013B86  6A21               	clrf	btemp^0,c
 17042   013B88  0EFC               	movlw	-4
 17043   013B8A  50E3               	movf	plusw1,w,c
 17044   013B8C  2021               	addwfc	btemp^0,w,c
 17045   013B8E  6E21               	movwf	btemp^0,c
 17046   013B90  0EFC               	movlw	-4
 17047   013B92  C021  FFE3         	movff	btemp,plusw1
 17048   013B96                     
 17049                           ;can/can.c: 145:     size--;
 17050                           ;stkvar	_size @ sp[(-1)+-6]
 17051   013B96  0EF9               	movlw	-7
 17052   013B98  CFE3 F021          	movff	plusw1,btemp
 17053   013B9C  0E01               	movlw	1
 17054   013B9E  5E21               	subwf	btemp^0,f,c
 17055   013BA0  0EF9               	movlw	-7
 17056   013BA2  C021  FFE3         	movff	btemp,plusw1
 17057   013BA6  0EFA               	movlw	-6
 17058   013BA8  CFE3 F021          	movff	plusw1,btemp
 17059   013BAC  0E00               	movlw	0
 17060   013BAE  5A21               	subwfb	btemp^0,f,c
 17061   013BB0  0EFA               	movlw	-6
 17062   013BB2  C021  FFE3         	movff	btemp,plusw1
 17063   013BB6                     l3934:
 17064                           
 17065                           ;can/can.c: 136:   while(size > 0)
 17066                           ;stkvar	_size @ sp[(-1)+-6]
 17067   013BB6  0EF9               	movlw	-7
 17068   013BB8  CFE3 F021          	movff	plusw1,btemp
 17069   013BBC  0EFA               	movlw	-6
 17070   013BBE  50E3               	movf	plusw1,w,c
 17071   013BC0  1021               	iorwf	btemp^0,w,c
 17072   013BC2  A4D8               	btfss	status,2,c
 17073   013BC4  EFE6  F09D         	goto	u1591
 17074   013BC8  EFE8  F09D         	goto	u1590
 17075   013BCC                     u1591:
 17076   013BCC  EF92  F09D         	goto	l145
 17077   013BD0                     u1590:
 17078   013BD0                     
 17079                           ;can/can.c: 147:   LATGbits.LATG4 = 1;
 17080   013BD0  888F               	bsf	143,4,c	;volatile
 17081   013BD2                     
 17082                           ;can/can.c: 148:   return 0;
 17083   013BD2  0E00               	movlw	0
 17084   013BD4  6E21               	movwf	btemp^0,c
 17085   013BD6                     
 17086                           ; _SpiTransfer: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 17087   013BD6  0EF9               	movlw	249
 17088   013BD8  26E1               	addwf	fsr1l,f,c
 17089   013BDA  0EFF               	movlw	255
 17090   013BDC  22E2               	addwfc	fsr1h,f,c
 17091   013BDE  0012               	return		;funcret
 17092   013BE0                     __end_of_SpiTransfer:
 17093                           	callstack 0
 17094                           
 17095 ;; *************** function _INTERRUPT_InterruptManager *****************
 17096 ;; Defined at:
 17097 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 17098 ;; Parameters:    Size  Location     Type
 17099 ;;		None
 17100 ;; Auto vars:     Size  Location     Type
 17101 ;;		None
 17102 ;; Return value:  Size  Location     Type
 17103 ;;                  1    wreg      void 
 17104 ;; Registers used:
 17105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, prodl, prodh
 17106 ;; Tracked objects:
 17107 ;;		On entry : 0/0
 17108 ;;		On exit  : 0/0
 17109 ;;		Unchanged: 0/0
 17110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17113 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17114 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17115 ;;Total ram usage:       16 bytes
 17116 ;; Hardware stack levels used: 1
 17117 ;; Hardware stack levels required when called: 6
 17118 ;; This function calls:
 17119 ;;		_TMR0_ISR
 17120 ;; This function is called by:
 17121 ;;		Interrupt level 2
 17122 ;; This function uses a non-reentrant model
 17123 ;;
 17124                           
 17125                           	psect	intcode
 17126   000008                     __pintcode:
 17127                           	callstack 0
 17128   000008                     _INTERRUPT_InterruptManager:
 17129                           	callstack 16
 17130                           
 17131                           ;incstack = 0
 17132   000008  CFFA F041          	movff	pclath,??_INTERRUPT_InterruptManager
 17133   00000C  CFFB F042          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 17134   000010  CFE9 F043          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 17135   000014  CFEA F044          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 17136   000018  CFE1 F045          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 17137   00001C  CFE2 F046          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 17138   000020  CFD9 F047          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 17139   000024  CFDA F048          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 17140   000028  CFF3 F049          	movff	prodl,??_INTERRUPT_InterruptManager+8
 17141   00002C  CFF4 F04A          	movff	prodh,??_INTERRUPT_InterruptManager+9
 17142   000030  C021  F04B         	movff	btemp,??_INTERRUPT_InterruptManager+10
 17143   000034  C022  F04C         	movff	btemp+1,??_INTERRUPT_InterruptManager+11
 17144   000038  C029  F04D         	movff	btemp+8,??_INTERRUPT_InterruptManager+12
 17145   00003C  C02A  F04E         	movff	btemp+9,??_INTERRUPT_InterruptManager+13
 17146   000040  C02B  F04F         	movff	btemp+10,??_INTERRUPT_InterruptManager+14
 17147   000044  C02C  F050         	movff	btemp+11,??_INTERRUPT_InterruptManager+15
 17148   000048  EE19  F031         	lfsr	1,___inthi_sp
 17149   00004C                     
 17150                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 17151   00004C  AAF2               	btfss	242,5,c	;volatile
 17152   00004E  EF2B  F000         	goto	i2u303_41
 17153   000052  EF2D  F000         	goto	i2u303_40
 17154   000056                     i2u303_41:
 17155   000056  EF36  F000         	goto	i2l1039
 17156   00005A                     i2u303_40:
 17157   00005A  A4F2               	btfss	242,2,c	;volatile
 17158   00005C  EF32  F000         	goto	i2u304_41
 17159   000060  EF34  F000         	goto	i2u304_40
 17160   000064                     i2u304_41:
 17161   000064  EF36  F000         	goto	i2l1039
 17162   000068                     i2u304_40:
 17163   000068                     
 17164                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 17165   000068  EC0A  F0A4         	call	_TMR0_ISR	;wreg free
 17166   00006C                     i2l1039:
 17167   00006C  C050  F02C         	movff	??_INTERRUPT_InterruptManager+15,btemp+11
 17168   000070  C04F  F02B         	movff	??_INTERRUPT_InterruptManager+14,btemp+10
 17169   000074  C04E  F02A         	movff	??_INTERRUPT_InterruptManager+13,btemp+9
 17170   000078  C04D  F029         	movff	??_INTERRUPT_InterruptManager+12,btemp+8
 17171   00007C  C04C  F022         	movff	??_INTERRUPT_InterruptManager+11,btemp+1
 17172   000080  C04B  F021         	movff	??_INTERRUPT_InterruptManager+10,btemp
 17173   000084  C04A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 17174   000088  C049  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 17175   00008C  C048  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 17176   000090  C047  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 17177   000094  C046  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 17178   000098  C045  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 17179   00009C  C044  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 17180   0000A0  C043  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 17181   0000A4  C042  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 17182   0000A8  C041  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 17183   0000AC  0011               	retfie		f
 17184   0000AE                     __end_of_INTERRUPT_InterruptManager:
 17185                           	callstack 0
 17186                           
 17187 ;; *************** function _TMR0_ISR *****************
 17188 ;; Defined at:
 17189 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 17190 ;; Parameters:    Size  Location     Type
 17191 ;;		None
 17192 ;; Auto vars:     Size  Location     Type
 17193 ;;		None
 17194 ;; Return value:  Size  Location     Type
 17195 ;;                  1  [STACK] void 
 17196 ;; Registers used:
 17197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, prodl, prodh
 17198 ;; Tracked objects:
 17199 ;;		On entry : 0/0
 17200 ;;		On exit  : 0/0
 17201 ;;		Unchanged: 0/0
 17202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17207 ;;Total ram usage:        0 bytes
 17208 ;; Hardware stack levels used: 1
 17209 ;; Hardware stack levels required when called: 5
 17210 ;; This function calls:
 17211 ;;		_TMR0_CallBack
 17212 ;; This function is called by:
 17213 ;;		_INTERRUPT_InterruptManager
 17214 ;; This function uses a reentrant model
 17215 ;;
 17216                           
 17217                           	psect	text70
 17218   014814                     __ptext70:
 17219                           	callstack 0
 17220   014814                     _TMR0_ISR:
 17221                           	callstack 16
 17222   014814                     
 17223                           ;mcc_generated_files/tmr0.c: 138:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 141:     INTCONbits.TMR0IF = 0;
 17224   014814  94F2               	bcf	242,2,c	;volatile
 17225                           
 17226                           ;mcc_generated_files/tmr0.c: 145:     TMR0H = timer0ReloadVal >> 8;
 17227   014816  C018  FFD7         	movff	_timer0ReloadVal+1,4055	;volatile
 17228                           
 17229                           ;mcc_generated_files/tmr0.c: 146:     TMR0L = (uint8_t) timer0ReloadVal;
 17230   01481A  C017  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 17231   01481E                     
 17232                           ;mcc_generated_files/tmr0.c: 147:     carState.ms20Elapsed = 1;
 17233   01481E  0E01               	movlw	1
 17234   014820  0100               	movlb	0	; () banked
 17235   014822  6F76               	movwf	(_carState+22)& (0+255),b
 17236   014824                     
 17237                           ; BSR set to: 0
 17238                           ;mcc_generated_files/tmr0.c: 150:     if (++CountCallBack >= 1)
 17239   014824  4A15               	infsnz	TMR0_ISR@CountCallBack^0,f,c	;volatile
 17240   014826  2A16               	incf	(TMR0_ISR@CountCallBack+1)^0,f,c	;volatile
 17241   014828  5015               	movf	TMR0_ISR@CountCallBack^0,w,c	;volatile
 17242   01482A  1016               	iorwf	(TMR0_ISR@CountCallBack+1)^0,w,c	;volatile
 17243   01482C  B4D8               	btfsc	status,2,c
 17244   01482E  EF1B  F0A4         	goto	u291_41
 17245   014832  EF1D  F0A4         	goto	u291_40
 17246   014836                     u291_41:
 17247   014836  EF21  F0A4         	goto	l1085
 17248   01483A                     u291_40:
 17249   01483A                     
 17250                           ; BSR set to: 0
 17251                           ;mcc_generated_files/tmr0.c: 151:     {;mcc_generated_files/tmr0.c: 153:         TMR0_Ca
      +                          llBack();
 17252   01483A  ECEF  F0A3         	call	_TMR0_CallBack	;wreg free
 17253   01483E                     
 17254                           ;mcc_generated_files/tmr0.c: 156:         CountCallBack = 0;
 17255   01483E  6A15               	clrf	TMR0_ISR@CountCallBack^0,c	;volatile
 17256   014840  6A16               	clrf	(TMR0_ISR@CountCallBack+1)^0,c	;volatile
 17257   014842                     l1085:
 17258                           
 17259                           ; _TMR0_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 17260   014842  0012               	return		;funcret
 17261   014844                     __end_of_TMR0_ISR:
 17262                           	callstack 0
 17263                           
 17264 ;; *************** function _TMR0_CallBack *****************
 17265 ;; Defined at:
 17266 ;;		line 162 in file "mcc_generated_files/tmr0.c"
 17267 ;; Parameters:    Size  Location     Type
 17268 ;;		None
 17269 ;; Auto vars:     Size  Location     Type
 17270 ;;		None
 17271 ;; Return value:  Size  Location     Type
 17272 ;;                  1  [STACK] void 
 17273 ;; Registers used:
 17274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, prodl, prodh
 17275 ;; Tracked objects:
 17276 ;;		On entry : 3F/0
 17277 ;;		On exit  : 0/0
 17278 ;;		Unchanged: 0/0
 17279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17284 ;;Total ram usage:        0 bytes
 17285 ;; Hardware stack levels used: 1
 17286 ;; Hardware stack levels required when called: 4
 17287 ;; This function calls:
 17288 ;;		NULL
 17289 ;;		_TMR0_DefaultInterruptHandler
 17290 ;;		_XF_decrementAndQueueTimers
 17291 ;; This function is called by:
 17292 ;;		_TMR0_ISR
 17293 ;; This function uses a reentrant model
 17294 ;;
 17295                           
 17296                           	psect	text71
 17297   0147DE                     __ptext71:
 17298                           	callstack 0
 17299   0147DE                     _TMR0_CallBack:
 17300                           	callstack 16
 17301   0147DE                     
 17302                           ;mcc_generated_files/tmr0.c: 165:     carState.secondElapsed=1;
 17303   0147DE  0E01               	movlw	1
 17304   0147E0  0100               	movlb	0	; () banked
 17305   0147E2  6F75               	movwf	(_carState+21)& (0+255),b
 17306   0147E4                     
 17307                           ; BSR set to: 0
 17308                           ;mcc_generated_files/tmr0.c: 166:     if(TMR0_InterruptHandler)
 17309   0147E4  5051               	movf	_TMR0_InterruptHandler^0,w,c
 17310   0147E6  1052               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
 17311   0147E8  1053               	iorwf	(_TMR0_InterruptHandler+2)^0,w,c
 17312   0147EA  B4D8               	btfsc	status,2,c
 17313   0147EC  EFFA  F0A3         	goto	u274_41
 17314   0147F0  EFFC  F0A3         	goto	u274_40
 17315   0147F4                     u274_41:
 17316   0147F4  EF09  F0A4         	goto	l1089
 17317   0147F8                     u274_40:
 17318   0147F8                     
 17319                           ; BSR set to: 0
 17320                           ;mcc_generated_files/tmr0.c: 167:     {;mcc_generated_files/tmr0.c: 168:         TMR0_In
      +                          terruptHandler();
 17321   0147F8  D802               	call	u275_48
 17322   0147FA  EF09  F0A4         	goto	u275_49
 17323   0147FE                     u275_48:
 17324   0147FE  0005               	push	
 17325   014800  6EFA               	movwf	pclath,c
 17326   014802  5051               	movf	_TMR0_InterruptHandler^0,w,c
 17327   014804  6EFD               	movwf	tosl,c
 17328   014806  5052               	movf	(_TMR0_InterruptHandler+1)^0,w,c
 17329   014808  6EFE               	movwf	tosh,c
 17330   01480A  5053               	movf	(_TMR0_InterruptHandler+2)^0,w,c
 17331   01480C  6EFF               	movwf	tosu,c
 17332   01480E  50FA               	movf	pclath,w,c
 17333   014810  0012               	return		;indir
 17334   014812                     u275_49:
 17335   014812                     l1089:
 17336                           
 17337                           ; _TMR0_CallBack: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 17338   014812  0012               	return		;funcret
 17339   014814                     __end_of_TMR0_CallBack:
 17340                           	callstack 0
 17341                           
 17342 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17343 ;; Defined at:
 17344 ;;		line 176 in file "mcc_generated_files/tmr0.c"
 17345 ;; Parameters:    Size  Location     Type
 17346 ;;		None
 17347 ;; Auto vars:     Size  Location     Type
 17348 ;;		None
 17349 ;; Return value:  Size  Location     Type
 17350 ;;                  1  [STACK] void 
 17351 ;; Registers used:
 17352 ;;		None
 17353 ;; Tracked objects:
 17354 ;;		On entry : 3F/0
 17355 ;;		On exit  : 0/0
 17356 ;;		Unchanged: 0/0
 17357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17362 ;;Total ram usage:        0 bytes
 17363 ;; Hardware stack levels used: 1
 17364 ;; This function calls:
 17365 ;;		Nothing
 17366 ;; This function is called by:
 17367 ;;		_TMR0_Initialize
 17368 ;;		_TMR0_CallBack
 17369 ;; This function uses a reentrant model
 17370 ;;
 17371                           
 17372                           	psect	text72
 17373   0149B2                     __ptext72:
 17374                           	callstack 0
 17375   0149B2                     _TMR0_DefaultInterruptHandler:
 17376                           	callstack 19
 17377   0149B2                     
 17378                           ; _TMR0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17379   0149B2  0012               	return		;funcret
 17380   0149B4                     __end_of_TMR0_DefaultInterruptHandler:
 17381                           	callstack 0
 17382                           
 17383 ;; *************** function _XF_decrementAndQueueTimers *****************
 17384 ;; Defined at:
 17385 ;;		line 217 in file "xf/xf.c"
 17386 ;; Parameters:    Size  Location     Type
 17387 ;;		None
 17388 ;; Auto vars:     Size  Location     Type
 17389 ;;  dummy           1  [STACK] unsigned char 
 17390 ;;  i               1  [STACK] unsigned char 
 17391 ;; Return value:  Size  Location     Type
 17392 ;;                  1  [STACK] void 
 17393 ;; Registers used:
 17394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl, prodh
 17395 ;; Tracked objects:
 17396 ;;		On entry : 3F/0
 17397 ;;		On exit  : 0/0
 17398 ;;		Unchanged: 0/0
 17399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17404 ;;Total ram usage:        0 bytes
 17405 ;; Hardware stack levels used: 1
 17406 ;; Hardware stack levels required when called: 3
 17407 ;; This function calls:
 17408 ;;		_XF_pushEvent
 17409 ;;		_XF_unscheduleTimer
 17410 ;; This function is called by:
 17411 ;;		_main
 17412 ;;		_TMR0_CallBack
 17413 ;; This function uses a reentrant model
 17414 ;;
 17415                           
 17416                           	psect	text73
 17417   013346                     __ptext73:
 17418                           	callstack 0
 17419   013346                     _XF_decrementAndQueueTimers:
 17420                           	callstack 0
 17421                           
 17422                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17423   013346  52E6               	movf	postinc1,f,c
 17424   013348  52E6               	movf	postinc1,f,c
 17425   01334A                     
 17426                           ;xf/xf.c: 219:     uint8_t i;;xf/xf.c: 220:     for (i=0; i<12; i++)
 17427                           ;stkvar	_i @ sp[(-2)+1]
 17428   01334A  0EFF               	movlw	-1
 17429   01334C  6AE3               	clrf	plusw1,c
 17430   01334E                     l4616:
 17431                           
 17432                           ;xf/xf.c: 221:     {;xf/xf.c: 222:         if (theXF.timerList[i].ev.id != 0)
 17433                           ;stkvar	_i @ sp[(-2)+1]
 17434   01334E  0EFF               	movlw	-1
 17435   013350  50E3               	movf	plusw1,w,c
 17436   013352  0D08               	mullw	8
 17437   013354  0ECA               	movlw	low (_theXF+2)
 17438   013356  24F3               	addwf	243,w,c
 17439   013358  6ED9               	movwf	fsr2l,c
 17440   01335A  0E02               	movlw	high (_theXF+2)
 17441   01335C  20F4               	addwfc	prodh,w,c
 17442   01335E  6EDA               	movwf	fsr2h,c
 17443   013360  50DF               	movf	indf2,w,c
 17444   013362  B4D8               	btfsc	status,2,c
 17445   013364  EFB6  F099         	goto	u226_41
 17446   013368  EFB8  F099         	goto	u226_40
 17447   01336C                     u226_41:
 17448   01336C  EF12  F09A         	goto	l4628
 17449   013370                     u226_40:
 17450   013370                     
 17451                           ;xf/xf.c: 223:         {;xf/xf.c: 224:             theXF.timerList[i].tm-=10;
 17452                           ;stkvar	_i @ sp[(-2)+1]
 17453   013370  0EFF               	movlw	-1
 17454   013372  50E3               	movf	plusw1,w,c
 17455   013374  0D08               	mullw	8
 17456   013376  0EC8               	movlw	low _theXF
 17457   013378  24F3               	addwf	243,w,c
 17458   01337A  6ED9               	movwf	fsr2l,c
 17459   01337C  0E02               	movlw	high _theXF
 17460   01337E  20F4               	addwfc	prodh,w,c
 17461   013380  6EDA               	movwf	fsr2h,c
 17462   013382  0E0A               	movlw	10
 17463   013384  5EDE               	subwf	postinc2,f,c
 17464   013386  0E00               	movlw	0
 17465   013388  5ADD               	subwfb	postdec2,f,c
 17466   01338A                     
 17467                           ;xf/xf.c: 225:             if (theXF.timerList[i].tm ==0)
 17468                           ;stkvar	_i @ sp[(-2)+1]
 17469   01338A  0EFF               	movlw	-1
 17470   01338C  50E3               	movf	plusw1,w,c
 17471   01338E  0D08               	mullw	8
 17472   013390  0EC8               	movlw	low _theXF
 17473   013392  24F3               	addwf	243,w,c
 17474   013394  6ED9               	movwf	fsr2l,c
 17475   013396  0E02               	movlw	high _theXF
 17476   013398  20F4               	addwfc	prodh,w,c
 17477   01339A  6EDA               	movwf	fsr2h,c
 17478   01339C  50DE               	movf	postinc2,w,c
 17479   01339E  10DE               	iorwf	postinc2,w,c
 17480   0133A0  A4D8               	btfss	status,2,c
 17481   0133A2  EFD5  F099         	goto	u227_41
 17482   0133A6  EFD7  F099         	goto	u227_40
 17483   0133AA                     u227_41:
 17484   0133AA  EF12  F09A         	goto	l4628
 17485   0133AE                     u227_40:
 17486   0133AE                     
 17487                           ;xf/xf.c: 226:             {;xf/xf.c: 227:                 uint8_t dummy;;xf/xf.c: 228: 
      +                                          if (XF_pushEvent(theXF.timerList[i].ev, 1, &dummy) == 1)
 17488                           ;stkvar	_dummy @ sp[(-2)+0]
 17489   0133AE  0EFE               	movlw	254
 17490   0133B0  24E1               	addwf	fsr1l,w,c
 17491   0133B2  6E21               	movwf	btemp^0,c
 17492   0133B4  0EFF               	movlw	255
 17493   0133B6  20E2               	addwfc	fsr1h,w,c
 17494   0133B8  6E22               	movwf	(btemp+1)^0,c
 17495   0133BA  C021  FFE6         	movff	btemp,postinc1
 17496   0133BE  C022  FFE6         	movff	btemp+1,postinc1
 17497   0133C2  0E01               	movlw	1
 17498   0133C4  6EE6               	movwf	postinc1,c
 17499                           
 17500                           ;stkvar	_i @ sp[(-5)+1]
 17501   0133C6  0EFC               	movlw	-4
 17502   0133C8  50E3               	movf	plusw1,w,c
 17503   0133CA  0D08               	mullw	8
 17504   0133CC  0ECA               	movlw	low (_theXF+2)
 17505   0133CE  24F3               	addwf	243,w,c
 17506   0133D0  6ED9               	movwf	fsr2l,c
 17507   0133D2  0E02               	movlw	high (_theXF+2)
 17508   0133D4  20F4               	addwfc	prodh,w,c
 17509   0133D6  6EDA               	movwf	fsr2h,c
 17510   0133D8  0E06               	movlw	6
 17511   0133DA                     u228_41:
 17512   0133DA  CFDE FFE6          	movff	postinc2,postinc1
 17513   0133DE  2CE8               	decfsz	wreg,w,c
 17514   0133E0  EFED  F099         	goto	u228_41
 17515   0133E4  ECA4  F094         	call	_XF_pushEvent	;wreg free
 17516   0133E8  0421               	decf	btemp^0,w,c
 17517   0133EA  A4D8               	btfss	status,2,c
 17518   0133EC  EFFA  F099         	goto	u229_41
 17519   0133F0  EFFC  F099         	goto	u229_40
 17520   0133F4                     u229_41:
 17521   0133F4  EF05  F09A         	goto	l4626
 17522   0133F8                     u229_40:
 17523   0133F8                     
 17524                           ;xf/xf.c: 229:                 {;xf/xf.c: 230:                   XF_unscheduleTimer(i, 1
      +                          );
 17525   0133F8  0E01               	movlw	1
 17526   0133FA  6EE6               	movwf	postinc1,c
 17527                           
 17528                           ;stkvar	_i @ sp[(-3)+1]
 17529   0133FC  0EFE               	movlw	-2
 17530   0133FE  50E3               	movf	plusw1,w,c
 17531   013400  6EE6               	movwf	postinc1,c
 17532   013402  ECF5  F0A2         	call	_XF_unscheduleTimer	;wreg free
 17533                           
 17534                           ;xf/xf.c: 231:                 }
 17535   013406  EF12  F09A         	goto	l4628
 17536   01340A                     l4626:
 17537                           
 17538                           ;xf/xf.c: 233:                 {;xf/xf.c: 234:                   theXF.timerList[i].tm=1
      +                          ;
 17539                           ;stkvar	_i @ sp[(-2)+1]
 17540   01340A  0EFF               	movlw	-1
 17541   01340C  50E3               	movf	plusw1,w,c
 17542   01340E  0D08               	mullw	8
 17543   013410  0EC8               	movlw	low _theXF
 17544   013412  24F3               	addwf	243,w,c
 17545   013414  6ED9               	movwf	fsr2l,c
 17546   013416  0E02               	movlw	high _theXF
 17547   013418  20F4               	addwfc	prodh,w,c
 17548   01341A  6EDA               	movwf	fsr2h,c
 17549   01341C  0E01               	movlw	1
 17550   01341E  6EDE               	movwf	postinc2,c
 17551   013420  0E00               	movlw	0
 17552   013422  6EDD               	movwf	postdec2,c
 17553   013424                     l4628:
 17554                           
 17555                           ;xf/xf.c: 238:     }
 17556                           ;stkvar	_i @ sp[(-2)+1]
 17557   013424  0EFF               	movlw	-1
 17558   013426  2AE3               	incf	plusw1,f,c
 17559   013428                     
 17560                           ;stkvar	_i @ sp[(-2)+1]
 17561   013428  0EFF               	movlw	-1
 17562   01342A  CFE3 F021          	movff	plusw1,btemp
 17563   01342E  0E0B               	movlw	11
 17564   013430  6421               	cpfsgt	btemp^0,c
 17565   013432  EF1D  F09A         	goto	u230_41
 17566   013436  EF1F  F09A         	goto	u230_40
 17567   01343A                     u230_41:
 17568   01343A  EFA7  F099         	goto	l4616
 17569   01343E                     u230_40:
 17570   01343E                     
 17571                           ; _XF_decrementAndQueueTimers: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0
      +                           parsize = 0, argsize = 0, vargsize = 0
 17572   01343E  52E5               	movf	postdec1,f,c
 17573   013440  52E5               	movf	postdec1,f,c
 17574   013442  0012               	return		;funcret
 17575   013444                     __end_of_XF_decrementAndQueueTimers:
 17576                           	callstack 0
 17577                           
 17578 ;; *************** function _XF_unscheduleTimer *****************
 17579 ;; Defined at:
 17580 ;;		line 202 in file "xf/xf.c"
 17581 ;; Parameters:    Size  Location     Type
 17582 ;;  id              1  [STACK] unsigned char 
 17583 ;;  inISR           1  [STACK] _Bool 
 17584 ;; Auto vars:     Size  Location     Type
 17585 ;;		None
 17586 ;; Return value:  Size  Location     Type
 17587 ;;                  1  [STACK] void 
 17588 ;; Registers used:
 17589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11, prodl, prodh
 17590 ;; Tracked objects:
 17591 ;;		On entry : 0/0
 17592 ;;		On exit  : 0/0
 17593 ;;		Unchanged: 0/0
 17594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17599 ;;Total ram usage:        0 bytes
 17600 ;; Hardware stack levels used: 1
 17601 ;; Hardware stack levels required when called: 1
 17602 ;; This function calls:
 17603 ;;		_ENTERCRITICAL
 17604 ;;		_Event_init
 17605 ;;		_LEAVECRITICAL
 17606 ;; This function is called by:
 17607 ;;		_XF_decrementAndQueueTimers
 17608 ;; This function uses a reentrant model
 17609 ;;
 17610                           
 17611                           	psect	text74
 17612   0145EA                     __ptext74:
 17613                           	callstack 0
 17614   0145EA                     _XF_unscheduleTimer:
 17615                           	callstack 17
 17616   0145EA                     
 17617                           ;xf/xf.c: 202: void XF_unscheduleTimer(uint8_t id, _Bool inISR);xf/xf.c: 203: {;xf/xf.c:
      +                           204:     ENTERCRITICAL(inISR);
 17618                           ;stkvar	_inISR @ sp[(0)+-2]
 17619   0145EA  0EFE               	movlw	-2
 17620   0145EC  50E3               	movf	plusw1,w,c
 17621   0145EE  6EE6               	movwf	postinc1,c
 17622   0145F0  ECAE  F0A4         	call	_ENTERCRITICAL	;wreg free
 17623   0145F4                     
 17624                           ;xf/xf.c: 205:     theXF.timerList[id].tm = 0;
 17625                           ;stkvar	_id @ sp[(0)+-1]
 17626   0145F4  0EFF               	movlw	-1
 17627   0145F6  50E3               	movf	plusw1,w,c
 17628   0145F8  0D08               	mullw	8
 17629   0145FA  0EC8               	movlw	low _theXF
 17630   0145FC  24F3               	addwf	243,w,c
 17631   0145FE  6ED9               	movwf	fsr2l,c
 17632   014600  0E02               	movlw	high _theXF
 17633   014602  20F4               	addwfc	prodh,w,c
 17634   014604  6EDA               	movwf	fsr2h,c
 17635   014606  6ADE               	clrf	postinc2,c
 17636   014608  6ADD               	clrf	postdec2,c
 17637   01460A                     
 17638                           ;xf/xf.c: 206:     Event_init(&(theXF.timerList[id].ev));
 17639                           ;stkvar	_id @ sp[(0)+-1]
 17640   01460A  0EFF               	movlw	-1
 17641   01460C  50E3               	movf	plusw1,w,c
 17642   01460E  0D08               	mullw	8
 17643   014610  0ECA               	movlw	low (_theXF+2)
 17644   014612  24F3               	addwf	243,w,c
 17645   014614  6E2B               	movwf	(btemp+10)^0,c
 17646   014616  0E02               	movlw	high (_theXF+2)
 17647   014618  20F4               	addwfc	prodh,w,c
 17648   01461A  6E2C               	movwf	(btemp+11)^0,c
 17649   01461C  C02B  FFE6         	movff	btemp+10,postinc1
 17650   014620  C02C  FFE6         	movff	btemp+11,postinc1
 17651   014624  EC4C  F0A3         	call	_Event_init	;wreg free
 17652   014628                     
 17653                           ;xf/xf.c: 207:     theXF.countTmr--;
 17654   014628  C3E1  FFE8         	movff	_theXF+281,wreg
 17655   01462C  0FFF               	addlw	-1
 17656   01462E  CFE8 F3E1          	movff	wreg,_theXF+281
 17657   014632                     
 17658                           ;xf/xf.c: 208:     LEAVECRITICAL(inISR);
 17659                           ;stkvar	_inISR @ sp[(0)+-2]
 17660   014632  0EFE               	movlw	-2
 17661   014634  50E3               	movf	plusw1,w,c
 17662   014636  6EE6               	movwf	postinc1,c
 17663   014638  ECA2  F0A4         	call	_LEAVECRITICAL	;wreg free
 17664   01463C                     
 17665                           ; _XF_unscheduleTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 17666   01463C  52E5               	movf	postdec1,f,c
 17667   01463E  52E5               	movf	postdec1,f,c
 17668   014640  0012               	return		;funcret
 17669   014642                     __end_of_XF_unscheduleTimer:
 17670                           	callstack 0
 17671                           
 17672                           	psect	rparam
 17673   000001                     ___rparam_used  equ	1
 17674   000000                     ___param_bank   equ	0
 17675   000000                     __Lparam        equ	__Lrparam
 17676   000000                     __Hparam        equ	__Hrparam
 17677                           
 17678                           	psect	temp
 17679   000021                     btemp:
 17680                           	callstack 0
 17681   000021                     	ds	32
 17682   000021                     wtemp0          set	btemp
 17683   000023                     wtemp1          set	btemp+2
 17684   000025                     wtemp2          set	btemp+4
 17685   000027                     wtemp3          set	btemp+6
 17686   000029                     wtemp4          set	btemp+8
 17687   00002B                     wtemp5          set	btemp+10
 17688   000022                     wtemp8          set	btemp+1
 17689   000021                     ttemp0          set	btemp
 17690   000024                     ttemp1          set	btemp+3
 17691   000027                     ttemp2          set	btemp+6
 17692   00002A                     ttemp3          set	btemp+9
 17693   000022                     ttemp5          set	btemp+1
 17694   000025                     ttemp6          set	btemp+4
 17695   000029                     ttemp7          set	btemp+8
 17696   000021                     ltemp0          set	btemp
 17697   000025                     ltemp1          set	btemp+4
 17698   000029                     ltemp2          set	btemp+8
 17699   000021                     lltemp0         set	btemp
 17700   000029                     lltemp1         set	btemp+8
 17701   000031                     lltemp2         set	btemp+16
 17702   000039                     lltemp3         set	btemp+24
 17703                           
 17704                           	psect	config
 17705                           
 17706                           ;Config register CONFIG1L @ 0x1FFF8
 17707                           ;	Watchdog Timer Enable bit
 17708                           ;	WDT = OFF, WDT disabled (control is placed on SWDTEN bit)
 17709                           ;	Stack Overflow/Underflow Reset Enable bit
 17710                           ;	STVR = ON, Reset on stack overflow/underflow enabled
 17711                           ;	Extended Instruction Set Enable bit
 17712                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 17713                           ;	Background Debugger Enable bit
 17714                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
 17715   01FFF8                     	org	131064
 17716   01FFF8  A0                 	db	160
 17717                           
 17718                           ;Config register CONFIG1H @ 0x1FFF9
 17719                           ;	Code Protection bit
 17720                           ;	CP0 = OFF, Program memory is not code-protected
 17721   01FFF9                     	org	131065
 17722   01FFF9  F4                 	db	244
 17723                           
 17724                           ;Config register CONFIG2L @ 0x1FFFA
 17725                           ;	Oscillator Selection bits
 17726                           ;	FOSC = HSPLL, HS oscillator, PLL enabled and under software control
 17727                           ;	Default/Reset System Clock Select bit
 17728                           ;	FOSC2 = ON, Clock selected by FOSC1:FOSC0 as system clock is enabled when OSCCON<1:0> 
      +                          = 00
 17729                           ;	Fail-Safe Clock Monitor Enable
 17730                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 17731                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
 17732                           ;	IESO = ON, Two-Speed Start-up enabled
 17733   01FFFA                     	org	131066
 17734   01FFFA  C5                 	db	197
 17735                           
 17736                           ;Config register CONFIG2H @ 0x1FFFB
 17737                           ;	Watchdog Timer Postscaler Select bits
 17738                           ;	WDTPS = 32768, 1:32768
 17739   01FFFB                     	org	131067
 17740   01FFFB  FF                 	db	255
 17741                           
 17742                           ;Config register CONFIG3L @ 0x1FFFC
 17743                           ;	External Address Bus Shift Enable bit
 17744                           ;	EASHFT = ON, Address shifting enabled; address on external bus is offset to start at 0
      +                          00000h
 17745                           ;	External Memory Bus
 17746                           ;	MODE = MM, Microcontroller mode, external bus disabled
 17747                           ;	Data Bus Width Select bit
 17748                           ;	BW = 16, 16-Bit Data Width mode
 17749                           ;	External Bus Wait Enable bit
 17750                           ;	WAIT = OFF, Wait states for operations on external memory bus disabled
 17751   01FFFC                     	org	131068
 17752   01FFFC  F8                 	db	248
 17753                           
 17754                           ;Config register CONFIG3H @ 0x1FFFD
 17755                           ;	ECCP2 MUX bit
 17756                           ;	CCP2MX = ON, ECCP2/P2A is multiplexed with RC1
 17757                           ;	ECCP MUX bit
 17758                           ;	ECCPMX = ON, ECCP1 outputs (P1B/P1C) are multiplexed with RE6 and RE5; ECCP3 outputs (
      +                          P3B/P3C) are multiplexed with RE4 and RE3
 17759                           ;	Ethernet LED Enable bit
 17760                           ;	ETHLED = ON, RA0/RA1 are multiplexed with LEDA/LEDB when Ethernet module is enabled an
      +                          d function as I/O when Ethernet is disabled
 17761   01FFFD                     	org	131069
 17762   01FFFD  F7                 	db	247
 17763                           tosu	equ	0xFFF
 17764                           tosh	equ	0xFFE
 17765                           tosl	equ	0xFFD
 17766                           stkptr	equ	0xFFC
 17767                           pclatu	equ	0xFFB
 17768                           pclath	equ	0xFFA
 17769                           pcl	equ	0xFF9
 17770                           tblptru	equ	0xFF8
 17771                           tblptrh	equ	0xFF7
 17772                           tblptrl	equ	0xFF6
 17773                           tablat	equ	0xFF5
 17774                           prodh	equ	0xFF4
 17775                           prodl	equ	0xFF3
 17776                           indf0	equ	0xFEF
 17777                           postinc0	equ	0xFEE
 17778                           postdec0	equ	0xFED
 17779                           preinc0	equ	0xFEC
 17780                           plusw0	equ	0xFEB
 17781                           fsr0h	equ	0xFEA
 17782                           fsr0l	equ	0xFE9
 17783                           wreg	equ	0xFE8
 17784                           indf1	equ	0xFE7
 17785                           postinc1	equ	0xFE6
 17786                           postdec1	equ	0xFE5
 17787                           preinc1	equ	0xFE4
 17788                           plusw1	equ	0xFE3
 17789                           fsr1h	equ	0xFE2
 17790                           fsr1l	equ	0xFE1
 17791                           bsr	equ	0xFE0
 17792                           indf2	equ	0xFDF
 17793                           postinc2	equ	0xFDE
 17794                           postdec2	equ	0xFDD
 17795                           preinc2	equ	0xFDC
 17796                           plusw2	equ	0xFDB
 17797                           fsr2h	equ	0xFDA
 17798                           fsr2l	equ	0xFD9
 17799                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    96
    Data        0
    BSS         773
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     16      51
    BANK0           160      0      59
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    config	PTR struct _CAN_TEF_CONFIG size(2) Largest target is 1
		 -> tefConfig(STACK[1]), 

    config	PTR struct _CAN_RX_FIFO_CONFIG size(2) Largest target is 3
		 -> rxfConfig(STACK[3]), 

    config	PTR struct _CAN_TX_QUEUE_CONFIG size(2) Largest target is 4
		 -> txqConfig(STACK[4]), 

    config	PTR struct _CAN_TX_QUEUE_CONFIG size(2) Largest target is 4
		 -> txqConfig(STACK[4]), 

    config	PTR struct _CAN_TX_FIFO_CONFIG size(2) Largest target is 2
		 -> txfConfig(STACK[2]), 

    config	PTR struct _CAN_TX_FIFO_CONFIG size(2) Largest target is 2
		 -> txfConfig(STACK[2]), 

    config	PTR struct _CAN_CONFIG size(2) Largest target is 3
		 -> config(STACK[3]), 

    config	PTR struct _CAN_CONFIG size(2) Largest target is 3
		 -> config(STACK[3]), 

    DRV_CANFDSPI_ReadHalfWord$2	PTR unsigned short  size(2) Largest target is 2
		 -> intEnables(STACK[2]), intFlags(STACK[2]), 

    DRV_CANFDSPI_ReadWord$2	PTR unsigned long  size(2) Largest target is 4
		 -> ciFifoSta(STACK[4]), ciTrec(STACK[4]), reg(STACK[4]), 

    DRV_CANFDSPI_WriteWordArray$2	PTR unsigned long  size(2) Largest target is 8
		 -> w(STACK[8]), 

    ev	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    ev	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    ev$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 

    flags	PTR enum E5588 size(2) Largest target is 1
		 -> rxFlags(STACK[1]), 

    flags	PTR enum E5580 size(2) Largest target is 1
		 -> txFlags(STACK[1]), 

    fObj	PTR struct _CAN_FILTEROBJ_ID size(2) Largest target is 6
		 -> filterObj(STACK[6]), 

    id	PTR struct _CAN_FILTEROBJ_ID size(2) Largest target is 6
		 -> filterObj(STACK[6]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), XF_decrementAndQueueTimers(), 

    mask	PTR struct _CAN_MASKOBJ_ID size(2) Largest target is 6
		 -> maskObj(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    me	PTR struct Event_ size(2) Largest target is 282
		 -> ev(STACK[6]), theXF(BIGRAM[282]), theXF$eventQueue(BIGRAM[180]), theXF$timerList(BIGRAM[96]), 

    me$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 

    mObj	PTR struct _CAN_MASKOBJ_ID size(2) Largest target is 6
		 -> maskObj(STACK[6]), 

    processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), 

    processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), 

    processEvent$0	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    processEvent$0	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    rxd	PTR unsigned char  size(2) Largest target is 8
		 -> rxdata(STACK[8]), 

    rxd	PTR unsigned long  size(2) Largest target is 12
		 -> fifoReg(STACK[12]), fifoReg(STACK[12]), fifoReg(STACK[8]), fifoReg(STACK[12]), 
		 -> w(STACK[12]), 

    rxd	PTR unsigned char  size(2) Largest target is 76
		 -> ba(STACK[12]), ba(STACK[76]), 

    rxd	PTR unsigned char  size(2) Largest target is 5
		 -> b(STACK[1]), ciFifoCon(STACK[5]), ciFifoSta(STACK[4]), ciTefCon(STACK[4]), 
		 -> ciTefSta(STACK[4]), crc(STACK[1]), crc(STACK[1]), crc(STACK[1]), 
		 -> crc(STACK[1]), d(STACK[1]), d(STACK[1]), d(STACK[1]), 
		 -> d(STACK[1]), d(STACK[1]), d(STACK[1]), d(STACK[1]), 
		 -> d(STACK[1]), d(STACK[1]), d(STACK[1]), d(STACK[1]), 
		 -> d(STACK[1]), d(STACK[1]), eccInterrupts(STACK[1]), eccInterrupts(STACK[1]), 
		 -> eccStat(STACK[1]), eccStatus(STACK[1]), f(STACK[1]), fCtrl(STACK[1]), 
		 -> filterHitByte(STACK[1]), icodeByte(STACK[1]), iocon(STACK[4]), osc(STACK[4]), 
		 -> rxCodeByte(STACK[1]), txCodeByte(STACK[1]), 

    rxd	PTR unsigned char  size(2) Largest target is 8
		 -> rxdata(STACK[8]), 

    rxObj	PTR struct _CAN_RX_MSGOBJ size(2) Largest target is 16
		 -> rxObj(STACK[16]), txMsg(STACK[16]), 

    rxObj	PTR struct _CAN_RX_MSGOBJ size(2) Largest target is 16
		 -> rxObj(STACK[16]), 

    rxPtr	PTR unsigned char  size(2) Largest target is 200
		 -> spiReceiveBuffer(BANK2[200]), 

    S4943$1$0	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    S4943Event_$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 

    sp__Event_getPE	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 

    sp__Event_getPE$0	PTR struct Event_ size(2) Largest target is 6
		 -> ev(STACK[6]), 

    theXF$eventQueue$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 

    theXF$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 

    theXF$timerList$ev$id$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 

    theXF$timerList$ev$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 

    tmid	PTR unsigned char  size(2) Largest target is 1
		 -> dummy(STACK[1]), tmid(STACK[1]), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), XF_decrementAndQueueTimers(), NULL(), 

    txd	PTR unsigned char  size(2) Largest target is 8
		 -> txdata(STACK[8]), txdata(STACK[8]), txdata(STACK[8]), 

    txd	PTR unsigned char  size(2) Largest target is 200
		 -> txBuffer(STACK[76]), txd(STACK[200]), 

    txd	PTR unsigned char  size(2) Largest target is 8
		 -> txdata(STACK[8]), txdata(STACK[8]), txdata(STACK[8]), 

    txObj	PTR struct _CAN_TX_MSGOBJ size(2) Largest target is 16
		 -> txMsg(STACK[16]), 

    txObj	PTR struct _CAN_TX_MSGOBJ size(2) Largest target is 16
		 -> txMsg(STACK[16]), 

    txPtr	PTR unsigned char  size(2) Largest target is 200
		 -> spiTransmitBuffer(BANK1[200]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[17]), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), 

    ?_XF_popEvent$processEvent	PTR FTN(PTR struct Event_,)_Bool  size(3) Largest target is 1
		 -> lightControl_Process(), motorControl_Process(), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   26603
                            _CanInit
                       _CanSetFilter
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                     _XF_executeOnce
                            _XF_init
                            _XF_post
                     _updateCarState
 ---------------------------------------------------------------------------------
 (1) _updateCarState                                      24    24      0    4707
                         _CanReceive
                            _XF_post
 ---------------------------------------------------------------------------------
 (2) _XF_post                                             13     7      6    1391
                         _Event_init
                     _Event_setDelay
                        _Event_setId
                        _Event_setPE
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (13) _XF_pushEvent                                       12     3      9     986
                      _ENTERCRITICAL
                     _Event_getDelay
                     _Event_setDelay
                      _LEAVECRITICAL
                     _XF_noMoreEvent
                   _XF_scheduleTimer
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) _XF_scheduleTimer                                   10     1      9     310
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                     _XF_noMoreTimer
 ---------------------------------------------------------------------------------
 (15) _XF_noMoreTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _XF_noMoreEvent                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _Event_setDelay                                      4     0      4      44
 ---------------------------------------------------------------------------------
 (14) _Event_getDelay                                      2     0      2      22
 ---------------------------------------------------------------------------------
 (3) _Event_setPE                                          5     0      5      44
 ---------------------------------------------------------------------------------
 (3) _Event_setId                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _CanReceive                                           5     1      4    3055
_DRV_CANFDSPI_ReceiveChannelEventGet
     _DRV_CANFDSPI_ReceiveMessageGet
 ---------------------------------------------------------------------------------
 (3) _DRV_CANFDSPI_ReceiveMessageGet                     120   114      6    2616
         _DRV_CANFDSPI_ReadByteArray
         _DRV_CANFDSPI_ReadWordArray
  _DRV_CANFDSPI_ReceiveChannelUpdate
 ---------------------------------------------------------------------------------
 (4) _DRV_CANFDSPI_ReceiveChannelUpdate                    9     8      1     299
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DRV_CANFDSPI_ReadByteArray                          11     5      6     364
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (3) _DRV_CANFDSPI_ReceiveChannelEventGet                 10     7      3     349
              _DRV_CANFDSPI_ReadByte
 ---------------------------------------------------------------------------------
 (1) _XF_init                                              2     2      0     224
                         _Event_init
 ---------------------------------------------------------------------------------
 (14) _Event_init                                          2     0      2      66
 ---------------------------------------------------------------------------------
 (1) _XF_executeOnce                                       6     6      0   10857
                        _XF_popEvent
               _lightControl_Process *
               _motorControl_Process *
 ---------------------------------------------------------------------------------
 (2) _motorControl_Process                                 2     0      2    3508
                       _motorControl
 ---------------------------------------------------------------------------------
 (3) _motorControl                                        26    24      2    3464
                            _CanSend
 ---------------------------------------------------------------------------------
 (2) _lightControl_Process                                 2     0      2    6808
              _lightContol_BackLight
             _lightContol_FrontLight
 ---------------------------------------------------------------------------------
 (3) _lightContol_FrontLight                              25    24      1    3338
                            _CanSend
 ---------------------------------------------------------------------------------
 (3) _lightContol_BackLight                               25    24      1    3338
                            _CanSend
 ---------------------------------------------------------------------------------
 (4) _CanSend                                              5     1      4    3202
_DRV_CANFDSPI_TransmitChannelEventGe
   _DRV_CANFDSPI_TransmitChannelLoad
 ---------------------------------------------------------------------------------
 (5) _DRV_CANFDSPI_TransmitChannelLoad                   128   118     10    2725
        _DRV_CANFDSPI_DlcToDataBytes
         _DRV_CANFDSPI_ReadWordArray
 _DRV_CANFDSPI_TransmitChannelUpdate
        _DRV_CANFDSPI_WriteByteArray
 ---------------------------------------------------------------------------------
 (6) _DRV_CANFDSPI_WriteByteArray                         11     5      6     296
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (6) _DRV_CANFDSPI_TransmitChannelUpdate                  10     8      2     364
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DRV_CANFDSPI_ReadWordArray                          19    13      6     525
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (6) _DRV_CANFDSPI_DlcToDataBytes                          5     4      1      97
 ---------------------------------------------------------------------------------
 (5) _DRV_CANFDSPI_TransmitChannelEventGet                10     7      3     343
              _DRV_CANFDSPI_ReadByte
 ---------------------------------------------------------------------------------
 (2) _XF_popEvent                                         12     6      6     474
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (14) _LEAVECRITICAL                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (14) _ENTERCRITICAL                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      15
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CanSetFilter                                         5     0      5    2657
         _DRV_CANFDSPI_FilterDisable
   _DRV_CANFDSPI_FilterMaskConfigure
 _DRV_CANFDSPI_FilterObjectConfigure
      _DRV_CANFDSPI_FilterToFifoLink
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_FilterToFifoLink                        7     4      3     308
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_FilterObjectConfigure                  16    13      3     831
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_FilterMaskConfigure                    17    13      4     831
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_FilterDisable                           5     4      1     533
              _DRV_CANFDSPI_ReadByte
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (1) _CanInit                                             15    13      2    6572
_DRV_CANFDSPI_BitTimeConfigureNomina
             _DRV_CANFDSPI_Configure
  _DRV_CANFDSPI_ConfigureObjectReset
     _DRV_CANFDSPI_ModuleEventEnable
   _DRV_CANFDSPI_OperationModeSelect
_DRV_CANFDSPI_ReceiveChannelConfigur
                 _DRV_CANFDSPI_Reset
          _DRV_CANFDSPI_TefConfigure
       _DRV_CANFDSPI_TimeStampEnable
 _DRV_CANFDSPI_TimeStampPrescalerSet
          _DRV_CANFDSPI_TimeStampSet
_DRV_CANFDSPI_TransmitChannelConfigu
_DRV_CANFDSPI_TransmitChannelConfigu
_DRV_CANFDSPI_TransmitQueueConfigure
_DRV_CANFDSPI_TransmitQueueConfigure
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TransmitQueueConfigureObjectReset       7     5      2     120
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TransmitQueueConfigure                  9     7      2     506
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TransmitChannelConfigureObjectReset     7     5      2     150
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TransmitChannelConfigure               11     8      3     578
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TimeStampSet                            5     1      4     304
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TimeStampPrescalerSet                   3     1      2     304
         _DRV_CANFDSPI_WriteHalfWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TimeStampEnable                         2     2      0     469
              _DRV_CANFDSPI_ReadByte
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_TefConfigure                            7     5      2     372
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_Reset                                   3     3      0     189
                          _SPI2_Open
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (3) _SPI2_Open                                            1     0      1      88
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_ReceiveChannelConfigure                11     8      3     464
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_OperationModeSelect                     3     2      1     492
              _DRV_CANFDSPI_ReadByte
             _DRV_CANFDSPI_WriteByte
 ---------------------------------------------------------------------------------
 (5) _DRV_CANFDSPI_WriteByte                               6     3      3     184
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (4) _DRV_CANFDSPI_ReadByte                                7     3      4     184
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_ModuleEventEnable                       8     5      3     374
         _DRV_CANFDSPI_WriteHalfWord
 ---------------------------------------------------------------------------------
 (3) _DRV_CANFDSPI_WriteHalfWord                           8     4      4     274
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_ConfigureObjectReset                    6     4      2     360
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_Configure                               7     5      2     810
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (2) _DRV_CANFDSPI_BitTimeConfigureNominal40MHz            6     5      1     615
             _DRV_CANFDSPI_WriteWord
 ---------------------------------------------------------------------------------
 (3) _DRV_CANFDSPI_WriteWord                              10     4      6     274
                        _SpiTransfer
 ---------------------------------------------------------------------------------
 (6) _SpiTransfer                                          7     1      6      70
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                          16    16      0    1386
                                              0 COMRAM    16    16      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0    1386
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (11) _TMR0_CallBack                                       0     0      0    1386
                                NULL *
       _TMR0_DefaultInterruptHandler *
         _XF_decrementAndQueueTimers *
 ---------------------------------------------------------------------------------
 (12) _XF_decrementAndQueueTimers                          2     2      0    1386
                       _XF_pushEvent
                 _XF_unscheduleTimer
 ---------------------------------------------------------------------------------
 (13) _XF_unscheduleTimer                                  2     0      2     198
                      _ENTERCRITICAL
                         _Event_init
                      _LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (14) _Event_init                                          2     0      2      66
 ---------------------------------------------------------------------------------
 (13) _XF_pushEvent                                       12     3      9     986
                      _ENTERCRITICAL
                     _Event_getDelay
                     _Event_setDelay
                      _LEAVECRITICAL
                     _XF_noMoreEvent
                   _XF_scheduleTimer
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (14) _XF_scheduleTimer                                   10     1      9     310
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                     _XF_noMoreTimer
 ---------------------------------------------------------------------------------
 (15) _XF_noMoreTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _LEAVECRITICAL                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (14) _ENTERCRITICAL                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (14) _XF_noMoreEvent                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _Event_setDelay                                      4     0      4      44
 ---------------------------------------------------------------------------------
 (14) _Event_getDelay                                      2     0      2      22
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CanInit
     _DRV_CANFDSPI_BitTimeConfigureNominal40MHz
       _DRV_CANFDSPI_WriteWord
         _SpiTransfer
     _DRV_CANFDSPI_Configure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_ConfigureObjectReset
     _DRV_CANFDSPI_ModuleEventEnable
       _DRV_CANFDSPI_WriteHalfWord
         _SpiTransfer
     _DRV_CANFDSPI_OperationModeSelect
       _DRV_CANFDSPI_ReadByte
         _SpiTransfer
       _DRV_CANFDSPI_WriteByte
         _SpiTransfer
     _DRV_CANFDSPI_ReceiveChannelConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_Reset
       _SPI2_Open
       _SpiTransfer
     _DRV_CANFDSPI_TefConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_TimeStampEnable
       _DRV_CANFDSPI_ReadByte
       _DRV_CANFDSPI_WriteByte
     _DRV_CANFDSPI_TimeStampPrescalerSet
       _DRV_CANFDSPI_WriteHalfWord
     _DRV_CANFDSPI_TimeStampSet
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_TransmitChannelConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_TransmitChannelConfigureObjectReset
     _DRV_CANFDSPI_TransmitQueueConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_TransmitQueueConfigureObjectReset
   _CanSetFilter
     _DRV_CANFDSPI_FilterDisable
       _DRV_CANFDSPI_ReadByte
       _DRV_CANFDSPI_WriteByte
     _DRV_CANFDSPI_FilterMaskConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_FilterObjectConfigure
       _DRV_CANFDSPI_WriteWord
     _DRV_CANFDSPI_FilterToFifoLink
       _DRV_CANFDSPI_WriteByte
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _XF_executeOnce
     _XF_popEvent
       _ENTERCRITICAL
       _LEAVECRITICAL
       ___awmod
     _lightControl_Process *
       _lightContol_BackLight
         _CanSend
           _DRV_CANFDSPI_TransmitChannelEventGet
             _DRV_CANFDSPI_ReadByte
           _DRV_CANFDSPI_TransmitChannelLoad
             _DRV_CANFDSPI_DlcToDataBytes
             _DRV_CANFDSPI_ReadWordArray
               _SpiTransfer
             _DRV_CANFDSPI_TransmitChannelUpdate
               _DRV_CANFDSPI_WriteByte
             _DRV_CANFDSPI_WriteByteArray
               _SpiTransfer
       _lightContol_FrontLight
         _CanSend
     _motorControl_Process *
       _motorControl
         _CanSend
   _XF_init
     _Event_init
   _XF_post
     _Event_init
     _Event_setDelay
     _Event_setId
     _Event_setPE
     _XF_pushEvent
       _ENTERCRITICAL
       _Event_getDelay
       _Event_setDelay
       _LEAVECRITICAL
       _XF_noMoreEvent
       _XF_scheduleTimer
         _ENTERCRITICAL
         _LEAVECRITICAL
         _XF_noMoreTimer
       ___awmod
   _updateCarState
     _CanReceive
       _DRV_CANFDSPI_ReceiveChannelEventGet
         _DRV_CANFDSPI_ReadByte
       _DRV_CANFDSPI_ReceiveMessageGet
         _DRV_CANFDSPI_ReadByteArray
           _SpiTransfer
         _DRV_CANFDSPI_ReadWordArray
         _DRV_CANFDSPI_ReceiveChannelUpdate
           _DRV_CANFDSPI_WriteByte
     _XF_post

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
       _XF_decrementAndQueueTimers *
         _XF_pushEvent
           _ENTERCRITICAL
           _Event_getDelay
           _Event_setDelay
           _LEAVECRITICAL
           _XF_noMoreEvent
           _XF_scheduleTimer
             _ENTERCRITICAL
             _LEAVECRITICAL
             _XF_noMoreTimer
           ___awmod
         _XF_unscheduleTimer
           _ENTERCRITICAL
           _Event_init
           _LEAVECRITICAL

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3711      0     282      7.6%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0     200     78.1%
BITBANK1           256      0       0      0.0%
BANK1              256      0     200     78.1%
BITBANK0           160      0       0      0.0%
BANK0              160      0      59     36.9%
BITBIGSFR_1h       155      0       0      0.0%
BITBIGSFR          128      0       0      0.0%
BITBANK14          128      0       0      0.0%
BANK14             128      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BIGRAM_1            96      0       0      0.0%
BITCOMRAM           63      0       0      0.0%
COMRAM              63     16      51     81.0%
BITBIGSFR_1l         2      0       0      0.0%
STACK                0      0     251      0.0%
DATA                 0      0    1043      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Mar 04 16:01:57 2025

                                  __end_of_updateCarState 20A6  
                                              _CanReceive 4460  
                                         _timer0ReloadVal 0017  
                                                     l150 3BD6  
                                                     l222 437A  
                                                     l206 1730  
                                                     l215 19B0  
                                                     l145 3B24  
                                                     l401 3C8E  
                                                     l161 4456  
                                                     l146 3B3C  
                                                     l218 1C0E  
                                                     l154 22AA  
                                                     l322 14A8  
                                                     l171 4580  
                                                     l251 293E  
                                                     l412 451E  
                                                     l260 3528  
                                                     l149 3BD0  
                                                     l317 1174  
                                                     l165 44BA  
                                                     l174 468E  
                                                     l254 3118  
                                                     l158 3FFE  
                                                     l327 41D0  
                                                     l184 3B12  
                                                     l168 489C  
                                                     l336 4262  
                                                     l264 0742  
                                                     l257 2FDE  
                                                     l193 27BC  
                                                     l346 2E9E  
                                                     l179 38B0  
                                                     l453 413A  
                                                     l293 3F54  
                                                     l357 0E2A  
                                                     l623 45E4  
                                                     l199 3232  
                                                     l482 40A2  
                                                     l643 4924  
                                                     l635 48BC  
                                                     l379 43EC  
                                                     l665 1C60  
                                                     l682 1E5A  
                                                     l674 1CAC  
                                                     l875 2488  
                                                     l976 4988  
                                                     l979 49A0  
                                                     u815 1A4C  
                                                     u825 1A70  
                                                     u835 1A92  
                                                     u845 1AF4  
                                                     u855 1B22  
                                                     u865 1B50  
                                                     u875 1B7E  
                                                     u885 1BAC  
                                                     u895 1BDA  
       __end_of_DRV_CANFDSPI_BitTimeConfigureNominal40MHz 1E64  
               _DRV_CANFDSPI_BitTimeConfigureNominal40MHz 1C18  
                  __end_of_DRV_CANFDSPI_ModuleEventEnable 4528  
                          _DRV_CANFDSPI_ModuleEventEnable 44C4  
                                                     prod 0FF3  
                                                     tosl 0FFD  
                                                     wreg 0FE8  
            __end_of_DRV_CANFDSPI_TransmitChannelEventGet 4144  
                    _DRV_CANFDSPI_TransmitChannelEventGet 40AC  
                                                    l1020 4870  
                                                    l1120 3D4A  
                                                    l1032 49B0  
                                                    l1200 49A8  
                                                    l1201 49A8  
                                                    l1116 4998  
                                                    l1206 49A2  
                                                    l1215 2BFE  
                                                    l1207 49A2  
                                                    l1231 360A  
                                                    l1223 2ABE  
                                                    l3000 19C2  
                                                    l1064 47A4  
                                                    l1216 2C16  
                                                    l3010 1A92  
                                                    l3002 19FE  
                                                    l1250 4970  
                                                    l1162 4762  
                                                    l1234 3612  
                                                    l1227 3A48  
                                                    l3020 1B7E  
                                                    l3012 1AC6  
                                                    l3004 1A28  
                                                    l1092 4906  
                                                    l1237 463C  
                                                    l1085 4842  
                                                    l1261 42F2  
                                                    l1246 343E  
                                                    l3022 1BAC  
                                                    l3014 1AF4  
                                                    l3006 1A4C  
                                                    l3110 302C  
                                                    l1254 4958  
                                                    l1174 47D4  
                                                    l1095 49B2  
                                                    l1159 46E0  
                                                    l3024 1BDA  
                                                    l3016 1B22  
                                                    l3008 1A70  
                                                    l3112 3050  
                                                    l4000 3148  
                                                    l1168 493C  
                                                    l1089 4812  
                                                    l1441 3DF8  
                                                    l1433 3EA6  
                                                    l1425 37D8  
                                                    l1177 48E6  
                                                    l1257 397C  
                                                    l3018 1B50  
                                                    l3114 307A  
                                                    l4010 31BC  
                                                    l4002 3148  
                                                    l3116 30AA  
                                                    l3108 2FF0  
                                                    l4100 2470  
                                                    l4020 14BA  
                                                    l4012 31DA  
                                                    l4004 315E  
                                                    l1509 209C  
                                                    l3118 30DE  
                                                    l4110 496E  
                                                    l4030 151A  
                                                    l4022 14E6  
                                                    l4014 3208  
                                                    l4006 3164  
                                                    l1455 36AA  
                                                    l3080 34D2  
                                                    l4112 4944  
                                                    l4040 15B6  
                                                    l4032 1534  
                                                    l4024 14E6  
                                                    l4016 322C  
                                                    l4008 317C  
                                                    l4200 064E  
                                                    l4120 002A  
                                                    l1456 36FC  
                                                    l5000 4462  
                                                    l3082 34FC  
                                                    l3074 344C  
                                                    l4114 4956  
                                                    l4034 1552  
                                                    l4026 14FC  
                                                    l4210 0704  
                                                    l4202 067C  
                                                    l4130 00A4  
                                                    l4122 005A  
                                                    l5010 44B6  
                                                    l5002 447E  
                                                    l1483 25BE  
                                                    l3076 3488  
                                                    l5020 478C  
                                                    l4108 495C  
                                                    l4300 2C40  
                                                    l4060 1674  
                                                    l4044 15C0  
                                                    l4036 1580  
                                                    l4028 1502  
                                                    l4204 0680  
                                                    l4140 0136  
                                                    l4132 00C0  
                                                    l4124 006C  
                                                    l4116 0008  
                                                    l1484 2634  
                                                    l5004 448E  
                                                    l5030 47E4  
                                                    l3078 34A6  
                                                    l3342 49AE  
                                                    l3350 4996  
                                                    l5022 478E  
                                                    l5014 476C  
                                                    l4310 2C86  
                                                    l4302 2C46  
                                                    l4230 40B4  
                                                    l4062 1692  
                                                    l4054 15F8  
                                                    l4046 15D4  
                                                    l4038 15A4  
                                                    l4222 073C  
                                                    l4214 070C  
                                                    l4206 06A2  
                                                    l4150 01C0  
                                                    l4118 0008  
                                                    l5110 2496  
                                                    l5006 44AE  
                                                    l5032 47F8  
                                                    l5200 21FE  
                                                    l3360 4862  
                                                    l3352 4844  
                                                    l3344 498A  
                                                    l5024 4790  
                                                    l5016 476E  
                                                    l4320 2D0A  
                                                    l4312 2CA4  
                                                    l4304 2C56  
                                                    l5040 39AE  
                                                    l4232 40C4  
                                                    l4080 22E6  
                                                    l4072 22BC  
                                                    l4064 16E0  
                                                    l4056 1638  
                                                    l4048 15E0  
                                                    l4216 0722  
                                                    l4208 06F2  
                                                    l4152 01E6  
                                                    l4160 02EA  
                                                    l4144 013E  
                                                    l4136 00C8  
                                                    l4128 0074  
                                                    l5112 24B4  
                                                    l4400 2A24  
                                                    l5210 225C  
                                                    l5202 221A  
                                                    l3362 4864  
                                                    l3354 485A  
                                                    l3346 4992  
                                                    l5026 47A0  
                                                    l5018 4776  
                                                    l4322 2D14  
                                                    l4314 2CA8  
                                                    l4306 2C62  
                                                    l5050 3A10  
                                                    l5042 39C2  
                                                    l5034 398E  
                                                    l4242 4120  
                                                    l4234 40DE  
                                                    l4226 40B4  
                                                    l4090 23AA  
                                                    l4082 2312  
                                                    l4074 22CC  
                                                    l4058 1656  
                                                    l4066 16FE  
                                                    l4218 0734  
                                                    l4170 03FC  
                                                    l4162 039A  
                                                    l4154 01FC  
                                                    l4146 0172  
                                                    l4138 0102  
                                                    l5130 254C  
                                                    l5122 2504  
                                                    l5114 24BC  
                                                    l4250 46A6  
                                                    l4410 2A7C  
                                                    l4402 2A28  
                                                    l1499 209C  
                                                    l4420 45EA  
                                                    l5028 47DE  
                                                    l5220 22A2  
                                                    l5212 2268  
                                                    l5204 222A  
                                                    l3364 486A  
                                                    l3356 485E  
                                                    l3348 4994  
                                                    l1756 2D5C  
                                                    l4316 2CB8  
                                                    l4308 2C7C  
                                                    l4324 2D32  
                                                    l5052 3A3A  
                                                    l5044 39CC  
                                                    l5036 3992  
                                                    l4244 4134  
                                                    l4236 4106  
                                                    l4228 40B4  
                                                    l4092 23D0  
                                                    l4084 2338  
                                                    l4076 22CE  
                                                    l4180 0558  
                                                    l4164 03B8  
                                                    l4172 0448  
                                                    l4156 0236  
                                                    l4148 01A2  
                                                    l4332 3F60  
                                                    l5124 2522  
                                                    l5116 24DA  
                                                    l5108 2492  
                                                    l4252 46C2  
                                                    l4500 0A70  
                                                    l4260 3534  
                                                    l4412 2AA6  
                                                    l4404 2A32  
                                                    l5060 38C2  
                                                    l5300 1FAE  
                                                    l4422 45F4  
                                                    l5214 227C  
                                                    l5206 223A  
                                                    l5222 43F6  
                                                    l3366 499A  
                                                    l3358 4860  
                                                    l5230 4974  
                                                    l4326 2D44  
                                                    l4318 2CE6  
                                                    l5038 39A4  
                                                    l4238 4118  
                                                    l4094 23F6  
                                                    l4086 235E  
                                                    l4078 22D0  
                                                    l4190 05EC  
                                                    l4182 0560  
                                                    l4174 0470  
                                                    l4166 03C4  
                                                    l4158 0278  
                                                    l4334 3F88  
                                                    l5142 25C6  
                                                    l5150 25FA  
                                                    l5126 252A  
                                                    l5118 24E2  
                                                    l4430 4010  
                                                    l4350 267C  
                                                    l4342 2642  
                                                    l4510 0C82  
                                                    l4502 0BF0  
                                                    l4254 47A6  
                                                    l4270 35B4  
                                                    l4414 2AB0  
                                                    l4406 2A4C  
                                                    l5070 3948  
                                                    l5062 38CA  
                                                    l5302 1FB4  
                                                    l4424 460A  
                                                    l5240 4824  
                                                    l4600 3AE8  
                                                    l5216 2280  
                                                    l5208 2240  
                                                    l5160 20AE  
                                                    l5224 4400  
                                                    l3368 499C  
                                                    l5232 4978  
                                                    l4328 2D50  
                                                    l5048 39EC  
                                                    l4088 2384  
                                                    l4192 05EC  
                                                    l4184 05AA  
                                                    l4176 04BC  
                                                    l4168 03E0  
                                                    l4336 3FA4  
                                                    l5080 3646  
                                                    l5144 25DA  
                                                    l5136 256E  
                                                    l4248 4698  
                                                    l4440 4036  
                                                    l4432 4010  
                                                    l4360 271E  
                                                    l4352 2694  
                                                    l4344 2660  
                                                    l4520 0D14  
                                                    l4512 0C9E  
                                                    l4504 0C1A  
                                                    l4256 48C6  
                                                    l4272 35BE  
                                                    l4408 2A50  
                                                    l4416 2ABA  
                                                    l5064 38E2  
                                                    l5304 1FCA  
                                                    l5312 2020  
                                                    l4426 4628  
                                                    l4610 334A  
                                                    l5242 483A  
                                                    l4602 3B0C  
                                                    l5218 2292  
                                                    l5170 20E8  
                                                    l5162 20B2  
                                                    l5226 4414  
                                                    l5234 4984  
                                                    l4098 241C  
                                                    l4194 0604  
                                                    l4186 05AE  
                                                    l4178 050A  
                                                    l4338 3FB4  
                                                    l5082 3664  
                                                    l5074 361C  
                                                    l5146 25EE  
                                                    l5138 25A8  
                                                    l4442 4050  
                                                    l4434 4010  
                                                    l4362 272A  
                                                    l4354 26AE  
                                                    l4346 2660  
                                                    l4530 0DB0  
                                                    l4522 0D5E  
                                                    l4514 0CBA  
                                                    l4506 0C50  
                                                    l4274 35D8  
                                                    l4266 3542  
                                                    l5066 3908  
                                                    l5306 1FEA  
                                                    l4428 4632  
                                                    l4620 338A  
                                                    l5244 483E  
                                                    l5236 4814  
                                                    l4700 1CAC  
                                                    l5180 2142  
                                                    l5172 20F6  
                                                    l5164 20B6  
                                                    l5228 4444  
                                                    l4196 0634  
                                                    l4188 05E4  
                                                    l5092 36B2  
                                                    l5076 3620  
                                                    l5252 2AD4  
                                                    l4444 4078  
                                                    l4364 276A  
                                                    l4356 26CC  
                                                    l4348 2676  
                                                    l4380 43B4  
                                                    l4372 438A  
                                                    l4532 0DFA  
                                                    l4524 0D62  
                                                    l4516 0CD6  
                                                    l4508 0C6C  
                                                    l4452 0754  
                                                    l4276 35DC  
                                                    l4268 3564  
                                                    l4284 35F0  
                                                    l5068 3926  
                                                    l5308 2000  
                                                    l5340 3274  
                                                    l4630 3428  
                                                    l4622 33AE  
                                                    l5238 481E  
                                                    l4710 1D76  
                                                    l4702 1CDE  
                                                    l4550 3D48  
                                                    l4542 3C98  
                                                    l5190 2198  
                                                    l5182 215A  
                                                    l5174 2104  
                                                    l5166 20C0  
                                                    l4294 2C20  
                                                    l4198 0646  
                                                    l5094 36C2  
                                                    l5078 363E  
                                                    l5086 366A  
                                                    l5270 2BD8  
                                                    l5254 2B0A  
                                                    l5246 2ACC  
                                                    l4438 4026  
                                                    l4366 2788  
                                                    l4358 26FA  
                                                    l4382 43C2  
                                                    l4374 438A  
                                                    l4534 0DFE  
                                                    l4518 0D0C  
                                                    l4526 0D88  
                                                    l4470 0840  
                                                    l4462 07BC  
                                                    l4454 075C  
                                                    l4606 4730  
                                                    l4286 35F4  
                                                    l4278 35E6  
                                                    l4390 2972  
                                                    l5350 32D2  
                                                    l5342 32A4  
                                                    l4624 33F8  
                                                    l4616 334E  
                                                    l3920 3B1E  
                                                    l4560 3814  
                                                    l4704 1CF8  
                                                    l4544 3CA6  
                                                    l4800 280A  
                                                    l5192 21B0  
                                                    l5184 2172  
                                                    l5176 211C  
                                                    l5168 20D8  
                                                    l4296 2C24  
                                                    l4640 3752  
                                                    l4632 370A  
                                                    l5088 3694  
                                                    l5272 4274  
                                                    l5264 2B56  
                                                    l5256 2B28  
                                                    l4448 408E  
                                                    l4368 27B6  
                                                    l4384 43E6  
                                                    l4376 438A  
                                                    l4528 0DA8  
                                                    l4536 0E20  
                                                    l4480 08AC  
                                                    l4472 0858  
                                                    l4464 07EC  
                                                    l4456 0776  
                                                    l4608 492A  
                                                    l4392 298C  
                                                    l5360 331A  
                                                    l5352 3302  
                                                    l5344 32B4  
                                                    l5336 3244  
                                                    l4626 340A  
                                                    l4618 3370  
                                                    l3930 3B78  
                                                    l3922 3B26  
                                                    l4570 386C  
                                                    l4562 381A  
                                                    l4554 37EA  
                                                    l4706 1D2A  
                                                    l4730 177E  
                                                    l4546 3CEA  
                                                    l4810 28E0  
                                                    l4802 281A  
                                                    l5194 21C8  
                                                    l5186 2178  
                                                    l5178 2132  
                                                    l4298 2C34  
                                                    l4650 3E0A  
                                                    l4642 377A  
                                                    l4634 371E  
                                                    l5098 36D2  
                                                    l5274 4298  
                                                    l5266 2B84  
                                                    l5258 2B4E  
                                                    l4378 439A  
                                                    l4490 0936  
                                                    l4482 08C4  
                                                    l4474 086E  
                                                    l4458 07A6  
                                                    l4394 29AC  
                                                    l5290 1F3C  
                                                    l5282 1EAC  
                                                    l5362 3336  
                                                    l5354 3306  
                                                    l5346 32C2  
                                                    l5338 3266  
                                                    l4628 3424  
                                                    l3932 3B96  
                                                    l3924 3B2C  
                                                    l4572 3870  
                                                    l4556 37FE  
                                                    l4708 1D44  
                                                    l4716 1D90  
                                                    l4740 1848  
                                                    l4732 17A8  
                                                    l4580 3A5A  
                                                    l3940 4644  
                                                    l4820 2D6E  
                                                    l4548 3D12  
                                                    l4812 2904  
                                                    l4804 284E  
                                                    l5196 21DC  
                                                    l5188 2188  
                                                    l4660 3E6E  
                                                    l4652 3E1E  
                                                    l4644 378E  
                                                    l4636 3732  
                                                    l5276 42B8  
                                                    l5268 2BBA  
                                                    l4484 08E4  
                                                    l4476 0880  
                                                    l4468 080C  
                                                    l4396 29EC  
                                                    l4388 294E  
                                                    l5292 1F42  
                                                    l5284 1EB2  
                                                    l5364 333A  
                                                    l5356 3316  
                                                    l5348 32C6  
                                                    l3926 3B4A  
                                                    l3934 3BB6  
                                                    l4574 3886  
                                                    l4558 37FE  
                                                    l4718 1E3C  
                                                    l4750 192E  
                                                    l4742 1876  
                                                    l4734 17CC  
                                                    l4726 1742  
                                                    l4582 3A6E  
                                                    l3950 4666  
                                                    l3942 4644  
                                                    l4830 2DD0  
                                                    l4822 2D6E  
                                                    l4814 291E  
                                                    l4806 2888  
                                                    l5198 21EC  
                                                    l4910 4228  
                                                    l2878 48EC  
                                                    l4670 3D84  
                                                    l4662 3E7A  
                                                    l4654 3E32  
                                                    l4646 379A  
                                                    l4638 3746  
                                                    l4494 094C  
                                                    l4486 08FA  
                                                    l4478 089C  
                                                    l4398 29F6  
                                                    l5294 1F58  
                                                    l5286 1EC4  
                                                    l5278 1E6C  
                                                    l5358 3318  
                                                    l3936 3BD2  
                                                    l3928 3B5A  
                                                    l4576 38AA  
                                                    l4568 381E  
                                                    l4752 195C  
                                                    l4744 18A4  
                                                    l4736 17F0  
                                                    l4728 1742  
                                                    l4584 3A6E  
                                                    l3952 4688  
                                                    l3944 4644  
                                                    l4832 2E28  
                                                    l4680 4872  
                                                    l4760 3BE8  
                                                    l4808 28B8  
                                                    l4904 41E2  
                                                    l3960 3ED2  
                                                    l4672 3DAC  
                                                    l4664 3D56  
                                                    l4656 3E38  
                                                    l4648 37AC  
                                                    l4496 0974  
                                                    l4488 0904  
                                                    l5296 1F78  
                                                    l5288 1F00  
                                                    l4754 1992  
                                                    l4746 18D2  
                                                    l4738 1812  
                                                    l4594 3A8E  
                                                    l4586 3A84  
                                                    l3946 465A  
                                                    l4834 2E54  
                                                    l4826 2D84  
                                                    l4818 2D6E  
                                                    l4682 4872  
                                                    l4762 3BE8  
                                                    l4842 490E  
                                                    l4850 489E  
                                                    l4914 423E  
                                                    l4906 41E2  
                                                    l4930 0E8A  
                                                    l4922 0E3C  
                                                    l3970 3F34  
                                                    l3962 3EE2  
                                                    l4674 3DC0  
                                                    l4666 3D6A  
                                                    l4658 3E5A  
                                                    l4498 099A  
                                                    l5570 206A  
                                                    l5298 1F8E  
                                                    l4692 1C20  
                                                    l4748 1900  
                                                    l4596 3ACE  
                                                    l4588 3A8A  
                                                    l3980 452A  
                                                    l3948 4660  
                                                    l4836 2E64  
                                                    l4828 2DC0  
                                                    l4684 4876  
                                                    l4764 3C24  
                                                    l4844 490E  
                                                    l4780 2EFC  
                                                    l4772 2EB0  
                                                    l4916 424E  
                                                    l4908 4200  
                                                    l4940 1072  
                                                    l4932 0EC4  
                                                    l4924 0E3C  
                                                    l3972 3F46  
                                                    l3964 3EF0  
                                                    l3956 3EB8  
                                                    l4676 3DCC  
                                                    l4668 3D7E  
                                                    l5580 36E6  
                                                    l5572 2080  
                                                    l4694 1C20  
                                                    l4598 3AD2  
                                                    l4870 44C8  
                                                    l3990 4548  
                                                    l3982 452A  
                                                    l4838 2E7E  
                                                    l4686 4878  
                                                    l4678 4872  
                                                    l4766 3C4C  
                                                    l4862 45CE  
                                                    l4854 458E  
                                                    l4790 2FC0  
                                                    l4782 2F2E  
                                                    l4774 2EB0  
                                                    l4950 1154  
                                                    l4942 107E  
                                                    l4934 0F06  
                                                    l4926 0E4C  
                                                    l5582 2432  
                                                    l3966 3F02  
                                                    l3958 3EB8  
                                                    l5574 2582  
                                                    l5566 2054  
                                                    l5584 1DA6  
                                                    l4696 1C60  
                                                    l4880 4508  
                                                    l4872 44C8  
                                                    l3992 456A  
                                                    l3984 452A  
                                                    l4688 4880  
                                                    l4768 3C70  
                                                    l4864 45D2  
                                                    l4856 4592  
                                                    l4848 489E  
                                                    l4784 2F64  
                                                    l4776 2EB0  
                                                    l4960 11A8  
                                                    l4944 109A  
                                                    l4928 0E74  
                                                    l4936 0FA4  
                                                    l3976 3F4E  
                                                    l3968 3F10  
                                                    l5576 260E  
                                                    l5568 208E  
                                                    l4698 1C92  
                                                    l4874 44C8  
                                                    l3994 457A  
                                                    l3986 4540  
                                                    l4890 432A  
                                                    l4858 45B8  
                                                    l4794 27CE  
                                                    l4786 2F9A  
                                                    l4778 2EEC  
                                                    l4970 1388  
                                                    l4962 11BE  
                                                    l4954 1186  
                                                    l4946 10B6  
                                                    l4938 1054  
                                                    l5578 367E  
                                                    l4876 44C8  
                                                    l3988 4546  
                                                    l4796 27CE  
                                                    l4788 2FC0  
                                                    l4972 13A6  
                                                    l4980 1462  
                                                    l4964 11F8  
                                                    l4956 1186  
                                                    l4948 112E  
                                                    l4878 44D0  
                                                    l4894 4340  
                                                    l4886 4300  
                                                    l4798 27CE  
                                                    l4982 1488  
                                                    l4974 13B2  
                                                    l4966 123A  
                                                    l4958 1196  
                                                    l4990 4170  
                                                    l3998 312A  
                                                    l4896 4350  
                                                    l4888 4304  
                                                    l4976 13CE  
                                                    l4968 12D8  
                                                    l4992 4180  
                                                    l4898 4368  
                                                    l4978 13EA  
                                                    l4994 419E  
                                                    l4986 414A  
                                                    l4996 41BC  
                                                    l4988 415C  
                                     __end_of_XF_popEvent 3A52  
                                                    STR_1 FFED  
                                                    u1005 3050  
                                                    u2000 26FA  
                                                    u2001 26F6  
                                                    u2010 27B6  
                                                    u2011 27B2  
                                                    u2100 0808  
                                                    u2020 298C  
                                                    u2101 0804  
                                                    u2021 2988  
                                                    u2110 089C  
                                                    u2111 0898  
                                                    u2031 29C0  
                                                    u2200 0E20  
                                                    u2120 08C4  
                                                    u2040 2A24  
                                                    u3000 1F8E  
                                                    u2201 0E1C  
                                                    u2121 08C0  
                                                    u2041 2A20  
                                                    u3001 1F8A  
                                                    u2210 3CA6  
                                                    u2130 08FA  
                                                    u2050 2A4C  
                                                    u3010 1FCA  
                                                    u2211 3CA2  
                                                    u2131 08F6  
                                                    u2051 2A48  
                                                    u3011 1FC6  
                                                    u2220 3862  
                                                    u2140 0948  
                                                    u3020 2000  
                                                    u2141 0944  
                                                    u2061 2A9E  
                                                    u3021 1FFC  
                                                    _LATA 0F89  
                                                    u2230 3886  
                                                    u2070 4022  
                                                    u2150 099A  
                                                    _LATB 0F8A  
                                                    u2231 3882  
                                                    u2071 401E  
                                                    u2151 0996  
                                                    _LATC 0F8B  
                                                    u1600 3F02  
                                                    u2320 3732  
                                                    u2080 408A  
                                                    u2160 0B66  
                                                    _LATD 0F8C  
                                                    u2225 3858  
                                                    u1601 3EFE  
                                                    u2321 372E  
                                                    u2081 4086  
                                                    _LATE 0F8D  
                                                    u2250 3AE8  
                                                    u1610 3F46  
                                                    u2330 3746  
                                                    u2090 07B8  
                                                    _LATF 0F8E  
                                                    u2251 3AE4  
                                                    u1611 3F42  
                                                    u2331 3742  
                                                    u2091 07B4  
                                                    _LATG 0F8F  
                                                    u2244 3AC4  
                                                    u1620 3208  
                                                    u1700 006C  
                                                    u2180 0C6C  
                                                    _LATH 0F90  
                                                    u2405 1812  
                                                    u2245 3ABE  
                                                    u1621 3204  
                                                    u1701 0068  
                                                    u2181 0C68  
                                                    u2165 0B5C  
                                                    u2510 45CA  
                                                    u1630 1580  
                                                    u1710 00C0  
                                                    u2350 3E32  
                                                    u2190 0D84  
                                                    _LATJ 0F91  
                                                    u2415 1876  
                                                    u2511 45C6  
                                                    u1631 157C  
                                                    u1711 00BC  
                                                    u2351 3E2E  
                                                    u2191 0D80  
                                                    u2175 0BAC  
                                                    u2520 433C  
                                                    u1640 15B6  
                                                    u1800 0500  
                                                    u1720 0136  
                                                    u2425 18A4  
                                                    u2521 4338  
                                                    u2505 2E18  
                                                    u1641 15B2  
                                                    u1721 0132  
                                                    u2530 423A  
                                                    u1650 1692  
                                                    u1810 054E  
                                                    u1730 01E6  
                                                    u2370 3D7E  
                                                    u2435 18D2  
                                                    u2531 4236  
                                                    u1651 168E  
                                                    u1731 01E2  
                                                    u2371 3D7A  
                                                    u1580 3B4A  
                                                    u2540 0E74  
                                                    u1660 172C  
                                                    u1820 05E4  
                                                    u1740 026E  
                                                    u1900 35D8  
                                                    u1581 3B46  
                                                    u2445 1900  
                                                    u2605 1014  
                                                    u2541 0E70  
                                                    u1661 1728  
                                                    u1821 05E0  
                                                    u1805 04F6  
                                                    u1901 35D4  
                                                    u1590 3BD0  
                                                    u2630 11A8  
                                                    u2550 0EFC  
                                                    u1670 22E6  
                                                    u1830 0604  
                                                    u1910 360A  
                                                    u1591 3BCC  
                                                    u2455 192E  
                                                    u2631 11A4  
                                                    u2615 10F2  
                                                    u1671 22E2  
                                                    u1831 0600  
                                                    u1815 0544  
                                                    u1911 3606  
                                                    u2640 1230  
                                                    u2720 415C  
                                                    u1680 496E  
                                                    u1920 2C34  
                                                    u1840 06A2  
                                                    u1760 02DA  
                                                    u2800 363E  
                                                    u2465 195C  
                                                    u2385 17CC  
                                                    u2705 1426  
                                                    u2625 111C  
                                                    u2721 4158  
                                                    u1681 496A  
                                                    u1921 2C30  
                                                    u1841 069E  
                                                    u1745 0264  
                                                    u2801 363A  
                                                    u2490 2D80  
                                                    u1690 4956  
                                                    u1930 2C56  
                                                    u1850 0704  
                                                    u1770 0316  
                                                    u2810 3664  
                                                    u2730 448E  
                                                    u2395 17F0  
                                                    u2491 2D7C  
                                                    u2475 3C70  
                                                    u2715 1450  
                                                    u2555 0EF2  
                                                    u1691 4952  
                                                    u1931 2C52  
                                                    u1851 0700  
                                                    u1755 02A4  
                                                    u2811 3660  
                                                    u2731 448A  
                                                    u2900 2292  
                                                    u2580 0F92  
                                                    u1940 2C7C  
                                                    u1860 0734  
                                                    u2820 36A6  
                                                    u2485 2904  
                                                    u2901 228E  
                                                    u2645 1226  
                                                    u2565 0F32  
                                                    u1941 2C78  
                                                    u1861 0730  
                                                    u1765 02D0  
                                                    u2821 36A2  
                                                    u2670 12C6  
                                                    u2590 0FD0  
                                                    u1950 2CB8  
                                                    u1870 4118  
                                                    u2830 24B4  
                                                    u2655 1266  
                                                    u2575 0F5C  
                                                    u1951 2CB4  
                                                    u1871 4114  
                                                    u1775 030C  
                                                    u2831 24B0  
                                                    u2680 1304  
                                                    u1960 2CE6  
                                                    u2760 39C2  
                                                    u2840 24DA  
                                                    u2920 2B4E  
                                                    u1880 3564  
                                                    u2665 1290  
                                                    u2585 0F88  
                                                    u1961 2CE2  
                                                    u2761 39BE  
                                                    u1785 035A  
                                                    u2841 24D6  
                                                    u2921 2B4A  
                                                    u1881 3560  
                                                    u1970 2D32  
                                                    u2850 2500  
                                                    u2930 2BFE  
                                                    u2675 12BC  
                                                    u2595 0FC6  
                                                    u1971 2D2E  
                                                    u1795 0438  
                                                    u2851 24FC  
                                                    u2931 2BFA  
                                                    u1891 35AC  
                                                    u1980 2D44  
                                                    u2860 2522  
                                                    u2685 12FA  
                                                    u1981 2D40  
                                                    u2861 251E  
                                                    u1990 3FB4  
                                                    u2870 2548  
                                                    u2950 42B8  
                                                    u2695 1348  
                                                    u1991 3FB0  
                                                    u2871 2544  
                                                    u2951 42B4  
                                                    u2791 396E  
                                                    u2880 256A  
                                                    u2881 2566  
                                                    u2890 25BA  
                                                    u2970 1EA8  
                                                    u2891 25B6  
                                                    u2971 1EA4  
                                                    u2980 1EC4  
                                                    u2981 1EC0  
                                                    u2990 1F58  
                                                    u2991 1F54  
                                                    u2968 42DE  
                                                    u2969 42F2  
                       __end_of_DRV_CANFDSPI_TimeStampSet 48C6  
                                    _motorControl_Process 361C  
                                                    _main 323C  
                                        _XF_scheduleTimer 3532  
                                                    fsr0h 0FEA  
                                                    fsr1h 0FE2  
                                                    indf0 0FEF  
                                                    fsr2h 0FDA  
                                                    fsr0l 0FE9  
                                                    indf1 0FE7  
                                                    indf2 0FDF  
                                                    fsr1l 0FE1  
                                                    fsr2l 0FD9  
                                   _canControlResetValues FF8D  
                                                    btemp 0021  
                                            _CanSetFilter 43F6  
                                         __end_of_CanInit 22B4  
                                         __end_of_CanSend 4008  
                                   _lightContol_BackLight 3D4E  
                                                    prodh 0FF4  
                                                    prodl 0FF3  
                                                    start 00AE  
                                         __end_of_XF_init 2C1C  
                                         __end_of_XF_post 3986  
                                            ___param_bank 0000  
             __end_of_DRV_CANFDSPI_TransmitQueueConfigure 2FE8  
                     _DRV_CANFDSPI_TransmitQueueConfigure 2EA8  
                                 __end_of_TMR0_Initialize 47A6  
                     __end_of_DRV_CANFDSPI_WriteByteArray 323C  
                             _DRV_CANFDSPI_WriteByteArray 3122  
                           __end_of_OSCILLATOR_Initialize 49A2  
                                         __end_of___awmod 2D66  
__end_of_DRV_CANFDSPI_TransmitChannelConfigureObjectReset 3122  
        _DRV_CANFDSPI_TransmitChannelConfigureObjectReset 2FE8  
                                                   _T0CON 0FD5  
                                                   _TMR0H 0FD7  
                                                   _TMR0L 0FD6  
                                                   _TRISA 0F92  
                                                   _TRISB 0F93  
                                                   _TRISC 0F94  
                                                   _TRISD 0F95  
                                                   _TRISE 0F96  
                                                   _TRISF 0F97  
                                                   _TRISG 0F98  
                                                   _TRISH 0F99  
                                                   _TRISJ 0F9A  
                                        __end_of_TMR0_ISR 4844  
                                                   _dummy 0011  
                                                   _theXF 02C8  
                          __end_of_DRV_CANFDSPI_Configure 19BA  
                                    __end_of_XF_pushEvent 2AC8  
                               motorControl_Process@state 001C  
                                                   pclath 0FFA  
                                                   pclatu 0FFB  
                                                   tablat 0FF5  
                                                   ltemp0 0021  
                                                   ltemp1 0025  
                                                   ltemp2 0029  
                            lightControl_Process@oldState 0019  
                                                   plusw0 0FEB  
                                                   plusw1 0FE3  
                                                   plusw2 0FDB  
                                                   ttemp0 0021  
                                                   ttemp1 0024  
                                                   ttemp2 0027  
                                                   ttemp3 002A  
                                                   ttemp5 0022  
                                                   ttemp6 0025  
                                                   ttemp7 0029  
                                                   status 0FD8  
                                                   wtemp0 0021  
                                                   wtemp1 0023  
                                                   wtemp2 0025  
                                                   wtemp3 0027  
                                                   wtemp4 0029  
                                                   wtemp5 002B  
                                                   wtemp8 0022  
                   __end_of_DRV_CANFDSPI_FilterToFifoLink 41DA  
                           _DRV_CANFDSPI_FilterToFifoLink 4144  
                               _DRV_CANFDSPI_TefConfigure 3BE0  
                                         __initialization 46E6  
                                              _Event_init 4698  
                                            __end_of_main 3346  
                             ?_INTERRUPT_InterruptManager 0041  
                      __end_of_DRV_CANFDSPI_ReadByteArray 27C6  
                              _DRV_CANFDSPI_ReadByteArray 263A  
                                     __end_of_Event_setPE 476C  
                                     __end_of_Event_setId 4944  
                                           __activetblptr 0003  
                                          _Event_getDelay 48C6  
                                             _XF_popEvent 3986  
                                        _spiReceiveBuffer 0200  
                  __end_of_DRV_CANFDSPI_ReceiveMessageGet 0E34  
                          _DRV_CANFDSPI_ReceiveMessageGet 074C  
                                                  i2l1039 006C  
                                                  u230_40 343E  
                                                  u230_41 343A  
                                                  i2l5330 004C  
                                                  i2l5332 005A  
                                                  i2l5334 0068  
                                                  u226_40 3370  
                                                  u226_41 336C  
                                                  u227_40 33AE  
                                                  u227_41 33AA  
                                                  u228_41 33DA  
                                                  u229_40 33F8  
                                                  u229_41 33F4  
                                                  u274_40 47F8  
                                                  u274_41 47F4  
                                                  u291_40 483A  
                                                  u291_41 4836  
                                                  u275_48 47FE  
                                                  u275_49 4812  
                                                  _OSCCON 0FD3  
                                          _Event_setDelay 47A6  
                                          _XF_noMoreEvent 49A8  
                                          _XF_noMoreTimer 49A2  
                          __end_of_DRV_CANFDSPI_WriteByte 4698  
                          __end_of_DRV_CANFDSPI_WriteWord 38BA  
                                       __end_of_SPI2_Open 3D4E  
                                          _XF_executeOnce 426C  
                      __end_of_DRV_CANFDSPI_ReadWordArray 173A  
                              _DRV_CANFDSPI_ReadWordArray 14B2  
                                                  clear_0 46EE  
                                                  clear_1 4700  
                                                  clear_2 470C  
                                                  clear_3 4718  
                                                  clear_4 4724  
                                                  isa$std 0001  
                                  __end_of_Event_getDelay 48EC  
                                                  lltemp0 0021  
                                                  lltemp1 0029  
                                                  lltemp2 0031  
                                                  lltemp3 0039  
                                            __mediumconst FF8C  
                      __end_of_DRV_CANFDSPI_WriteHalfWord 3B1C  
                              _DRV_CANFDSPI_WriteHalfWord 3A52  
                                                  tblptrh 0FF7  
                                                  tblptrl 0FF6  
                                                  tblptru 0FF8  
                                   __end_of_TMR0_CallBack 4814  
                                  __end_of_Event_setDelay 47DE  
                                  __end_of_XF_noMoreEvent 49AE  
                                  __end_of_XF_noMoreTimer 49A8  
                                       _SYSTEM_Initialize 4974  
                         lightContol_FrontLight@lastLight 001E  
                                              __accesstop 0060  
                                 __end_of__initialization 472A  
                                           ___rparam_used 0001  
                                  __end_of_XF_executeOnce 42FC  
                                  _lightContol_FrontLight 3E02  
                              __end_of_spi2_configuration FFED  
                                          __pcstackCOMRAM 0041  
                                              ___inthi_sp 0931  
                                             _Event_setPE 4730  
                                             _Event_setId 492A  
                                __end_of_XF_scheduleTimer 361C  
                                   TMR0_ISR@CountCallBack 0015  
                                     __end_of_SpiTransfer 3BE0  
                                   __end_of_LEAVECRITICAL 495C  
                               __end_of_SYSTEM_Initialize 498A  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pnvCOMRAM 0051  
                        __end_of_TMR0_SetInterruptHandler 490E  
                               _DRV_CANFDSPI_TimeStampSet 489E  
                                            _XF_pushEvent 2948  
              __end_of_DRV_CANFDSPI_FilterObjectConfigure 117E  
                      _DRV_CANFDSPI_FilterObjectConfigure 0E34  
                                                 _OSCTUNE 0F9B  
                                   __end_of_ENTERCRITICAL 4974  
                                                 _SSP2ADD 0F65  
                                                 _SSP2BUF 0F66  
                                                 _CanInit 20A6  
                                                 _CanSend 3F5E  
                                                 _XF_init 2AC8  
                                                 _XF_post 38BA  
                                                 __Hparam 0000  
                                                 __Lparam 0000  
                     __end_of_DRV_CANFDSPI_DlcToDataBytes 2492  
                             _DRV_CANFDSPI_DlcToDataBytes 22B4  
            __end_of_DRV_CANFDSPI_ReceiveChannelConfigure 2EA8  
                    _DRV_CANFDSPI_ReceiveChannelConfigure 2D66  
                                                 ___awmod 2C1C  
                                                 uf294999 428C  
             __end_of_DRV_CANFDSPI_ReceiveChannelEventGet 40AC  
                     _DRV_CANFDSPI_ReceiveChannelEventGet 4008  
                                                 __pcinit 46E6  
                                                 __ramtop 1000  
                                                 __ptext0 323C  
                                                 __ptext1 1E64  
                                                 __ptext2 38BA  
                                                 __ptext3 2948  
                                                 __ptext4 3532  
                                                 __ptext5 49A2  
                                                 __ptext6 49A8  
                                                 __ptext7 47A6  
                                                 __ptext8 48C6  
                                                 __ptext9 4730  
                                             _SpiTransfer 3B1C  
                                               _T0CONbits 0FD5  
                                                 us231999 3714  
                                                 us234999 3E14  
                                                 us236999 3D60  
                                   _OSCILLATOR_Initialize 499A  
                                                 us277999 39DE  
                                                 us278999 3A06  
                             lightContol_FrontLight@F6664 008B  
                                    end_of_initialization 472A  
                              __end_of_DRV_CANFDSPI_Reset 489E  
                                      __end_of_CanReceive 44C4  
                                                 postdec0 0FED  
                                                 postdec1 0FE5  
                                                 postdec2 0FDD  
                                                 postinc0 0FEE  
                                                 postinc1 0FE6  
                                                 postinc2 0FDE  
  __end_of_DRV_CANFDSPI_TransmitQueueConfigureObjectReset 3532  
          _DRV_CANFDSPI_TransmitQueueConfigureObjectReset 3444  
                                               _SPI2_Open 3C98  
                                _TMR0_SetInterruptHandler 48EC  
                                               _TRISDbits 0F95  
                                               _TRISGbits 0F98  
                            __end_of_INTERRUPT_Initialize 49B2  
                            __end_of_lightControl_Process 263A  
                                         _SPI2_Initialize 498A  
                                      _spi2_configuration FFE9  
                                     start_initialization 46E6  
                           __end_of_DRV_CANFDSPI_ReadByte 458A  
                              __end_of_canFifoResetValues FFE9  
                                      __end_of_Event_init 46E6  
                          __end_of_lightContol_FrontLight 3EB0  
                              __end_of_XF_unscheduleTimer 4642  
                                             __pbssBIGRAM 02C8  
                                             __pbssCOMRAM 0001  
           __end_of_DRV_CANFDSPI_TransmitChannelConfigure 2948  
                   _DRV_CANFDSPI_TransmitChannelConfigure 27C6  
                                       _spiTransmitBuffer 0100  
                                    __end_of_motorControl 37E2  
                               lightControl_Process@state 001A  
                                   _TMR0_InterruptHandler 0051  
                                  _PIN_MANAGER_Initialize 4844  
                                               __pintcode 0008  
                                           __pmediumconst FF8C  
                                 __end_of_SPI2_Initialize 499A  
                            ??_INTERRUPT_InterruptManager 0041  
                                 motorControl@lastPercent 0020  
                                 motorControl@lastStarter 001F  
                                           _TMR0_CallBack 47DE  
                                    _INTERRUPT_Initialize 49AE  
                           __end_of_canControlResetValues FFDD  
                                    _lightControl_Process 2492  
                           __end_of_lightContol_BackLight 3E02  
                                                _LATGbits 0F8F  
                __end_of_DRV_CANFDSPI_OperationModeSelect 4382  
                        _DRV_CANFDSPI_OperationModeSelect 42FC  
                                                i2u303_40 005A  
                                                i2u303_41 0056  
                                                i2u304_40 0068  
                                                i2u304_41 0064  
                                                _RCONbits 0FD0  
                                      _DRV_CANFDSPI_Reset 4872  
                                                _SSP2CON1 0F63  
                                                _SSP2CON2 0F62  
                                                _TMR0_ISR 4814  
                                                _SSP2STAT 0F64  
                                              _ADCON1bits 0FC1  
                          lightContol_BackLight@lastLight 001D  
                                           _LEAVECRITICAL 4944  
              __end_of_DRV_CANFDSPI_TimeStampPrescalerSet 492A  
                      _DRV_CANFDSPI_TimeStampPrescalerSet 490E  
                                  _DRV_CANFDSPI_Configure 173A  
                                                __Hrparam 0000  
                                                __Lrparam 0000  
                                       motorControl@F6658 0001  
                __end_of_DRV_CANFDSPI_TransmitChannelLoad 074C  
                        _DRV_CANFDSPI_TransmitChannelLoad 0000  
                                    __end_of_CanSetFilter 4460  
              __end_of_DRV_CANFDSPI_TransmitChannelUpdate 3F5E  
                      _DRV_CANFDSPI_TransmitChannelUpdate 3EB0  
                            motorControl_Process@oldState 001B  
                                                _carState 0060  
                       __end_of_DRV_CANFDSPI_TefConfigure 3C98  
                                                __ptext10 492A  
                                                __ptext11 4460  
                                                __ptext20 361C  
                                                __ptext12 074C  
                                                __ptext21 3702  
                                                __ptext13 4382  
                                                __ptext30 40AC  
                                                __ptext22 3E02  
                                                __ptext14 263A  
                                                __ptext31 3986  
                                                __ptext23 3D4E  
                                                __ptext15 4008  
                                                __ptext40 499A  
                                                __ptext32 2C1C  
                                                __ptext24 3F5E  
                                                __ptext16 2AC8  
                                                __ptext41 49AE  
                                                __ptext33 4944  
                                                __ptext25 0000  
                                                __ptext17 4698  
                                                __ptext50 2FE8  
                                                __ptext42 43F6  
                                                __ptext34 495C  
                                                __ptext26 3122  
                                                __ptext18 426C  
                                                __ptext51 27C6  
                                                __ptext43 4144  
                                                __ptext35 4974  
                                                __ptext27 3EB0  
                                                __ptext19 2492  
                                                __ptext60 4642  
                                                __ptext52 489E  
                                                __ptext44 0E34  
                                                __ptext36 476C  
                                                __ptext28 14B2  
                                                __ptext61 4528  
                                                __ptext53 490E  
                                                __ptext45 117E  
                                                __ptext37 48EC  
                                                __ptext29 22B4  
                                                __ptext70 4814  
                                                __ptext62 44C4  
                                                __ptext54 458A  
                                                __ptext46 41DA  
                                                __ptext38 498A  
                                                __ptext71 47DE  
                                                __ptext63 3A52  
                                                __ptext55 3BE0  
                                                __ptext47 20A6  
                                                __ptext39 4844  
                                                __ptext72 49B2  
                                                __ptext64 19BA  
                                                __ptext56 4872  
                                                __ptext48 3444  
                                                __ptext73 3346  
                                                __ptext65 173A  
                                                __ptext57 3C98  
                                                __ptext49 2EA8  
                                                __ptext74 45EA  
                                                __ptext66 1C18  
                                                __ptext58 2D66  
                                                __ptext67 37E2  
                                                __ptext59 42FC  
                                                __ptext68 3B1C  
                                           _ENTERCRITICAL 495C  
                                            _SSP2CON1bits 0F63  
                      __end_of_XF_decrementAndQueueTimers 3444  
                              _XF_decrementAndQueueTimers 3346  
                    __end_of_TMR0_DefaultInterruptHandler 49B4  
                            _TMR0_DefaultInterruptHandler 49B2  
                                      _canFifoResetValues FFDD  
                __end_of_DRV_CANFDSPI_FilterMaskConfigure 14B2  
                        _DRV_CANFDSPI_FilterMaskConfigure 117E  
                                                isa$xinst 0000  
                                      _XF_unscheduleTimer 45EA  
                      __end_of_INTERRUPT_InterruptManager 00AE  
                              _INTERRUPT_InterruptManager 0008  
                                  _DRV_CANFDSPI_WriteByte 4642  
                            __end_of_motorControl_Process 3702  
                                  _DRV_CANFDSPI_WriteWord 37E2  
                                            _motorControl 3702  
                                            _SSP2STATbits 0F64  
                      __end_of_DRV_CANFDSPI_FilterDisable 426C  
                              _DRV_CANFDSPI_FilterDisable 41DA  
                                              _INTCONbits 0FF2  
                                   _DRV_CANFDSPI_ReadByte 4528  
                    __end_of_DRV_CANFDSPI_TimeStampEnable 45EA  
                            _DRV_CANFDSPI_TimeStampEnable 458A  
                                                intlevel2 0000  
               __end_of_DRV_CANFDSPI_ReceiveChannelUpdate 43F6  
                       _DRV_CANFDSPI_ReceiveChannelUpdate 4382  
               __end_of_DRV_CANFDSPI_ConfigureObjectReset 1C18  
                       _DRV_CANFDSPI_ConfigureObjectReset 19BA  
                                          _updateCarState 1E64  
                                         _TMR0_Initialize 476C  
                              lightContol_BackLight@F6670 007B  
                          __end_of_PIN_MANAGER_Initialize 4872  
